FileAST: 
  FuncDef: 
    Decl: main, [], [], [], []
      FuncDecl: 
        ParamList: 
          Decl: argc, [], [], [], []
            TypeDecl: argc, [], None
              IdentifierType: ['int']
          Decl: argv, ['const'], [], [], []
            PtrDecl: []
              PtrDecl: []
                TypeDecl: argv, ['const'], None
                  IdentifierType: ['char']
          Decl: envp, ['const'], [], [], []
            PtrDecl: []
              PtrDecl: []
                TypeDecl: envp, ['const'], None
                  IdentifierType: ['char']
        TypeDecl: main, [], None
          IdentifierType: ['int']
    Compound: 
      Decl: v4, [], [], [], []
        TypeDecl: v4, [], None
          IdentifierType: ['unsigned', 'int']
      Decl: v5, [], [], [], []
        TypeDecl: v5, [], None
          IdentifierType: ['unsigned', 'long', 'long']
      Assignment: =
        ID: v5
        FuncCall: 
          ID: __readfsqword
          ExprList: 
            Constant: unsigned int, 0x28u
      FuncCall: 
        ID: __isoc99_scanf
        ExprList: 
          UnaryOp: &
            ID: unk_2004
          UnaryOp: &
            ID: v4
          ID: envp
      If: 
        BinaryOp: ==
          BinaryOp: &
            ID: v4
            Constant: int, 0x80000000
          Constant: int, 0
        Compound: 
          If: 
            ID: v4
            FuncCall: 
              ID: printf
              ExprList: 
                Constant: string, "%d\n"
                ID: v4
            FuncCall: 
              ID: printf
              ExprList: 
                Constant: string, "%d\n"
                Constant: long long int, 0LL
        Compound: 
          FuncCall: 
            ID: printf
            ExprList: 
              Constant: string, "%d\n"
              UnaryOp: -
                ID: v4
      Return: 
        Constant: int, 0
