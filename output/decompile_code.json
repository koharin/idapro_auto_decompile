int __cdecl main(int argc, const char **argv, const char **envp)
{
  __int64 v3; // rbx
  __int64 v4; // rbp
  char *v5; // rax
  signed __int64 v6; // rbx
  __int64 v7; // rdx
  __int64 v8; // rcx
  __int64 v9; // r8
  __int64 v10; // r9
  int result; // eax
  __int64 v12; // [rsp+0h] [rbp-F8h]
  __int64 v13; // [rsp+8h] [rbp-F0h]
  __int64 v14; // [rsp+10h] [rbp-E8h]
  __int64 v15; // [rsp+18h] [rbp-E0h]
  __int64 v16; // [rsp+20h] [rbp-D8h]
  int v17; // [rsp+28h] [rbp-D0h]
  int v18; // [rsp+30h] [rbp-C8h]
  int v19; // [rsp+34h] [rbp-C4h]
  int v20; // [rsp+38h] [rbp-C0h]
  int v21; // [rsp+3Ch] [rbp-BCh]
  int v22; // [rsp+40h] [rbp-B8h]
  int v23; // [rsp+44h] [rbp-B4h]
  int v24; // [rsp+48h] [rbp-B0h]
  int v25; // [rsp+4Ch] [rbp-ACh]
  int v26; // [rsp+50h] [rbp-A8h]
  int v27; // [rsp+54h] [rbp-A4h]
  int v28; // [rsp+58h] [rbp-A0h]
  int v29; // [rsp+5Ch] [rbp-9Ch]
  int v30; // [rsp+60h] [rbp-98h]
  int v31; // [rsp+64h] [rbp-94h]
  int v32; // [rsp+68h] [rbp-90h]
  int v33; // [rsp+6Ch] [rbp-8Ch]
  int v34; // [rsp+70h] [rbp-88h]
  int v35; // [rsp+74h] [rbp-84h]
  int v36; // [rsp+78h] [rbp-80h]
  int v37; // [rsp+7Ch] [rbp-7Ch]
  int v38; // [rsp+80h] [rbp-78h]
  int v39; // [rsp+84h] [rbp-74h]
  int v40; // [rsp+88h] [rbp-70h]
  int v41; // [rsp+8Ch] [rbp-6Ch]
  int v42; // [rsp+90h] [rbp-68h]
  int v43; // [rsp+94h] [rbp-64h]
  int v44; // [rsp+98h] [rbp-60h]
  int v45; // [rsp+9Ch] [rbp-5Ch]
  int v46; // [rsp+A0h] [rbp-58h]
  int v47; // [rsp+A4h] [rbp-54h]
  int v48; // [rsp+A8h] [rbp-50h]
  int v49; // [rsp+ACh] [rbp-4Ch]
  int v50; // [rsp+B0h] [rbp-48h]
  int v51; // [rsp+B4h] [rbp-44h]
  int v52; // [rsp+B8h] [rbp-40h]
  int v53; // [rsp+BCh] [rbp-3Ch]
  int v54; // [rsp+C0h] [rbp-38h]
  int v55; // [rsp+C4h] [rbp-34h]
  int v56; // [rsp+C8h] [rbp-30h]
  int v57; // [rsp+CCh] [rbp-2Ch]
  char v58; // [rsp+D0h] [rbp-28h]
  unsigned __int64 v59; // [rsp+D8h] [rbp-20h]
  __int64 v60; // [rsp+E8h] [rbp-10h]
  __int64 v61; // [rsp+F0h] [rbp-8h]

  __asm { endbr64 }
  v61 = v4;
  v60 = v3;
  v59 = __readfsqword(0x28u);
  v12 = 0LL;
  v13 = 0LL;
  v14 = 0LL;
  v15 = 0LL;
  v16 = 0LL;
  v17 = 0;
  v18 = 1;
  v19 = 2;
  v20 = 6;
  v21 = 4;
  v22 = 8;
  v23 = 5;
  v24 = 9;
  v25 = 7;
  v26 = 8;
  v27 = 10;
  v28 = 1;
  v29 = 6;
  v30 = 3;
  v31 = 8;
  v32 = 6;
  v33 = 10;
  v34 = 3;
  v35 = 8;
  v36 = 2;
  v37 = 7;
  v38 = 6;
  v39 = 5;
  v40 = 7;
  v41 = 6;
  v42 = 8;
  v43 = 6;
  v44 = 7;
  v45 = 5;
  v46 = 6;
  v47 = 6;
  v48 = 5;
  v49 = 6;
  v50 = 7;
  v51 = 5;
  v52 = 6;
  v53 = 4;
  v54 = 8;
  v55 = 6;
  v56 = 8;
  v57 = 10;
  v5 = (char *)&v18;
  do
  {
    ++*((_DWORD *)&v12 + *(signed int *)v5);
    v5 += 4;
  }
  while ( v5 != &v58 );
  sub_1070(1LL, "%s%17s\n", "Rating", "Frequency");
  v6 = 1LL;
  do
  {
    sub_1070(1LL, "%6lu%17d\n", v6, *((unsigned int *)&v12 + v6));
    ++v6;
  }
  while ( v6 != 11 );
  if ( __readfsqword(0x28u) == v59 )
    return 0;
  sub_1060(
    1LL,
    "%6lu%17d\n",
    v7,
    v8,
    v9,
    v10,
    v12,
    v13,
    v14,
    v15,
    v16,
    *(_QWORD *)&v17,
    *(_QWORD *)&v18,
    *(_QWORD *)&v20,
    *(_QWORD *)&v22,
    *(_QWORD *)&v24,
    *(_QWORD *)&v26,
    *(_QWORD *)&v28,
    *(_QWORD *)&v30,
    *(_QWORD *)&v32,
    *(_QWORD *)&v34,
    *(_QWORD *)&v36,
    *(_QWORD *)&v38,
    *(_QWORD *)&v40,
    *(_QWORD *)&v42,
    *(_QWORD *)&v44);
  _libc_csu_init();
  return result;
}
