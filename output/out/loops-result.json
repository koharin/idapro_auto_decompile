{
    "binaryInfo": {
        "binaryName": "loops",
        "isStripped": "True"
    },
    "funcInfo": [
        {
            "funcName": "start",
            "funcStartAddr": "0x1060",
            "funcEndAddr": "0x1086",
            "decompiledFuncCode": "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n  __int64 v3; // rax\n  int v4; // esi\n  __int64 v5; // [rsp-8h] [rbp-8h] BYREF\n  char *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\n  v4 = v5;\n  v5 = v3;\n  _libc_start_main(main, v4, &retaddr, 0LL, 0LL, a3, &v5);\n  __halt();\n}\n"
        },
        {
            "funcName": "sub_1090",
            "funcStartAddr": "0x1090",
            "funcEndAddr": "0x10b9",
            "decompiledFuncCode": "char *sub_1090()\n{\n  return &byte_4010;\n}\n"
        },
        {
            "funcName": "sub_10C0",
            "funcStartAddr": "0x10c0",
            "funcEndAddr": "0x10f9",
            "decompiledFuncCode": "__int64 sub_10C0()\n{\n  return 0LL;\n}\n"
        },
        {
            "funcName": "sub_1100",
            "funcStartAddr": "0x1100",
            "funcEndAddr": "0x1139",
            "decompiledFuncCode": "char *sub_1100()\n{\n  char *result; // rax\n\n  if ( !byte_4010 )\n  {\n    if ( &__cxa_finalize )\n      _cxa_finalize(off_4008);\n    result = sub_1090();\n    byte_4010 = 1;\n  }\n  return result;\n}\n"
        },
        {
            "funcName": "sub_1140",
            "funcStartAddr": "0x1140",
            "funcEndAddr": "0x1149",
            "decompiledFuncCode": "// attributes: thunk\n__int64 sub_1140()\n{\n  return sub_10C0();\n}\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x1149",
            "funcEndAddr": "0x11d4",
            "decompiledFuncCode": "__int64 __fastcall main(int a1, char **a2, char **a3)\n{\n  int i; // [rsp+4h] [rbp-Ch]\n  unsigned int v5; // [rsp+4h] [rbp-Ch]\n  int v6; // [rsp+8h] [rbp-8h]\n  int v7; // [rsp+Ch] [rbp-4h]\n\n  for ( i = 0; i <= 9; i = v5 + 1 )\n  {\n    v5 = i + 1;\n    printf(\"Counting for.. %d\\n\", v5);\n  }\n  while ( v6 <= 9 )\n    printf(\"Counting while.. %d\\n\", (unsigned int)++v6);\n  do\n    printf(\"Counting while.. %d\\n\", (unsigned int)++v7);\n  while ( v7 <= 9 );\n  return 0LL;\n}\n"
        }
    ],
    "buildInfo": {
        "decompilerName": "IDA Pro",
        "compilerName": "gcc",
        "Optlevel": "-O"
    }
}