{
    "decompileResult": [
        {
            "decompiledFuncCode": "void *sub_400EF0()\n{\n  void *result; // rax\n\n  result = &unk_4225E8;\n  if ( &unk_4225E8 != &unk_4225E8 )\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x400ef0L", 
            "funcEndAddr": "0x400f11L", 
            "funcName": "sub_400EF0"
        }, 
        {
            "decompiledFuncCode": "void *sub_400F60()\n{\n  void *result; // rax\n\n  if ( !byte_422600 )\n  {\n    result = sub_400EF0();\n    byte_422600 = 1;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x400f60L", 
            "funcEndAddr": "0x400f81L", 
            "funcName": "sub_400F60"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_400F90()\n{\n  return 0LL;\n}\n\n__int64 sub_400F90()\n{\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x400f20L", 
            "funcEndAddr": "0x400f51L", 
            "funcName": "sub_400F90"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_400F90()\n{\n  return 0LL;\n}\n\n__int64 sub_400F90()\n{\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x400f20L", 
            "funcEndAddr": "0x400f51L", 
            "funcName": "sub_400F90"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_400FA0(int a1, char a2)\n{\n  __int64 v2; // rcx\n  signed __int64 v3; // rdi\n  int v4; // edx\n  signed int v5; // eax\n  int *kk; // rax\n  int *i; // rax\n  int v9; // edx\n  int *ll; // rsi\n  int v11; // edx\n  int *mm; // rsi\n  int v13; // edx\n  int *nn; // rsi\n  int v15; // edx\n  int *i1; // rsi\n  int v17; // edx\n  int *i2; // rsi\n  int v19; // edx\n  int *i3; // rsi\n  int v21; // edx\n  int *i4; // rsi\n  signed int v23; // edx\n  int v24; // edx\n  int *j; // rsi\n  int v26; // edx\n  int *k; // rsi\n  int v28; // edx\n  int *l; // rsi\n  int v30; // edx\n  int *m; // rsi\n  int v32; // edx\n  int *n; // rsi\n  int v34; // edx\n  int *ii; // rsi\n  int v36; // edx\n  int *jj; // rsi\n\n  v2 = a1;\n  if ( !dword_696070[a1] )\n    return 0LL;\n  v3 = a1 + 12LL;\n  v4 = dword_6960A0[v2];\n  v5 = 0;\n  if ( a2 & 1 )\n  {\n    if ( v4 == 5 )\n      goto LABEL_111;\n    for ( i = &dword_6960A0[v3]; v4 == 13; i += 12 )\n      v4 = *i;\n    v5 = v4 != 7 && v4 != 9 ? 0 : 1;\n    v24 = dword_696040[v2];\n    if ( v24 == 5 )\n      goto LABEL_111;\n    for ( j = &dword_696040[v2 - 12]; v24 == 13; j -= 12 )\n      v24 = *j;\n    if ( v24 == 9 || v24 == 7 )\n      ++v5;\n    v26 = dword_696074[v2];\n    if ( v26 == 5 )\n      goto LABEL_111;\n    for ( k = &dword_696074[v2 + 1]; v26 == 13; ++k )\n      v26 = *k;\n    if ( v26 == 9 || v26 == 7 )\n      ++v5;\n    v28 = dword_69606C[v2];\n    if ( v28 == 5 )\n      goto LABEL_111;\n    for ( l = &dword_69606C[v2 - 1]; v28 == 13; --l )\n      v28 = *l;\n    if ( v28 == 9 || v28 == 7 )\nLABEL_111:\n      ++v5;\n    v30 = dword_69609C[v2];\n    if ( v30 == 5 )\n      goto LABEL_112;\n    for ( m = &dword_69609C[v2 + 11]; v30 == 13; m += 11 )\n      v30 = *m;\n    if ( v30 == 11 || v30 == 9 )\n      ++v5;\n    v32 = dword_696044[v2];\n    if ( v32 == 1 || v32 == 5 )\n      goto LABEL_112;\n    for ( n = &dword_696044[v2 - 11]; v32 == 13; n -= 11 )\n      v32 = *n;\n    if ( v32 == 11 || v32 == 9 )\n      ++v5;\n    v34 = dword_6960A4[v2];\n    if ( v34 == 5 )\n      goto LABEL_112;\n    for ( ii = &dword_6960A4[v2 + 13]; v34 == 13; ii += 13 )\n      v34 = *ii;\n    if ( v34 == 11 || v34 == 9 )\n      ++v5;\n    v36 = dword_69603C[v2];\n    if ( v36 == 1 || v36 == 5 )\n      goto LABEL_112;\n    for ( jj = &dword_69603C[v2 - 13]; v36 == 13; jj -= 13 )\n      v36 = *jj;\n    if ( v36 == 11 || v36 == 9 )\nLABEL_112:\n      ++v5;\n    v23 = 3;\n  }\n  else\n  {\n    if ( v4 == 6 )\n      goto LABEL_113;\n    for ( kk = &dword_6960A0[v3]; v4 == 13; kk += 12 )\n      v4 = *kk;\n    v5 = v4 != 8 && v4 != 10 ? 0 : 1;\n    v9 = dword_696040[v2];\n    if ( v9 == 6 )\n      goto LABEL_113;\n    for ( ll = &dword_696040[v2 - 12]; v9 == 13; ll -= 12 )\n      v9 = *ll;\n    if ( v9 == 10 || v9 == 8 )\n      ++v5;\n    v11 = dword_696074[v2];\n    if ( v11 == 6 )\n      goto LABEL_113;\n    for ( mm = &dword_696074[v2 + 1]; v11 == 13; ++mm )\n      v11 = *mm;\n    if ( v11 == 10 || v11 == 8 )\n      ++v5;\n    v13 = dword_69606C[v2];\n    if ( v13 == 6 )\n      goto LABEL_113;\n    for ( nn = &dword_69606C[v2 - 1]; v13 == 13; --nn )\n      v13 = *nn;\n    if ( v13 == 10 || v13 == 8 )\nLABEL_113:\n      ++v5;\n    v15 = dword_69609C[v2];\n    if ( v15 == 2 || v15 == 6 )\n      goto LABEL_114;\n    for ( i1 = &dword_69609C[v2 + 11]; v15 == 13; i1 += 11 )\n      v15 = *i1;\n    if ( v15 == 12 || v15 == 10 )\n      ++v5;\n    v17 = dword_696044[v2];\n    if ( v17 == 6 )\n      goto LABEL_114;\n    for ( i2 = &dword_696044[v2 - 11]; v17 == 13; i2 -= 11 )\n      v17 = *i2;\n    if ( v17 == 12 || v17 == 10 )\n      ++v5;\n    v19 = dword_6960A4[v2];\n    if ( v19 == 2 || v19 == 6 )\n      goto LABEL_114;\n    for ( i3 = &dword_6960A4[v2 + 13]; v19 == 13; i3 += 13 )\n      v19 = *i3;\n    if ( v19 == 12 || v19 == 10 )\n      ++v5;\n    v21 = dword_69603C[v2];\n    if ( v21 == 6 )\n      goto LABEL_114;\n    for ( i4 = &dword_69603C[v2 - 13]; v21 == 13; i4 -= 13 )\n      v21 = *i4;\n    if ( v21 == 12 || v21 == 10 )\nLABEL_114:\n      ++v5;\n    v23 = 4;\n  }\n  return v5\n       + (dword_696098[v2] == v23)\n       + (dword_696048[v2] == v23)\n       + (dword_6960A8[v2] == v23)\n       + (dword_696038[v2] == v23)\n       + (dword_6960CC[v2] == v23)\n       + (dword_696014[v2] == v23)\n       + (dword_6960D4[v2] == v23)\n       + (unsigned int)(dword_69600C[v2] == v23);\n}\n", 
            "funcStartAddr": "0x400fa0L", 
            "funcEndAddr": "0x401472L", 
            "funcName": "sub_400FA0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_401480(int a1, char a2)\n{\n  __int64 v2; // rcx\n  signed __int64 v3; // rdi\n  int v4; // edx\n  signed __int64 result; // rax\n  int *i; // rsi\n  int v7; // edx\n  int *j; // rsi\n  int v9; // edx\n  int *k; // rsi\n  int v11; // edx\n  int *l; // rsi\n  int v13; // edx\n  int *v14; // rsi\n  int v15; // edx\n  int *v16; // rsi\n  int v17; // edx\n  int *v18; // rsi\n  int v19; // edx\n  int *v20; // rcx\n  int *v21; // rsi\n  int v22; // edx\n  int *v23; // rsi\n  int v24; // edx\n  int *v25; // rsi\n  int v26; // edx\n  int *v27; // rsi\n  int v28; // edx\n  int *m; // rsi\n  int v30; // edx\n  int *n; // rsi\n  int v32; // edx\n  int *ii; // rsi\n  int v34; // edx\n  int *jj; // rcx\n\n  v2 = a1;\n  v3 = a1 + 11LL;\n  v4 = dword_69609C[v2];\n  if ( !(a2 & 1) )\n  {\n    result = 1LL;\n    if ( (v4 | 4) == 6 )\n      return result;\n    for ( i = &dword_69609C[v3]; v4 == 13; i += 11 )\n      v4 = *i;\n    if ( v4 == 10 )\n      return result;\n    if ( v4 == 12 )\n      return result;\n    v7 = dword_696044[v2];\n    if ( v7 == 6 )\n      return result;\n    for ( j = &dword_696044[v2 - 11]; v7 == 13; j -= 11 )\n      v7 = *j;\n    if ( v7 == 10 )\n      return result;\n    if ( v7 == 12 )\n      return result;\n    v9 = dword_6960A4[v2];\n    if ( (dword_6960A4[v2] | 4) == 6 )\n      return result;\n    for ( k = &dword_6960A4[v2 + 13]; v9 == 13; k += 13 )\n      v9 = *k;\n    if ( v9 == 10 )\n      return result;\n    if ( v9 == 12 )\n      return result;\n    v11 = dword_69603C[v2];\n    if ( v11 == 6 )\n      return result;\n    for ( l = &dword_69603C[v2 - 13]; v11 == 13; l -= 13 )\n      v11 = *l;\n    if ( v11 == 10\n      || v11 == 12\n      || dword_696098[v2] == 4\n      || dword_696048[v2] == 4\n      || dword_6960A8[v2] == 4\n      || dword_696038[v2] == 4\n      || dword_6960CC[v2] == 4\n      || dword_696014[v2] == 4\n      || dword_6960D4[v2] == 4\n      || dword_69600C[v2] == 4 )\n    {\n      return result;\n    }\n    v13 = dword_6960A0[v2];\n    if ( v13 )\n    {\n      if ( v13 != 6 )\n      {\n        v14 = &dword_6960A0[v2 + 12];\n        while ( (v13 | 2) != 10 )\n        {\n          if ( v13 == 13 )\n          {\n            v13 = *v14;\n            v14 += 12;\n            if ( v13 )\n              continue;\n          }\n          goto LABEL_36;\n        }\n      }\n      return result;\n    }\nLABEL_36:\n    v15 = dword_696040[v2];\n    if ( v15 )\n    {\n      if ( v15 != 6 )\n      {\n        v16 = &dword_696040[v2 - 12];\n        while ( (v15 | 2) != 10 )\n        {\n          if ( v15 == 13 )\n          {\n            v15 = *v16;\n            v16 -= 12;\n            if ( v15 )\n              continue;\n          }\n          goto LABEL_42;\n        }\n      }\n      return result;\n    }\nLABEL_42:\n    v17 = dword_696074[v2];\n    if ( v17 )\n    {\n      if ( v17 != 6 )\n      {\n        v18 = &dword_696074[v2 + 1];\n        while ( (v17 | 2) != 10 )\n        {\n          if ( v17 == 13 )\n          {\n            v17 = *v18;\n            ++v18;\n            if ( v17 )\n              continue;\n          }\n          goto LABEL_48;\n        }\n      }\n      return result;\n    }\nLABEL_48:\n    v19 = dword_69606C[v2];\n    if ( v19 )\n    {\n      if ( v19 != 6 )\n      {\n        v20 = &dword_69606C[v2 - 1];\n        while ( (v19 | 2) != 10 )\n        {\n          if ( v19 == 13 )\n          {\n            v19 = *v20;\n            --v20;\n            if ( v19 )\n              continue;\n          }\n          return 0LL;\n        }\n      }\n      return result;\n    }\n    return 0LL;\n  }\n  result = 1LL;\n  if ( v4 )\n  {\n    if ( v4 != 5 )\n    {\n      v21 = &dword_69609C[v3];\n      while ( (v4 | 2) != 11 )\n      {\n        if ( v4 == 13 )\n        {\n          v4 = *v21;\n          v21 += 11;\n          if ( v4 )\n            continue;\n        }\n        goto LABEL_61;\n      }\n    }\n  }\n  else\n  {\nLABEL_61:\n    v22 = dword_696044[v2];\n    if ( (dword_696044[v2] | 4) == 5 )\n      return result;\n    if ( v22 )\n    {\n      v23 = &dword_696044[v2 - 11];\n      while ( (v22 | 2) != 11 )\n      {\n        if ( v22 == 13 )\n        {\n          v22 = *v23;\n          v23 -= 11;\n          if ( v22 )\n            continue;\n        }\n        goto LABEL_67;\n      }\n    }\n    else\n    {\nLABEL_67:\n      v24 = dword_6960A4[v2];\n      if ( v24 )\n      {\n        if ( v24 != 5 )\n        {\n          v25 = &dword_6960A4[v2 + 13];\n          while ( (v24 | 2) != 11 )\n          {\n            if ( v24 == 13 )\n            {\n              v24 = *v25;\n              v25 += 13;\n              if ( v24 )\n                continue;\n            }\n            goto LABEL_73;\n          }\n        }\n      }\n      else\n      {\nLABEL_73:\n        v26 = dword_69603C[v2];\n        if ( (dword_69603C[v2] | 4) == 5 )\n          return result;\n        if ( !v26 )\n        {\nLABEL_79:\n          if ( dword_696098[v2] == 3 )\n            return result;\n          if ( dword_696048[v2] == 3 )\n            return result;\n          if ( dword_6960A8[v2] == 3 )\n            return result;\n          if ( dword_696038[v2] == 3 )\n            return result;\n          if ( dword_6960CC[v2] == 3 )\n            return result;\n          if ( dword_696014[v2] == 3 )\n            return result;\n          if ( dword_6960D4[v2] == 3 )\n            return result;\n          if ( dword_69600C[v2] == 3 )\n            return result;\n          v28 = dword_6960A0[v2];\n          if ( v28 == 5 )\n            return result;\n          for ( m = &dword_6960A0[v2 + 12]; v28 == 13; m += 12 )\n            v28 = *m;\n          if ( v28 == 7 )\n            return result;\n          if ( v28 == 9 )\n            return result;\n          v30 = dword_696040[v2];\n          if ( v30 == 5 )\n            return result;\n          for ( n = &dword_696040[v2 - 12]; v30 == 13; n -= 12 )\n            v30 = *n;\n          if ( v30 == 7 )\n            return result;\n          if ( v30 == 9 )\n            return result;\n          v32 = dword_696074[v2];\n          if ( v32 == 5 )\n            return result;\n          for ( ii = &dword_696074[v2 + 1]; v32 == 13; ++ii )\n            v32 = *ii;\n          if ( v32 == 7 )\n            return result;\n          if ( v32 == 9 )\n            return result;\n          v34 = dword_69606C[v2];\n          if ( v34 == 5 )\n            return result;\n          for ( jj = &dword_69606C[v2 - 1]; v34 == 13; --jj )\n            v34 = *jj;\n          if ( v34 == 7 || v34 == 9 )\n            return result;\n          return 0LL;\n        }\n        v27 = &dword_69603C[v2 - 13];\n        while ( (v26 | 2) != 11 )\n        {\n          if ( v26 == 13 )\n          {\n            v26 = *v27;\n            v27 -= 13;\n            if ( v26 )\n              continue;\n          }\n          goto LABEL_79;\n        }\n      }\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x401480L", 
            "funcEndAddr": "0x401988L", 
            "funcName": "sub_401480"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_401990(int a1, char a2)\n{\n  __int64 v2; // rcx\n  signed __int64 v3; // rdi\n  int v4; // edx\n  signed __int64 result; // rax\n  int *i; // rsi\n  int *j; // rdx\n  int v8; // esi\n  int v9; // edx\n  int *k; // rsi\n  int *l; // rdx\n  int *v12; // rax\n  int *v13; // rdx\n  int v14; // eax\n  int *v15; // rdx\n  int *v16; // rdx\n  int *m; // rdx\n  int v18; // esi\n  int v19; // edx\n  int *v20; // rsi\n  int v21; // edx\n  int *v22; // rsi\n  int v23; // edx\n  int *v24; // rsi\n  int v25; // edx\n  int *v26; // rcx\n  int v27; // esi\n  int *n; // rdx\n  int v29; // esi\n  int *ii; // rdx\n  int v31; // esi\n  int *jj; // rcx\n  int v33; // edx\n\n  v2 = a1;\n  v3 = a1 + 11LL;\n  v4 = dword_69609C[v2];\n  if ( !(a2 & 1) )\n  {\n    result = 1LL;\n    if ( v4 == 2 )\n      return result;\n    for ( i = &dword_69609C[v3]; v4 == 13; i += 11 )\n      v4 = *i;\n    if ( v4 == 10 )\n      return result;\n    if ( v4 == 12 )\n      return result;\n    for ( j = &dword_696044[v2]; ; j -= 11 )\n    {\n      v8 = *j;\n      if ( *j != 13 )\n        break;\n    }\n    if ( v8 == 10 )\n      return result;\n    if ( v8 == 12 )\n      return result;\n    v9 = dword_6960A4[v2];\n    if ( v9 == 2 )\n      return result;\n    for ( k = &dword_6960A4[v2 + 13]; v9 == 13; k += 13 )\n      v9 = *k;\n    if ( v9 == 10 )\n      return result;\n    if ( v9 == 12 )\n      return result;\n    for ( l = &dword_69603C[v2]; ; l -= 13 )\n    {\n      v18 = *l;\n      if ( *l != 13 )\n        break;\n    }\n    if ( v18 == 10\n      || v18 == 12\n      || dword_696098[v2] == 4\n      || dword_696048[v2] == 4\n      || dword_6960A8[v2] == 4\n      || dword_696038[v2] == 4\n      || dword_6960CC[v2] == 4\n      || dword_696014[v2] == 4\n      || dword_6960D4[v2] == 4\n      || dword_69600C[v2] == 4 )\n    {\n      return result;\n    }\n    v19 = dword_6960A0[v2];\n    if ( v19 )\n    {\n      v20 = &dword_6960A0[v2 + 12];\n      while ( (v19 | 2) != 10 )\n      {\n        if ( v19 == 13 )\n        {\n          v19 = *v20;\n          v20 += 12;\n          if ( v19 )\n            continue;\n        }\n        goto LABEL_66;\n      }\n      return result;\n    }\nLABEL_66:\n    v21 = dword_696040[v2];\n    if ( v21 )\n    {\n      v22 = &dword_696040[v2 - 12];\n      while ( (v21 | 2) != 10 )\n      {\n        if ( v21 == 13 )\n        {\n          v21 = *v22;\n          v22 -= 12;\n          if ( v21 )\n            continue;\n        }\n        goto LABEL_71;\n      }\n      return result;\n    }\nLABEL_71:\n    v23 = dword_696074[v2];\n    if ( v23 )\n    {\n      v24 = &dword_696074[v2 + 1];\n      while ( (v23 | 2) != 10 )\n      {\n        if ( v23 == 13 )\n        {\n          v23 = *v24;\n          ++v24;\n          if ( v23 )\n            continue;\n        }\n        goto LABEL_76;\n      }\n      return result;\n    }\nLABEL_76:\n    v25 = dword_69606C[v2];\n    if ( v25 )\n    {\n      v26 = &dword_69606C[v2 - 1];\n      while ( (v25 | 2) != 10 )\n      {\n        if ( v25 == 13 )\n        {\n          v25 = *v26;\n          --v26;\n          if ( v25 )\n            continue;\n        }\n        return 0LL;\n      }\n      return result;\n    }\n    return 0LL;\n  }\n  if ( v4 )\n  {\n    v12 = &dword_69609C[v3];\n    while ( (v4 | 2) != 11 )\n    {\n      if ( v4 == 13 )\n      {\n        v4 = *v12;\n        v12 += 11;\n        if ( v4 )\n          continue;\n      }\n      goto LABEL_23;\n    }\n    result = 1LL;\n  }\n  else\n  {\nLABEL_23:\n    result = (unsigned int)dword_696044[v2];\n    if ( (_DWORD)result )\n    {\n      if ( (_DWORD)result != 1 )\n      {\n        v13 = &dword_696044[v2 - 11];\n        while ( ((unsigned int)result | 2) != 11 )\n        {\n          if ( (_DWORD)result == 13 )\n          {\n            LODWORD(result) = *v13;\n            v13 -= 11;\n            if ( (_DWORD)result )\n              continue;\n          }\n          goto LABEL_29;\n        }\n        result = 1LL;\n      }\n    }\n    else\n    {\nLABEL_29:\n      v14 = dword_6960A4[v2];\n      if ( v14 )\n      {\n        v15 = &dword_6960A4[v2 + 13];\n        while ( (v14 | 2) != 11 )\n        {\n          if ( v14 == 13 )\n          {\n            v14 = *v15;\n            v15 += 13;\n            if ( v14 )\n              continue;\n          }\n          goto LABEL_34;\n        }\n        result = 1LL;\n      }\n      else\n      {\nLABEL_34:\n        result = (unsigned int)dword_69603C[v2];\n        if ( !(_DWORD)result )\n        {\nLABEL_40:\n          result = 1LL;\n          if ( dword_696098[v2] == 3 )\n            return result;\n          if ( dword_696048[v2] == 3 )\n            return result;\n          if ( dword_6960A8[v2] == 3 )\n            return result;\n          if ( dword_696038[v2] == 3 )\n            return result;\n          if ( dword_6960CC[v2] == 3 )\n            return result;\n          if ( dword_696014[v2] == 3 )\n            return result;\n          if ( dword_6960D4[v2] == 3 )\n            return result;\n          if ( dword_69600C[v2] == 3 )\n            return result;\n          for ( m = &dword_6960A0[v2]; ; m += 12 )\n          {\n            v27 = *m;\n            if ( *m != 13 )\n              break;\n          }\n          if ( v27 == 7 )\n            return result;\n          if ( v27 == 9 )\n            return result;\n          for ( n = &dword_696040[v2]; ; n -= 12 )\n          {\n            v29 = *n;\n            if ( *n != 13 )\n              break;\n          }\n          if ( v29 == 7 )\n            return result;\n          if ( v29 == 9 )\n            return result;\n          for ( ii = &dword_696074[v2]; ; ++ii )\n          {\n            v31 = *ii;\n            if ( *ii != 13 )\n              break;\n          }\n          if ( v31 == 7 )\n            return result;\n          if ( v31 == 9 )\n            return result;\n          for ( jj = &dword_69606C[v2]; ; --jj )\n          {\n            v33 = *jj;\n            if ( *jj != 13 )\n              break;\n          }\n          if ( v33 == 7 || v33 == 9 )\n            return result;\n          return 0LL;\n        }\n        if ( (_DWORD)result != 1 )\n        {\n          v16 = &dword_69603C[v2 - 13];\n          while ( ((unsigned int)result | 2) != 11 )\n          {\n            if ( (_DWORD)result == 13 )\n            {\n              LODWORD(result) = *v16;\n              v16 -= 13;\n              if ( (_DWORD)result )\n                continue;\n            }\n            goto LABEL_40;\n          }\n          result = 1LL;\n        }\n      }\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x401990L", 
            "funcEndAddr": "0x401dd6L", 
            "funcName": "sub_401990"
        }, 
        {
            "decompiledFuncCode": "char *__fastcall sub_401E10(char *src)\n{\n  char *result; // rax\n  char v2; // cl\n  char v3; // dl\n  char *v4; // rcx\n  int v5; // edx\n  signed __int64 v6; // rsi\n  __int64 v7; // rcx\n  char *v8; // rcx\n  char v9; // dl\n  char v10; // cl\n  int v11; // ecx\n  signed __int64 v12; // rdx\n\n  xmmword_697250 = 0LL;\n  xmmword_697240 = 0LL;\n  xmmword_697230 = 0LL;\n  xmmword_697220 = 0LL;\n  xmmword_697210 = 0LL;\n  xmmword_697200 = 0LL;\n  xmmword_6971F0 = 0LL;\n  xmmword_6971E0 = 0LL;\n  dword_697408 = -1056969216;\n  dword_6974E8 = 0;\n  dword_697378 = 0;\n  sub_4026C0();\n  qword_697308 = 0LL;\n  result = (char *)1;\n  if ( *src == 91 )\n  {\nLABEL_5:\n    v3 = src[(signed int)result];\n    if ( v3 != 93 )\n    {\n      v4 = &src[(signed int)result + 1];\n      while ( 2 )\n      {\n        switch ( v3 )\n        {\n          case 66:\n          case 98:\n            v5 = HIDWORD(xmmword_697200)++ + 1;\n            v6 = 11LL;\n            goto LABEL_13;\n          case 78:\n          case 110:\n            v5 = HIDWORD(xmmword_6971E0)++ + 1;\n            v6 = 3LL;\n            goto LABEL_13;\n          case 80:\n          case 112:\n            v5 = DWORD1(xmmword_6971E0)++ + 1;\n            v6 = 1LL;\n            goto LABEL_13;\n          case 81:\n          case 113:\n            v5 = DWORD1(xmmword_697200)++ + 1;\n            v6 = 9LL;\n            goto LABEL_13;\n          case 82:\n          case 114:\n            v5 = HIDWORD(xmmword_6971F0)++ + 1;\n            v6 = 7LL;\nLABEL_13:\n            LODWORD(qword_697308) = qword_697308 + 1;\n            dword_697408 ^= dword_6886D0[144 * v6 + v5];\n            v3 = *v4;\n            result = (char *)(unsigned int)((_DWORD)result + 1);\n            ++v4;\n            if ( v3 == 93 )\n              goto LABEL_14;\n            continue;\n          default:\n            return result;\n        }\n      }\n      return result;\n    }\nLABEL_14:\n    v7 = (signed int)result;\n    result = (char *)(unsigned int)((_DWORD)result + 1);\n    if ( src[v7] != 91 )\n    {\n      v8 = &src[(signed int)result];\n      do\n      {\n        v9 = *v8;\n        if ( !*v8 )\n          return result;\n        result = (char *)(unsigned int)((_DWORD)result + 1);\n        ++v8;\n      }\n      while ( v9 != 91 );\n    }\n    result = (char *)(signed int)result;\n    v10 = src[(signed int)result];\n    if ( v10 != 93 )\n    {\n      result = &result[(_QWORD)src + 1];\n      while ( 2 )\n      {\n        switch ( v10 )\n        {\n          case 66:\n          case 98:\n            v11 = xmmword_697250 + 1;\n            LODWORD(xmmword_697250) = xmmword_697250 + 1;\n            v12 = 12LL;\n            goto LABEL_26;\n          case 78:\n          case 110:\n            v11 = xmmword_697230 + 1;\n            LODWORD(xmmword_697230) = xmmword_697230 + 1;\n            v12 = 4LL;\n            goto LABEL_26;\n          case 80:\n          case 112:\n            v11 = DWORD2(xmmword_697220)++ + 1;\n            v12 = 2LL;\n            goto LABEL_26;\n          case 81:\n          case 113:\n            v11 = DWORD2(xmmword_697240)++ + 1;\n            v12 = 10LL;\n            goto LABEL_26;\n          case 82:\n          case 114:\n            v11 = xmmword_697240 + 1;\n            LODWORD(xmmword_697240) = xmmword_697240 + 1;\n            v12 = 8LL;\nLABEL_26:\n            ++HIDWORD(qword_697308);\n            dword_697408 ^= dword_6886D0[144 * v12 + v11];\n            v10 = *result++;\n            if ( v10 == 93 )\n              goto LABEL_27;\n            continue;\n          default:\n            return result;\n        }\n      }\n      return result;\n    }\nLABEL_27:\n    if ( dword_697360 != 1 )\n      return result;\n    result = (char *)(unsigned int)dword_6974E0;\n    if ( dword_6974E0 )\n      return result;\n    result = strncpy(::src, src, 0xC8uLL);\n    if ( dword_6973B4 == 1 )\n    {\n      if ( DWORD2(xmmword_697220) )\n      {\n        if ( (_DWORD)xmmword_697250 )\n          goto LABEL_32;\n      }\n      else\n      {\n        ++HIDWORD(qword_697308);\n        DWORD2(xmmword_697220) = 1;\n        result = (char *)(unsigned int)dword_688B54;\n        dword_697408 ^= dword_688B54;\n        if ( (_DWORD)xmmword_697250 )\n        {\nLABEL_32:\n          if ( (_DWORD)xmmword_697230 )\n            goto LABEL_33;\n          goto LABEL_44;\n        }\n      }\n      ++HIDWORD(qword_697308);\n      LODWORD(xmmword_697250) = 1;\n      result = (char *)(unsigned int)dword_688B54;\n      dword_697408 ^= dword_688B54;\n      if ( (_DWORD)xmmword_697230 )\n      {\nLABEL_33:\n        if ( (_DWORD)xmmword_697240 )\n          goto LABEL_34;\n        goto LABEL_45;\n      }\nLABEL_44:\n      ++HIDWORD(qword_697308);\n      LODWORD(xmmword_697230) = 1;\n      result = (char *)(unsigned int)dword_688FD4;\n      dword_697408 ^= dword_688FD4;\n      if ( (_DWORD)xmmword_697240 )\n      {\nLABEL_34:\n        if ( DWORD2(xmmword_697240) )\n          return result;\nLABEL_46:\n        ++HIDWORD(qword_697308);\n        DWORD2(xmmword_697240) = 1;\n        result = (char *)(unsigned int)dword_688FD4;\nLABEL_52:\n        dword_697408 ^= (unsigned int)result;\n        return result;\n      }\nLABEL_45:\n      ++HIDWORD(qword_697308);\n      LODWORD(xmmword_697240) = 1;\n      result = (char *)(unsigned int)dword_688FD4;\n      dword_697408 ^= dword_688FD4;\n      if ( DWORD2(xmmword_697240) )\n        return result;\n      goto LABEL_46;\n    }\n    if ( DWORD1(xmmword_697200) )\n    {\n      if ( HIDWORD(xmmword_6971F0) )\n        goto LABEL_38;\n    }\n    else\n    {\n      LODWORD(qword_697308) = qword_697308 + 1;\n      DWORD1(xmmword_697200) = 1;\n      result = (char *)(unsigned int)dword_689B14;\n      dword_697408 ^= dword_689B14;\n      if ( HIDWORD(xmmword_6971F0) )\n      {\nLABEL_38:\n        if ( HIDWORD(xmmword_697200) )\n          goto LABEL_39;\n        goto LABEL_49;\n      }\n    }\n    LODWORD(qword_697308) = qword_697308 + 1;\n    HIDWORD(xmmword_6971F0) = 1;\n    result = (char *)(unsigned int)dword_689B14;\n    dword_697408 ^= dword_689B14;\n    if ( HIDWORD(xmmword_697200) )\n    {\nLABEL_39:\n      if ( HIDWORD(xmmword_6971E0) )\n        goto LABEL_40;\n      goto LABEL_50;\n    }\nLABEL_49:\n    LODWORD(qword_697308) = qword_697308 + 1;\n    HIDWORD(xmmword_697200) = 1;\n    result = (char *)(unsigned int)dword_689B14;\n    dword_697408 ^= dword_689B14;\n    if ( HIDWORD(xmmword_6971E0) )\n    {\nLABEL_40:\n      if ( DWORD1(xmmword_6971E0) )\n        return result;\nLABEL_51:\n      LODWORD(qword_697308) = qword_697308 + 1;\n      DWORD1(xmmword_6971E0) = 1;\n      result = (char *)(unsigned int)dword_689B14;\n      goto LABEL_52;\n    }\nLABEL_50:\n    LODWORD(qword_697308) = qword_697308 + 1;\n    HIDWORD(xmmword_6971E0) = 1;\n    result = (char *)(unsigned int)dword_689B14;\n    dword_697408 ^= dword_689B14;\n    if ( DWORD1(xmmword_6971E0) )\n      return result;\n    goto LABEL_51;\n  }\n  result = (char *)1;\n  while ( 1 )\n  {\n    v2 = result[(_QWORD)src];\n    if ( !v2 )\n      return result;\n    ++result;\n    if ( v2 == 91 )\n      goto LABEL_5;\n  }\n}\n", 
            "funcStartAddr": "0x401e10L", 
            "funcEndAddr": "0x4022d4L", 
            "funcName": "sub_401E10"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_402330(int a1)\n{\n  return (unsigned int)dword_418710[a1];\n}\n", 
            "funcStartAddr": "0x402330L", 
            "funcEndAddr": "0x40233bL", 
            "funcName": "sub_402330"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_402340(int a1)\n{\n  return (unsigned int)dword_418750[a1];\n}\n", 
            "funcStartAddr": "0x402340L", 
            "funcEndAddr": "0x40234bL", 
            "funcName": "sub_402340"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_402350(int a1, int a2)\n{\n  __int64 v2; // rax\n  signed __int64 v3; // rcx\n  __int64 v4; // rdx\n  bool v5; // zf\n  int *v6; // rsi\n  __int64 result; // rax\n\n  if ( dword_697360 )\n  {\n    v2 = a1;\n  }\n  else\n  {\n    ++*((_DWORD *)&qword_697308 + a2);\n    v2 = a1;\n    v3 = (signed __int64)a2 << 6;\n    v4 = *(signed int *)((char *)&xmmword_6971E0 + 4 * a1 + v3);\n    *(_DWORD *)((char *)&xmmword_6971E0 + 4 * a1 + v3) = v4 + 1;\n    dword_697408 ^= dword_6886D4[144 * a1 + v4];\n  }\n  v5 = a2 == 0;\n  v6 = &dword_697378;\n  if ( v5 )\n    v6 = &dword_6974E8;\n  *v6 += *((_DWORD *)&xmmword_422530 + v2);\n  result = *((unsigned int *)&xmmword_422610 + v2);\n  dword_697334 += result;\n  return result;\n}\n", 
            "funcStartAddr": "0x402350L", 
            "funcEndAddr": "0x4023bfL", 
            "funcName": "sub_402350"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4023C0(int a1, int a2)\n{\n  signed __int64 v2; // rcx\n  __int64 v3; // rdx\n  bool v4; // zf\n  int *v5; // rsi\n  __int64 result; // rax\n\n  if ( !dword_697360 )\n  {\n    --*((_DWORD *)&qword_697308 + a2);\n    v2 = (signed __int64)a2 << 6;\n    v3 = *(signed int *)((char *)&xmmword_6971E0 + 4 * a1 + v2);\n    dword_697408 ^= dword_6886D0[144 * a1 + v3];\n    *(_DWORD *)((char *)&xmmword_6971E0 + 4 * a1 + v2) = v3 - 1;\n  }\n  v4 = a2 == 0;\n  v5 = &dword_697378;\n  if ( v4 )\n    v5 = &dword_6974E8;\n  *v5 -= *((_DWORD *)&xmmword_422530 + a1);\n  result = *((unsigned int *)&xmmword_422610 + a1);\n  dword_697334 -= result;\n  return result;\n}\n", 
            "funcStartAddr": "0x4023c0L", 
            "funcEndAddr": "0x402429L", 
            "funcName": "sub_4023C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_402430(int a1, int a2)\n{\n  __int64 v2; // rax\n  __int64 v3; // rcx\n  signed __int64 v4; // rdx\n  __int64 v5; // rsi\n  int v6; // edi\n  int *v7; // rsi\n  __int64 result; // rax\n\n  v2 = a2;\n  v3 = a1;\n  v4 = (signed __int64)a2 << 6;\n  v5 = *(signed int *)((char *)&xmmword_6971E0 + 4 * a1 + v4);\n  v6 = dword_6886D4[144 * a1 + v5];\n  ++*((_DWORD *)&qword_697308 + v2);\n  dword_697408 ^= v6;\n  *(_DWORD *)((char *)&xmmword_6971E0 + 4 * v3 + v4) = v5 + 1;\n  v7 = &dword_697378;\n  if ( !(_DWORD)v2 )\n    v7 = &dword_6974E8;\n  *v7 += *((_DWORD *)&xmmword_422530 + v3);\n  result = *((unsigned int *)&xmmword_422610 + v3);\n  dword_697334 += result;\n  return result;\n}\n", 
            "funcStartAddr": "0x402430L", 
            "funcEndAddr": "0x402494L", 
            "funcName": "sub_402430"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4024A0(int a1, int a2)\n{\n  __int64 v2; // rcx\n  signed __int64 v3; // rdx\n  __int64 v4; // rsi\n  int *v5; // rsi\n  __int64 result; // rax\n\n  v2 = a2;\n  v3 = (signed __int64)a2 << 6;\n  v4 = *(signed int *)((char *)&xmmword_6971E0 + 4 * a1 + v3);\n  dword_697408 ^= dword_6886D0[144 * a1 + v4];\n  --*((_DWORD *)&qword_697308 + v2);\n  *(_DWORD *)((char *)&xmmword_6971E0 + 4 * a1 + v3) = v4 - 1;\n  v5 = &dword_697378;\n  if ( !(_DWORD)v2 )\n    v5 = &dword_6974E8;\n  *v5 -= *((_DWORD *)&xmmword_422530 + a1);\n  result = *((unsigned int *)&xmmword_422610 + a1);\n  dword_697334 -= result;\n  return result;\n}\n", 
            "funcStartAddr": "0x4024a0L", 
            "funcEndAddr": "0x402503L", 
            "funcName": "sub_4024A0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 sub_402570()\n{\n  signed __int64 result; // rax\n  signed __int64 v1; // rdx\n  signed __int64 v2; // rsi\n  signed __int64 v3; // rsi\n  signed __int64 v4; // rcx\n  unsigned int v5; // edi\n\n  result = 0LL;\n  if ( dword_6973E0 >= 4 )\n  {\n    LODWORD(v1) = dword_697484 + dword_69743C + ~dword_6973E0;\n    if ( dword_69743C >= (signed int)v1 )\n      LODWORD(v1) = dword_69743C;\n    if ( dword_697484 + dword_69743C >= 3 )\n    {\n      LODWORD(v2) = dword_697484 + dword_69743C - 3;\n      if ( (signed int)v2 >= (signed int)v1 )\n      {\n        v2 = (signed int)v2;\n        v1 = (signed int)v1;\n        while ( dword_6973FC != dword_692990[v2] )\n        {\n          if ( v2 >= 2 )\n          {\n            v2 -= 2LL;\n            if ( v2 >= v1 )\n              continue;\n          }\n          goto LABEL_10;\n        }\n        return 1LL;\n      }\n    }\nLABEL_10:\n    if ( dword_6973E0 >= 6 )\n    {\n      LODWORD(v3) = dword_69743C - 1 - dword_697484 % 2;\n      if ( (signed int)v3 >= 0 )\n      {\n        LODWORD(v4) = dword_697484 + dword_69743C - 1 - dword_6973E0;\n        if ( (signed int)v3 >= (signed int)v4 )\n        {\n          v3 = (signed int)v3;\n          v4 = (signed int)v4;\n          v5 = 0;\n          while ( 1 )\n          {\n            v5 += dword_6973FC == dword_692990[v3];\n            if ( v5 >= 2 )\n              break;\n            result = 0LL;\n            if ( v3 >= 2 )\n            {\n              v3 -= 2LL;\n              if ( v3 >= v4 )\n                continue;\n            }\n            return result;\n          }\n          return 1LL;\n        }\n      }\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x402570L", 
            "funcEndAddr": "0x40263fL", 
            "funcName": "sub_402570"
        }, 
        {
            "decompiledFuncCode": "_DWORD *__fastcall sub_402640(int a1)\n{\n  _DWORD *result; // rax\n  signed __int64 v2; // rdx\n\n  result = ptr;\n  v2 = 3LL * (signed int)(dword_6973FC % (unsigned int)dword_697320);\n  *((_DWORD *)ptr + v2) = dword_6973FC;\n  result[v2 + 1] = dword_697408;\n  result[v2 + 2] = a1;\n  return result;\n}\n", 
            "funcStartAddr": "0x402640L", 
            "funcEndAddr": "0x402670L", 
            "funcName": "sub_402640"
        }, 
        {
            "decompiledFuncCode": "unsigned int *__fastcall sub_402670(_DWORD *a1, _DWORD *a2)\n{\n  unsigned int *result; // rax\n  signed __int64 v3; // rdx\n\n  ++dword_69731C;\n  result = (unsigned int *)ptr;\n  v3 = 3LL * (signed int)(dword_6973FC % (unsigned int)dword_697320);\n  if ( *((_DWORD *)ptr + 3 * (signed int)(dword_6973FC % (unsigned int)dword_697320)) == dword_6973FC\n    && *((_DWORD *)ptr + 3 * (signed int)(dword_6973FC % (unsigned int)dword_697320) + 1) == dword_697408 )\n  {\n    ++dword_697318;\n    *a2 = 1;\n    result = (unsigned int *)result[v3 + 2];\n    *a1 = (_DWORD)result;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x402670L", 
            "funcEndAddr": "0x4026baL", 
            "funcName": "sub_402670"
        }, 
        {
            "decompiledFuncCode": "void *sub_4026C0()\n{\n  return memset(ptr, 0, 12LL * dword_697320);\n}\n", 
            "funcStartAddr": "0x4026c0L", 
            "funcEndAddr": "0x4026ddL", 
            "funcName": "sub_4026C0"
        }, 
        {
            "decompiledFuncCode": "void __spoils<rdx,rcx,r8,r9,r10,r11,xmm4,xmm5> sub_4026E0()\n{\n  ptr = malloc(12LL * dword_697320);\n  if ( !ptr )\n  {\n    puts(\"Out of memory allocating ECache.\");\n    exit(1);\n  }\n}\n", 
            "funcStartAddr": "0x4026e0L", 
            "funcEndAddr": "0x402717L", 
            "funcName": "sub_4026E0"
        }, 
        {
            "decompiledFuncCode": "void sub_402720()\n{\n  free(ptr);\n}\n", 
            "funcStartAddr": "0x402720L", 
            "funcEndAddr": "0x40272cL", 
            "funcName": "sub_402720"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_402730(_BYTE *a1)\n{\n  _BYTE *v1; // r14\n  const char *v2; // rdi\n  signed int v3; // er15\n  _BYTE *v4; // rax\n  bool v5; // zf\n  int v6; // ebp\n  __int64 v7; // rbx\n  __int64 v8; // r13\n  int v9; // ecx\n  char *v10; // rax\n  signed __int64 v11; // rbx\n  char v12; // dl\n  __int64 v13; // rax\n  __int64 v14; // rax\n  int v15; // eax\n  signed __int64 v16; // rbp\n  char *v17; // rbx\n  char v18; // al\n  int v19; // eax\n  int v20; // ecx\n  signed __int64 v21; // r15\n  signed __int64 v22; // rbx\n  signed __int64 v23; // rbx\n  char v24; // al\n  int *v25; // rax\n  int v27; // [rsp+8h] [rbp-50h]\n  int v28; // [rsp+10h] [rbp-48h]\n  int v29; // [rsp+1Ch] [rbp-3Ch]\n  signed __int64 v30; // [rsp+20h] [rbp-38h]\n\n  v1 = a1;\n  v2 = (const char *)dword_696070;\n  memset(dword_696070, 0, 0x240uLL);\n  dword_6974E4 = 0;\n  dword_697374 = 0;\n  dword_697380 = 50;\n  v3 = -1;\n  v4 = v1;\n  do\n  {\n    ++v3;\n    v5 = *v4++ == 32;\n  }\n  while ( v5 );\n  v30 = (signed __int64)(v1 + 1);\n  v28 = 110;\n  v6 = 0;\n  v27 = 0;\n  v29 = 0;\n  while ( 1 )\n  {\n    v7 = v3;\n    v8 = (char)v1[v3];\n    if ( !v1[v3] || (_BYTE)v8 == 10 )\n      break;\n    if ( v6 )\n      goto LABEL_8;\n    v13 = (*__ctype_b_loc())[v8];\n    if ( v13 & 0x800 )\n    {\n      v2 = &v1[v3];\n      v15 = strtol(v2, 0LL, 10);\n      if ( v15 > 0 )\n      {\n        v16 = 0LL;\n        do\n        {\n          dword_696070[v28 + v27 + (signed int)v16++] = 13;\n          v2 = &v1[v3];\n          v15 = strtol(&v1[v3], 0LL, 10);\n        }\n        while ( v16 < v15 );\n      }\n      v9 = 0;\n      v27 += v15;\n    }\n    else\n    {\n      if ( (_BYTE)v8 == 47 )\n      {\n        v14 = v29++;\n        v28 = dword_41A864[v14];\n        v9 = 0;\n        v27 = 0;\n        goto LABEL_4;\n      }\n      if ( !(v13 & 0x400) )\n      {\nLABEL_8:\n        if ( (_BYTE)v8 == 32 )\n        {\n          v9 = v6 + 1;\n          if ( v6 )\n          {\n            if ( v6 == 1 )\n            {\n              dword_696328 = 1;\n              dword_696334 = 1;\n              dword_696318 = 1;\n              dword_696484 = 1;\n              dword_696478 = 1;\n              dword_696468 = 1;\n              v21 = v3 - 1LL;\n              v22 = (v7 << 32) - 0x100000000LL;\n              do\n              {\n                v22 += 0x100000000LL;\n                v5 = v1[v21++ + 1] == 32;\n              }\n              while ( v5 );\n              v23 = v22 >> 32;\n              v24 = v1[v23];\n              if ( v24 != 32 )\n              {\n                v21 = v23;\n                do\n                {\n                  switch ( v24 )\n                  {\n                    case 75:\n                      dword_696334 = 0;\n                      v25 = &dword_696328;\n                      goto LABEL_40;\n                    case 81:\n                      dword_696318 = 0;\n                      v25 = &dword_696328;\n                      goto LABEL_40;\n                    case 107:\n                      dword_696484 = 0;\n                      goto LABEL_39;\n                    case 113:\n                      dword_696468 = 0;\nLABEL_39:\n                      v25 = &dword_696478;\nLABEL_40:\n                      *v25 = 0;\n                      break;\n                    default:\n                      break;\n                  }\n                  v24 = *(_BYTE *)(v30 + v21++);\n                }\n                while ( v24 != 32 );\n              }\n              v3 = v21 - 1;\n            }\n            else if ( v6 == 2 )\n            {\n              v10 = (char *)(v30 + v3);\n              v11 = ((signed __int64)v3 << 32) + 0x100000000LL;\n              do\n              {\n                v12 = *v10;\n                ++v3;\n                v11 += 0x100000000LL;\n                ++v10;\n              }\n              while ( v12 == 32 );\n              if ( v12 == 45 )\n              {\n                dword_6973C4 = 0;\n              }\n              else\n              {\n                v3 += 2;\n                dword_6973C4 = v12 + 12 * (char)v1[v11 >> 32] - 659;\n              }\n            }\n          }\n          else\n          {\n            v17 = (char *)(v30 + v3);\n            do\n            {\n              v18 = *v17;\n              ++v3;\n              ++v17;\n            }\n            while ( v18 == 32 );\n            dword_6974EC = v18 == 119;\n          }\n        }\n        else\n        {\n          v9 = v6;\n        }\n        goto LABEL_4;\n      }\n      switch ( (_DWORD)v8 )\n      {\n        case 0x42:\n          v19 = v28 + v27;\n          v20 = 11;\n          goto LABEL_55;\n        case 0x4B:\n          v19 = v28 + v27;\n          dword_6974F0 = v28 + v27;\n          v20 = 5;\n          goto LABEL_55;\n        case 0x4E:\n          v19 = v28 + v27;\n          v20 = 3;\n          goto LABEL_55;\n        case 0x50:\n          v19 = v28 + v27;\n          v20 = 1;\n          goto LABEL_55;\n        case 0x51:\n          v19 = v28 + v27;\n          v20 = 9;\n          goto LABEL_55;\n        case 0x52:\n          v19 = v28 + v27;\n          v20 = 7;\n          goto LABEL_55;\n        case 0x62:\n          v19 = v28 + v27;\n          v20 = 12;\n          goto LABEL_55;\n        case 0x6B:\n          v19 = v28 + v27;\n          dword_697370 = v28 + v27;\n          v20 = 6;\n          goto LABEL_55;\n        case 0x6E:\n          v19 = v28 + v27;\n          v20 = 4;\n          goto LABEL_55;\n        case 0x70:\n          v19 = v28 + v27;\n          v20 = 2;\n          goto LABEL_55;\n        case 0x71:\n          v19 = v28 + v27;\n          v20 = 10;\n          goto LABEL_55;\n        case 0x72:\n          v19 = v28 + v27;\n          v20 = 8;\nLABEL_55:\n          dword_696070[v19] = v20;\n          break;\n        default:\n          break;\n      }\n      ++v27;\n      v9 = 0;\n    }\nLABEL_4:\n    ++v3;\n    v6 = v9;\n  }\n  sub_4168E0(v2, 0LL);\n  return sub_415470();\n}\n", 
            "funcStartAddr": "0x402730L", 
            "funcEndAddr": "0x402bebL", 
            "funcName": "sub_402730"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_402BF0@<rax>(char *haystack@<rdi>, int a2, int a3)\n{\n  bool v3; // bl\n  char needle; // [rsp+20h] [rbp-108h]\n\n  sub_415C90(&needle, a2, a3);\n  if ( strstr(haystack, \"bm\") )\n  {\n    v3 = strstr(haystack, &needle) != 0LL;\n  }\n  else if ( strstr(haystack, \"am\") )\n  {\n    v3 = strstr(haystack, &needle) == 0LL;\n  }\n  else\n  {\n    v3 = 0;\n    printf(\"No best-move or avoid-move found!\", \"am\");\n  }\n  return v3;\n}\n", 
            "funcStartAddr": "0x402bf0L", 
            "funcEndAddr": "0x402c86L", 
            "funcName": "sub_402BF0"
        }, 
        {
            "decompiledFuncCode": "int sub_402C90()\n{\n  int v0; // ebp\n  FILE *v1; // r14\n  unsigned int v2; // ebp\n  unsigned int v3; // er13\n  FILE *v4; // rdi\n  unsigned int v5; // er12\n  unsigned int v6; // eax\n  const char *v7; // rdi\n  int v9; // [rsp+1Ch] [rbp-210Ch]\n  __int128 v10; // [rsp+20h] [rbp-2108h]\n  __int128 v11; // [rsp+38h] [rbp-20F0h]\n  char needle; // [rsp+50h] [rbp-20D8h]\n  char nptr; // [rsp+150h] [rbp-1FD8h]\n  char v14; // [rsp+920h] [rbp-1808h]\n  char filename; // [rsp+10F0h] [rbp-1038h]\n\n  printf(\"\\nName of EPD testsuite: \");\n  sub_416DA0(&filename, 256LL, stdin);\n  printf(\"\\nTime per move (s): \");\n  sub_416DA0(&nptr, 256LL, stdin);\n  v0 = strtol(&nptr, 0LL, 10);\n  putchar(10);\n  v1 = fopen(&filename, \"r\");\n  if ( fgets(&nptr, 2000, v1) )\n  {\n    v9 = 100 * v0;\n    v2 = 1;\n    v3 = 0;\n    while ( 1 )\n    {\n      sub_402730(&nptr);\n      dword_6974A8 = dword_6974EC == 0;\n      sub_415200(&nptr, 2000LL);\n      sub_415470();\n      v4 = stdout;\n      sub_416150(stdout);\n      dword_6973E8 = 0;\n      if ( (unsigned int)sub_417B80(v4, 1LL) )\n        sub_416DA0(&v14, 256LL, stdin);\n      dword_6973E4 = v9;\n      sub_410B50(&v11);\n      v10 = v11;\n      printf(\"\\nNodes: %i (%0.2f%% qnodes)\\n\", (float)((float)((float)dword_697494 / (float)dword_697460) * 100.0));\n      printf(\n        \"ECacheProbes : %u   ECacheHits : %u   HitRate : %f%%\\n\",\n        (float)((float)((float)dword_697318 / (float)((float)dword_69731C + 1.0)) * 100.0));\n      printf(\n        \"TTStores : %u TTProbes : %u   TTHits : %u   HitRate : %f%%\\n\",\n        (unsigned int)dword_69735C,\n        (float)((float)((float)dword_697350 / (float)((float)dword_697354 + 1.0)) * 100.0));\n      printf(\n        \"NTries : %u  NCuts : %u  CutRate : %f%%  TExt: %u\\n\",\n        (unsigned int)dword_69733C,\n        (unsigned int)dword_697338,\n        (unsigned int)dword_69734C,\n        (float)((float)((float)dword_697338 * 100.0) / (float)((float)dword_69733C + 1.0)));\n      printf(\n        \"Check extensions: %u  Razor drops : %u  Razor Material : %u\\n\",\n        (unsigned int)dword_6973C8,\n        (unsigned int)dword_69749C,\n        (unsigned int)dword_6974A0);\n      printf(\n        \"Move ordering : %f%%\\n\",\n        (float)((float)((float)((float)dword_697328 * 100.0) / (float)dword_697324) + 1.0));\n      v5 = dword_697334;\n      v6 = sub_403300(4293967296LL, 1000000LL);\n      printf(\"Material score: %d  Eval : %d  MaxPosDiff: %d\\n\", v5, v6, (unsigned int)dword_697434);\n      putchar(10);\n      if ( !dword_6973E8 )\n        break;\n      ++v3;\nLABEL_16:\n      printf(\"Solved: %d/%d\\n\", v3, v2++);\n      if ( !fgets(&nptr, 2000, v1) )\n        return putchar(10);\n    }\n    sub_415C90(&needle, v10, SDWORD2(v10));\n    if ( strstr(&nptr, \"bm\") )\n    {\n      if ( strstr(&nptr, &needle) )\n      {\nLABEL_9:\n        ++v3;\n        v7 = \"Solution found.\";\nLABEL_15:\n        puts(v7);\n        goto LABEL_16;\n      }\n    }\n    else if ( strstr(&nptr, \"am\") )\n    {\n      if ( !strstr(&nptr, &needle) )\n        goto LABEL_9;\n    }\n    else\n    {\n      printf(\"No best-move or avoid-move found!\", \"am\");\n    }\n    v7 = \"Solution not found.\";\n    goto LABEL_15;\n  }\n  return putchar(10);\n}\n", 
            "funcStartAddr": "0x402c90L", 
            "funcEndAddr": "0x40306bL", 
            "funcName": "sub_402C90"
        }, 
        {
            "decompiledFuncCode": "void __fastcall __noreturn sub_403070(const char *a1)\n{\n  FILE *v1; // r14\n  unsigned int v2; // ebx\n  char v3; // [rsp+8h] [rbp-140h]\n  char s; // [rsp+20h] [rbp-128h]\n\n  v1 = fopen(a1, \"r\");\n  if ( v1 )\n  {\n    rtime(a1, \"r\");\n    if ( !fgets(&s, 256, v1) )\n    {\nLABEL_5:\n      rtime(&s, 256LL);\n      fclose(v1);\n      exit(0);\n    }\n    while ( 1 )\n    {\n      sub_402730(&s);\n      dword_6974A8 = dword_6974EC == 0;\n      sub_415200(&s, 256LL);\n      sub_415470();\n      putchar(10);\n      sub_416150(stdout);\n      printf(\"EPD: %s\\n\", &s);\n      if ( !fgets(&s, 256, v1) )\n        break;\n      v2 = strtol(&s, 0LL, 10);\n      printf(\"Searching to %d ply\\n\", v2);\n      dword_69742C = v2;\n      dword_6973E4 = 1000000;\n      sub_410B50(&v3);\n      if ( !fgets(&s, 256, v1) )\n        goto LABEL_5;\n    }\n  }\n  exit(1);\n}\n", 
            "funcStartAddr": "0x403070L", 
            "funcEndAddr": "0x403192L", 
            "funcName": "sub_403070"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_4031A0()\n{\n  __int64 v0; // r8\n  int v1; // er10\n  unsigned int v2; // er11\n  __int64 v3; // r9\n  __int64 v4; // rdi\n  signed int v5; // eax\n  signed int v6; // ecx\n  __int64 v7; // rsi\n  __int64 result; // rax\n  __int64 v9; // r8\n  int v10; // er9\n  int v11; // er10\n  __int64 v12; // rdi\n  int v13; // edx\n  int v14; // esi\n\n  v0 = 0LL;\n  do\n  {\n    v1 = v0 & 7;\n    v2 = (unsigned int)v0 >> 3;\n    v3 = dword_41CCE0[v0];\n    v4 = 0LL;\n    do\n    {\n      v5 = (v4 & 7) - v1;\n      if ( v5 < 1 )\n        v5 = v1 - (v4 & 7);\n      v6 = ((unsigned int)v4 >> 3) - v2;\n      if ( v6 < 1 )\n        v6 = v2 - ((unsigned int)v4 >> 3);\n      v7 = dword_41CCE0[v4];\n      dword_65ADD0[144 * v3 + v7] = v5 + v6;\n      if ( v5 >= v6 )\n        v6 = v5;\n      dword_6325D0[144 * v3 + v7] = v6;\n      ++v4;\n    }\n    while ( v4 != 64 );\n    ++v0;\n  }\n  while ( v0 != 64 );\n  result = 0LL;\n  v9 = 0LL;\n  do\n  {\n    v10 = dword_41AB20[v9];\n    v11 = dword_41A8E0[v9];\n    v12 = 0LL;\n    do\n    {\n      v13 = dword_41AB20[v12] - v10;\n      if ( v13 < 1 )\n        v13 = v10 - dword_41AB20[v12];\n      v14 = dword_41A8E0[v12] - v11;\n      if ( v14 < 1 )\n        v14 = v11 - dword_41A8E0[v12];\n      if ( v13 >= v14 )\n        v14 = v13;\n      byte_6793D0[result + v12] = byte_422220[4 * v14];\n      byte_66F1D0[result + v12] = byte_4222E0[4 * v14];\n      byte_6742D0[result + v12] = byte_422280[4 * v14];\n      byte_6835D0[result + v12] = byte_422250[4 * v14];\n      byte_67E4D0[result + v12++] = byte_4222B0[4 * v14];\n    }\n    while ( v12 != 144 );\n    ++v9;\n    result += 144LL;\n  }\n  while ( v9 != 144 );\n  return result;\n}\n", 
            "funcStartAddr": "0x4031a0L", 
            "funcEndAddr": "0x4032ffL", 
            "funcName": "sub_4031A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_403300@<rax>(__int64 a1@<rax>)\n{\n  __int64 result; // rax\n  char v2; // r14\n  char v3; // r15\n  int v4; // er8\n  __int64 v5; // r13\n  int v6; // edi\n  __int64 v7; // r10\n  signed int v8; // ebx\n  signed int *v9; // rbp\n  __int64 v10; // rsi\n  int v11; // eax\n  int v12; // ecx\n  int v13; // eax\n  int v14; // eax\n  int v15; // edx\n  signed int v16; // esi\n  signed int v17; // ecx\n  int v18; // eax\n  int v19; // eax\n  int v20; // eax\n  int v21; // eax\n  int v22; // edi\n  int v23; // ebx\n  int v24; // ebp\n  int v25; // edi\n  int v26; // eax\n  int v27; // ebx\n  int v28; // ebp\n  int v29; // eax\n  int v30; // ebx\n  int v31; // ebx\n  int v32; // ebp\n  int v33; // eax\n  int v34; // ebx\n  int v35; // ebx\n  int v36; // ebp\n  int v37; // eax\n  int v38; // ebx\n  int v39; // ebx\n  signed __int64 v40; // rcx\n  int v41; // er14\n  int v42; // edi\n  int v43; // ebx\n  int v44; // ebp\n  int v45; // ebx\n  int v46; // ebp\n  int v47; // eax\n  int v48; // ebx\n  int v49; // ebx\n  int v50; // ebp\n  int v51; // eax\n  int v52; // ebx\n  int v53; // ebx\n  int v54; // ebp\n  int v55; // eax\n  int v56; // ebx\n  int v57; // ebx\n  signed __int64 v58; // rax\n  __int64 v59; // [rsp+0h] [rbp-38h]\n\n  v59 = a1;\n  LODWORD(v59) = 0;\n  switch ( dword_697360 )\n  {\n    case 4:\n      return sub_403F10();\n    case 3:\n      return sub_412600();\n    case 2:\n      return sub_4091C0();\n  }\n  HIDWORD(v59) = 0;\n  sub_402670(&v59, (_DWORD *)&v59 + 1);\n  if ( !HIDWORD(v59) )\n  {\n    v2 = 0;\n    if ( dword_697398 )\n    {\n      if ( dword_6974EC != dword_6973B4 )\n      {\n        if ( dword_6974E8 > 200 || (v3 = 2, dword_697360 == 1) )\n          v3 = dword_6974E8 < 700;\nLABEL_14:\n        if ( dword_69747C <= 0 )\n        {\n          v6 = dword_6974F0;\n          v4 = dword_697370;\n          v7 = dword_6974F0;\n          v5 = dword_697370;\n        }\n        else\n        {\n          v4 = dword_697370;\n          v5 = dword_697370;\n          v6 = dword_6974F0;\n          v7 = dword_6974F0;\n          v8 = 1;\n          v9 = (_DWORD *)(&xmmword_697050 + 4);\n          do\n          {\n            v10 = *v9;\n            if ( *v9 )\n            {\n              ++v8;\n              switch ( dword_696070[v10] )\n              {\n                case 1:\n                  LODWORD(v59) = (unsigned __int8)byte_6793D0[144 * v10 + dword_697370]\n                               + v59\n                               + (dword_41BAE0[v10] >> v3)\n                               + 100;\n                  break;\n                case 2:\n                  v11 = v59 - 100 - (dword_41BD20[v10] >> v2);\n                  v12 = (unsigned __int8)byte_6793D0[144 * v10 + dword_6974F0];\n                  goto LABEL_28;\n                case 3:\n                  v13 = (unsigned __int8)byte_6742D0[144 * v10 + dword_697370] + v59 + (dword_41B8A0[v10] >> v3) + 210;\n                  goto LABEL_29;\n                case 4:\n                  v11 = v59 - 210 - (dword_41B660[v10] >> v2);\n                  v12 = (unsigned __int8)byte_6742D0[144 * v10 + dword_6974F0];\n                  goto LABEL_28;\n                case 7:\n                  v13 = (unsigned __int8)byte_6835D0[144 * v10 + dword_697370] + v59 + (dword_41CAA0[v10] >> v3) + 250;\n                  goto LABEL_29;\n                case 8:\n                  v11 = v59 - 250 - (dword_41C860[v10] >> v2);\n                  v12 = (unsigned __int8)byte_6835D0[144 * v10 + dword_6974F0];\n                  goto LABEL_28;\n                case 9:\n                  v13 = (unsigned __int8)byte_67E4D0[144 * v10 + dword_697370] + v59 + (dword_41C620[v10] >> v3) + 450;\n                  goto LABEL_29;\n                case 10:\n                  v11 = v59 - 450 - (dword_41C3E0[v10] >> v2);\n                  v12 = (unsigned __int8)byte_67E4D0[144 * v10 + dword_6974F0];\n                  goto LABEL_28;\n                case 11:\n                  v13 = (unsigned __int8)byte_66F1D0[144 * v10 + dword_697370] + v59 + (dword_41B420[v10] >> v3) + 230;\n                  goto LABEL_29;\n                case 12:\n                  v11 = v59 - 230 - (dword_41B420[v10] >> v2);\n                  v12 = (unsigned __int8)byte_66F1D0[144 * v10 + dword_6974F0];\nLABEL_28:\n                  v13 = v11 - v12;\nLABEL_29:\n                  LODWORD(v59) = v13;\n                  break;\n                default:\n                  break;\n              }\n            }\n            ++v9;\n          }\n          while ( v8 <= dword_69747C );\n        }\n        v14 = dword_41C1A0[v5] >> v3;\n        v15 = v59 + (dword_41BF60[v7] >> v2) - v14;\n        LODWORD(v59) = v59 + (dword_41BF60[v7] >> v2) - v14;\n        if ( !dword_6974E4 && dword_696328 )\n        {\n          v15 -= 30;\n          LODWORD(v59) = v15;\n        }\n        if ( !dword_697374 && dword_696478 )\n        {\n          v15 += 30;\n          LODWORD(v59) = v15;\n        }\n        if ( !dword_696354 && dword_696144 != 13 )\n        {\n          v15 -= 15;\n          LODWORD(v59) = v15;\n        }\n        if ( !dword_696358 && dword_696148 != 13 )\n        {\n          v15 -= 15;\n          LODWORD(v59) = v15;\n        }\n        if ( !dword_696444 && dword_6961D4 != 13 )\n        {\n          v15 += 15;\n          LODWORD(v59) = v15;\n        }\n        if ( !dword_696448 && dword_6961D8 != 13 )\n        {\n          v15 += 15;\n          LODWORD(v59) = v15;\n        }\n        if ( !dword_6973B0 )\n          goto LABEL_174;\n        if ( (unsigned int)(v6 - 29) < 2 )\n          goto LABEL_68;\n        if ( dword_69609C[v6] == 1 )\n        {\n          if ( dword_6960A0[v6] == 1 )\n            goto LABEL_55;\n        }\n        else\n        {\n          v15 -= 24;\n          LODWORD(v59) = v15;\n          if ( dword_6960A0[v6] == 1 )\n          {\nLABEL_55:\n            if ( dword_6960A4[v6] == 1 )\n              goto LABEL_56;\n            goto LABEL_63;\n          }\n        }\n        v15 -= 35;\n        LODWORD(v59) = v15;\n        if ( dword_6960A4[v6] == 1 )\n        {\nLABEL_56:\n          if ( !dword_6974E4 )\n            goto LABEL_68;\n          goto LABEL_64;\n        }\nLABEL_63:\n        v15 -= 24;\n        LODWORD(v59) = v15;\n        if ( !dword_6974E4 )\n          goto LABEL_68;\nLABEL_64:\n        if ( dword_69600C[v4] == 2 )\n        {\n          v15 += 11;\n          LODWORD(v59) = v15;\n          if ( dword_696010[v4] != 2 )\n          {\nLABEL_66:\n            if ( dword_696014[v4] != 2 )\n              goto LABEL_68;\n            goto LABEL_67;\n          }\n        }\n        else if ( dword_696010[v4] != 2 )\n        {\n          goto LABEL_66;\n        }\n        v15 += 15;\n        LODWORD(v59) = v15;\n        if ( dword_696014[v4] == 2 )\n        {\nLABEL_67:\n          v15 += 11;\n          LODWORD(v59) = v15;\n        }\nLABEL_68:\n        if ( (unsigned int)(v4 - 113) < 2 )\n          goto LABEL_81;\n        if ( dword_69603C[v4] == 2 )\n        {\n          if ( dword_696040[v4] == 2 )\n            goto LABEL_71;\n        }\n        else\n        {\n          v15 += 24;\n          LODWORD(v59) = v15;\n          if ( dword_696040[v4] == 2 )\n          {\nLABEL_71:\n            if ( dword_696044[v4] == 2 )\n              goto LABEL_72;\n            goto LABEL_76;\n          }\n        }\n        v15 += 35;\n        LODWORD(v59) = v15;\n        if ( dword_696044[v4] == 2 )\n        {\nLABEL_72:\n          if ( !dword_697374 )\n            goto LABEL_81;\nLABEL_77:\n          if ( dword_69600C[v4] == 2 )\n          {\n            v15 -= 11;\n            LODWORD(v59) = v15;\n            if ( dword_696010[v4] != 2 )\n            {\nLABEL_79:\n              if ( dword_696014[v4] != 2 )\n                goto LABEL_81;\n              goto LABEL_80;\n            }\n          }\n          else if ( dword_696010[v4] != 2 )\n          {\n            goto LABEL_79;\n          }\n          v15 -= 15;\n          LODWORD(v59) = v15;\n          if ( dword_696014[v4] != 2 )\n          {\nLABEL_81:\n            if ( dword_696358 )\n            {\n              v16 = 55;\n              if ( !dword_696354 )\n                v16 = 30;\n              v15 += v16;\n              LODWORD(v59) = v15;\n              if ( dword_696330 )\n              {\n                v15 += 20;\n                LODWORD(v59) = v15;\n              }\n              if ( dword_69631C )\n              {\n                v15 += 15;\n                LODWORD(v59) = v15;\n              }\n              if ( dword_696320 )\n              {\n                v15 += 10;\n                LODWORD(v59) = v15;\n              }\n            }\n            if ( dword_696448 )\n            {\n              v17 = -55;\n              if ( !dword_696444 )\n                v17 = -30;\n              v15 += v17;\n              LODWORD(v59) = v15;\n              if ( dword_696480 )\n              {\n                v15 -= 20;\n                LODWORD(v59) = v15;\n              }\n              if ( dword_69646C )\n              {\n                v15 -= 15;\n                LODWORD(v59) = v15;\n              }\n              if ( dword_696470 )\n              {\n                v15 -= 10;\n                LODWORD(v59) = v15;\n              }\n            }\n            if ( dword_696120 != 1 && (dword_69614C == 2 || dword_696178 == 2) )\n            {\n              v15 -= 30;\n              LODWORD(v59) = v15;\n            }\n            if ( dword_696210 != 2 && (dword_6961DC == 1 || dword_6961A8 == 1) )\n            {\n              v15 += 30;\n              LODWORD(v59) = v15;\n            }\n            v18 = dword_6960A0[v6];\n            if ( v18 == 12 || v18 == 2 )\n            {\n              LODWORD(v59) = v15 - 35;\n              if ( (unsigned int)sub_401480(v6 + 12, 0) )\n                LODWORD(v59) = v59 - (0x96u >> v2);\n            }\n            v19 = dword_696040[dword_697370];\n            if ( v19 == 11 || v19 == 1 )\n            {\n              LODWORD(v59) = v59 + 35;\n              if ( (unsigned int)sub_401480(dword_697370 - 12, 1) )\n                LODWORD(v59) = (0x96u >> v3) + v59;\n            }\n            if ( dword_696148\n              && ((unsigned int)(dword_696148 - 1) <= 1 || dword_69611C == 1)\n              && (unsigned int)sub_401480(54, 0) )\n            {\n              if ( dword_69611C == 1 )\n                LODWORD(v59) = v59 + 10;\n              if ( dword_696148 == 2 )\n              {\n                LODWORD(v59) = v59 - 15;\n              }\n              else if ( dword_696148 == 1 )\n              {\n                LODWORD(v59) = v59 + 20;\n              }\n            }\n            if ( dword_6961D8\n              && ((unsigned int)(dword_6961D8 - 1) <= 1 || dword_69620C == 2)\n              && (unsigned int)sub_401480(90, 1) )\n            {\n              if ( dword_69620C == 2 )\n                LODWORD(v59) = v59 - 10;\n              if ( dword_6961D8 == 1 )\n              {\n                LODWORD(v59) = v59 + 15;\n              }\n              else if ( dword_6961D8 == 2 )\n              {\n                LODWORD(v59) = v59 - 20;\n              }\n            }\n            if ( dword_696070[dword_697370] && (unsigned int)sub_401480(dword_697370, 1) )\n            {\n              LODWORD(v59) = (0x32u >> v3) + v59;\n              if ( dword_696120 != 4 )\n              {\nLABEL_153:\n                if ( dword_696210 == 3 )\n                {\n                  LODWORD(v59) = v59 + 20;\n                  if ( (unsigned int)sub_401480(104, 1) )\n                    LODWORD(v59) = v59 + 40;\n                  if ( dword_696240 == 8 )\n                    LODWORD(v59) = v59 - 10;\n                  if ( dword_69623C == 12 )\n                    LODWORD(v59) = v59 - 10;\n                }\n                if ( dword_696154 == 12 && dword_696120 != 1 )\n                {\n                  v20 = v59;\n                  LODWORD(v59) = v59 - 20;\n                  if ( dword_696120 == 4 )\n                  {\n                    LODWORD(v59) = v20 - 60;\n                    if ( dword_6960EC == 5 || dword_6960F0 == 5 || dword_6960F4 == 5 )\n                      LODWORD(v59) = v20 - 140;\n                  }\n                }\n                if ( dword_6961E4 == 11 && dword_696210 != 2 )\n                {\n                  v21 = v59;\n                  LODWORD(v59) = v59 + 20;\n                  if ( dword_696210 == 3 )\n                  {\n                    LODWORD(v59) = v21 + 60;\n                    if ( dword_69623C == 6 || dword_696240 == 6 || dword_696244 == 6 )\n                      LODWORD(v59) = v21 + 140;\n                  }\n                }\nLABEL_174:\n                if ( dword_69738C )\n                {\n                  v22 = dword_6974F0;\n                  v23 = 0;\n                  if ( dword_69603C[dword_6974F0] )\n                  {\n                    v24 = sub_401990(dword_6974F0 - 13, 0);\n                    v22 = dword_6974F0;\n                  }\n                  else\n                  {\n                    v24 = 0;\n                  }\n                  if ( dword_696040[v22] )\n                  {\n                    v23 = sub_401990(v22 - 12, 0);\n                    v22 = dword_6974F0;\n                  }\n                  v27 = v24 + v23;\n                  v28 = 0;\n                  if ( dword_696044[v22] )\n                  {\n                    v29 = sub_401990(v22 - 11, 0);\n                    v22 = dword_6974F0;\n                  }\n                  else\n                  {\n                    v29 = 0;\n                  }\n                  v30 = v29 + v27;\n                  if ( dword_69606C[v22] )\n                  {\n                    v28 = sub_401990(v22 - 1, 0);\n                    v22 = dword_6974F0;\n                  }\n                  v31 = v28 + v30;\n                  v32 = 0;\n                  if ( dword_696074[v22] )\n                  {\n                    v33 = sub_401990(v22 + 1, 0);\n                    v22 = dword_6974F0;\n                  }\n                  else\n                  {\n                    v33 = 0;\n                  }\n                  v34 = v33 + v31;\n                  if ( dword_69609C[v22] )\n                  {\n                    v32 = sub_401990(v22 + 11, 0);\n                    v22 = dword_6974F0;\n                  }\n                  v35 = v32 + v34;\n                  v36 = 0;\n                  if ( dword_6960A0[v22] )\n                  {\n                    v37 = sub_401990(v22 + 12, 0);\n                    v22 = dword_6974F0;\n                  }\n                  else\n                  {\n                    v37 = 0;\n                  }\n                  v38 = v37 + v35;\n                  if ( dword_6960A4[v22] )\n                    v36 = sub_401990(v22 + 13, 0);\n                  v39 = v36 + v38;\n                  if ( dword_697378 >= -1499 )\n                  {\n                    v40 = 0LL;\n                    if ( dword_697378 <= 99 )\n                      v40 = (signed int)(((unsigned __int64)(-1374389535LL * dword_697378) >> 63)\n                                       + (-1374389535LL * dword_697378 >> 37));\n                  }\n                  else\n                  {\n                    v40 = 14LL;\n                  }\n                  v41 = dword_422310[9 * v40 + v39];\n                  v42 = dword_697370;\n                  v43 = 0;\n                  if ( dword_69603C[dword_697370] )\n                  {\n                    v44 = sub_401990(dword_697370 - 13, 1);\n                    v42 = dword_697370;\n                  }\n                  else\n                  {\n                    v44 = 0;\n                  }\n                  if ( dword_696040[v42] )\n                  {\n                    v43 = sub_401990(v42 - 12, 1);\n                    v42 = dword_697370;\n                  }\n                  v45 = v44 + v43;\n                  v46 = 0;\n                  if ( dword_696044[v42] )\n                  {\n                    v47 = sub_401990(v42 - 11, 1);\n                    v42 = dword_697370;\n                  }\n                  else\n                  {\n                    v47 = 0;\n                  }\n                  v48 = v47 + v45;\n                  if ( dword_69606C[v42] )\n                  {\n                    v46 = sub_401990(v42 - 1, 1);\n                    v42 = dword_697370;\n                  }\n                  v49 = v46 + v48;\n                  v50 = 0;\n                  if ( dword_696074[v42] )\n                  {\n                    v51 = sub_401990(v42 + 1, 1);\n                    v42 = dword_697370;\n                  }\n                  else\n                  {\n                    v51 = 0;\n                  }\n                  v52 = v51 + v49;\n                  if ( dword_69609C[v42] )\n                  {\n                    v50 = sub_401990(v42 + 11, 1);\n                    v42 = dword_697370;\n                  }\n                  v53 = v50 + v52;\n                  v54 = 0;\n                  if ( dword_6960A0[v42] )\n                  {\n                    v55 = sub_401990(v42 + 12, 1);\n                    v42 = dword_697370;\n                  }\n                  else\n                  {\n                    v55 = 0;\n                  }\n                  v56 = v55 + v53;\n                  if ( dword_6960A4[v42] )\n                    v54 = sub_401990(v42 + 13, 1);\n                  v57 = v54 + v56;\n                  v25 = dword_6974E8;\n                  if ( dword_6974E8 <= 1499 )\n                  {\n                    v58 = 0LL;\n                    if ( dword_6974E8 >= -99 )\n                      v58 = (signed int)(((unsigned __int64)(1374389535LL * dword_6974E8) >> 63)\n                                       + (1374389535LL * dword_6974E8 >> 37));\n                  }\n                  else\n                  {\n                    v58 = 14LL;\n                  }\n                  v26 = v59 + dword_422310[9 * v58 + v57] - v41;\n                  LODWORD(v59) = v26;\n                }\n                else\n                {\n                  v25 = dword_6974E8;\n                  v26 = v59;\n                }\n                LODWORD(v59) = v26 + dword_697378 + v25;\n                sub_402640(v59);\n                goto LABEL_226;\n              }\n            }\n            else\n            {\n              if ( dword_696070[dword_6974F0] && (unsigned int)sub_401480(dword_6974F0, 0) )\n                LODWORD(v59) = v59 - (0x32u >> v2);\n              if ( dword_696120 != 4 )\n                goto LABEL_153;\n            }\n            LODWORD(v59) = v59 - 20;\n            if ( (unsigned int)sub_401480(44, 0) )\n              LODWORD(v59) = v59 - 40;\n            if ( dword_6960F0 == 7 )\n              LODWORD(v59) = v59 + 10;\n            if ( dword_6960EC == 11 )\n              LODWORD(v59) = v59 + 10;\n            goto LABEL_153;\n          }\nLABEL_80:\n          v15 -= 11;\n          LODWORD(v59) = v15;\n          goto LABEL_81;\n        }\nLABEL_76:\n        v15 += 24;\n        LODWORD(v59) = v15;\n        if ( !dword_697374 )\n          goto LABEL_81;\n        goto LABEL_77;\n      }\n      if ( dword_697378 < -200 || (v2 = 2, dword_697360 == 1) )\n        v2 = dword_697378 > -700;\n    }\n    v3 = 0;\n    goto LABEL_14;\n  }\nLABEL_226:\n  result = (unsigned int)-(signed int)v59;\n  if ( dword_6974EC == 1 )\n    result = (unsigned int)v59;\n  return result;\n}\n", 
            "funcStartAddr": "0x403300L", 
            "funcEndAddr": "0x403f08L", 
            "funcName": "sub_403300"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_403F10()\n{\n  int v0; // er14\n  int v1; // eax\n  signed int v2; // ecx\n  signed int *v3; // rsi\n  int v4; // er11\n  __int64 v5; // rdi\n  __int64 v6; // rdx\n  int v7; // edi\n  signed int v8; // er13\n  signed __int64 v9; // r15\n  __int64 v10; // r10\n  int v11; // er12\n  int v12; // ebx\n  signed int v13; // edx\n  int v14; // eax\n  signed int v15; // edx\n  int v16; // eax\n  int v17; // edx\n  int v18; // eax\n  __int64 v19; // rdx\n  int v20; // er10\n  signed int v21; // ecx\n  int v22; // eax\n  signed int v23; // ecx\n  int v24; // ecx\n  int v25; // eax\n  __int64 v26; // r9\n  int v27; // er8\n  int v28; // eax\n  signed int v29; // ebx\n  int v30; // ecx\n  int v31; // eax\n  signed int v32; // er8\n  int v33; // eax\n  int *v34; // rcx\n  signed int v35; // esi\n  signed int v36; // edi\n  signed int v37; // eax\n  signed int v38; // edx\n  bool v39; // zf\n  int *v40; // rdi\n  signed int v41; // ecx\n  signed int v42; // esi\n  int *v43; // rdx\n  int v44; // eax\n  int *v45; // rcx\n  int *v46; // rcx\n  signed int v47; // esi\n  signed int v48; // edi\n  signed int v49; // eax\n  signed int v50; // edx\n  int *v51; // rdi\n  signed int v52; // ecx\n  signed int v53; // esi\n  int *v54; // rdx\n  int *v55; // rcx\n  int *v56; // rax\n  signed int v57; // edx\n  signed int v58; // esi\n  signed int v59; // edi\n  signed int v60; // ecx\n  signed int v61; // ebx\n  signed int v62; // ebp\n  int *v63; // rdx\n  signed int v64; // eax\n  signed int v65; // edi\n  signed int v66; // esi\n  int *v67; // rbp\n  int v68; // ecx\n  int v69; // edx\n  int *v70; // rsi\n  int v71; // eax\n  unsigned int v72; // edx\n  int v73; // esi\n  int *v74; // rcx\n  int v75; // eax\n  signed int v76; // ebp\n  int v77; // ebx\n  signed int v78; // edi\n  int v79; // edx\n  int *v80; // rsi\n  int v81; // eax\n  signed int v82; // ecx\n  int v83; // ebp\n  int *v84; // rdx\n  int v85; // edi\n  int *v86; // rax\n  int *v87; // rax\n  signed int v88; // esi\n  signed int v89; // ebp\n  signed int v90; // ebx\n  signed int v91; // ecx\n  signed int v92; // edi\n  signed int v93; // edx\n  int *v94; // rsi\n  signed int v95; // eax\n  signed int v96; // ebx\n  signed int v97; // ebp\n  int *v98; // rsi\n  int v99; // ecx\n  int v100; // edx\n  int *v101; // rsi\n  int v102; // eax\n  unsigned int v103; // edx\n  int v104; // esi\n  int *v105; // rcx\n  int v106; // eax\n  signed int v107; // ebp\n  int v108; // ebx\n  signed int v109; // edi\n  int v110; // edx\n  int *v111; // rsi\n  int v112; // eax\n  signed int v113; // ecx\n  int v114; // ebp\n  int *v115; // rdx\n  int v116; // edi\n  int *v117; // rax\n  int *v118; // rcx\n  signed int v119; // esi\n  signed int v120; // edi\n  signed int v121; // eax\n  signed int v122; // edx\n  int *v123; // rdi\n  signed int v124; // ecx\n  signed int v125; // esi\n  int *v126; // rdx\n  int *v127; // rcx\n  int v128; // ecx\n  int *v129; // rcx\n  signed int v130; // esi\n  signed int v131; // edi\n  signed int v132; // eax\n  signed int v133; // edx\n  int *v134; // rdi\n  signed int v135; // ecx\n  signed int v136; // esi\n  int *v137; // rdx\n  int *v138; // rcx\n  int v139; // eax\n  int v140; // edi\n  signed int v141; // eax\n  __int64 result; // rax\n  unsigned int v143; // [rsp+4h] [rbp-124h]\n  int v144; // [rsp+8h] [rbp-120h]\n  int v145; // [rsp+Ch] [rbp-11Ch]\n  int v146; // [rsp+10h] [rbp-118h]\n  int v147; // [rsp+14h] [rbp-114h]\n  int v148; // [rsp+18h] [rbp-110h]\n  int v149; // [rsp+1Ch] [rbp-10Ch]\n  __int64 v150; // [rsp+20h] [rbp-108h]\n  __int64 v151; // [rsp+28h] [rbp-100h]\n  int v152; // [rsp+34h] [rbp-F4h]\n  __int64 v153; // [rsp+38h] [rbp-F0h]\n  __int128 v154; // [rsp+40h] [rbp-E8h]\n  __int128 v155; // [rsp+50h] [rbp-D8h]\n  int v156; // [rsp+60h] [rbp-C8h]\n  __int64 v157; // [rsp+64h] [rbp-C4h]\n  __int128 v158; // [rsp+70h] [rbp-B8h]\n  __int128 v159; // [rsp+80h] [rbp-A8h]\n  int v160; // [rsp+90h] [rbp-98h]\n  __int64 v161; // [rsp+94h] [rbp-94h]\n  __int128 v162; // [rsp+A0h] [rbp-88h]\n  __int128 v163; // [rsp+B0h] [rbp-78h]\n  __int128 v164; // [rsp+C0h] [rbp-68h]\n  __int128 v165; // [rsp+D0h] [rbp-58h]\n  __int128 v166; // [rsp+E0h] [rbp-48h]\n  __int64 v167; // [rsp+F0h] [rbp-38h]\n\n  v143 = 0;\n  v152 = 0;\n  sub_402670(&v143, &v152);\n  if ( v152 )\n    goto LABEL_169;\n  v166 = 0LL;\n  v165 = 0LL;\n  v164 = 0LL;\n  v163 = 0LL;\n  v162 = 0LL;\n  v167 = 0LL;\n  v158 = xmmword_41CDE0;\n  v154 = xmmword_41CDF0;\n  v159 = xmmword_41CDE0;\n  v155 = xmmword_41CDF0;\n  v160 = 7;\n  v156 = 2;\n  v161 = 30064771079LL;\n  v157 = 8589934594LL;\n  v0 = dword_69747C;\n  if ( dword_69747C <= 0 )\n    goto LABEL_173;\n  v1 = 0;\n  v2 = 1;\n  v3 = (_DWORD *)(&xmmword_697050 + 4);\n  v4 = 0;\n  do\n  {\n    v5 = *v3;\n    if ( *v3 )\n    {\n      ++v2;\n      v6 = dword_41A8E0[v5];\n      v1 = v6 + 1;\n      v4 = dword_41AB20[v5];\n      v7 = dword_696070[v5];\n      if ( v7 == 2 )\n      {\n        ++*((_DWORD *)&v162 + v1);\n        if ( v4 > *((_DWORD *)&v154 + v1) )\n          *((_DWORD *)&v154 + v1) = v4;\n      }\n      else if ( v7 == 1 )\n      {\n        ++*((_DWORD *)&v165 + v6);\n        if ( v4 < *((_DWORD *)&v158 + v6 + 1) )\n          *((_DWORD *)&v158 + v6 + 1) = v4;\n      }\n    }\n    ++v3;\n  }\n  while ( v2 <= v0 );\n  if ( v0 <= 0 )\n  {\nLABEL_173:\n    v11 = 0;\n    LODWORD(v10) = 0;\n    v147 = 0;\n    v146 = 0;\n    v145 = 0;\n    v144 = 0;\n    v149 = 0;\n    v148 = 0;\n  }\n  else\n  {\n    v151 = v1 + 1;\n    v150 = v1 - 1;\n    v153 = v1;\n    v8 = 1;\n    v148 = 0;\n    v9 = 1LL;\n    v149 = 0;\n    v144 = 0;\n    v145 = 0;\n    v146 = 0;\n    v147 = 0;\n    v10 = 0LL;\n    v11 = 0;\n    do\n    {\n      v26 = *((signed int *)&xmmword_697050 + v9);\n      if ( *((_DWORD *)&xmmword_697050 + v9) )\n      {\n        ++v8;\n        switch ( dword_696070[v26] )\n        {\n          case 1:\n            v27 = dword_41AB20[v26];\n            v28 = dword_41CF70[v26] + v143 + 4 * (dword_6960A0[v26] == 13) + 8 * v27 - 16;\n            v143 = dword_41CF70[v26] + v143 + 4 * (dword_6960A0[v26] == 13) + 8 * v27 - 16;\n            v29 = 0;\n            if ( *((_DWORD *)&v158 + v151) <= v4 )\n            {\n              v19 = v10;\nLABEL_36:\n              v20 = v28;\n              v21 = 0;\n              goto LABEL_37;\n            }\n            v19 = v10;\n            if ( *((_DWORD *)&v158 + v150) <= v4 )\n              goto LABEL_36;\n            v20 = v28 - 8;\n            v143 = v28 - 8;\n            v21 = 1;\n            if ( !*((_DWORD *)&v164 + v151 + 3) && !*((_DWORD *)&v164 + v150 + 3) )\n            {\n              v143 = v28 - 20;\n              v29 = 1;\n              v20 = v28 - 20;\n              v21 = 1;\n            }\nLABEL_37:\n            v22 = *((_DWORD *)&v162 + v153);\n            if ( !v22 )\n            {\n              if ( v21 )\n              {\n                v20 -= 5;\n                v143 = v20;\n              }\n              if ( v29 )\n              {\n                v20 -= 8;\n                v143 = v20;\n              }\n            }\n            v23 = *((_DWORD *)&v164 + v153 + 3);\n            if ( v23 >= 2 )\n            {\n              v20 = v20 - 8 * v23 + 8;\n              v143 = v20;\n            }\n            if ( !v22 && v4 >= *((_DWORD *)&v154 + v150) && v4 >= *((_DWORD *)&v154 + v151) )\n            {\n              v24 = v20 + 10 * v27 + 5;\n              v20 += 10 * v27 + 55;\n              if ( v27 != 7 )\n                v20 = v24;\n              v143 = v20;\n              v25 = dword_41A8E0[v26];\n              if ( v25 == 8 || v25 == 1 )\n              {\n                v20 += 2 * v27;\n                v143 = v20;\n              }\n              ++v145;\n              if ( !v29 )\n              {\n                v20 += 24;\n                v143 = v20;\n              }\n            }\n            ++v11;\n            ++v149;\n            if ( !*((_DWORD *)&v164 + v150 + 3) )\n              v143 = v20 - 5;\n            v10 = v19;\n            break;\n          case 2:\n            v30 = dword_41AB20[v26];\n            v31 = v143 - dword_41CF70[v26] - 4 * (dword_696040[v26] == 13) + 8 * v30 - 56;\n            v143 = v143 - dword_41CF70[v26] - 4 * (dword_696040[v26] == 13) + 8 * v30 - 56;\n            v32 = 0;\n            if ( *((_DWORD *)&v154 + v151) >= v4 || *((_DWORD *)&v154 + v150) >= v4 )\n            {\n              v12 = v31;\n              v13 = 0;\n            }\n            else\n            {\n              v12 = v31 + 8;\n              v143 = v31 + 8;\n              v13 = 1;\n              if ( !*((_DWORD *)&v162 + v151) && !*((_DWORD *)&v162 + v150) )\n              {\n                v143 = v31 + 20;\n                v32 = 1;\n                v12 = v31 + 20;\n                v13 = 1;\n              }\n            }\n            v14 = *((_DWORD *)&v164 + v153 + 3);\n            if ( !v14 )\n            {\n              if ( v13 )\n              {\n                v12 += 5;\n                v143 = v12;\n              }\n              if ( v32 )\n              {\n                v12 += 8;\n                v143 = v12;\n              }\n            }\n            v15 = *((_DWORD *)&v162 + v153);\n            if ( v15 >= 2 )\n            {\n              v12 = v12 + 8 * v15 - 8;\n              v143 = v12;\n            }\n            if ( !v14 && v4 <= *((_DWORD *)&v158 + v150) && v4 <= *((_DWORD *)&v158 + v151) )\n            {\n              v16 = -10 * (7 - v30);\n              v17 = v16 + v12 - 25;\n              v12 = v16 + v12 - 75;\n              if ( v30 != 2 )\n                v12 = v17;\n              v143 = v12;\n              v18 = dword_41A8E0[v26];\n              if ( v18 == 8 || v18 == 1 )\n              {\n                v12 = v12 + 2 * v30 - 18;\n                v143 = v12;\n              }\n              ++v144;\n              if ( !v32 )\n              {\n                v12 -= 24;\n                v143 = v12;\n              }\n            }\n            v10 = (unsigned int)(v10 + 1);\n            ++v148;\n            if ( !*((_DWORD *)&v162 + v150) )\n              v143 = v12 + 5;\n            break;\n          case 3:\n            ++v11;\n            v33 = v143\n                + 2 * dword_41CF70[v26]\n                + 4\n                * ((dword_696098[v26] == 13)\n                 + (dword_696048[v26] == 13)\n                 + (dword_6960A8[v26] == 13)\n                 + (dword_696038[v26] == 13)\n                 + (dword_6960CC[v26] == 13)\n                 + (dword_696014[v26] == 13)\n                 + (dword_6960D4[v26] == 13)\n                 + (dword_69600C[v26] == 13));\n            goto LABEL_73;\n          case 4:\n            v10 = (unsigned int)(v10 + 1);\n            v33 = v143\n                - 2 * dword_41CF70[v26]\n                - 4\n                * ((dword_696098[v26] == 13)\n                 + (dword_696048[v26] == 13)\n                 + (dword_6960A8[v26] == 13)\n                 + (dword_696038[v26] == 13)\n                 + (dword_6960CC[v26] == 13)\n                 + (dword_696014[v26] == 13)\n                 + (dword_6960D4[v26] == 13)\n                 + (dword_69600C[v26] == 13));\n            goto LABEL_73;\n          case 5:\n            v147 = 2 * dword_41CF70[v26];\n            v33 = (dword_69603C[v26] == 13)\n                + v143\n                + (dword_6960A4[v26] == 13)\n                + (dword_6960A0[v26] == 13)\n                + (dword_69609C[v26] == 13)\n                + (dword_696074[v26] == 13)\n                + (dword_69606C[v26] == 13)\n                + (dword_696044[v26] == 13)\n                + (dword_696040[v26] == 13);\n            goto LABEL_73;\n          case 6:\n            v146 = 2 * dword_41CF70[v26];\n            v33 = v143\n                + -(dword_6960A4[v26] == 13)\n                - (dword_6960A0[v26] == 13)\n                - (dword_69609C[v26] == 13)\n                - (dword_696074[v26] == 13)\n                - (dword_69606C[v26] == 13)\n                - (dword_696044[v26] == 13)\n                - (dword_696040[v26] == 13)\n                - (dword_69603C[v26] == 13);\nLABEL_73:\n            v143 = v33;\n            break;\n          case 7:\n            v34 = &dword_696040[v26];\n            v35 = -1;\n            v36 = -4;\n            do\n            {\n              v37 = v35;\n              v38 = v36;\n              ++v35;\n              v36 += 4;\n              v39 = *v34 == 13;\n              v34 -= 12;\n            }\n            while ( v39 );\n            v40 = &dword_69606C[v26];\n            do\n            {\n              v41 = v37;\n              v42 = v38;\n              ++v37;\n              v38 += 4;\n              v39 = *v40 == 13;\n              --v40;\n            }\n            while ( v39 );\n            v43 = &dword_696074[v26];\n            do\n            {\n              v44 = v42;\n              ++v41;\n              v42 += 4;\n              v39 = *v43 == 13;\n              ++v43;\n            }\n            while ( v39 );\n            v45 = &dword_6960A0[v26];\n            do\n            {\n              v44 += 4;\n              v39 = *v45 == 13;\n              v45 += 12;\n            }\n            while ( v39 );\n            goto LABEL_134;\n          case 8:\n            v46 = &dword_696040[v26];\n            v47 = -1;\n            v48 = 4;\n            do\n            {\n              v49 = v47;\n              v50 = v48;\n              ++v47;\n              v48 -= 4;\n              v39 = *v46 == 13;\n              v46 -= 12;\n            }\n            while ( v39 );\n            v51 = &dword_69606C[v26];\n            do\n            {\n              v52 = v49;\n              v53 = v50;\n              ++v49;\n              v50 -= 4;\n              v39 = *v51 == 13;\n              --v51;\n            }\n            while ( v39 );\n            v54 = &dword_696074[v26];\n            do\n            {\n              v44 = v53;\n              ++v52;\n              v53 -= 4;\n              v39 = *v54 == 13;\n              ++v54;\n            }\n            while ( v39 );\n            v55 = &dword_6960A0[v26];\n            do\n            {\n              v44 -= 4;\n              v39 = *v55 == 13;\n              v55 += 12;\n            }\n            while ( v39 );\n            goto LABEL_143;\n          case 9:\n            v56 = &dword_69603C[v26];\n            v57 = -1;\n            v58 = -10;\n            v59 = -2;\n            do\n            {\n              v60 = v57;\n              v61 = v58;\n              v62 = v59;\n              ++v57;\n              v58 += 2;\n              v59 += 2;\n              v39 = *v56 == 13;\n              v56 -= 13;\n            }\n            while ( v39 );\n            v63 = &dword_696044[v26];\n            do\n            {\n              v64 = v60;\n              v65 = v61;\n              v66 = v62;\n              ++v60;\n              v61 += 2;\n              v62 += 2;\n              v39 = *v63 == 13;\n              v63 -= 11;\n            }\n            while ( v39 );\n            v67 = &dword_69609C[v26];\n            do\n            {\n              v68 = v65;\n              v69 = v66;\n              ++v64;\n              v65 += 2;\n              v66 += 2;\n              v39 = *v67 == 13;\n              v67 += 11;\n            }\n            while ( v39 );\n            v70 = &dword_6960A4[v26];\n            do\n            {\n              v71 = v69;\n              v68 += 2;\n              v69 += 2;\n              v39 = *v70 == 13;\n              v70 += 13;\n            }\n            while ( v39 );\n            v72 = v143;\n            v143 += v68 + 8;\n            v73 = v72 + 4;\n            v74 = &dword_696040[v26];\n            v75 = v72 + v71;\n            v76 = -1;\n            do\n            {\n              v77 = v73;\n              v78 = v76;\n              v79 = v75;\n              v73 += 2;\n              ++v76;\n              v75 += 2;\n              v39 = *v74 == 13;\n              v74 -= 12;\n            }\n            while ( v39 );\n            v80 = &dword_69606C[v26];\n            do\n            {\n              v81 = v77;\n              v82 = v78;\n              v83 = v79;\n              v77 += 2;\n              ++v78;\n              v79 += 2;\n              v39 = *v80 == 13;\n              --v80;\n            }\n            while ( v39 );\n            v84 = &dword_696074[v26];\n            do\n            {\n              v85 = v83;\n              v81 += 2;\n              ++v82;\n              v83 += 2;\n              v39 = *v84 == 13;\n              ++v84;\n            }\n            while ( v39 );\n            v86 = &dword_6960A0[v26];\n            do\n            {\n              v85 += 2;\n              v39 = *v86 == 13;\n              v86 += 12;\n            }\n            while ( v39 );\n            ++v11;\n            v143 = dword_41CF70[v26] + v85;\n            break;\n          case 10:\n            v87 = &dword_69603C[v26];\n            v88 = -1;\n            v89 = 10;\n            v90 = 2;\n            do\n            {\n              v91 = v88;\n              v92 = v89;\n              v93 = v90;\n              ++v88;\n              v89 -= 2;\n              v90 -= 2;\n              v39 = *v87 == 13;\n              v87 -= 13;\n            }\n            while ( v39 );\n            v94 = &dword_696044[v26];\n            do\n            {\n              v95 = v91;\n              v96 = v92;\n              v97 = v93;\n              ++v91;\n              v92 -= 2;\n              v93 -= 2;\n              v39 = *v94 == 13;\n              v94 -= 11;\n            }\n            while ( v39 );\n            v98 = &dword_69609C[v26];\n            do\n            {\n              v99 = v96;\n              v100 = v97;\n              ++v95;\n              v96 -= 2;\n              v97 -= 2;\n              v39 = *v98 == 13;\n              v98 += 11;\n            }\n            while ( v39 );\n            v101 = &dword_6960A4[v26];\n            do\n            {\n              v102 = v100;\n              v99 -= 2;\n              v100 -= 2;\n              v39 = *v101 == 13;\n              v101 += 13;\n            }\n            while ( v39 );\n            v103 = v143;\n            v143 = v143 + v99 - 8;\n            v104 = v103 - 4;\n            v105 = &dword_696040[v26];\n            v106 = v103 + v102;\n            v107 = -1;\n            do\n            {\n              v108 = v104;\n              v109 = v107;\n              v110 = v106;\n              v104 -= 2;\n              ++v107;\n              v106 -= 2;\n              v39 = *v105 == 13;\n              v105 -= 12;\n            }\n            while ( v39 );\n            v111 = &dword_69606C[v26];\n            do\n            {\n              v112 = v108;\n              v113 = v109;\n              v114 = v110;\n              v108 -= 2;\n              ++v109;\n              v110 -= 2;\n              v39 = *v111 == 13;\n              --v111;\n            }\n            while ( v39 );\n            v115 = &dword_696074[v26];\n            do\n            {\n              v116 = v114;\n              v112 -= 2;\n              ++v113;\n              v114 -= 2;\n              v39 = *v115 == 13;\n              ++v115;\n            }\n            while ( v39 );\n            v117 = &dword_6960A0[v26];\n            do\n            {\n              v116 -= 2;\n              v39 = *v117 == 13;\n              v117 += 12;\n            }\n            while ( v39 );\n            v10 = (unsigned int)(v10 + 1);\n            v143 = v116 - dword_41CF70[v26];\n            break;\n          case 11:\n            v118 = &dword_69603C[v26];\n            v119 = -1;\n            v120 = -4;\n            do\n            {\n              v121 = v119;\n              v122 = v120;\n              ++v119;\n              v120 += 4;\n              v39 = *v118 == 13;\n              v118 -= 13;\n            }\n            while ( v39 );\n            v123 = &dword_696044[v26];\n            do\n            {\n              v124 = v121;\n              v125 = v122;\n              ++v121;\n              v122 += 4;\n              v39 = *v123 == 13;\n              v123 -= 11;\n            }\n            while ( v39 );\n            v126 = &dword_69609C[v26];\n            do\n            {\n              v44 = v125;\n              ++v124;\n              v125 += 4;\n              v39 = *v126 == 13;\n              v126 += 11;\n            }\n            while ( v39 );\n            v127 = &dword_6960A4[v26];\n            do\n            {\n              v44 += 4;\n              v39 = *v127 == 13;\n              v127 += 13;\n            }\n            while ( v39 );\nLABEL_134:\n            v128 = v143 + dword_41CF70[v26];\n            ++v11;\n            goto LABEL_144;\n          case 12:\n            v129 = &dword_69603C[v26];\n            v130 = -1;\n            v131 = 4;\n            do\n            {\n              v132 = v130;\n              v133 = v131;\n              ++v130;\n              v131 -= 4;\n              v39 = *v129 == 13;\n              v129 -= 13;\n            }\n            while ( v39 );\n            v134 = &dword_696044[v26];\n            do\n            {\n              v135 = v132;\n              v136 = v133;\n              ++v132;\n              v133 -= 4;\n              v39 = *v134 == 13;\n              v134 -= 11;\n            }\n            while ( v39 );\n            v137 = &dword_69609C[v26];\n            do\n            {\n              v44 = v136;\n              ++v135;\n              v136 -= 4;\n              v39 = *v137 == 13;\n              v137 += 11;\n            }\n            while ( v39 );\n            v138 = &dword_6960A4[v26];\n            do\n            {\n              v44 -= 4;\n              v39 = *v138 == 13;\n              v138 += 13;\n            }\n            while ( v39 );\nLABEL_143:\n            v128 = v143 - dword_41CF70[v26];\n            v10 = (unsigned int)(v10 + 1);\nLABEL_144:\n            v143 = v44 + v128;\n            break;\n          default:\n            break;\n        }\n      }\n      ++v9;\n    }\n    while ( v8 <= v0 );\n  }\n  if ( (signed int)v10 + v11 >= 11 )\n    v143 += v146 - v147;\n  v139 = -dword_697334;\n  if ( -dword_697334 < 1 )\n    v139 = dword_697334;\n  if ( v139 > 900 )\n  {\n    if ( v145 || dword_697334 <= 0 || dword_6973B4 != 1 )\n    {\n      if ( dword_697334 >= 0 || v144 | dword_6973B4 )\n        goto LABEL_151;\n      v141 = -1800;\n    }\n    else\n    {\n      v141 = 1800;\n    }\n    v143 += v141 - dword_697334;\n    v140 = v143;\n    if ( v149 )\n      goto LABEL_152;\nLABEL_164:\n    v140 += 200;\n    goto LABEL_166;\n  }\nLABEL_151:\n  v140 = v143 + dword_697334;\n  v143 += dword_697334;\n  if ( !v149 )\n    goto LABEL_164;\nLABEL_152:\n  if ( v148 )\n  {\n    if ( v11 )\n      goto LABEL_154;\n    goto LABEL_167;\n  }\n  v140 -= 200;\nLABEL_166:\n  v143 = v140;\n  if ( v11 )\n  {\nLABEL_154:\n    if ( !(_DWORD)v10 )\n    {\n      v143 = -1000000;\n      v140 = -1000000;\n    }\n    goto LABEL_168;\n  }\nLABEL_167:\n  v143 = 1000000;\n  v140 = 1000000;\nLABEL_168:\n  sub_402640(v140);\nLABEL_169:\n  result = -v143;\n  if ( dword_6974EC == 1 )\n    result = v143;\n  return result;\n}\n", 
            "funcStartAddr": "0x403f10L", 
            "funcEndAddr": "0x404c91L", 
            "funcName": "sub_403F10"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_404CA0(__int64 a1, int a2, int a3)\n{\n  unsigned __int8 v3; // bl\n  signed __int64 v4; // rsi\n  __int64 v5; // rax\n  __int64 v6; // rcx\n  int v7; // edi\n  char v8; // si\n  __int64 v9; // rdx\n  __int64 v10; // rdx\n  __int64 v12; // rdx\n  int v13; // esi\n  int v14; // edx\n  int v15; // esi\n  __int64 v16; // rdx\n  int v17; // esi\n  int v18; // edx\n  int v19; // esi\n  int v20; // esi\n  int v21; // esi\n  int v22; // er9\n  int v23; // edi\n  __int64 v24; // r8\n  int v25; // er9\n  int v26; // edi\n  __int64 v27; // r8\n  int *v28; // rcx\n  int v29; // eax\n  int *v30; // rcx\n  int *v31; // rcx\n  int *v32; // rcx\n  int v33; // eax\n  int *v34; // rcx\n  int *v35; // rcx\n  int *v36; // rcx\n  int *v37; // rcx\n  int *v38; // rcx\n  int v39; // eax\n  int *v40; // rcx\n  int *v41; // rcx\n  int *v42; // rcx\n  int v43; // eax\n  int *v44; // rcx\n  int *v45; // rcx\n  int *v46; // rcx\n  int *v47; // rcx\n\n  v3 = 1;\n  if ( dword_697360 == 3 )\n    return v3;\n  v4 = 3LL * a2;\n  switch ( (unsigned __int64)*(unsigned int *)(a1 + 8 * v4 + 16) )\n  {\n    case 0uLL:\n      v5 = *(signed int *)(a1 + 8 * v4);\n      v6 = *(signed int *)(a1 + 8 * v4 + 4);\n      if ( dword_6974EC & 1 )\n      {\n        if ( a3 )\n          goto LABEL_20;\n        if ( !(_DWORD)v5 )\n          return v3;\n        if ( *(_DWORD *)(a1 + 8 * v4 + 12) )\n        {\nLABEL_28:\n          if ( *(_DWORD *)(a1 + 8 * v4 + 8) == 13 )\n          {\n            v10 = dword_697370;\n            if ( dword_41AB20[v5] == dword_41AB20[dword_697370] )\n              goto LABEL_140;\n          }\n          else\n          {\nLABEL_42:\n            v10 = dword_697370;\n            if ( dword_41A8E0[v5] == dword_41A8E0[dword_697370] || dword_41AB20[v5] == dword_41AB20[dword_697370] )\n              goto LABEL_140;\n          }\n          if ( dword_41AD60[v5] != dword_41AD60[v10] )\n          {\nLABEL_45:\n            if ( dword_41AFA0[v5] != dword_41AFA0[v10] )\n              return v3;\n          }\n        }\n        else\n        {\n          switch ( dword_696070[v6] )\n          {\n            case 2:\n              goto LABEL_28;\n            case 4:\n              goto LABEL_42;\n            case 8:\n              v16 = dword_697370;\n              if ( dword_41AFA0[v5] == dword_41AFA0[dword_697370] || dword_41AD60[v5] == dword_41AD60[dword_697370] )\n                break;\n              v17 = dword_41AB20[v5];\n              if ( v17 != dword_41AB20[v6] )\n                goto LABEL_72;\n              if ( dword_41A8E0[v5] == dword_41A8E0[dword_697370] )\n                break;\n              return v3;\n            case 10:\n              v18 = dword_41A8E0[v5];\n              if ( v18 == dword_41A8E0[v6] )\n              {\n                v16 = dword_697370;\n                if ( dword_41AFA0[v5] != dword_41AFA0[dword_697370] && dword_41AD60[v5] != dword_41AD60[dword_697370] )\n                {\n                  v17 = dword_41AB20[v5];\nLABEL_72:\n                  if ( v17 != dword_41AB20[v16] )\n                    return v3;\n                }\n              }\n              else\n              {\n                v21 = dword_41AB20[v5];\n                if ( v21 == dword_41AB20[v6] )\n                {\n                  if ( dword_41AFA0[v5] != dword_41AFA0[dword_697370]\n                    && v18 != dword_41A8E0[dword_697370]\n                    && dword_41AD60[v5] != dword_41AD60[dword_697370] )\n                  {\n                    return v3;\n                  }\n                }\n                else\n                {\n                  v25 = dword_41AD60[v5];\n                  v26 = dword_41AFA0[v5];\n                  if ( v25 == dword_41AD60[v6] )\n                  {\n                    v27 = dword_697370;\n                    if ( v26 == dword_41AFA0[dword_697370] )\n                      break;\n                  }\n                  else\n                  {\n                    if ( v26 != dword_41AFA0[v6] )\n                      break;\n                    v27 = dword_697370;\n                    if ( v25 == dword_41AD60[dword_697370] )\n                      break;\n                  }\n                  if ( v18 != dword_41A8E0[v27] && v21 != dword_41AB20[v27] )\n                    return v3;\n                }\n              }\n              break;\n            case 12:\n              v10 = dword_697370;\n              if ( dword_41A8E0[v5] == dword_41A8E0[dword_697370] || dword_41AB20[v5] == dword_41AB20[dword_697370] )\n                break;\n              v19 = dword_41AD60[v5];\n              if ( v19 == dword_41AD60[v6] )\n                goto LABEL_45;\n              if ( v19 == dword_41AD60[dword_697370] )\n                break;\n              return v3;\n            default:\n              break;\n          }\n        }\nLABEL_140:\n        if ( dword_696070[v6] != 6 )\n        {\n          if ( dword_41A8E0[v5] == dword_41A8E0[dword_697370] )\n          {\n            if ( dword_697370 <= (signed int)v5 )\n            {\n              v41 = &dword_6960A0[dword_697370];\n              do\n              {\n                v39 = *v41;\n                v41 += 12;\n              }\n              while ( v39 == 13 );\n            }\n            else\n            {\n              v38 = &dword_696040[dword_697370];\n              do\n              {\n                v39 = *v38;\n                v38 -= 12;\n              }\n              while ( v39 == 13 );\n            }\n          }\n          else\n          {\n            if ( dword_41AB20[v5] != dword_41AB20[dword_697370] )\n            {\n              if ( dword_41AD60[v5] == dword_41AD60[dword_697370] )\n              {\n                if ( dword_697370 <= (signed int)v5 )\n                {\n                  v46 = &dword_6960A4[dword_697370];\n                  do\n                  {\n                    v43 = *v46;\n                    v46 += 13;\n                  }\n                  while ( v43 == 13 );\n                }\n                else\n                {\n                  v42 = &dword_69603C[dword_697370];\n                  do\n                  {\n                    v43 = *v42;\n                    v42 -= 13;\n                  }\n                  while ( v43 == 13 );\n                }\n              }\n              else\n              {\n                if ( dword_41AFA0[v5] != dword_41AFA0[dword_697370] )\n                  return v3;\n                if ( dword_697370 <= (signed int)v5 )\n                {\n                  v47 = &dword_69609C[dword_697370];\n                  do\n                  {\n                    v43 = *v47;\n                    v47 += 11;\n                  }\n                  while ( v43 == 13 );\n                }\n                else\n                {\n                  v45 = &dword_696044[dword_697370];\n                  do\n                  {\n                    v43 = *v45;\n                    v45 -= 11;\n                  }\n                  while ( v43 == 13 );\n                }\n              }\n              if ( v43 == 9 || v43 == 11 )\n                return 0;\n              return v3;\n            }\n            if ( dword_697370 <= (signed int)v5 )\n            {\n              v44 = &dword_696074[dword_697370];\n              do\n              {\n                v39 = *v44;\n                ++v44;\n              }\n              while ( v39 == 13 );\n            }\n            else\n            {\n              v40 = &dword_69606C[dword_697370];\n              do\n              {\n                v39 = *v40;\n                --v40;\n              }\n              while ( v39 == 13 );\n            }\n          }\n          if ( v39 == 7 || v39 == 9 )\n            return 0;\n          return v3;\n        }\nLABEL_20:\n        v7 = dword_697370;\nLABEL_32:\n        v8 = 1;\n        return (unsigned int)sub_401480(v7, v8) == 0;\n      }\n      if ( a3 )\n      {\nLABEL_5:\n        v7 = dword_6974F0;\n        goto LABEL_12;\n      }\n      if ( !(_DWORD)v5 )\n        return v3;\n      if ( !*(_DWORD *)(a1 + 8 * v4 + 12) )\n      {\n        switch ( dword_696070[v6] )\n        {\n          case 1:\n            goto LABEL_23;\n          case 3:\n            goto LABEL_36;\n          case 7:\n            v12 = dword_6974F0;\n            if ( dword_41AFA0[v5] == dword_41AFA0[dword_6974F0] || dword_41AD60[v5] == dword_41AD60[dword_6974F0] )\n              goto LABEL_99;\n            v13 = dword_41AB20[v5];\n            if ( v13 != dword_41AB20[v6] )\n              goto LABEL_56;\n            if ( dword_41A8E0[v5] == dword_41A8E0[dword_6974F0] )\n              goto LABEL_99;\n            return v3;\n          case 9:\n            v14 = dword_41A8E0[v5];\n            if ( v14 == dword_41A8E0[v6] )\n            {\n              v12 = dword_6974F0;\n              if ( dword_41AFA0[v5] != dword_41AFA0[dword_6974F0] && dword_41AD60[v5] != dword_41AD60[dword_6974F0] )\n              {\n                v13 = dword_41AB20[v5];\nLABEL_56:\n                if ( v13 != dword_41AB20[v12] )\n                  return v3;\n              }\n            }\n            else\n            {\n              v20 = dword_41AB20[v5];\n              if ( v20 == dword_41AB20[v6] )\n              {\n                if ( dword_41AFA0[v5] != dword_41AFA0[dword_6974F0]\n                  && v14 != dword_41A8E0[dword_6974F0]\n                  && dword_41AD60[v5] != dword_41AD60[dword_6974F0] )\n                {\n                  return v3;\n                }\n              }\n              else\n              {\n                v22 = dword_41AD60[v5];\n                v23 = dword_41AFA0[v5];\n                if ( v22 == dword_41AD60[v6] )\n                {\n                  v24 = dword_6974F0;\n                  if ( v23 == dword_41AFA0[dword_6974F0] )\n                    goto LABEL_99;\n                }\n                else\n                {\n                  if ( v23 != dword_41AFA0[v6] )\n                    goto LABEL_99;\n                  v24 = dword_6974F0;\n                  if ( v22 == dword_41AD60[dword_6974F0] )\n                    goto LABEL_99;\n                }\n                if ( v14 != dword_41A8E0[v24] && v20 != dword_41AB20[v24] )\n                  return v3;\n              }\n            }\n            break;\n          case 11:\n            v9 = dword_6974F0;\n            if ( dword_41A8E0[v5] == dword_41A8E0[dword_6974F0] || dword_41AB20[v5] == dword_41AB20[dword_6974F0] )\n              goto LABEL_99;\n            v15 = dword_41AD60[v5];\n            if ( v15 == dword_41AD60[v6] )\n              goto LABEL_39;\n            if ( v15 == dword_41AD60[dword_6974F0] )\n              goto LABEL_99;\n            return v3;\n          default:\n            goto LABEL_99;\n        }\n        goto LABEL_99;\n      }\nLABEL_23:\n      if ( *(_DWORD *)(a1 + 8 * v4 + 8) != 13 )\n      {\nLABEL_36:\n        v9 = dword_6974F0;\n        if ( dword_41A8E0[v5] == dword_41A8E0[dword_6974F0] || dword_41AB20[v5] == dword_41AB20[dword_6974F0] )\n          goto LABEL_99;\nLABEL_38:\n        if ( dword_41AD60[v5] != dword_41AD60[v9] )\n        {\nLABEL_39:\n          if ( dword_41AFA0[v5] != dword_41AFA0[v9] )\n            return v3;\n        }\n        goto LABEL_99;\n      }\n      v9 = dword_6974F0;\n      if ( dword_41AB20[v5] != dword_41AB20[dword_6974F0] )\n        goto LABEL_38;\nLABEL_99:\n      if ( dword_696070[v6] == 5 )\n        goto LABEL_5;\n      if ( dword_41A8E0[v5] == dword_41A8E0[dword_6974F0] )\n      {\n        if ( dword_6974F0 <= (signed int)v5 )\n        {\n          v31 = &dword_6960A0[dword_6974F0];\n          do\n          {\n            v29 = *v31;\n            v31 += 12;\n          }\n          while ( v29 == 13 );\n        }\n        else\n        {\n          v28 = &dword_696040[dword_6974F0];\n          do\n          {\n            v29 = *v28;\n            v28 -= 12;\n          }\n          while ( v29 == 13 );\n        }\n        goto LABEL_120;\n      }\n      if ( dword_41AB20[v5] == dword_41AB20[dword_6974F0] )\n      {\n        if ( dword_6974F0 <= (signed int)v5 )\n        {\n          v34 = &dword_696074[dword_6974F0];\n          do\n          {\n            v29 = *v34;\n            ++v34;\n          }\n          while ( v29 == 13 );\n        }\n        else\n        {\n          v30 = &dword_69606C[dword_6974F0];\n          do\n          {\n            v29 = *v30;\n            --v30;\n          }\n          while ( v29 == 13 );\n        }\nLABEL_120:\n        if ( v29 != 8 && v29 != 10 )\n          return v3;\n        return 0;\n      }\n      if ( dword_41AD60[v5] == dword_41AD60[dword_6974F0] )\n      {\n        if ( dword_6974F0 <= (signed int)v5 )\n        {\n          v36 = &dword_6960A4[dword_6974F0];\n          do\n          {\n            v33 = *v36;\n            v36 += 13;\n          }\n          while ( v33 == 13 );\n        }\n        else\n        {\n          v32 = &dword_69603C[dword_6974F0];\n          do\n          {\n            v33 = *v32;\n            v32 -= 13;\n          }\n          while ( v33 == 13 );\n        }\n      }\n      else\n      {\n        if ( dword_41AFA0[v5] != dword_41AFA0[dword_6974F0] )\n          return v3;\n        if ( dword_6974F0 <= (signed int)v5 )\n        {\n          v37 = &dword_69609C[dword_6974F0];\n          do\n          {\n            v33 = *v37;\n            v37 += 11;\n          }\n          while ( v33 == 13 );\n        }\n        else\n        {\n          v35 = &dword_696044[dword_6974F0];\n          do\n          {\n            v33 = *v35;\n            v35 -= 11;\n          }\n          while ( v33 == 13 );\n        }\n      }\n      if ( v33 == 10 || v33 == 12 )\n        return 0;\n      return v3;\n    case 1uLL:\n      v3 = 0;\n      if ( (unsigned int)sub_401480(30, 0) )\n        return v3;\n      v3 = 0;\n      if ( (unsigned int)sub_401480(31, 0) )\n        return v3;\n      v7 = 32;\n      goto LABEL_12;\n    case 2uLL:\n      v3 = 0;\n      if ( (unsigned int)sub_401480(30, 0) )\n        return v3;\n      v3 = 0;\n      if ( (unsigned int)sub_401480(29, 0) )\n        return v3;\n      v7 = 28;\nLABEL_12:\n      v8 = 0;\n      return (unsigned int)sub_401480(v7, v8) == 0;\n    case 3uLL:\n      if ( (unsigned int)sub_401480(114, 1) || (unsigned int)sub_401480(115, 1) )\n        return 0;\n      v7 = 116;\n      goto LABEL_32;\n    case 4uLL:\n      if ( (unsigned int)sub_401480(114, 1) || (unsigned int)sub_401480(113, 1) )\n        return 0;\n      v7 = 112;\n      goto LABEL_32;\n    default:\n      return 0;\n  }\n}\n", 
            "funcStartAddr": "0x404ca0L", 
            "funcEndAddr": "0x405534L", 
            "funcName": "sub_404CA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_405540(__int64 a1)\n{\n  signed int v1; // eax\n  int *v2; // rcx\n  signed int i; // edx\n  signed int v4; // er12\n  int *v5; // rbp\n  __int64 v6; // rbx\n  signed __int64 v7; // rdi\n  int v8; // er14\n  __int64 v9; // rcx\n  int v10; // eax\n  signed __int64 v11; // rdx\n  __int64 v12; // rcx\n  int v13; // eax\n  signed __int64 v14; // rdx\n  unsigned int v15; // ebx\n  signed __int64 v16; // rdi\n  __int64 v17; // rdx\n  int v18; // ecx\n  signed __int64 v19; // rsi\n  unsigned int v20; // er14\n  int v21; // eax\n  unsigned int v22; // er15\n  int v23; // eax\n  bool v24; // zf\n  __int64 v25; // rcx\n  signed __int64 v26; // rdx\n  __m128i *v27; // rcx\n  __m128i v28; // xmm0\n  __int64 v29; // rcx\n  signed __int64 v30; // rdx\n  signed int v31; // er12\n  int *v32; // rbp\n  __int64 v33; // rbx\n  signed __int64 v34; // rdi\n  int v35; // er14\n  __int64 v36; // rcx\n  int v37; // eax\n  signed __int64 v38; // rdx\n  __int64 v39; // rcx\n  int v40; // eax\n  signed __int64 v41; // rdx\n  unsigned int v42; // ebx\n  signed __int64 v43; // rdi\n  __int64 v44; // rdx\n  int v45; // ecx\n  signed __int64 v46; // rsi\n  unsigned int v47; // er14\n  int v48; // eax\n  unsigned int v49; // er15\n  int v50; // eax\n  __int64 v51; // rcx\n  signed __int64 v52; // rdx\n  __m128i *v53; // rcx\n  __m128i v54; // xmm0\n  __int64 v55; // rcx\n  signed __int64 v56; // rdx\n  signed int v57; // ecx\n  __int64 v58; // rax\n  __m128i v59; // xmm0\n  int v60; // esi\n  int v61; // edx\n  int v62; // esi\n  signed __int64 v63; // rdi\n  int v64; // esi\n  signed __int64 v65; // rdi\n  int v66; // esi\n  signed __int64 v67; // rdi\n  int v68; // esi\n  signed __int64 v69; // rdi\n  int v70; // esi\n  signed __int64 v71; // rdi\n  bool v72; // sf\n  unsigned __int8 v73; // of\n  signed int v74; // ecx\n  __int64 v75; // rax\n  __m128i v76; // xmm0\n  int v77; // esi\n  int v78; // edx\n  int v79; // esi\n  signed __int64 v80; // rdi\n  int v81; // esi\n  signed __int64 v82; // rdi\n  int v83; // esi\n  signed __int64 v84; // rdi\n  int v85; // esi\n  signed __int64 v86; // rdi\n  int v87; // esi\n  signed __int64 v88; // rdi\n  __int64 result; // rax\n  __int128 v90; // [rsp+0h] [rbp-38h]\n\n  dword_697424 = 0;\n  dword_697468 = 0;\n  qword_422648 = a1;\n  v1 = dword_697360;\n  if ( dword_697360 != 3 )\n    goto LABEL_4;\n  v2 = &dword_6973DC;\n  for ( i = 0; ; i = 1 )\n  {\n    dword_697388 = i;\n    *v2 = 0;\nLABEL_4:\n    if ( dword_6974EC )\n    {\n      if ( dword_69747C <= 0 )\n        goto LABEL_200;\n      v4 = 1;\n      v5 = (_DWORD *)(&xmmword_697050 + 4);\n      _mm_store_si128((__m128i *)&v90, _mm_cvtsi32_si128(0xDu));\n      if ( v1 != 3 )\n        goto LABEL_7;\n      while ( 1 )\n      {\nLABEL_10:\n        if ( v1 != 3 || dword_6973DC != dword_697388 )\n          goto LABEL_200;\n        while ( 1 )\n        {\n          v6 = *v5;\n          if ( *v5 )\n          {\n            dword_6973F4 = *v5;\n            ++v4;\n            switch ( dword_696070[v6] )\n            {\n              case 1:\n                if ( dword_6960A0[v6] == 13 )\n                {\n                  v7 = v6 + 12;\n                  v8 = dword_41AB20[v6];\n                  if ( (unsigned int)(v1 - 3) < 2 || v8 != 7 )\n                  {\n                    if ( !dword_697388 )\n                    {\n                      sub_4064F0(v7, 0LL);\n                      if ( v8 == 2 && dword_6960D0[v6] == 13 )\n                      {\n                        v17 = qword_422648;\n                        *(_DWORD *)(qword_422648 + 24LL * dword_697468) = dword_6973F4;\n                        v18 = dword_697468;\n                        v19 = 3LL * dword_697468;\n                        *(_DWORD *)(v17 + 8 * v19 + 4) = v6 + 24;\n                        _mm_storeu_si128((__m128i *)(v17 + 8 * v19 + 8), _mm_load_si128((const __m128i *)&v90));\n                        dword_697468 = v18 + 1;\n                      }\n                    }\n                  }\n                  else\n                  {\n                    sub_4064F0(v7, 0LL);\n                  }\n                }\n                v20 = v6 + 13;\n                v21 = dword_6960A4[v6];\n                if ( v21 && !(v21 & 1) )\n                  sub_4064F0(v20, 0LL);\n                v22 = v6 + 11;\n                v23 = dword_69609C[v6];\n                if ( v23 && !(v23 & 1) )\n                  sub_4064F0(v22, 0LL);\n                if ( dword_6973C4 == v20 )\n                {\n                  v24 = dword_696070[dword_6973F4] == 1;\n                  dword_6973DC = 1;\n                  v25 = qword_422648;\n                  *(_DWORD *)(qword_422648 + 24LL * dword_697468) = dword_6973F4;\n                  v13 = dword_697468;\n                  v26 = 3LL * dword_697468;\n                  *(_DWORD *)(v25 + 8 * v26 + 4) = v20;\n                  v27 = (__m128i *)(v25 + 8 * v26 + 8);\n                  if ( v24 )\n                    goto LABEL_95;\n                }\n                else\n                {\n                  if ( dword_6973C4 != v22 )\n                    break;\n                  v24 = dword_696070[dword_6973F4] == 1;\n                  dword_6973DC = 1;\n                  v29 = qword_422648;\n                  *(_DWORD *)(qword_422648 + 24LL * dword_697468) = dword_6973F4;\n                  v13 = dword_697468;\n                  v30 = 3LL * dword_697468;\n                  *(_DWORD *)(v29 + 8 * v30 + 4) = v22;\n                  v27 = (__m128i *)(v29 + 8 * v30 + 8);\n                  if ( v24 )\n                  {\nLABEL_95:\n                    v28 = _mm_load_si128((const __m128i *)&xmmword_41CE30);\n                    goto LABEL_99;\n                  }\n                }\n                v28 = _mm_load_si128((const __m128i *)&xmmword_41CE20);\nLABEL_99:\n                _mm_storeu_si128(v27, v28);\nLABEL_100:\n                dword_697468 = v13 + 1;\n                break;\n              case 3:\n                if ( dword_69600C[v6] )\n                  sub_406AD0(v6 - 25);\n                if ( dword_696014[v6] )\n                  sub_406AD0(v6 - 23);\n                if ( dword_696038[v6] )\n                  sub_406AD0(v6 - 14);\n                if ( dword_696048[v6] )\n                  sub_406AD0(v6 - 10);\n                if ( dword_696098[v6] )\n                  sub_406AD0(v6 + 10);\n                if ( dword_6960A8[v6] )\n                  sub_406AD0(v6 + 14);\n                if ( dword_6960CC[v6] )\n                  sub_406AD0(v6 + 23);\n                if ( !dword_6960D4[v6] )\n                  break;\n                sub_406AD0((unsigned int)(v6 + 25));\n                if ( v4 <= dword_69747C )\n                  goto LABEL_9;\n                goto LABEL_200;\n              case 5:\n                sub_406CE0((unsigned int)(v6 - 13));\n                sub_406CE0((unsigned int)(v6 - 12));\n                sub_406CE0((unsigned int)(v6 - 11));\n                sub_406CE0((unsigned int)(v6 - 1));\n                sub_406CE0((unsigned int)(v6 + 1));\n                sub_406CE0((unsigned int)(v6 + 11));\n                sub_406CE0((unsigned int)(v6 + 12));\n                sub_406CE0((unsigned int)(v6 + 13));\n                if ( (_DWORD)v6 != 30 || dword_696328 | dword_697388 || dword_697360 == 3 && dword_697330 != 1 )\n                  break;\n                if ( !dword_696334 && dword_6960F4 == 7 && dword_6960EC == 13 && dword_6960F0 == 13 )\n                {\n                  v9 = qword_422648;\n                  *(_DWORD *)(qword_422648 + 24LL * dword_697468) = dword_6973F4;\n                  v10 = dword_697468;\n                  v11 = 3LL * dword_697468;\n                  _mm_storeu_si128(\n                    (__m128i *)(v9 + 24LL * dword_697468 + 4),\n                    _mm_load_si128((const __m128i *)&xmmword_41CE00));\n                  *(_DWORD *)(v9 + 8 * v11 + 20) = 0;\n                  dword_697468 = v10 + 1;\n                }\n                if ( dword_696318 || dword_6960D8 != 7 || dword_6960DC != 13 || dword_6960E0 != 13 || dword_6960E4 != 13 )\n                  break;\n                v12 = qword_422648;\n                *(_DWORD *)(qword_422648 + 24LL * dword_697468) = dword_6973F4;\n                v13 = dword_697468;\n                v14 = 3LL * dword_697468;\n                _mm_storeu_si128(\n                  (__m128i *)(v12 + 24LL * dword_697468 + 4),\n                  _mm_load_si128((const __m128i *)&xmmword_41CE10));\n                *(_DWORD *)(v12 + 8 * v14 + 20) = 0;\n                goto LABEL_100;\n              case 7:\n                if ( dword_696040[v6] )\n                  sub_406BB0(v6 - 12);\n                if ( dword_69606C[v6] )\n                  sub_406BB0(v6 - 1);\n                if ( dword_696074[v6] )\n                  sub_406BB0(v6 + 1);\n                if ( !dword_6960A0[v6] )\n                  break;\n                v15 = v6 + 12;\n                goto LABEL_81;\n              case 9:\n                if ( dword_69603C[v6] )\n                  sub_406BB0(v6 - 13);\n                if ( dword_696040[v6] )\n                  sub_406BB0(v6 - 12);\n                if ( dword_696044[v6] )\n                  sub_406BB0(v6 - 11);\n                if ( dword_69606C[v6] )\n                  sub_406BB0(v6 - 1);\n                if ( dword_696074[v6] )\n                  sub_406BB0(v6 + 1);\n                if ( dword_69609C[v6] )\n                  sub_406BB0(v6 + 11);\n                if ( !dword_6960A0[v6] )\n                  goto LABEL_79;\n                v16 = v6 + 12;\n                goto LABEL_78;\n              case 11:\n                if ( dword_69603C[v6] )\n                  sub_406BB0(v6 - 13);\n                if ( dword_696044[v6] )\n                  sub_406BB0(v6 - 11);\n                if ( dword_69609C[v6] )\n                {\n                  v16 = v6 + 11;\nLABEL_78:\n                  sub_406BB0(v16);\n                }\nLABEL_79:\n                if ( !dword_6960A4[v6] )\n                  break;\n                v15 = v6 + 13;\nLABEL_81:\n                sub_406BB0(v15);\n                if ( v4 > dword_69747C )\n                  goto LABEL_200;\n                goto LABEL_9;\n              default:\n                break;\n            }\n          }\n          if ( v4 > dword_69747C )\n            goto LABEL_200;\nLABEL_9:\n          v1 = dword_697360;\n          ++v5;\n          if ( dword_697360 == 3 )\n            break;\nLABEL_7:\n          if ( dword_697424 )\n            goto LABEL_10;\n        }\n      }\n    }\n    if ( dword_69747C <= 0 )\n      goto LABEL_200;\n    v31 = 1;\n    v32 = (_DWORD *)(&xmmword_697050 + 4);\n    _mm_store_si128((__m128i *)&v90, _mm_cvtsi32_si128(0xDu));\n    if ( v1 != 3 )\n    {\nLABEL_105:\n      if ( !dword_697424 )\n        goto LABEL_110;\n      goto LABEL_108;\n    }\n    while ( 1 )\n    {\nLABEL_108:\n      if ( v1 != 3 || dword_6973DC != dword_697388 )\n        break;\nLABEL_110:\n      v33 = *v32;\n      if ( *v32 )\n      {\n        dword_6973F4 = *v32;\n        ++v31;\n        switch ( dword_696070[v33] )\n        {\n          case 2:\n            if ( dword_696040[v33] == 13 )\n            {\n              v34 = v33 - 12;\n              v35 = dword_41AB20[v33];\n              if ( (unsigned int)(v1 - 3) < 2 || v35 != 2 )\n              {\n                if ( !dword_697388 )\n                {\n                  sub_4064F0(v34, 0LL);\n                  if ( v35 == 7 && dword_696010[v33] == 13 )\n                  {\n                    v44 = qword_422648;\n                    *(_DWORD *)(qword_422648 + 24LL * dword_697468) = dword_6973F4;\n                    v45 = dword_697468;\n                    v46 = 3LL * dword_697468;\n                    *(_DWORD *)(v44 + 8 * v46 + 4) = v33 - 24;\n                    _mm_storeu_si128((__m128i *)(v44 + 8 * v46 + 8), _mm_load_si128((const __m128i *)&v90));\n                    dword_697468 = v45 + 1;\n                  }\n                }\n              }\n              else\n              {\n                sub_4064F0(v34, 0LL);\n              }\n            }\n            v47 = v33 - 13;\n            v48 = dword_69603C[v33];\n            if ( v48 != 13 && v48 & 1 )\n              sub_4064F0(v47, 0LL);\n            v49 = v33 - 11;\n            v50 = dword_696044[v33];\n            if ( v50 != 13 && v50 & 1 )\n              sub_4064F0(v49, 0LL);\n            if ( dword_6973C4 == v47 )\n            {\n              v24 = dword_696070[dword_6973F4] == 1;\n              dword_6973DC = 1;\n              v51 = qword_422648;\n              *(_DWORD *)(qword_422648 + 24LL * dword_697468) = dword_6973F4;\n              v40 = dword_697468;\n              v52 = 3LL * dword_697468;\n              *(_DWORD *)(v51 + 8 * v52 + 4) = v47;\n              v53 = (__m128i *)(v51 + 8 * v52 + 8);\n              if ( v24 )\n                goto LABEL_193;\n            }\n            else\n            {\n              if ( dword_6973C4 != v49 )\n                break;\n              v24 = dword_696070[dword_6973F4] == 1;\n              dword_6973DC = 1;\n              v55 = qword_422648;\n              *(_DWORD *)(qword_422648 + 24LL * dword_697468) = dword_6973F4;\n              v40 = dword_697468;\n              v56 = 3LL * dword_697468;\n              *(_DWORD *)(v55 + 8 * v56 + 4) = v49;\n              v53 = (__m128i *)(v55 + 8 * v56 + 8);\n              if ( v24 )\n              {\nLABEL_193:\n                v54 = _mm_load_si128((const __m128i *)&xmmword_41CE30);\n                goto LABEL_197;\n              }\n            }\n            v54 = _mm_load_si128((const __m128i *)&xmmword_41CE20);\nLABEL_197:\n            _mm_storeu_si128(v53, v54);\nLABEL_198:\n            dword_697468 = v40 + 1;\n            break;\n          case 4:\n            if ( dword_69600C[v33] )\n              sub_406AD0(v33 - 25);\n            if ( dword_696014[v33] )\n              sub_406AD0(v33 - 23);\n            if ( dword_696038[v33] )\n              sub_406AD0(v33 - 14);\n            if ( dword_696048[v33] )\n              sub_406AD0(v33 - 10);\n            if ( dword_696098[v33] )\n              sub_406AD0(v33 + 10);\n            if ( dword_6960A8[v33] )\n              sub_406AD0(v33 + 14);\n            if ( dword_6960CC[v33] )\n              sub_406AD0(v33 + 23);\n            if ( !dword_6960D4[v33] )\n              break;\n            sub_406AD0((unsigned int)(v33 + 25));\n            if ( v31 <= dword_69747C )\n              goto LABEL_107;\n            goto LABEL_200;\n          case 6:\n            sub_406CE0((unsigned int)(v33 - 13));\n            sub_406CE0((unsigned int)(v33 - 12));\n            sub_406CE0((unsigned int)(v33 - 11));\n            sub_406CE0((unsigned int)(v33 - 1));\n            sub_406CE0((unsigned int)(v33 + 1));\n            sub_406CE0((unsigned int)(v33 + 11));\n            sub_406CE0((unsigned int)(v33 + 12));\n            sub_406CE0((unsigned int)(v33 + 13));\n            if ( (_DWORD)v33 != 114 || dword_696478 | dword_697388 || dword_697360 == 3 && dword_697330 != 1 )\n              break;\n            if ( !dword_696484 && dword_696244 == 8 && dword_69623C == 13 && dword_696240 == 13 )\n            {\n              v36 = qword_422648;\n              *(_DWORD *)(qword_422648 + 24LL * dword_697468) = dword_6973F4;\n              v37 = dword_697468;\n              v38 = 3LL * dword_697468;\n              _mm_storeu_si128(\n                (__m128i *)(v36 + 24LL * dword_697468 + 4),\n                _mm_load_si128((const __m128i *)&xmmword_41CE40));\n              *(_DWORD *)(v36 + 8 * v38 + 20) = 0;\n              dword_697468 = v37 + 1;\n            }\n            if ( dword_696468 || dword_696228 != 8 || dword_69622C != 13 || dword_696230 != 13 || dword_696234 != 13 )\n              break;\n            v39 = qword_422648;\n            *(_DWORD *)(qword_422648 + 24LL * dword_697468) = dword_6973F4;\n            v40 = dword_697468;\n            v41 = 3LL * dword_697468;\n            _mm_storeu_si128(\n              (__m128i *)(v39 + 24LL * dword_697468 + 4),\n              _mm_load_si128((const __m128i *)&xmmword_41CE50));\n            *(_DWORD *)(v39 + 8 * v41 + 20) = 0;\n            goto LABEL_198;\n          case 8:\n            if ( dword_696040[v33] )\n              sub_406BB0(v33 - 12);\n            if ( dword_69606C[v33] )\n              sub_406BB0(v33 - 1);\n            if ( dword_696074[v33] )\n              sub_406BB0(v33 + 1);\n            if ( !dword_6960A0[v33] )\n              break;\n            v42 = v33 + 12;\n            goto LABEL_179;\n          case 10:\n            if ( dword_69603C[v33] )\n              sub_406BB0(v33 - 13);\n            if ( dword_696040[v33] )\n              sub_406BB0(v33 - 12);\n            if ( dword_696044[v33] )\n              sub_406BB0(v33 - 11);\n            if ( dword_69606C[v33] )\n              sub_406BB0(v33 - 1);\n            if ( dword_696074[v33] )\n              sub_406BB0(v33 + 1);\n            if ( dword_69609C[v33] )\n              sub_406BB0(v33 + 11);\n            if ( !dword_6960A0[v33] )\n              goto LABEL_177;\n            v43 = v33 + 12;\n            goto LABEL_176;\n          case 12:\n            if ( dword_69603C[v33] )\n              sub_406BB0(v33 - 13);\n            if ( dword_696044[v33] )\n              sub_406BB0(v33 - 11);\n            if ( dword_69609C[v33] )\n            {\n              v43 = v33 + 11;\nLABEL_176:\n              sub_406BB0(v43);\n            }\nLABEL_177:\n            if ( !dword_6960A4[v33] )\n              break;\n            v42 = v33 + 13;\nLABEL_179:\n            sub_406BB0(v42);\n            if ( v31 > dword_69747C )\n              goto LABEL_200;\n            goto LABEL_107;\n          default:\n            break;\n        }\n      }\n      if ( v31 > dword_69747C )\n        break;\nLABEL_107:\n      v1 = dword_697360;\n      ++v32;\n      if ( dword_697360 != 3 )\n        goto LABEL_105;\n    }\nLABEL_200:\n    if ( (unsigned int)dword_697360 <= 1 && !(dword_697388 | dword_697424) )\n    {\n      if ( dword_6974EC )\n      {\n        if ( HIDWORD(xmmword_6971F0) | DWORD1(xmmword_697200) | HIDWORD(xmmword_697200) | DWORD1(xmmword_6971E0) | HIDWORD(xmmword_6971E0) )\n        {\n          v57 = 26;\n          v58 = qword_422648;\n          v59 = _mm_load_si128((const __m128i *)&xmmword_41CEA0);\n          do\n          {\n            dword_6973F4 = v57;\n            v60 = dword_696070[v57];\n            if ( v60 == 13 )\n            {\n              if ( DWORD1(xmmword_6971E0) )\n              {\n                v61 = dword_41AB20[v57];\n                if ( v61 != 1 && v61 != 8 )\n                {\n                  *(_DWORD *)(v58 + 24LL * dword_697468) = 0;\n                  v62 = dword_697468;\n                  v63 = 3LL * dword_697468;\n                  *(_DWORD *)(v58 + 8 * v63 + 4) = dword_6973F4;\n                  *(_OWORD *)(v58 + 8 * v63 + 8) = xmmword_41CE60;\n                  dword_697468 = v62 + 1;\n                }\n              }\n              if ( HIDWORD(xmmword_6971E0) )\n              {\n                *(_DWORD *)(v58 + 24LL * dword_697468) = 0;\n                v64 = dword_697468;\n                v65 = 3LL * dword_697468;\n                *(_DWORD *)(v58 + 8 * v65 + 4) = dword_6973F4;\n                *(_OWORD *)(v58 + 8 * v65 + 8) = xmmword_41CE70;\n                dword_697468 = v64 + 1;\n              }\n              if ( HIDWORD(xmmword_697200) )\n              {\n                *(_DWORD *)(v58 + 24LL * dword_697468) = 0;\n                v66 = dword_697468;\n                v67 = 3LL * dword_697468;\n                *(_DWORD *)(v58 + 8 * v67 + 4) = dword_6973F4;\n                *(_OWORD *)(v58 + 8 * v67 + 8) = xmmword_41CE80;\n                dword_697468 = v66 + 1;\n              }\n              if ( HIDWORD(xmmword_6971F0) )\n              {\n                *(_DWORD *)(v58 + 24LL * dword_697468) = 0;\n                v68 = dword_697468;\n                v69 = 3LL * dword_697468;\n                *(_DWORD *)(v58 + 8 * v69 + 4) = dword_6973F4;\n                *(_OWORD *)(v58 + 8 * v69 + 8) = xmmword_41CE90;\n                dword_697468 = v68 + 1;\n              }\n              if ( DWORD1(xmmword_697200) )\n              {\n                *(_DWORD *)(v58 + 24LL * dword_697468) = 0;\n                v70 = dword_697468;\n                v71 = 3LL * dword_697468;\n                *(_DWORD *)(v58 + 8 * v71 + 4) = dword_6973F4;\n                _mm_storeu_si128((__m128i *)(v58 + 8 * v71 + 8), v59);\n                dword_697468 = v70 + 1;\n              }\n            }\n            else if ( !v60 )\n            {\n              v57 += 3;\n            }\n            v73 = __OFSUB__(v57, 117);\n            v72 = v57++ - 117 < 0;\n          }\n          while ( v72 ^ v73 );\n        }\n      }\n      else if ( (unsigned int)xmmword_697240 | DWORD2(xmmword_697240) | (unsigned int)xmmword_697250 | DWORD2(xmmword_697220) | (unsigned int)xmmword_697230 )\n      {\n        v74 = 26;\n        v75 = qword_422648;\n        v76 = _mm_load_si128((const __m128i *)&xmmword_41CEF0);\n        do\n        {\n          dword_6973F4 = v74;\n          v77 = dword_696070[v74];\n          if ( v77 == 13 )\n          {\n            if ( DWORD2(xmmword_697220) )\n            {\n              v78 = dword_41AB20[v74];\n              if ( v78 != 1 && v78 != 8 )\n              {\n                *(_DWORD *)(v75 + 24LL * dword_697468) = 0;\n                v79 = dword_697468;\n                v80 = 3LL * dword_697468;\n                *(_DWORD *)(v75 + 8 * v80 + 4) = dword_6973F4;\n                *(_OWORD *)(v75 + 8 * v80 + 8) = xmmword_41CEB0;\n                dword_697468 = v79 + 1;\n              }\n            }\n            if ( (_DWORD)xmmword_697230 )\n            {\n              *(_DWORD *)(v75 + 24LL * dword_697468) = 0;\n              v81 = dword_697468;\n              v82 = 3LL * dword_697468;\n              *(_DWORD *)(v75 + 8 * v82 + 4) = dword_6973F4;\n              *(_OWORD *)(v75 + 8 * v82 + 8) = xmmword_41CEC0;\n              dword_697468 = v81 + 1;\n            }\n            if ( (_DWORD)xmmword_697250 )\n            {\n              *(_DWORD *)(v75 + 24LL * dword_697468) = 0;\n              v83 = dword_697468;\n              v84 = 3LL * dword_697468;\n              *(_DWORD *)(v75 + 8 * v84 + 4) = dword_6973F4;\n              *(_OWORD *)(v75 + 8 * v84 + 8) = xmmword_41CED0;\n              dword_697468 = v83 + 1;\n            }\n            if ( (_DWORD)xmmword_697240 )\n            {\n              *(_DWORD *)(v75 + 24LL * dword_697468) = 0;\n              v85 = dword_697468;\n              v86 = 3LL * dword_697468;\n              *(_DWORD *)(v75 + 8 * v86 + 4) = dword_6973F4;\n              *(_OWORD *)(v75 + 8 * v86 + 8) = xmmword_41CEE0;\n              dword_697468 = v85 + 1;\n            }\n            if ( DWORD2(xmmword_697240) )\n            {\n              *(_DWORD *)(v75 + 24LL * dword_697468) = 0;\n              v87 = dword_697468;\n              v88 = 3LL * dword_697468;\n              *(_DWORD *)(v75 + 8 * v88 + 4) = dword_6973F4;\n              _mm_storeu_si128((__m128i *)(v75 + 8 * v88 + 8), v76);\n              dword_697468 = v87 + 1;\n            }\n          }\n          else if ( !v77 )\n          {\n            v74 += 3;\n          }\n          v73 = __OFSUB__(v74, 117);\n          v72 = v74++ - 117 < 0;\n        }\n        while ( v72 ^ v73 );\n      }\n    }\n    result = (unsigned int)dword_697360;\n    if ( dword_697360 != 3 || dword_6973DC != 1 || dword_697388 )\n      break;\n    v2 = &dword_697468;\n    v1 = 3;\n  }\n  if ( dword_697360 == 3 )\n    dword_697424 = 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x405540L", 
            "funcEndAddr": "0x4064e4L", 
            "funcName": "sub_405540"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4064F0(int a1, int a2)\n{\n  bool v2; // zf\n  __int64 v3; // rcx\n  int v4; // eax\n  signed __int64 v5; // rdx\n  __int128 *v6; // rcx\n  __int128 v7; // xmm0\n  __int64 result; // rax\n  int v9; // esi\n  unsigned int v10; // er8\n  int v11; // esi\n  unsigned int v12; // er8\n  int v13; // esi\n  __int64 v14; // rcx\n  int v15; // edx\n  signed __int64 v16; // rsi\n  __int64 v17; // rsi\n  int v18; // ecx\n  signed __int64 v19; // rdx\n  __int64 v20; // rdx\n  int v21; // ecx\n  signed __int64 v22; // rsi\n  __int64 v23; // rdx\n  int v24; // ecx\n  signed __int64 v25; // rsi\n  __int64 v26; // rdx\n  signed __int64 v27; // rsi\n  signed __int64 v28; // rdx\n  __int64 v29; // rsi\n  int v30; // ecx\n  signed __int64 v31; // rdx\n  __int64 v32; // rdx\n  int v33; // ecx\n  signed __int64 v34; // rsi\n  __int64 v35; // rdx\n  int v36; // ecx\n  signed __int64 v37; // rsi\n  __int64 v38; // rdx\n  signed __int64 v39; // rsi\n  signed __int64 v40; // rdx\n\n  if ( a2 )\n  {\n    v2 = dword_696070[dword_6973F4] == 1;\n    dword_6973DC = 1;\n    v3 = qword_422648;\n    *(_DWORD *)(qword_422648 + 24LL * dword_697468) = dword_6973F4;\n    v4 = dword_697468;\n    v5 = 3LL * dword_697468;\n    *(_DWORD *)(v3 + 8 * v5 + 4) = a1;\n    v6 = (__int128 *)(v3 + 8 * v5 + 8);\n    if ( v2 )\n      v7 = xmmword_41CE30;\n    else\n      v7 = xmmword_41CE20;\n    *v6 = v7;\n    result = (unsigned int)(v4 + 1);\n    goto LABEL_25;\n  }\n  result = (unsigned int)dword_696070[a1];\n  v9 = dword_696070[dword_6973F4];\n  if ( v9 != 2 )\n  {\n    if ( v9 == 1 && dword_41AB20[dword_6973F4] == 7 )\n    {\n      v10 = result - 5;\n      if ( (unsigned int)(result - 5) > 1 || (v11 = dword_697360, dword_697360 == 3) )\n      {\n        if ( (_DWORD)result != 13 )\n          dword_6973DC = 1;\n        v17 = qword_422648;\n        *(_DWORD *)(qword_422648 + 24LL * dword_697468) = dword_6973F4;\n        v18 = dword_697468;\n        v19 = 3LL * dword_697468;\n        *(_DWORD *)(v17 + 8 * v19 + 4) = a1;\n        *(_DWORD *)(v17 + 8 * v19 + 8) = result;\n        *(_QWORD *)(v17 + 8 * v19 + 12) = 9LL;\n        *(_DWORD *)(v17 + 8 * v19 + 20) = 0;\n        dword_697468 = v18 + 1;\n        v11 = dword_697360;\n        if ( v10 > 1 )\n          goto LABEL_33;\n      }\n      else\n      {\n        dword_697424 = 1;\n        if ( v10 > 1 )\n          goto LABEL_33;\n      }\n      if ( v11 != 3 )\n      {\n        dword_697424 = 1;\n        if ( v10 > 1 )\n          goto LABEL_39;\nLABEL_36:\n        if ( v11 != 3 )\n        {\n          dword_697424 = 1;\n          if ( v10 > 1 )\n            goto LABEL_44;\nLABEL_42:\n          if ( v11 != 3 )\n          {\n            dword_697424 = 1;\n            return result;\n          }\nLABEL_44:\n          if ( (_DWORD)result != 13 )\n            dword_6973DC = 1;\n          v14 = qword_422648;\n          *(_DWORD *)(qword_422648 + 24LL * dword_697468) = dword_6973F4;\n          v26 = dword_697468;\n          v27 = 3LL * dword_697468;\n          *(_DWORD *)(v14 + 8 * v27 + 4) = a1;\n          *(_DWORD *)(v14 + 8 * v27 + 8) = result;\n          *(_QWORD *)(v14 + 8 * v27 + 12) = 3LL;\n          *(_DWORD *)(v14 + 8 * v27 + 20) = 0;\n          v28 = v26 + 1;\n          dword_697468 = v28;\n          if ( dword_697360 == 3 )\n          {\n            if ( (_DWORD)result != 13 )\n              dword_6973DC = 1;\n            *(_DWORD *)(v14 + 24 * v28) = dword_6973F4;\n            v15 = dword_697468;\n            v16 = 3LL * dword_697468;\n            *(_DWORD *)(v14 + 8 * v16 + 4) = a1;\n            *(_DWORD *)(v14 + 8 * v16 + 8) = result;\n            *(_QWORD *)(v14 + 8 * v16 + 12) = 5LL;\nLABEL_24:\n            *(_DWORD *)(v14 + 8 * v16 + 20) = 0;\n            result = (unsigned int)(v15 + 1);\nLABEL_25:\n            dword_697468 = result;\n            return result;\n          }\n          return result;\n        }\nLABEL_39:\n        if ( (_DWORD)result != 13 )\n          dword_6973DC = 1;\n        v23 = qword_422648;\n        *(_DWORD *)(qword_422648 + 24LL * dword_697468) = dword_6973F4;\n        v24 = dword_697468;\n        v25 = 3LL * dword_697468;\n        *(_DWORD *)(v23 + 8 * v25 + 4) = a1;\n        *(_DWORD *)(v23 + 8 * v25 + 8) = result;\n        *(_QWORD *)(v23 + 8 * v25 + 12) = 11LL;\n        *(_DWORD *)(v23 + 8 * v25 + 20) = 0;\n        dword_697468 = v24 + 1;\n        v11 = dword_697360;\n        if ( v10 > 1 )\n          goto LABEL_44;\n        goto LABEL_42;\n      }\nLABEL_33:\n      if ( (_DWORD)result != 13 )\n        dword_6973DC = 1;\n      v20 = qword_422648;\n      *(_DWORD *)(qword_422648 + 24LL * dword_697468) = dword_6973F4;\n      v21 = dword_697468;\n      v22 = 3LL * dword_697468;\n      *(_DWORD *)(v20 + 8 * v22 + 4) = a1;\n      *(_DWORD *)(v20 + 8 * v22 + 8) = result;\n      *(_QWORD *)(v20 + 8 * v22 + 12) = 7LL;\n      *(_DWORD *)(v20 + 8 * v22 + 20) = 0;\n      dword_697468 = v21 + 1;\n      v11 = dword_697360;\n      if ( v10 > 1 )\n        goto LABEL_39;\n      goto LABEL_36;\n    }\nLABEL_18:\n    if ( (unsigned int)(result - 5) <= 1 && dword_697360 != 3 )\n    {\n      dword_697424 = 1;\n      return result;\n    }\n    if ( (_DWORD)result != 13 )\n      dword_6973DC = 1;\n    v14 = qword_422648;\n    *(_DWORD *)(qword_422648 + 24LL * dword_697468) = dword_6973F4;\n    v15 = dword_697468;\n    v16 = 3LL * dword_697468;\n    *(_DWORD *)(v14 + 8 * v16 + 4) = a1;\n    *(_DWORD *)(v14 + 8 * v16 + 8) = result;\n    *(_QWORD *)(v14 + 8 * v16 + 12) = 0LL;\n    goto LABEL_24;\n  }\n  if ( dword_41AB20[dword_6973F4] != 2 )\n    goto LABEL_18;\n  v12 = result - 5;\n  if ( (unsigned int)(result - 5) > 1 || (v13 = dword_697360, dword_697360 == 3) )\n  {\n    if ( (_DWORD)result != 13 )\n      dword_6973DC = 1;\n    v29 = qword_422648;\n    *(_DWORD *)(qword_422648 + 24LL * dword_697468) = dword_6973F4;\n    v30 = dword_697468;\n    v31 = 3LL * dword_697468;\n    *(_DWORD *)(v29 + 8 * v31 + 4) = a1;\n    *(_DWORD *)(v29 + 8 * v31 + 8) = result;\n    *(_QWORD *)(v29 + 8 * v31 + 12) = 10LL;\n    *(_DWORD *)(v29 + 8 * v31 + 20) = 0;\n    dword_697468 = v30 + 1;\n    v13 = dword_697360;\n    if ( v12 > 1 )\n      goto LABEL_56;\n  }\n  else\n  {\n    dword_697424 = 1;\n    if ( v12 > 1 )\n      goto LABEL_56;\n  }\n  if ( v13 != 3 )\n  {\n    dword_697424 = 1;\n    if ( v12 <= 1 )\n      goto LABEL_59;\nLABEL_62:\n    if ( (_DWORD)result != 13 )\n      dword_6973DC = 1;\n    v35 = qword_422648;\n    *(_DWORD *)(qword_422648 + 24LL * dword_697468) = dword_6973F4;\n    v36 = dword_697468;\n    v37 = 3LL * dword_697468;\n    *(_DWORD *)(v35 + 8 * v37 + 4) = a1;\n    *(_DWORD *)(v35 + 8 * v37 + 8) = result;\n    *(_QWORD *)(v35 + 8 * v37 + 12) = 12LL;\n    *(_DWORD *)(v35 + 8 * v37 + 20) = 0;\n    dword_697468 = v36 + 1;\n    v13 = dword_697360;\n    if ( v12 > 1 )\n      goto LABEL_67;\n    goto LABEL_65;\n  }\nLABEL_56:\n  if ( (_DWORD)result != 13 )\n    dword_6973DC = 1;\n  v32 = qword_422648;\n  *(_DWORD *)(qword_422648 + 24LL * dword_697468) = dword_6973F4;\n  v33 = dword_697468;\n  v34 = 3LL * dword_697468;\n  *(_DWORD *)(v32 + 8 * v34 + 4) = a1;\n  *(_DWORD *)(v32 + 8 * v34 + 8) = result;\n  *(_QWORD *)(v32 + 8 * v34 + 12) = 8LL;\n  *(_DWORD *)(v32 + 8 * v34 + 20) = 0;\n  dword_697468 = v33 + 1;\n  v13 = dword_697360;\n  if ( v12 > 1 )\n    goto LABEL_62;\nLABEL_59:\n  if ( v13 == 3 )\n    goto LABEL_62;\n  dword_697424 = 1;\n  if ( v12 > 1 )\n    goto LABEL_67;\nLABEL_65:\n  if ( v13 != 3 )\n  {\n    dword_697424 = 1;\n    return result;\n  }\nLABEL_67:\n  if ( (_DWORD)result != 13 )\n    dword_6973DC = 1;\n  v14 = qword_422648;\n  *(_DWORD *)(qword_422648 + 24LL * dword_697468) = dword_6973F4;\n  v38 = dword_697468;\n  v39 = 3LL * dword_697468;\n  *(_DWORD *)(v14 + 8 * v39 + 4) = a1;\n  *(_DWORD *)(v14 + 8 * v39 + 8) = result;\n  *(_QWORD *)(v14 + 8 * v39 + 12) = 4LL;\n  *(_DWORD *)(v14 + 8 * v39 + 20) = 0;\n  v40 = v38 + 1;\n  dword_697468 = v40;\n  if ( dword_697360 == 3 )\n  {\n    if ( (_DWORD)result != 13 )\n      dword_6973DC = 1;\n    *(_DWORD *)(v14 + 24 * v40) = dword_6973F4;\n    v15 = dword_697468;\n    v16 = 3LL * dword_697468;\n    *(_DWORD *)(v14 + 8 * v16 + 4) = a1;\n    *(_DWORD *)(v14 + 8 * v16 + 8) = result;\n    *(_QWORD *)(v14 + 8 * v16 + 12) = 6LL;\n    goto LABEL_24;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4064f0L", 
            "funcEndAddr": "0x406a73L", 
            "funcName": "sub_4064F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_406AD0(int a1)\n{\n  __int64 result; // rax\n  __int64 v2; // rax\n  int v3; // ecx\n  signed __int64 v4; // rdx\n  __int64 v5; // rdx\n  signed __int64 v6; // rsi\n\n  result = (unsigned int)dword_696070[a1];\n  if ( (_DWORD)result != 13 || !dword_697388 )\n  {\n    if ( (_DWORD)result == 13 )\n    {\n      v2 = qword_422648;\n      *(_DWORD *)(qword_422648 + 24LL * dword_697468) = dword_6973F4;\n      v3 = dword_697468;\n      v4 = 3LL * dword_697468;\n      *(_DWORD *)(v2 + 8 * v4 + 4) = a1;\n      _mm_storeu_si128((__m128i *)(v2 + 8 * v4 + 8), _mm_cvtsi32_si128(0xDu));\n    }\n    else\n    {\n      if ( !(((unsigned __int8)result ^ LOBYTE(dword_696070[dword_6973F4])) & 1) )\n        return result;\n      if ( (unsigned int)(result - 5) <= 1 && dword_697360 != 3 )\n      {\n        dword_697424 = 1;\n        return result;\n      }\n      dword_6973DC = 1;\n      v5 = qword_422648;\n      *(_DWORD *)(qword_422648 + 24LL * dword_697468) = dword_6973F4;\n      v3 = dword_697468;\n      v6 = 3LL * dword_697468;\n      *(_DWORD *)(v5 + 8 * v6 + 4) = a1;\n      *(_DWORD *)(v5 + 8 * v6 + 8) = result;\n      *(_QWORD *)(v5 + 8 * v6 + 12) = 0LL;\n      *(_DWORD *)(v5 + 8 * v6 + 20) = 0;\n    }\n    result = (unsigned int)(v3 + 1);\n    dword_697468 = v3 + 1;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x406ad0L", 
            "funcEndAddr": "0x406ba7L", 
            "funcName": "sub_406AD0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_406BB0(int a1)\n{\n  int v1; // er11\n  int v2; // er8\n  __int64 v3; // r9\n  int *v4; // rsi\n  __int64 result; // rax\n  signed __int64 v6; // r10\n  __m128i v7; // xmm0\n  int v8; // ecx\n  int v9; // ecx\n  signed __int64 v10; // rdx\n  __int64 v11; // rcx\n  int v12; // eax\n  signed __int64 v13; // rdx\n\n  v1 = a1 - dword_6973F4;\n  v2 = dword_696070[dword_6973F4];\n  v3 = qword_422648;\n  v4 = &dword_696070[a1];\n  result = (unsigned int)(2 * a1 - dword_6973F4);\n  v6 = 4LL * a1 - 4LL * dword_6973F4;\n  v7 = _mm_cvtsi32_si128(0xDu);\n  while ( 1 )\n  {\n    v8 = *v4;\n    if ( *v4 != 13 )\n      break;\n    if ( !dword_697388 )\n    {\n      *(_DWORD *)(v3 + 24LL * dword_697468) = dword_6973F4;\n      v9 = dword_697468;\n      v10 = 3LL * dword_697468;\n      *(_DWORD *)(v3 + 8 * v10 + 4) = a1;\n      _mm_storeu_si128((__m128i *)(v3 + 8 * v10 + 8), v7);\n      dword_697468 = v9 + 1;\n    }\n    a1 += v1;\n    v11 = (signed int)result;\n    v4 = (int *)((char *)v4 + v6);\n    result = (unsigned int)(result + v1);\n    if ( !dword_696070[v11] )\n      return result;\n  }\n  if ( ((unsigned __int8)v8 ^ (unsigned __int8)v2) & 1 )\n  {\n    result = (unsigned int)(v8 - 5);\n    if ( (unsigned int)result > 1 || dword_697360 == 3 )\n    {\n      dword_6973DC = 1;\n      *(_DWORD *)(v3 + 24LL * dword_697468) = dword_6973F4;\n      v12 = dword_697468;\n      v13 = 3LL * dword_697468;\n      *(_DWORD *)(v3 + 8 * v13 + 4) = a1;\n      *(_DWORD *)(v3 + 8 * v13 + 8) = v8;\n      *(_QWORD *)(v3 + 8 * v13 + 12) = 0LL;\n      *(_DWORD *)(v3 + 8 * v13 + 20) = 0;\n      result = (unsigned int)(v12 + 1);\n      dword_697468 = result;\n    }\n    else\n    {\n      dword_697424 = 1;\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x406bb0L", 
            "funcEndAddr": "0x406cd3L", 
            "funcName": "sub_406BB0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_406CE0(int a1)\n{\n  __int64 result; // rax\n  __int64 v2; // rax\n  int v3; // ecx\n  signed __int64 v4; // rdx\n  __int64 v5; // rdx\n  signed __int64 v6; // rsi\n\n  result = (unsigned int)dword_696070[a1];\n  if ( (_DWORD)result && ((_DWORD)result != 13 || !dword_697388) )\n  {\n    if ( (_DWORD)result == 13 )\n    {\n      v2 = qword_422648;\n      *(_DWORD *)(qword_422648 + 24LL * dword_697468) = dword_6973F4;\n      v3 = dword_697468;\n      v4 = 3LL * dword_697468;\n      *(_DWORD *)(v2 + 8 * v4 + 4) = a1;\n      _mm_storeu_si128((__m128i *)(v2 + 8 * v4 + 8), _mm_cvtsi32_si128(0xDu));\n    }\n    else\n    {\n      if ( !(((unsigned __int8)result ^ LOBYTE(dword_696070[dword_6973F4])) & 1) )\n        return result;\n      if ( (unsigned int)(result - 5) <= 1 && dword_697360 != 3 )\n      {\n        dword_697424 = 1;\n        return result;\n      }\n      dword_6973DC = 1;\n      v5 = qword_422648;\n      *(_DWORD *)(qword_422648 + 24LL * dword_697468) = dword_6973F4;\n      v3 = dword_697468;\n      v6 = 3LL * dword_697468;\n      *(_DWORD *)(v5 + 8 * v6 + 4) = a1;\n      *(_DWORD *)(v5 + 8 * v6 + 8) = result;\n      *(_QWORD *)(v5 + 8 * v6 + 12) = 0LL;\n      *(_DWORD *)(v5 + 8 * v6 + 20) = 0;\n    }\n    result = (unsigned int)(v3 + 1);\n    dword_697468 = v3 + 1;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x406ce0L", 
            "funcEndAddr": "0x406dbfL", 
            "funcName": "sub_406CE0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_406E60()\n{\n  unsigned int v0; // ebx\n\n  v0 = 0;\n  if ( dword_697360 != 3 )\n  {\n    if ( dword_6974EC == 1 )\n    {\n      v0 = 1;\n      if ( !(unsigned int)sub_401480(dword_6974F0, 0) )\n        return 0;\n    }\n    else\n    {\n      v0 = 1;\n      if ( !(unsigned int)sub_401480(dword_697370, 1) )\n        return 0;\n    }\n  }\n  return v0;\n}\n", 
            "funcStartAddr": "0x406e60L", 
            "funcEndAddr": "0x406eacL", 
            "funcName": "sub_406E60"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_406EB0(__int64 a1, int a2)\n{\n  unsigned __int8 v2; // dl\n  signed __int64 v3; // rdx\n  __int64 v4; // rcx\n  __int64 v5; // rax\n  int v6; // esi\n  int v7; // edi\n  char v8; // si\n  int v9; // ecx\n  int *v10; // rdx\n  bool v11; // zf\n  int *v12; // rdx\n  int v13; // ecx\n  int *v14; // rdx\n  int *v15; // rdx\n  int *v16; // rdx\n  int *v17; // rdx\n  int *v18; // rdx\n  int *v19; // rdx\n  int *v20; // rdx\n  int *v21; // rdx\n  int *v22; // rdx\n  int *v23; // rdx\n  int *v24; // rdx\n  int *v25; // rdx\n  int *v26; // rdx\n  int *v27; // rdx\n  int *v28; // rdx\n  int *v29; // rdx\n  int *v30; // rdx\n  int *v31; // rdx\n  int *v32; // rdx\n  int *v33; // rdx\n  int *v34; // rdx\n  int *v35; // rdx\n  int *v36; // rdx\n  int *v37; // rdx\n  int *v38; // rdx\n  int *v39; // rdx\n  int *v40; // rdx\n  int *v41; // rdx\n  int *v42; // rdx\n  int *v43; // rcx\n  int v44; // eax\n  int *v45; // rcx\n  int *v46; // rcx\n  int *v47; // rcx\n  int v48; // eax\n  int *v49; // rcx\n  int *v50; // rcx\n  int *v51; // rcx\n  int *v52; // rcx\n  int *v53; // rdx\n  int *v54; // rcx\n  int v55; // eax\n  int *v56; // rcx\n  int *v57; // rcx\n  int *v58; // rcx\n  int v59; // eax\n  int *v60; // rcx\n  int *v61; // rcx\n  int *v62; // rcx\n  int *v63; // rcx\n\n  if ( dword_697360 != 3 )\n  {\n    v3 = 3LL * a2;\n    v4 = *(signed int *)(a1 + 24LL * a2 + 4);\n    v5 = *(signed int *)(a1 + 24LL * a2);\n    v6 = dword_696070[v4];\n    if ( dword_6974EC == 1 )\n    {\n      switch ( v6 )\n      {\n        case 2:\n          v2 = 1;\n          if ( dword_696044[v4] != 5 && dword_69603C[v4] != 5 )\n            goto LABEL_160;\n          return v2;\n        case 4:\n          v2 = 1;\n          if ( dword_6974F0 + 10 != (_DWORD)v4\n            && dword_6974F0 - 10 != (_DWORD)v4\n            && dword_6974F0 + 14 != (_DWORD)v4\n            && dword_6974F0 - 14 != (_DWORD)v4\n            && dword_6974F0 + 23 != (_DWORD)v4\n            && dword_6974F0 - 23 != (_DWORD)v4\n            && dword_6974F0 + 25 != (_DWORD)v4\n            && dword_6974F0 - 25 != (_DWORD)v4 )\n          {\n            goto LABEL_160;\n          }\n          return v2;\n        case 6:\n          if ( !*(_DWORD *)(a1 + 8 * v3 + 16) )\n            goto LABEL_160;\n          v7 = dword_6974F0;\n          v8 = 0;\n          return (unsigned int)sub_401480(v7, v8) != 0;\n        case 8:\n          if ( dword_41A8E0[v4] == dword_41A8E0[dword_6974F0] )\n          {\n            if ( dword_6974F0 >= (signed int)v4 )\n            {\n              v9 = v4 - dword_6974F0;\n              v24 = &dword_696040[dword_6974F0];\n              do\n              {\n                v9 += 12;\n                v11 = *v24 == 13;\n                v24 -= 12;\n              }\n              while ( v11 );\n            }\n            else\n            {\n              v9 = v4 - dword_6974F0;\n              v10 = &dword_6960A0[dword_6974F0];\n              do\n              {\n                v9 -= 12;\n                v11 = *v10 == 13;\n                v10 += 12;\n              }\n              while ( v11 );\n            }\n          }\n          else\n          {\n            if ( dword_41AB20[v4] != dword_41AB20[dword_6974F0] )\n              goto LABEL_160;\n            if ( dword_6974F0 >= (signed int)v4 )\n            {\n              v9 = v4 - dword_6974F0;\n              v32 = &dword_69606C[dword_6974F0];\n              do\n              {\n                ++v9;\n                v11 = *v32 == 13;\n                --v32;\n              }\n              while ( v11 );\n            }\n            else\n            {\n              v9 = v4 - dword_6974F0;\n              v18 = &dword_696074[dword_6974F0];\n              do\n              {\n                --v9;\n                v11 = *v18 == 13;\n                ++v18;\n              }\n              while ( v11 );\n            }\n          }\n          goto LABEL_159;\n        case 10:\n          if ( dword_41A8E0[v4] == dword_41A8E0[dword_6974F0] )\n          {\n            if ( dword_6974F0 >= (signed int)v4 )\n            {\n              v9 = v4 - dword_6974F0;\n              v28 = &dword_696040[dword_6974F0];\n              do\n              {\n                v9 += 12;\n                v11 = *v28 == 13;\n                v28 -= 12;\n              }\n              while ( v11 );\n            }\n            else\n            {\n              v9 = v4 - dword_6974F0;\n              v16 = &dword_6960A0[dword_6974F0];\n              do\n              {\n                v9 -= 12;\n                v11 = *v16 == 13;\n                v16 += 12;\n              }\n              while ( v11 );\n            }\n          }\n          else if ( dword_41AB20[v4] == dword_41AB20[dword_6974F0] )\n          {\n            if ( dword_6974F0 >= (signed int)v4 )\n            {\n              v9 = v4 - dword_6974F0;\n              v36 = &dword_69606C[dword_6974F0];\n              do\n              {\n                ++v9;\n                v11 = *v36 == 13;\n                --v36;\n              }\n              while ( v11 );\n            }\n            else\n            {\n              v9 = v4 - dword_6974F0;\n              v22 = &dword_696074[dword_6974F0];\n              do\n              {\n                --v9;\n                v11 = *v22 == 13;\n                ++v22;\n              }\n              while ( v11 );\n            }\n          }\n          else if ( dword_41AD60[v4] == dword_41AD60[dword_6974F0] )\n          {\n            if ( dword_6974F0 >= (signed int)v4 )\n            {\n              v9 = v4 - dword_6974F0;\n              v40 = &dword_69603C[dword_6974F0];\n              do\n              {\n                v9 += 13;\n                v11 = *v40 == 13;\n                v40 -= 13;\n              }\n              while ( v11 );\n            }\n            else\n            {\n              v9 = v4 - dword_6974F0;\n              v30 = &dword_6960A4[dword_6974F0];\n              do\n              {\n                v9 -= 13;\n                v11 = *v30 == 13;\n                v30 += 13;\n              }\n              while ( v11 );\n            }\n          }\n          else\n          {\n            if ( dword_41AFA0[v4] != dword_41AFA0[dword_6974F0] )\n              goto LABEL_160;\n            if ( dword_6974F0 >= (signed int)v4 )\n            {\n              v9 = v4 - dword_6974F0;\n              v42 = &dword_696044[dword_6974F0];\n              do\n              {\n                v9 += 11;\n                v11 = *v42 == 13;\n                v42 -= 11;\n              }\n              while ( v11 );\n            }\n            else\n            {\n              v9 = v4 - dword_6974F0;\n              v38 = &dword_69609C[dword_6974F0];\n              do\n              {\n                v9 -= 11;\n                v11 = *v38 == 13;\n                v38 += 11;\n              }\n              while ( v11 );\n            }\n          }\n          goto LABEL_159;\n        case 12:\n          if ( dword_41AD60[v4] == dword_41AD60[dword_6974F0] )\n          {\n            if ( dword_6974F0 >= (signed int)v4 )\n            {\n              v9 = v4 - dword_6974F0;\n              v25 = &dword_69603C[dword_6974F0];\n              do\n              {\n                v9 += 13;\n                v11 = *v25 == 13;\n                v25 -= 13;\n              }\n              while ( v11 );\n            }\n            else\n            {\n              v9 = v4 - dword_6974F0;\n              v12 = &dword_6960A4[dword_6974F0];\n              do\n              {\n                v9 -= 13;\n                v11 = *v12 == 13;\n                v12 += 13;\n              }\n              while ( v11 );\n            }\n          }\n          else\n          {\n            if ( dword_41AFA0[v4] != dword_41AFA0[dword_6974F0] )\n              goto LABEL_160;\n            if ( dword_6974F0 >= (signed int)v4 )\n            {\n              v9 = v4 - dword_6974F0;\n              v33 = &dword_696044[dword_6974F0];\n              do\n              {\n                v9 += 11;\n                v11 = *v33 == 13;\n                v33 -= 11;\n              }\n              while ( v11 );\n            }\n            else\n            {\n              v9 = v4 - dword_6974F0;\n              v19 = &dword_69609C[dword_6974F0];\n              do\n              {\n                v9 -= 11;\n                v11 = *v19 == 13;\n                v19 += 11;\n              }\n              while ( v11 );\n            }\n          }\nLABEL_159:\n          if ( !v9 )\n            return 1;\nLABEL_160:\n          if ( !(_DWORD)v5 )\n            return 0;\n          if ( dword_41AB20[v5] == dword_41AB20[dword_6974F0] )\n          {\n            if ( dword_6974F0 <= (signed int)v5 )\n            {\n              v46 = &dword_696074[dword_6974F0];\n              do\n              {\n                v44 = *v46;\n                ++v46;\n              }\n              while ( v44 == 13 );\n            }\n            else\n            {\n              v43 = &dword_69606C[dword_6974F0];\n              do\n              {\n                v44 = *v43;\n                --v43;\n              }\n              while ( v44 == 13 );\n            }\n            goto LABEL_181;\n          }\n          if ( dword_41A8E0[v5] == dword_41A8E0[dword_6974F0] )\n          {\n            if ( dword_6974F0 <= (signed int)v5 )\n            {\n              v49 = &dword_6960A0[dword_6974F0];\n              do\n              {\n                v44 = *v49;\n                v49 += 12;\n              }\n              while ( v44 == 13 );\n            }\n            else\n            {\n              v45 = &dword_696040[dword_6974F0];\n              do\n              {\n                v44 = *v45;\n                v45 -= 12;\n              }\n              while ( v44 == 13 );\n            }\nLABEL_181:\n            if ( v44 != 8 && v44 != 10 )\n              return 0;\n            return 1;\n          }\n          if ( dword_41AD60[v5] == dword_41AD60[dword_6974F0] )\n          {\n            if ( dword_6974F0 <= (signed int)v5 )\n            {\n              v51 = &dword_6960A4[dword_6974F0];\n              do\n              {\n                v48 = *v51;\n                v51 += 13;\n              }\n              while ( v48 == 13 );\n            }\n            else\n            {\n              v47 = &dword_69603C[dword_6974F0];\n              do\n              {\n                v48 = *v47;\n                v47 -= 13;\n              }\n              while ( v48 == 13 );\n            }\n          }\n          else\n          {\n            if ( dword_41AFA0[v5] != dword_41AFA0[dword_6974F0] )\n              return 0;\n            if ( dword_6974F0 <= (signed int)v5 )\n            {\n              v52 = &dword_69609C[dword_6974F0];\n              do\n              {\n                v48 = *v52;\n                v52 += 11;\n              }\n              while ( v48 == 13 );\n            }\n            else\n            {\n              v50 = &dword_696044[dword_6974F0];\n              do\n              {\n                v48 = *v50;\n                v50 -= 11;\n              }\n              while ( v48 == 13 );\n            }\n          }\n          if ( v48 != 10 && v48 != 12 )\n            return 0;\n          break;\n        default:\n          goto LABEL_160;\n      }\n      return 1;\n    }\n    switch ( v6 )\n    {\n      case 1:\n        v2 = 1;\n        if ( dword_69609C[v4] != 6 && dword_6960A4[v4] != 6 )\n          goto LABEL_200;\n        return v2;\n      case 3:\n        v2 = 1;\n        if ( dword_697370 + 10 != (_DWORD)v4\n          && dword_697370 - 10 != (_DWORD)v4\n          && dword_697370 + 14 != (_DWORD)v4\n          && dword_697370 - 14 != (_DWORD)v4\n          && dword_697370 + 23 != (_DWORD)v4\n          && dword_697370 - 23 != (_DWORD)v4\n          && dword_697370 + 25 != (_DWORD)v4\n          && dword_697370 - 25 != (_DWORD)v4 )\n        {\n          goto LABEL_200;\n        }\n        return v2;\n      case 5:\n        if ( !*(_DWORD *)(a1 + 8 * v3 + 16) )\n          goto LABEL_200;\n        v7 = dword_697370;\n        v8 = 1;\n        return (unsigned int)sub_401480(v7, v8) != 0;\n      case 7:\n        if ( dword_41A8E0[v4] == dword_41A8E0[dword_697370] )\n        {\n          if ( dword_697370 >= (signed int)v4 )\n          {\n            v13 = v4 - dword_697370;\n            v26 = &dword_696040[dword_697370];\n            do\n            {\n              v13 += 12;\n              v11 = *v26 == 13;\n              v26 -= 12;\n            }\n            while ( v11 );\n          }\n          else\n          {\n            v13 = v4 - dword_697370;\n            v14 = &dword_6960A0[dword_697370];\n            do\n            {\n              v13 -= 12;\n              v11 = *v14 == 13;\n              v14 += 12;\n            }\n            while ( v11 );\n          }\n        }\n        else\n        {\n          if ( dword_41AB20[v4] != dword_41AB20[dword_697370] )\n            goto LABEL_200;\n          if ( dword_697370 >= (signed int)v4 )\n          {\n            v13 = v4 - dword_697370;\n            v34 = &dword_69606C[dword_697370];\n            do\n            {\n              ++v13;\n              v11 = *v34 == 13;\n              --v34;\n            }\n            while ( v11 );\n          }\n          else\n          {\n            v13 = v4 - dword_697370;\n            v20 = &dword_696074[dword_697370];\n            do\n            {\n              --v13;\n              v11 = *v20 == 13;\n              ++v20;\n            }\n            while ( v11 );\n          }\n        }\n        goto LABEL_199;\n      case 9:\n        if ( dword_41A8E0[v4] == dword_41A8E0[dword_697370] )\n        {\n          if ( dword_697370 >= (signed int)v4 )\n          {\n            v13 = v4 - dword_697370;\n            v29 = &dword_696040[dword_697370];\n            do\n            {\n              v13 += 12;\n              v11 = *v29 == 13;\n              v29 -= 12;\n            }\n            while ( v11 );\n          }\n          else\n          {\n            v13 = v4 - dword_697370;\n            v17 = &dword_6960A0[dword_697370];\n            do\n            {\n              v13 -= 12;\n              v11 = *v17 == 13;\n              v17 += 12;\n            }\n            while ( v11 );\n          }\n        }\n        else if ( dword_41AB20[v4] == dword_41AB20[dword_697370] )\n        {\n          if ( dword_697370 >= (signed int)v4 )\n          {\n            v13 = v4 - dword_697370;\n            v37 = &dword_69606C[dword_697370];\n            do\n            {\n              ++v13;\n              v11 = *v37 == 13;\n              --v37;\n            }\n            while ( v11 );\n          }\n          else\n          {\n            v13 = v4 - dword_697370;\n            v23 = &dword_696074[dword_697370];\n            do\n            {\n              --v13;\n              v11 = *v23 == 13;\n              ++v23;\n            }\n            while ( v11 );\n          }\n        }\n        else if ( dword_41AD60[v4] == dword_41AD60[dword_697370] )\n        {\n          if ( dword_697370 >= (signed int)v4 )\n          {\n            v13 = v4 - dword_697370;\n            v41 = &dword_69603C[dword_697370];\n            do\n            {\n              v13 += 13;\n              v11 = *v41 == 13;\n              v41 -= 13;\n            }\n            while ( v11 );\n          }\n          else\n          {\n            v13 = v4 - dword_697370;\n            v31 = &dword_6960A4[dword_697370];\n            do\n            {\n              v13 -= 13;\n              v11 = *v31 == 13;\n              v31 += 13;\n            }\n            while ( v11 );\n          }\n        }\n        else\n        {\n          if ( dword_41AFA0[v4] != dword_41AFA0[dword_697370] )\n            goto LABEL_200;\n          if ( dword_697370 >= (signed int)v4 )\n          {\n            v13 = v4 - dword_697370;\n            v53 = &dword_696044[dword_697370];\n            do\n            {\n              v13 += 11;\n              v11 = *v53 == 13;\n              v53 -= 11;\n            }\n            while ( v11 );\n          }\n          else\n          {\n            v13 = v4 - dword_697370;\n            v39 = &dword_69609C[dword_697370];\n            do\n            {\n              v13 -= 11;\n              v11 = *v39 == 13;\n              v39 += 11;\n            }\n            while ( v11 );\n          }\n        }\n        goto LABEL_199;\n      case 11:\n        if ( dword_41AD60[v4] == dword_41AD60[dword_697370] )\n        {\n          if ( dword_697370 >= (signed int)v4 )\n          {\n            v13 = v4 - dword_697370;\n            v27 = &dword_69603C[dword_697370];\n            do\n            {\n              v13 += 13;\n              v11 = *v27 == 13;\n              v27 -= 13;\n            }\n            while ( v11 );\n          }\n          else\n          {\n            v13 = v4 - dword_697370;\n            v15 = &dword_6960A4[dword_697370];\n            do\n            {\n              v13 -= 13;\n              v11 = *v15 == 13;\n              v15 += 13;\n            }\n            while ( v11 );\n          }\n        }\n        else\n        {\n          if ( dword_41AFA0[v4] != dword_41AFA0[dword_697370] )\n            goto LABEL_200;\n          if ( dword_697370 >= (signed int)v4 )\n          {\n            v13 = v4 - dword_697370;\n            v35 = &dword_696044[dword_697370];\n            do\n            {\n              v13 += 11;\n              v11 = *v35 == 13;\n              v35 -= 11;\n            }\n            while ( v11 );\n          }\n          else\n          {\n            v13 = v4 - dword_697370;\n            v21 = &dword_69609C[dword_697370];\n            do\n            {\n              v13 -= 11;\n              v11 = *v21 == 13;\n              v21 += 11;\n            }\n            while ( v11 );\n          }\n        }\nLABEL_199:\n        if ( !v13 )\n          return 1;\nLABEL_200:\n        if ( !(_DWORD)v5 )\n          return 0;\n        if ( dword_41AB20[v5] == dword_41AB20[dword_697370] )\n        {\n          if ( dword_697370 <= (signed int)v5 )\n          {\n            v57 = &dword_696074[dword_697370];\n            do\n            {\n              v55 = *v57;\n              ++v57;\n            }\n            while ( v55 == 13 );\n          }\n          else\n          {\n            v54 = &dword_69606C[dword_697370];\n            do\n            {\n              v55 = *v54;\n              --v54;\n            }\n            while ( v55 == 13 );\n          }\n        }\n        else\n        {\n          if ( dword_41A8E0[v5] != dword_41A8E0[dword_697370] )\n          {\n            if ( dword_41AD60[v5] == dword_41AD60[dword_697370] )\n            {\n              if ( dword_697370 <= (signed int)v5 )\n              {\n                v62 = &dword_6960A4[dword_697370];\n                do\n                {\n                  v59 = *v62;\n                  v62 += 13;\n                }\n                while ( v59 == 13 );\n              }\n              else\n              {\n                v58 = &dword_69603C[dword_697370];\n                do\n                {\n                  v59 = *v58;\n                  v58 -= 13;\n                }\n                while ( v59 == 13 );\n              }\n            }\n            else\n            {\n              if ( dword_41AFA0[v5] != dword_41AFA0[dword_697370] )\n                return 0;\n              if ( dword_697370 <= (signed int)v5 )\n              {\n                v63 = &dword_69609C[dword_697370];\n                do\n                {\n                  v59 = *v63;\n                  v63 += 11;\n                }\n                while ( v59 == 13 );\n              }\n              else\n              {\n                v61 = &dword_696044[dword_697370];\n                do\n                {\n                  v59 = *v61;\n                  v61 -= 11;\n                }\n                while ( v59 == 13 );\n              }\n            }\n            if ( v59 != 9 && v59 != 11 )\n              return 0;\n            return 1;\n          }\n          if ( dword_697370 <= (signed int)v5 )\n          {\n            v60 = &dword_6960A0[dword_697370];\n            do\n            {\n              v55 = *v60;\n              v60 += 12;\n            }\n            while ( v55 == 13 );\n          }\n          else\n          {\n            v56 = &dword_696040[dword_697370];\n            do\n            {\n              v55 = *v56;\n              v56 -= 12;\n            }\n            while ( v55 == 13 );\n          }\n        }\n        if ( v55 != 7 && v55 != 9 )\n          return 0;\n        return 1;\n      default:\n        goto LABEL_200;\n    }\n  }\n  return 0;\n}\n", 
            "funcStartAddr": "0x406eb0L", 
            "funcEndAddr": "0x407885L", 
            "funcName": "sub_406EB0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_407890()\n{\n  unsigned int v0; // ebx\n  int v1; // edi\n  unsigned int v2; // eax\n  signed int v3; // ecx\n  unsigned int v4; // eax\n  signed int v5; // ecx\n  int v6; // eax\n  int v7; // eax\n  char v8; // si\n  int v9; // eax\n  int v10; // eax\n  int v11; // eax\n  int v12; // eax\n  unsigned int v13; // eax\n  signed int v14; // ecx\n  unsigned int v16; // eax\n  signed int v17; // ecx\n\n  v0 = 0;\n  if ( dword_697360 == 3 )\n    return v0;\n  if ( dword_6974EC != 1 )\n  {\n    v1 = dword_697370;\n    v9 = dword_696040[dword_697370];\n    if ( v9 != 7 && v9 != 9 )\n    {\n      v10 = dword_69606C[dword_697370];\n      if ( v10 != 7 && v10 != 9 )\n      {\n        v11 = dword_696074[dword_697370];\n        if ( v11 != 7 && v11 != 9 )\n        {\n          v12 = dword_6960A0[dword_697370];\n          if ( v12 != 7 && v12 != 9 )\n          {\n            v13 = dword_69603C[dword_697370];\n            if ( v13 > 0xB || (v14 = 2562, !_bittest(&v14, v13)) )\n            {\n              v16 = dword_696044[dword_697370];\n              if ( v16 > 0xB || (v17 = 2562, !_bittest(&v17, v16)) )\n              {\n                if ( (dword_69609C[dword_697370] | 2) != 11\n                  && (dword_6960A4[dword_697370] | 2) != 11\n                  && dword_696098[dword_697370] != 3\n                  && dword_696048[dword_697370] != 3\n                  && dword_6960A8[dword_697370] != 3\n                  && dword_696038[dword_697370] != 3\n                  && dword_6960CC[dword_697370] != 3\n                  && dword_696014[dword_697370] != 3\n                  && dword_6960D4[dword_697370] != 3\n                  && dword_69600C[dword_697370] != 3 )\n                {\n                  v8 = 1;\n                  goto LABEL_49;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    return 2;\n  }\n  v1 = dword_6974F0;\n  if ( (dword_696040[dword_6974F0] | 2) == 10 )\n    return 2;\n  if ( (dword_69606C[dword_6974F0] | 2) == 10 )\n    return 2;\n  if ( (dword_696074[dword_6974F0] | 2) == 10 )\n    return 2;\n  if ( (dword_6960A0[dword_6974F0] | 2) == 10 )\n    return 2;\n  v2 = dword_6960A4[dword_6974F0];\n  if ( v2 <= 0xC )\n  {\n    v3 = 5124;\n    if ( _bittest(&v3, v2) )\n      return 2;\n  }\n  v4 = dword_69609C[dword_6974F0];\n  if ( v4 <= 0xC )\n  {\n    v5 = 5124;\n    if ( _bittest(&v5, v4) )\n      return 2;\n  }\n  v6 = dword_696044[dword_6974F0];\n  if ( v6 == 10 )\n    return 2;\n  if ( v6 == 12 )\n    return 2;\n  v7 = dword_69603C[dword_6974F0];\n  if ( v7 == 10\n    || v7 == 12\n    || dword_696098[dword_6974F0] == 4\n    || dword_696048[dword_6974F0] == 4\n    || dword_6960A8[dword_6974F0] == 4\n    || dword_696038[dword_6974F0] == 4\n    || dword_6960CC[dword_6974F0] == 4\n    || dword_696014[dword_6974F0] == 4\n    || dword_6960D4[dword_6974F0] == 4\n    || dword_69600C[dword_6974F0] == 4 )\n  {\n    return 2;\n  }\n  v0 = 0;\n  v8 = 0;\nLABEL_49:\n  if ( (unsigned int)sub_401480(v1, v8) )\n  {\n    v0 = 2;\n    if ( dword_697360 != 2 && dword_697360 != 4 )\n      v0 = 1;\n  }\n  return v0;\n}\n", 
            "funcStartAddr": "0x407890L", 
            "funcEndAddr": "0x407b02L", 
            "funcName": "sub_407890"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_407B10(__int64 a1, int a2)\n{\n  int v2; // er13\n  int v3; // er12\n  int v4; // er14\n  int v5; // er8\n  unsigned __int64 v6; // rcx\n  __int64 v7; // rbp\n  int v8; // edx\n  int v9; // eax\n  int v10; // esi\n  int v11; // edx\n  __int64 v12; // rsi\n  int v13; // edx\n  __int64 v14; // rcx\n  int v15; // edi\n  int v16; // eax\n  __int64 v17; // rax\n  signed __int64 v19; // rsi\n  __int64 v20; // rax\n  __int64 v21; // rcx\n  int v22; // eax\n  int v23; // eax\n  int v24; // eax\n  __int64 v25; // rcx\n  int v26; // eax\n  int v27; // eax\n  __int64 v28; // rcx\n  __int64 v29; // rcx\n  int v30; // eax\n  __int64 v31; // rcx\n  __int64 v32; // rcx\n  __int64 v33; // rcx\n  __int64 result; // rax\n  int v35; // [rsp+0h] [rbp-34h]\n\n  v2 = *(_DWORD *)(a1 + 24LL * a2 + 20);\n  v3 = *(_DWORD *)(a1 + 24LL * a2 + 4);\n  v4 = *(_DWORD *)(a1 + 24LL * a2 + 12);\n  v5 = *(_DWORD *)(a1 + 24LL * a2 + 16);\n  v6 = 16LL * dword_697484;\n  v7 = *(signed int *)(a1 + 24LL * a2);\n  *(_DWORD *)(v6 + 6887128) = dword_6973C4;\n  dword_6973C4 = 0;\n  v8 = dword_6973E0;\n  *(_DWORD *)(v6 + 6887132) = dword_6973E0;\n  v9 = dword_696070[v7];\n  v10 = 0;\n  if ( (unsigned int)(v9 - 1) >= 2 )\n  {\n    v11 = v8 + 1;\n    v10 = 0;\n    if ( dword_696070[v3] == 13 )\n      v10 = v11;\n  }\n  dword_6973E0 = v10;\n  if ( (_DWORD)v7 )\n  {\n    v12 = dword_6964F0[v3];\n    v13 = *((_DWORD *)&xmmword_696F50 + v12);\n    *(_DWORD *)(v6 + 6887124) = v13;\n    LODWORD(xmmword_6916D0[v6 / 0x10]) = v12;\n    *((_DWORD *)&xmmword_697050 + v12) = 0;\n    v14 = dword_6964F0[v7];\n    *((_DWORD *)&xmmword_697050 + v14) = v3;\n    dword_6964F0[v3] = v14;\n    dword_6964F0[v7] = 0;\n    if ( !v2 )\n    {\n      v15 = dword_696070[v3];\n      if ( v15 != 13 )\n      {\n        if ( (unsigned int)dword_697360 <= 1 )\n        {\n          v35 = v5;\n          if ( v13 )\n            v16 = sub_402340(v15);\n          else\n            v16 = sub_402330(v15);\n          sub_402350(v16, dword_6974EC == 0);\n          v5 = v35;\n        }\n        v20 = dword_696070[v3];\n        dword_697334 -= *((_DWORD *)&xmmword_422610 + v20);\n        dword_6973FC ^= dword_6886D0[144 * v20 + v3];\n        --dword_69747C;\n        v9 = dword_696070[v7];\n      }\n    }\n    switch ( v9 )\n    {\n      case 1:\n        if ( v4 )\n        {\n          dword_696070[v3] = v4;\n          ++dword_6962B0[v3];\n          ++dword_6962B0[v7];\n          LOBYTE(dword_6974EC) = dword_6974EC ^ 1;\n          dword_696070[v7] = 13;\n          v21 = dword_6964F0[v3];\n          dword_6973FC ^= dword_6886D0[144 * v4 + v3] ^ dword_688910[v7];\n          v22 = dword_697334 - DWORD1(xmmword_422610);\n          goto LABEL_21;\n        }\n        if ( v2 )\n        {\n          dword_697334 -= DWORD2(xmmword_422610);\n          dword_6973FC ^= dword_688910[v3] ^ dword_688B20[v3] ^ dword_688910[v7];\n          dword_696070[v3] = 1;\n          dword_696070[v7] = 13;\n          sub_402350(1, 0);\n          --dword_69747C;\n          ++dword_6962B0[v3];\n          ++dword_6962B0[v7];\n          ++dword_696280[v3];\n          LOBYTE(dword_6974EC) = dword_6974EC ^ 1;\n          dword_696040[v3] = 13;\n          v29 = dword_6964C0[v3];\n          v30 = dword_697484;\n          LODWORD(xmmword_6916D0[dword_697484]) = v29;\n          *((_DWORD *)&xmmword_697050 + v29) = 0;\n          dword_6964C0[v3] = 0;\n          goto LABEL_43;\n        }\n        if ( v3 == (_DWORD)v7 + 24 )\n          dword_6973C4 = v7 + 12;\n        dword_6973FC ^= dword_688910[v3] ^ dword_688910[v7];\n        ++dword_6962B0[v3];\n        ++dword_6962B0[v7];\n        LOBYTE(dword_6974EC) = dword_6974EC ^ 1;\n        dword_696070[v3] = 1;\n        dword_696070[v7] = 13;\n        break;\n      case 2:\n        if ( v4 )\n        {\n          dword_696070[v3] = v4;\n          ++dword_6962B0[v3];\n          ++dword_6962B0[v7];\n          LOBYTE(dword_6974EC) = dword_6974EC ^ 1;\n          dword_696070[v7] = 13;\n          v21 = dword_6964F0[v3];\n          dword_6973FC ^= dword_6886D0[144 * v4 + v3] ^ dword_688B50[v7];\n          v22 = dword_697334 - DWORD2(xmmword_422610);\nLABEL_21:\n          v23 = *((_DWORD *)&xmmword_422610 + v4) + v22;\n          *((_DWORD *)&xmmword_696F50 + v21) = 1;\n          dword_697334 = v23;\n          break;\n        }\n        if ( v2 )\n        {\n          dword_697334 -= DWORD1(xmmword_422610);\n          dword_6973FC ^= dword_688B50[v3] ^ dword_688940[v3] ^ dword_688B50[v7];\n          dword_696070[v3] = 2;\n          dword_696070[v7] = 13;\n          sub_402350(2, 1);\n          --dword_69747C;\n          ++dword_6962B0[v3];\n          ++dword_6962B0[v7];\n          ++dword_6962E0[v3];\n          LOBYTE(dword_6974EC) = dword_6974EC ^ 1;\n          dword_6960A0[v3] = 13;\n          v31 = dword_696520[v3];\n          v30 = dword_697484;\n          LODWORD(xmmword_6916D0[dword_697484]) = v31;\n          *((_DWORD *)&xmmword_697050 + v31) = 0;\n          dword_696520[v3] = 0;\n          goto LABEL_43;\n        }\n        if ( v3 == (_DWORD)v7 - 24 )\n          dword_6973C4 = v7 - 12;\n        ++dword_6962B0[v3];\n        ++dword_6962B0[v7];\n        LOBYTE(dword_6974EC) = dword_6974EC ^ 1;\n        dword_696070[v3] = 2;\n        v26 = dword_688B50[v3] ^ dword_688B50[v7] ^ dword_6973FC;\n        dword_696070[v7] = 13;\n        goto LABEL_41;\n      case 5:\n        ++dword_6962B0[v3];\n        ++dword_6962B0[v7];\n        LOBYTE(dword_6974EC) = dword_6974EC ^ 1;\n        dword_6974F0 = v3;\n        dword_696070[v3] = 5;\n        v24 = dword_689210[v3] ^ dword_689210[v7] ^ dword_6973FC;\n        dword_696070[v7] = 13;\n        dword_6973FC = v24;\n        if ( v5 == 2 )\n        {\n          ++dword_696318;\n          ++dword_696324;\n          dword_6960D8 = 13;\n          dword_6960E4 = 7;\n          dword_6974E4 = 2;\n          v32 = dword_696558;\n          *((_DWORD *)&xmmword_697050 + v32) = 29;\n          dword_696564 = v32;\n          v26 = dword_689704 ^ dword_6896F8 ^ v24;\n          dword_696558 = 0;\n        }\n        else\n        {\n          if ( v5 != 1 )\n            break;\n          ++dword_696334;\n          ++dword_69632C;\n          dword_6960F4 = 13;\n          dword_6960EC = 7;\n          dword_6974E4 = 1;\n          v25 = dword_696574;\n          *((_DWORD *)&xmmword_697050 + v25) = 31;\n          dword_69656C = v25;\n          v26 = dword_68970C ^ dword_689714 ^ v24;\n          dword_696574 = 0;\n        }\n        goto LABEL_41;\n      case 6:\n        ++dword_6962B0[v3];\n        ++dword_6962B0[v7];\n        LOBYTE(dword_6974EC) = dword_6974EC ^ 1;\n        dword_697370 = v3;\n        dword_696070[v3] = 6;\n        v27 = dword_689450[v3] ^ dword_689450[v7] ^ dword_6973FC;\n        dword_696070[v7] = 13;\n        dword_6973FC = v27;\n        if ( v5 == 4 )\n        {\n          ++dword_696468;\n          ++dword_696474;\n          dword_696228 = 13;\n          dword_696234 = 8;\n          dword_697374 = 4;\n          v33 = dword_6966A8;\n          *((_DWORD *)&xmmword_697050 + v33) = 113;\n          dword_6966B4 = v33;\n          v26 = dword_689A94 ^ dword_689A88 ^ v27;\n          dword_6966A8 = 0;\n        }\n        else\n        {\n          if ( v5 != 3 )\n            break;\n          ++dword_696484;\n          ++dword_69647C;\n          dword_696244 = 13;\n          dword_69623C = 8;\n          dword_697374 = 3;\n          v28 = dword_6966C4;\n          *((_DWORD *)&xmmword_697050 + v28) = 115;\n          dword_6966BC = v28;\n          v26 = dword_689A9C ^ dword_689AA4 ^ v27;\n          dword_6966C4 = 0;\n        }\nLABEL_41:\n        dword_6973FC = v26;\n        break;\n      default:\n        dword_6973FC ^= dword_6886D0[144 * v9 + v3] ^ dword_6886D0[144 * v9 + v7];\n        ++dword_6962B0[v3];\n        ++dword_6962B0[v7];\n        LOBYTE(dword_6974EC) = dword_6974EC ^ 1;\n        dword_696070[v3] = v9;\n        dword_696070[v7] = 13;\n        break;\n    }\n  }\n  else\n  {\n    ++dword_69747C;\n    v17 = 0LL;\n    while ( *((_DWORD *)&xmmword_697050 + v17++ + 1) != 0 )\n      ;\n    v19 = 4 * v17 & 0x3FFFFFFFCLL;\n    *(_DWORD *)((char *)&xmmword_697050 + v19) = v3;\n    *(_DWORD *)(v6 + 6887124) = *(_DWORD *)((char *)&xmmword_696F50 + v19);\n    *(_DWORD *)((char *)&xmmword_696F50 + v19) = 0;\n    dword_6964F0[v3] = v17;\n    sub_4024A0(v4, dword_6974EC == 0);\n    dword_697334 += *((_DWORD *)&xmmword_422610 + v4);\n    dword_6973FC ^= dword_6886D0[144 * v4 + v3];\n    LOBYTE(dword_6974EC) = dword_6974EC ^ 1;\n    dword_696070[v3] = v4;\n  }\n  v30 = dword_697484;\nLABEL_43:\n  result = (unsigned int)(v30 + 1);\n  dword_697484 = result;\n  return result;\n}\n", 
            "funcStartAddr": "0x407b10L", 
            "funcEndAddr": "0x408304L", 
            "funcName": "sub_407B10"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4083E0(__int64 a1, int a2)\n{\n  int v2; // er13\n  __int64 v3; // rbx\n  int v4; // edx\n  int v5; // er14\n  __int64 v6; // r15\n  int v7; // esi\n  unsigned __int64 v8; // rax\n  __int64 v9; // rbp\n  signed __int64 v10; // rcx\n  __int64 v11; // rcx\n  int v12; // eax\n  int v13; // eax\n  signed __int64 result; // rax\n  int v15; // eax\n  int v16; // er14\n  __int64 v17; // rcx\n  __int64 v18; // rcx\n  __int64 v19; // rcx\n  __int64 v20; // rcx\n\n  v2 = *(_DWORD *)(a1 + 24LL * a2 + 20);\n  v3 = *(signed int *)(a1 + 24LL * a2);\n  v10 = dword_697484 - 1LL;\n  v4 = *(_DWORD *)(a1 + 24LL * a2 + 4);\n  v5 = *(_DWORD *)(a1 + 24LL * a2 + 8);\n  v6 = *(signed int *)(a1 + 24LL * a2 + 12);\n  v7 = *(_DWORD *)(a1 + 24LL * a2 + 16);\n  --dword_697484;\n  v8 = 16 * v10;\n  v9 = v4;\n  dword_6973C4 = DWORD2(xmmword_6916D0[v10]);\n  dword_6973E0 = HIDWORD(xmmword_6916D0[v10]);\n  LODWORD(v10) = dword_6964F0[v4];\n  if ( !v3 )\n  {\n    v10 = (signed int)v10;\n    *((_DWORD *)&xmmword_697050 + v10) = 0;\n    *((_DWORD *)&xmmword_696F50 + v10) = *(_DWORD *)(v8 + 6887124);\n    dword_6964F0[v4] = 0;\n    --dword_69747C;\n    sub_402430(v6, dword_6974EC != 0);\n    dword_697334 -= *((_DWORD *)&xmmword_422610 + v6);\n    dword_696070[v9] = v5;\n    result = (unsigned int)dword_6886D0[144 * v6 + v9];\n    dword_6973FC ^= result;\n    LOBYTE(dword_6974EC) = dword_6974EC ^ 1;\n    return result;\n  }\n  dword_6964F0[v3] = v10;\n  v11 = SLODWORD(xmmword_6916D0[v8 / 0x10]);\n  dword_6964F0[v4] = v11;\n  *((_DWORD *)&xmmword_697050 + v11) = v4;\n  *((_DWORD *)&xmmword_697050 + dword_6964F0[v3]) = v3;\n  v12 = *(_DWORD *)(v8 + 6887124);\n  *((_DWORD *)&xmmword_696F50 + v11) = v12;\n  if ( !v2 && v5 != 13 )\n  {\n    if ( (unsigned int)dword_697360 <= 1 )\n    {\n      if ( v12 )\n        v13 = sub_402340(v5);\n      else\n        v13 = sub_402330(v5);\n      sub_4023C0(v13, dword_6974EC != 0);\n    }\n    dword_6973FC ^= dword_6886D0[144 * v5 + v9];\n    dword_697334 += *((_DWORD *)&xmmword_422610 + v5);\n    ++dword_69747C;\n  }\n  v15 = dword_696070[v9];\n  if ( v15 != 5 )\n  {\n    if ( v15 == 2 )\n    {\n      if ( v2 )\n      {\n        dword_6973FC ^= dword_688940[v9] ^ dword_688B50[v3] ^ dword_688B50[v9];\n        v16 = v9 + 12;\n        dword_696070[v9] = 13;\n        dword_696070[v3] = 2;\n        dword_697334 += DWORD1(xmmword_422610);\n        sub_4023C0(2, 1);\n        ++dword_69747C;\n        --dword_6962B0[v9];\n        --dword_6962B0[v3];\n        --dword_6962E0[v9];\n        LOBYTE(dword_6974EC) = dword_6974EC ^ 1;\n        result = SLODWORD(xmmword_6916D0[dword_697484]);\n        dword_696520[v9] = result;\n        dword_6960A0[v9] = 1;\n        goto LABEL_18;\n      }\n      result = dword_688B50[v9] ^ dword_688B50[v3] ^ (unsigned int)dword_6973FC;\n      dword_6973FC ^= dword_688B50[v9] ^ dword_688B50[v3];\n      dword_696070[v9] = v5;\n      dword_696070[v3] = 2;\n      goto LABEL_33;\n    }\n    if ( v15 == 1 )\n    {\n      if ( v2 )\n      {\n        dword_6973FC ^= dword_688B20[v9] ^ dword_688910[v3] ^ dword_688910[v9];\n        v16 = v9 - 12;\n        dword_696070[v9] = 13;\n        dword_696070[v3] = 1;\n        dword_697334 += DWORD2(xmmword_422610);\n        sub_4023C0(1, 0);\n        ++dword_69747C;\n        --dword_6962B0[v9];\n        --dword_6962B0[v3];\n        --dword_696280[v9];\n        LOBYTE(dword_6974EC) = dword_6974EC ^ 1;\n        result = SLODWORD(xmmword_6916D0[dword_697484]);\n        dword_6964C0[v9] = result;\n        dword_696040[v9] = 2;\nLABEL_18:\n        *((_DWORD *)&xmmword_697050 + result) = v16;\n        dword_6964F0[v9] = 0;\n        return result;\n      }\n      result = dword_688910[v9] ^ dword_688910[v3] ^ (unsigned int)dword_6973FC;\n      dword_6973FC ^= dword_688910[v9] ^ dword_688910[v3];\n      dword_696070[v9] = v5;\n      dword_696070[v3] = 1;\nLABEL_33:\n      --dword_6962B0[v9];\n      --dword_6962B0[v3];\n      LOBYTE(dword_6974EC) = dword_6974EC ^ 1;\n      return result;\n    }\n    if ( !(_DWORD)v6 && v15 != 6 )\n    {\n      dword_696070[v3] = v15;\n      --dword_6962B0[v9];\n      --dword_6962B0[v3];\n      LOBYTE(dword_6974EC) = dword_6974EC ^ 1;\n      dword_696070[v9] = v5;\n      result = 576LL * dword_696070[v3];\n      dword_6973FC ^= *(int *)((char *)&dword_6886D0[v3] + result) ^ *(int *)((char *)&dword_6886D0[v9] + result);\n      return result;\n    }\n  }\n  if ( (_DWORD)v6 )\n  {\n    dword_696070[v9] = v5;\n    if ( v15 & 1 )\n    {\n      --dword_6962B0[v9];\n      --dword_6962B0[v3];\n      LOBYTE(dword_6974EC) = dword_6974EC ^ 1;\n      dword_6973FC ^= dword_6886D0[144 * v6 + v9] ^ dword_688910[v3];\n      dword_696070[v3] = 1;\n      result = (unsigned int)(DWORD1(xmmword_422610) + dword_697334 - *((_DWORD *)&xmmword_422610 + v6));\n    }\n    else\n    {\n      --dword_6962B0[v9];\n      --dword_6962B0[v3];\n      LOBYTE(dword_6974EC) = dword_6974EC ^ 1;\n      dword_6973FC ^= dword_6886D0[144 * v6 + v9] ^ dword_688B50[v3];\n      dword_696070[v3] = 2;\n      result = (unsigned int)(DWORD2(xmmword_422610) + dword_697334 - *((_DWORD *)&xmmword_422610 + v6));\n    }\n    dword_697334 = result;\n  }\n  else\n  {\n    if ( v15 == 5 )\n    {\n      dword_6974F0 = v3;\n      --dword_6962B0[v9];\n      --dword_6962B0[v3];\n      LOBYTE(dword_6974EC) = dword_6974EC ^ 1;\n      dword_696070[v9] = v5;\n      result = dword_689210[v9] ^ dword_689210[v3] ^ (unsigned int)dword_6973FC;\n      dword_696070[v3] = 5;\n      dword_6973FC = result;\n      if ( v7 == 2 )\n      {\n        dword_6960D8 = 7;\n        dword_6960E4 = 13;\n        --dword_696318;\n        --dword_696324;\n        dword_6974E4 = 0;\n        v19 = dword_696564;\n        dword_696558 = dword_696564;\n        dword_696564 = 0;\n        *((_DWORD *)&xmmword_697050 + v19) = 26;\n        result = dword_6896F8 ^ dword_689704 ^ (unsigned int)result;\n      }\n      else\n      {\n        if ( v7 != 1 )\n          return result;\n        dword_6960F4 = 7;\n        dword_6960EC = 13;\n        --dword_696334;\n        --dword_69632C;\n        dword_6974E4 = 0;\n        v17 = dword_69656C;\n        dword_696574 = dword_69656C;\n        dword_69656C = 0;\n        *((_DWORD *)&xmmword_697050 + v17) = 33;\n        result = dword_68970C ^ dword_689714 ^ (unsigned int)result;\n      }\n    }\n    else\n    {\n      dword_697370 = v3;\n      --dword_6962B0[v9];\n      --dword_6962B0[v3];\n      LOBYTE(dword_6974EC) = dword_6974EC ^ 1;\n      dword_696070[v9] = v5;\n      result = dword_689450[v9] ^ dword_689450[v3] ^ (unsigned int)dword_6973FC;\n      dword_696070[v3] = 6;\n      dword_6973FC = result;\n      if ( v7 == 4 )\n      {\n        dword_696228 = 8;\n        dword_696234 = 13;\n        --dword_696468;\n        --dword_696474;\n        dword_697374 = 0;\n        v20 = dword_6966B4;\n        dword_6966A8 = dword_6966B4;\n        dword_6966B4 = 0;\n        *((_DWORD *)&xmmword_697050 + v20) = 110;\n        result = dword_689A94 ^ dword_689A88 ^ (unsigned int)result;\n      }\n      else\n      {\n        if ( v7 != 3 )\n          return result;\n        dword_696244 = 8;\n        dword_69623C = 13;\n        --dword_696484;\n        --dword_69647C;\n        dword_697374 = 0;\n        v18 = dword_6966BC;\n        dword_6966C4 = dword_6966BC;\n        dword_6966BC = 0;\n        *((_DWORD *)&xmmword_697050 + v18) = 117;\n        result = dword_689A9C ^ dword_689AA4 ^ (unsigned int)result;\n      }\n    }\n    dword_6973FC = result;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4083e0L", 
            "funcEndAddr": "0x408b07L", 
            "funcName": "sub_4083E0"
        }, 
        {
            "decompiledFuncCode": "void sub_408B10()\n{\n  signed int v0; // er8\n  signed int v1; // esi\n  signed int v2; // er9\n  signed int *v3; // rdi\n  signed int v4; // eax\n  unsigned int v5; // edx\n\n  v0 = 2;\n  if ( dword_69747C <= 0 )\n    goto LABEL_16;\n  v1 = 1;\n  v2 = 0;\n  v3 = (_DWORD *)(&xmmword_697050 + 4);\n  v4 = 8199;\n  do\n  {\n    if ( *v3 )\n    {\n      ++v1;\n      v5 = dword_696070[*v3];\n      if ( v5 > 0xD || !_bittest(&v4, v5) )\n        ++v2;\n    }\n    ++v3;\n  }\n  while ( v1 <= dword_69747C );\n  if ( v2 < 12 )\n  {\n    if ( v2 < 7 )\n      goto LABEL_16;\nLABEL_15:\n    v0 = 1;\n    goto LABEL_16;\n  }\n  if ( dword_6974E4 && dword_697374 )\n    goto LABEL_15;\n  v0 = 0;\n  if ( dword_6960E8 != 5 && dword_696238 != 6 )\n    goto LABEL_15;\nLABEL_16:\n  dword_697478 = v0;\n}\n", 
            "funcStartAddr": "0x408b10L", 
            "funcEndAddr": "0x408ba8L", 
            "funcName": "sub_408B10"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_408BB0(int a1, int a2)\n{\n  unsigned int v2; // ecx\n  __int64 result; // rax\n\n  v2 = 0;\n  if ( dword_41A8E0[a1] >= 6 )\n  {\n    v2 = 2 * (((dword_69606C[a1] + 1) & 0xFFFFFFFE ^ 8 | a2 ^ (dword_69606C[a1] + 1) & 1) == 0) + 2;\n    if ( (dword_696074[a1] + 1) & 0xFFFFFFFE ^ 8 | a2 ^ (dword_696074[a1] + 1) & 1 )\n      v2 = 2 * (((dword_69606C[a1] + 1) & 0xFFFFFFFE ^ 8 | a2 ^ (dword_69606C[a1] + 1) & 1) == 0);\n  }\n  result = -v2;\n  if ( a2 != 1 )\n    result = v2;\n  return result;\n}\n", 
            "funcStartAddr": "0x408bb0L", 
            "funcEndAddr": "0x408c10L", 
            "funcName": "sub_408BB0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_408C10(int a1, int a2)\n{\n  __int64 v2; // rax\n  __int64 v3; // r8\n  int v4; // ecx\n  int *v5; // rdx\n  bool v6; // zf\n  int *v7; // rdx\n  int *v8; // rdx\n  int *v9; // rdx\n  int v10; // edi\n  int *v11; // rdx\n  int *v12; // rdx\n  int *v13; // rdx\n  int *v14; // rax\n  int v15; // edi\n  unsigned int v16; // edx\n  __int64 result; // rax\n\n  v2 = a1;\n  v3 = dword_6325D0[144 * a1 + dword_697300[a2 ^ 1]];\n  v4 = 0;\n  if ( dword_69606C[a1] == 13 )\n  {\n    v5 = &dword_69606C[a1 - 1LL];\n    v4 = 0;\n    do\n    {\n      ++v4;\n      v6 = *v5 == 13;\n      --v5;\n    }\n    while ( v6 );\n  }\n  if ( dword_696074[a1] == 13 )\n  {\n    v7 = &dword_696074[a1 + 1LL];\n    do\n    {\n      ++v4;\n      v6 = *v7 == 13;\n      ++v7;\n    }\n    while ( v6 );\n  }\n  if ( dword_6960A0[a1] == 13 )\n  {\n    v8 = &dword_6960A0[a1 + 12LL];\n    do\n    {\n      ++v4;\n      v6 = *v8 == 13;\n      v8 += 12;\n    }\n    while ( v6 );\n  }\n  if ( dword_696040[a1] == 13 )\n  {\n    v9 = &dword_696040[a1 - 12LL];\n    do\n    {\n      ++v4;\n      v6 = *v9 == 13;\n      v9 -= 12;\n    }\n    while ( v6 );\n  }\n  v10 = 0;\n  if ( dword_69603C[v2] == 13 )\n  {\n    v11 = &dword_69603C[v2 - 13];\n    v10 = 0;\n    do\n    {\n      ++v10;\n      v6 = *v11 == 13;\n      v11 -= 13;\n    }\n    while ( v6 );\n  }\n  if ( dword_696044[v2] == 13 )\n  {\n    v12 = &dword_696044[v2 - 11];\n    do\n    {\n      ++v10;\n      v6 = *v12 == 13;\n      v12 -= 11;\n    }\n    while ( v6 );\n  }\n  if ( dword_69609C[v2] == 13 )\n  {\n    v13 = &dword_69609C[v2 + 11];\n    do\n    {\n      ++v10;\n      v6 = *v13 == 13;\n      v13 += 11;\n    }\n    while ( v6 );\n  }\n  if ( dword_6960A4[v2] == 13 )\n  {\n    v14 = &dword_6960A4[v2 + 13];\n    do\n    {\n      ++v10;\n      v6 = *v14 == 13;\n      v14 += 13;\n    }\n    while ( v6 );\n  }\n  v15 = 2 * (v4 + v10);\n  if ( v15 <= 4 )\n  {\n    if ( v15 )\n    {\n      if ( v15 == 2 )\n        v15 = -8;\n      else\n        v15 -= 5;\n    }\n    else\n    {\n      v15 = -15;\n    }\n  }\n  v16 = v15 + dword_41D520[v3] + 900;\n  result = -v16;\n  if ( a2 != 1 )\n    result = v16;\n  return result;\n}\n", 
            "funcStartAddr": "0x408c10L", 
            "funcEndAddr": "0x408de4L", 
            "funcName": "sub_408C10"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_408DF0(int a1, int a2)\n{\n  int v2; // er8\n  int v3; // edx\n  int *v4; // rax\n  bool v5; // zf\n  int v6; // er10\n  int *v7; // rax\n  int *v8; // rax\n  int v9; // er11\n  int *v10; // rax\n  int v11; // ecx\n  int v12; // eax\n  unsigned int v13; // ecx\n  int v14; // eax\n  int v15; // edx\n  __int64 result; // rax\n\n  v2 = dword_69606C[a1];\n  v3 = 0;\n  if ( v2 == 13 )\n  {\n    v4 = &dword_69606C[a1 - 1LL];\n    v3 = 0;\n    do\n    {\n      ++v3;\n      v5 = *v4 == 13;\n      --v4;\n    }\n    while ( v5 );\n  }\n  v6 = dword_696074[a1];\n  if ( v6 == 13 )\n  {\n    v7 = &dword_696074[a1 + 1LL];\n    do\n    {\n      ++v3;\n      v5 = *v7 == 13;\n      ++v7;\n    }\n    while ( v5 );\n  }\n  if ( dword_6960A0[a1] == 13 )\n  {\n    v8 = &dword_6960A0[a1 + 12LL];\n    do\n    {\n      ++v3;\n      v5 = *v8 == 13;\n      v8 += 12;\n    }\n    while ( v5 );\n  }\n  v9 = dword_41D4C0[dword_65ADD0[144 * a1 + dword_697300[a2 ^ 1]]] + 500;\n  if ( dword_696040[a1] == 13 )\n  {\n    v10 = &dword_696040[a1 - 12LL];\n    do\n    {\n      ++v3;\n      v5 = *v10 == 13;\n      v10 -= 12;\n    }\n    while ( v5 );\n  }\n  v11 = 2 * v3 - 5;\n  if ( 2 * v3 >= 3 )\n    v11 = 2 * v3;\n  v12 = v9 + v11;\n  v13 = v9 + v11 - 5;\n  if ( v6 == 13 )\n    v13 = v12;\n  if ( v2 == 13 )\n    v13 = v12;\n  if ( dword_6974F4 != 1300 || dword_69737C != 1300 )\n  {\n    v14 = dword_41E584[a2];\n    if ( v14 == a1 )\n      v13 += 5 * (((v6 + 1) & 0xFFFFFFFE ^ 8 | a2 ^ (v6 + 1) & 1) == 0) + 10;\n    v15 = v13 + 10;\n    if ( v14 + 1 != a1 )\n      v15 = v13;\n    v13 = v15;\n  }\n  result = -v13;\n  if ( a2 != 1 )\n    result = v13;\n  return result;\n}\n", 
            "funcStartAddr": "0x408df0L", 
            "funcEndAddr": "0x408f56L", 
            "funcName": "sub_408DF0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_408F60(int a1, int a2)\n{\n  int v2; // eax\n  int *v3; // rdx\n  bool v4; // zf\n  int *v5; // rdx\n  int *v6; // rdx\n  int *v7; // rcx\n  int v8; // ecx\n  int v9; // eax\n  unsigned int v10; // edx\n  __int64 result; // rax\n\n  v2 = 0;\n  if ( dword_69603C[a1] == 13 )\n  {\n    v3 = &dword_69603C[a1 - 13LL];\n    v2 = 0;\n    do\n    {\n      ++v2;\n      v4 = *v3 == 13;\n      v3 -= 13;\n    }\n    while ( v4 );\n  }\n  if ( dword_696044[a1] == 13 )\n  {\n    v5 = &dword_696044[a1 - 11LL];\n    do\n    {\n      ++v2;\n      v4 = *v5 == 13;\n      v5 -= 11;\n    }\n    while ( v4 );\n  }\n  if ( dword_69609C[a1] == 13 )\n  {\n    v6 = &dword_69609C[a1 + 11LL];\n    do\n    {\n      ++v2;\n      v4 = *v6 == 13;\n      v6 += 11;\n    }\n    while ( v4 );\n  }\n  if ( dword_6960A4[a1] == 13 )\n  {\n    v7 = &dword_6960A4[a1 + 13LL];\n    do\n    {\n      ++v2;\n      v4 = *v7 == 13;\n      v7 += 13;\n    }\n    while ( v4 );\n  }\n  v8 = 2 * v2;\n  v9 = 2 * v2 - 5;\n  if ( v8 >= 3 )\n    v9 = v8;\n  v10 = v9 + dword_41D560[a1] + dword_41D540[dword_6325D0[144 * a1 + dword_697300[a2 ^ 1]]] + 325;\n  if ( a1 == 39 && !a2 && dword_696140 == 1 || a1 == 99 && a2 == 1 && dword_6961D0 == 2 )\n    v10 -= 5;\n  result = -v10;\n  if ( a2 != 1 )\n    result = v10;\n  return result;\n}\n", 
            "funcStartAddr": "0x408f60L", 
            "funcEndAddr": "0x40908eL", 
            "funcName": "sub_408F60"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_409090(int a1, int a2)\n{\n  int v2; // ecx\n  __int64 result; // rax\n\n  v2 = dword_41D7A0[a1] + dword_41D500[dword_6325D0[144 * a1 + dword_697300[a2 ^ 1]]];\n  result = (unsigned int)(-310 - v2);\n  if ( a2 != 1 )\n    result = (unsigned int)(v2 + 310);\n  return result;\n}\n", 
            "funcStartAddr": "0x409090L", 
            "funcEndAddr": "0x4090daL", 
            "funcName": "sub_409090"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4090E0(int a1, int a2)\n{\n  __int64 v2; // r9\n  signed __int64 v3; // rdx\n  int v4; // ecx\n  int v5; // er8\n  int v6; // edi\n  int v7; // ecx\n  int v8; // edi\n  _BOOL4 v9; // edx\n  unsigned int v10; // ecx\n  __int64 result; // rax\n\n  v2 = a1;\n  v3 = 576LL * a1;\n  v4 = dword_41D480[*(int *)((char *)&dword_6325D0[dword_697300[a2 ^ 1]] + v3)];\n  LODWORD(v3) = dword_41D4A0[*(int *)((char *)&dword_6325D0[dword_697300[a2]] + v3)];\n  v5 = v4 + v3 + 100;\n  v6 = dword_696074[a1] + 1;\n  v7 = v4 + v3 + 105;\n  if ( v6 & 0xFFFFFFFE ^ 2 | a2 ^ v6 & 1 )\n    v7 = v5;\n  v8 = dword_69609C[v2] + 1;\n  if ( (v8 & 0xFFFFFFFE) != 2 || (v9 = 1, (v8 & 1) != a2) )\n    v9 = ((dword_6960A4[v2] + 1) & 0xFFFFFFFE ^ 2 | a2 ^ (dword_6960A4[v2] + 1) & 1) == 0;\n  v10 = v9 + v7;\n  result = -v10;\n  if ( a2 != 1 )\n    result = v10;\n  return result;\n}\n", 
            "funcStartAddr": "0x4090e0L", 
            "funcEndAddr": "0x40919dL", 
            "funcName": "sub_4090E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4091A0@<rax>(__int64 a1@<rax>, unsigned int a2@<edi>, unsigned int a3@<esi>)\n{\n  printf(\"Illegal piece detected sq=%i c=%i\\n\", a2, a3, a1);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x4091a0L", 
            "funcEndAddr": "0x4091b9L", 
            "funcName": "sub_4091A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4091C0(int a1, signed int a2)\n{\n  int v2; // ecx\n  __int64 result; // rax\n  int v4; // ecx\n  unsigned int v5; // ecx\n  int v6; // edx\n  signed int v7; // esi\n  signed int v8; // er9\n  signed int *v9; // rdi\n  signed int v10; // er8\n  int v11; // ecx\n  __int64 v12; // rbp\n  __int64 v13; // rcx\n  int v14; // eax\n  __int64 v15; // rcx\n  int v16; // ebp\n  int v17; // ebx\n  signed int v18; // er14\n  signed int *v19; // r15\n  int v20; // ebp\n  int v21; // er13\n  int v22; // er12\n  signed int v23; // er14\n  signed int v24; // er11\n  int v25; // er15\n  int v26; // er10\n  int v27; // eax\n  int v28; // esi\n  __int64 v29; // rdi\n  int v30; // eax\n  unsigned __int8 v31; // of\n  int v32; // eax\n  int v33; // esi\n  int v34; // esi\n  int v35; // edx\n  int v36; // eax\n  int v37; // esi\n  int v38; // ebx\n  __int64 v39; // rbp\n  int v40; // edi\n  int v41; // eax\n  int v42; // esi\n  int v43; // eax\n  int v44; // esi\n  int v45; // eax\n  int v46; // esi\n  int v47; // esi\n  int v48; // eax\n  __int64 v49; // rbx\n  __int64 v50; // rax\n  int v51; // eax\n  int v52; // eax\n  __int64 v53; // rcx\n  int v54; // edx\n  int v55; // er10\n  int v56; // eax\n  int v57; // er9\n  signed int v58; // er8\n  signed int v59; // ebx\n  int v60; // er10\n  int v61; // eax\n  signed int v62; // er9\n  signed int v63; // er8\n  signed int v64; // ebx\n  int v65; // esi\n  int v66; // esi\n  int v67; // ebx\n  int v68; // edx\n  bool v69; // zf\n  signed int v70; // ecx\n  int v71; // edx\n  int v72; // esi\n  int v73; // esi\n  int v74; // edx\n  signed int v75; // ecx\n  int v76; // edx\n  int v77; // eax\n  signed int v78; // ebx\n  int v79; // ebx\n  int v80; // er11\n  int v81; // eax\n  int v82; // eax\n  int v83; // er11\n  int v84; // edi\n  __int64 v85; // rbx\n  int v86; // eax\n  signed int v87; // edi\n  int v88; // edi\n  int v89; // ebx\n  int v90; // eax\n  int v91; // eax\n  int v92; // ebx\n  int v93; // edi\n  __int64 v94; // rbx\n  int v95; // eax\n  int v96; // ebx\n  int v97; // edx\n  int v98; // ebp\n  __int64 v99; // rdi\n  __int64 v100; // rsi\n  signed int v101; // ecx\n  int v102; // ecx\n  _BOOL4 v103; // edx\n  int v104; // ebp\n  int v105; // ecx\n  int v106; // eax\n  _BOOL4 v107; // ecx\n  int v108; // edi\n  int v109; // eax\n  int v110; // er15\n  int v111; // er10\n  int v112; // er13\n  int v113; // ebx\n  int v114; // er12\n  int v115; // er13\n  int v116; // eax\n  int v117; // eax\n  int v118; // er15\n  int v119; // eax\n  int v120; // eax\n  signed int v121; // edx\n  int v122; // [rsp+Ch] [rbp-14Ch]\n  int v123; // [rsp+10h] [rbp-148h]\n  __int64 v124; // [rsp+14h] [rbp-144h]\n  int v125; // [rsp+1Ch] [rbp-13Ch]\n  int v126; // [rsp+20h] [rbp-138h]\n  int v127; // [rsp+24h] [rbp-134h]\n  __int64 v128; // [rsp+28h] [rbp-130h]\n  __int64 v129; // [rsp+30h] [rbp-128h]\n  int v130; // [rsp+38h] [rbp-120h]\n  int v131; // [rsp+3Ch] [rbp-11Ch]\n  __int128 v132; // [rsp+40h] [rbp-118h]\n  __int128 v133; // [rsp+50h] [rbp-108h]\n  __int128 v134; // [rsp+60h] [rbp-F8h]\n  __int128 v135; // [rsp+70h] [rbp-E8h]\n  __int128 v136; // [rsp+80h] [rbp-D8h]\n  __int64 v137; // [rsp+90h] [rbp-C8h]\n  __int64 v138; // [rsp+98h] [rbp-C0h]\n  __int64 v139; // [rsp+A0h] [rbp-B8h]\n  __int64 v140; // [rsp+A8h] [rbp-B0h]\n  __int64 v141; // [rsp+B0h] [rbp-A8h]\n  int v142; // [rsp+BCh] [rbp-9Ch]\n  __int128 v143; // [rsp+C0h] [rbp-98h]\n  __int128 v144; // [rsp+D0h] [rbp-88h]\n  int v145; // [rsp+E0h] [rbp-78h]\n  __int64 v146; // [rsp+E4h] [rbp-74h]\n  int v147; // [rsp+ECh] [rbp-6Ch]\n  __int128 v148; // [rsp+F0h] [rbp-68h]\n  __int128 v149; // [rsp+100h] [rbp-58h]\n  int v150; // [rsp+110h] [rbp-48h]\n  __int64 v151; // [rsp+114h] [rbp-44h]\n\n  v2 = -dword_697334;\n  if ( dword_6974EC )\n    v2 = dword_697334;\n  v122 = 0;\n  result = (unsigned int)(v2 - dword_697434);\n  if ( (signed int)result >= a2 )\n    return result;\n  v4 = dword_697434 + v2;\n  result = (unsigned int)v4;\n  if ( v4 <= a1 )\n    return result;\n  v131 = 0;\n  sub_402670(&v122, &v131);\n  if ( v131 )\n  {\n    v5 = v122;\n    goto LABEL_305;\n  }\n  v136 = 0LL;\n  v135 = 0LL;\n  v134 = 0LL;\n  v133 = 0LL;\n  v132 = 0LL;\n  v137 = 0LL;\n  v148 = xmmword_41CDE0;\n  v143 = xmmword_41CDF0;\n  v149 = xmmword_41CDE0;\n  v144 = xmmword_41CDF0;\n  v150 = 7;\n  v145 = 2;\n  v151 = 30064771079LL;\n  v146 = 8589934594LL;\n  dword_6974F4 = 0;\n  dword_69737C = 0;\n  dword_697300[0] = dword_6974F0;\n  dword_697304 = dword_697370;\n  v6 = dword_69747C;\n  if ( dword_69747C <= 0 )\n  {\n    v10 = 0;\n    v8 = 0;\n    goto LABEL_26;\n  }\n  v7 = 1;\n  v8 = 0;\n  v9 = (_DWORD *)(&xmmword_697050 + 4);\n  v10 = 0;\n  do\n  {\n    v12 = *v9;\n    if ( *v9 )\n    {\n      v13 = dword_696070[v12];\n      v14 = v13 + 1;\n      if ( ((((signed int)v13 + 1) >> 1) | 2) != 3 )\n      {\n        v17 = *((_DWORD *)&xmmword_422610 + v13);\n        if ( v14 & 1 )\n        {\n          v11 = -v17;\n          if ( -v17 < 1 )\n            v11 = v17;\n          v10 += v11;\n          dword_69737C = v10;\n        }\n        else\n        {\n          v8 += v17;\n          dword_6974F4 = v8;\n        }\n      }\n      ++v7;\n      if ( (v14 & 0xFFFFFFFE) == 2 )\n      {\n        v15 = dword_41A8E0[v12];\n        v16 = dword_41AB20[v12];\n        if ( v14 & 1 )\n        {\n          ++*((_DWORD *)&v132 + v15 + 1);\n          if ( v16 > *((_DWORD *)&v143 + v15 + 1) )\n            *((_DWORD *)&v143 + v15 + 1) = v16;\n        }\n        else\n        {\n          ++*((_DWORD *)&v135 + v15);\n          if ( v16 < *((_DWORD *)&v148 + v15 + 1) )\n            *((_DWORD *)&v148 + v15 + 1) = v16;\n        }\n      }\n    }\n    ++v9;\n  }\n  while ( v7 <= v6 );\n  if ( v6 <= 0 )\n  {\nLABEL_26:\n    v124 = 0LL;\n    v23 = 0;\n    v24 = 0;\n    v25 = 0;\n    v26 = 0;\n    v123 = 0;\n    v22 = 0;\n    v21 = 0;\n    v20 = 0;\n    v129 = 0LL;\n    v128 = 0LL;\n    if ( v8 <= 2200 )\n      goto LABEL_206;\n    goto LABEL_207;\n  }\n  v18 = 1;\n  v128 = 0LL;\n  v19 = (_DWORD *)(&xmmword_697050 + 4);\n  v129 = 0LL;\n  v130 = 0;\n  v127 = 0;\n  v126 = 0;\n  v125 = 0;\n  v20 = 0;\n  v21 = 0;\n  v22 = 0;\n  v123 = 0;\n  v141 = 0LL;\n  v140 = 0LL;\n  v139 = 0LL;\n  v138 = 0LL;\n  v124 = 0LL;\n  while ( 2 )\n  {\n    v49 = *v19;\n    if ( !*v19 )\n      goto LABEL_204;\n    ++v18;\n    v50 = (dword_696070[v49] + 1) >> 1;\n    v51 = ((__int64 (__usercall *)@<rax>(__int64@<rax>, unsigned int@<edi>, unsigned int@<esi>))off_41D9E0[v50])(\n            v50,\n            v49,\n            (dword_696070[v49] + 1) & 1);\n    v52 = v122 + v51;\n    v122 = v52;\n    v53 = dword_41A8E0[v49];\n    LODWORD(v29) = v53 + 1;\n    v54 = dword_41AB20[v49];\n    switch ( dword_696070[v49] )\n    {\n      case 1:\n        v55 = dword_41DA20[v49];\n        v56 = v55 + v52;\n        v122 = v56;\n        v57 = *((_DWORD *)&v148 + v53 + 2);\n        v58 = 0;\n        if ( v57 <= v54 || *((_DWORD *)&v148 + v53) <= v54 )\n        {\n          v46 = v56;\n          v59 = 0;\n        }\n        else\n        {\n          v46 = v56 - 8;\n          v122 = v56 - 8;\n          v59 = 1;\n          if ( !*((_DWORD *)&v135 + v53 + 1) && !*((_DWORD *)&v134 + v53 + 3) )\n          {\n            v122 = v56 - 13;\n            v58 = 1;\n            v46 = v56 - 13;\n            v59 = 1;\n          }\n        }\n        v77 = *((_DWORD *)&v132 + v53 + 1);\n        if ( !v77 )\n        {\n          if ( v59 )\n          {\n            v46 -= 3;\n            v122 = v46;\n          }\n          if ( v58 )\n          {\n            v46 -= 5;\n            v122 = v46;\n          }\n        }\n        v78 = *((_DWORD *)&v135 + v53);\n        if ( v78 >= 2 )\n        {\n          v46 += -3 * v78 + 3;\n          v122 = v46;\n        }\n        if ( !v77 && v54 >= *((_DWORD *)&v143 + v53) && v54 >= *((_DWORD *)&v143 + v53 + 2) )\n        {\n          v142 = v20;\n          v46 += 3 * v55 + 30;\n          v122 = v46;\n          v79 = dword_41AA94[v53] - dword_41A8E0[dword_697370];\n          if ( v79 < 1 )\n            v79 = dword_41A8E0[dword_697370] - dword_41AA94[v53];\n          v80 = dword_41ACD4[v53];\n          v81 = v80 - dword_41AB20[dword_697370];\n          if ( v81 < 1 )\n            v81 = dword_41AB20[dword_697370] - v80;\n          if ( v79 >= v81 )\n            v81 = v79;\n          v82 = v81 - ((unsigned int)dword_6974EC < 1);\n          v83 = v80 - v54;\n          v84 = -v83;\n          if ( -v83 < 1 )\n            v84 = v83;\n          v85 = v129;\n          if ( v82 > v84 )\n            v85 = (unsigned int)(v129 + 800);\n          v129 = v85;\n          if ( (_DWORD)v53 == 8 || (_DWORD)v53 == 1 )\n          {\n            v46 += 2 * v55 + 12;\n            v122 = v46;\n          }\n          v20 = v142;\n          if ( !v58 )\n          {\n            v46 += 12;\n            v122 = v46;\n            if ( *((_DWORD *)&v135 + v53 + 1) )\n            {\n              if ( !*((_DWORD *)&v132 + v53 + 2) && v57 >= *((_DWORD *)&v143 + v53 + 3) )\n              {\n                v46 += 7 * v54;\n                v122 = v46;\n                if ( v54 == 7 && v57 >= 6 )\n                {\n                  v46 += 50;\n                  v122 = v46;\n                }\n              }\n            }\n            if ( *((_DWORD *)&v134 + v53 + 3) )\n            {\n              if ( !*((_DWORD *)&v132 + v53) && v57 >= *(&v142 + v53) )\n              {\n                v46 += 7 * v54;\n                v122 = v46;\n                if ( v54 == 7 && *((_DWORD *)&v148 + v53) >= 6 )\n                {\n                  v46 += 50;\n                  v122 = v46;\n                }\n              }\n            }\n          }\n        }\n        ++HIDWORD(v124);\n        if ( !*((_DWORD *)&v134 + v53 + 3) )\n          v122 = v46 - 7;\n        goto LABEL_204;\n      case 2:\n        v60 = dword_41DC60[v49];\n        v61 = v52 - v60;\n        v122 = v61;\n        v62 = *((_DWORD *)&v143 + v53 + 2);\n        v63 = 0;\n        if ( v62 >= v54 || *((_DWORD *)&v143 + v53) >= v54 )\n        {\n          v47 = v61;\n          v64 = 0;\n        }\n        else\n        {\n          v47 = v61 + 8;\n          v122 = v61 + 8;\n          v64 = 1;\n          if ( !*((_DWORD *)&v132 + v53 + 2) && !*((_DWORD *)&v132 + v53) )\n          {\n            v122 = v61 + 13;\n            v63 = 1;\n            v47 = v61 + 13;\n            v64 = 1;\n          }\n        }\n        v29 = (signed int)v29;\n        v86 = *((_DWORD *)&v134 + (signed int)v29 + 3);\n        if ( !v86 )\n        {\n          if ( v64 )\n          {\n            v47 += 3;\n            v122 = v47;\n          }\n          if ( v63 )\n          {\n            v47 += 5;\n            v122 = v47;\n          }\n        }\n        v87 = *((_DWORD *)&v132 + v29);\n        if ( v87 >= 2 )\n        {\n          v47 = v47 + 3 * v87 - 3;\n          v122 = v47;\n        }\n        if ( !v86 && v54 <= *((_DWORD *)&v148 + v53) && v54 <= *((_DWORD *)&v148 + v53 + 2) )\n        {\n          v47 = v47 - 3 * v60 - 30;\n          v122 = v47;\n          v88 = dword_41A944[v53] - dword_41A8E0[dword_6974F0];\n          if ( v88 < 1 )\n            v88 = dword_41A8E0[dword_6974F0] - dword_41A944[v53];\n          v89 = dword_41AB84[v53];\n          v90 = v89 - dword_41AB20[dword_6974F0];\n          if ( v90 < 1 )\n            v90 = dword_41AB20[dword_6974F0] - v89;\n          if ( v88 >= v90 )\n            v90 = v88;\n          v91 = ((unsigned int)dword_6974EC < 1) + v90 - 1;\n          v92 = v89 - v54;\n          v93 = -v92;\n          if ( -v92 < 1 )\n            v93 = v92;\n          v94 = v128;\n          if ( v91 > v93 )\n            v94 = (unsigned int)(v128 - 800);\n          v128 = v94;\n          if ( (_DWORD)v53 == 8 || (_DWORD)v53 == 1 )\n          {\n            v47 = v47 - 2 * v60 - 12;\n            v122 = v47;\n          }\n          if ( !v63 )\n          {\n            v47 -= 12;\n            v122 = v47;\n            if ( *((_DWORD *)&v132 + v53 + 2) )\n            {\n              if ( !*((_DWORD *)&v135 + v53 + 1) && v62 <= *((_DWORD *)&v148 + v53 + 3) )\n              {\n                v47 -= 7 * (9 - v54);\n                v122 = v47;\n                if ( v54 == 2 && v62 <= 3 )\n                {\n                  v47 -= 50;\n                  v122 = v47;\n                }\n              }\n            }\n            if ( *((_DWORD *)&v132 + v53) )\n            {\n              if ( !*((_DWORD *)&v134 + v53 + 3) )\n              {\n                v48 = *((_DWORD *)&v143 + v53);\n                if ( v48 <= *(&v147 + v53) )\n                {\n                  v47 -= 7 * (9 - v54);\n                  v122 = v47;\n                  if ( v54 == 2 && v48 <= 3 )\n                  {\n                    v47 -= 50;\n                    v122 = v47;\n                  }\n                }\n              }\n            }\n          }\n        }\n        LODWORD(v124) = v124 + 1;\n        if ( !*((_DWORD *)&v132 + v53) )\n          v122 = v47 + 7;\n        goto LABEL_204;\n      case 3:\n        v138 = (unsigned int)(v138 + 1);\n        goto LABEL_204;\n      case 4:\n        v139 = (unsigned int)(v139 + 1);\n        goto LABEL_204;\n      case 5:\n        if ( dword_6974F4 < 1301 )\n        {\n          v95 = dword_41E0E0[v49] + v52;\n          goto LABEL_203;\n        }\n        v27 = dword_41DEA0[v49] + v52;\n        v122 = v27;\n        if ( dword_6974E4 == 1 )\n        {\n          v27 += 25;\nLABEL_29:\n          v122 = v27;\nLABEL_30:\n          v28 = v27;\n          goto LABEL_31;\n        }\n        if ( dword_6974E4 == 2 )\n        {\n          v27 += 15;\n          goto LABEL_29;\n        }\n        if ( !dword_696328 )\n          goto LABEL_30;\n        v28 = v27 - 10;\n        v122 = v27 - 10;\n        if ( !*((_DWORD *)&v134 + (signed int)v29 + 3) )\n        {\n          v27 -= 25;\n          goto LABEL_29;\n        }\nLABEL_31:\n        if ( (dword_41A8E0[dword_6974F0] & 0xFFFFFFFE) == 4 )\n        {\n          v122 = v28 - 10;\n        }\n        else\n        {\n          v29 = (signed int)v29;\n          v30 = *((_DWORD *)&v148 + (signed int)v29);\n          v31 = __OFSUB__(v30, v54);\n          v32 = v30 - v54;\n          if ( (unsigned __int8)((v32 < 0) ^ v31) | (v32 == 0) || !*((_DWORD *)&v134 + v29 + 3) )\n            v33 = v28 - 22;\n          else\n            v33 = -9 * v32 + v28 + 9;\n          v122 = v33;\n          if ( v54 < *((_DWORD *)&v148 + v53 + 2) && *((_DWORD *)&v135 + v53 + 1) )\n            v34 = v33 + 8 * (v54 - *((_DWORD *)&v148 + v53 + 2)) + 8;\n          else\n            v34 = v33 - 16;\n          v122 = v34;\n          v31 = __OFSUB__(v54, *((_DWORD *)&v148 + v53));\n          v35 = v54 - *((_DWORD *)&v148 + v53);\n          if ( (v35 < 0) ^ v31 && *((_DWORD *)&v134 + v53 + 3) )\n            v122 = v34 + 8 * v35 + 8;\n          else\n            v122 = v34 - 16;\n        }\n        goto LABEL_204;\n      case 6:\n        if ( dword_69737C >= 1301 )\n        {\n          v36 = v52 - dword_41E320[v49];\n          v122 = v36;\n          if ( dword_697374 == 3 )\n          {\n            v36 -= 25;\n          }\n          else if ( dword_697374 == 4 )\n          {\n            v36 -= 15;\n          }\n          else\n          {\n            if ( !dword_696478 )\n              goto LABEL_50;\n            v37 = v36 + 10;\n            v122 = v36 + 10;\n            if ( *((_DWORD *)&v132 + (signed int)v29) )\n            {\nLABEL_51:\n              if ( (dword_41A8E0[dword_697370] & 0xFFFFFFFE) == 4 )\n              {\n                v122 = v37 + 10;\n              }\n              else\n              {\n                v38 = v20;\n                v39 = (signed int)v29;\n                v40 = *((_DWORD *)&v143 + (signed int)v29);\n                v41 = 22;\n                if ( v54 > v40 && *((_DWORD *)&v132 + v39) )\n                  v41 = 9 * dword_41E560[v54 - 1 - v40];\n                v42 = v41 + v37;\n                v122 = v42;\n                v43 = *((_DWORD *)&v143 + v53 + 2);\n                v20 = v38;\n                if ( v54 > v43 && *((_DWORD *)&v132 + v53 + 2) )\n                  v44 = v42 + 8 * dword_41E560[v54 - 1 - v43];\n                else\n                  v44 = v42 + 16;\n                v122 = v44;\n                v45 = *((_DWORD *)&v143 + v53);\n                if ( v54 > v45 && *((_DWORD *)&v132 + v53) )\n                  v122 = v44 + 8 * dword_41E560[v54 - 1 - v45];\n                else\n                  v122 = v44 + 16;\n              }\n              goto LABEL_204;\n            }\n            v36 += 25;\n          }\n          v122 = v36;\nLABEL_50:\n          v37 = v36;\n          goto LABEL_51;\n        }\n        v95 = v52 - dword_41E0E0[v49];\nLABEL_203:\n        v122 = v95;\nLABEL_204:\n        ++v19;\n        if ( v18 <= dword_69747C )\n          continue;\n        v8 = dword_6974F4;\n        v10 = dword_69737C;\n        v26 = v141;\n        v25 = v140;\n        v24 = v139;\n        v23 = v138;\n        if ( dword_6974F4 > 2200 )\n        {\nLABEL_207:\n          if ( !dword_696354 && dword_696144 != 13 )\n            v122 -= 5;\n          if ( !dword_696358 && dword_696148 != 13 )\n            v122 -= 5;\n          if ( !dword_696444 && dword_6961D4 != 13 )\n            v122 += 5;\n          if ( !dword_696448 && dword_6961D8 != 13 )\n            v122 += 5;\n          goto LABEL_219;\n        }\nLABEL_206:\n        if ( v10 >= 2201 )\n          goto LABEL_207;\nLABEL_219:\n        v96 = v20;\n        v97 = 0;\n        if ( v8 > 1300 || v10 >= 1301 )\n        {\n          v99 = dword_41A8E0[dword_6974F0];\n          v100 = dword_41A8E0[dword_697370];\n          v101 = v100 - v99;\n          if ( (signed int)v100 - (signed int)v99 < 1 )\n            v101 = v99 - v100;\n          v98 = 0;\n          if ( v101 >= 3 )\n          {\n            v102 = 3\n                 * (dword_41E560[*((signed int *)&v143 + v99)]\n                  + dword_41E560[*((signed int *)&v143 + v99 + 1)]\n                  + dword_41E560[*((signed int *)&v143 + v99 + 2)]);\n            v103 = *((_DWORD *)&v132 + v99 + 1) == 0;\n            v104 = v102 + 8 * v103 - 18;\n            v105 = v102 + 8 * v103 - 12;\n            if ( *((_DWORD *)&v132 + v99 + 2) )\n              v105 = v104;\n            v97 = v105 + 6;\n            if ( *((_DWORD *)&v132 + v99) )\n              v97 = v105;\n            v106 = 3 * (*((_DWORD *)&v148 + v100) + *((_DWORD *)&v148 + v100 + 1) + *((_DWORD *)&v148 + v100 + 2));\n            v107 = *((_DWORD *)&v135 + v100) == 0;\n            v108 = v106 + 8 * v107 - 18;\n            v109 = v106 + 8 * v107 - 12;\n            if ( *((_DWORD *)&v135 + v100 + 1) )\n              v109 = v108;\n            v98 = v109 + 6;\n            if ( *((_DWORD *)&v134 + v100 + 3) )\n              v98 = v109;\n          }\n          if ( !v22 )\n            goto LABEL_237;\nLABEL_222:\n          if ( v10 < 1301 )\n            goto LABEL_237;\n          v122 -= v97;\n          if ( v123 )\n          {\nLABEL_238:\n            if ( v8 >= 1301 )\n              v122 += v98;\n          }\n        }\n        else\n        {\n          v98 = 0;\n          if ( v22 )\n            goto LABEL_222;\nLABEL_237:\n          if ( v123 )\n            goto LABEL_238;\n        }\n        if ( !(v25 | v23 | v123 | v21) )\n          v122 += v128;\n        if ( !(v26 | v24 | v22 | v96) )\n          v122 += v129;\n        if ( !v124 )\n        {\n          v114 = v123 | v22;\n          if ( v96 | v21 | v114 )\n          {\n            if ( v114 )\n              goto LABEL_299;\n            if ( v21 != 1 || v96 != 1 )\n            {\n              if ( v21 != 1 || v96 )\n              {\n                if ( v26 + v24 || v21 || v96 != 1 || (unsigned int)(v25 + v23 - 1) > 1 )\n                  goto LABEL_299;\n              }\n              else if ( v25 + v23 || (unsigned int)(v26 + v24 - 1) > 1 )\n              {\n                goto LABEL_299;\n              }\n            }\n            else if ( v23 + v25 > 1 || v24 + v26 > 1 )\n            {\n              goto LABEL_299;\n            }\n          }\n          else if ( v25 | v26 )\n          {\n            if ( v23 | v24 )\n            {\n              if ( (v25 != 0 || v23 > 2) == 1 && (v23 | v25 ^ 1) != 0\n                || (v26 != 0 || v24 > 2) == 1 && (v24 | v26 ^ 1) != 0 )\n              {\n                goto LABEL_299;\n              }\n            }\n            else\n            {\n              v118 = v25 - v26;\n              v119 = -v118;\n              if ( -v118 < 1 )\n                v119 = v118;\n              if ( v119 > 1 )\n                goto LABEL_299;\n            }\n          }\n          else if ( v23 > 2 || v24 > 2 )\n          {\n            goto LABEL_299;\n          }\n          v122 = 0;\n          goto LABEL_299;\n        }\n        v110 = v23 + v25;\n        v111 = v24 + v26;\n        v112 = v123 + v21;\n        v113 = v22 + v96;\n        if ( v110 == v111 )\n        {\n          if ( v112 != v113 )\n            goto LABEL_299;\n          if ( !v123 || v22 )\n          {\n            if ( v123 || !v22 )\n              goto LABEL_299;\nLABEL_293:\n            v122 -= 120;\n            goto LABEL_299;\n          }\n          goto LABEL_282;\n        }\n        v115 = v112 - v113;\n        if ( v115 )\n        {\n          v117 = -v115;\n          if ( -v115 < 1 )\n            v117 = v115;\n          if ( v117 == 2 )\n          {\n            if ( v110 <= v111 + 2 )\n            {\n              if ( v111 <= v110 + 2 )\n                goto LABEL_299;\n              goto LABEL_293;\n            }\n          }\n          else\n          {\n            if ( v117 != 1 )\n              goto LABEL_299;\n            if ( v110 <= v111 + 1 )\n            {\n              if ( v111 <= v110 + 1 )\n                goto LABEL_299;\n              goto LABEL_293;\n            }\n          }\nLABEL_282:\n          v122 += 120;\n          goto LABEL_299;\n        }\n        if ( v110 <= v111 )\n          v116 = v122 - 120;\n        else\n          v116 = v122 + 120;\n        v122 = v116;\nLABEL_299:\n        sub_402640(v122);\n        v5 = v122;\n        v120 = v122 - dword_697334;\n        if ( v122 - dword_697334 < 1 )\n          v120 = dword_697334 - v122;\n        if ( v120 > dword_697434 )\n        {\n          v121 = 1000;\n          if ( v120 < 1001 )\n            v121 = v120;\n          dword_697434 = v121;\n        }\nLABEL_305:\n        result = -v5;\n        if ( dword_6974EC == 1 )\n          result = v5;\n        return result;\n      case 7:\n        v65 = v127;\n        if ( !v21 )\n          v65 = dword_41AB20[v49];\n        v127 = v65;\n        v66 = v21 + 1;\n        v67 = v130;\n        if ( !v21 )\n          v67 = v53;\n        if ( v54 != 7 )\n          goto LABEL_123;\n        v68 = v52 + 25;\n        v122 = v52 + 25;\n        if ( v66 == 2 && v127 == 7 )\n        {\n          v52 += 35;\n          v122 = v52;\nLABEL_123:\n          v68 = v52;\n        }\n        v69 = *((_DWORD *)&v134 + (signed int)v29 + 3) == 0;\n        v130 = v67;\n        if ( !v69 )\n          goto LABEL_309;\n        v69 = (v66 ^ 2 | v67 ^ (unsigned int)v53) == 0;\n        v70 = 5;\n        if ( v69 )\n          v70 = 17;\n        v71 = v70 + v68;\n        v122 = v71;\n        if ( !*((_DWORD *)&v132 + (signed int)v29) )\n        {\n          v122 = v71 + 3;\n          ++v21;\n        }\n        else\n        {\nLABEL_309:\n          ++v21;\n        }\n        goto LABEL_204;\n      case 8:\n        v72 = v125;\n        if ( !v20 )\n          v72 = dword_41AB20[v49];\n        v125 = v72;\n        v73 = v126;\n        if ( !v20 )\n          v73 = v53;\n        v126 = v73;\n        if ( v54 != 2 )\n          goto LABEL_137;\n        v74 = v52 - 25;\n        v122 = v52 - 25;\n        if ( v21 == 2 && v125 == 2 )\n        {\n          v52 -= 35;\n          v122 = v52;\nLABEL_137:\n          v74 = v52;\n        }\n        ++v20;\n        if ( !*((_DWORD *)&v132 + (signed int)v29) )\n        {\n          v69 = (v20 ^ 2 | v126 ^ (unsigned int)v53) == 0;\n          v75 = -5;\n          if ( v69 )\n            v75 = -17;\n          v76 = v75 + v74;\n          v122 = v76;\n          if ( !*((_DWORD *)&v134 + (signed int)v29 + 3) )\n            v122 = v76 - 3;\n        }\n        goto LABEL_204;\n      case 9:\n        ++v123;\n        goto LABEL_204;\n      case 10:\n        ++v22;\n        goto LABEL_204;\n      case 11:\n        v140 = (unsigned int)(v140 + 1);\n        goto LABEL_204;\n      case 12:\n        v141 = (unsigned int)(v141 + 1);\n        goto LABEL_204;\n      default:\n        goto LABEL_204;\n    }\n  }\n}\n", 
            "funcStartAddr": "0x4091c0L", 
            "funcEndAddr": "0x40a175L", 
            "funcName": "sub_4091C0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_40A180()\n{\n  __int64 result; // rax\n\n  result = (unsigned int)dword_4225A0;\n  dword_422560 = dword_4225A0;\n  xmmword_422550 = xmmword_422590;\n  xmmword_422540 = xmmword_422580;\n  xmmword_422530 = xmmword_422570;\n  return result;\n}\n", 
            "funcStartAddr": "0x40a180L", 
            "funcEndAddr": "0x40a1b7L", 
            "funcName": "sub_40A180"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_40A1F0(_BYTE *a1)\n{\n  int result; // eax\n\n  if ( *a1 == 32 )\n  {\n    if ( !dword_697400 )\n    {\n      __isoc99_sscanf(a1 + 1, \"%s\", &xmmword_696A50);\n      dword_697400 = 1;\n      puts(\"tellics ptell Hello! I am Sjeng and hope you enjoy playing with me.\");\n      puts(\"tellics ptell For help on some commands that I understand, ptell me 'help'\");\n      puts(\"tellics set f5 bughouse\");\n      result = puts(\"tellics unseek\");\n    }\n  }\n  else\n  {\n    xmmword_696B40 = 0LL;\n    xmmword_696B30 = 0LL;\n    xmmword_696B20 = 0LL;\n    xmmword_696B10 = 0LL;\n    xmmword_696B00 = 0LL;\n    xmmword_696AF0 = 0LL;\n    xmmword_696AE0 = 0LL;\n    xmmword_696AD0 = 0LL;\n    xmmword_696AC0 = 0LL;\n    xmmword_696AB0 = 0LL;\n    xmmword_696AA0 = 0LL;\n    xmmword_696A90 = 0LL;\n    xmmword_696A80 = 0LL;\n    xmmword_696A70 = 0LL;\n    xmmword_696A60 = 0LL;\n    xmmword_696A50 = 0LL;\n    dword_697400 = 0;\n    result = puts(\"tellics set f5 1=1\");\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x40a1f0L", 
            "funcEndAddr": "0x40a2d3L", 
            "funcName": "sub_40A1F0"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_40A2E0(__int64 a1)\n{\n  const char *v1; // rbx\n  const char *v2; // rdi\n  char v3; // bp\n  char *v4; // rax\n  signed int v5; // ebp\n  char *v6; // rax\n  __int128 v8; // [rsp+0h] [rbp-68h]\n  __int128 v9; // [rsp+10h] [rbp-58h]\n  __int128 v10; // [rsp+20h] [rbp-48h]\n  __int128 v11; // [rsp+30h] [rbp-38h]\n  __int128 v12; // [rsp+40h] [rbp-28h]\n\n  v12 = xmmword_41E5D0;\n  v11 = xmmword_41E5C0;\n  v10 = xmmword_41E5B0;\n  v9 = xmmword_41E5A0;\n  v8 = xmmword_41E590;\n  v1 = (const char *)(a1 + 6);\n  if ( !strncmp((const char *)(a1 + 6), \"help\", 4uLL) )\n  {\n    v2 = \"tellics ptell Commands that I understand are : sit, go, fast, slow, abort, flag, +/++/+++/-/--/---{p,n,b,r,q,d,\"\n         \"h,trades}, x, dead, formula, help.\";\n    goto LABEL_20;\n  }\n  if ( dword_697360 != 1 && strncmp(v1, \"sorry\", 5uLL) )\n  {\n    v2 = \"tellics ptell Sorry, but I'm not playing a bughouse game.\";\nLABEL_20:\n    LODWORD(v4) = puts(v2);\n    return (signed int)v4;\n  }\n  if ( !strncmp(v1, \"sit\", 3uLL) )\n  {\n    LODWORD(v4) = puts(\"tellics ptell Ok, I sit next move. Tell me when to go.\");\n    dword_697450 = 1;\n    dword_69744C = 0;\n    return (signed int)v4;\n  }\n  if ( !strncmp(v1, \"go\", 2uLL) || !strncmp(v1, \"move\", 4uLL) )\n  {\n    LODWORD(v4) = puts(\"tellics ptell Ok, I'm moving.\");\n    dword_697450 = 0;\n    dword_69744C = 4;\n    return (signed int)v4;\n  }\n  if ( !strncmp(v1, \"fast\", 4uLL) || !strncmp(v1, \"time\", 4uLL) )\n  {\n    LODWORD(v4) = puts(\"tellics ptell Ok, I'm going FAST!\");\n    dword_6973F8 = 1;\nLABEL_24:\n    dword_697450 = 0;\n    return (signed int)v4;\n  }\n  if ( !strncmp(v1, \"slow\", 4uLL) )\n  {\n    LODWORD(v4) = puts(\"tellics ptell Ok, moving normally.\");\n    dword_6973F8 = 0;\n    goto LABEL_24;\n  }\n  if ( !strncmp(v1, \"abort\", 5uLL) )\n  {\n    puts(\"tellics ptell Requesting abort...\");\n    v2 = \"tellics abort\";\n    goto LABEL_20;\n  }\n  if ( !strncmp(v1, \"flag\", 4uLL) )\n  {\n    puts(\"tellics ptell Flagging...\");\n    v2 = \"tellics flag\";\n    goto LABEL_20;\n  }\n  v3 = *v1;\n  if ( *v1 == 120 )\n    goto LABEL_33;\n  if ( v3 != 45 )\n  {\n    if ( v3 == 43 )\n    {\n      if ( strstr(v1, \"trade\")\n        || !strchr(v1, 110)\n        && !strchr(v1, 98)\n        && !strchr(v1, 112)\n        && !strchr(v1, 114)\n        && !strchr(v1, 113)\n        && !strchr(v1, 100)\n        && !strchr(v1, 104) )\n      {\n        if ( dword_6973B4 == 1 )\n        {\n          DWORD1(xmmword_422530) += 25;\n          HIDWORD(xmmword_422530) += 50;\n          HIDWORD(xmmword_422550) += 50;\n          HIDWORD(xmmword_422540) += 50;\n          DWORD1(xmmword_422550) += 100;\n        }\n        else\n        {\n          DWORD2(xmmword_422530) -= 25;\n          LODWORD(xmmword_422540) = xmmword_422540 - 50;\n          dword_422560 -= 50;\n          LODWORD(xmmword_422550) = xmmword_422550 - 50;\n          DWORD2(xmmword_422550) -= 100;\n        }\n        puts(\"tellics ptell Ok, trading is GOOD\");\n        v5 = 0;\nLABEL_74:\n        if ( strchr(v1, 110) )\n        {\n          if ( dword_6973B4 == 1 )\n            HIDWORD(xmmword_422530) = v5 + HIDWORD(xmmword_422570);\n          else\n            LODWORD(xmmword_422540) = xmmword_422580 - v5;\n          printf(\"tellics ptell Ok, Knight %s\\n\", &v8, v8, v9, v10, v11, v12);\n        }\n        if ( strchr(v1, 98) )\n        {\n          if ( dword_6973B4 == 1 )\n          {\n            HIDWORD(xmmword_422550) = v5 + HIDWORD(xmmword_422590);\n            DWORD1(xmmword_422550) = v5 + DWORD1(xmmword_422590);\n          }\n          else\n          {\n            dword_422560 = dword_4225A0 - v5;\n            DWORD2(xmmword_422550) = DWORD2(xmmword_422590) - v5;\n          }\n          printf(\"tellics ptell Ok, Bishop %s\\n\", &v8, v8, v9, v10, v11, v12);\n        }\n        if ( strchr(v1, 114) )\n        {\n          if ( dword_6973B4 == 1 )\n          {\n            HIDWORD(xmmword_422540) = v5 + HIDWORD(xmmword_422580);\n            DWORD1(xmmword_422550) = v5 + DWORD1(xmmword_422590);\n          }\n          else\n          {\n            LODWORD(xmmword_422550) = xmmword_422590 - v5;\n            DWORD2(xmmword_422550) = DWORD2(xmmword_422590) - v5;\n          }\n          printf(\"tellics ptell Ok, Rook %s\\n\", &v8, v8, v9, v10, v11, v12);\n        }\n        if ( strchr(v1, 113) )\n        {\n          if ( dword_6973B4 == 1 )\n            DWORD1(xmmword_422550) = v5 + DWORD1(xmmword_422590);\n          else\n            DWORD2(xmmword_422550) = DWORD2(xmmword_422590) - v5;\n          printf(\"tellics ptell Ok, Queen %s\\n\", &v8, v8, v9, v10, v11, v12);\n        }\n        if ( strchr(v1, 112) )\n        {\n          if ( dword_6973B4 == 1 )\n          {\n            DWORD1(xmmword_422530) = v5 + DWORD1(xmmword_422570);\n            DWORD1(xmmword_422550) = v5 + DWORD1(xmmword_422590);\n            HIDWORD(xmmword_422550) = v5 + HIDWORD(xmmword_422590);\n          }\n          else\n          {\n            DWORD2(xmmword_422530) = DWORD2(xmmword_422570) - v5;\n            DWORD2(xmmword_422550) = DWORD2(xmmword_422590) - v5;\n            dword_422560 = dword_4225A0 - v5;\n          }\n          printf(\"tellics ptell Ok, Pawn %s\\n\", &v8, v8, v9, v10, v11, v12);\n        }\n        if ( strchr(v1, 100) )\n        {\n          if ( dword_6973B4 == 1 )\n          {\n            DWORD1(xmmword_422530) = v5 + DWORD1(xmmword_422570);\n            HIDWORD(xmmword_422550) = v5 + HIDWORD(xmmword_422590);\n            DWORD1(xmmword_422550) = v5 + DWORD1(xmmword_422590);\n          }\n          else\n          {\n            DWORD2(xmmword_422530) = DWORD2(xmmword_422570) - v5;\n            dword_422560 = dword_4225A0 - v5;\n            DWORD2(xmmword_422550) = DWORD2(xmmword_422590) - v5;\n          }\n          printf(\"tellics ptell Ok, Diagonal %s\\n\", &v8, v8, v9, v10, v11, v12);\n        }\n        v4 = strchr(v1, 104);\n        if ( v4 )\n        {\n          if ( dword_6973B4 == 1 )\n            goto LABEL_136;\n          goto LABEL_106;\n        }\n        return (signed int)v4;\n      }\n      if ( strstr(v1, \"+++\") )\n      {\n        WORD2(v8) = 115;\n        LODWORD(v8) = 1702125933;\n        v5 = 50000;\n        goto LABEL_74;\n      }\n      if ( strstr(v1, \"++\") )\n      {\n        v10 = xmmword_418A2F;\n        v9 = xmmword_418A1F;\n        v8 = xmmword_418A0F;\n        LOBYTE(v11) = 0;\n        v5 = 1000;\n        goto LABEL_74;\n      }\n      if ( strchr(v1, 43) )\n      {\n        *(__int128 *)((char *)&v9 + 12) = *(__int128 *)((char *)&xmmword_418A50 + 12);\n        v9 = xmmword_418A50;\n        v8 = xmmword_418A40;\n        v5 = 150;\n        goto LABEL_74;\n      }\nLABEL_151:\n      BUG();\n    }\n    if ( !strstr(v1, \"mate me anymore\") )\n    {\n      if ( strstr(v1, \"never\") )\n      {\n        v6 = strstr(v1, \"mind\");\n        if ( v3 != 61 && !v6 )\n          goto LABEL_34;\n      }\n      else if ( v3 != 61 )\n      {\n        goto LABEL_34;\n      }\n    }\nLABEL_33:\n    if ( !strstr(v1, \"ptell me\") )\n    {\n      puts(\"tellics ptell Ok, reverting to STANDARD piece values!\");\n      xmmword_422530 = xmmword_422570;\n      xmmword_422540 = xmmword_422580;\n      xmmword_422550 = xmmword_422590;\n      LODWORD(v4) = dword_4225A0;\n      dword_422560 = dword_4225A0;\n      dword_697450 = 0;\n      dword_697474 = 0;\n      dword_697480 = 0;\n      return (signed int)v4;\n    }\nLABEL_34:\n    LODWORD(v4) = strncmp(v1, \"i'll have to sit...(dead)\", 0x19uLL);\n    if ( !(_DWORD)v4 || (LODWORD(v4) = strncmp(v1, \"dead\", 4uLL), !(_DWORD)v4) )\n    {\n      dword_6973F8 = 1;\n      dword_697450 = 0;\n      dword_697474 = 1;\n      return (signed int)v4;\n    }\n    LODWORD(v4) = strncmp(v1, \"i'll have to sit...(piece)\", 0x1AuLL);\n    if ( !(_DWORD)v4 )\n    {\n      dword_6973F8 = 1;\n      dword_697450 = 0;\n      dword_697480 = 1;\n      return (signed int)v4;\n    }\n    LODWORD(v4) = strncmp(v1, \"sorry\", 5uLL);\n    if ( (_DWORD)v4 )\n    {\n      LODWORD(v4) = strncmp(v1, \"ok\", 2uLL);\n      if ( (_DWORD)v4 )\n      {\n        if ( !strncmp(v1, \"hi\", 2uLL) || !strncmp(v1, \"hello\", 5uLL) )\n        {\n          v2 = \"tellics ptell Greetings.\";\n        }\n        else if ( strstr(v1, \"formula\") )\n        {\n          puts(\"tellics ptell Setting formula, if you are still interrupted, complain to my operator.\");\n          v2 = \"tellics set f5 bughouse\";\n        }\n        else\n        {\n          v2 = \"tellics ptell Sorry, but I don't understand that command.\";\n        }\n        goto LABEL_20;\n      }\n    }\n    return (signed int)v4;\n  }\n  if ( !strstr(v1, \"trade\")\n    && (strchr(v1, 110)\n     || strchr(v1, 98)\n     || strchr(v1, 112)\n     || strchr(v1, 114)\n     || strchr(v1, 113)\n     || strchr(v1, 100)\n     || strchr(v1, 104)) )\n  {\n    if ( strstr(v1, \"---\") )\n    {\n      *(_QWORD *)((char *)&v10 + 13) = 11669595679126373LL;\n      v10 = xmmword_418B57;\n      v9 = xmmword_418B47;\n      v8 = xmmword_418B37;\n      v5 = 50000;\n    }\n    else if ( strstr(v1, \"--\") )\n    {\n      v10 = xmmword_418B8F;\n      v9 = xmmword_418B7F;\n      v8 = xmmword_418B6F;\n      LODWORD(v11) = 2712673;\n      v5 = 1000;\n    }\n    else\n    {\n      if ( !strchr(v1, 45) )\n        goto LABEL_151;\n      *(__int128 *)((char *)&v9 + 15) = *(__int128 *)((char *)&xmmword_418BB3 + 15);\n      v9 = xmmword_418BB3;\n      v8 = xmmword_418BA3;\n      v5 = 150;\n    }\n  }\n  else\n  {\n    if ( dword_6973B4 == 1 )\n    {\n      DWORD2(xmmword_422530) -= 20;\n      LODWORD(xmmword_422540) = xmmword_422540 - 50;\n      dword_422560 -= 50;\n      LODWORD(xmmword_422550) = xmmword_422550 - 50;\n      DWORD2(xmmword_422550) -= 100;\n    }\n    else\n    {\n      DWORD1(xmmword_422530) += 20;\n      HIDWORD(xmmword_422530) += 50;\n      HIDWORD(xmmword_422550) += 50;\n      HIDWORD(xmmword_422540) += 50;\n      DWORD1(xmmword_422550) += 100;\n    }\n    puts(\"tellics ptell Ok, trading is BAD\");\n    v5 = 0;\n  }\n  if ( strchr(v1, 110) )\n  {\n    if ( dword_6973B4 == 1 )\n      LODWORD(xmmword_422540) = xmmword_422580 - v5;\n    else\n      HIDWORD(xmmword_422530) = v5 + HIDWORD(xmmword_422570);\n    printf(\"tellics ptell Ok, Knight %s\\n\", &v8, (_QWORD)v8);\n  }\n  if ( strchr(v1, 98) )\n  {\n    if ( dword_6973B4 == 1 )\n    {\n      dword_422560 = dword_4225A0 - v5;\n      DWORD2(xmmword_422550) = DWORD2(xmmword_422590) - v5;\n    }\n    else\n    {\n      HIDWORD(xmmword_422550) = v5 + HIDWORD(xmmword_422590);\n      DWORD1(xmmword_422550) = v5 + DWORD1(xmmword_422590);\n    }\n    printf(\"tellics ptell Ok, Bishop %s\\n\", &v8, v8, v9, v10);\n  }\n  if ( strchr(v1, 114) )\n  {\n    if ( dword_6973B4 == 1 )\n    {\n      LODWORD(xmmword_422550) = xmmword_422590 - v5;\n      DWORD2(xmmword_422550) = DWORD2(xmmword_422590) - v5;\n    }\n    else\n    {\n      HIDWORD(xmmword_422540) = v5 + HIDWORD(xmmword_422580);\n      DWORD1(xmmword_422550) = v5 + DWORD1(xmmword_422590);\n    }\n    printf(\"tellics ptell Ok, Rook %s\\n\", &v8, v8, v9, v10, (_QWORD)v11);\n  }\n  if ( strchr(v1, 113) )\n  {\n    if ( dword_6973B4 == 1 )\n      DWORD2(xmmword_422550) = DWORD2(xmmword_422590) - v5;\n    else\n      DWORD1(xmmword_422550) = v5 + DWORD1(xmmword_422590);\n    printf(\"tellics ptell Ok, Queen %s\\n\", &v8, v8, v9, v10, v11, v12);\n  }\n  if ( strchr(v1, 112) )\n  {\n    if ( dword_6973B4 == 1 )\n    {\n      DWORD2(xmmword_422530) = DWORD2(xmmword_422570) - v5;\n      DWORD2(xmmword_422550) = DWORD2(xmmword_422590) - v5;\n      dword_422560 = dword_4225A0 - v5;\n    }\n    else\n    {\n      DWORD1(xmmword_422530) = v5 + DWORD1(xmmword_422570);\n      DWORD1(xmmword_422550) = v5 + DWORD1(xmmword_422590);\n      HIDWORD(xmmword_422550) = v5 + HIDWORD(xmmword_422590);\n    }\n    printf(\"tellics ptell Ok, Pawn %s\\n\", &v8, v8, v9, v10, v11, v12);\n  }\n  if ( strchr(v1, 100) )\n  {\n    if ( dword_6973B4 == 1 )\n    {\n      DWORD2(xmmword_422530) = DWORD2(xmmword_422570) - v5;\n      dword_422560 = dword_4225A0 - v5;\n      DWORD2(xmmword_422550) = DWORD2(xmmword_422590) - v5;\n    }\n    else\n    {\n      DWORD1(xmmword_422530) = v5 + DWORD1(xmmword_422570);\n      HIDWORD(xmmword_422550) = v5 + HIDWORD(xmmword_422590);\n      DWORD1(xmmword_422550) = v5 + DWORD1(xmmword_422590);\n    }\n    printf(\"tellics ptell Ok, Diagonal %s\\n\", &v8, v8, v9, v10, v11, v12);\n  }\n  v4 = strchr(v1, 104);\n  if ( v4 )\n  {\n    if ( dword_6973B4 != 1 )\n    {\nLABEL_136:\n      HIDWORD(xmmword_422540) = v5 + HIDWORD(xmmword_422580);\n      DWORD1(xmmword_422550) = DWORD1(xmmword_422590) + v5;\n      goto LABEL_137;\n    }\nLABEL_106:\n    LODWORD(xmmword_422550) = xmmword_422590 - v5;\n    DWORD2(xmmword_422550) = DWORD2(xmmword_422590) - v5;\nLABEL_137:\n    LODWORD(v4) = printf(\"tellics ptell Ok, Heavy %s\\n\", &v8, v8, v9, v10, v11, v12);\n  }\n  return (signed int)v4;\n}\n", 
            "funcStartAddr": "0x40a2e0L", 
            "funcEndAddr": "0x40aff9L", 
            "funcName": "sub_40A2E0"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_40B000(int a1)\n{\n  int v1; // eax\n  __int64 v2; // rdi\n  int v3; // er14\n  int v4; // er14\n  int v5; // er12\n  int v6; // ebp\n  int v7; // er15\n  int v8; // ebx\n  int v9; // er14\n  __int64 v10; // rdi\n  int v11; // ebx\n  int v12; // er12\n  int v13; // er14\n  int v14; // er15\n  int v15; // ebx\n  int v16; // ebp\n  __int64 v17; // rdi\n  int v18; // ebx\n  int v19; // ebp\n  int v20; // er12\n  int v21; // er14\n  int v22; // er15\n  int v23; // ebx\n  int v24; // ebp\n  __int64 v25; // rdi\n  int v26; // ebp\n  int v27; // er12\n  int v28; // er14\n  int v29; // er15\n  int v30; // ebx\n  int v31; // ebp\n  __int64 v32; // rdi\n  signed int v33; // edx\n  int v34; // ebx\n  int v35; // er12\n  int v36; // er14\n  int v37; // er15\n  int v38; // ebx\n  int v39; // ebp\n  signed int v40; // er14\n  signed int v41; // er15\n  signed int v42; // er12\n  signed int v43; // ebp\n  signed int v44; // er13\n  signed int v45; // ebp\n  signed int v46; // er14\n  int v47; // eax\n  int v48; // eax\n  int v49; // eax\n  int v50; // eax\n  int v51; // eax\n  signed int v52; // ebp\n  signed int v53; // ebp\n  int v54; // [rsp+0h] [rbp-6050h]\n  int v55; // [rsp+4h] [rbp-604Ch]\n  int v56; // [rsp+4h] [rbp-604Ch]\n  int v57; // [rsp+4h] [rbp-604Ch]\n  int v58; // [rsp+4h] [rbp-604Ch]\n  int v59; // [rsp+4h] [rbp-604Ch]\n  int v60; // [rsp+8h] [rbp-6048h]\n  int v61; // [rsp+Ch] [rbp-6044h]\n  int v62; // [rsp+10h] [rbp-6040h]\n  int v63; // [rsp+14h] [rbp-603Ch]\n  char v64; // [rsp+18h] [rbp-6038h]\n  char v65; // [rsp+3018h] [rbp-3038h]\n\n  if ( a1 )\n  {\n    dword_422650 = 0;\n    dword_422654 = 0;\n    dword_422658 = 0;\n    dword_42265C = 0;\n    dword_422660 = 0;\n    return;\n  }\n  v60 = sub_406E60();\n  v1 = dword_6974EC;\n  v2 = 2 - (unsigned int)(dword_6974EC != 0);\n  v3 = 0;\n  v54 = 0;\n  if ( !*((_DWORD *)&xmmword_6971E0[4 * (unsigned __int64)(dword_6974EC == 0)] + v2) )\n  {\n    sub_402430(v2, dword_6974EC == 0);\n    sub_405540((__int64)&v64);\n    v4 = dword_697468;\n    if ( dword_697468 <= 0 )\n    {\n      v54 = 0;\n    }\n    else\n    {\n      v5 = 0;\n      v55 = dword_697468;\n      do\n      {\n        sub_407B10((__int64)&v64, v5);\n        v54 = 0;\n        if ( (unsigned int)sub_404CA0((__int64)&v64, v5, v60) )\n        {\n          v6 = sub_406E60();\n          sub_405540((__int64)&v65);\n          v7 = dword_697468;\n          if ( dword_697468 <= 0 )\n          {\n            v54 = 3;\n          }\n          else\n          {\n            v8 = 0;\n            do\n            {\n              sub_407B10((__int64)&v65, v8);\n              v9 = sub_404CA0((__int64)&v65, v8, v6);\n              sub_4083E0((__int64)&v65, v8++);\n            }\n            while ( v8 < v7 && !v9 );\n            v54 = 3 * (v9 == 0);\n            v4 = v55;\n          }\n        }\n        sub_4083E0((__int64)&v64, v5++);\n      }\n      while ( v5 < v4 && !v54 );\n    }\n    sub_4024A0(2 - (dword_6974EC != 0), dword_6974EC == 0);\n    v1 = dword_6974EC;\n    v3 = 0;\n  }\n  v10 = 4 - (unsigned int)(v1 != 0);\n  if ( !*((_DWORD *)&xmmword_6971E0[4 * (unsigned __int64)(v1 == 0)] + v10) )\n  {\n    sub_402430(v10, v1 == 0);\n    sub_405540((__int64)&v64);\n    v11 = dword_697468;\n    if ( dword_697468 <= 0 )\n    {\n      v3 = 0;\n    }\n    else\n    {\n      v12 = 0;\n      v56 = dword_697468;\n      do\n      {\n        sub_407B10((__int64)&v64, v12);\n        v3 = 0;\n        if ( (unsigned int)sub_404CA0((__int64)&v64, v12, v60) )\n        {\n          v13 = sub_406E60();\n          sub_405540((__int64)&v65);\n          v14 = dword_697468;\n          if ( dword_697468 <= 0 )\n          {\n            v3 = 3;\n          }\n          else\n          {\n            v15 = 0;\n            do\n            {\n              sub_407B10((__int64)&v65, v15);\n              v16 = sub_404CA0((__int64)&v65, v15, v13);\n              sub_4083E0((__int64)&v65, v15++);\n            }\n            while ( v15 < v14 && !v16 );\n            v3 = 3 * (v16 == 0);\n            v11 = v56;\n          }\n        }\n        sub_4083E0((__int64)&v64, v12++);\n      }\n      while ( v12 < v11 && !v3 );\n    }\n    sub_4024A0(4 - (dword_6974EC != 0), dword_6974EC == 0);\n    v1 = dword_6974EC;\n  }\n  v63 = v3;\n  v17 = 12 - (unsigned int)(v1 != 0);\n  v18 = 0;\n  v19 = 0;\n  if ( !*((_DWORD *)&xmmword_6971E0[4 * (unsigned __int64)(v1 == 0)] + v17) )\n  {\n    sub_402430(v17, v1 == 0);\n    sub_405540((__int64)&v64);\n    v57 = dword_697468;\n    if ( dword_697468 <= 0 )\n    {\n      v19 = 0;\n    }\n    else\n    {\n      v20 = 0;\n      do\n      {\n        sub_407B10((__int64)&v64, v20);\n        v19 = 0;\n        if ( (unsigned int)sub_404CA0((__int64)&v64, v20, v60) )\n        {\n          v21 = sub_406E60();\n          sub_405540((__int64)&v65);\n          v22 = dword_697468;\n          if ( dword_697468 <= 0 )\n          {\n            v19 = 3;\n          }\n          else\n          {\n            v23 = 0;\n            do\n            {\n              sub_407B10((__int64)&v65, v23);\n              v24 = sub_404CA0((__int64)&v65, v23, v21);\n              sub_4083E0((__int64)&v65, v23++);\n            }\n            while ( v23 < v22 && !v24 );\n            v19 = 3 * (v24 == 0);\n          }\n        }\n        sub_4083E0((__int64)&v64, v20++);\n      }\n      while ( v20 < v57 && !v19 );\n    }\n    sub_4024A0(12 - (dword_6974EC != 0), dword_6974EC == 0);\n    v1 = dword_6974EC;\n    v18 = 0;\n  }\n  v61 = v19;\n  v25 = 8 - (unsigned int)(v1 != 0);\n  v26 = v54;\n  if ( !*((_DWORD *)&xmmword_6971E0[4 * (unsigned __int64)(v1 == 0)] + v25) )\n  {\n    sub_402430(v25, v1 == 0);\n    sub_405540((__int64)&v64);\n    v58 = dword_697468;\n    if ( dword_697468 <= 0 )\n    {\n      v18 = 0;\n    }\n    else\n    {\n      v27 = 0;\n      do\n      {\n        sub_407B10((__int64)&v64, v27);\n        v18 = 0;\n        if ( (unsigned int)sub_404CA0((__int64)&v64, v27, v60) )\n        {\n          v28 = sub_406E60();\n          sub_405540((__int64)&v65);\n          v29 = dword_697468;\n          if ( dword_697468 <= 0 )\n          {\n            v18 = 3;\n          }\n          else\n          {\n            v30 = 0;\n            do\n            {\n              sub_407B10((__int64)&v65, v30);\n              v31 = sub_404CA0((__int64)&v65, v30, v28);\n              sub_4083E0((__int64)&v65, v30++);\n            }\n            while ( v30 < v29 && !v31 );\n            v18 = 3 * (v31 == 0);\n          }\n        }\n        sub_4083E0((__int64)&v64, v27++);\n      }\n      while ( v27 < v58 && !v18 );\n    }\n    sub_4024A0(8 - (dword_6974EC != 0), dword_6974EC == 0);\n    v1 = dword_6974EC;\n    v26 = v54;\n  }\n  v62 = v18;\n  v32 = 10 - (unsigned int)(v1 != 0);\n  v33 = 0;\n  v34 = 0;\n  if ( !*((_DWORD *)&xmmword_6971E0[4 * (unsigned __int64)(v1 == 0)] + v32) )\n  {\n    sub_402430(v32, v1 == 0);\n    sub_405540((__int64)&v64);\n    v59 = dword_697468;\n    v54 = v26;\n    if ( dword_697468 <= 0 )\n    {\n      v34 = 0;\n    }\n    else\n    {\n      v35 = 0;\n      do\n      {\n        sub_407B10((__int64)&v64, v35);\n        v34 = 0;\n        if ( (unsigned int)sub_404CA0((__int64)&v64, v35, v60) )\n        {\n          v36 = sub_406E60();\n          sub_405540((__int64)&v65);\n          v37 = dword_697468;\n          if ( dword_697468 <= 0 )\n          {\n            v34 = 3;\n          }\n          else\n          {\n            v38 = 0;\n            do\n            {\n              sub_407B10((__int64)&v65, v38);\n              v39 = sub_404CA0((__int64)&v65, v38, v36);\n              sub_4083E0((__int64)&v65, v38++);\n            }\n            while ( v38 < v37 && !v39 );\n            v34 = 3 * (v39 == 0);\n          }\n        }\n        sub_4083E0((__int64)&v64, v35++);\n      }\n      while ( v35 < v59 && !v34 );\n    }\n    sub_4024A0(10 - (dword_6974EC != 0), dword_6974EC == 0);\n    v33 = 0;\n    v26 = v54;\n  }\n  if ( v26 == dword_422650 )\n    goto LABEL_131;\n  if ( v26 == 3 )\n  {\n    v40 = 0;\n    v33 = 1;\n    goto LABEL_83;\n  }\n  if ( v26 | dword_422650 )\n  {\nLABEL_131:\n    v40 = 0;\n  }\n  else\n  {\n    puts(\"tellics ptell p doesn't mate me anymore\");\n    v33 = 0;\n    v40 = 1;\n  }\nLABEL_83:\n  v41 = 0;\n  if ( v63 == dword_422654 )\n  {\nLABEL_84:\n    v42 = 0;\n    goto LABEL_87;\n  }\n  v42 = 1;\n  if ( v63 != 3 )\n  {\n    v42 = 0;\n    if ( !(v63 | dword_422654) )\n    {\n      v52 = v33;\n      puts(\"tellics ptell n doesn't mate me anymore\");\n      v33 = v52;\n      v40 = 1;\n      goto LABEL_84;\n    }\n  }\nLABEL_87:\n  if ( v61 != dword_422658 )\n  {\n    if ( v61 == 3 )\n    {\n      v41 = 1;\n    }\n    else if ( !(v61 | dword_422658) )\n    {\n      v43 = v33;\n      puts(\"tellics ptell b doesn't mate me anymore\");\n      v33 = v43;\n      v40 = 1;\n    }\n  }\n  v44 = 0;\n  if ( v62 == dword_42265C )\n    goto LABEL_93;\n  v45 = 1;\n  if ( v62 != 3 )\n  {\n    v45 = 0;\n    if ( !(v62 | dword_42265C) )\n    {\n      v53 = v33;\n      puts(\"tellics ptell r doesn't mate me anymore\");\n      v33 = v53;\n      v40 = 1;\nLABEL_93:\n      v45 = 0;\n      goto LABEL_96;\n    }\n  }\nLABEL_96:\n  if ( v34 != dword_422660 )\n  {\n    if ( v34 == 3 )\n    {\n      v44 = 1;\n      if ( !v33 )\n        goto LABEL_104;\n      goto LABEL_103;\n    }\n    if ( !(v34 | dword_422660) )\n    {\n      v46 = v33;\n      puts(\"tellics ptell q doesn't mate me anymore\");\n      v33 = v46;\n      v40 = 1;\n    }\n  }\n  if ( v33 )\nLABEL_103:\n    puts(\"tellics ptell ---p\");\nLABEL_104:\n  if ( v42 )\n    puts(\"tellics ptell ---n\");\n  if ( v41 )\n    puts(\"tellics ptell ---b\");\n  if ( v45 )\n    puts(\"tellics ptell ---r\");\n  if ( v44 )\n    puts(\"tellics ptell ---q\");\n  if ( v40 && dword_697480 )\n  {\n    dword_697480 = 0;\n    puts(\"tellics ptell x\");\n    puts(\"tellics ptell go\");\n    dword_6973F8 = 0;\n  }\n  v47 = dword_422650 - 1;\n  if ( v54 )\n    v47 = v54;\n  dword_422650 = v47;\n  v48 = dword_422658 - 1;\n  if ( v61 )\n    v48 = v61;\n  dword_422658 = v48;\n  v49 = dword_42265C - 1;\n  if ( v62 )\n    v49 = v62;\n  dword_42265C = v49;\n  v50 = dword_422660 - 1;\n  if ( v34 )\n    v50 = v34;\n  dword_422660 = v50;\n  v51 = dword_422654 - 1;\n  if ( v63 )\n    v51 = v63;\n  dword_422654 = v51;\n}\n", 
            "funcStartAddr": "0x40b000L", 
            "funcEndAddr": "0x40b926L", 
            "funcName": "sub_40B000"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_40B960(__int64 a1)\n{\n  __int64 v1; // r14\n  _QWORD *v2; // rdi\n  unsigned __int8 v3; // cl\n  unsigned __int64 v4; // rbx\n\n  v1 = a1;\n  if ( a1 )\n  {\n    v2 = *(_QWORD **)(a1 + 16);\n    if ( v2 )\n    {\n      v3 = *(_BYTE *)(v1 + 1);\n      if ( v3 )\n      {\n        v4 = 0LL;\n        do\n        {\n          if ( v2[v4] )\n          {\n            sub_40B960(v2[v4]);\n            v3 = *(_BYTE *)(v1 + 1);\n            v2 = *(_QWORD **)(v1 + 16);\n          }\n          ++v4;\n        }\n        while ( v4 < v3 );\n        free(v2);\n      }\n    }\n    free((void *)v1);\n  }\n}\n", 
            "funcStartAddr": "0x40b960L", 
            "funcEndAddr": "0x40b9c2L", 
            "funcName": "sub_40B960"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40B9D0(_BYTE *a1)\n{\n  __int64 result; // rax\n  signed int v2; // edx\n  int v3; // er10\n  signed int *v4; // rsi\n  signed int v5; // er8\n  signed int v6; // er9\n  int v7; // ecx\n\n  result = (unsigned int)dword_697360;\n  if ( dword_697360 == 4 )\n    return sub_40BB50();\n  if ( dword_697360 != 3 )\n    return sub_40BD40();\n  a1[3] = 1;\n  if ( dword_69747C <= 0 )\n  {\nLABEL_19:\n    if ( !dword_6974A8 )\n    {\n      *a1 = 1;\n      return result;\n    }\nLABEL_20:\n    *a1 = 0;\n    return result;\n  }\n  v2 = 1;\n  v3 = 0;\n  v4 = (_DWORD *)(&xmmword_697050 + 4);\n  v5 = 2730;\n  v6 = 5460;\n  v7 = 0;\n  do\n  {\n    result = *v4;\n    if ( *v4 )\n    {\n      result = (unsigned int)dword_696070[result];\n      if ( (unsigned int)result <= 0xC )\n      {\n        if ( _bittest(&v5, result) )\n        {\n          ++v7;\n        }\n        else if ( _bittest(&v6, result) )\n        {\n          ++v3;\n        }\n      }\n      ++v2;\n      if ( v7 )\n      {\n        if ( v3 )\n          goto LABEL_16;\n      }\n    }\n    ++v4;\n  }\n  while ( v2 <= dword_69747C );\n  if ( !v7 )\n    goto LABEL_19;\n  if ( v3 )\n  {\nLABEL_16:\n    *a1 = 2;\n    return result;\n  }\n  if ( !dword_6974A8 )\n    goto LABEL_20;\n  *a1 = 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x40b9d0L", 
            "funcEndAddr": "0x40ba9dL", 
            "funcName": "sub_40B9D0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_40BB50(bool *a1)\n{\n  bool *v1; // r14\n  signed __int64 result; // rax\n  signed int v3; // edx\n  int v4; // ecx\n  signed int *v5; // rsi\n  signed int v6; // edi\n  signed int v7; // er8\n  int v8; // ebx\n  unsigned int v9; // ebp\n  int v10; // er12\n  int v11; // ebp\n  int v12; // ebx\n  int v13; // er12\n  int v14; // ebp\n  int v15; // ebx\n  __int64 v16; // [rsp+0h] [rbp-3028h]\n\n  v1 = a1;\n  a1[3] = 1;\n  result = (unsigned int)dword_69747C;\n  if ( dword_69747C <= 0 )\n  {\nLABEL_28:\n    *v1 = dword_6974A8 == 0;\n    return result;\n  }\n  v3 = 1;\n  v4 = 0;\n  v5 = (_DWORD *)(&xmmword_697050 + 4);\n  v6 = 2698;\n  v7 = 5396;\n  v8 = 0;\n  do\n  {\n    if ( *v5 )\n    {\n      v9 = dword_696070[*v5];\n      if ( v9 <= 0xC )\n      {\n        if ( _bittest(&v6, v9) )\n        {\n          ++v8;\n        }\n        else if ( _bittest(&v7, v9) )\n        {\n          ++v4;\n        }\n      }\n      ++v3;\n      if ( v8 )\n      {\n        if ( v4 )\n          goto LABEL_14;\n      }\n    }\n    ++v5;\n  }\n  while ( v3 <= dword_69747C );\n  if ( !v8 )\n    goto LABEL_28;\n  if ( !v4 )\n  {\n    *v1 = dword_6974A8 != 0;\n    return result;\n  }\nLABEL_14:\n  if ( !dword_6974EC )\n  {\nLABEL_17:\n    result = sub_401480(dword_697370, 1);\n    if ( (_DWORD)result )\n      goto LABEL_18;\nLABEL_29:\n    *v1 = 2;\n    return result;\n  }\n  result = sub_401480(dword_6974F0, 0);\n  if ( !(_DWORD)result )\n  {\n    if ( dword_6974EC )\n      goto LABEL_29;\n    goto LABEL_17;\n  }\nLABEL_18:\n  dword_697388 = 1;\n  sub_405540((__int64)&v16);\n  v10 = dword_697468;\n  dword_697388 = 0;\n  if ( dword_697468 > 0 )\n  {\n    v11 = 0;\n    do\n    {\n      sub_407B10((__int64)&v16, v11);\n      v12 = sub_404CA0((__int64)&v16, v11, 1);\n      result = sub_4083E0((__int64)&v16, v11);\n      if ( v12 )\n        goto LABEL_29;\n    }\n    while ( ++v11 < v10 );\n  }\n  dword_697388 = 0;\n  sub_405540((__int64)&v16);\n  v13 = dword_697468;\n  if ( dword_697468 > 0 )\n  {\n    v14 = 0;\n    do\n    {\n      sub_407B10((__int64)&v16, v14);\n      v15 = sub_404CA0((__int64)&v16, v14, 1);\n      result = sub_4083E0((__int64)&v16, v14);\n      if ( v15 )\n        goto LABEL_29;\n    }\n    while ( ++v14 < v13 );\n  }\n  result = dword_6974EC == 0;\n  *v1 = dword_6974A8 == (_DWORD)result;\n  return result;\n}\n", 
            "funcStartAddr": "0x40bb50L", 
            "funcEndAddr": "0x40bd3fL", 
            "funcName": "sub_40BB50"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_40BD40(bool *a1)\n{\n  signed __int64 result; // rax\n  int v2; // er12\n  int v3; // ebp\n  int v4; // ebx\n  __int64 v5; // [rsp+0h] [rbp-3028h]\n\n  a1[3] = 1;\n  if ( dword_6974EC )\n  {\n    result = sub_401480(dword_6974F0, 0);\n    if ( (_DWORD)result )\n      goto LABEL_5;\n    if ( dword_6974EC )\n      goto LABEL_11;\n  }\n  result = sub_401480(dword_697370, 1);\n  if ( !(_DWORD)result )\n  {\nLABEL_11:\n    *a1 = 2;\n    return result;\n  }\nLABEL_5:\n  sub_405540((__int64)&v5);\n  v2 = dword_697468;\n  if ( dword_697468 > 0 )\n  {\n    v3 = 0;\n    do\n    {\n      sub_407B10((__int64)&v5, v3);\n      v4 = sub_404CA0((__int64)&v5, v3, 1);\n      result = sub_4083E0((__int64)&v5, v3);\n      if ( v4 )\n        goto LABEL_11;\n    }\n    while ( ++v3 < v2 );\n  }\n  result = dword_6974EC == 0;\n  *a1 = dword_6974A8 != (_DWORD)result;\n  return result;\n}\n", 
            "funcStartAddr": "0x40bd40L", 
            "funcEndAddr": "0x40be15L", 
            "funcName": "sub_40BD40"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40BE20(__int64 a1)\n{\n  __int64 v1; // rbx\n  __int64 v2; // rax\n  signed __int64 v3; // rcx\n  __int64 v4; // rsi\n  __int64 v5; // rsi\n\n  v1 = a1;\n  while ( *(_BYTE *)(v1 + 2) )\n  {\n    v2 = *(_QWORD *)(v1 + 16);\n    if ( dword_6974A8 == (dword_6974EC == 0) )\n    {\n      v3 = -1LL;\n      do\n        v4 = *(_QWORD *)(v2 + 8 * v3++ + 8);\n      while ( *(_DWORD *)(v4 + 4) != *(_DWORD *)(v1 + 4) );\n    }\n    else\n    {\n      v3 = -1LL;\n      do\n        v5 = *(_QWORD *)(v2 + 8 * v3++ + 8);\n      while ( *(_DWORD *)(v5 + 8) != *(_DWORD *)(v1 + 8) );\n    }\n    v1 = *(_QWORD *)(v2 + 8LL * (unsigned int)v3);\n    dword_692990[dword_69743C + dword_697484 - 1] = dword_6973FC;\n    sub_407B10(v1 + 32, 0);\n    if ( dword_697484 > dword_697430 )\n      dword_697430 = dword_697484;\n  }\n  return v1;\n}\n", 
            "funcStartAddr": "0x40be20L", 
            "funcEndAddr": "0x40beebL", 
            "funcName": "sub_40BE20"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_40BEF0(unsigned __int8 *a1)\n{\n  unsigned __int8 *v1; // r12\n  __int64 v2; // rax\n  __int64 v3; // rcx\n  __int64 v4; // r8\n  signed int v5; // er14\n  __int64 v6; // rsi\n  int v7; // ebx\n  signed __int64 result; // rax\n  __int64 v9; // rcx\n  __int64 v10; // rdx\n  __int64 v11; // rsi\n  __int64 v12; // rax\n  signed int v13; // edi\n  __int64 v14; // rdx\n  __int64 v15; // rbp\n  int v16; // ebx\n  signed int v17; // edx\n  __int64 v18; // rax\n  signed int v19; // eax\n  __int64 v20; // rax\n  signed int v21; // ebp\n  __int64 v22; // rdi\n  __int64 v23; // rbx\n  int v24; // er14\n  signed int v25; // edi\n  __int64 v26; // rax\n  int v27; // er14\n  int v28; // eax\n  signed int v29; // eax\n  signed __int64 v30; // rdi\n  int v31; // er13\n  int v32; // er14\n  int v33; // ebx\n  int v34; // ebp\n  int v35; // er13\n  int v36; // ebp\n  int v37; // er13\n  int v38; // er14\n  int v39; // ebp\n  unsigned int v40; // ecx\n  signed __int64 v41; // rax\n  signed __int64 v42; // rax\n  unsigned int v43; // eax\n  signed int v44; // ecx\n  int v45; // eax\n  unsigned int v46; // eax\n  signed int v47; // ecx\n  unsigned __int64 v48; // rcx\n  signed __int64 v49; // rax\n  unsigned __int64 v50; // rcx\n  signed __int64 v51; // rax\n  signed __int64 v52; // rax\n  signed __int64 v53; // rax\n  __int64 v54; // [rsp+0h] [rbp-3038h]\n\n  v1 = a1;\n  if ( a1[2] )\n  {\n    v2 = a1[1];\n    if ( dword_6974A8 == (dword_6974EC == 0) )\n    {\n      if ( !(_BYTE)v2 )\n      {\n        v7 = 0;\n        v5 = 100000000;\nLABEL_32:\n        if ( v7 != 100000000 )\n        {\n          if ( v5 != 100000000 )\n            goto LABEL_34;\n          goto LABEL_55;\n        }\n        goto LABEL_56;\n      }\n      v3 = *((_QWORD *)a1 + 2);\n      v4 = v2 & 1;\n      if ( (_BYTE)v2 == 1 )\n      {\n        v5 = 100000000;\n        v6 = 0LL;\n        v7 = 0;\n        if ( !(v2 & 1) )\n          goto LABEL_31;\n      }\n      else\n      {\n        v12 = v2 - v4;\n        v13 = 100000000;\n        v6 = 0LL;\n        v7 = 0;\n        do\n        {\n          v14 = *(_QWORD *)(v3 + 8 * v6);\n          v15 = *(_QWORD *)(v3 + 8 * v6 + 8);\n          v16 = *(_DWORD *)(v14 + 8) + v7;\n          if ( v16 >= 100000001 )\n            v16 = 100000000;\n          v17 = *(_DWORD *)(v14 + 4);\n          if ( v17 <= v13 )\n            v13 = v17;\n          v7 = *(_DWORD *)(v15 + 8) + v16;\n          if ( v7 >= 100000001 )\n            v7 = 100000000;\n          v5 = *(_DWORD *)(v15 + 4);\n          if ( v5 > v13 )\n            v5 = v13;\n          v6 += 2LL;\n          v13 = v5;\n        }\n        while ( v12 != v6 );\n        if ( !v4 )\n        {\nLABEL_31:\n          if ( !v5 )\n            goto LABEL_56;\n          goto LABEL_32;\n        }\n      }\n      v18 = *(_QWORD *)(v3 + 8 * v6);\n      v7 += *(_DWORD *)(v18 + 8);\n      v19 = *(_DWORD *)(v18 + 4);\n      if ( v19 <= v5 )\n        v5 = v19;\n      if ( v7 >= 100000001 )\n        v7 = 100000000;\n      goto LABEL_31;\n    }\n    if ( !(_BYTE)v2 )\n    {\n      v5 = 0;\n      v7 = 100000000;\n      goto LABEL_56;\n    }\n    v9 = *((_QWORD *)a1 + 2);\n    v10 = v2 & 1;\n    if ( (_BYTE)v2 == 1 )\n    {\n      v11 = 0LL;\n      v7 = 100000000;\n      v5 = 0;\n      if ( !(v2 & 1) )\n        goto LABEL_52;\n    }\n    else\n    {\n      v20 = v2 - v10;\n      v11 = 0LL;\n      v21 = 100000000;\n      v5 = 0;\n      do\n      {\n        v22 = *(_QWORD *)(v9 + 8 * v11);\n        v23 = *(_QWORD *)(v9 + 8 * v11 + 8);\n        v24 = *(_DWORD *)(v22 + 4) + v5;\n        if ( v24 >= 100000001 )\n          v24 = 100000000;\n        v25 = *(_DWORD *)(v22 + 8);\n        if ( v25 <= v21 )\n          v21 = v25;\n        LODWORD(a1) = *(_DWORD *)(v23 + 4) + v24;\n        v5 = (signed int)a1;\n        if ( (signed int)a1 >= 100000001 )\n          v5 = 100000000;\n        v7 = *(_DWORD *)(v23 + 8);\n        if ( v7 > v21 )\n          v7 = v21;\n        v11 += 2LL;\n        v21 = v7;\n      }\n      while ( v20 != v11 );\n      if ( !v10 )\n      {\nLABEL_52:\n        if ( v5 && v7 != 100000000 )\n        {\n          if ( (signed int)a1 <= 99999999 )\n          {\nLABEL_34:\n            if ( v7 )\n            {\nLABEL_58:\n              result = (unsigned int)dword_6973FC;\n              dword_692990[dword_69743C + dword_697484 - 1] = dword_6973FC;\n              *((_DWORD *)v1 + 1) = v5;\n              *((_DWORD *)v1 + 2) = v7;\n              return result;\n            }\n          }\nLABEL_55:\n          ++dword_6973EC;\n          v30 = 4293967796LL;\nLABEL_57:\n          sub_4155C0(v30, 1000000LL, 4293967296LL, 0xFFFFFFFFLL, 0LL, 200LL);\n          goto LABEL_58;\n        }\nLABEL_56:\n        ++dword_6973EC;\n        v30 = 999500LL;\n        goto LABEL_57;\n      }\n    }\n    v26 = *(_QWORD *)(v9 + 8 * v11);\n    v27 = *(_DWORD *)(v26 + 4) + v5;\n    v28 = *(_DWORD *)(v26 + 8);\n    if ( v28 <= v7 )\n      v7 = v28;\n    v29 = 100000000;\n    if ( v27 < 100000001 )\n      v29 = v27;\n    LODWORD(a1) = v27;\n    v5 = v29;\n    goto LABEL_52;\n  }\n  if ( a1[3] )\n  {\n    result = *a1;\n    switch ( result )\n    {\n      case 0LL:\n        *(_QWORD *)(a1 + 4) = 100000000LL;\n        return result;\n      case 1LL:\n        result = 429496729600000000LL;\n        goto LABEL_83;\n      case 2LL:\n        dword_692990[dword_69743C + dword_697484 - 1] = dword_6973FC;\n        if ( (unsigned int)sub_402570() || dword_697484 >= 201 )\n          goto LABEL_71;\n        if ( dword_697360 == 4 )\n        {\n          dword_697388 = 1;\n          sub_405540((__int64)&v54);\n          v31 = dword_697468;\n          dword_697388 = 0;\n          v32 = sub_406E60();\n          if ( v31 > 0 )\n          {\n            v33 = 0;\n            v34 = 0;\n            do\n            {\n              sub_407B10((__int64)&v54, v34);\n              v33 -= ((unsigned int)sub_404CA0((__int64)&v54, v34, v32) < 1) - 1;\n              sub_4083E0((__int64)&v54, v34++);\n            }\n            while ( v31 != v34 );\n            if ( v33 )\n              goto LABEL_79;\n          }\n          dword_697388 = 0;\n          sub_405540((__int64)&v54);\n          v35 = dword_697468;\n          if ( dword_697468 <= 0 )\n            goto LABEL_82;\n          v33 = 0;\n          v36 = 0;\n          do\n          {\n            sub_407B10((__int64)&v54, v36);\n            v33 -= ((unsigned int)sub_404CA0((__int64)&v54, v36, v32) < 1) - 1;\n            sub_4083E0((__int64)&v54, v36++);\n          }\n          while ( v35 != v36 );\n        }\n        else\n        {\n          sub_405540((__int64)&v54);\n          v37 = dword_697468;\n          v38 = sub_406E60();\n          if ( dword_697360 == 3 )\n          {\n            v33 = dword_697468;\n            if ( !dword_697468 )\n              goto LABEL_82;\n            goto LABEL_79;\n          }\n          if ( v37 <= 0 )\n            goto LABEL_82;\n          v33 = 0;\n          v39 = 0;\n          do\n          {\n            sub_407B10((__int64)&v54, v39);\n            v33 -= ((unsigned int)sub_404CA0((__int64)&v54, v39, v38) < 1) - 1;\n            sub_4083E0((__int64)&v54, v39++);\n          }\n          while ( v37 != v39 );\n        }\n        if ( !v33 )\n          goto LABEL_82;\nLABEL_79:\n        v40 = dword_697360 - 3;\n        if ( dword_6974A8 == (dword_6974EC == 0) )\n        {\n          if ( v40 < 2 )\n          {\n            if ( dword_697360 == 4 )\n            {\n              if ( dword_697478 == 2 )\n              {\n                v43 = (unsigned int)(dword_697484 + ((unsigned __int64)(-2004318071LL * dword_697484) >> 32)) >> 31;\n                v44 = (signed int)(dword_697484 + ((unsigned __int64)(-2004318071LL * dword_697484) >> 32)) >> 4;\n                *((_DWORD *)a1 + 1) = dword_697484 / 30 + 1;\n                v45 = v44 + v43;\nLABEL_96:\n                result = (unsigned int)(v33 + v45);\n                *((_DWORD *)a1 + 2) = result;\n                return result;\n              }\n              v52 = 1717986919LL * dword_697484;\n              v48 = (unsigned __int64)v52 >> 63;\n              v49 = v52 >> 37;\nLABEL_95:\n              *((_DWORD *)a1 + 1) = v49 + v48 + 1;\n              v45 = v49 + v48;\n              goto LABEL_96;\n            }\n            v41 = 458129845LL * dword_697484;\n          }\n          else\n          {\n            v41 = 1374389535LL * dword_697484;\n          }\n          v48 = (unsigned __int64)v41 >> 63;\n          v49 = v41 >> 36;\n          goto LABEL_95;\n        }\n        if ( v40 >= 2 )\n        {\n          v42 = 1374389535LL * dword_697484;\nLABEL_98:\n          v50 = (unsigned __int64)v42 >> 63;\n          v51 = v42 >> 36;\n          goto LABEL_99;\n        }\n        if ( dword_697360 != 4 )\n        {\n          v42 = 458129845LL * dword_697484;\n          goto LABEL_98;\n        }\n        if ( dword_697478 == 2 )\n        {\n          v46 = (unsigned int)(dword_697484 + ((unsigned __int64)(-2004318071LL * dword_697484) >> 32)) >> 31;\n          v47 = (signed int)(dword_697484 + ((unsigned __int64)(-2004318071LL * dword_697484) >> 32)) >> 4;\n          *((_DWORD *)a1 + 1) = v33 + dword_697484 / 30;\n          result = v47 + v46 + 1;\n          *((_DWORD *)a1 + 2) = result;\n          return result;\n        }\n        v53 = 1717986919LL * dword_697484;\n        v50 = (unsigned __int64)v53 >> 63;\n        v51 = v53 >> 37;\nLABEL_99:\n        *((_DWORD *)a1 + 1) = v33 + v51 + v50;\n        result = (unsigned int)(v51 + v50 + 1);\n        *((_DWORD *)a1 + 2) = result;\n        break;\n      case 3LL:\nLABEL_71:\n        result = 214748364850000LL;\n        goto LABEL_83;\n      default:\n        return result;\n    }\n  }\n  else\n  {\nLABEL_82:\n    result = 4294967297LL;\nLABEL_83:\n    *(_QWORD *)(a1 + 4) = result;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x40bef0L", 
            "funcEndAddr": "0x40c4c9L", 
            "funcName": "sub_40BEF0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_40C4D0(__int64 a1)\n{\n  int v1; // er15\n  int v2; // ebx\n  int v3; // ebp\n  __int64 v4; // rax\n  signed __int64 result; // rax\n  __int64 v6; // rbx\n  char *v7; // r12\n  __int64 v8; // r14\n  __int64 v9; // rax\n  _BYTE *v10; // rcx\n  unsigned __int8 *v11; // rbp\n  int v12; // [rsp+Ch] [rbp-304Ch]\n  char v13; // [rsp+20h] [rbp-3038h]\n\n  v12 = sub_406E60();\n  if ( dword_697360 != 4 )\n    goto LABEL_7;\n  dword_697388 = 1;\n  sub_405540((__int64)&v13);\n  v1 = dword_697468;\n  dword_697388 = 0;\n  if ( dword_697468 <= 0 )\n  {\nLABEL_6:\n    dword_697388 = 0;\nLABEL_7:\n    sub_405540((__int64)&v13);\n    v1 = dword_697468;\n    goto LABEL_8;\n  }\n  v2 = 0;\n  while ( 1 )\n  {\n    sub_407B10((__int64)&v13, v2);\n    v3 = sub_404CA0((__int64)&v13, v2, v12);\n    sub_4083E0((__int64)&v13, v2);\n    if ( v3 )\n      break;\n    if ( ++v2 >= v1 )\n      goto LABEL_6;\n  }\nLABEL_8:\n  v4 = dword_422664;\n  dword_422664 += 8 * v1;\n  result = (signed __int64)qword_6972E8 + v4;\n  *(_QWORD *)(a1 + 16) = result;\n  if ( v1 <= 0 )\n  {\n    LOBYTE(v8) = 0;\n  }\n  else\n  {\n    v6 = 0LL;\n    v7 = &v13;\n    LODWORD(v8) = 0;\n    do\n    {\n      dword_692990[dword_69743C + dword_697484 - 1] = dword_6973FC;\n      sub_407B10((__int64)&v13, v6);\n      if ( (unsigned int)sub_404CA0((__int64)&v13, v6, v12) )\n      {\n        v9 = dword_422664;\n        dword_422664 += 56;\n        v10 = qword_6972E8;\n        *(_DWORD *)((char *)qword_6972E8 + v9) = 0;\n        *(_QWORD *)&v10[v9 + 4] = 4294967297LL;\n        *(_QWORD *)&v10[v9 + 24] = a1;\n        v11 = &v10[v9];\n        *(_QWORD *)&v10[v9 + 48] = *((_QWORD *)v7 + 2);\n        *(_OWORD *)&v10[v9 + 32] = *(_OWORD *)v7;\n        v8 = (signed int)v8;\n        *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * v8) = &v10[v9];\n        LODWORD(v8) = v8 + 1;\n        sub_40B9D0(&v10[v9]);\n        sub_40BEF0(v11);\n      }\n      result = sub_4083E0((__int64)&v13, v6++);\n      v7 += 24;\n    }\n    while ( v1 != v6 );\n  }\n  *(_BYTE *)(a1 + 2) = 1;\n  *(_BYTE *)(a1 + 1) = v8;\n  if ( !(_BYTE)v8 )\n  {\n    *(_WORD *)(a1 + 2) = 256;\n    result = (unsigned int)(dword_697360 - 3);\n    if ( (unsigned int)result < 2 )\n    {\n      result = dword_6974EC == 0;\n      *(_BYTE *)a1 = dword_6974A8 == (_DWORD)result;\n    }\n    else\n    {\n      *(_BYTE *)a1 = 3;\n    }\n  }\n  dword_697458 += v1;\n  dword_6973F0 += v1;\n  return result;\n}\n", 
            "funcStartAddr": "0x40c4d0L", 
            "funcEndAddr": "0x40c6f6L", 
            "funcName": "sub_40C4D0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_40C700(__int64 a1)\n{\n  __int64 v1; // rbx\n  signed __int64 result; // rax\n\n  if ( a1 )\n  {\n    do\n    {\n      v1 = a1;\n      result = sub_40BEF0((unsigned __int8 *)a1);\n      if ( *(_DWORD *)(a1 + 36) )\n        result = sub_4083E0(a1 + 32, 0);\n      a1 = *(_QWORD *)(a1 + 24);\n    }\n    while ( a1 );\n    if ( *(_DWORD *)(v1 + 36) )\n      return sub_407B10(v1 + 32, 0);\n  }\n  else\n  {\n    v1 = 0LL;\n    if ( MEMORY[0x24] )\n      return sub_407B10(v1 + 32, 0);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x40c700L", 
            "funcEndAddr": "0x40c751L", 
            "funcName": "sub_40C700"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_40C760(__int64 a1)\n{\n  __int64 v1; // r12\n  signed __int64 result; // rax\n  __int64 v3; // rbx\n  __int64 v4; // rax\n  signed __int64 v5; // rcx\n  __int64 v6; // rsi\n  __int64 v7; // rsi\n  __int64 v8; // r15\n\n  dword_69745C = 0;\n  dword_697488 = 1;\n  v1 = *(_QWORD *)(a1 + 24);\n  *(_QWORD *)(a1 + 24) = 0LL;\n  sub_40B9D0((_BYTE *)a1);\n  result = sub_40BEF0((unsigned __int8 *)a1);\n  while ( *(_DWORD *)(a1 + 4) )\n  {\n    if ( !*(_DWORD *)(a1 + 8) )\n      break;\n    result = (unsigned int)dword_69745C;\n    if ( dword_69745C >= dword_697458 )\n      break;\n    v3 = a1;\n    if ( *(_BYTE *)(a1 + 2) )\n    {\n      v3 = a1;\n      do\n      {\n        v4 = *(_QWORD *)(v3 + 16);\n        if ( dword_6974A8 == (dword_6974EC == 0) )\n        {\n          v5 = -1LL;\n          do\n            v6 = *(_QWORD *)(v4 + 8 * v5++ + 8);\n          while ( *(_DWORD *)(v6 + 4) != *(_DWORD *)(v3 + 4) );\n        }\n        else\n        {\n          v5 = -1LL;\n          do\n            v7 = *(_QWORD *)(v4 + 8 * v5++ + 8);\n          while ( *(_DWORD *)(v7 + 8) != *(_DWORD *)(v3 + 8) );\n        }\n        v3 = *(_QWORD *)(v4 + 8LL * (unsigned int)v5);\n        dword_692990[dword_69743C + dword_697484 - 1] = dword_6973FC;\n        sub_407B10(v3 + 32, 0);\n        if ( dword_697484 > dword_697430 )\n          dword_697430 = dword_697484;\n      }\n      while ( *(_BYTE *)(v3 + 2) );\n    }\n    sub_40C4D0(v3);\n    do\n    {\n      v8 = v3;\n      result = sub_40BEF0((unsigned __int8 *)v3);\n      if ( *(_DWORD *)(v3 + 36) )\n        result = sub_4083E0(v3 + 32, 0);\n      v3 = *(_QWORD *)(v3 + 24);\n    }\n    while ( v3 );\n    if ( *(_DWORD *)(v8 + 36) )\n      result = sub_407B10(v8 + 32, 0);\n  }\n  *(_WORD *)(a1 + 1) = 0;\n  *(_QWORD *)(a1 + 24) = v1;\n  dword_697488 = 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x40c760L", 
            "funcEndAddr": "0x40c907L", 
            "funcName": "sub_40C760"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_40C910(__int64 a1, __int64 a2)\n{\n  _BYTE *v2; // r15\n  __int64 v3; // rbx\n  int v4; // er14\n  int v5; // ebp\n  __int64 v6; // r13\n  char *v7; // r12\n  __int64 v8; // rbx\n  int v9; // ecx\n  __int64 v10; // rsi\n  __int64 v11; // rdi\n  __int64 v12; // rsi\n  __int64 v13; // rbp\n  __int64 v14; // rbx\n  int v15; // er13\n  int v16; // edx\n  __int64 v17; // r8\n  signed int v18; // eax\n  __int64 v19; // rcx\n  int v20; // edx\n  unsigned int v21; // ebp\n  __int64 v22; // rbp\n  __int64 v23; // rax\n  signed __int64 v24; // rcx\n  __int64 v25; // rsi\n  __int64 v26; // rsi\n  __int64 v27; // rbx\n  __int64 v28; // rax\n  int v29; // ecx\n  signed __int64 v30; // rdx\n  __int64 v31; // rbx\n  int v32; // edx\n  __int64 v33; // rax\n  __int64 v34; // rax\n  __int64 v35; // rbp\n  __int64 v36; // rax\n  signed __int64 v37; // rcx\n  __int64 v38; // rsi\n  __int64 v39; // rsi\n  __int64 v40; // rbx\n  __int64 v41; // rax\n  int v42; // edx\n  float v43; // xmm0_4\n  char *v44; // rbx\n  int *v45; // rbp\n  __int64 v46; // r13\n  int v47; // er15\n  __int64 v48; // ST10_8\n  __int64 v49; // rcx\n  __int64 v50; // rax\n  signed int v51; // edi\n  signed int v52; // edx\n  __int64 v53; // rax\n  __int64 v54; // [rsp+0h] [rbp-40B8h]\n  __int64 v55; // [rsp+18h] [rbp-40A0h]\n  unsigned int v56; // [rsp+20h] [rbp-4098h]\n  unsigned int v57; // [rsp+24h] [rbp-4094h]\n  unsigned int v58; // [rsp+28h] [rbp-4090h]\n  _BYTE *v59; // [rsp+28h] [rbp-4090h]\n  __int64 v60; // [rsp+30h] [rbp-4088h]\n  __int64 v61; // [rsp+30h] [rbp-4088h]\n  int v62; // [rsp+30h] [rbp-4088h]\n  __int64 v63; // [rsp+38h] [rbp-4080h]\n  float v64; // [rsp+38h] [rbp-4080h]\n  int v65; // [rsp+40h] [rbp-4078h]\n  int v66; // [rsp+40h] [rbp-4078h]\n  __int64 v67; // [rsp+50h] [rbp-4068h]\n  char v68; // [rsp+58h] [rbp-4060h]\n  int v69[4]; // [rsp+60h] [rbp-4058h]\n  __int64 v70; // [rsp+70h] [rbp-4048h]\n  int s[512]; // [rsp+80h] [rbp-4038h]\n  int v72[512]; // [rsp+880h] [rbp-3838h]\n  char v73; // [rsp+1080h] [rbp-3038h]\n\n  v63 = rtime(a1, a2);\n  qword_6972E8 = calloc(dword_697340, 0x38uLL);\n  v2 = calloc(1uLL, 0x38uLL);\n  sub_405540((__int64)&v73);\n  v3 = dword_697468;\n  dword_697364 = 0;\n  v4 = 0;\n  memset(&xmmword_695710, 0, 0x4B0uLL);\n  memset(s, 0, 0x800uLL);\n  xmmword_697280 = xmmword_422668;\n  qword_697290 = qword_422678;\n  v5 = sub_406E60();\n  if ( v3 <= 0 )\n    goto LABEL_109;\n  v67 = v3;\n  v6 = (unsigned int)v3;\n  v7 = &v73;\n  v8 = 0LL;\n  do\n  {\n    sub_407B10((__int64)&v73, v8);\n    v9 = (unsigned __int64)sub_404CA0((__int64)&v73, v8, v5) != 0;\n    v4 += v9;\n    v72[v8] = v9;\n    v10 = (unsigned int)v8;\n    sub_4083E0((__int64)&v73, v8++);\n  }\n  while ( v6 != v8 );\n  v55 = v6;\n  if ( !v4 )\n    goto LABEL_109;\n  dword_697458 = 1;\n  dword_69741C = 0;\n  dword_692990[dword_69743C + dword_697484 - 1] = dword_6973FC;\n  dword_697430 = 0;\n  dword_6973EC = 0;\n  dword_6974A8 = dword_6974EC == 0;\n  sub_40B9D0(v2);\n  if ( *v2 <= 1u )\n  {\n    dword_422664 = 0;\n    free(qword_6972E8);\n    free(v2);\n    qword_697290 = qword_422678;\n    xmmword_697280 = xmmword_422668;\n    return;\n  }\n  sub_40BEF0(v2);\n  v11 = rtime(v2, v10);\n  v12 = v63;\n  v57 = 0;\n  v56 = 0;\n  LODWORD(v13) = 0;\n  v14 = v6;\n  if ( (signed int)sub_417410(v11, v63) < dword_69748C )\n  {\n    v13 = 0LL;\n    v56 = 0;\n    v58 = 0;\n    v15 = 0;\n    do\n    {\n      if ( (unsigned int)sub_417B80(v11, v12)\n        || 56LL * dword_697340 - 560000 <= (unsigned __int64)(unsigned int)dword_422664\n        || !*((_DWORD *)v2 + 1)\n        || !*((_DWORD *)v2 + 2) )\n      {\n        break;\n      }\n      ++dword_69741C;\n      v16 = dword_697458;\n      if ( (signed int)(dword_697458\n                      - 100\n                      * (((unsigned __int64)(1374389535LL * dword_697458) >> 63) + (1374389535LL * dword_697458 >> 37))) <= 65 )\n      {\n        v60 = v13;\n        v66 = dword_697458;\n        v22 = (__int64)v2;\n        while ( *(_BYTE *)(v22 + 2) )\n        {\n          v23 = *(_QWORD *)(v22 + 16);\n          if ( dword_6974A8 == (dword_6974EC == 0) )\n          {\n            v24 = -1LL;\n            do\n              v25 = *(_QWORD *)(v23 + 8 * v24++ + 8);\n            while ( *(_DWORD *)(v25 + 4) != *(_DWORD *)(v22 + 4) );\n          }\n          else\n          {\n            v24 = -1LL;\n            do\n              v26 = *(_QWORD *)(v23 + 8 * v24++ + 8);\n            while ( *(_DWORD *)(v26 + 8) != *(_DWORD *)(v22 + 8) );\n          }\n          v22 = *(_QWORD *)(v23 + 8LL * (unsigned int)v24);\n          dword_692990[dword_69743C + dword_697484 - 1] = dword_6973FC;\n          sub_407B10(v22 + 32, 0);\n          if ( dword_697484 > dword_697430 )\n            dword_697430 = dword_697484;\n        }\n        ++v56;\n        sub_40C4D0(v22);\n        do\n        {\n          v27 = v22;\n          v11 = v22;\n          sub_40BEF0((unsigned __int8 *)v22);\n          if ( *(_DWORD *)(v22 + 36) )\n          {\n            v11 = v22 + 32;\n            sub_4083E0(v22 + 32, 0);\n          }\n          v22 = *(_QWORD *)(v22 + 24);\n        }\n        while ( v22 );\n        if ( *(_DWORD *)(v27 + 36) )\n        {\n          v11 = v27 + 32;\n          sub_407B10(v27 + 32, 0);\n        }\n        v28 = *((_QWORD *)v2 + 2);\n        v29 = *((_DWORD *)v2 + 1);\n        v30 = -1LL;\n        v13 = v60;\n        do\n          v12 = *(_QWORD *)(v28 + 8 * v30++ + 8);\n        while ( *(_DWORD *)(v12 + 4) != v29 );\n        v31 = (unsigned int)v30;\n        s[v31] += dword_697458 - v66;\n        v32 = *((_DWORD *)v2 + 2);\n        if ( v29 || v32 != 100000000 )\n        {\n          if ( v29 == 100000000 )\n          {\n            v14 = v55;\n            if ( !v32 )\n            {\n              qword_697290 = qword_422678;\n              xmmword_697280 = xmmword_422668;\n            }\n          }\n          else\n          {\n            v14 = v55;\n          }\n        }\n        else\n        {\n          dword_6973E8 = 1;\n          if ( !dword_697420 )\n          {\n            dword_697420 = 1;\n            v11 = (__int64)\"tellics kibitz Forced win!\";\n            puts(\"tellics kibitz Forced win!\");\n            v28 = *((_QWORD *)v2 + 2);\n          }\n          v33 = *(_QWORD *)(v28 + 8 * v31);\n          qword_697290 = *(_QWORD *)(v33 + 48);\n          xmmword_697280 = *(_OWORD *)(v33 + 32);\n          v14 = v55;\n        }\n        goto LABEL_29;\n      }\n      v13 = (unsigned int)(v13 + 1);\n      if ( (signed int)v14 > 0 )\n      {\n        v17 = v13;\n        v65 = dword_697458;\n        v18 = 100000000;\n        v19 = 0LL;\n        v20 = 0;\n        v12 = v58;\n        do\n        {\n          v11 = (unsigned int)s[v19];\n          v21 = v72[v19];\n          if ( (signed int)v11 < v18 )\n          {\n            if ( v21 )\n            {\n              if ( !*((_DWORD *)&xmmword_695710 + v19) )\n                v18 = s[v19];\n              if ( !*((_DWORD *)&xmmword_695710 + v19) )\n              {\n                v15 = v20;\n                if ( !*((_DWORD *)&xmmword_695710 + v19) )\n                  v12 = (unsigned int)v19;\n              }\n            }\n            else\n            {\n              v21 = 0;\n            }\n          }\n          v20 -= (v21 < 1) - 1;\n          ++v19;\n        }\n        while ( v14 != v19 );\n        v58 = v12;\n        if ( v18 != 100000000 )\n        {\n          v61 = v17;\n          sub_407B10((__int64)&v73, v12);\n          v34 = *((_QWORD *)v2 + 2);\n          v35 = *(_QWORD *)(v34 + 8LL * v15);\n          if ( *(_BYTE *)(v35 + 2) )\n          {\n            do\n            {\n              v36 = *(_QWORD *)(v35 + 16);\n              if ( dword_6974A8 == (dword_6974EC == 0) )\n              {\n                v37 = -1LL;\n                do\n                  v38 = *(_QWORD *)(v36 + 8 * v37++ + 8);\n                while ( *(_DWORD *)(v38 + 4) != *(_DWORD *)(v35 + 4) );\n              }\n              else\n              {\n                v37 = -1LL;\n                do\n                  v39 = *(_QWORD *)(v36 + 8 * v37++ + 8);\n                while ( *(_DWORD *)(v39 + 8) != *(_DWORD *)(v35 + 8) );\n              }\n              v35 = *(_QWORD *)(v36 + 8LL * (unsigned int)v37);\n              dword_692990[dword_69743C + dword_697484 - 1] = dword_6973FC;\n              sub_407B10(v35 + 32, 0);\n              if ( dword_697484 > dword_697430 )\n                dword_697430 = dword_697484;\n            }\n            while ( *(_BYTE *)(v35 + 2) );\n            sub_40C4D0(v35);\n            do\n            {\nLABEL_69:\n              v40 = v35;\n              v11 = v35;\n              sub_40BEF0((unsigned __int8 *)v35);\n              if ( *(_DWORD *)(v35 + 36) )\n              {\n                v11 = v35 + 32;\n                sub_4083E0(v35 + 32, 0);\n              }\n              v35 = *(_QWORD *)(v35 + 24);\n            }\n            while ( v35 );\n            if ( *(_DWORD *)(v40 + 36) )\n              goto LABEL_73;\n          }\n          else\n          {\n            v11 = *(_QWORD *)(v34 + 8LL * v15);\n            sub_40C4D0(v11);\n            if ( v35 )\n              goto LABEL_69;\n            v40 = 0LL;\n            if ( MEMORY[0x24] )\n            {\nLABEL_73:\n              v11 = v40 + 32;\n              sub_407B10(v40 + 32, 0);\n            }\n          }\n          s[v58] += dword_697458 - v65;\n          v41 = *(_QWORD *)(*((_QWORD *)v2 + 2) + 8LL * v15);\n          v12 = *(unsigned int *)(v41 + 4);\n          v42 = *(_DWORD *)(v41 + 8);\n          v13 = v61;\n          if ( (_DWORD)v12 )\n          {\n            v14 = v55;\n            if ( (_DWORD)v12 == 100000000 && !v42 )\n              *((_DWORD *)&xmmword_695710 + (signed int)v58) = 1;\n          }\n          else\n          {\n            v14 = v55;\n            if ( v42 == 100000000 )\n            {\n              dword_6973E8 = 1;\n              if ( !dword_697420 )\n              {\n                dword_697420 = 1;\n                v11 = (__int64)\"tellics kibitz Forced win! (alt)\";\n                puts(\"tellics kibitz Forced win! (alt)\");\n                v41 = *(_QWORD *)(*((_QWORD *)v2 + 2) + 8LL * v15);\n              }\n              qword_697290 = *(_QWORD *)(v41 + 48);\n              xmmword_697280 = *(_OWORD *)(v41 + 32);\n            }\n          }\n          goto LABEL_29;\n        }\n        v16 = dword_697458;\n        v13 = v17;\n      }\n      dword_697458 = v16 + 30;\nLABEL_29:\n      v11 = rtime(v11, v12);\n      v12 = v63;\n    }\n    while ( (signed int)sub_417410(v11, v63) < dword_69748C );\n  }\n  v62 = v13;\n  v59 = v2;\n  if ( v2[2] && (signed int)v14 > 0 )\n  {\n    v43 = -1.0;\n    v57 = 0;\n    v44 = &v73;\n    v45 = v72;\n    v46 = v55;\n    v47 = 0;\n    while ( !*v45 )\n    {\nLABEL_97:\n      v44 += 24;\n      ++v45;\n      if ( !--v46 )\n        goto LABEL_98;\n    }\n    v64 = v43;\n    v48 = *((_QWORD *)v44 + 2);\n    sub_415C90(&v68, *(_OWORD *)v44, *(_OWORD *)v44 >> 64);\n    v49 = *((_QWORD *)v59 + 2);\n    v50 = *(_QWORD *)(v49 + 8LL * v47);\n    v51 = *(_DWORD *)(v50 + 4);\n    if ( v51 )\n    {\n      v52 = *(_DWORD *)(v50 + 8);\n      v43 = (float)v52 / (float)v51;\n      if ( v43 <= v64 )\n      {\n        v43 = v64;\n        if ( !v52 )\n        {\nLABEL_95:\n          v57 += *(_DWORD *)(v50 + 4) == 100000000;\n          goto LABEL_96;\n        }\n      }\n      else\n      {\n        qword_697290 = *(_QWORD *)(v50 + 48);\n        xmmword_697280 = *(_OWORD *)(v50 + 32);\n        v50 = *(_QWORD *)(v49 + 8LL * v47);\n        if ( !*(_DWORD *)(v50 + 8) )\n          goto LABEL_95;\n      }\n    }\n    else\n    {\n      dword_6973E8 = 1;\n      qword_697290 = *(_QWORD *)(v50 + 48);\n      xmmword_697280 = *(_OWORD *)(v50 + 32);\n      v43 = 100000000.0;\n    }\nLABEL_96:\n    ++v47;\n    goto LABEL_97;\n  }\nLABEL_98:\n  v70 = qword_697290;\n  *(_OWORD *)v69 = xmmword_697280;\n  sub_415C90(&v68, xmmword_697280, SDWORD2(xmmword_697280));\n  v2 = v59;\n  if ( dword_6974F8 && dword_697490 )\n  {\n    LODWORD(v54) = v62;\n    printf(\n      \"tellics whisper proof %d, disproof %d, %d losers, highest depth %d, primary %d, secondary %d\\n\",\n      *((unsigned int *)v59 + 1),\n      *((unsigned int *)v59 + 2),\n      v57,\n      (unsigned int)dword_697430,\n      v56,\n      v54);\n  }\n  if ( v57 == v4 - 1 )\n  {\n    puts(\"tellics whisper Forced reply\");\n    if ( (signed int)v55 > 0 )\n    {\n      v53 = 0LL;\n      while ( *((_DWORD *)&xmmword_695710 + v53) || !v72[v53] )\n      {\n        ++v53;\n        v7 += 24;\n        if ( v53 >= v67 )\n          goto LABEL_107;\n      }\n      qword_697290 = *((_QWORD *)v7 + 2);\n      dword_6973E8 = 1;\n      xmmword_697280 = *(_OWORD *)v7;\n      if ( v57 != v4 )\n        goto LABEL_109;\n      goto LABEL_108;\n    }\n  }\nLABEL_107:\n  if ( v57 == v4 )\nLABEL_108:\n    dword_697364 = 1;\nLABEL_109:\n  dword_422664 = 0;\n  free(qword_6972E8);\n  free(v2);\n}\n", 
            "funcStartAddr": "0x40c910L", 
            "funcEndAddr": "0x40d2c9L", 
            "funcName": "sub_40C910"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_40D2D0(__int64 a1, __int64 a2)\n{\n  __int64 v2; // r14\n  _BYTE *v3; // r15\n  __int64 v4; // rsi\n  __int64 v5; // rbx\n  __int64 v6; // rax\n  signed __int64 v7; // rcx\n  __int64 v8; // rsi\n  __int64 v9; // rsi\n  __int64 v10; // r12\n  signed __int64 v11; // rdi\n  __int64 v12; // rdi\n  unsigned __int64 v13; // rax\n  float v14; // xmm0_4\n  const char *v15; // rdi\n  int v16; // eax\n  const char *v17; // rdi\n  __int64 v18; // rax\n  signed int v19; // eax\n  _BYTE *v20; // rbx\n  __int64 v21; // rax\n  int v22; // edx\n  signed __int64 v23; // rcx\n  __int64 v24; // rsi\n  __int64 v25; // ST10_8\n  __int128 v26; // ST00_16\n  signed int v27; // ebp\n  unsigned __int64 v28; // rax\n  __int64 v29; // rcx\n  float v30; // xmm0_4\n  __int64 v31; // rdx\n  __int64 v32; // rsi\n  signed int v33; // edi\n  float v34; // xmm1_4\n  __int64 v35; // [rsp+0h] [rbp-4058h]\n  __int64 v36; // [rsp+0h] [rbp-4058h]\n  char dest[2]; // [rsp+20h] [rbp-4038h]\n  char s; // [rsp+2020h] [rbp-2038h]\n\n  dword_697458 = 1;\n  dword_69741C = 0;\n  dword_6973F0 = 0;\n  dword_697484 = 1;\n  dword_692990[dword_69743C] = dword_6973FC;\n  dword_697430 = 0;\n  dword_6973EC = 0;\n  dword_6974A8 = dword_6974EC == 0;\n  v2 = rtime(a1, a2);\n  v3 = calloc(1uLL, 0x38uLL);\n  qword_6972E8 = calloc(dword_697340, 0x38uLL);\n  sub_40B9D0(v3);\n  if ( !*v3 )\n  {\n    qword_697290 = qword_422678;\n    xmmword_697280 = xmmword_422668;\n    dword_422664 = 0;\n    free(v3);\n    goto LABEL_80;\n  }\n  sub_40BEF0(v3);\n  while ( 1 )\n  {\n    v4 = *((unsigned int *)v3 + 1);\n    if ( !(_DWORD)v4 )\n      break;\n    if ( !*((_DWORD *)v3 + 2) || 56LL * dword_697340 - 560000 <= (unsigned __int64)(unsigned int)dword_422664 )\n      goto LABEL_31;\n    if ( v3[2] )\n    {\n      v5 = (__int64)v3;\n      do\n      {\n        v6 = *(_QWORD *)(v5 + 16);\n        if ( dword_6974A8 == (dword_6974EC == 0) )\n        {\n          v7 = -1LL;\n          do\n            v8 = *(_QWORD *)(v6 + 8 * v7++ + 8);\n          while ( *(_DWORD *)(v8 + 4) != *(_DWORD *)(v5 + 4) );\n        }\n        else\n        {\n          v7 = -1LL;\n          do\n            v9 = *(_QWORD *)(v6 + 8 * v7++ + 8);\n          while ( *(_DWORD *)(v9 + 8) != *(_DWORD *)(v5 + 8) );\n        }\n        v5 = *(_QWORD *)(v6 + 8LL * (unsigned int)v7);\n        dword_692990[dword_69743C + dword_697484 - 1] = dword_6973FC;\n        v4 = 0LL;\n        sub_407B10(v5 + 32, 0);\n        if ( dword_697484 > dword_697430 )\n          dword_697430 = dword_697484;\n      }\n      while ( *(_BYTE *)(v5 + 2) );\n    }\n    else\n    {\n      v5 = (__int64)v3;\n    }\n    sub_40C4D0(v5);\n    do\n    {\n      v10 = v5;\n      v11 = v5;\n      sub_40BEF0((unsigned __int8 *)v5);\n      if ( *(_DWORD *)(v5 + 36) )\n      {\n        v11 = v5 + 32;\n        v4 = 0LL;\n        sub_4083E0(v5 + 32, 0);\n      }\n      v5 = *(_QWORD *)(v5 + 24);\n    }\n    while ( v5 );\n    if ( *(_DWORD *)(v10 + 36) )\n    {\n      v4 = 0LL;\n      v11 = v10 + 32;\n      sub_407B10(v10 + 32, 0);\n    }\n    if ( !(++dword_69741C & 0x1F) )\n    {\n      v12 = rtime(v11, v4);\n      if ( (signed int)sub_417410(v12, v2) > dword_69748C && !(unsigned int)sub_417B80(v12, v2) )\n      {\n        v4 = *((unsigned int *)v3 + 1);\n        goto LABEL_31;\n      }\n    }\n  }\n  v4 = 0LL;\nLABEL_31:\n  v13 = 56LL * dword_697458;\n  if ( (v13 & 0x8000000000000000LL) != 0LL )\n    v14 = (float)(signed int)(v13 >> 1) + (float)(signed int)(v13 >> 1);\n  else\n    v14 = (float)(signed int)v13;\n  LODWORD(v35) = dword_697430;\n  v15 = \"P: %d D: %d N: %d S: %d Mem: %2.2fM Iters: %d MaxDepth: %d\\n\";\n  printf(\n    \"P: %d D: %d N: %d S: %d Mem: %2.2fM Iters: %d MaxDepth: %d\\n\",\n    v4,\n    *((unsigned int *)v3 + 2),\n    dword_697458,\n    (unsigned int)dword_6973F0,\n    (unsigned int)dword_69741C,\n    (float)(v14 * 0.00000095367432),\n    v35);\n  v16 = dword_6974F8;\n  if ( dword_6974F8 && dword_697490 )\n  {\n    v4 = *((unsigned int *)v3 + 1);\n    LODWORD(v36) = dword_697430;\n    v15 = \"tellics whisper proof %d, disproof %d, %d nodes, %d forwards, %d iters, highest depth %d\\n\";\n    printf(\n      \"tellics whisper proof %d, disproof %d, %d nodes, %d forwards, %d iters, highest depth %d\\n\",\n      v4,\n      *((unsigned int *)v3 + 2),\n      (unsigned int)dword_697458,\n      (unsigned int)dword_6973EC,\n      (unsigned int)dword_69741C,\n      v36);\n    v16 = dword_6974F8;\n  }\n  if ( !v16 )\n  {\n    v18 = rtime(v15, v4);\n    v19 = sub_417410(v18, v2);\n    printf(\"Time : %f\\n\", v2, (float)v19 / 100.0);\n    if ( *((_DWORD *)v3 + 1) )\n      goto LABEL_39;\nLABEL_42:\n    *v3 = 1;\n    puts(\"This position is WON.\");\n    printf(\"PV: \");\n    memset(&s, 0, 0x2000uLL);\n    memset(dest, 0, 0x2000uLL);\n    dword_697484 = 1;\n    if ( v3[2] )\n    {\n      v20 = v3;\n      do\n      {\n        v21 = *((_QWORD *)v20 + 2);\n        if ( dword_6974A8 == (dword_6974EC == 0) )\n        {\n          v22 = *((_DWORD *)v20 + 1);\n          v23 = -1LL;\n          do\n            v24 = *(_QWORD *)(v21 + 8 * v23++ + 8);\n          while ( *(_DWORD *)(v24 + 4) != v22 );\n        }\n        else\n        {\n          v22 = *((_DWORD *)v20 + 2);\n          v23 = -1LL;\n          do\n            v24 = *(_QWORD *)(v21 + 8 * v23++ + 8);\n          while ( *(_DWORD *)(v24 + 8) != v22 );\n        }\n        v20 = *(_BYTE **)(v21 + 8LL * (unsigned int)v23);\n        v25 = *((_QWORD *)v20 + 6);\n        v26 = *((_OWORD *)v20 + 2);\n        sub_416060((unsigned __int64)&s, v24, v22, v23);\n        printf(\"%s \", &s, v26, v25);\n        strcat(dest, &s);\n        *(_WORD *)&dest[strlen(dest)] = 32;\n        sub_407B10((__int64)(v20 + 32), 0);\n        v27 = dword_697484;\n        if ( dword_697484 == 1 )\n        {\n          qword_697290 = *((_QWORD *)v20 + 6);\n          xmmword_697280 = *((_OWORD *)v20 + 2);\n        }\n        dword_6973E8 = 1;\n      }\n      while ( v20[2] );\n      while ( v20 != v3 )\n      {\n        sub_4083E0((__int64)(v20 + 32), 0);\n        v20 = (_BYTE *)*((_QWORD *)v20 + 3);\n      }\n      if ( dword_697420 )\n        goto LABEL_64;\n    }\n    else\n    {\n      v27 = 1;\n      if ( dword_697420 )\n      {\nLABEL_64:\n        if ( v27 == 1 && (!*((_DWORD *)v3 + 1) || !*((_DWORD *)v3 + 2)) )\n        {\n          if ( dword_6974A8 )\n          {\n            puts(\"\\n0-1 {Black mates}\");\n            dword_6974A4 = 2;\n          }\n          else\n          {\n            puts(\"\\n1-0 {White mates}\");\n            dword_6974A4 = 3;\n          }\n        }\n        putchar(10);\n        goto LABEL_71;\n      }\n    }\n    if ( dword_6974F8 && dword_697490 )\n    {\n      dword_697420 = 1;\n      printf(\"\\ntellics kibitz Forced win in %d moves.\\n\", v27 / 2);\n    }\n    goto LABEL_64;\n  }\n  if ( !*((_DWORD *)v3 + 1) )\n    goto LABEL_42;\nLABEL_39:\n  if ( *((_DWORD *)v3 + 2) )\n  {\n    *v3 = 2;\n    v17 = \"This position is UNKNOWN.\";\n  }\n  else\n  {\n    *v3 = 0;\n    v17 = \"This position is LOST.\";\n  }\n  puts(v17);\n  xmmword_697280 = xmmword_422668;\n  qword_697290 = qword_422678;\nLABEL_71:\n  v28 = (unsigned __int8)v3[1];\n  if ( v3[1] )\n  {\n    v29 = *((_QWORD *)v3 + 2);\n    v30 = -1.0;\n    v31 = 0LL;\n    while ( 1 )\n    {\n      v32 = *(_QWORD *)(v29 + 8 * v31);\n      v33 = *(_DWORD *)(v32 + 4);\n      if ( !v33 )\n        break;\n      v34 = (float)*(signed int *)(v32 + 8) / (float)v33;\n      if ( v34 > v30 )\n      {\n        qword_697290 = *(_QWORD *)(v32 + 48);\n        xmmword_697280 = *(_OWORD *)(v32 + 32);\n        v30 = v34;\n      }\n      if ( ++v31 >= v28 )\n        goto LABEL_79;\n    }\n    qword_697290 = *(_QWORD *)(v32 + 48);\n    xmmword_697280 = *(_OWORD *)(v32 + 32);\n  }\nLABEL_79:\n  qword_6972A8 = qword_697290;\n  xmmword_697298 = xmmword_697280;\n  free(v3);\n  dword_422664 = 0;\nLABEL_80:\n  free(qword_6972E8);\n}\n", 
            "funcStartAddr": "0x40d2d0L", 
            "funcEndAddr": "0x40d95bL", 
            "funcName": "sub_40D2D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40D960(__int64 a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6, __int128 a7, __int64 a8)\n{\n  __int64 v8; // r15\n  __int128 v9; // xmm0\n  unsigned int v10; // ebp\n  __int64 v11; // r12\n  unsigned __int8 *v12; // r13\n  signed __int64 v13; // rsi\n  __int64 v14; // rbp\n  __int64 v15; // rax\n  signed __int64 v16; // rcx\n  __int64 v17; // rsi\n  __int64 v18; // rsi\n  __int64 v19; // rbx\n  signed __int64 v20; // rdi\n  __int64 v21; // rax\n  unsigned __int64 v22; // rax\n  float v23; // xmm0_4\n  __int128 v25; // [rsp+0h] [rbp-48h]\n  __int64 v26; // [rsp+10h] [rbp-38h]\n\n  v8 = a1;\n  if ( dword_69747C > 3 || dword_697360 != 3 )\n  {\n    dword_697458 = 0;\n    dword_69741C = 0;\n    dword_6973F0 = 0;\n    dword_697484 = 1;\n    dword_697430 = 0;\n    v10 = 0;\n    sub_407B10((__int64)&a7, 0);\n    dword_692990[dword_69743C + dword_697484 - 1] = dword_6973FC;\n    dword_6974A8 = dword_6974EC == 0;\n    v11 = rtime(&a7, 0LL);\n    v12 = (unsigned __int8 *)calloc(1uLL, 0x38uLL);\n    v13 = 56LL;\n    qword_6972E8 = calloc(dword_697340, 0x38uLL);\n    sub_40B9D0(v12);\n    sub_40BEF0(v12);\n    if ( *((_DWORD *)v12 + 1) )\n    {\n      v10 = *((_DWORD *)v12 + 1);\n      while ( *((_DWORD *)v12 + 2) && 56LL * dword_697340 - 560000 > (unsigned __int64)(unsigned int)dword_422664 )\n      {\n        if ( v12[2] )\n        {\n          v14 = (__int64)v12;\n          do\n          {\n            v15 = *(_QWORD *)(v14 + 16);\n            if ( dword_6974A8 == (dword_6974EC == 0) )\n            {\n              v16 = -1LL;\n              do\n                v17 = *(_QWORD *)(v15 + 8 * v16++ + 8);\n              while ( *(_DWORD *)(v17 + 4) != *(_DWORD *)(v14 + 4) );\n            }\n            else\n            {\n              v16 = -1LL;\n              do\n                v18 = *(_QWORD *)(v15 + 8 * v16++ + 8);\n              while ( *(_DWORD *)(v18 + 8) != *(_DWORD *)(v14 + 8) );\n            }\n            v14 = *(_QWORD *)(v15 + 8LL * (unsigned int)v16);\n            dword_692990[dword_69743C + dword_697484 - 1] = dword_6973FC;\n            v13 = 0LL;\n            sub_407B10(v14 + 32, 0);\n            if ( dword_697484 > dword_697430 )\n              dword_697430 = dword_697484;\n          }\n          while ( *(_BYTE *)(v14 + 2) );\n        }\n        else\n        {\n          v14 = (__int64)v12;\n        }\n        sub_40C4D0(v14);\n        do\n        {\n          v19 = v14;\n          v20 = v14;\n          sub_40BEF0((unsigned __int8 *)v14);\n          if ( *(_DWORD *)(v14 + 36) )\n          {\n            v20 = v14 + 32;\n            v13 = 0LL;\n            sub_4083E0(v14 + 32, 0);\n          }\n          v14 = *(_QWORD *)(v14 + 24);\n        }\n        while ( v14 );\n        if ( *(_DWORD *)(v19 + 36) )\n        {\n          v13 = 0LL;\n          v20 = v19 + 32;\n          sub_407B10(v19 + 32, 0);\n        }\n        if ( !(++dword_69741C & 0x1F) )\n        {\n          v21 = rtime(v20, v13);\n          v13 = v11;\n          if ( (signed int)sub_417410(v21, v11) > dword_69748C )\n          {\n            v10 = *((_DWORD *)v12 + 1);\n            break;\n          }\n        }\n        v10 = *((_DWORD *)v12 + 1);\n        if ( !v10 )\n        {\n          v10 = 0;\n          break;\n        }\n      }\n    }\n    v22 = 56LL * dword_697458;\n    if ( (v22 & 0x8000000000000000LL) != 0LL )\n      v23 = (float)(signed int)(v22 >> 1) + (float)(signed int)(v22 >> 1);\n    else\n      v23 = (float)(signed int)v22;\n    printf(\n      \"P: %d D: %d N: %d S: %d Mem: %2.2fM Iters: %d\\n\",\n      v10,\n      *((unsigned int *)v12 + 2),\n      dword_697458,\n      (unsigned int)dword_6973F0,\n      (unsigned int)dword_69741C,\n      (float)(v23 * 0.00000095367432));\n    sub_4083E0((__int64)&a7, 0);\n    if ( *((_DWORD *)v12 + 1) )\n    {\n      v26 = a8;\n      v25 = a7;\n    }\n    else\n    {\n      v26 = qword_697290;\n      v25 = xmmword_697280;\n      dword_6974AC = 1;\n    }\n    dword_422664 = 0;\n    free(v12);\n    free(qword_6972E8);\n    *(_QWORD *)(v8 + 16) = v26;\n    v9 = v25;\n  }\n  else\n  {\n    *(_QWORD *)(a1 + 16) = a8;\n    v9 = a7;\n  }\n  *(_OWORD *)v8 = v9;\n  return v8;\n}\n", 
            "funcStartAddr": "0x40d960L", 
            "funcEndAddr": "0x40dcadL", 
            "funcName": "sub_40D960"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_40DCB0@<rax>(__int64 a1@<rax>)\n{\n  __int64 v1; // ST00_8\n  __int64 result; // rax\n\n  dword_697358 = 3000000;\n  dword_697320 = 1000000;\n  dword_697340 = 200000;\n  dword_697398 = 1;\n  dword_6973AC = 1065353216;\n  dword_6973A4 = 1;\n  dword_697394 = 0;\n  dword_69739C = 1;\n  dword_6973B0 = 1;\n  dword_69738C = 0;\n  dword_6973A0 = 1;\n  dword_6973A8 = 0;\n  dword_697404 = 0;\n  sprintf(byte_697260, \"%u\", 110LL, a1);\n  sub_4031A0();\n  sub_415940();\n  result = v1;\n  sub_4026E0();\n  return result;\n}\n", 
            "funcStartAddr": "0x40dcb0L", 
            "funcEndAddr": "0x40dd59L", 
            "funcName": "sub_40DCB0"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_40DD60(__int64 a1, __int64 a2, __int64 a3, unsigned int a4, unsigned int a5)\n{\n  __int64 v5; // r9\n  __int64 v6; // r10\n  int *v7; // rbp\n  __int64 v8; // r14\n  __int64 v9; // r15\n  __int64 v10; // r13\n  int v11; // er11\n  __int64 v12; // r12\n  __int64 v13; // rcx\n  int v14; // eax\n  int v15; // eax\n  int v16; // ecx\n  int v17; // ebx\n  int v18; // ecx\n  int v19; // eax\n  int v20; // eax\n  int v21; // ecx\n  int v22; // eax\n  int v23; // eax\n  int v24; // ecx\n  int v25; // eax\n  __int64 v26; // rcx\n  signed __int64 v27; // rax\n  signed __int64 v28; // rcx\n  int v29; // eax\n  __int64 v30; // r12\n  __int64 v31; // r10\n  int *v32; // rbp\n  __int64 v33; // r14\n  __int64 v34; // rbx\n  __int64 v35; // r13\n  int v36; // er15\n  __int64 v37; // rax\n  int v38; // ecx\n  int v39; // eax\n  int v40; // ecx\n  int v41; // eax\n  signed __int64 v42; // rdi\n  signed __int64 v43; // rcx\n  signed __int64 v44; // rdi\n  int v45; // ecx\n  int v46; // eax\n  int v47; // ecx\n  int v48; // eax\n  int v49; // ecx\n  int v50; // eax\n  int v51; // ecx\n  signed int v52; // eax\n  int v53; // ecx\n  int v54; // eax\n  int v55; // eax\n  int v56; // eax\n  unsigned int v57; // [rsp+4h] [rbp-54h]\n  __int64 v58; // [rsp+8h] [rbp-50h]\n  __int64 v59; // [rsp+8h] [rbp-50h]\n  __int64 v60; // [rsp+10h] [rbp-48h]\n  __int64 v61; // [rsp+18h] [rbp-40h]\n  __int64 v62; // [rsp+20h] [rbp-38h]\n\n  v57 = a5;\n  v61 = a3;\n  v60 = a2;\n  if ( !dword_6974B0 )\n  {\n    if ( (signed int)a4 <= 0 )\n      return;\n    v30 = a5;\n    v31 = a4;\n    v32 = (int *)(a1 + 12);\n    v33 = 0LL;\n    v59 = a4;\n    while ( 1 )\n    {\n      v34 = *(v32 - 3);\n      v35 = *(v32 - 2);\n      v36 = *v32;\n      v37 = *(v32 - 1);\n      if ( a5 == -1 || v30 != v33 )\n      {\n        if ( a5 == -2 )\n        {\n          v42 = dword_697484 + 1LL;\n          v43 = 3 * v42;\n          v44 = 7200 * v42;\n          if ( (_DWORD)v34 == *(_DWORD *)((char *)&xmmword_423050 + 8 * v43 + v44)\n            && (_DWORD)v35 == *(_DWORD *)((char *)&xmmword_423050 + 8 * v43 + v44 + 4)\n            && v36 == *(_DWORD *)((char *)&xmmword_423050 + 8 * v43 + v44 + 12) )\n          {\n            *(_DWORD *)(a2 + 4 * v33) = 100000000;\n            if ( (_DWORD)v37 != 13 )\n            {\n              v45 = *((_DWORD *)&xmmword_422610 + v37);\n              v46 = -*((_DWORD *)&xmmword_422610 + v37);\n              if ( v46 < 1 )\n                v46 = v45;\n              v47 = -*((_DWORD *)&xmmword_422610 + dword_696070[v34]);\n              if ( v47 < 1 )\n                v47 = *((_DWORD *)&xmmword_422610 + dword_696070[v34]);\n              if ( v46 + 15 >= v47 )\n              {\n                *(_DWORD *)(a3 + 4 * v33) = v46 - (v47 >> 4);\n              }\n              else\n              {\n                v48 = sub_4123D0(dword_6974EC == 0, (unsigned int)v35, (unsigned int)v34);\n                v31 = v59;\n                a2 = v60;\n                a3 = v61;\n                a5 = v57;\n                *(_DWORD *)(v61 + 4 * v33) = v48;\n              }\n            }\n          }\n        }\n        else if ( (_DWORD)v37 == 13 )\n        {\n          *(_DWORD *)(a2 + 4 * v33) = 0;\n        }\n        else\n        {\n          v49 = *((_DWORD *)&xmmword_422610 + v37);\n          v50 = -*((_DWORD *)&xmmword_422610 + v37);\n          if ( v50 < 1 )\n            v50 = v49;\n          v51 = -*((_DWORD *)&xmmword_422610 + dword_696070[v34]);\n          if ( v51 < 1 )\n            v51 = *((_DWORD *)&xmmword_422610 + dword_696070[v34]);\n          if ( v50 + 15 >= v51 )\n          {\n            v54 = v50 - (v51 >> 4);\n            *(_DWORD *)(a3 + 4 * v33) = v54;\n            *(_DWORD *)(a2 + 4 * v33) = v54 + 50000000;\n          }\n          else\n          {\n            v52 = sub_4123D0(dword_6974EC == 0, (unsigned int)v35, (unsigned int)v34);\n            v31 = v59;\n            a2 = v60;\n            a3 = v61;\n            a5 = v57;\n            v53 = v52 + 50000000;\n            if ( v52 <= -51 )\n              v53 = v52;\n            *(_DWORD *)(v60 + 4 * v33) = v53;\n            *(_DWORD *)(v61 + 4 * v33) = v52;\n          }\n        }\n      }\n      else\n      {\n        *(_DWORD *)(a2 + 4 * v30) = 100000000;\n        if ( (_DWORD)v37 != 13 )\n        {\n          v38 = *((_DWORD *)&xmmword_422610 + v37);\n          v39 = -*((_DWORD *)&xmmword_422610 + v37);\n          if ( v39 < 1 )\n            v39 = v38;\n          v40 = -*((_DWORD *)&xmmword_422610 + dword_696070[v34]);\n          if ( v40 < 1 )\n            v40 = *((_DWORD *)&xmmword_422610 + dword_696070[v34]);\n          if ( v39 + 15 >= v40 )\n          {\n            *(_DWORD *)(a3 + 4 * v30) = v39 - (v40 >> 4);\n          }\n          else\n          {\n            v41 = sub_4123D0(dword_6974EC == 0, (unsigned int)v35, (unsigned int)v34);\n            v31 = v59;\n            a2 = v60;\n            a3 = v61;\n            a5 = v57;\n            *(_DWORD *)(v61 + 4 * v30) = v41;\n          }\n        }\n      }\n      v55 = dword_6469D0[144 * v34 + v35] + *(_DWORD *)(a2 + 4 * v33);\n      *(_DWORD *)(a2 + 4 * v33) = v55;\n      if ( (_DWORD)v34 != *((_DWORD *)&xmmword_68A650 + 6 * dword_697484)\n        || (_DWORD)v35 != *((_DWORD *)&xmmword_68A650 + 6 * dword_697484 + 1)\n        || v36 != *((_DWORD *)&xmmword_68A650 + 6 * dword_697484 + 3) )\n      {\n        if ( (_DWORD)v34 != *((_DWORD *)&xmmword_68C270 + 6 * dword_697484)\n          || (_DWORD)v35 != *((_DWORD *)&xmmword_68C270 + 6 * dword_697484 + 1)\n          || v36 != *((_DWORD *)&xmmword_68C270 + 6 * dword_697484 + 3) )\n        {\n          if ( (_DWORD)v34 != *((_DWORD *)&xmmword_68DE90 + 6 * dword_697484)\n            || (_DWORD)v35 != *((_DWORD *)&xmmword_68DE90 + 6 * dword_697484 + 1)\n            || v36 != *((_DWORD *)&xmmword_68DE90 + 6 * dword_697484 + 3) )\n          {\n            goto LABEL_106;\n          }\n          v56 = v55 + 15000000;\n        }\n        else\n        {\n          v56 = v55 + 20000000;\n        }\n      }\n      else\n      {\n        v56 = v55 + 25000000;\n      }\n      *(_DWORD *)(a2 + 4 * v33) = v56;\nLABEL_106:\n      ++v33;\n      v32 += 6;\n      if ( v31 == v33 )\n        return;\n    }\n  }\n  dword_6974B0 = 0;\n  if ( (signed int)a4 > 0 )\n  {\n    v5 = a5;\n    v6 = a4;\n    v7 = (int *)(a1 + 12);\n    v8 = 0LL;\n    v58 = a5;\n    v62 = a4;\n    while ( 1 )\n    {\n      v9 = *(v7 - 3);\n      v10 = *(v7 - 2);\n      v11 = *v7;\n      v12 = *(v7 - 1);\n      v13 = a2;\n      v14 = 0;\n      if ( v12 != 13 )\n      {\n        v15 = -*((_DWORD *)&xmmword_422610 + v12);\n        if ( v15 < 1 )\n          v15 = *((_DWORD *)&xmmword_422610 + v12);\n        v16 = -*((_DWORD *)&xmmword_422610 + dword_696070[v9]);\n        if ( v16 < 1 )\n          v16 = *((_DWORD *)&xmmword_422610 + dword_696070[v9]);\n        if ( v15 + 15 >= v16 )\n        {\n          v19 = v15 - (v16 >> 4);\n          *(_DWORD *)(a3 + 4 * v8) = v19;\n          v14 = v19 + 50000000;\n          v13 = a2;\n        }\n        else\n        {\n          v17 = *v7;\n          v14 = sub_4123D0(dword_6974EC == 0, (unsigned int)v10, (unsigned int)v9);\n          v11 = v17;\n          v6 = v62;\n          v5 = v58;\n          a2 = v60;\n          a3 = v61;\n          a5 = v57;\n          v18 = v14 + 50000000;\n          if ( v14 <= -51 )\n            v18 = v14;\n          *(_DWORD *)(v60 + 4 * v8) = v18;\n          v13 = v61;\n        }\n      }\n      *(_DWORD *)(v13 + 4 * v8) = v14;\n      if ( (_DWORD)v9 == dword_424C70[6 * dword_697484]\n        && (_DWORD)v10 == dword_424C74[6 * dword_697484]\n        && v11 == dword_424C7C[6 * dword_697484] )\n      {\n        break;\n      }\n      if ( a5 <= 0xFFFFFFFD && v5 == v8 )\n      {\n        *(_DWORD *)(a2 + 4 * v5) = 100000000;\n        if ( (_DWORD)v12 != 13 )\n        {\n          v23 = -*((_DWORD *)&xmmword_422610 + v12);\n          if ( v23 < 1 )\n            v23 = *((_DWORD *)&xmmword_422610 + v12);\n          v24 = -*((_DWORD *)&xmmword_422610 + dword_696070[v9]);\n          if ( v24 < 1 )\n            v24 = *((_DWORD *)&xmmword_422610 + dword_696070[v9]);\n          if ( v23 + 15 >= v24 )\n          {\n            *(_DWORD *)(a3 + 4 * v5) = v23 - (v24 >> 4);\n          }\n          else\n          {\n            v25 = sub_4123D0(dword_6974EC == 0, (unsigned int)v10, (unsigned int)v9);\n            v6 = v62;\n            v5 = v58;\n            a2 = v60;\n            a3 = v61;\n            a5 = v57;\n            *(_DWORD *)(v61 + 4 * v58) = v25;\n          }\n        }\n        goto LABEL_56;\n      }\n      if ( a5 != -2 )\n      {\n        if ( dword_697484 != 1 || dword_69740C <= 1 )\n        {\n          v29 = dword_6469D0[144 * v9 + v10] + *(_DWORD *)(a2 + 4 * v8);\n          *(_DWORD *)(a2 + 4 * v8) = v29;\n          if ( (_DWORD)v9 != *((_DWORD *)&xmmword_68A650 + 6 * dword_697484)\n            || (_DWORD)v10 != *((_DWORD *)&xmmword_68A650 + 6 * dword_697484 + 1)\n            || v11 != *((_DWORD *)&xmmword_68A650 + 6 * dword_697484 + 3) )\n          {\n            if ( (_DWORD)v9 != *((_DWORD *)&xmmword_68C270 + 6 * dword_697484)\n              || (_DWORD)v10 != *((_DWORD *)&xmmword_68C270 + 6 * dword_697484 + 1)\n              || v11 != *((_DWORD *)&xmmword_68C270 + 6 * dword_697484 + 3) )\n            {\n              if ( (_DWORD)v9 == *((_DWORD *)&xmmword_68DE90 + 6 * dword_697484)\n                && (_DWORD)v10 == *((_DWORD *)&xmmword_68DE90 + 6 * dword_697484 + 1)\n                && v11 == *((_DWORD *)&xmmword_68DE90 + 6 * dword_697484 + 3) )\n              {\n                *(_DWORD *)(a2 + 4 * v8) = v29 + 15000000;\n              }\n            }\n            else\n            {\n              *(_DWORD *)(a2 + 4 * v8) = v29 + 20000000;\n            }\n          }\n          else\n          {\n            *(_DWORD *)(a2 + 4 * v8) = v29 + 25000000;\n          }\n        }\n        else\n        {\n          *(_DWORD *)(a2 + 4 * v8) = dword_6932F0[v8] / 0x64u;\n        }\n        goto LABEL_56;\n      }\n      v26 = dword_697484 + 1;\n      v27 = 3 * v26;\n      v28 = 7200 * v26;\n      if ( (_DWORD)v9 == *(_DWORD *)((char *)&xmmword_423050 + 8 * v27 + v28)\n        && (_DWORD)v10 == *(_DWORD *)((char *)&xmmword_423050 + 8 * v27 + v28 + 4)\n        && v11 == *(_DWORD *)((char *)&xmmword_423050 + 8 * v27 + v28 + 12) )\n      {\n        goto LABEL_18;\n      }\nLABEL_56:\n      ++v8;\n      v7 += 6;\n      if ( v6 == v8 )\n        return;\n    }\n    dword_6974B0 = 1;\nLABEL_18:\n    *(_DWORD *)(a2 + 4 * v8) = 100000000;\n    if ( (_DWORD)v12 != 13 )\n    {\n      v20 = -*((_DWORD *)&xmmword_422610 + v12);\n      if ( v20 < 1 )\n        v20 = *((_DWORD *)&xmmword_422610 + v12);\n      v21 = -*((_DWORD *)&xmmword_422610 + dword_696070[v9]);\n      if ( v21 < 1 )\n        v21 = *((_DWORD *)&xmmword_422610 + dword_696070[v9]);\n      if ( v20 + 15 >= v21 )\n      {\n        *(_DWORD *)(a3 + 4 * v8) = v20 - (v21 >> 4);\n      }\n      else\n      {\n        v22 = sub_4123D0(dword_6974EC == 0, (unsigned int)v10, (unsigned int)v9);\n        v6 = v62;\n        v5 = v58;\n        a2 = v60;\n        a3 = v61;\n        a5 = v57;\n        *(_DWORD *)(v61 + 4 * v8) = v22;\n      }\n    }\n    goto LABEL_56;\n  }\n}\n", 
            "funcStartAddr": "0x40dd60L", 
            "funcEndAddr": "0x40e3f6L", 
            "funcName": "sub_40DD60"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_40E400(int a1)\n{\n  int v1; // er12\n  int v2; // er15\n  unsigned int v3; // ebx\n  __int64 v4; // [rsp+0h] [rbp-3028h]\n\n  if ( a1 )\n  {\n    sub_405540((__int64)&v4);\n    v1 = dword_697468;\n    v2 = sub_406E60();\n    if ( v1 > 0 )\n    {\n      v3 = 0;\n      do\n      {\n        sub_407B10((__int64)&v4, v3);\n        if ( (unsigned int)sub_404CA0((__int64)&v4, v3, v2) )\n          sub_40E400((unsigned int)(a1 - 1), v3);\n        sub_4083E0((__int64)&v4, v3++);\n      }\n      while ( v1 != v3 );\n    }\n  }\n  else\n  {\n    ++dword_697498;\n  }\n}\n", 
            "funcStartAddr": "0x40e400L", 
            "funcEndAddr": "0x40e48eL", 
            "funcName": "sub_40E400"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_40E490(__int64 a1, __int64 a2, int a3)\n{\n  int v3; // er14\n  unsigned int v4; // er13\n  signed int v5; // ebp\n  __int64 v6; // rax\n  signed __int64 result; // rax\n  __int64 v8; // rax\n  time_t v9; // rsi\n  __int64 v10; // rdi\n  unsigned int v11; // ebx\n  int v12; // ecx\n  signed int v13; // ebx\n  unsigned int v14; // er12\n  __int64 v15; // r15\n  int v16; // er9\n  signed __int64 v17; // rcx\n  __int64 v18; // rdi\n  __int64 v19; // rsi\n  __int64 v20; // rdx\n  signed int v21; // ebp\n  signed int v22; // edx\n  signed int v23; // eax\n  __int64 v24; // rcx\n  int v25; // esi\n  unsigned int v26; // er14\n  int v27; // edi\n  unsigned int v28; // er12\n  int v29; // edi\n  signed int v30; // er14\n  __int64 v31; // r11\n  signed __int64 v32; // rax\n  unsigned __int64 v33; // r10\n  signed __int64 v34; // r12\n  int v35; // er8\n  signed __int64 v36; // rsi\n  signed __int64 v37; // rdi\n  signed __int64 v38; // rax\n  signed __int64 v39; // rcx\n  __int128 *v40; // rbx\n  signed __int64 v41; // rcx\n  signed __int64 v42; // rdi\n  __int64 v43; // rbx\n  unsigned int v44; // [rsp+4h] [rbp-4054h]\n  unsigned int v45; // [rsp+8h] [rbp-4050h]\n  unsigned int v46; // [rsp+Ch] [rbp-404Ch]\n  int v47; // [rsp+10h] [rbp-4048h]\n  unsigned int v48; // [rsp+14h] [rbp-4044h]\n  unsigned int v49; // [rsp+18h] [rbp-4040h]\n  unsigned int v50; // [rsp+1Ch] [rbp-403Ch]\n  int v51[512]; // [rsp+20h] [rbp-4038h]\n  int v52[512]; // [rsp+820h] [rbp-3838h]\n  __int128 v53; // [rsp+1020h] [rbp-3038h]\n  __int64 v54[1541]; // [rsp+1030h] [rbp-3028h]\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a1;\n  v6 = dword_697484;\n  dword_694DB0[v6] = v6;\n  if ( !(_WORD)dword_697460 )\n  {\n    if ( !(unsigned int)sub_417B80(a1, a2) )\n    {\n      v8 = rtime(a1, a2);\n      v9 = time0;\n      v10 = v8;\n      v6 = sub_417410(v8, time0);\n      v11 = dword_6974C4;\n      if ( (signed int)v6 < dword_6974C4 || dword_69740C < 2 )\n        goto LABEL_2;\n      if ( dword_697360 != 1 && dword_6973D8 == 1 && !(dword_6973F8 | dword_6973D4 | dword_6973E4) )\n      {\n        v12 = 1000;\n        if ( 4 * dword_6974C4 > 999 )\n          v12 = 4 * dword_6974C4;\n        if ( dword_6974C8 > v12 )\n        {\n          dword_6973D4 = 1;\n          dword_6974C4 += sub_4159F0(v10, v9);\n          LODWORD(v6) = printf(\n                          \"Extended from %d to %d, time left %d\\n\",\n                          v11,\n                          (unsigned int)dword_6974C4,\n                          (unsigned int)dword_6974C8);\n          if ( v3 <= 0 )\n            return sub_403300(v6);\n          goto LABEL_3;\n        }\n      }\n    }\n    dword_6974BC = 1;\n    return 0LL;\n  }\nLABEL_2:\n  if ( v3 <= 0 )\n    return sub_403300(v6);\nLABEL_3:\n  if ( dword_697484 >= 300 )\n    return sub_403300(v6);\n  ++dword_697494;\n  ++dword_697460;\n  result = (unsigned int)sub_4158D0(&v46, &v45) - 1;\n  switch ( (_DWORD)result )\n  {\n    case 0:\n      result = v46;\n      if ( (signed int)v46 > v5 )\n        goto LABEL_23;\n      return result;\n    case 1:\n      result = v46;\n      if ( (signed int)v46 < (signed int)v4 )\n        goto LABEL_23;\n      return result;\n    case 2:\n      return v46;\n    case 3:\n      v45 = -1;\n      goto LABEL_23;\n    default:\nLABEL_23:\n      v13 = sub_403300(result);\n      if ( v13 >= (signed int)v4 )\n      {\n        v17 = 500LL;\n        v18 = (unsigned int)v13;\n        v19 = (unsigned int)v5;\n        v20 = v4;\n        goto LABEL_30;\n      }\n      v14 = v5;\n      if ( v13 >= v5 )\n        v14 = v13;\n      sub_405540((__int64)&v53);\n      result = 50000LL;\n      if ( dword_697424 )\n        return result;\n      v48 = v5;\n      v15 = (unsigned int)dword_697468;\n      sub_40DD60((__int64)&v53, (__int64)v51, (__int64)v52, dword_697468, v45);\n      if ( (signed int)v15 <= 0 )\n        goto LABEL_57;\n      v16 = v14 + -150 - v13;\n      v49 = -v4;\n      v50 = v3 - 1;\n      v47 = v14 + -150 - v13;\nLABEL_32:\n      v21 = v14;\n      v44 = -v14;\n      break;\n  }\nLABEL_33:\n  v22 = -1000000;\n  v23 = -1000000;\n  v24 = 0LL;\n  v25 = -1000000;\n  v26 = v50;\n  while ( 1 )\n  {\n    do\n    {\n      v27 = v51[v24];\n      v28 = v22;\n      if ( v27 > v25 )\n        v28 = v24;\n      if ( v27 > v25 )\n        v23 = v24;\n      if ( v27 >= v25 )\n        v25 = v51[v24];\n      ++v24;\n      v22 = v28;\n    }\n    while ( v24 != v15 );\n    if ( v23 < -999999 )\n      break;\n    v51[v23] = -1000000;\n    if ( !*((_DWORD *)&v53 + 6 * (signed int)v28 + 3) )\n    {\n      v29 = v52[v28];\n      v22 = -1000000;\n      v23 = -1000000;\n      v24 = 0LL;\n      v25 = -1000000;\n      if ( v29 < v16 )\n        continue;\n      v22 = -1000000;\n      v23 = -1000000;\n      v24 = 0LL;\n      v25 = -1000000;\n      if ( v29 < 0 )\n        continue;\n    }\n    sub_407B10((__int64)&v53, v28);\n    v30 = -sub_40E490(v49, v44, v26);\n    sub_4083E0((__int64)&v53, v28);\n    v16 = v47;\n    if ( v21 < v30 && v30 != -50000 )\n    {\n      v45 = v28;\n      if ( v30 < (signed int)v4 )\n      {\n        v31 = dword_697484;\n        v32 = 3LL * dword_697484;\n        v33 = 7200LL * dword_697484;\n        qword_423060[v32 + v33 / 8] = v54[3 * (signed int)v28];\n        *(__int128 *)((char *)&xmmword_423050 + 8 * v32 + v33) = *(__int128 *)((char *)&v53 + 24 * (signed int)v28);\n        v34 = v31 + 1;\n        v35 = dword_694DB4[v31];\n        if ( (signed int)v31 + 1 < v35 )\n        {\n          v36 = v31 + 1;\n          if ( ((_BYTE)v35 - (_BYTE)v34) & 3 )\n          {\n            v37 = 7224 * v34;\n            v38 = v33 + 24 * v34;\n            v39 = -(signed __int64)(((_BYTE)v35 - (_BYTE)v34) & 3);\n            v40 = &xmmword_423050;\n            v36 = v31 + 1;\n            do\n            {\n              *(_QWORD *)((char *)v40 + v38 + 16) = *(_QWORD *)((char *)v40 + v37 + 16);\n              *(__int128 *)((char *)v40 + v38) = *(__int128 *)((char *)v40 + v37);\n              ++v36;\n              v40 = (__int128 *)((char *)v40 + 24);\n              ++v39;\n            }\n            while ( v39 );\n          }\n          v16 = v47;\n          if ( (unsigned __int64)(v35 - 1LL - v34) >= 3 )\n          {\n            v41 = 7200 * v34 + 24 * v36 + 4337744;\n            v42 = v33 + 24 * v36 + 4337744;\n            v43 = 0LL;\n            do\n            {\n              *(_QWORD *)(v42 + v43 + 16) = *(_QWORD *)(v41 + v43 + 16);\n              *(_OWORD *)(v42 + v43) = *(_OWORD *)(v41 + v43);\n              *(_QWORD *)(v42 + v43 + 40) = *(_QWORD *)(v41 + v43 + 40);\n              *(_OWORD *)(v42 + v43 + 24) = *(_OWORD *)(v41 + v43 + 24);\n              *(_OWORD *)(v42 + v43 + 48) = *(_OWORD *)(v41 + v43 + 48);\n              *(_QWORD *)(v42 + v43 + 64) = *(_QWORD *)(v41 + v43 + 64);\n              *(_QWORD *)(v42 + v43 + 88) = *(_QWORD *)(v41 + v43 + 88);\n              *(_OWORD *)(v42 + v43 + 72) = *(_OWORD *)(v41 + v43 + 72);\n              v36 += 4LL;\n              v43 += 96LL;\n            }\n            while ( v36 < v35 );\n          }\n        }\n        dword_694DB0[v31] = v35;\n        v14 = v30;\n        goto LABEL_32;\n      }\n      v13 = v30;\n      v18 = (unsigned int)v30;\n      v19 = v48;\n      v20 = v4;\n      v17 = v28;\nLABEL_30:\n      sub_415530(v18, v19, v20, v17);\n      return (unsigned int)v13;\n    }\n    goto LABEL_33;\n  }\n  v14 = v21;\nLABEL_57:\n  sub_415530(v14, v48, v4, v45);\n  return v14;\n}\n", 
            "funcStartAddr": "0x40e490L", 
            "funcEndAddr": "0x40e948L", 
            "funcName": "sub_40E490"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40E9E0(const char *a1, time_t a2, unsigned int a3, int a4)\n{\n  int v4; // er14\n  __int64 v5; // rbx\n  unsigned int v6; // er13\n  unsigned int v7; // ebp\n  __int64 v8; // r8\n  unsigned int v9; // er12\n  signed __int64 v10; // rax\n  __int64 v11; // r9\n  signed int v12; // ebp\n  __int64 v13; // rcx\n  __int64 v15; // rax\n  int v16; // eax\n  unsigned int v17; // er15\n  int v18; // ecx\n  __int64 v19; // rbx\n  __int64 v20; // rdx\n  int v21; // er12\n  signed int v22; // er15\n  __int64 v23; // rdx\n  int v24; // eax\n  int v25; // ecx\n  int v26; // er12\n  int v27; // er13\n  int v28; // ebp\n  int v29; // er12\n  bool v30; // zf\n  __int64 v31; // rbx\n  unsigned int v32; // eax\n  int v33; // er13\n  __int64 v34; // rbx\n  unsigned int v35; // ebx\n  __int64 v36; // r12\n  int v37; // ebp\n  int v38; // er8\n  signed int v39; // er11\n  unsigned int v40; // ebp\n  __int64 v41; // r9\n  unsigned int v42; // ecx\n  unsigned int v43; // eax\n  int v44; // eax\n  int v45; // eax\n  int v46; // edx\n  int v47; // edi\n  int v48; // ebp\n  signed int v49; // er10\n  bool v50; // bl\n  int v51; // esi\n  int v52; // ebp\n  bool v53; // cl\n  signed int v54; // esi\n  int v55; // esi\n  int v56; // edx\n  __int64 v57; // rbx\n  __int64 v58; // rax\n  __int64 v59; // r15\n  int v60; // er14\n  int v61; // er8\n  int v62; // ebp\n  signed int v63; // eax\n  __int64 v64; // rcx\n  int v65; // edx\n  int v66; // esi\n  int v67; // edi\n  int v68; // esi\n  int v69; // esi\n  int v70; // eax\n  __int64 v71; // rsi\n  int v72; // edi\n  __int64 v73; // rdx\n  signed __int64 v74; // rbx\n  int v75; // eax\n  int v76; // er13\n  __int64 v77; // rdi\n  int v78; // er9\n  signed int v79; // edx\n  int v80; // eax\n  int v81; // ecx\n  __int64 v82; // r13\n  unsigned int v83; // ebx\n  int v84; // eax\n  int v85; // edx\n  int *v86; // rbx\n  int v87; // edi\n  int v88; // er12\n  int v89; // edi\n  char v90; // si\n  __int64 v91; // rdx\n  unsigned int v92; // er12\n  int v93; // eax\n  int v94; // eax\n  int v95; // eax\n  __int64 v96; // rax\n  int v97; // ecx\n  int v98; // eax\n  bool v99; // sf\n  unsigned __int8 v100; // of\n  int v101; // eax\n  int v102; // ebx\n  int v103; // er12\n  char v104; // al\n  int v105; // er9\n  __int64 v106; // rbx\n  char *v107; // rcx\n  __int64 v108; // r11\n  signed __int64 v109; // rax\n  unsigned __int64 v110; // r10\n  signed __int64 v111; // rbx\n  int v112; // er8\n  signed __int64 v113; // rsi\n  signed __int64 v114; // rdi\n  signed __int64 v115; // rax\n  signed __int64 v116; // rcx\n  __int128 *v117; // r13\n  signed __int64 v118; // rcx\n  signed __int64 v119; // rdi\n  __int64 v120; // rbx\n  __int64 v121; // rdi\n  __int64 v122; // r8\n  __int64 v123; // rsi\n  __int64 v124; // rdx\n  unsigned int v125; // ebx\n  unsigned int v126; // ebp\n  __int64 v127; // rbx\n  __int64 v128; // rdx\n  __int64 v129; // rdx\n  __int64 v130; // r8\n  __int64 v131; // rsi\n  __int64 v132; // rax\n  signed __int64 v133; // rdx\n  signed __int64 v134; // rcx\n  signed __int64 v135; // rsi\n  __int64 v136; // r8\n  int v137; // edi\n  int v138; // edx\n  signed __int64 v139; // rbx\n  int v140; // edi\n  int v141; // edx\n  signed __int64 v142; // rbx\n  signed int v143; // eax\n  signed __int64 v144; // rax\n  unsigned int v145; // [rsp+Ch] [rbp-40BCh]\n  int v146; // [rsp+10h] [rbp-40B8h]\n  int v147; // [rsp+14h] [rbp-40B4h]\n  unsigned int v148; // [rsp+18h] [rbp-40B0h]\n  int v149; // [rsp+1Ch] [rbp-40ACh]\n  unsigned int v150; // [rsp+20h] [rbp-40A8h]\n  int v151; // [rsp+24h] [rbp-40A4h]\n  __int64 v152; // [rsp+28h] [rbp-40A0h]\n  _BOOL4 v153; // [rsp+34h] [rbp-4094h]\n  unsigned int v154; // [rsp+38h] [rbp-4090h]\n  unsigned int v155; // [rsp+3Ch] [rbp-408Ch]\n  __int64 v156; // [rsp+40h] [rbp-4088h]\n  int v157; // [rsp+48h] [rbp-4080h]\n  int v158; // [rsp+4Ch] [rbp-407Ch]\n  unsigned int v159; // [rsp+50h] [rbp-4078h]\n  unsigned int v160; // [rsp+54h] [rbp-4074h]\n  int v161; // [rsp+58h] [rbp-4070h]\n  int v162; // [rsp+5Ch] [rbp-406Ch]\n  __int128 v163; // [rsp+60h] [rbp-4068h]\n  __int64 v164; // [rsp+70h] [rbp-4058h]\n  __int64 v165; // [rsp+78h] [rbp-4050h]\n  unsigned __int64 v166; // [rsp+80h] [rbp-4048h]\n  __int64 v167; // [rsp+88h] [rbp-4040h]\n  int v168; // [rsp+90h] [rbp-4038h]\n  int v169; // [rsp+94h] [rbp-4034h]\n  int v170; // [rsp+98h] [rbp-4030h]\n  int v171[509]; // [rsp+9Ch] [rbp-402Ch]\n  __int128 v172; // [rsp+890h] [rbp-3838h]\n  __int64 v173[1534]; // [rsp+8A0h] [rbp-3828h]\n  char v174; // [rsp+3890h] [rbp-838h]\n\n  v4 = a4;\n  v5 = a3;\n  v6 = a2;\n  v7 = (unsigned int)a1;\n  if ( !(_WORD)++dword_697460 )\n  {\n    if ( !(unsigned int)sub_417B80(a1, a2) )\n    {\n      v15 = rtime(a1, a2);\n      a2 = time0;\n      a1 = (const char *)v15;\n      v16 = sub_417410(v15, time0);\n      v17 = dword_6974C4;\n      if ( v16 < dword_6974C4 || dword_69740C < 2 )\n        goto LABEL_2;\n      if ( dword_697360 != 1 && dword_6973D8 == 1 && !(dword_6973F8 | dword_6973D4 | dword_6973E4) )\n      {\n        v18 = 1000;\n        if ( 4 * dword_6974C4 > 999 )\n          v18 = 4 * dword_6974C4;\n        if ( dword_6974C8 > v18 )\n        {\n          dword_6973D4 = 1;\n          dword_6974C4 += sub_4159F0(a1, a2);\n          a1 = \"Extended from %d to %d, time left %d\\n\";\n          a2 = v17;\n          printf(\"Extended from %d to %d, time left %d\\n\", v17, (unsigned int)dword_6974C4, (unsigned int)dword_6974C8);\n          goto LABEL_2;\n        }\n      }\n    }\n    dword_6974BC = 1;\n    return 0;\n  }\nLABEL_2:\n  v148 = v7;\n  v145 = 0;\n  dword_694DB0[dword_697484] = dword_697484;\n  v9 = 0;\n  if ( (unsigned int)sub_402570() )\n    return v9;\n  v10 = dword_697484;\n  v149 = dword_693AF0[dword_697484];\n  dword_695BC0[v10] = 0;\n  dword_695260[v10] = 0;\n  v11 = v5;\n  if ( v10 <= 299 && v149 && (!(_DWORD)v5 || (signed int)v10 <= 2 * dword_69740C) )\n  {\n    ++dword_6973C8;\n    v11 = (unsigned int)(v5 + 1);\n  }\n  else\n  {\n    v12 = 0;\n    if ( (unsigned int)(v10 - 3) > 0x128 )\n      goto LABEL_29;\n    if ( (signed int)v10 > 2 * dword_69740C )\n      goto LABEL_29;\n    if ( dword_695258[v10] )\n      goto LABEL_29;\n    if ( !dword_6973A8 )\n      goto LABEL_29;\n    v13 = dword_68FAA0[6 * v10];\n    if ( v13 == 13 || dword_41E6D0[v13] != dword_41E6D0[dword_68FAB8[6 * (v10 - 2)]] )\n      goto LABEL_29;\n    ++dword_6973D0;\n    v11 = (unsigned int)(v5 + 1);\n    dword_695260[v10] = 1;\n  }\n  v12 = 1;\nLABEL_29:\n  if ( (signed int)v10 > 299 || (signed int)v11 <= 0 )\n  {\n    v20 = (unsigned int)(dword_697360 - 3);\n    if ( (unsigned int)v20 >= 2 )\n    {\n      dword_697388 = 1;\n      v9 = sub_40E490(v148, v6, 300 - (signed int)v10);\n      dword_697388 = 0;\n      return v9;\n    }\n    if ( dword_697360 == 4 )\n    {\n      v43 = sub_403F10();\n      v9 = v43;\n      v44 = -v43;\n      if ( v44 < 1 )\n        v44 = v9;\n      if ( v44 == 1000000 )\n      {\n        v45 = dword_697484 - 1000000;\n        if ( (signed int)v9 > 0 )\n          v45 = 1000000 - dword_697484;\n        v9 = v45;\n      }\n      return v9;\n    }\n    if ( dword_697360 == 3 )\n      return (unsigned int)sub_412600(a1, a2, v20, (unsigned int)dword_697360, v8, v11);\n  }\n  v19 = v11;\n  switch ( (unsigned int)sub_4157A0(&v158, v6, &v155, &v145, &v162) )\n  {\n    case 1u:\n      v9 = v158;\n      if ( v158 > (signed int)v148 )\n        goto LABEL_40;\n      return v9;\n    case 2u:\n      v9 = v158;\n      if ( v158 < (signed int)v6 )\n        goto LABEL_40;\n      return v9;\n    case 3u:\n      return (unsigned int)v158;\n    case 4u:\n      v155 = -1;\n      v145 = 0;\n      goto LABEL_44;\n    default:\nLABEL_40:\n      if ( v155 == 500 )\n        v155 = -1;\nLABEL_44:\n      v21 = dword_6973C4;\n      v22 = 0;\n      v150 = v6;\n      v23 = v19;\n      if ( dword_697360 != 4 )\n        goto LABEL_56;\n      v24 = sub_403F10();\n      v25 = -v24;\n      if ( -v24 < 1 )\n        v25 = v24;\n      if ( v25 == 1000000 )\n      {\n        v26 = -dword_697484;\n        if ( v24 <= 0 )\n          v26 = dword_697484;\n        return (unsigned int)(v24 + v26);\n      }\n      dword_697388 = 1;\n      sub_405540((__int64)&v172);\n      v22 = dword_697468;\n      dword_697388 = 0;\n      v23 = v19;\n      if ( dword_697468 <= 0 )\n        goto LABEL_272;\n      v151 = v21;\n      v147 = v12;\n      v152 = v19;\n      v27 = 0;\n      v28 = 0;\n      v29 = v149;\n      do\n      {\n        sub_407B10((__int64)&v172, v28);\n        v27 -= ((unsigned int)sub_404CA0((__int64)&v172, v28, v29) < 1) - 1;\n        sub_4083E0((__int64)&v172, v28++);\n      }\n      while ( v22 != v28 );\n      v30 = v27 == 0;\n      v23 = v152;\n      v6 = v150;\n      v12 = v147;\n      v21 = v151;\n      if ( v30 )\n      {\nLABEL_272:\n        dword_697388 = 0;\n        v31 = v23;\n        sub_405540((__int64)&v172);\n        v23 = v31;\n        v22 = dword_697468;\n      }\nLABEL_56:\n      if ( v4 )\n      {\n        v32 = v145;\n        goto LABEL_58;\n      }\n      if ( dword_697478 == 2 )\n      {\n        v32 = v145;\n        if ( v145 || v149 || (signed int)v23 > 6 || !v162 || (v42 = 0, dword_6974B0) )\n        {\nLABEL_58:\n          if ( v32 != 1 )\n            goto LABEL_61;\n          goto LABEL_59;\n        }\n      }\n      else\n      {\n        v42 = v145;\n        if ( !v162 )\n          goto LABEL_234;\n        v32 = v145;\n        if ( v145 | v149 | dword_6974B0 )\n          goto LABEL_58;\n      }\n      if ( (unsigned int)(dword_697360 - 3) > 1 )\n      {\nLABEL_225:\n        dword_6973C4 = 0;\n        LOBYTE(dword_6974EC) = dword_6974EC ^ 1;\n        ++dword_697484;\n        ++dword_6973E0;\n        dword_6973FC ^= 0xDEADBEEF;\n        if ( dword_697360 != 2 && dword_697360 != 4 )\n        {\n          v127 = v23;\n          v128 = (unsigned int)v23 - ((signed int)v23 > 3) - 2;\n        }\n        else\n        {\n          v127 = v23;\n          v128 = (unsigned int)(v23 - 4);\n        }\n        v143 = sub_40E9E0(-v6, 1 - v6, v128, 1LL);\n        dword_6973FC ^= 0xDEADBEEF;\n        --dword_6973E0;\n        --dword_697484;\n        LOBYTE(dword_6974EC) = dword_6974EC ^ 1;\n        dword_6973C4 = v21;\n        v9 = 0;\n        if ( dword_6974BC )\n          return v9;\n        ++dword_69733C;\n        v9 = -v143;\n        if ( -v143 >= (signed int)v6 )\n        {\n          ++dword_697338;\n          sub_4155C0(v9, v148, v6, 500LL, 0LL, (unsigned int)v127);\n          return v9;\n        }\n        v23 = v127;\n        if ( v143 >= 999901 )\n        {\n          ++dword_69734C;\n          ++dword_6973CC;\n          v145 = 1;\n          goto LABEL_60;\n        }\n        goto LABEL_61;\n      }\n      if ( dword_697360 == 4 )\n      {\n        v32 = v42;\n        if ( DWORD2(v172) != 13 )\n          goto LABEL_58;\n        goto LABEL_225;\n      }\nLABEL_234:\n      if ( v42 == 1 )\n      {\nLABEL_59:\n        ++dword_69734C;\n        ++dword_6973CC;\nLABEL_60:\n        v23 = (unsigned int)(v23 + 1);\n        v12 = 1;\n      }\nLABEL_61:\n      v33 = v149;\n      if ( dword_697360 != 4 )\n      {\n        v34 = v23;\n        sub_405540((__int64)&v172);\n        v23 = v34;\n        v22 = dword_697468;\n      }\n      v35 = 0;\n      v147 = v12;\n      v36 = v23;\n      if ( v22 > 0 && v33 && dword_6973A0 )\n      {\n        v35 = 0;\n        v37 = 0;\n        do\n        {\n          sub_407B10((__int64)&v172, v37);\n          v35 -= ((unsigned int)sub_404CA0((__int64)&v172, v37, v33) < 1) - 1;\n          sub_4083E0((__int64)&v172, v37++);\n        }\n        while ( v37 < v22 && v35 < 2 );\n      }\n      v38 = dword_697484;\n      v39 = dword_697360;\n      if ( dword_697484 > 299LL )\n      {\n        v40 = v150;\n        v41 = v36;\n      }\n      else\n      {\n        v40 = v150;\n        v41 = v36;\n        if ( v22 != 1 || dword_697360 != 3 )\n        {\n          if ( v35 == 1 && !dword_695BB8[dword_697484] )\n          {\n            ++dword_6973CC;\n            v41 = (unsigned int)(v36 + 1);\n            dword_695BC0[dword_697484] = 1;\n          }\n        }\n        else\n        {\n          ++dword_6973CC;\n          v41 = (unsigned int)(v36 + 1);\n          dword_695BC0[dword_697484] = 1;\n          v39 = 3;\n        }\n      }\n      v153 = 0;\n      v157 = -1000000;\n      if ( dword_697478 != 2 && v39 != 3 && dword_69739C )\n      {\n        v46 = dword_697334;\n        if ( v147 || (_DWORD)v41 != 3 )\n        {\n          v47 = -dword_697334;\n          v49 = v148;\n        }\n        else\n        {\n          v47 = -dword_697334;\n          v48 = dword_697334;\n          if ( !dword_6974EC )\n            v48 = -dword_697334;\n          v49 = v148;\n          v41 = (v48 + 900 > (signed int)v148) | 2u;\n        }\n        v50 = v147 == 0;\n        if ( !dword_6974EC )\n          v46 = v47;\n        v51 = v46 + 500;\n        v52 = -1000000;\n        if ( v50 && (_DWORD)v41 == 2 )\n          v52 = v46 + 500;\n        if ( v51 > v49 )\n          v52 = -1000000;\n        v53 = v50 && (_DWORD)v41 == 2 && v51 <= v49;\n        v54 = 200;\n        if ( v39 == 2 )\n          v54 = 150;\n        v55 = v46 + v54;\n        v56 = v52;\n        if ( v50 && (_DWORD)v41 == 1 )\n          v56 = v55;\n        if ( v55 > v49 )\n          v56 = v52;\n        v157 = v56;\n        v153 = v53 || v50 && (_DWORD)v41 == 1 && v55 <= v49;\n        v40 = v150;\n      }\n      if ( v22 <= 0 )\n      {\n        v121 = (unsigned int)(1000000 - v38);\n        v122 = v145;\n        v123 = v148;\n        v124 = v40;\n        goto LABEL_215;\n      }\n      v57 = v41;\n      sub_40DD60((__int64)&v172, (__int64)&v168, (__int64)&v174, v22, v155);\n      v159 = -v40;\n      v161 = v57 - 1;\n      v58 = v22 & 3;\n      v166 = (unsigned int)v22 - 1LL;\n      v59 = (unsigned int)v22 - v58;\n      v167 = v58;\n      v165 = -v58;\n      v160 = -1;\n      v146 = 1;\n      v9 = -1000000;\n      v60 = v157;\n      v151 = 1;\n      v61 = v148;\n      v152 = v57;\n      if ( v166 >= 3 )\n        goto LABEL_114;\nLABEL_145:\n      v62 = -1000000;\n      v63 = -1000000;\n      v64 = 0LL;\n      v65 = -1000000;\n      if ( !v167 )\n        goto LABEL_154;\nLABEL_146:\n      v71 = v165;\n      do\n      {\n        v72 = *(&v168 + v64);\n        if ( v72 > v65 )\n          v62 = v64;\n        if ( v72 > v65 )\n          v63 = v64;\n        if ( v72 >= v65 )\n          v65 = *(&v168 + v64);\n        ++v64;\n        ++v71;\n      }\n      while ( v71 );\n      break;\n  }\n  while ( 1 )\n  {\nLABEL_154:\n    if ( v63 < -999999 )\n    {\n      if ( v146 )\n      {\n        v125 = v150;\n        v126 = v152;\n        if ( (unsigned int)(dword_697360 - 3) >= 2 )\n        {\n          if ( (unsigned int)sub_406E60() )\n          {\n            sub_4155C0((unsigned int)(dword_697484 - 1000000), v148, v125, 0LL, v145, v126);\n            v9 = dword_697484 - 1000000;\n          }\n          else\n          {\n            v9 = 0;\n            sub_4155C0(0LL, v148, v125, 0LL, v145, v126);\n          }\n          return v9;\n        }\n        v121 = (unsigned int)(1000000 - dword_697484);\n        v122 = v145;\n        v123 = v148;\n        v124 = v150;\n        v41 = (unsigned int)v152;\nLABEL_215:\n        sub_4155C0(v121, v123, v124, 0LL, v122, v41);\n        return (unsigned int)(1000000 - dword_697484);\n      }\n      v9 = 0;\n      v133 = v150;\n      if ( dword_6973E0 > 100 )\n        return v9;\n      v134 = 500LL;\n      if ( v160 != -1 )\n        v134 = v160;\n      v135 = v148;\n      if ( v60 <= (signed int)v148 )\n      {\n        if ( v153 )\n          return (unsigned int)v60;\n        v136 = v145;\n      }\n      else\n      {\n        v136 = v145;\n        if ( v153 )\n        {\n          v135 = 4293967296LL;\n          v133 = 4293967296LL;\n        }\n      }\n      sub_4155C0((unsigned int)v60, v135, v133, v134, v136, v152);\n      return (unsigned int)v60;\n    }\n    v147 = v61;\n    *(&v168 + v63) = -1000000;\n    sub_407B10((__int64)&v172, v62);\n    v73 = dword_697484 - 1;\n    dword_692990[dword_69743C + dword_697484 - 1] = dword_6973FC;\n    v73 *= 8LL;\n    v74 = 3LL * v62;\n    *(__int64 *)((char *)&qword_68FAC0 + 3 * v73) = v173[3 * v62];\n    *(_OWORD *)((char *)&unk_68FAB0 + 3 * v73) = *(__int128 *)((char *)&v172 + 24 * v62);\n    v75 = sub_404CA0((__int64)&v172, v62, v149);\n    v156 = 3LL * v62;\n    if ( !v75 )\n    {\n      v85 = 0;\n      v82 = v152;\n      goto LABEL_197;\n    }\n    v76 = sub_406EB0((__int64)&v172, v62);\n    dword_693AF0[dword_697484] = v76;\n    if ( v76 )\n    {\n      v77 = v152;\n      v78 = v147;\n      v79 = 0;\n    }\n    else\n    {\n      v77 = v152;\n      v78 = v147;\n      v79 = 0;\n      if ( (signed int)v152 <= 2 && ((dword_697360 | 1) == 3 || dword_697360 == 4) )\n      {\n        v96 = *((signed int *)&v172 + 6 * v62 + 1);\n        v97 = dword_696070[v96];\n        if ( v97 == 2 )\n        {\n          if ( dword_41AB20[v96] <= 3 )\n            goto LABEL_213;\n        }\n        else if ( v97 == 1 && dword_41AB20[v96] > 5 )\n        {\nLABEL_213:\n          v79 = 1;\n          goto LABEL_158;\n        }\n      }\n    }\nLABEL_158:\n    v80 = v149 | *((_DWORD *)&v172 + 6 * v62);\n    if ( !dword_6973A4 || (signed int)v77 < 2 || dword_6974B0 | v76 | v80 )\n    {\n      if ( (_DWORD)v77 == 1 && !v80 && dword_697394 )\n      {\n        v146 = v79;\n        v154 = v9;\n        v86 = (int *)((char *)&v172 + 24 * v62 + 4);\n        v87 = *((_DWORD *)&v172 + 6 * v62 + 1);\n        if ( dword_6974EC )\n        {\n          v88 = sub_400FA0(v87, 1);\n          v89 = *v86;\n          v90 = 0;\n        }\n        else\n        {\n          v88 = sub_400FA0(v87, 0);\n          v89 = *v86;\n          v90 = 1;\n        }\n        v98 = sub_400FA0(v89, v90);\n        v100 = __OFSUB__(v88, v98);\n        v30 = v88 == v98;\n        v99 = v88 - v98 < 0;\n        v77 = v152;\n        v9 = v154;\n        v78 = v147;\n        v74 = v156;\n        v79 = v146;\n        if ( !((unsigned __int8)(v99 ^ v100) | v30) )\n        {\n          ++dword_6973BC;\nLABEL_196:\n          v82 = v77;\n          ++dword_6974A0;\n          v146 = 0;\n          v85 = 0;\n          goto LABEL_197;\n        }\n      }\n    }\n    else\n    {\n      ++dword_69749C;\n      --v79;\n    }\n    if ( v153 && !v76 )\n    {\n      v81 = -*((_DWORD *)&xmmword_422610 + *((signed int *)&v172 + 2 * v74 + 2));\n      if ( v81 < 1 )\n        v81 = *((_DWORD *)&xmmword_422610 + *((signed int *)&v172 + 2 * v74 + 2));\n      if ( v157 + v81 * (2 - ((dword_697360 == 2) | (unsigned __int8)(dword_697360 == 4))) <= v78\n        && !*((_DWORD *)&v172 + 2 * v74 + 3) )\n      {\n        goto LABEL_196;\n      }\n    }\n    v82 = v77;\n    v83 = -v78;\n    if ( v151 == 1 )\n    {\n      v146 = 0;\n      v84 = sub_40E9E0(v159, v83, (unsigned int)(v161 + v79), 0LL);\n      ++dword_69732C;\n      v9 = -v84;\n      LOBYTE(v85) = 1;\n    }\n    else\n    {\n      v91 = (unsigned int)(v161 + v79);\n      v92 = v91;\n      v93 = sub_40E9E0((unsigned int)~v78, v83, v91, 0LL);\n      ++dword_697344;\n      v94 = -v93;\n      LOBYTE(v85) = 1;\n      if ( v94 == -50000 )\n      {\n        v146 = 0;\n        v9 = -50000;\n      }\n      else if ( v60 >= v94 || dword_6974BC )\n      {\n        v146 = 0;\n        v9 = v94;\n      }\n      else if ( v147 >= v94 || v94 >= (signed int)v150 )\n      {\n        v146 = 0;\n        v60 = v94;\n        v9 = v94;\n      }\n      else\n      {\n        v146 = 0;\n        v95 = sub_40E9E0(v159, v83, v92, 0LL);\n        LOBYTE(v85) = 1;\n        ++dword_697348;\n        v9 = -v95;\n        if ( v60 < -v95 )\n          v60 = -v95;\n      }\n    }\nLABEL_197:\n    v101 = v60;\n    if ( (signed int)v9 >= v60 )\n      v60 = v9;\n    if ( !(_BYTE)v85 )\n      v60 = v101;\n    v102 = v9;\n    v103 = v85;\n    sub_4083E0((__int64)&v172, v62);\n    if ( dword_6974BC )\n      return 0;\n    v61 = v147;\n    v104 = v103 & (v102 > v147);\n    v105 = v103;\n    v9 = v102;\n    if ( v104 != 1 )\n      goto LABEL_142;\n    v106 = v156;\n    v107 = (char *)&v172 + 8 * v156;\n    if ( (signed int)v9 >= (signed int)v150 )\n      break;\n    v154 = v9;\n    v108 = dword_697484;\n    v109 = 3LL * dword_697484;\n    v110 = 7200LL * dword_697484;\n    qword_423060[v109 + v110 / 8] = *((_QWORD *)v107 + 2);\n    *(__int128 *)((char *)&xmmword_423050 + 8 * v109 + v110) = *(_OWORD *)v107;\n    v111 = v108 + 1;\n    v112 = dword_694DB4[v108];\n    if ( (signed int)v108 + 1 < v112 )\n    {\n      v147 = v105;\n      v113 = v108 + 1;\n      if ( ((_BYTE)v112 - (_BYTE)v111) & 3 )\n      {\n        v114 = 7224 * v111;\n        v115 = v110 + 24 * v111;\n        v116 = -(signed __int64)(((_BYTE)v112 - (_BYTE)v111) & 3);\n        v117 = &xmmword_423050;\n        v113 = v108 + 1;\n        do\n        {\n          *(_QWORD *)((char *)v117 + v115 + 16) = *(_QWORD *)((char *)v117 + v114 + 16);\n          *(__int128 *)((char *)v117 + v115) = *(__int128 *)((char *)v117 + v114);\n          ++v113;\n          v117 = (__int128 *)((char *)v117 + 24);\n          ++v116;\n        }\n        while ( v116 );\n      }\n      LOBYTE(v105) = v147;\n      if ( (unsigned __int64)(v112 - 1LL - v111) >= 3 )\n      {\n        v118 = 7200 * v111 + 24 * v113 + 4337744;\n        v119 = v110 + 24 * v113 + 4337744;\n        v120 = 0LL;\n        do\n        {\n          *(_QWORD *)(v119 + v120 + 16) = *(_QWORD *)(v118 + v120 + 16);\n          *(_OWORD *)(v119 + v120) = *(_OWORD *)(v118 + v120);\n          *(_QWORD *)(v119 + v120 + 40) = *(_QWORD *)(v118 + v120 + 40);\n          *(_OWORD *)(v119 + v120 + 24) = *(_OWORD *)(v118 + v120 + 24);\n          *(_OWORD *)(v119 + v120 + 48) = *(_OWORD *)(v118 + v120 + 48);\n          *(_QWORD *)(v119 + v120 + 64) = *(_QWORD *)(v118 + v120 + 64);\n          *(_QWORD *)(v119 + v120 + 88) = *(_QWORD *)(v118 + v120 + 88);\n          *(_OWORD *)(v119 + v120 + 72) = *(_OWORD *)(v118 + v120 + 72);\n          v113 += 4LL;\n          v120 += 96LL;\n        }\n        while ( v113 < v112 );\n      }\n    }\n    dword_694DB0[v108] = v112;\n    v160 = v62;\n    v9 = v154;\n    v61 = v154;\nLABEL_142:\n    v70 = v151;\n    if ( (_BYTE)v105 )\n      v70 = 0;\n    v151 = v70;\n    if ( v166 < 3 )\n      goto LABEL_145;\nLABEL_114:\n    v62 = -1000000;\n    v63 = -1000000;\n    v64 = 0LL;\n    v65 = -1000000;\n    do\n    {\n      v66 = *(&v168 + v64);\n      v67 = *(&v169 + v64);\n      if ( v66 > v65 )\n        v62 = v64;\n      if ( v66 > v65 )\n        v63 = v64;\n      if ( v66 >= v65 )\n        v65 = *(&v168 + v64);\n      if ( v67 > v65 )\n        v62 = v64 + 1;\n      if ( v67 > v65 )\n        v63 = v64 + 1;\n      if ( v67 >= v65 )\n        v65 = *(&v169 + v64);\n      v68 = *(&v170 + v64);\n      if ( v68 > v65 )\n        v62 = v64 + 2;\n      if ( v68 > v65 )\n        v63 = v64 + 2;\n      if ( v68 >= v65 )\n        v65 = *(&v170 + v64);\n      v69 = v171[v64];\n      if ( v69 > v65 )\n        v62 = v64 + 3;\n      if ( v69 > v65 )\n        v63 = v64 + 3;\n      if ( v69 >= v65 )\n        v65 = v171[v64];\n      v64 += 4LL;\n    }\n    while ( v59 != v64 );\n    if ( v167 )\n      goto LABEL_146;\n  }\n  v129 = *((signed int *)&v172 + 2 * v156);\n  v130 = *((signed int *)&v172 + 2 * v156 + 1);\n  ++dword_6469D0[144 * v129 + v130];\n  v131 = v148;\n  if ( *((_DWORD *)&v172 + 2 * v106 + 2) != 13 )\n    goto LABEL_261;\n  v132 = dword_697484;\n  if ( (_DWORD)v129 == *((_DWORD *)&xmmword_68A650 + 6 * dword_697484)\n    && (_DWORD)v130 == *((_DWORD *)&xmmword_68A650 + 6 * dword_697484 + 1) )\n  {\n    v106 = v156;\n    if ( *((_DWORD *)&v172 + 2 * v156 + 3) == *((_DWORD *)&xmmword_68A650 + 6 * dword_697484 + 3) )\n    {\n      ++dword_693FA0[dword_697484];\n      if ( v151 != 1 )\n        goto LABEL_263;\nLABEL_262:\n      ++dword_697328;\n      goto LABEL_263;\n    }\n  }\n  if ( (_DWORD)v129 != *((_DWORD *)&xmmword_68C270 + 6 * dword_697484)\n    || (_DWORD)v130 != *((_DWORD *)&xmmword_68C270 + 6 * dword_697484 + 1)\n    || (v106 = v156, *((_DWORD *)&v172 + 2 * v156 + 3) != *((_DWORD *)&xmmword_68C270 + 6 * dword_697484 + 3)) )\n  {\n    if ( (_DWORD)v129 != *((_DWORD *)&xmmword_68DE90 + 6 * dword_697484)\n      || (_DWORD)v130 != *((_DWORD *)&xmmword_68DE90 + 6 * dword_697484 + 1)\n      || *((_DWORD *)&v172 + 2 * v106 + 3) != *((_DWORD *)&xmmword_68DE90 + 6 * dword_697484 + 3) )\n    {\n      dword_694900[dword_697484] = 1;\n      v144 = 8 * v132;\n      qword_68DEA0[(unsigned __int64)(3 * v144) / 8] = *((_QWORD *)v107 + 2);\n      *(__int128 *)((char *)&xmmword_68DE90 + 3 * v144) = *(_OWORD *)v107;\n    }\n    else\n    {\n      v140 = dword_694900[dword_697484];\n      dword_694900[dword_697484] = v140 + 1;\n      v141 = dword_694450[v132];\n      if ( v140 >= v141 )\n      {\n        v142 = 8 * v132;\n        v164 = qword_68C280[3 * v132];\n        v163 = *(__int128 *)((char *)&xmmword_68C270 + 24 * v132);\n        qword_68C280[(unsigned __int64)(3 * v142) / 8] = qword_68DEA0[3 * v132];\n        *(__int128 *)((char *)&xmmword_68C270 + 3 * v142) = *(__int128 *)((char *)&xmmword_68DE90 + 24 * v132);\n        *(__int128 *)((char *)&xmmword_68DE90 + 3 * v142) = v163;\n        qword_68DEA0[(unsigned __int64)(3 * v142) / 8] = v164;\n        dword_694450[v132] = v140 + 1;\n        dword_694900[v132] = v141;\n        if ( v151 == 1 )\n          goto LABEL_262;\n        goto LABEL_263;\n      }\n    }\nLABEL_261:\n    if ( v151 != 1 )\n      goto LABEL_263;\n    goto LABEL_262;\n  }\n  v137 = dword_694450[dword_697484];\n  dword_694450[dword_697484] = v137 + 1;\n  v138 = dword_693FA0[v132];\n  if ( v137 < v138 )\n    goto LABEL_261;\n  v139 = 8 * v132;\n  v164 = qword_68A660[3 * v132];\n  v163 = *(__int128 *)((char *)&xmmword_68A650 + 24 * v132);\n  qword_68A660[(unsigned __int64)(3 * v139) / 8] = qword_68C280[3 * v132];\n  *(__int128 *)((char *)&xmmword_68A650 + 3 * v139) = *(__int128 *)((char *)&xmmword_68C270 + 24 * v132);\n  *(__int128 *)((char *)&xmmword_68C270 + 3 * v139) = v163;\n  qword_68C280[(unsigned __int64)(3 * v139) / 8] = v164;\n  dword_693FA0[v132] = v137 + 1;\n  dword_694450[v132] = v138;\n  if ( v151 == 1 )\n    goto LABEL_262;\nLABEL_263:\n  ++dword_697324;\n  sub_4155C0(v9, v131, v150, (unsigned int)v62, v145, v82);\n  return v9;\n}\n", 
            "funcStartAddr": "0x40e9e0L", 
            "funcEndAddr": "0x40fcf8L", 
            "funcName": "sub_40E9E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40FD00(__int64 a1, int a2, signed int a3, int a4)\n{\n  int v4; // er13\n  signed int v5; // ebx\n  __int64 v6; // r12\n  __int128 v7; // xmm0\n  __int64 v8; // rax\n  __int64 v9; // rax\n  unsigned int v10; // er14\n  int v11; // ebx\n  int v12; // ebx\n  __int64 v13; // r12\n  signed int v14; // eax\n  int v15; // er8\n  unsigned int v16; // ecx\n  signed int v17; // ebp\n  signed int v18; // edx\n  __int64 v19; // rsi\n  int v20; // eax\n  int v21; // ebx\n  int v22; // er13\n  __int64 v23; // r14\n  __int64 v24; // rdx\n  char *v25; // rbx\n  __int64 v26; // ST10_8\n  int v27; // eax\n  __int64 v28; // rcx\n  signed int v29; // ebx\n  unsigned int v30; // ebp\n  int v31; // eax\n  char *v32; // rdx\n  signed __int64 v33; // rcx\n  unsigned __int64 v34; // r8\n  signed __int64 v35; // r11\n  signed __int64 v36; // rax\n  unsigned __int64 v37; // r10\n  signed int v38; // er9\n  signed __int64 v39; // rsi\n  signed __int64 v40; // rbp\n  __int128 *v41; // rax\n  signed __int64 v42; // rdi\n  signed int v43; // ebp\n  signed __int64 v44; // rsi\n  __int64 v45; // rdx\n  __int64 v46; // rcx\n  bool v47; // dl\n  int v48; // ecx\n  int v49; // ebp\n  __int64 v50; // rdx\n  __int64 v51; // r10\n  signed __int64 v52; // rcx\n  signed __int64 v53; // rsi\n  char *v54; // rbx\n  int v55; // ebp\n  int v56; // er8\n  int v57; // eax\n  signed __int64 v58; // rbp\n  __int64 v59; // ST90_8\n  __int128 v60; // ST80_16\n  int v61; // ebp\n  int v62; // er8\n  int v63; // eax\n  signed __int64 v64; // rbp\n  __int64 v65; // ST90_8\n  __int128 v66; // ST80_16\n  signed __int64 v67; // rax\n  signed __int64 v68; // rdx\n  unsigned __int64 v69; // r11\n  __int64 v70; // r8\n  signed __int64 v71; // r9\n  signed __int64 v72; // r13\n  signed __int64 v73; // rax\n  __int128 *v74; // rbp\n  __int64 v75; // rbp\n  signed __int64 v76; // r11\n  signed __int64 v77; // rax\n  signed __int64 v78; // rcx\n  unsigned __int64 v79; // r10\n  char *v80; // rdx\n  signed int v81; // er9\n  signed __int64 v82; // rbp\n  __int128 *v83; // rax\n  signed __int64 v84; // rdi\n  int v85; // ebp\n  signed __int64 v86; // rbp\n  signed __int64 v87; // rsi\n  signed __int64 v88; // rbp\n  signed int v89; // ecx\n  int v90; // eax\n  __int64 v91; // rax\n  unsigned int v93; // [rsp+20h] [rbp-40B8h]\n  signed int v94; // [rsp+20h] [rbp-40B8h]\n  unsigned int v95; // [rsp+20h] [rbp-40B8h]\n  int v96; // [rsp+24h] [rbp-40B4h]\n  signed int v97; // [rsp+24h] [rbp-40B4h]\n  signed int v98; // [rsp+28h] [rbp-40B0h]\n  signed int v99; // [rsp+2Ch] [rbp-40ACh]\n  char *v100; // [rsp+30h] [rbp-40A8h]\n  int v101; // [rsp+3Ch] [rbp-409Ch]\n  unsigned int v102; // [rsp+40h] [rbp-4098h]\n  signed int v103; // [rsp+44h] [rbp-4094h]\n  unsigned int v104; // [rsp+48h] [rbp-4090h]\n  int v105; // [rsp+4Ch] [rbp-408Ch]\n  __int128 v106; // [rsp+50h] [rbp-4088h]\n  __int64 v107; // [rsp+60h] [rbp-4078h]\n  __int64 v108; // [rsp+70h] [rbp-4068h]\n  int v109; // [rsp+7Ch] [rbp-405Ch]\n  int v110[512]; // [rsp+A0h] [rbp-4038h]\n  __int128 v111; // [rsp+8A0h] [rbp-3838h]\n  __int64 v112[1534]; // [rsp+8B0h] [rbp-3828h]\n  char v113; // [rsp+38A0h] [rbp-838h]\n\n  v4 = a4;\n  v5 = a3;\n  v6 = a1;\n  v107 = qword_422678;\n  v106 = xmmword_422668;\n  dword_697484 = 1;\n  dword_6974B0 = 1;\n  dword_6974BC = 0;\n  dword_6974C0 = 0;\n  dword_6973B8 = -1000000;\n  ++dword_697460;\n  if ( (unsigned int)sub_402570() )\n  {\n    dword_6974A4 = 5;\nLABEL_3:\n    dword_6973B8 = 0;\n    *(_QWORD *)(v6 + 16) = qword_422678;\n    dword_694DB0[dword_697484] = 0;\n    v7 = xmmword_422668;\n    goto LABEL_138;\n  }\n  v96 = a2;\n  v8 = dword_697484;\n  dword_694DB0[v8] = v8;\n  dword_692990[(signed int)v8 + dword_69743C - 1] = dword_6973FC;\n  v101 = sub_406E60();\n  if ( v101 )\n  {\n    ++dword_6973C8;\n    ++v4;\n  }\n  v9 = dword_697484;\n  dword_693AF0[v9] = v101;\n  dword_695260[v9] = 0;\n  dword_695BC0[v9] = 0;\n  v99 = v5;\n  if ( dword_697360 == 4 )\n  {\n    dword_697428 = 0;\n    dword_697388 = 1;\n    sub_405540((__int64)&v111);\n    v10 = dword_697468;\n    dword_697388 = 0;\n    if ( dword_697468 > 0 )\n    {\n      v11 = 0;\n      do\n      {\n        sub_407B10((__int64)&v111, v11);\n        if ( (unsigned int)sub_404CA0((__int64)&v111, v11, v101) )\n          ++dword_697428;\n        sub_4083E0((__int64)&v111, v11++);\n      }\n      while ( v10 != v11 );\n    }\n    if ( !dword_697428 )\n    {\n      dword_697388 = 0;\n      sub_405540((__int64)&v111);\n      v10 = dword_697468;\n      if ( dword_697468 > 0 )\n      {\n        v12 = 0;\n        do\n        {\n          sub_407B10((__int64)&v111, v12);\n          if ( (unsigned int)sub_404CA0((__int64)&v111, v12, v101) )\n            ++dword_697428;\n          sub_4083E0((__int64)&v111, v12++);\n        }\n        while ( v10 != v12 );\n      }\n    }\n  }\n  else\n  {\n    sub_405540((__int64)&v111);\n    v10 = dword_697468;\n  }\n  dword_697448 = dword_697428;\n  sub_40DD60((__int64)&v111, (__int64)v110, (__int64)&v113, v10, 0xFFFFFFFF);\n  if ( (signed int)v10 <= 0 )\n  {\n    v89 = 1;\nLABEL_125:\n    if ( !v89 || dword_697418 )\n    {\n      if ( !dword_697418 && dword_6973E0 >= 101 )\n      {\n        dword_6974A4 = 4;\n        goto LABEL_3;\n      }\n    }\n    else\n    {\n      if ( (unsigned int)(dword_697360 - 3) < 2 )\n      {\n        v90 = (dword_6974EC == 1) | 2;\n      }\n      else if ( (unsigned int)sub_406E60() )\n      {\n        v90 = 3 - (dword_6974EC == 1);\n      }\n      else\n      {\n        v90 = 1;\n      }\n      dword_6974A4 = v90;\n    }\n    v91 = v107;\n    goto LABEL_137;\n  }\n  v108 = a1;\n  v13 = v10;\n  v104 = -v99;\n  v102 = v4 - 1;\n  LODWORD(a1) = -1000000;\n  v103 = 1;\n  v105 = 0;\n  v98 = 1;\n  while ( 1 )\n  {\n    v15 = dword_697364;\n    v16 = dword_697360 - 3;\n    v17 = -1000000;\n    v18 = -1000000;\n    v19 = 0LL;\n    v20 = -1000000;\n    do\n    {\n      do\n      {\n        v21 = v110[v19];\n        v22 = v17;\n        if ( v21 > v20 )\n          v22 = v19;\n        if ( v21 > v20 )\n          v18 = v19;\n        if ( v21 >= v20 )\n          v20 = v110[v19];\n        ++v19;\n        v17 = v22;\n      }\n      while ( v19 != v13 );\n      if ( v18 < -999999 )\n      {\n        v6 = v108;\n        v89 = v98;\n        goto LABEL_125;\n      }\n      v110[v18] = -1000000;\n      v23 = v22;\n      if ( v15 )\n        break;\n      if ( !*((_DWORD *)&xmmword_695710 + v22) )\n        break;\n      v17 = -1000000;\n      v18 = -1000000;\n      v19 = 0LL;\n      v20 = -1000000;\n    }\n    while ( v16 < 2 );\n    v93 = a1;\n    sub_407B10((__int64)&v111, v22);\n    v24 = dword_697484 - 1;\n    dword_692990[dword_69743C + dword_697484 - 1] = dword_6973FC;\n    v24 *= 8LL;\n    v25 = (char *)&v111 + 24 * v22;\n    *(__int64 *)((char *)&qword_68FAC0 + 3 * v24) = v112[3 * v22];\n    *(_OWORD *)((char *)&unk_68FAB0 + 3 * v24) = *(__int128 *)((char *)&v111 + 24 * v22);\n    v109 = dword_697460;\n    v100 = (char *)&v111 + 24 * v22;\n    if ( !(unsigned int)sub_404CA0((__int64)&v111, v22, v101) )\n    {\n      v43 = 0;\n      v29 = v96;\n      goto LABEL_67;\n    }\n    sub_4083E0((__int64)&v111, v22);\n    dword_697440 = dword_697448 - ++v105;\n    v26 = *((_QWORD *)v25 + 2);\n    sub_415C90(byte_6972B0, *(_OWORD *)v25, *(_OWORD *)v25 >> 64);\n    sub_407B10((__int64)&v111, v22);\n    v27 = sub_406EB0((__int64)&v111, v22);\n    v28 = dword_697484;\n    dword_693AF0[v28] = v27;\n    dword_695260[v28] = 0;\n    dword_695BC0[v28] = 0;\n    v29 = v96;\n    v30 = -v96;\n    if ( v103 != 1 && dword_69740C > 1 )\n    {\n      v31 = -sub_40E9E0((const char *)(unsigned int)~v96, v30, v102, 0);\n      if ( v96 >= v31 )\n      {\n        v34 = (unsigned int)dword_6974BC;\n      }\n      else\n      {\n        v34 = (unsigned int)dword_6974BC;\n        if ( v31 < v99 && !dword_6974BC )\n        {\n          sub_417430((unsigned int)v31, v100);\n          v31 = -sub_40E9E0((const char *)v104, v30, v102, 0);\n          v34 = (unsigned int)dword_6974BC;\n          if ( v96 < v31 && !dword_6974BC )\n          {\n            dword_6973D8 = 0;\n            dword_6973B8 = v31;\n            dword_69736C = v22;\n            v32 = (char *)&v111 + 24 * v22;\n            v33 = *((_QWORD *)v100 + 2);\n            v107 = *((_QWORD *)v100 + 2);\n            v106 = *(_OWORD *)v100;\n            v34 = 0LL;\n            if ( v31 < v99 && dword_69740C >= 2 )\n            {\n              v94 = v31;\n              v35 = dword_697484;\n              v36 = dword_697484 - 1LL;\n              v33 = 3 * v36;\n              v37 = 7200 * v36;\n              v32 = (char *)&v111 + 24 * v22;\n              qword_423060[v33 + v37 / 8] = *((_QWORD *)v100 + 2);\n              *(__int128 *)((char *)&xmmword_423050 + 8 * v33 + v37) = *(_OWORD *)v100;\n              v38 = dword_694DB0[v35];\n              if ( (signed int)v35 < v38 )\n              {\n                v32 = (char *)v38;\n                if ( ((_BYTE)v38 - (_BYTE)v35) & 3 )\n                {\n                  v33 = 7224 * v35;\n                  v39 = v37 + 24 * v35;\n                  v40 = -(signed __int64)(((_BYTE)v38 - (_BYTE)v35) & 3);\n                  v41 = &xmmword_423050;\n                  v42 = v35;\n                  do\n                  {\n                    *(_QWORD *)((char *)v41 + v39 + 16) = *(_QWORD *)((char *)v41 + v33 + 16);\n                    *(__int128 *)((char *)v41 + v39) = *(__int128 *)((char *)v41 + v33);\n                    ++v42;\n                    v41 = (__int128 *)((char *)v41 + 24);\n                    ++v40;\n                  }\n                  while ( v40 );\n                }\n                else\n                {\n                  v42 = v35;\n                }\n                v29 = v96;\n                v34 = 0LL;\n                if ( (unsigned __int64)(v38 - 1LL - v35) >= 3 )\n                {\n                  v86 = 7200 * v35 + 24 * v42 + 4337744;\n                  v87 = v37 + 24 * v42 + 4337744;\n                  v33 = 0LL;\n                  do\n                  {\n                    *(_QWORD *)(v87 + v33 + 16) = *(_QWORD *)(v86 + v33 + 16);\n                    *(_OWORD *)(v87 + v33) = *(_OWORD *)(v86 + v33);\n                    *(_QWORD *)(v87 + v33 + 40) = *(_QWORD *)(v86 + v33 + 40);\n                    *(_OWORD *)(v87 + v33 + 24) = *(_OWORD *)(v86 + v33 + 24);\n                    *(_OWORD *)(v87 + v33 + 48) = *(_OWORD *)(v86 + v33 + 48);\n                    *(_QWORD *)(v87 + v33 + 64) = *(_QWORD *)(v86 + v33 + 64);\n                    *(_QWORD *)(v87 + v33 + 88) = *(_QWORD *)(v86 + v33 + 88);\n                    *(_OWORD *)(v87 + v33 + 72) = *(_OWORD *)(v86 + v33 + 72);\n                    v42 += 4LL;\n                    v33 += 96LL;\n                  }\n                  while ( v42 < v38 );\n                }\n              }\n              dword_694DAC[v35] = v38;\n              v31 = v94;\n              if ( v94 < v99 )\n                goto LABEL_59;\n              goto LABEL_57;\n            }\n          }\n        }\n      }\n      if ( v31 >= v99 )\n      {\nLABEL_57:\n        if ( !(_DWORD)v34 )\n        {\n          v49 = v31;\n          sub_417540((unsigned int)v31, v100, v32, v33, v34);\n          v31 = v49;\n          LODWORD(v34) = dword_6974BC;\n        }\n      }\nLABEL_59:\n      v48 = dword_6973B8;\n      v47 = (_DWORD)v34 != 0;\n      if ( v31 > dword_6973B8 && !(_DWORD)v34 )\n      {\n        dword_6973B8 = v31;\n        dword_69736C = v22;\n        v107 = *((_QWORD *)v100 + 2);\n        v106 = *(_OWORD *)v100;\n        v48 = v31;\n      }\n      goto LABEL_62;\n    }\n    v44 = v30;\n    v31 = -sub_40E9E0((const char *)v104, v30, v102, 0);\n    if ( !dword_6974BC )\n    {\n      LOBYTE(v45) = dword_697490 != 0;\n      LOBYTE(v46) = dword_697490 != 0 || dword_6974F8 == 0;\n      v34 = 0LL;\n      if ( (_BYTE)v46 != 1 || dword_69740C < 2 )\n        goto LABEL_59;\n      if ( v31 >= v99 )\n      {\n        v85 = v31;\n        sub_417540((unsigned int)v31, v100, v45, v46, 0LL);\n      }\n      else\n      {\n        if ( v96 < v31 )\n        {\n          v95 = v31;\n          v76 = dword_697484;\n          v77 = dword_697484 - 1LL;\n          v78 = 3 * v77;\n          v79 = 7200 * v77;\n          v80 = (char *)&v111 + 24 * v22;\n          qword_423060[v78 + v79 / 8] = *((_QWORD *)v100 + 2);\n          *(__int128 *)((char *)&xmmword_423050 + 8 * v78 + v79) = *(_OWORD *)v100;\n          v81 = dword_694DB0[v76];\n          if ( (signed int)v76 < v81 )\n          {\n            v80 = (char *)v81;\n            v34 = v81 - 1LL - v76;\n            if ( ((_BYTE)v81 - (_BYTE)v76) & 3 )\n            {\n              v78 = 7224 * v76;\n              v44 = v79 + 24 * v76;\n              v82 = -(signed __int64)(((_BYTE)v81 - (_BYTE)v76) & 3);\n              v83 = &xmmword_423050;\n              v84 = v76;\n              do\n              {\n                *(_QWORD *)((char *)v83 + v44 + 16) = *(_QWORD *)((char *)v83 + v78 + 16);\n                *(__int128 *)((char *)v83 + v44) = *(__int128 *)((char *)v83 + v78);\n                ++v84;\n                v83 = (__int128 *)((char *)v83 + 24);\n                ++v82;\n              }\n              while ( v82 );\n            }\n            else\n            {\n              v84 = v76;\n            }\n            v29 = v96;\n            if ( v34 >= 3 )\n            {\n              v88 = 7200 * v76 + 24 * v84 + 4337744;\n              v44 = v79 + 24 * v84 + 4337744;\n              v78 = 0LL;\n              do\n              {\n                *(_QWORD *)(v44 + v78 + 16) = *(_QWORD *)(v88 + v78 + 16);\n                *(_OWORD *)(v44 + v78) = *(_OWORD *)(v88 + v78);\n                *(_QWORD *)(v44 + v78 + 40) = *(_QWORD *)(v88 + v78 + 40);\n                *(_OWORD *)(v44 + v78 + 24) = *(_OWORD *)(v88 + v78 + 24);\n                *(_OWORD *)(v44 + v78 + 48) = *(_OWORD *)(v88 + v78 + 48);\n                *(_QWORD *)(v44 + v78 + 64) = *(_QWORD *)(v88 + v78 + 64);\n                *(_QWORD *)(v44 + v78 + 88) = *(_QWORD *)(v88 + v78 + 88);\n                *(_OWORD *)(v44 + v78 + 72) = *(_OWORD *)(v88 + v78 + 72);\n                v84 += 4LL;\n                v78 += 96LL;\n              }\n              while ( v84 < v81 );\n            }\n          }\n          dword_694DAC[v76] = v81;\n          sub_4171C0(v95, v44, v80, v78, v34);\n          v31 = v95;\n          LODWORD(v34) = 0;\n          goto LABEL_119;\n        }\n        dword_6973D8 = 1;\n        v85 = v31;\n        sub_417650((unsigned int)v31, v100, v45, v46, 0LL);\n      }\n      LODWORD(v34) = 0;\n      v31 = v85;\nLABEL_119:\n      if ( dword_6973B8 >= v31 || dword_6974BC )\n      {\n        LODWORD(v34) = dword_6974BC;\n      }\n      else\n      {\n        dword_6973B8 = v31;\n        dword_69736C = v22;\n        v107 = *((_QWORD *)v100 + 2);\n        v106 = *(_OWORD *)v100;\n      }\n      goto LABEL_59;\n    }\n    v47 = 1;\n    v48 = dword_6973B8;\nLABEL_62:\n    v43 = 1;\n    v93 = v31;\n    if ( v98 && v47 && v48 == -1000000 )\n      dword_6974C0 = 1;\n    v98 = 0;\nLABEL_67:\n    sub_4083E0((__int64)&v111, v22);\n    if ( dword_6974BC )\n      goto LABEL_139;\n    a1 = v93;\n    if ( (signed int)v93 > v29 )\n    {\n      if ( v43 )\n        break;\n    }\nLABEL_22:\n    v96 = v29;\n    v14 = v103;\n    if ( v43 )\n      v14 = 0;\n    v103 = v14;\n    dword_6932F0[v23] = dword_697460 - v109;\n  }\n  v97 = v43;\n  v50 = *((signed int *)&v111 + 6 * v22);\n  v51 = dword_697484;\n  v52 = 3LL * dword_697484;\n  if ( (_DWORD)v50 != *((_DWORD *)&xmmword_68A650 + 6 * dword_697484)\n    || (v53 = *((unsigned int *)&v111 + 6 * v22 + 1), (_DWORD)v53 != *((_DWORD *)&xmmword_68A650 + 6 * dword_697484 + 1))\n    || *((_DWORD *)&v111 + 6 * v22 + 3) != *((_DWORD *)&xmmword_68A650 + 6 * dword_697484 + 3) )\n  {\n    v54 = (char *)&v111 + 24 * v22;\n    if ( (_DWORD)v50 != *((_DWORD *)&xmmword_68C270 + 6 * dword_697484)\n      || (v53 = *((unsigned int *)&v111 + 6 * v22 + 1),\n          (_DWORD)v53 != *((_DWORD *)&xmmword_68C270 + 6 * dword_697484 + 1))\n      || *((_DWORD *)&v111 + 6 * v22 + 3) != *((_DWORD *)&xmmword_68C270 + 6 * dword_697484 + 3) )\n    {\n      v53 = *((unsigned int *)&v111 + 6 * v22 + 1);\n      if ( (_DWORD)v50 != *((_DWORD *)&xmmword_68DE90 + 6 * dword_697484)\n        || (_DWORD)v53 != *((_DWORD *)&xmmword_68DE90 + 6 * dword_697484 + 1)\n        || *((_DWORD *)&v111 + 6 * v22 + 3) != *((_DWORD *)&xmmword_68DE90 + 6 * dword_697484 + 3) )\n      {\n        v67 = 8LL * dword_697484;\n        qword_68DEA0[(unsigned __int64)(3 * v67) / 8] = *((_QWORD *)v100 + 2);\n        dword_694900[v51] = 1;\n        *(__int128 *)((char *)&xmmword_68DE90 + 3 * v67) = *(_OWORD *)v100;\n      }\n      else\n      {\n        v61 = dword_694900[dword_697484];\n        v62 = v61 + 1;\n        dword_694900[dword_697484] = v61 + 1;\n        v63 = dword_694450[v51];\n        if ( v61 >= v63 )\n        {\n          v64 = 8 * v51;\n          v65 = qword_68C280[3 * v51];\n          v66 = *(__int128 *)((char *)&xmmword_68C270 + 24 * v51);\n          qword_68C280[(unsigned __int64)(3 * v64) / 8] = qword_68DEA0[3 * v51];\n          *(__int128 *)((char *)&xmmword_68C270 + 3 * v64) = *(__int128 *)((char *)&xmmword_68DE90 + 24 * v51);\n          *(__int128 *)((char *)&xmmword_68DE90 + 3 * v64) = v66;\n          qword_68DEA0[(unsigned __int64)(3 * v64) / 8] = v65;\n          dword_694450[v51] = v62;\n          dword_694900[v51] = v63;\n        }\n      }\n    }\n    else\n    {\n      v55 = dword_694450[dword_697484];\n      v56 = v55 + 1;\n      dword_694450[dword_697484] = v55 + 1;\n      v57 = dword_693FA0[v51];\n      if ( v55 >= v57 )\n      {\n        v58 = 8 * v51;\n        v59 = qword_68A660[3 * v51];\n        v60 = *(__int128 *)((char *)&xmmword_68A650 + 24 * v51);\n        qword_68A660[(unsigned __int64)(3 * v58) / 8] = qword_68C280[3 * v51];\n        *(__int128 *)((char *)&xmmword_68A650 + 3 * v58) = *(__int128 *)((char *)&xmmword_68C270 + 24 * v51);\n        *(__int128 *)((char *)&xmmword_68C270 + 3 * v58) = v60;\n        qword_68C280[(unsigned __int64)(3 * v58) / 8] = v59;\n        dword_693FA0[v51] = v56;\n        dword_694450[v51] = v57;\n      }\n    }\n  }\n  else\n  {\n    ++dword_693FA0[dword_697484];\n    v54 = (char *)&v111 + 24 * v22;\n  }\n  v68 = 576 * v50;\n  ++*(int *)((char *)&dword_6469D0[(signed int)v53] + v68);\n  v107 = *((_QWORD *)v54 + 2);\n  v106 = *(_OWORD *)v54;\n  dword_69736C = v22;\n  dword_6973B8 = v93;\n  v69 = 7200 * v51;\n  qword_423060[v52 + v69 / 8] = *((_QWORD *)v54 + 2);\n  *(__int128 *)((char *)&xmmword_423050 + 8 * v52 + v69) = *(_OWORD *)v54;\n  v70 = (unsigned int)dword_694DB4[v51];\n  if ( (signed int)v51 + 1 < (signed int)v70 )\n  {\n    v71 = v51 + 1;\n    v68 = (signed int)v70;\n    v72 = v51 + 1;\n    v52 = ((_BYTE)v70 - ((_BYTE)v51 + 1)) & 3;\n    if ( ((_BYTE)v70 - ((_BYTE)v51 + 1)) & 3 )\n    {\n      v73 = 7224 * v71;\n      v53 = v69 + 24 * v71;\n      v52 = -v52;\n      v74 = &xmmword_423050;\n      v72 = v51 + 1;\n      do\n      {\n        *(_QWORD *)((char *)v74 + v53 + 16) = *(_QWORD *)((char *)v74 + v73 + 16);\n        *(__int128 *)((char *)v74 + v53) = *(__int128 *)((char *)v74 + v73);\n        ++v72;\n        v74 = (__int128 *)((char *)v74 + 24);\n        ++v52;\n      }\n      while ( v52 );\n    }\n    a1 = v93;\n    if ( (unsigned __int64)((signed int)v70 - 1LL - (v51 + 1)) >= 3 )\n    {\n      v52 = 7200 * v71 + 24 * v72 + 4337744;\n      v53 = v69 + 24 * v72 + 4337744;\n      v75 = 0LL;\n      do\n      {\n        *(_QWORD *)(v53 + v75 + 16) = *(_QWORD *)(v52 + v75 + 16);\n        *(_OWORD *)(v53 + v75) = *(_OWORD *)(v52 + v75);\n        *(_QWORD *)(v53 + v75 + 40) = *(_QWORD *)(v52 + v75 + 40);\n        *(_OWORD *)(v53 + v75 + 24) = *(_OWORD *)(v52 + v75 + 24);\n        *(_OWORD *)(v53 + v75 + 48) = *(_OWORD *)(v52 + v75 + 48);\n        *(_QWORD *)(v53 + v75 + 64) = *(_QWORD *)(v52 + v75 + 64);\n        *(_QWORD *)(v53 + v75 + 88) = *(_QWORD *)(v52 + v75 + 88);\n        *(_OWORD *)(v53 + v75 + 72) = *(_OWORD *)(v52 + v75 + 72);\n        v72 += 4LL;\n        v75 += 96LL;\n      }\n      while ( v72 < (signed int)v70 );\n    }\n  }\n  dword_694DB0[v51] = v70;\n  if ( (signed int)a1 < v99 )\n  {\n    v29 = a1;\n    v43 = v97;\n    if ( dword_697490 )\n    {\n      v29 = a1;\n      if ( dword_69740C >= 2 )\n      {\n        sub_4171C0(a1, v53, v68, v52, v70);\n        LODWORD(a1) = v93;\n        v29 = v93;\n      }\n    }\n    goto LABEL_22;\n  }\nLABEL_139:\n  v91 = v107;\n  v6 = v108;\nLABEL_137:\n  *(_QWORD *)(v6 + 16) = v91;\n  v7 = v106;\nLABEL_138:\n  *(_OWORD *)v6 = v7;\n  return v6;\n}\n", 
            "funcStartAddr": "0x40fd00L", 
            "funcEndAddr": "0x410b45L", 
            "funcName": "sub_40FD00"
        }, 
        {
            "decompiledFuncCode": "__m128i *__fastcall sub_410B50(__int64 a1, __int64 a2)\n{\n  unsigned int v2; // er12\n  int v3; // er14\n  int v4; // ebx\n  const char *v5; // rdi\n  int v6; // er12\n  int v7; // er13\n  int v8; // ebp\n  signed __int64 v9; // rsi\n  int v10; // ebx\n  double v11; // xmm0_8\n  __int64 v12; // rdx\n  __int64 v13; // rcx\n  __int64 v14; // r8\n  __int64 v15; // r9\n  int v16; // ebx\n  char *v17; // rax\n  __int64 v18; // rcx\n  signed __int64 v19; // rdx\n  signed __int64 v20; // rax\n  __int64 v21; // rax\n  signed int v22; // eax\n  signed int v23; // ebp\n  int v24; // ebx\n  signed int v25; // ebp\n  int v26; // er12\n  int v27; // ebx\n  bool v28; // zf\n  __int64 v29; // rax\n  int v30; // eax\n  signed int v31; // eax\n  __m128i v32; // xmm5\n  int v33; // eax\n  const char *v34; // rdi\n  signed int v35; // eax\n  unsigned int v36; // er8\n  __m128i v37; // xmm1\n  int v38; // ecx\n  int v39; // edx\n  __int128 *v40; // rbp\n  __m128i v41; // xmm5\n  __int64 v42; // rcx\n  __m128i v43; // xmm0\n  unsigned __int64 v44; // rsi\n  __int64 v45; // rdx\n  __m128i v46; // xmm1\n  __m128i v47; // xmm0\n  __m128i v48; // xmm1\n  __m128i *v49; // rbx\n  __m128i v50; // xmm0\n  const char *v51; // rdi\n  signed int v53; // [rsp+20h] [rbp-30C8h]\n  unsigned int v54; // [rsp+24h] [rbp-30C4h]\n  __m128i *v55; // [rsp+28h] [rbp-30C0h]\n  int v56[4]; // [rsp+30h] [rbp-30B8h]\n  __int64 v57; // [rsp+40h] [rbp-30A8h]\n  int v58; // [rsp+50h] [rbp-3098h]\n  unsigned int v59; // [rsp+54h] [rbp-3094h]\n  __int128 v60; // [rsp+58h] [rbp-3090h]\n  __int64 v61; // [rsp+68h] [rbp-3080h]\n  double v62; // [rsp+70h] [rbp-3078h]\n  __int64 v63; // [rsp+78h] [rbp-3070h]\n  __int128 v64; // [rsp+80h] [rbp-3068h]\n  __int128 v65; // [rsp+90h] [rbp-3058h]\n  __int64 v66; // [rsp+A0h] [rbp-3048h]\n  char s; // [rsp+A8h] [rbp-3040h]\n  __int128 v68; // [rsp+B0h] [rbp-3038h]\n  __int64 v69[1541]; // [rsp+C0h] [rbp-3028h]\n\n  v55 = (__m128i *)a1;\n  dword_6974E0 = 0;\n  v2 = 0;\n  v53 = 0;\n  v3 = 0;\n  v4 = 0;\nLABEL_2:\n  v62 = (float)v4 + 1.0;\n  v54 = v4;\n  v59 = v2;\n  while ( 1 )\n  {\n    dword_697460 = 0;\n    dword_697494 = 0;\n    dword_697484 = 1;\n    dword_69731C = 0;\n    dword_697318 = 0;\n    dword_697354 = 0;\n    dword_697350 = 0;\n    dword_69735C = 0;\n    dword_697338 = 0;\n    dword_69733C = 0;\n    dword_69734C = 0;\n    dword_697324 = 0;\n    dword_697328 = 0;\n    dword_697344 = 0;\n    dword_69732C = 0;\n    dword_697348 = 0;\n    dword_6973C8 = 0;\n    dword_6973D0 = 0;\n    dword_6973CC = 0;\n    dword_69749C = 0;\n    dword_6974A0 = 0;\n    dword_6973BC = 0;\n    dword_6973D4 = 0;\n    dword_6973E8 = 0;\n    dword_697434 = 200;\n    byte_6974FC = 0;\n    dword_69736C = -1;\n    if ( (unsigned int)sub_417B80(a1, a2) && qword_697414 )\n    {\nLABEL_166:\n      v49 = v55;\n      v55[1].m128i_i64[0] = qword_422678;\n      v50 = (__m128i)xmmword_422668;\n      goto LABEL_183;\n    }\n    time0 = rtime(a1, a2);\n    dword_697428 = 0;\n    dword_697388 = dword_697360 == 4;\n    v5 = (const char *)&v68;\n    sub_405540((__int64)&v68);\n    v58 = dword_697468;\n    v6 = sub_406E60();\n    if ( dword_697468 > 0 )\n    {\n      v7 = 0;\n      do\n      {\n        sub_407B10((__int64)&v68, v7);\n        if ( (unsigned int)sub_404CA0((__int64)&v68, v7, v6) )\n        {\n          ++dword_697428;\n          v3 = v7;\n        }\n        v5 = (const char *)&v68;\n        sub_4083E0((__int64)&v68, v7++);\n      }\n      while ( v7 < dword_697468 );\n    }\n    if ( dword_697360 == 4 )\n    {\n      if ( !dword_697428 )\n      {\n        dword_697388 = 0;\n        v5 = (const char *)&v68;\n        sub_405540((__int64)&v68);\n        v58 = dword_697468;\n        if ( dword_697468 > 0 )\n        {\n          v8 = 0;\n          do\n          {\n            sub_407B10((__int64)&v68, v8);\n            if ( (unsigned int)sub_404CA0((__int64)&v68, v8, v6) )\n            {\n              ++dword_697428;\n              v3 = v8;\n            }\n            v5 = (const char *)&v68;\n            sub_4083E0((__int64)&v68, v8++);\n          }\n          while ( v8 < dword_697468 );\n        }\n      }\n      if ( dword_697360 == 1 )\n        goto LABEL_21;\n    }\n    else if ( dword_697360 == 1 )\n    {\n      goto LABEL_21;\n    }\n    if ( !HIDWORD(qword_697414) && dword_697428 == 1 )\n    {\n      dword_6974B8 += 100 * dword_697410;\n      v49 = v55;\n      v55[1].m128i_i64[0] = v69[3 * v3];\n      v50 = _mm_loadu_si128((const __m128i *)((char *)&v68 + 24 * v3));\n      goto LABEL_183;\n    }\nLABEL_21:\n    sub_408B10();\n    switch ( dword_697478 )\n    {\n      case 2:\n        v5 = \"Endgame phase.\";\n        goto LABEL_29;\n      case 1:\n        v5 = \"Middlegame phase.\";\n        goto LABEL_29;\n      case 0:\n        v5 = \"Opening phase.\";\nLABEL_29:\n        puts(v5);\n        break;\n    }\n    v9 = 999999LL;\n    if ( !HIDWORD(qword_697414) )\n    {\n      v9 = (unsigned int)dword_6973E4;\n      if ( !dword_6973E4 )\n      {\n        v10 = dword_6973F8;\n        v9 = (unsigned int)sub_4159F0(v5, (unsigned int)dword_6973E4);\n        if ( v10 && (signed int)v9 >= 41 )\n          v9 = 40LL;\n        v4 = v54;\n      }\n    }\n    dword_6974C4 = v9;\n    if ( v4 )\n    {\n      v11 = (float)((float)(signed int)v9 + (float)(signed int)v9) / v62;\n      a2 = (unsigned int)(signed int)v11;\n      dword_6974C4 = (signed int)v11;\n      a1 = (__int64)\"Time for move : %d\\n\";\n      printf(\"Time for move : %d\\n\");\n    }\n    else\n    {\n      printf(\"Time for move : %d\\n\");\n      sub_415200(\"Time for move : %d\\n\", v9);\n      sub_4026C0();\n      a1 = (__int64)&xmmword_695710;\n      a2 = 0LL;\n      memset(&xmmword_695710, 0, 0x4B0uLL);\n    }\n    if ( v4 | HIDWORD(qword_697414)\n      || (v13 = (unsigned int)(dword_697360 - 3), (unsigned int)v13 > 1)\n      || dword_697360 == 3 && dword_69747C < 4 )\n    {\n      if ( !v4 )\n      {\n        qword_697290 = qword_422678;\n        xmmword_697280 = xmmword_422668;\n      }\n    }\n    else\n    {\n      dword_69748C = (signed int)((float)dword_6974C4 / 3.0);\n      sub_40C910(a1, a2);\n    }\n    if ( dword_6974A4 )\n    {\n      v13 = DWORD1(xmmword_697280);\n      if ( DWORD1(xmmword_697280) == DWORD1(xmmword_422668) )\n      {\n        v49 = v55;\n        v55[1].m128i_i64[0] = qword_697290;\n        v50 = (__m128i)xmmword_697280;\n        goto LABEL_183;\n      }\n    }\n    v16 = dword_6973E8;\n    if ( dword_6973E8 | dword_6974A4 && DWORD1(xmmword_697280) != DWORD1(xmmword_422668) && !(_DWORD)qword_697414 )\n    {\n      v57 = qword_697290;\n      *(_OWORD *)v56 = xmmword_697280;\n      goto LABEL_92;\n    }\n    v17 = (char *)&unk_4230C8;\n    v18 = 0LL;\n    do\n    {\n      v19 = -7200LL;\n      do\n      {\n        *(_QWORD *)&v17[v19 + 7096] = qword_422678;\n        *(_OWORD *)&v17[v19 + 7080] = xmmword_422668;\n        *(_QWORD *)&v17[v19 + 7120] = qword_422678;\n        *(_OWORD *)&v17[v19 + 7104] = xmmword_422668;\n        *(_QWORD *)&v17[v19 + 7144] = qword_422678;\n        *(_OWORD *)&v17[v19 + 7128] = xmmword_422668;\n        *(_QWORD *)&v17[v19 + 7168] = qword_422678;\n        *(_OWORD *)&v17[v19 + 7152] = xmmword_422668;\n        *(_QWORD *)&v17[v19 + 7192] = qword_422678;\n        *(_OWORD *)&v17[v19 + 7176] = xmmword_422668;\n        _mm_storeu_si128((__m128i *)&v17[v19 + 7200], _mm_loadu_si128((const __m128i *)&xmmword_422668));\n        *(_QWORD *)&v17[v19 + 7216] = qword_422678;\n        v19 += 144LL;\n      }\n      while ( v19 );\n      ++v18;\n      v17 += 7200;\n    }\n    while ( v18 != 300 );\n    memset(dword_6469D0, 0, 0x14400uLL);\n    memset(dword_693FA0, 0, 0x4B0uLL);\n    memset(dword_694450, 0, 0x4B0uLL);\n    memset(dword_694900, 0, 0x4B0uLL);\n    v20 = 2305843009213693052LL;\n    do\n    {\n      qword_68C280[v20] = qword_422678;\n      *(__int128 *)((char *)&xmmword_68C270 + v20 * 8) = xmmword_422668;\n      qword_68DEA0[v20] = qword_422678;\n      *(__int128 *)((char *)&xmmword_68DE90 + v20 * 8) = xmmword_422668;\n      qword_68FAC0[v20] = qword_422678;\n      *(_OWORD *)((char *)&unk_68FAB0 + v20 * 8) = xmmword_422668;\n      qword_68C298[v20] = qword_422678;\n      *(__int128 *)((char *)&xmmword_68C288 + v20 * 8) = xmmword_422668;\n      qword_68DEB8[v20] = qword_422678;\n      *(__int128 *)((char *)&xmmword_68DEA8 + v20 * 8) = xmmword_422668;\n      qword_68FAD8[v20] = qword_422678;\n      *(__int128 *)((char *)&xmmword_68FAC8 + v20 * 8) = xmmword_422668;\n      *(__int128 *)((char *)&xmmword_68C2A0 + v20 * 8) = xmmword_422668;\n      qword_68C2B0[v20] = qword_422678;\n      qword_68DED0[v20] = qword_422678;\n      *(__int128 *)((char *)&xmmword_68DEC0 + v20 * 8) = xmmword_422668;\n      *(__int128 *)((char *)&xmmword_68FAE0 + v20 * 8) = xmmword_422668;\n      qword_68FAF0[v20] = qword_422678;\n      v20 += 9LL;\n    }\n    while ( v20 * 8 );\n    v53 = 0;\n    a1 = (__int64)dword_6932F0;\n    a2 = 0LL;\n    memset(dword_6932F0, 0, 0x800uLL);\n    dword_6973B8 = 0;\n    dword_69740C = 1;\n    if ( dword_69742C > 0 )\n    {\n      v53 = 0;\n      while ( 1 )\n      {\n        v21 = rtime(a1, 0LL);\n        a2 = time0;\n        a1 = v21;\n        v22 = sub_417410(v21, time0);\n        v13 = (unsigned int)dword_69740C;\n        if ( dword_69740C >= 3 && (double)v22 > (double)dword_6974C4 * 2.1 / 3.0 )\n          goto LABEL_91;\n        dword_6973D8 = 0;\n        v23 = 100;\n        if ( dword_697360 == 2 )\n          v23 = 35;\n        v24 = v53 - v23;\n        v25 = v53 + v23;\n        a1 = (__int64)&v60;\n        a2 = (unsigned int)v24;\n        sub_40FD00((__int64)&v60, v24, v25, dword_69740C);\n        if ( dword_6974A4 )\n          goto LABEL_91;\n        v26 = dword_6973B8;\n        dword_6973D8 = dword_6973B8 <= v24;\n        if ( dword_6973B8 > v24 || dword_6974BC )\n        {\n          if ( dword_6973B8 >= v25 && !dword_6974BC )\n          {\n            v57 = v61;\n            *(_OWORD *)v56 = v60;\n            a2 = 4293967296LL;\n            a1 = (__int64)&v60;\n            sub_40FD00((__int64)&v60, -1000000, 1000000, dword_69740C);\n            if ( !dword_6974BC )\n              dword_6973D8 = 0;\n            v53 = v26;\n          }\n        }\n        else\n        {\n          a2 = 4293967296LL;\n          a1 = (__int64)&v60;\n          sub_40FD00((__int64)&v60, -1000000, 1000000, dword_69740C);\n          if ( !dword_6974BC )\n            dword_6973D8 = 0;\n        }\n        if ( (unsigned int)sub_417B80(&v60, a2) && dword_69740C >= 2 )\n        {\n          if ( HIDWORD(qword_697414) )\n            goto LABEL_166;\n          if ( !dword_6973F8 )\n          {\nLABEL_91:\n            v16 = dword_6973E8;\n            break;\n          }\n        }\n        if ( dword_6974C0 | dword_6973D8 )\n        {\nLABEL_88:\n          if ( dword_6974BC )\n            goto LABEL_91;\n          v27 = dword_69740C;\n          goto LABEL_90;\n        }\n        v53 = dword_6973B8;\n        if ( dword_6973B8 == -1000000 )\n          goto LABEL_166;\n        v57 = v61;\n        *(_OWORD *)v56 = v60;\n        a1 = (__int64)byte_696C50;\n        sub_417070(byte_696C50);\n        if ( dword_6974BC )\n        {\n          if ( dword_69740C < 2 )\n            goto LABEL_82;\n        }\n        else\n        {\n          byte_6974FC = dword_69740C;\n          if ( dword_69740C < 2 )\n          {\nLABEL_82:\n            if ( v53 < 900001 )\n              goto LABEL_88;\n            goto LABEL_83;\n          }\n        }\n        a1 = (unsigned int)dword_6973B8;\n        sub_4171C0((unsigned int)dword_6973B8, a2, v12, v13, v14);\n        if ( v53 < 900001 )\n          goto LABEL_88;\nLABEL_83:\n        v27 = dword_69740C;\n        if ( 1000000 - dword_6973B8 < dword_69740C || dword_6974BC )\n          goto LABEL_91;\nLABEL_90:\n        memset(dword_693FA0, 0, 0x4B0uLL);\n        memset(dword_694450, 0, 0x4B0uLL);\n        a1 = (__int64)dword_694900;\n        a2 = 0LL;\n        memset(dword_694900, 0, 0x4B0uLL);\n        dword_69740C = v27 + 1;\n        if ( v27 >= dword_69742C )\n          goto LABEL_91;\n      }\n    }\nLABEL_92:\n    v28 = v16 == 0;\n    v4 = v54;\n    v2 = v59;\n    if ( v28 )\n    {\n      v64 = *(_OWORD *)v56;\n      v63 = v57;\n      if ( (unsigned int)(dword_697360 - 3) <= 1 && !(HIDWORD(qword_697414) | dword_6974A4 | dword_697364) )\n      {\n        dword_6974AC = 0;\n        a1 = (__int64)&v65;\n        sub_40D960((__int64)&v65, a2, v12, v13, v14, v15, *(__int128 *)v56, v57);\n        v57 = v66;\n        _mm_store_si128((__m128i *)v56, _mm_loadu_si128((const __m128i *)&v65));\n        if ( v54 <= 9 )\n        {\n          if ( dword_6974AC )\n          {\n            v36 = v58;\n            if ( v58 > 0 )\n            {\n              v37 = _mm_load_si128((const __m128i *)&v64);\n              v38 = _mm_cvtsi128_si32(v37);\n              v39 = _mm_cvtsi128_si32(_mm_shuffle_epi32(v37, 229));\n              a2 = (unsigned int)_mm_cvtsi128_si32(_mm_shuffle_epi32(v37, 231));\n              v40 = &v68;\n              a1 = 0LL;\n              v41 = _mm_cmpeq_epi32(v32, v32);\n              while ( *(_DWORD *)v40 != v38 || *((_DWORD *)v40 + 1) != v39 || *((_DWORD *)v40 + 3) != (_DWORD)a2 )\n              {\n                ++a1;\n                v40 = (__int128 *)((char *)v40 + 24);\n                if ( a1 >= v58 )\n                  goto LABEL_152;\n              }\n              *((_DWORD *)&xmmword_695710 + a1) = 1;\nLABEL_152:\n              if ( (signed int)v36 > 0 )\n              {\n                if ( v36 < 8 )\n                {\n                  v42 = 0LL;\n                  do\nLABEL_163:\n                    v2 -= (*((_DWORD *)&xmmword_695710 + v42++) < 1u) - 1;\n                  while ( v36 != v42 );\n                  goto LABEL_164;\n                }\n                v42 = v36 & 0xFFFFFFF8;\n                v43 = _mm_cvtsi32_si128(v2);\n                a1 = v42 - 8;\n                v44 = (unsigned __int64)(v42 - 8) >> 3;\n                v45 = ((_BYTE)v44 + 1) & 1;\n                if ( v42 == 8 )\n                {\n                  v46 = 0LL;\n                  a2 = 0LL;\n                }\n                else\n                {\n                  a1 = v45 - 1 - v44;\n                  v46 = 0LL;\n                  a2 = 0LL;\n                  do\n                  {\n                    v43 = _mm_sub_epi32(\n                            _mm_sub_epi32(\n                              v43,\n                              _mm_xor_si128(\n                                _mm_cmpeq_epi32(\n                                  _mm_load_si128((const __m128i *)((char *)&xmmword_695710 + 4 * a2)),\n                                  (__m128i)0LL),\n                                v41)),\n                            _mm_xor_si128(\n                              _mm_cmpeq_epi32(\n                                _mm_load_si128((const __m128i *)((char *)&xmmword_695730 + 4 * a2)),\n                                (__m128i)0LL),\n                              v41));\n                    v46 = _mm_sub_epi32(\n                            _mm_sub_epi32(\n                              v46,\n                              _mm_xor_si128(\n                                _mm_cmpeq_epi32(\n                                  _mm_load_si128((const __m128i *)((char *)&xmmword_695720 + 4 * a2)),\n                                  (__m128i)0LL),\n                                v41)),\n                            _mm_xor_si128(\n                              _mm_cmpeq_epi32(\n                                _mm_load_si128((const __m128i *)((char *)&xmmword_695740 + 4 * a2)),\n                                (__m128i)0LL),\n                              v41));\n                    a2 += 16LL;\n                    a1 += 2LL;\n                  }\n                  while ( a1 );\n                }\n                if ( v45 )\n                {\n                  v46 = _mm_sub_epi32(\n                          v46,\n                          _mm_xor_si128(\n                            _mm_cmpeq_epi32(\n                              _mm_load_si128((const __m128i *)((char *)&xmmword_695720 + 4 * a2)),\n                              (__m128i)0LL),\n                            v41));\n                  v43 = _mm_sub_epi32(\n                          v43,\n                          _mm_xor_si128(\n                            _mm_cmpeq_epi32(\n                              _mm_load_si128((const __m128i *)((char *)&xmmword_695710 + 4 * a2)),\n                              (__m128i)0LL),\n                            v41));\n                }\n                v47 = _mm_add_epi32(v43, v46);\n                v48 = _mm_add_epi32(_mm_shuffle_epi32(v47, 78), v47);\n                v2 = _mm_cvtsi128_si32(_mm_add_epi32(_mm_shuffle_epi32(v48, 229), v48));\n                if ( v42 != v36 )\n                  goto LABEL_163;\n              }\n            }\nLABEL_164:\n            v4 = v54 + 1;\n            if ( v2 == dword_697428 )\n              dword_697364 = 1;\n            goto LABEL_2;\n          }\n        }\n      }\n    }\n    if ( dword_697364 )\n    {\n      *(_OWORD *)v56 = v64;\n      v57 = v63;\n    }\n    if ( v54 && dword_6974F8 )\n    {\n      sub_415C90(&s, v56[0], v56[2]);\n      a1 = (__int64)\"tellics whisper %d restart(s), ended up with %s\\n\";\n      a2 = v54;\n      v4 = v54;\n      printf(\"tellics whisper %d restart(s), ended up with %s\\n\", v54, &s);\n      dword_6974A4 = 0;\n    }\n    v29 = rtime(a1, a2);\n    a2 = time0;\n    v30 = sub_417410(v29, time0);\n    dword_6974C8 -= v30;\n    if ( dword_697444 && !HIDWORD(qword_697414) )\n      dword_6974B8 += dword_697410 + dword_6974C4 - v30;\n    if ( v53 != 999998 || HIDWORD(qword_697414) )\n    {\n      if ( v53 != -999998 || HIDWORD(qword_697414) )\n      {\n        v31 = dword_6974A4;\n        if ( v53 < 999601 )\n          goto LABEL_128;\n        goto LABEL_117;\n      }\n      if ( dword_6974EC != 1 )\n      {\nLABEL_104:\n        dword_6974A4 = 3;\n        v31 = 3;\n        if ( v53 < 999601 )\n          goto LABEL_128;\n        goto LABEL_117;\n      }\n    }\n    else if ( dword_6974EC == 1 )\n    {\n      goto LABEL_104;\n    }\n    dword_6974A4 = 2;\n    v31 = 2;\n    if ( v53 < 999601 )\n      goto LABEL_128;\nLABEL_117:\n    if ( !dword_6973E8 && v31 != 1 )\n    {\n      v33 = v31 | 1;\n      if ( v33 != 5 && v33 != 3 && !HIDWORD(qword_697414) && dword_697490 && dword_6974F8 )\n      {\n        a2 = (1000000 - v53) / 2;\n        if ( dword_697360 == 1 )\n          v34 = \"tellics ptell Mate in %d, give him no more pieces.\\n\";\n        else\n          v34 = \"tellics kibitz Mate in %d\\n\";\n        printf(v34, a2);\n      }\n    }\nLABEL_128:\n    if ( (unsigned int)(dword_6974A4 - 1) < 5 || byte_6974FC <= 2 )\n    {\n      v35 = dword_697360;\n      if ( v53 < -999899 )\n        goto LABEL_138;\n    }\n    else\n    {\n      v35 = dword_697360;\n      if ( DWORD1(xmmword_697280) == DWORD1(xmmword_422668)\n        && !HIDWORD(qword_697414)\n        && dword_697360 != 1\n        && dword_69736C == -1 )\n      {\n        BUG();\n      }\n      if ( v53 < -999899 )\n        goto LABEL_138;\n    }\n    if ( v35 == 1 )\n    {\n      v49 = v55;\n      if ( !(dword_6974D4 | dword_6974E0) )\n      {\n        dword_6974D4 = 1;\n        v51 = \"tellics ptell You can trade freely.\";\n        goto LABEL_181;\n      }\n      goto LABEL_182;\n    }\nLABEL_138:\n    if ( v53 > -999901 || v35 != 1 )\n      goto LABEL_171;\n    if ( DWORD1(xmmword_697280) != DWORD1(xmmword_422668) )\n      break;\n    if ( dword_6974E0 )\n    {\n      dword_697450 = 1;\n      v49 = v55;\n      if ( v53 > -1000000 )\n      {\n        if ( dword_697474 )\n        {\n          puts(\"tellics kibitz Both players dead...resigning...\");\n          v51 = \"tellics resign\";\n        }\n        else\n        {\n          v51 = \"tellics ptell I am forcedly mated (dead). Tell me 'go' to start moving into it.\";\n        }\nLABEL_181:\n        puts(v51);\n      }\n      goto LABEL_182;\n    }\n    dword_6974E0 = 1;\n    sub_401E10(src);\n    dword_6974D4 = 0;\n    a1 = (__int64)\"tellics ptell ---trades\";\n    puts(\"tellics ptell ---trades\");\n  }\n  v35 = 1;\nLABEL_171:\n  v49 = v55;\n  if ( (unsigned int)(v53 + 59999) <= 0x4E1E\n    && v35 == 1\n    && !dword_697474\n    && DWORD1(xmmword_697280) == DWORD1(xmmword_422668) )\n  {\n    dword_697450 = 1;\n    v51 = \"tellics ptell I'll have to sit...(lose piece that mates you)\";\n    goto LABEL_181;\n  }\nLABEL_182:\n  v49[1].m128i_i64[0] = v57;\n  v50 = _mm_load_si128((const __m128i *)v56);\nLABEL_183:\n  _mm_storeu_si128(v49, v50);\n  return v49;\n}\n", 
            "funcStartAddr": "0x410b50L", 
            "funcEndAddr": "0x411b52L", 
            "funcName": "sub_410B50"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_411B60(int a1, int a2, FILE *a3, _BYTE *a4)\n{\n  _BYTE *v4; // r14\n  FILE *v5; // rbx\n  int v6; // er15\n  unsigned int v7; // er13\n  int v8; // ebp\n  int v9; // [rsp+1Ch] [rbp-303Ch]\n  char v10; // [rsp+20h] [rbp-3038h]\n\n  v4 = a4;\n  v5 = a3;\n  if ( a1 )\n  {\n    sub_405540((__int64)&v10);\n    v6 = dword_697468;\n    v9 = sub_406E60();\n    if ( v6 > 0 )\n    {\n      v7 = 0;\n      do\n      {\n        sub_407B10((__int64)&v10, v7);\n        if ( (unsigned int)sub_404CA0((__int64)&v10, v7, v9) )\n        {\n          if ( a2 > 0 )\n          {\n            v8 = a2;\n            do\n            {\n              fputc(32, v5);\n              --v8;\n            }\n            while ( v8 );\n          }\n          sub_4177E0(&v10, v7, v5);\n          fputc(10, v5);\n          if ( *v4 == 121 )\n            sub_416150(v5);\n          sub_411B60((unsigned int)(a1 - 1), (unsigned int)(a2 + 2), v5, v4);\n        }\n        sub_4083E0((__int64)&v10, v7++);\n      }\n      while ( v7 != v6 );\n    }\n  }\n}\n", 
            "funcStartAddr": "0x411b60L", 
            "funcEndAddr": "0x411c7dL", 
            "funcName": "sub_411B60"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_411C80(int a1)\n{\n  __int64 v1; // r8\n  __int64 v2; // r9\n  __int64 v3; // r11\n  int v4; // edi\n  int v5; // eax\n  int *v6; // rcx\n  int v7; // eax\n  int *v8; // rcx\n  int v9; // eax\n  int *v10; // rcx\n  int v11; // eax\n  __int64 v12; // r10\n  __int64 v13; // rax\n  __int64 v14; // rdi\n  int v15; // ecx\n  int *v16; // rdx\n  __int64 v17; // rax\n  __int64 v18; // rax\n  __int64 v19; // rax\n  __int64 v20; // rax\n  int v21; // eax\n  int v22; // ecx\n  int v23; // eax\n  int v24; // ecx\n  int v25; // eax\n  int v26; // ecx\n  int v27; // eax\n  int v28; // ecx\n  int v29; // eax\n  int v30; // ecx\n  int v31; // eax\n  int v32; // ecx\n  int v33; // eax\n  int v34; // ecx\n  __int64 result; // rax\n  int v36; // ecx\n  int *v37; // rcx\n\n  LODWORD(v1) = HIDWORD(qword_697310);\n  LODWORD(v2) = qword_697310;\n  v3 = a1;\n  v4 = a1 + 12;\n  v5 = dword_6960A0[v3];\n  if ( v5 == 5 )\n    goto LABEL_108;\n  if ( v5 == 6 )\n    goto LABEL_36;\n  v6 = &dword_6960A0[v3 + 12];\n  if ( v5 )\n  {\n    while ( v5 != 9 && v5 != 7 )\n    {\n      if ( (v5 | 2) == 10 )\n      {\n        dword_696DD0[2 * SHIDWORD(qword_697310)] = v5;\n        dword_696DD4[2 * (signed int)v1] = v4;\n        LODWORD(v1) = v1 + 1;\n        goto LABEL_12;\n      }\n      if ( v5 == 13 )\n      {\n        v5 = *v6;\n        v4 += 12;\n        v6 += 12;\n        if ( v5 )\n          continue;\n      }\n      goto LABEL_12;\n    }\n    LODWORD(qword_696D50[(signed int)qword_697310]) = v5;\n    HIDWORD(qword_696D50[(signed int)v2]) = v4;\n    LODWORD(v2) = v2 + 1;\n  }\nLABEL_12:\n  v4 = v3 - 12;\n  v7 = dword_696040[v3];\n  if ( v7 == 5 )\n    goto LABEL_108;\n  if ( v7 == 6 )\n    goto LABEL_36;\n  v8 = &dword_696040[v3 - 12];\n  if ( v7 )\n  {\n    while ( v7 != 9 && v7 != 7 )\n    {\n      if ( (v7 | 2) == 10 )\n      {\n        v1 = (signed int)v1;\n        dword_696DD0[2 * v1] = v7;\n        dword_696DD4[2 * v1] = v4;\n        LODWORD(v1) = v1 + 1;\n        goto LABEL_23;\n      }\n      if ( v7 == 13 )\n      {\n        v7 = *v8;\n        v4 -= 12;\n        v8 -= 12;\n        if ( v7 )\n          continue;\n      }\n      goto LABEL_23;\n    }\n    v2 = (signed int)v2;\n    LODWORD(qword_696D50[v2]) = v7;\n    HIDWORD(qword_696D50[v2]) = v4;\n    LODWORD(v2) = v2 + 1;\n  }\nLABEL_23:\n  v4 = v3 + 1;\n  v9 = dword_696074[v3];\n  if ( v9 == 5 )\n    goto LABEL_108;\n  if ( v9 == 6 )\n    goto LABEL_36;\n  v10 = &dword_696074[v3 + 1];\n  if ( v9 )\n  {\n    while ( v9 != 9 && v9 != 7 )\n    {\n      if ( (v9 | 2) == 10 )\n      {\n        v1 = (signed int)v1;\n        dword_696DD0[2 * v1] = v9;\n        dword_696DD4[2 * v1] = v4;\n        LODWORD(v1) = v1 + 1;\n        goto LABEL_34;\n      }\n      if ( v9 == 13 )\n      {\n        v9 = *v10;\n        ++v4;\n        ++v10;\n        if ( v9 )\n          continue;\n      }\n      goto LABEL_34;\n    }\n    v2 = (signed int)v2;\n    LODWORD(qword_696D50[v2]) = v9;\n    HIDWORD(qword_696D50[v2]) = v4;\n    LODWORD(v2) = v2 + 1;\n  }\nLABEL_34:\n  v4 = v3 - 1;\n  v11 = dword_69606C[v3];\n  if ( v11 == 5 )\n  {\nLABEL_108:\n    v2 = (signed int)v2;\n    LODWORD(qword_696D50[(signed int)v2]) = 5;\nLABEL_39:\n    HIDWORD(qword_696D50[v2]) = v4;\n    LODWORD(v2) = v2 + 1;\n    goto LABEL_40;\n  }\n  if ( v11 == 6 )\n  {\nLABEL_36:\n    v1 = (signed int)v1;\n    dword_696DD0[2 * (signed int)v1] = 6;\nLABEL_37:\n    dword_696DD4[2 * v1] = v4;\n    LODWORD(v1) = v1 + 1;\n    goto LABEL_40;\n  }\n  v37 = &dword_69606C[v3 - 1];\n  if ( v11 )\n  {\n    while ( v11 != 9 && v11 != 7 )\n    {\n      if ( (v11 | 2) == 10 )\n      {\n        v1 = (signed int)v1;\n        dword_696DD0[2 * (signed int)v1] = v11;\n        goto LABEL_37;\n      }\n      if ( v11 == 13 )\n      {\n        v11 = *v37;\n        --v4;\n        --v37;\n        if ( v11 )\n          continue;\n      }\n      goto LABEL_40;\n    }\n    v2 = (signed int)v2;\n    LODWORD(qword_696D50[(signed int)v2]) = v11;\n    goto LABEL_39;\n  }\nLABEL_40:\n  v12 = 0LL;\n  while ( 1 )\n  {\n    v13 = dword_41CF00[v12];\n    v14 = v13 + v3;\n    v15 = dword_696070[v13 + v3];\n    if ( v12 & 1 && v15 == 1 )\n    {\n      v2 = (signed int)v2;\n      LODWORD(qword_696D50[v2]) = 1;\n      HIDWORD(qword_696D50[v2]) = v14;\n      goto LABEL_63;\n    }\n    if ( !(v12 & 1) && v15 == 2 )\n    {\n      v19 = (signed int)v1;\n      dword_696DD0[2 * v19] = 2;\n      dword_696DD4[2 * v19] = v14;\n      LODWORD(v1) = v1 + 1;\n      goto LABEL_64;\n    }\n    if ( v15 )\n      break;\nLABEL_57:\n    if ( (unsigned __int64)++v12 >= 4 )\n      goto LABEL_64;\n  }\n  if ( v15 == 6 )\n  {\n    v1 = (signed int)v1;\n    dword_696DD0[2 * v1] = 6;\n    dword_696DD4[2 * v1] = v14;\n    LODWORD(v1) = v1 + 1;\n    goto LABEL_64;\n  }\n  if ( v15 != 5 )\n  {\n    v16 = &dword_696070[v13 + v14];\n    while ( 1 )\n    {\n      if ( (v15 | 2) == 11 )\n      {\n        v17 = (signed int)v2;\n        LODWORD(qword_696D50[v17]) = v15;\n        HIDWORD(qword_696D50[v17]) = v14;\n        LODWORD(v2) = v2 + 1;\n        goto LABEL_57;\n      }\n      if ( v15 != 13 )\n        break;\n      v15 = *v16;\n      LODWORD(v14) = v13 + v14;\n      v16 += v13;\n      if ( !v15 )\n        goto LABEL_57;\n    }\n    if ( v15 == 12 || v15 == 10 )\n    {\n      v18 = (signed int)v1;\n      dword_696DD0[2 * v18] = v15;\n      dword_696DD4[2 * v18] = v14;\n      LODWORD(v1) = v1 + 1;\n    }\n    goto LABEL_57;\n  }\n  v20 = (signed int)v2;\n  LODWORD(qword_696D50[v20]) = 5;\n  HIDWORD(qword_696D50[v20]) = v14;\nLABEL_63:\n  LODWORD(v2) = v2 + 1;\nLABEL_64:\n  v21 = v3 + 10;\n  v22 = dword_696098[v3];\n  if ( v22 == 4 )\n  {\n    v1 = (signed int)v1;\n    dword_696DD0[2 * v1] = 4;\n    dword_696DD4[2 * v1] = v21;\n    LODWORD(v1) = v1 + 1;\n  }\n  else if ( v22 == 3 )\n  {\n    v2 = (signed int)v2;\n    LODWORD(qword_696D50[v2]) = 3;\n    HIDWORD(qword_696D50[v2]) = v21;\n    LODWORD(v2) = v2 + 1;\n  }\n  v23 = v3 - 10;\n  v24 = dword_696048[v3];\n  if ( v24 == 3 )\n  {\n    v2 = (signed int)v2;\n    LODWORD(qword_696D50[v2]) = 3;\n    HIDWORD(qword_696D50[v2]) = v23;\n    LODWORD(v2) = v2 + 1;\n  }\n  else if ( v24 == 4 )\n  {\n    v1 = (signed int)v1;\n    dword_696DD0[2 * v1] = 4;\n    dword_696DD4[2 * v1] = v23;\n    LODWORD(v1) = v1 + 1;\n  }\n  v25 = v3 + 14;\n  v26 = dword_6960A8[v3];\n  if ( v26 == 3 )\n  {\n    v2 = (signed int)v2;\n    LODWORD(qword_696D50[v2]) = 3;\n    HIDWORD(qword_696D50[v2]) = v25;\n    LODWORD(v2) = v2 + 1;\n  }\n  else if ( v26 == 4 )\n  {\n    v1 = (signed int)v1;\n    dword_696DD0[2 * v1] = 4;\n    dword_696DD4[2 * v1] = v25;\n    LODWORD(v1) = v1 + 1;\n  }\n  v27 = v3 - 14;\n  v28 = dword_696038[v3];\n  if ( v28 == 3 )\n  {\n    v2 = (signed int)v2;\n    LODWORD(qword_696D50[v2]) = 3;\n    HIDWORD(qword_696D50[v2]) = v27;\n    LODWORD(v2) = v2 + 1;\n  }\n  else if ( v28 == 4 )\n  {\n    v1 = (signed int)v1;\n    dword_696DD0[2 * v1] = 4;\n    dword_696DD4[2 * v1] = v27;\n    LODWORD(v1) = v1 + 1;\n  }\n  v29 = v3 + 23;\n  v30 = dword_6960CC[v3];\n  if ( v30 == 3 )\n  {\n    v2 = (signed int)v2;\n    LODWORD(qword_696D50[v2]) = 3;\n    HIDWORD(qword_696D50[v2]) = v29;\n    LODWORD(v2) = v2 + 1;\n  }\n  else if ( v30 == 4 )\n  {\n    v1 = (signed int)v1;\n    dword_696DD0[2 * v1] = 4;\n    dword_696DD4[2 * v1] = v29;\n    LODWORD(v1) = v1 + 1;\n  }\n  v31 = v3 - 23;\n  v32 = dword_696014[v3];\n  if ( v32 == 3 )\n  {\n    v2 = (signed int)v2;\n    LODWORD(qword_696D50[v2]) = 3;\n    HIDWORD(qword_696D50[v2]) = v31;\n    LODWORD(v2) = v2 + 1;\n  }\n  else if ( v32 == 4 )\n  {\n    v1 = (signed int)v1;\n    dword_696DD0[2 * v1] = 4;\n    dword_696DD4[2 * v1] = v31;\n    LODWORD(v1) = v1 + 1;\n  }\n  v33 = v3 + 25;\n  v34 = dword_6960D4[v3];\n  if ( v34 == 3 )\n  {\n    v2 = (signed int)v2;\n    LODWORD(qword_696D50[v2]) = 3;\n    HIDWORD(qword_696D50[v2]) = v33;\n    LODWORD(v2) = v2 + 1;\n  }\n  else if ( v34 == 4 )\n  {\n    v1 = (signed int)v1;\n    dword_696DD0[2 * v1] = 4;\n    dword_696DD4[2 * v1] = v33;\n    LODWORD(v1) = v1 + 1;\n  }\n  result = (unsigned int)(v3 - 25);\n  v36 = dword_69600C[v3];\n  if ( v36 == 3 )\n  {\n    v2 = (signed int)v2;\n    LODWORD(qword_696D50[v2]) = 3;\n    HIDWORD(qword_696D50[v2]) = result;\n    LODWORD(v2) = v2 + 1;\n  }\n  else if ( v36 == 4 )\n  {\n    v1 = (signed int)v1;\n    dword_696DD0[2 * v1] = 4;\n    dword_696DD4[2 * v1] = result;\n    LODWORD(v1) = v1 + 1;\n  }\n  LODWORD(qword_697310) = v2;\n  HIDWORD(qword_697310) = v1;\n  return result;\n}\n", 
            "funcStartAddr": "0x411c80L", 
            "funcEndAddr": "0x4122cdL", 
            "funcName": "sub_411C80"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4123D0(int a1, int a2, int a3)\n{\n  __int64 v3; // rbp\n  __int64 v4; // rbx\n  int v5; // er15\n  signed __int64 v6; // rax\n  unsigned int v7; // ecx\n  __int64 result; // rax\n  __int64 v9; // r12\n  __int64 v10; // rcx\n  int *v11; // r9\n  int v12; // er13\n  signed int v13; // er8\n  signed int v14; // er14\n  signed int v15; // er10\n  __int64 v16; // rbp\n  __int64 v17; // r12\n  __int64 *v18; // r11\n  int v19; // esi\n  signed int v20; // edi\n  int v21; // ebx\n  int v22; // edx\n  __int64 v23; // rdx\n  _BOOL8 v24; // rcx\n  __int64 v25; // rsi\n  int v26; // edi\n  bool v27; // zf\n  bool v28; // sf\n  unsigned __int8 v29; // of\n  signed int v30; // ecx\n  unsigned int v31; // ecx\n  int v32; // [rsp+0h] [rbp-48h]\n  int v33[2]; // [rsp+4h] [rbp-44h]\n  int v34; // [rsp+Ch] [rbp-3Ch]\n  __int64 v35; // [rsp+10h] [rbp-38h]\n\n  qword_697310 = 0LL;\n  v32 = a1;\n  v3 = a1;\n  ++*((_DWORD *)&qword_697310 + v3);\n  v4 = a3;\n  v5 = dword_696070[a3];\n  dword_696070[a3] = 13;\n  v6 = (signed __int64)a1 << 7;\n  *(_DWORD *)((char *)qword_696D50 + v6) = v5;\n  *(_DWORD *)((char *)qword_696D50 + v6 + 4) = a3;\n  sub_411C80(a2);\n  v7 = *((_DWORD *)&xmmword_422610 + dword_696070[a2]);\n  result = -v7;\n  if ( (signed int)-v7 < 1 )\n    result = v7;\n  v9 = a1 == 0;\n  LODWORD(v10) = *((_DWORD *)&qword_697310 + v9);\n  if ( (_DWORD)v10 )\n  {\n    v34 = v5;\n    v35 = v4;\n    v33[a1] = 1;\n    v33[v9] = 0;\n    if ( (signed int)v10 <= 0 )\n    {\n      v13 = -1000000;\n    }\n    else\n    {\n      v11 = &v33[v9];\n      v12 = a1 == 0;\n      v13 = -1000000;\n      v14 = 0;\n      v15 = result;\n      do\n      {\n        v16 = v14;\n        v17 = v9 << 7;\n        v18 = (__int64 *)(v17 + 8LL * v14 + 6909264);\n        v19 = -*((_DWORD *)&xmmword_422610 + *(signed int *)((char *)&qword_696D50[v14] + v17));\n        if ( v19 < 1 )\n          v19 = *((_DWORD *)&xmmword_422610 + *(signed int *)((char *)&qword_696D50[v14] + v17));\n        v10 = (signed int)v10;\n        v20 = v14;\n        do\n        {\n          v21 = *((_DWORD *)&xmmword_422610 + *(signed int *)((char *)&qword_696D50[v16] + v17));\n          v22 = -v21;\n          if ( -v21 < 1 )\n            v22 = *((_DWORD *)&xmmword_422610 + *(signed int *)((char *)&qword_696D50[v16] + v17));\n          if ( v22 < v19 )\n            v20 = v16;\n          if ( v22 <= v19 )\n            v19 = v22;\n          ++v16;\n        }\n        while ( v16 < v10 );\n        v23 = *v18;\n        *v18 = *(__int64 *)((char *)&qword_696D50[v20] + v17);\n        *(__int64 *)((char *)&qword_696D50[v20] + v17) = v23;\n        v24 = v12 == 0;\n        v25 = v33[v24];\n        v26 = -*((_DWORD *)&xmmword_422610 + dword_696D48[32 * v24 + 2 * v25]);\n        if ( v26 < 1 )\n          v26 = *((_DWORD *)&xmmword_422610 + dword_696D48[32 * (unsigned __int64)(v12 == 0) + 2 * v25]);\n        if ( v12 == v32 )\n        {\n          v15 += v26;\n          v29 = __OFSUB__(*((_DWORD *)&qword_697310 + v24), (_DWORD)v25);\n          v27 = *((_DWORD *)&qword_697310 + v24) == (_DWORD)v25;\n          v28 = *((_DWORD *)&qword_697310 + v24) - (signed int)v25 < 0;\n          v30 = v13;\n          if ( (unsigned __int8)(v28 ^ v29) | v27 )\n            v30 = v15;\n          if ( v15 > v13 )\n            v13 = v30;\n          if ( v15 <= (signed int)result )\n            result = (unsigned int)v15;\n        }\n        else\n        {\n          v15 -= v26;\n          if ( v15 >= v13 )\n            v13 = v15;\n          v29 = __OFSUB__(*((_DWORD *)&qword_697310 + v24), (_DWORD)v25);\n          v27 = *((_DWORD *)&qword_697310 + v24) == (_DWORD)v25;\n          v28 = *((_DWORD *)&qword_697310 + v24) - (signed int)v25 < 0;\n          v31 = result;\n          if ( (unsigned __int8)(v28 ^ v29) | v27 )\n            v31 = v15;\n          if ( v15 < (signed int)result )\n            result = v31;\n        }\n        *v11 = v14 + 1;\n        v12 ^= 1u;\n        v9 = v12;\n        v11 = &v33[v12];\n        v14 = v33[v12];\n        LODWORD(v10) = *((_DWORD *)&qword_697310 + v12);\n      }\n      while ( v14 < (signed int)v10 );\n    }\n    dword_696070[v35] = v34;\n    if ( v13 <= (signed int)result )\n      result = (unsigned int)v13;\n  }\n  else\n  {\n    dword_696070[v4] = v5;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4123d0L", 
            "funcEndAddr": "0x4125f1L", 
            "funcName": "sub_4123D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_412600(__int64 a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6)\n{\n  return sub_412610(a1, a2, a3, a4, a5, a6);\n}\n", 
            "funcStartAddr": "0x412600L", 
            "funcEndAddr": "0x412602L", 
            "funcName": "sub_412600"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_412610()\n{\n  int v0; // edi\n  signed int v1; // eax\n  signed int v2; // ecx\n  signed int *v3; // rdx\n  __int64 v4; // rbx\n  __int64 v5; // rbp\n  int v6; // esi\n  int v7; // ebx\n  __int64 v8; // rbp\n  signed __int64 v9; // r12\n  int v10; // ebx\n  int v11; // er10\n  __int64 v12; // r9\n  __int64 v13; // r8\n  signed int v14; // er14\n  float v15; // xmm1_4\n  int v16; // er15\n  signed int v17; // ebx\n  int v18; // eax\n  signed int v19; // esi\n  signed int v20; // eax\n  int v21; // er15\n  int v22; // eax\n  signed int v23; // ecx\n  signed int v24; // eax\n  __int64 v25; // r15\n  __int64 v26; // r13\n  int v27; // ebp\n  int v28; // eax\n  signed int v29; // ecx\n  int v30; // edi\n  int v31; // eax\n  int v32; // ecx\n  bool v33; // zf\n  int v34; // edi\n  int v35; // eax\n  int v36; // ecx\n  bool v37; // zf\n  int v38; // ecx\n  int *v39; // rax\n  int v40; // edi\n  signed int v41; // esi\n  signed int v42; // ecx\n  int v43; // edx\n  int *v44; // rdi\n  signed int v45; // eax\n  int v46; // esi\n  int *v47; // rcx\n  int *v48; // rax\n  int v49; // edx\n  int v50; // eax\n  int *v51; // rcx\n  int v52; // edi\n  signed int v53; // ebp\n  signed int v54; // edx\n  int v55; // esi\n  int *v56; // rbp\n  signed int v57; // ecx\n  int v58; // edi\n  int *v59; // rdx\n  int v60; // esi\n  __int64 v61; // rbp\n  int v62; // edi\n  int v63; // edx\n  int *v64; // rax\n  signed int v65; // edi\n  signed int v66; // ecx\n  int v67; // esi\n  int *v68; // rdi\n  signed int v69; // eax\n  int v70; // edx\n  int *v71; // rcx\n  int *v72; // rax\n  int v73; // ecx\n  int *v74; // rax\n  int v75; // edi\n  signed int v76; // esi\n  signed int v77; // ecx\n  int v78; // edx\n  int *v79; // rdi\n  signed int v80; // eax\n  int v81; // esi\n  int *v82; // rcx\n  int *v83; // rax\n  unsigned int v84; // ecx\n  signed int v85; // eax\n  int v86; // ecx\n  __int64 v87; // rdx\n  signed __int64 v88; // rax\n  signed int v89; // esi\n  int *v90; // rax\n  int v91; // esi\n  signed int v92; // edi\n  signed int v93; // ecx\n  int v94; // edx\n  int *v95; // rdi\n  signed int v96; // eax\n  int v97; // esi\n  int *v98; // rcx\n  int *v99; // rax\n  int v100; // edx\n  int v101; // eax\n  int *v102; // rcx\n  int v103; // edi\n  signed int v104; // ebp\n  signed int v105; // edx\n  int v106; // esi\n  int *v107; // rbp\n  signed int v108; // ecx\n  int v109; // edi\n  int *v110; // rdx\n  int v111; // esi\n  __int64 v112; // rbp\n  int v113; // edi\n  int v114; // edx\n  int *v115; // rax\n  signed int v116; // edi\n  signed int v117; // ecx\n  int v118; // esi\n  int *v119; // rdi\n  signed int v120; // eax\n  int v121; // edx\n  int *v122; // rcx\n  int *v123; // rax\n  int *v124; // rax\n  int v125; // esi\n  signed int v126; // edi\n  signed int v127; // ecx\n  int v128; // edx\n  int *v129; // rdi\n  signed int v130; // eax\n  int v131; // esi\n  int *v132; // rcx\n  int *v133; // rax\n  unsigned int v134; // ecx\n  int v135; // eax\n  signed int v136; // ecx\n  int v137; // ecx\n  signed int v138; // edx\n  __int64 result; // rax\n  unsigned int v140; // [rsp+Ch] [rbp-10Ch]\n  int v141; // [rsp+10h] [rbp-108h]\n  int v142; // [rsp+14h] [rbp-104h]\n  __int64 v143; // [rsp+18h] [rbp-100h]\n  __int64 v144; // [rsp+20h] [rbp-F8h]\n  int v145; // [rsp+2Ch] [rbp-ECh]\n  __int128 v146; // [rsp+30h] [rbp-E8h]\n  __int128 v147; // [rsp+40h] [rbp-D8h]\n  int v148; // [rsp+50h] [rbp-C8h]\n  __int64 v149; // [rsp+54h] [rbp-C4h]\n  __int128 v150; // [rsp+60h] [rbp-B8h]\n  __int128 v151; // [rsp+70h] [rbp-A8h]\n  int v152; // [rsp+80h] [rbp-98h]\n  __int64 v153; // [rsp+84h] [rbp-94h]\n  __int128 v154; // [rsp+90h] [rbp-88h]\n  __int128 v155; // [rsp+A0h] [rbp-78h]\n  __int128 v156; // [rsp+B0h] [rbp-68h]\n  __int128 v157; // [rsp+C0h] [rbp-58h]\n  __int128 v158; // [rsp+D0h] [rbp-48h]\n  __int64 v159; // [rsp+E0h] [rbp-38h]\n\n  v140 = 0;\n  v145 = 0;\n  sub_402670(&v140, &v145);\n  if ( v145 )\n    goto LABEL_190;\n  v0 = dword_697334;\n  v140 = dword_697334;\n  v158 = 0LL;\n  v157 = 0LL;\n  v156 = 0LL;\n  v155 = 0LL;\n  v154 = 0LL;\n  v150 = xmmword_41CDE0;\n  v146 = xmmword_41CDF0;\n  v151 = xmmword_41CDE0;\n  v147 = xmmword_41CDF0;\n  v152 = 7;\n  v153 = 30064771079LL;\n  v148 = 2;\n  v149 = 8589934594LL;\n  v159 = 0LL;\n  v1 = dword_69747C;\n  if ( dword_69747C <= 0 )\n    goto LABEL_194;\n  v2 = 1;\n  v3 = (_DWORD *)(&xmmword_697050 + 4);\n  do\n  {\n    v4 = *v3;\n    if ( *v3 )\n    {\n      ++v2;\n      v5 = dword_41A8E0[v4];\n      v6 = dword_41AB20[v4];\n      v7 = dword_696070[v4];\n      if ( v7 == 2 )\n      {\n        v8 = (signed int)v5 + 1;\n        ++*((_DWORD *)&v154 + v8);\n        if ( v6 > *((_DWORD *)&v146 + v8) )\n          *((_DWORD *)&v146 + v8) = v6;\n      }\n      else if ( v7 == 1 )\n      {\n        ++*((_DWORD *)&v157 + v5);\n        if ( v6 < *((_DWORD *)&v150 + v5 + 1) )\n          *((_DWORD *)&v150 + v5 + 1) = v6;\n      }\n    }\n    ++v3;\n  }\n  while ( v2 <= v1 );\n  if ( v1 <= 0 )\n  {\nLABEL_194:\n    LODWORD(v12) = 0;\n    v11 = 0;\n    v10 = 0;\n  }\n  else\n  {\n    v9 = 1LL;\n    v10 = 0;\n    v11 = 0;\n    v12 = 0LL;\n    v13 = 0LL;\n    v14 = 1;\n    do\n    {\n      v25 = *((signed int *)&xmmword_697050 + v9);\n      if ( *((_DWORD *)&xmmword_697050 + v9) )\n      {\n        ++v14;\n        v26 = dword_41A8E0[v25];\n        v27 = dword_41AB20[v25];\n        switch ( dword_696070[v25] )\n        {\n          case 1:\n            v141 = v10;\n            v140 = dword_41E770[v25] + v0 + 8 * (dword_6960A0[v25] == 13);\n            v19 = 0;\n            v17 = 0;\n            if ( dword_6960D0[v25] != 2 )\n            {\n              v17 = 0;\n              if ( dword_6960C8[v25] != 2 )\n              {\n                v17 = 0;\n                if ( dword_6960D8[v25] != 2 )\n                {\n                  v142 = v11;\n                  v143 = v12;\n                  v144 = v13;\n                  if ( v27 <= 5\n                    && (dword_6960D4[v25] == 2\n                     || dword_6960CC[v25] == 2\n                     || v27 == 4 && (dword_6960FC[v25] == 2 || dword_696104[v25] == 2))\n                    || (unsigned int)sub_401480((signed int)v25 + 11, 0) )\n                  {\n                    v17 = 30;\n                    if ( (signed int)sub_400FA0((signed int)v25 + 11, 0) > 1 )\n                      v17 = 0;\n                    v13 = v144;\n                    v12 = v143;\n                    v11 = v142;\n                    v19 = 0;\n                  }\n                  else\n                  {\n                    v16 = v25 + 13;\n                    v17 = 0;\n                    v18 = sub_401480(v16, 0);\n                    v13 = v144;\n                    v12 = v143;\n                    v11 = v142;\n                    v19 = 0;\n                    if ( v18 )\n                    {\n                      v20 = sub_400FA0(v16, 0);\n                      v19 = 0;\n                      v11 = v142;\n                      v12 = v143;\n                      v13 = v144;\n                      v17 = 30;\n                      if ( v20 > 1 )\n                        v17 = 0;\n                    }\n                  }\n                }\n              }\n            }\n            v28 = v140 - v17;\n            v140 -= v17;\n            if ( *((_DWORD *)&v150 + v26 + 2) <= v27 || *((_DWORD *)&v150 + v26) <= v27 )\n            {\n              v0 = v28;\n              v29 = 0;\nLABEL_150:\n              v10 = v141;\n              goto LABEL_151;\n            }\n            v0 = v28 - 8;\n            v140 = v28 - 8;\n            v29 = 1;\n            if ( *((_DWORD *)&v157 + v26 + 1) )\n              goto LABEL_150;\n            v10 = v141;\n            if ( !*((_DWORD *)&v156 + v26 + 3) )\n            {\n              v140 = v28 - 20;\n              v19 = 1;\n              v0 = v28 - 20;\n              v29 = 1;\n            }\nLABEL_151:\n            v135 = *((_DWORD *)&v154 + v26 + 1);\n            if ( !v135 )\n            {\n              if ( v29 )\n              {\n                v0 -= 5;\n                v140 = v0;\n              }\n              if ( v19 )\n              {\n                v0 -= 8;\n                v140 = v0;\n              }\n            }\n            v136 = *((_DWORD *)&v157 + v26);\n            if ( v136 >= 2 )\n            {\n              v0 += -15 * v136 + 15;\n              v140 = v0;\n            }\n            if ( !v135 && v27 >= *((_DWORD *)&v146 + v26) && v27 >= *((_DWORD *)&v146 + v26 + 2) )\n            {\n              v0 += 3 * v27 + 24;\n              v140 = v0;\n              if ( (_DWORD)v26 == 8 || (_DWORD)v26 == 1 )\n              {\n                v0 += 2 * v27;\n                v140 = v0;\n              }\n              if ( !v19 )\n              {\n                v0 += 6;\n                v140 = v0;\n              }\n            }\n            if ( !*((_DWORD *)&v156 + v26 + 3) )\n            {\n              v0 -= 20;\n              goto LABEL_186;\n            }\n            break;\n          case 2:\n            v140 = v0 - dword_41E770[v25] - 8 * (dword_696040[v25] == 13);\n            v141 = 0;\n            v23 = 0;\n            if ( dword_696010[v25] != 1 )\n            {\n              v23 = 0;\n              if ( dword_696018[v25] != 1 )\n              {\n                v23 = 0;\n                if ( dword_696008[v25] != 1 )\n                {\n                  v142 = v11;\n                  v143 = v12;\n                  v144 = v13;\n                  if ( v27 >= 4\n                    && (dword_69600C[v25] == 1\n                     || dword_696014[v25] == 1\n                     || v27 == 5 && (dword_695FE4[v25] == 1 || dword_695FDC[v25] == 1))\n                    || (unsigned int)sub_401480((signed int)v25 - 11, 1) )\n                  {\n                    v85 = sub_400FA0((signed int)v25 - 11, 1);\n                    v23 = 30;\n                    if ( v85 > 1 )\n                      v23 = 0;\n                    v13 = v144;\n                    v12 = v143;\n                    v11 = v142;\n                  }\n                  else\n                  {\n                    v21 = v25 - 13;\n                    v22 = sub_401480(v21, 1);\n                    v23 = 0;\n                    v13 = v144;\n                    v12 = v143;\n                    v11 = v142;\n                    if ( v22 )\n                    {\n                      v24 = sub_400FA0(v21, 1);\n                      v11 = v142;\n                      v12 = v143;\n                      v13 = v144;\n                      v23 = 30;\n                      if ( v24 > 1 )\n                        v23 = 0;\n                    }\n                  }\n                }\n              }\n            }\n            v86 = v140 + v23;\n            v140 = v86;\n            LODWORD(v87) = v26 + 1;\n            v88 = v26 + 2;\n            if ( *((_DWORD *)&v146 + v26 + 2) >= v27 || *((_DWORD *)&v146 + v26) >= v27 )\n            {\n              v0 = v86;\n              v89 = 0;\n            }\n            else\n            {\n              v0 = v86 + 8;\n              v140 = v86 + 8;\n              v89 = 1;\n              if ( !*((_DWORD *)&v154 + v88) && !*((_DWORD *)&v154 + v26) )\n              {\n                v140 = v86 + 20;\n                v141 = 1;\n                v0 = v86 + 20;\n                v89 = 1;\n              }\n            }\n            v87 = (signed int)v87;\n            v137 = *((_DWORD *)&v156 + (signed int)v87 + 3);\n            if ( !v137 )\n            {\n              if ( v89 )\n              {\n                v0 += 5;\n                v140 = v0;\n              }\n              if ( v141 )\n              {\n                v0 += 8;\n                v140 = v0;\n              }\n            }\n            v138 = *((_DWORD *)&v154 + v87);\n            if ( v138 >= 2 )\n            {\n              v0 = v0 + 15 * v138 - 15;\n              v140 = v0;\n            }\n            if ( !v137 && v27 <= *((_DWORD *)&v150 + v26) && v27 <= *((_DWORD *)&v150 + v88) )\n            {\n              v0 = v0 - 3 * (7 - v27) - 30;\n              v140 = v0;\n              if ( (_DWORD)v26 == 8 || (_DWORD)v26 == 1 )\n              {\n                v0 = v0 + 2 * v27 - 18;\n                v140 = v0;\n              }\n              if ( !v141 )\n              {\n                v0 -= 6;\n                v140 = v0;\n              }\n            }\n            if ( !*((_DWORD *)&v154 + v26) )\n            {\n              v0 += 20;\n              goto LABEL_186;\n            }\n            break;\n          case 3:\n            v30 = dword_41E770[v25] + v0;\n            v31 = (dword_696098[v25] == 13)\n                + (dword_696048[v25] == 13)\n                + (dword_6960A8[v25] == 13)\n                + (dword_696038[v25] == 13)\n                + (dword_6960CC[v25] == 13)\n                + (dword_696014[v25] == 13)\n                + (dword_6960D4[v25] == 13);\n            v32 = 0;\n            v33 = dword_69600C[v25] == 13;\n            goto LABEL_50;\n          case 4:\n            v34 = v0 - dword_41E770[v25];\n            v35 = (dword_696098[v25] == 13)\n                + (dword_696048[v25] == 13)\n                + (dword_6960A8[v25] == 13)\n                + (dword_696038[v25] == 13)\n                + (dword_6960CC[v25] == 13)\n                + (dword_696014[v25] == 13)\n                + (dword_6960D4[v25] == 13);\n            v36 = 0;\n            v37 = dword_69600C[v25] == 13;\n            goto LABEL_109;\n          case 5:\n            v30 = (dword_41E770[v25] >> 1) + v0;\n            v31 = (dword_6960A4[v25] == 13)\n                + (dword_6960A0[v25] == 13)\n                + (dword_69609C[v25] == 13)\n                + (dword_696074[v25] == 13)\n                + (dword_69606C[v25] == 13)\n                + (dword_696044[v25] == 13)\n                + (dword_696040[v25] == 13);\n            v32 = 0;\n            v33 = dword_69603C[v25] == 13;\nLABEL_50:\n            LOBYTE(v32) = v33;\n            v0 = v30 + 4 * (v31 + v32);\n            goto LABEL_186;\n          case 6:\n            v34 = v0 - (dword_41E770[v25] >> 1);\n            v35 = (dword_6960A4[v25] == 13)\n                + (dword_6960A0[v25] == 13)\n                + (dword_69609C[v25] == 13)\n                + (dword_696074[v25] == 13)\n                + (dword_69606C[v25] == 13)\n                + (dword_696044[v25] == 13)\n                + (dword_696040[v25] == 13);\n            v36 = 0;\n            v37 = dword_69603C[v25] == 13;\nLABEL_109:\n            LOBYTE(v36) = v37;\n            v0 = v34 - 4 * (v35 + v36);\n            goto LABEL_186;\n          case 7:\n            v140 = v0 + dword_41E770[v25];\n            v90 = &dword_696040[v25];\n            v91 = v140 - 4;\n            v92 = -1;\n            do\n            {\n              v93 = v92;\n              v94 = v91;\n              ++v92;\n              v91 += 4;\n              v33 = *v90 == 13;\n              v90 -= 12;\n            }\n            while ( v33 );\n            v95 = &dword_69606C[v25];\n            do\n            {\n              v96 = v93;\n              v97 = v94;\n              ++v93;\n              v94 += 4;\n              v33 = *v95 == 13;\n              --v95;\n            }\n            while ( v33 );\n            v98 = &dword_696074[v25];\n            do\n            {\n              v0 = v97;\n              ++v96;\n              v97 += 4;\n              v33 = *v98 == 13;\n              ++v98;\n            }\n            while ( v33 );\n            v99 = &dword_6960A0[v25];\n            do\n            {\n              v0 += 4;\n              v33 = *v99 == 13;\n              v99 += 12;\n            }\n            while ( v33 );\n            goto LABEL_186;\n          case 8:\n            v38 = dword_41E770[v25];\n            v140 = v0 - v38;\n            v39 = &dword_696040[v25];\n            v40 = v0 + 4 - v38;\n            v41 = -1;\n            do\n            {\n              v42 = v41;\n              v43 = v40;\n              ++v41;\n              v40 -= 4;\n              v33 = *v39 == 13;\n              v39 -= 12;\n            }\n            while ( v33 );\n            v44 = &dword_69606C[v25];\n            do\n            {\n              v45 = v42;\n              v46 = v43;\n              ++v42;\n              v43 -= 4;\n              v33 = *v44 == 13;\n              --v44;\n            }\n            while ( v33 );\n            v47 = &dword_696074[v25];\n            do\n            {\n              v0 = v46;\n              ++v45;\n              v46 -= 4;\n              v33 = *v47 == 13;\n              ++v47;\n            }\n            while ( v33 );\n            v48 = &dword_6960A0[v25];\n            do\n            {\n              v0 -= 4;\n              v33 = *v48 == 13;\n              v48 += 12;\n            }\n            while ( v33 );\n            goto LABEL_186;\n          case 9:\n            v100 = dword_41E770[v25];\n            v101 = v0 + v100;\n            v140 = v0 + v100;\n            v102 = &dword_696040[v25];\n            v103 = v0 + v100 - 4;\n            v104 = -1;\n            do\n            {\n              v105 = v104;\n              v106 = v103;\n              ++v104;\n              v103 += 4;\n              v33 = *v102 == 13;\n              v102 -= 12;\n            }\n            while ( v33 );\n            v107 = &dword_69606C[v25];\n            do\n            {\n              v108 = v105;\n              v109 = v106;\n              ++v105;\n              v106 += 4;\n              v33 = *v107 == 13;\n              --v107;\n            }\n            while ( v33 );\n            v110 = &dword_696074[v25];\n            do\n            {\n              v111 = v109;\n              ++v108;\n              v109 += 4;\n              v33 = *v110 == 13;\n              ++v110;\n            }\n            while ( v33 );\n            v112 = v25;\n            do\n            {\n              v113 = v108;\n              v114 = v111;\n              ++v108;\n              v111 += 4;\n              v33 = dword_6960A0[v112] == 13;\n              v112 += 12LL;\n            }\n            while ( v33 );\n            v140 = v101 + 4 * v113;\n            v115 = &dword_69603C[v25];\n            v116 = -1;\n            do\n            {\n              v117 = v116;\n              v118 = v114;\n              ++v116;\n              v114 += 4;\n              v33 = *v115 == 13;\n              v115 -= 13;\n            }\n            while ( v33 );\n            v119 = &dword_696044[v25];\n            do\n            {\n              v120 = v117;\n              v121 = v118;\n              ++v117;\n              v118 += 4;\n              v33 = *v119 == 13;\n              v119 -= 11;\n            }\n            while ( v33 );\n            v122 = &dword_69609C[v25];\n            do\n            {\n              v0 = v121;\n              ++v120;\n              v121 += 4;\n              v33 = *v122 == 13;\n              v122 += 11;\n            }\n            while ( v33 );\n            v123 = &dword_6960A4[v25];\n            do\n            {\n              v0 += 4;\n              v33 = *v123 == 13;\n              v123 += 13;\n            }\n            while ( v33 );\n            goto LABEL_186;\n          case 10:\n            v49 = dword_41E770[v25];\n            v50 = v0 - v49;\n            v140 = v0 - v49;\n            v51 = &dword_696040[v25];\n            v52 = v0 + 4 - v49;\n            v53 = -1;\n            do\n            {\n              v54 = v53;\n              v55 = v52;\n              ++v53;\n              v52 -= 4;\n              v33 = *v51 == 13;\n              v51 -= 12;\n            }\n            while ( v33 );\n            v56 = &dword_69606C[v25];\n            do\n            {\n              v57 = v54;\n              v58 = v55;\n              ++v54;\n              v55 -= 4;\n              v33 = *v56 == 13;\n              --v56;\n            }\n            while ( v33 );\n            v59 = &dword_696074[v25];\n            do\n            {\n              v60 = v58;\n              ++v57;\n              v58 -= 4;\n              v33 = *v59 == 13;\n              ++v59;\n            }\n            while ( v33 );\n            v61 = v25;\n            do\n            {\n              v62 = v57;\n              v63 = v60;\n              ++v57;\n              v60 -= 4;\n              v33 = dword_6960A0[v61] == 13;\n              v61 += 12LL;\n            }\n            while ( v33 );\n            v140 = v50 - 4 * v62;\n            v64 = &dword_69603C[v25];\n            v65 = -1;\n            do\n            {\n              v66 = v65;\n              v67 = v63;\n              ++v65;\n              v63 -= 4;\n              v33 = *v64 == 13;\n              v64 -= 13;\n            }\n            while ( v33 );\n            v68 = &dword_696044[v25];\n            do\n            {\n              v69 = v66;\n              v70 = v67;\n              ++v66;\n              v67 -= 4;\n              v33 = *v68 == 13;\n              v68 -= 11;\n            }\n            while ( v33 );\n            v71 = &dword_69609C[v25];\n            do\n            {\n              v0 = v70;\n              ++v69;\n              v70 -= 4;\n              v33 = *v71 == 13;\n              v71 += 11;\n            }\n            while ( v33 );\n            v72 = &dword_6960A4[v25];\n            do\n            {\n              v0 -= 4;\n              v33 = *v72 == 13;\n              v72 += 13;\n            }\n            while ( v33 );\nLABEL_186:\n            v140 = v0;\n            break;\n          case 11:\n            v140 = v0 + dword_41E770[v25];\n            v124 = &dword_69603C[v25];\n            v125 = v140 - 4;\n            v126 = -1;\n            do\n            {\n              v127 = v126;\n              v128 = v125;\n              ++v126;\n              v125 += 4;\n              v33 = *v124 == 13;\n              v124 -= 13;\n            }\n            while ( v33 );\n            v129 = &dword_696044[v25];\n            do\n            {\n              v130 = v127;\n              v131 = v128;\n              ++v127;\n              v128 += 4;\n              v33 = *v129 == 13;\n              v129 -= 11;\n            }\n            while ( v33 );\n            v132 = &dword_69609C[v25];\n            do\n            {\n              v0 = v131;\n              ++v130;\n              v131 += 4;\n              v33 = *v132 == 13;\n              v132 += 11;\n            }\n            while ( v33 );\n            v133 = &dword_6960A4[v25];\n            do\n            {\n              v0 += 4;\n              v33 = *v133 == 13;\n              v133 += 13;\n            }\n            while ( v33 );\n            v140 = v0;\n            v134 = v13 + 1;\n            if ( dword_41B1E0[v25] != v11 )\n              v134 = 100;\n            if ( !(_DWORD)v13 )\n              v134 = 1;\n            v13 = v134;\n            v11 = dword_41B1E0[v25];\n            break;\n          case 12:\n            v73 = dword_41E770[v25];\n            v140 = v0 - v73;\n            v74 = &dword_69603C[v25];\n            v75 = v0 + 4 - v73;\n            v76 = -1;\n            do\n            {\n              v77 = v76;\n              v78 = v75;\n              ++v76;\n              v75 -= 4;\n              v33 = *v74 == 13;\n              v74 -= 13;\n            }\n            while ( v33 );\n            v79 = &dword_696044[v25];\n            do\n            {\n              v80 = v77;\n              v81 = v78;\n              ++v77;\n              v78 -= 4;\n              v33 = *v79 == 13;\n              v79 -= 11;\n            }\n            while ( v33 );\n            v82 = &dword_69609C[v25];\n            do\n            {\n              v0 = v81;\n              ++v80;\n              v81 -= 4;\n              v33 = *v82 == 13;\n              v82 += 11;\n            }\n            while ( v33 );\n            v83 = &dword_6960A4[v25];\n            do\n            {\n              v0 -= 4;\n              v33 = *v83 == 13;\n              v83 += 13;\n            }\n            while ( v33 );\n            v140 = v0;\n            v84 = v12 + 1;\n            if ( dword_41B1E0[v25] != v10 )\n              v84 = 100;\n            if ( !(_DWORD)v12 )\n              v84 = 1;\n            v12 = v84;\n            v10 = dword_41B1E0[v25];\n            break;\n          default:\n            break;\n        }\n      }\n      ++v9;\n      v1 = dword_69747C;\n    }\n    while ( v14 <= dword_69747C );\n    if ( (signed int)v13 > 98 )\n      goto LABEL_189;\n  }\n  if ( (signed int)v12 <= 98 && v11 != v10 && v1 <= 31 )\n  {\n    v15 = (float)((float)v1 * 0.03125) * (float)v0;\n    v0 = (signed int)v15;\n    v140 = (signed int)v15;\n  }\nLABEL_189:\n  sub_402640(v0);\nLABEL_190:\n  result = -v140;\n  if ( dword_6974EC == 1 )\n    result = v140;\n  return result;\n}\n", 
            "funcStartAddr": "0x412610L", 
            "funcEndAddr": "0x41348aL", 
            "funcName": "sub_412610"
        }, 
        {
            "decompiledFuncCode": "void __usercall main(char **a1@<rsi>, char **a2@<rdx>, __int64 a3@<rax>, __int64 a4@<rdi>)\n{\n  int v4; // ebp\n  FILE *v5; // rdi\n  int v6; // ecx\n  signed int v7; // edx\n  signed int v8; // er13\n  signed int v9; // ebx\n  __int64 v10; // rsi\n  signed int v11; // eax\n  signed int v12; // er15\n  int v13; // er12\n  signed int v14; // edi\n  signed int v15; // er13\n  unsigned int v16; // er14\n  bool v17; // al\n  __int64 v18; // rax\n  signed __int64 v19; // rcx\n  __int64 v20; // rax\n  char v21; // bl\n  const __int32_t **v22; // rax\n  char *v23; // rcx\n  const char *v24; // rsi\n  const char *v25; // rsi\n  const char *v26; // rsi\n  char *v27; // rdi\n  int v28; // eax\n  signed int v29; // esi\n  unsigned int v30; // ebp\n  unsigned int v31; // er12\n  int v32; // eax\n  int v33; // eax\n  int v34; // eax\n  char v35; // r15\n  int v36; // ecx\n  int v37; // edx\n  __int64 v38; // rcx\n  signed __int64 v39; // rax\n  __int64 v40; // rax\n  int v41; // eax\n  signed int v42; // ecx\n  __int64 v43; // rbx\n  __int64 v44; // rsi\n  __int64 v45; // rax\n  signed int v46; // eax\n  const char *v47; // rdi\n  signed int v48; // er8\n  __int64 v49; // rax\n  unsigned int v50; // ebp\n  unsigned int v51; // eax\n  const char *v52; // rdi\n  const char *v53; // rdi\n  __int64 v54; // rax\n  unsigned int v55; // eax\n  int *v56; // rdx\n  int v57; // eax\n  const char *v58; // rsi\n  __int64 v59; // rax\n  int v60; // er14\n  signed int v61; // er8\n  signed int v62; // er12\n  signed __int64 v63; // rax\n  unsigned int v64; // er15\n  char *v65; // rdi\n  signed int v66; // ebx\n  signed int v67; // er8\n  signed __int64 v68; // rax\n  char *v69; // rdi\n  signed __int64 v70; // rax\n  char *v71; // rdi\n  const unsigned __int16 **v72; // rax\n  const unsigned __int16 *v73; // rdx\n  int v74; // eax\n  int v75; // eax\n  int v76; // eax\n  int v77; // eax\n  char *v78; // rdi\n  __int64 v79; // rsi\n  const char *v80; // rdi\n  __int128 v81; // [rsp+0h] [rbp-6198h]\n  __int64 v82; // [rsp+10h] [rbp-6188h]\n  unsigned int v83; // [rsp+1Ch] [rbp-617Ch]\n  signed int v84; // [rsp+20h] [rbp-6178h]\n  signed int v85; // [rsp+24h] [rbp-6174h]\n  int v86; // [rsp+28h] [rbp-6170h]\n  unsigned int v87; // [rsp+2Ch] [rbp-616Ch]\n  __int128 v88; // [rsp+30h] [rbp-6168h]\n  __int64 v89; // [rsp+40h] [rbp-6158h]\n  unsigned int v90; // [rsp+4Ch] [rbp-614Ch]\n  char src; // [rsp+50h] [rbp-6148h]\n  char v92; // [rsp+51h] [rbp-6147h]\n  char v93; // [rsp+52h] [rbp-6146h]\n  char v94; // [rsp+53h] [rbp-6145h]\n  char v95; // [rsp+55h] [rbp-6143h]\n  char v96; // [rsp+56h] [rbp-6142h]\n  char v97; // [rsp+57h] [rbp-6141h]\n  char v98; // [rsp+58h] [rbp-6140h]\n  char v99; // [rsp+59h] [rbp-613Fh]\n  __int128 v100; // [rsp+158h] [rbp-6040h]\n  __int64 v101; // [rsp+168h] [rbp-6030h]\n  __int128 v102; // [rsp+170h] [rbp-6028h]\n  __int64 v103; // [rsp+180h] [rbp-6018h]\n  char v104; // [rsp+188h] [rbp-6010h]\n  char v105; // [rsp+1A0h] [rbp-5FF8h]\n  char nptr; // [rsp+2A0h] [rbp-5EF8h]\n  __int128 v107[600]; // [rsp+3A0h] [rbp-5DF8h]\n  __int128 s; // [rsp+2920h] [rbp-3878h]\n  __int64 v109[1805]; // [rsp+2930h] [rbp-3868h]\n\n  v4 = a4;\n  v87 = 4;\n  sub_40DCB0(a3);\n  sub_415280();\n  xmmword_422610 = xmmword_422120;\n  xmmword_422620 = xmmword_422130;\n  xmmword_422630 = xmmword_422140;\n  dword_697360 = 2;\n  qword_422640 = qword_422150;\n  ((void (*)(void))sub_416550)();\n  ((void (*)(void))sub_415470)();\n  sub_415200(a4, a1);\n  sub_4026C0();\n  dword_69731C = 0;\n  dword_697318 = 0;\n  dword_697354 = 0;\n  dword_69735C = 0;\n  dword_697350 = 0;\n  dword_697384 = 0;\n  dword_6974D0 = 0;\n  dword_697484 = 0;\n  dword_697444 = 40;\n  dword_697438 = 5;\n  dword_6974C8 = 30000;\n  dword_69746C = 2000;\n  dword_697454 = 2000;\n  dword_69742C = 40;\n  dword_697434 = 200;\n  dword_69744C = 1;\n  dword_6974D4 = 1;\n  dword_6974F8 = 0;\n  dword_6973B4 = 0;\n  v86 = 1;\n  dword_697368 = 1;\n  qword_697414 = 0LL;\n  dword_697400 = 0;\n  dword_697450 = 0;\n  dword_6973F8 = 0;\n  dword_6973E4 = 0;\n  dword_697478 = 0;\n  dword_6974A8 = 0;\n  dword_697420 = 0;\n  dword_69743C = 0;\n  memset(&s, 0, 0x3840uLL);\n  memset(v107, 0, 0x2580uLL);\n  dword_692990[0] = dword_6973FC;\n  setbuf(stdout, 0LL);\n  v5 = stdin;\n  setbuf(stdin, 0LL);\n  sub_417990(v5, 0LL);\n  if ( v4 == 2 )\n  {\n    puts(\"SPEC Workload\");\n    sub_403070(a1[1]);\n  }\n  v6 = 0;\n  v7 = 0;\n  v8 = 0;\n  v9 = 0;\nLABEL_6:\n  v10 = 0LL;\n  while ( 1 )\n  {\n    v12 = v7;\n    v13 = v6;\n    v85 = v9;\n    if ( !v9 && (dword_6973B4 == dword_6974EC || v8 != 0) && !(dword_6974A4 | (unsigned int)v10 | dword_697450) )\n      break;\n    v14 = v8;\nLABEL_10:\n    v15 = v9;\nLABEL_11:\n    v84 = v14;\n    if ( dword_6974F8 )\n    {\n      if ( dword_697450 )\n      {\n        v16 = v10;\n        if ( v14 | dword_6974A4 )\n          goto LABEL_27;\nLABEL_26:\n        HIDWORD(qword_697414) = 1;\n        sub_410B50((__int64)&v104, v10);\n        HIDWORD(qword_697414) = 0;\n        dword_697484 = 0;\n        goto LABEL_27;\n      }\n      v16 = v10;\n      v17 = (v15 | (unsigned int)v10) == 0;\n      v10 = v14 | (unsigned int)dword_6974A4;\n      if ( !(v14 | dword_6974A4) && ((_DWORD)qword_697414 != 0 || dword_69743C != 0 && dword_697368 != 0 && v17) )\n        goto LABEL_26;\nLABEL_27:\n      if ( v14 )\n        goto LABEL_28;\nLABEL_30:\n      sub_416DA0(&src, 256LL, stdin);\n      if ( !v15 )\n        goto LABEL_31;\nLABEL_36:\n      if ( !strstr(&src, \"setboard\") )\n      {\n        v21 = src;\n        if ( src )\n        {\n          v22 = __ctype_tolower_loc();\n          v23 = &v92;\n          do\n          {\n            *(v23 - 1) = (*v22)[v21];\n            v21 = *v23++;\n          }\n          while ( v21 );\n        }\n      }\n      v24 = \"quit\";\n      if ( !strcmp(&src, \"quit\") )\n      {\nLABEL_228:\n        sub_4159C0(&src, v24);\n        sub_402720();\n        exit(0);\n      }\n      v24 = \"exit\";\n      if ( !strcmp(&src, \"exit\") )\n      {\n        if ( !(_DWORD)qword_697414 )\n          goto LABEL_228;\n        qword_697414 = 0LL;\n        dword_6974C4 = 0;\n        goto LABEL_7;\n      }\n      v25 = \"diagram\";\n      if ( !strcmp(&src, \"diagram\") || (v25 = \"d\", !strcmp(&src, \"d\")) )\n      {\n        sub_4179A0(&v86, v25);\n        goto LABEL_7;\n      }\n      if ( !strncmp(&src, \"perft\", 5uLL) )\n      {\n        __isoc99_sscanf(&v96, \"%d\", &v87);\n        dword_697498 = 0;\n        v43 = rtime(&v96, \"%d\");\n        sub_40E400(v87);\n        v44 = v87;\n        printf(\"Raw nodes for depth %d: %i\\n\", v87, (unsigned int)dword_697498);\n        v45 = rtime(\"Raw nodes for depth %d: %i\\n\", v44);\n        v46 = sub_417410(v45, v43);\n        printf(\"Time : %.2f\\n\", v43, (float)v46 / 100.0);\n        goto LABEL_7;\n      }\n      v26 = \"new\";\n      v27 = &src;\n      if ( !strcmp(&src, \"new\") )\n      {\n        if ( dword_6974F8 )\n        {\n          v27 = \"tellics set 1 Sjeng SPEC 1.0 (SPEC/%s)\\n\";\n          v26 = byte_697260;\n          printf(\"tellics set 1 Sjeng SPEC 1.0 (SPEC/%s)\\n\", byte_697260);\n        }\n        if ( !(_DWORD)qword_697414 )\n        {\n          qword_422640 = qword_422150;\n          xmmword_422630 = xmmword_422140;\n          xmmword_422620 = xmmword_422130;\n          xmmword_422610 = xmmword_422120;\n          dword_697360 = 2;\n          sub_416550(v27, v26);\n          ((void (*)(void))sub_415470)();\n          if ( !v12 )\n          {\n            sub_415200(v27, v26);\n            sub_4026C0();\n          }\n          dword_697450 = 0;\n          dword_6973F8 = 0;\n          dword_697480 = 0;\n          dword_697474 = 0;\n          dword_697420 = 0;\n          dword_6973E4 = 0;\n          dword_6974A8 = 0;\n          dword_6973B4 = 0;\n          dword_69743C = 0;\n          dword_692990[0] = 0;\n          dword_697384 = 0;\n          dword_69746C = 2000;\n          dword_697454 = 2000;\n          dword_69744C = 0;\n          dword_6974D4 = 1;\n          sub_40B000(1);\n          sub_40A180();\n          v6 = v13;\n          v7 = v12;\n          v8 = 0;\n          v9 = v85;\n          goto LABEL_6;\n        }\n        sub_416550(v27, v26);\n        dword_69743C = 0;\nLABEL_7:\n        v6 = v13;\n        v7 = v12;\n        v11 = v15;\n        v8 = v84;\n        v9 = v11;\n        v10 = v16;\n      }\n      else\n      {\n        if ( !strcmp(&src, \"xboard\") )\n        {\n          dword_6974F8 = 1;\n          sub_4179A0(&v86, \"xboard\");\n          signal(2, (__sighandler_t)1);\n          putchar(10);\n          puts(\"tellics set f5 1=1\");\n          nullsub_1(\"tellics set f5 1=1\", 1LL);\n          goto LABEL_7;\n        }\n        if ( !strcmp(&src, \"nodes\") )\n        {\n          printf(\n            \"Number of nodes: %i (%0.2f%% qnodes)\\n\",\n            (float)((float)((float)dword_697494 / (float)dword_697460) * 100.0));\n          goto LABEL_7;\n        }\n        if ( !strcmp(&src, \"post\") )\n        {\n          sub_4179A0(&dword_697490, \"post\");\n          v6 = v13;\n          v7 = v12;\n          v48 = v15;\n          v8 = v84;\n          v9 = v48;\n          v10 = v16;\n          if ( dword_6974F8 )\n          {\n            dword_697490 = 1;\n            v6 = v13;\n            v7 = v12;\n            v8 = v84;\n            v9 = v48;\n            v10 = v16;\n          }\n        }\n        else\n        {\n          if ( !strcmp(&src, \"nopost\") )\n          {\n            dword_697490 = 0;\n            goto LABEL_7;\n          }\n          v28 = strcmp(&src, \"random\");\n          v6 = v13;\n          v7 = v12;\n          v29 = v15;\n          v8 = v84;\n          v9 = v29;\n          v10 = v16;\n          if ( v28 )\n          {\n            v30 = v13;\n            v83 = v16;\n            v31 = v12;\n            if ( !strcmp(&src, \"hard\") )\n            {\n              dword_697368 = 1;\n              goto LABEL_147;\n            }\n            if ( !strcmp(&src, \"easy\") )\n            {\n              dword_697368 = 0;\n              goto LABEL_147;\n            }\n            v32 = strcmp(&src, \"?\");\n            v6 = v30;\n            v7 = v12;\n            v8 = v84;\n            v9 = v85;\n            v10 = v16;\n            if ( v32 )\n            {\n              if ( !strcmp(&src, \"white\") )\n              {\n                dword_6974EC = 1;\n                dword_6974A8 = 0;\n                dword_6973B4 = 0;\n                goto LABEL_147;\n              }\n              if ( !strcmp(&src, \"black\") )\n              {\n                dword_6974EC = 0;\n                dword_6974A8 = 1;\n                dword_6973B4 = 1;\n                goto LABEL_147;\n              }\n              v33 = strcmp(&src, \"force\");\n              v10 = 1LL;\n              v6 = v30;\n              v7 = v12;\n              v8 = v84;\n              v9 = v85;\n              if ( v33 )\n              {\n                if ( !strcmp(&src, \"eval\") )\n                {\n                  sub_408B10();\n                  v55 = sub_403300(v54);\n                  printf(\"Eval: %d\\n\", v55);\n                  goto LABEL_147;\n                }\n                if ( !strcmp(&src, \"go\") )\n                {\n                  dword_6973B4 = dword_6974EC;\nLABEL_226:\n                  v6 = v30;\n                  v7 = v31;\n                  v8 = v84;\n                  v9 = v85;\n                  goto LABEL_6;\n                }\n                if ( !strncmp(&src, \"time\", 4uLL) )\n                {\n                  v56 = &dword_6974C8;\nLABEL_146:\n                  __isoc99_sscanf(&v95, \"%i\", v56);\n                  goto LABEL_147;\n                }\n                if ( !strncmp(&src, \"otim\", 4uLL) )\n                {\n                  v56 = &dword_697470;\n                  goto LABEL_146;\n                }\n                if ( !strncmp(&src, \"level\", 5uLL) )\n                {\n                  if ( strchr(&v96, 58) )\n                  {\n                    __isoc99_sscanf(&v96, \"%i %i:%i %i\", &dword_697444);\n                    v57 = 6000 * dword_697438 + 100 * dword_6974B4;\n                  }\n                  else\n                  {\n                    __isoc99_sscanf(&v96, \"%i %i %i\", &dword_697444);\n                    v57 = 6000 * dword_697438;\n                  }\n                  v10 = v16;\n                  v8 = v84;\n                  dword_6974C8 = v57;\n                  dword_697470 = v57;\n                  dword_6973E4 = 0;\n                  dword_6974B8 = 0;\n                  v6 = v30;\n                  v7 = v12;\n                  v9 = v85;\n                }\n                else if ( !strncmp(&src, \"rating\", 6uLL) )\n                {\n                  __isoc99_sscanf(&v97, \"%i %i\", &dword_697454);\n                  if ( !dword_697454 )\n                    dword_697454 = 2000;\n                  v6 = v30;\n                  v7 = v12;\n                  v8 = v84;\n                  v9 = v85;\n                  v10 = v16;\n                  if ( !dword_69746C )\n                  {\n                    dword_69746C = 2000;\n                    v6 = v30;\n                    v7 = v12;\n                    v8 = v84;\n                    v9 = v85;\n                    v10 = v16;\n                  }\n                }\n                else\n                {\n                  if ( !strncmp(&src, \"holding\", 7uLL) )\n                  {\n                    sub_401E10(&src);\n                    goto LABEL_147;\n                  }\n                  if ( !strncmp(&src, \"variant\", 7uLL) )\n                  {\n                    v58 = \"normal\";\n                    if ( strstr(&src, \"normal\") )\n                    {\n                      xmmword_422610 = xmmword_422120;\n                      xmmword_422620 = xmmword_422130;\n                      xmmword_422630 = xmmword_422140;\n                      dword_697360 = 2;\n                      v59 = qword_422150;\n                      goto LABEL_206;\n                    }\n                    v58 = \"crazyhouse\";\n                    if ( strstr(&src, \"crazyhouse\") )\n                    {\n                      xmmword_422610 = xmmword_422160;\n                      xmmword_422620 = xmmword_422170;\n                      xmmword_422630 = xmmword_422180;\n                      dword_697360 = 0;\n                      v59 = qword_422190;\n                      goto LABEL_206;\n                    }\n                    v58 = \"bughouse\";\n                    if ( strstr(&src, \"bughouse\") )\n                    {\n                      xmmword_422610 = xmmword_422160;\n                      xmmword_422620 = xmmword_422170;\n                      xmmword_422630 = xmmword_422180;\n                      dword_697360 = 1;\n                      v59 = qword_422190;\n                      goto LABEL_206;\n                    }\n                    v58 = \"suicide\";\n                    if ( strstr(&src, \"suicide\") )\n                    {\n                      xmmword_422610 = xmmword_4221A0;\n                      xmmword_422620 = xmmword_4221B0;\n                      dword_697360 = 3;\n                      xmmword_422630 = xmmword_4221C0;\n                      dword_697330 = 0;\n                      v59 = qword_4221D0;\n                      goto LABEL_206;\n                    }\n                    v58 = \"giveaway\";\n                    if ( strstr(&src, \"giveaway\") )\n                    {\n                      xmmword_422610 = xmmword_4221A0;\n                      xmmword_422620 = xmmword_4221B0;\n                      dword_697360 = 3;\n                      xmmword_422630 = xmmword_4221C0;\n                      dword_697330 = 1;\n                      v59 = qword_4221D0;\n                      goto LABEL_206;\n                    }\n                    v58 = \"losers\";\n                    if ( strstr(&src, \"losers\") )\n                    {\n                      xmmword_422610 = xmmword_4221E0;\n                      xmmword_422620 = xmmword_4221F0;\n                      xmmword_422630 = xmmword_422200;\n                      dword_697360 = 4;\n                      v59 = qword_422210;\nLABEL_206:\n                      qword_422640 = v59;\n                    }\n                    sub_415470(&src, v58);\n                    sub_415200(&src, v58);\n                    sub_4026C0();\n                    goto LABEL_147;\n                  }\n                  if ( !strncmp(&src, \"analyze\", 7uLL) )\n                  {\n                    qword_697414 = 4294967297LL;\n                    sub_410B50((__int64)&v104, (__int64)\"analyze\");\n                    dword_697484 = 0;\n                    goto LABEL_147;\n                  }\n                  if ( !strncmp(&src, \"undo\", 4uLL) )\n                  {\n                    printf(\"Move number : %d\\n\", (unsigned int)dword_69743C);\n                    v60 = v30;\n                    v6 = v30;\n                    v61 = v12;\n                    v7 = v12;\n                    v8 = v84;\n                    v62 = v85;\n                    v9 = v85;\n                    v10 = v83;\n                    if ( dword_69743C > 0LL )\n                    {\n                      v63 = dword_69743C-- - 1LL;\n                      xmmword_6916D0[0] = v107[v63];\n                      v64 = v83;\n                      v65 = (char *)&s + 24 * v63;\n                      v8 = v84;\n                      v66 = v61;\n                      sub_4083E0((__int64)v65, 0);\n                      sub_4168E0(v65, 0LL);\n                      LOBYTE(dword_6974A8) = dword_6974A8 ^ 1;\n                      goto LABEL_166;\n                    }\n                  }\n                  else if ( !strncmp(&src, \"remove\", 5uLL) )\n                  {\n                    v60 = v30;\n                    v6 = v30;\n                    v67 = v12;\n                    v7 = v12;\n                    v8 = v84;\n                    v62 = v85;\n                    v9 = v85;\n                    v10 = v83;\n                    if ( dword_69743C >= 2LL )\n                    {\n                      v68 = dword_69743C-- - 1LL;\n                      xmmword_6916D0[0] = v107[v68];\n                      v64 = v83;\n                      v69 = (char *)&s + 24 * v68;\n                      v8 = v84;\n                      v66 = v67;\n                      sub_4083E0((__int64)v69, 0);\n                      sub_4168E0(v69, 0LL);\n                      v70 = dword_69743C-- - 1LL;\n                      xmmword_6916D0[0] = v107[v70];\n                      v71 = (char *)&s + 24 * v70;\n                      sub_4083E0((__int64)v71, 0);\n                      sub_4168E0(v71, 0LL);\nLABEL_166:\n                      v6 = v60;\n                      v7 = v66;\n                      v9 = v62;\n                      v10 = v64;\n                    }\n                  }\n                  else\n                  {\n                    v34 = strncmp(&src, \"edit\", 4uLL);\n                    v9 = 1;\n                    v6 = 0;\n                    v7 = v12;\n                    v8 = v84;\n                    v10 = v16;\n                    if ( v34 )\n                    {\n                      v35 = src;\n                      if ( v85 && src == 46 )\n                      {\n                        if ( dword_6974F0 == 30 )\n                          dword_6974E4 = 0;\n                        if ( dword_697370 == 114 )\n                          dword_697374 = 0;\n                        dword_697380 = 50;\n                        dword_6973C4 = 0;\n                        dword_69743C = 0;\n                        xmmword_696C40 = 0LL;\n                        xmmword_696C30 = 0LL;\n                        xmmword_696C20 = 0LL;\n                        xmmword_696C10 = 0LL;\n                        xmmword_696C00 = 0LL;\n                        xmmword_696BF0 = 0LL;\n                        xmmword_696BE0 = 0LL;\n                        xmmword_696BD0 = 0LL;\n                        xmmword_696BC0 = 0LL;\n                        xmmword_696BB0 = 0LL;\n                        xmmword_696BA0 = 0LL;\n                        xmmword_696B90 = 0LL;\n                        xmmword_696B80 = 0LL;\n                        xmmword_696B70 = 0LL;\n                        xmmword_696B60 = 0LL;\n                        *(_OWORD *)xmmword_696B50 = 0LL;\n                        sub_415200(v16, v16);\n                        sub_415470(v16, v16);\n                        sub_4168E0(v16, v16);\n                        v6 = v30;\n                        v7 = v31;\n                        v8 = v84;\n                        v9 = 0;\n                        v10 = v16;\n                      }\n                      else if ( v85 && src == 99 )\n                      {\n                        v6 = v30 ^ 1;\n                        v7 = v31;\n                        v8 = v84;\n                        v9 = v85;\n                        v10 = v16;\n                      }\n                      else\n                      {\n                        if ( v85 && src == 35 )\n                        {\n                          sub_417C80(v16, v16, v31, 0LL);\n                          dword_69743C = 0;\n                          goto LABEL_210;\n                        }\n                        if ( v85\n                          && (v72 = __ctype_b_loc(), v73 = *v72, HIBYTE((*v72)[v35]) & 4)\n                          && v73[v92] & 0x400\n                          && v73[v93] & 0x800 )\n                        {\n                          sub_417B90(v30, (unsigned int)v35, (unsigned int)v92);\nLABEL_210:\n                          v6 = v30;\n                          v7 = v31;\n                          v8 = v84;\n                          v9 = v85;\n                          v10 = v16;\n                        }\n                        else\n                        {\n                          if ( !strncmp(&src, \"partner\", 7uLL) )\n                          {\n                            v78 = &v97;\nLABEL_209:\n                            sub_40A1F0(v78);\n                            goto LABEL_210;\n                          }\n                          if ( !strncmp(&src, \"$partner\", 8uLL) )\n                          {\n                            v78 = &v98;\n                            goto LABEL_209;\n                          }\n                          if ( !strncmp(&src, \"ptell\", 5uLL) )\n                          {\n                            sub_40A2E0((__int64)&src);\n                            goto LABEL_210;\n                          }\n                          if ( !strncmp(&src, \"test\", 4uLL) )\n                          {\n                            sub_402C90();\n                            goto LABEL_210;\n                          }\n                          if ( !strncmp(&src, \"st\", 2uLL) )\n                          {\n                            __isoc99_sscanf(&v94, \"%d\", &dword_6973E4);\n                            dword_6973E4 *= 100;\n                            goto LABEL_147;\n                          }\n                          v74 = strncmp(&src, \"result\", 6uLL);\n                          v6 = v30;\n                          v7 = v31;\n                          v8 = v84;\n                          v9 = v85;\n                          v10 = v16;\n                          if ( v74 )\n                          {\n                            if ( !strncmp(&src, \"prove\", 5uLL) )\n                            {\n                              printf(\"\\nMax time to search (s): \", \"prove\");\n                              time0 = rtime(\"\\nMax time to search (s): \", \"prove\");\n                              sub_416DA0(&nptr, 256LL, stdin);\n                              dword_69748C = 100 * (unsigned __int64)strtol(&nptr, 0LL, 10);\n                              putchar(10);\n                              sub_40D2D0(10LL, 0LL);\n                              goto LABEL_147;\n                            }\n                            if ( !strncmp(&src, \"ping\", 4uLL) )\n                            {\n                              __isoc99_sscanf(&v95, \"%d\", &v90);\n                              v79 = v90;\n                              v80 = \"pong %d\\n\";\nLABEL_217:\n                              printf(v80, v79);\n                              goto LABEL_147;\n                            }\n                            v75 = strncmp(&src, \"fritz\", 5uLL);\n                            v7 = 1;\n                            v6 = v30;\n                            v8 = v84;\n                            v9 = v85;\n                            v10 = v16;\n                            if ( v75 )\n                            {\n                              if ( !strncmp(&src, \"reset\", 5uLL) )\n                              {\n                                qword_422640 = qword_422150;\n                                xmmword_422630 = xmmword_422140;\n                                xmmword_422620 = xmmword_422130;\n                                xmmword_422610 = xmmword_422120;\n                                dword_697360 = 2;\n                                sub_416550(&src, \"reset\");\n                                sub_415470(&src, \"reset\");\n                                sub_415200(&src, \"reset\");\n                                sub_4026C0();\n                                dword_6973E4 = 0;\n                                dword_6974A8 = 0;\n                                dword_6973B4 = 0;\n                                dword_69743C = 0;\n                                dword_697384 = 0;\n                                dword_69746C = 2000;\n                                dword_697454 = 2000;\n                                goto LABEL_226;\n                              }\n                              if ( !strncmp(&src, \"setboard\", 8uLL) )\n                              {\n                                sub_402730(&v99);\n                                goto LABEL_147;\n                              }\n                              v6 = v30;\n                              v7 = v31;\n                              v8 = v84;\n                              v9 = v85;\n                              v10 = v16;\n                              if ( v35 != 46 )\n                              {\n                                if ( !strncmp(&src, \"sd\", 2uLL) )\n                                {\n                                  __isoc99_sscanf(&v94, \"%d\", &dword_69742C);\n                                  v79 = (unsigned int)dword_69742C;\n                                  v80 = \"New max depth set to: %d\\n\";\n                                  goto LABEL_217;\n                                }\n                                v76 = strncmp(&src, \"auto\", 4uLL);\n                                v8 = 1;\n                                v6 = v30;\n                                v7 = v31;\n                                v9 = v85;\n                                v10 = v16;\n                                if ( v76 )\n                                {\n                                  if ( !strncmp(&src, \"protover\", 8uLL) )\n                                  {\n                                    puts(\"feature ping=0 setboard=1 playother=0 san=0 usermove=0 time=1\");\n                                    puts(\"feature draw=0 sigint=0 sigterm=0 reuse=1 analyze=0\");\n                                    puts(\"feature myname=\\\"Sjeng SPEC 1.0\\\"\");\n                                    puts(\"feature variants=\\\"normal,bughouse,crazyhouse,suicide,giveaway,losers\\\"\");\n                                    puts(\"feature colors=1 ics=0 name=0 pause=0 done=1\");\n                                    dword_6974F8 = 2;\n                                    goto LABEL_147;\n                                  }\n                                  v77 = strncmp(&src, \"accepted\", 8uLL);\n                                  v6 = v30;\n                                  v7 = v31;\n                                  v8 = v84;\n                                  v9 = v85;\n                                  v10 = v16;\n                                  if ( v77 )\n                                  {\n                                    if ( !strncmp(&src, \"rejected\", 8uLL) )\n                                    {\n                                      puts(\"Interface does not support a required feature...expect trouble.\");\n                                      goto LABEL_147;\n                                    }\n                                    if ( !strcmp(&src, \"help\") )\n                                    {\n                                      printf(\"\\n%s\\n\\n\", asc_4225B0);\n                                      puts(\"diagram/d:       toggle diagram display\");\n                                      puts(\"exit/quit:       terminate Sjeng\");\n                                      puts(\"go:              make Sjeng play the side to move\");\n                                      puts(\"new:             start a new game\");\n                                      puts(\"level <x>:       the xboard style command to set time\");\n                                      puts(\"  <x> should be in the form: <a> <b> <c> where:\");\n                                      puts(\"  a -> moves to TC (0 if using an ICS style TC)\");\n                                      puts(\"  b -> minutes per game\");\n                                      puts(\"  c -> increment in seconds\");\n                                      puts(\"nodes:           outputs the number of nodes searched\");\n                                      puts(\"perft <x>:       compute raw nodes to depth x\");\n                                      puts(\"post:            toggles thinking output\");\n                                      puts(\"xboard:          put Sjeng into xboard mode\");\n                                      puts(\"test:            run an EPD testsuite\");\n                                      puts(\"speed:           test movegen and evaluation speed\");\n                                      puts(\"proof:           try to prove or disprove the current pos\");\n                                      puts(\"sd <x>:          limit thinking to depth x\");\n                                      puts(\"st <x>:          limit thinking to x centiseconds\");\n                                      puts(\"setboard <FEN>:  set board to a specified FEN string\");\n                                      puts(\"undo:            back up a half move\");\n                                      puts(\"remove:          back up a full move\");\n                                      puts(\"force:           disable computer moving\");\n                                      puts(\"auto:            computer plays both sides\");\n                                      printf(\"\\n%s\\n\\n\", asc_4225B0);\n                                      v86 = 0;\nLABEL_147:\n                                      v6 = v30;\n                                      v7 = v31;\n                                      v8 = v84;\n                                      v9 = v85;\n                                      v10 = v16;\n                                    }\n                                    else\n                                    {\n                                      v6 = v30;\n                                      v7 = v31;\n                                      v8 = v84;\n                                      v9 = v85;\n                                      v10 = v16;\n                                      if ( !dword_6974F8 )\n                                      {\n                                        v8 = v84;\n                                        printf(\"Illegal move: %s\\n\", &src, v31, v30);\n                                        v6 = v30;\n                                        v7 = v31;\n                                        v9 = v85;\n                                        v10 = v16;\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    else\n    {\n      v16 = v10;\n      if ( v86 )\n      {\n        putchar(10);\n        sub_416150(stdout);\n      }\n      if ( !v14 )\n      {\n        printf(\"Sjeng: \");\n        goto LABEL_30;\n      }\nLABEL_28:\n      if ( v15 )\n        goto LABEL_36;\nLABEL_31:\n      if ( !(unsigned int)sub_416B20(&src) )\n        goto LABEL_36;\n      if ( (unsigned int)sub_416DF0(&src) )\n      {\n        v18 = dword_69743C;\n        v19 = 3LL * dword_69743C;\n        v109[v19] = v103;\n        *(__int128 *)((char *)&s + 8 * v19) = v102;\n        dword_692990[v18] = dword_6973FC;\n        sub_407B10((__int64)&v102, 0);\n        v20 = dword_69743C++;\n        v107[v20] = xmmword_6916D0[0];\n        sub_4168E0(&v102, 0LL);\n        LOBYTE(dword_6974A8) = dword_6974A8 ^ 1;\n        if ( dword_697380 <= 39 )\n        {\n          if ( dword_697380 )\n            strcat(xmmword_696B50, &src);\n          else\n            strcpy(xmmword_696B50, &src);\n        }\n        ++dword_697380;\n        v6 = v13;\n        v7 = v12;\n        v8 = v14;\n        v9 = 0;\n        v10 = v16;\n        if ( v86 )\n        {\n          v8 = v14;\n          putchar(10);\n          sub_416150(stdout);\n          v6 = v13;\n          v7 = v12;\n          v9 = 0;\n          v10 = v16;\n        }\n      }\n      else\n      {\n        v9 = 0;\n        printf(\"Illegal move: %s\\n\", &src);\n        v6 = v13;\n        v7 = v12;\n        v8 = v14;\n        v10 = v16;\n      }\n    }\n  }\n  HIDWORD(qword_697414) = 0;\n  sub_410B50((__int64)&v100, v10);\n  v89 = v101;\n  v88 = v100;\n  dword_697484 = 0;\n  if ( dword_697450 && !dword_69744C )\n  {\nLABEL_19:\n    v14 = v8;\nLABEL_116:\n    v10 = (unsigned int)v10;\n    goto LABEL_10;\n  }\n  v36 = dword_697360;\n  v37 = dword_697360 - 3;\n  if ( (unsigned int)(dword_697360 - 3) <= 1 )\n  {\n    v37 = dword_6974A4 | 1;\n    if ( (dword_6974A4 | 1) != 3 )\n    {\nLABEL_81:\n      if ( dword_6974A4 != 1 )\n      {\n        if ( dword_6974A4 == 4 )\n        {\nLABEL_112:\n          v47 = \"1/2-1/2 {Fifty move rule}\";\n        }\n        else\n        {\n          if ( dword_6974A4 != 5 )\n            goto LABEL_84;\nLABEL_113:\n          v47 = \"1/2-1/2 {3 fold repetition}\";\n        }\nLABEL_115:\n        puts(v47);\n        v14 = 0;\n        goto LABEL_116;\n      }\nLABEL_111:\n      v47 = \"1/2-1/2 {Draw}\";\n      goto LABEL_115;\n    }\n  }\n  if ( (unsigned int)dword_697360 <= 2 )\n  {\n    v36 = dword_6973B4;\n    if ( dword_6974A4 != 2 && dword_6973B4 == 1 )\n      goto LABEL_81;\n    if ( !dword_6973B4 )\n    {\n      switch ( dword_6974A4 )\n      {\n        case 1:\n          goto LABEL_111;\n        case 3:\nLABEL_114:\n          v47 = \"1-0 {White Mates}\";\n          goto LABEL_115;\n        case 4:\n          goto LABEL_112;\n        case 5:\n          goto LABEL_113;\n        default:\n          break;\n      }\nLABEL_84:\n      v82 = v89;\n      v81 = v88;\n      sub_416060((unsigned __int64)&v105, v10, v37, v36);\n      v38 = dword_69743C;\n      dword_692990[v38] = dword_6973FC;\n      v39 = 3 * v38;\n      v109[v39] = v89;\n      *(__int128 *)((char *)&s + 8 * v39) = v88;\n      sub_407B10((__int64)&v88, 0);\n      v40 = dword_69743C++;\n      v107[v40] = xmmword_6916D0[0];\n      dword_6974E0 = 0;\n      --dword_69744C;\n      v41 = sub_402570();\n      v42 = 5;\n      if ( v41 || (v42 = 4, dword_6973E0 >= 101) )\n        dword_6974A4 = v42;\n      LOBYTE(dword_6974A8) = dword_6974A8 ^ 1;\n      sub_4168E0(&v88, 0LL);\n      if ( dword_697380 <= 39 )\n      {\n        if ( dword_697380 )\n          strcat(xmmword_696B50, &v105);\n        else\n          strcpy(xmmword_696B50, &v105);\n      }\n      ++dword_697380;\n      printf(\n        \"\\nNodes: %i (%0.2f%% qnodes)\\n\",\n        (float)((float)((float)dword_697494 / (float)dword_697460) * 100.0),\n        v81,\n        v82);\n      printf(\n        \"ECacheProbes : %u   ECacheHits : %u   HitRate : %f%%\\n\",\n        (float)((float)((float)dword_697318 / (float)((float)dword_69731C + 1.0)) * 100.0));\n      printf(\n        \"TTStores : %u TTProbes : %u   TTHits : %u   HitRate : %f%%\\n\",\n        (unsigned int)dword_69735C,\n        (float)((float)((float)dword_697350 / (float)((float)dword_697354 + 1.0)) * 100.0));\n      printf(\n        \"NTries : %u  NCuts : %u  CutRate : %f%%  TExt: %u\\n\",\n        (unsigned int)dword_69733C,\n        (unsigned int)dword_697338,\n        (unsigned int)dword_69734C,\n        (float)((float)((float)dword_697338 * 100.0) / (float)((float)dword_69733C + 1.0)));\n      printf(\n        \"Check extensions: %u  Razor drops : %u  Razor Material : %u\\n\",\n        (unsigned int)dword_6973C8,\n        (unsigned int)dword_69749C,\n        (unsigned int)dword_6974A0);\n      LODWORD(v49) = printf(\n                       \"Move ordering : %f%%\\n\",\n                       (float)((float)((float)dword_697328 * 100.0) / (float)(dword_697324 + 1)));\n      v50 = dword_697334;\n      v51 = sub_403300(v49);\n      printf(\n        \"Material score: %d   Eval : %d  MaxPosDiff: %d  White hand: %d  Black hand : %d\\n\",\n        v50,\n        v51,\n        (unsigned int)dword_697434,\n        (unsigned int)dword_6974E8,\n        (unsigned int)dword_697378);\n      printf(\"Hash : %X  HoldHash : %X\\n\", (unsigned int)dword_6973FC, (unsigned int)dword_697408);\n      if ( dword_6974A4 )\n      {\n        if ( dword_6974F8 )\n        {\n          v15 = v9;\n          if ( (_QWORD)v88 != (_QWORD)xmmword_422668 )\n          {\n            v52 = \"move %s\\n\";\n            goto LABEL_129;\n          }\n        }\n        else\n        {\n          v15 = v9;\n          if ( (_QWORD)v88 != (_QWORD)xmmword_422668 )\n          {\n            v52 = \"\\n%s\\n\";\nLABEL_129:\n            printf(v52, &v105);\n          }\n        }\n        switch ( dword_6974A4 )\n        {\n          case 2:\n            v53 = \"0-1 {Black Mates}\";\n            break;\n          case 3:\n            v53 = \"1-0 {White Mates}\";\n            break;\n          case 4:\n            v53 = \"1/2-1/2 {Fifty move rule}\";\n            break;\n          case 5:\n            v53 = \"1/2-1/2 {3 fold repetition}\";\n            break;\n          default:\n            v53 = \"1/2-1/2 {Draw}\";\n            break;\n        }\n        puts(v53);\n        v14 = 0;\n        v10 = (unsigned int)v10;\n        goto LABEL_11;\n      }\n      if ( dword_6974F8 )\n      {\n        if ( (_QWORD)v88 != (_QWORD)xmmword_422668 )\n          printf(\"move %s\\n\", &v105);\n        if ( dword_697360 == 1 )\n        {\n          sub_40B000(0);\n          v14 = v8;\n          goto LABEL_116;\n        }\n      }\n      else if ( (_QWORD)v88 != (_QWORD)xmmword_422668 )\n      {\n        printf(\"\\n%s\\n\", &v105);\n        v14 = v8;\n        goto LABEL_116;\n      }\n      goto LABEL_19;\n    }\n  }\n  switch ( dword_6974A4 )\n  {\n    case 2:\n      v47 = \"0-1 {Black Mates}\";\n      goto LABEL_115;\n    case 3:\n      goto LABEL_114;\n    case 4:\n      goto LABEL_112;\n    case 5:\n      goto LABEL_113;\n    default:\n      goto LABEL_111;\n  }\n  goto LABEL_111;\n}\n", 
            "funcStartAddr": "0x413490L", 
            "funcEndAddr": "0x4151f9L", 
            "funcName": "main"
        }, 
        {
            "decompiledFuncCode": "void *sub_415200()\n{\n  memset(qword_6972D0, 0, 20LL * dword_697358);\n  memset(qword_6972C8, 0, 20LL * dword_697358);\n  return memset(qword_6972E0, 0, 16LL * dword_697358);\n}\n", 
            "funcStartAddr": "0x415200L", 
            "funcEndAddr": "0x415255L", 
            "funcName": "sub_415200"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_415280()\n{\n  signed __int64 v0; // rbx\n  signed __int64 v1; // rbx\n  signed __int64 v2; // rbx\n  signed __int64 v3; // rbx\n  signed __int64 v4; // rbx\n  signed __int64 v5; // rbx\n  signed __int64 v6; // rbx\n  signed __int64 v7; // rbx\n  signed __int64 v8; // rbx\n  signed __int64 v9; // rbx\n  signed __int64 v10; // rbx\n  signed __int64 v11; // rbx\n  signed __int64 v12; // rbx\n  signed __int64 v13; // rbx\n  __int64 result; // rax\n\n  sub_417EE0(31657LL);\n  v0 = 4611686018427387760LL;\n  do\n  {\n    dword_688910[v0] = sub_418170();\n    ++v0;\n  }\n  while ( v0 * 4 );\n  v1 = 4611686018427387760LL;\n  do\n  {\n    dword_688B50[v1] = sub_418170();\n    ++v1;\n  }\n  while ( v1 * 4 );\n  v2 = 4611686018427387760LL;\n  do\n  {\n    dword_688D90[v2] = sub_418170();\n    ++v2;\n  }\n  while ( v2 * 4 );\n  v3 = 4611686018427387760LL;\n  do\n  {\n    dword_688FD0[v3] = sub_418170();\n    ++v3;\n  }\n  while ( v3 * 4 );\n  v4 = 4611686018427387760LL;\n  do\n  {\n    dword_689210[v4] = sub_418170();\n    ++v4;\n  }\n  while ( v4 * 4 );\n  v5 = 4611686018427387760LL;\n  do\n  {\n    dword_689450[v5] = sub_418170();\n    ++v5;\n  }\n  while ( v5 * 4 );\n  v6 = 4611686018427387760LL;\n  do\n  {\n    dword_689690[v6] = sub_418170();\n    ++v6;\n  }\n  while ( v6 * 4 );\n  v7 = 4611686018427387760LL;\n  do\n  {\n    dword_6898D0[v7] = sub_418170();\n    ++v7;\n  }\n  while ( v7 * 4 );\n  v8 = 4611686018427387760LL;\n  do\n  {\n    dword_689B10[v8] = sub_418170();\n    ++v8;\n  }\n  while ( v8 * 4 );\n  v9 = 4611686018427387760LL;\n  do\n  {\n    dword_689D50[v9] = sub_418170();\n    ++v9;\n  }\n  while ( v9 * 4 );\n  v10 = 4611686018427387760LL;\n  do\n  {\n    dword_689F90[v10] = sub_418170();\n    ++v10;\n  }\n  while ( v10 * 4 );\n  v11 = 4611686018427387760LL;\n  do\n  {\n    dword_68A1D0[v11] = sub_418170();\n    ++v11;\n  }\n  while ( v11 * 4 );\n  v12 = 4611686018427387760LL;\n  do\n  {\n    dword_68A410[v12] = sub_418170();\n    ++v12;\n  }\n  while ( v12 * 4 );\n  v13 = -576LL;\n  do\n  {\n    result = sub_418170();\n    *(_DWORD *)((char *)&xmmword_68A650 + v13) = result;\n    v13 += 4LL;\n  }\n  while ( v13 );\n  dword_6973FC = -559038737;\n  dword_697408 = -1056969216;\n  return result;\n}\n", 
            "funcStartAddr": "0x415280L", 
            "funcEndAddr": "0x415467L", 
            "funcName": "sub_415280"
        }, 
        {
            "decompiledFuncCode": "signed __int64 sub_415470()\n{\n  signed __int64 result; // rax\n  signed __int64 v1; // rcx\n  __int64 v2; // rdx\n  __int64 v3; // rdx\n  __int64 v4; // rdx\n\n  dword_6973FC = -559038737;\n  result = 3735928559LL;\n  v1 = 4611686018427387760LL;\n  do\n  {\n    while ( 1 )\n    {\n      v2 = dword_6962B0[v1];\n      if ( dword_6962B0[v1] && (_DWORD)v2 != 13 )\n      {\n        result = dword_688910[144 * v2 + v1] ^ (unsigned int)result;\n        dword_6973FC = result;\n      }\n      v3 = dword_6962B4[v1];\n      if ( dword_6962B4[v1] && (_DWORD)v3 != 13 )\n      {\n        result = dword_688914[144 * v3 + v1] ^ (unsigned int)result;\n        dword_6973FC = result;\n      }\n      v4 = dword_6962B8[v1];\n      if ( dword_6962B8[v1] )\n      {\n        if ( (_DWORD)v4 != 13 )\n          break;\n      }\n      v1 += 3LL;\n      if ( !(v1 * 4) )\n        goto LABEL_13;\n    }\n    result = dword_688918[144 * v4 + v1] ^ (unsigned int)result;\n    dword_6973FC = result;\n    v1 += 3LL;\n  }\n  while ( v1 * 4 );\nLABEL_13:\n  dword_697408 = -1056969216;\n  return result;\n}\n", 
            "funcStartAddr": "0x415470L", 
            "funcEndAddr": "0x41552aL", 
            "funcName": "sub_415470"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_415530(int a1, int a2, int a3, __int16 a4)\n{\n  int v4; // er8\n  int v5; // er9\n  unsigned int v6; // edx\n  __int64 v7; // rax\n  _BYTE *v8; // rsi\n  _BYTE *v9; // rdx\n  signed __int64 result; // rax\n\n  v4 = a3;\n  ++dword_69735C;\n  v5 = dword_6973FC;\n  v6 = dword_6973FC % (unsigned int)dword_697358;\n  if ( a1 <= a2 )\n  {\n    v8 = qword_6972E0;\n    v7 = v6;\n    *((_BYTE *)qword_6972E0 + 16 * v6 + 1) = 1;\n  }\n  else\n  {\n    v7 = v6;\n    v8 = qword_6972E0;\n    v9 = (char *)qword_6972E0 + 16 * v6 + 1;\n    if ( a1 >= v4 )\n      *v9 = 2;\n    else\n      *v9 = 3;\n  }\n  result = 16 * v7;\n  *(_DWORD *)&v8[result + 4] = v5;\n  *(_DWORD *)&v8[result + 8] = dword_697408;\n  *(_WORD *)&v8[result + 2] = a4;\n  *(_DWORD *)&v8[result + 12] = a1;\n  v8[result] = dword_6974EC == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x415530L", 
            "funcEndAddr": "0x4155b3L", 
            "funcName": "sub_415530"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4155C0(signed int a1, signed int a2, signed int a3, __int16 a4, char a5, int a6)\n{\n  signed int v6; // er10\n  int v7; // er11\n  __int64 v8; // rdx\n  _DWORD *v9; // rbx\n  signed __int64 result; // rax\n  int v11; // edx\n  _BYTE *v12; // rsi\n  _BYTE *v13; // rdx\n\n  ++dword_69735C;\n  v6 = a3;\n  v7 = dword_6973FC;\n  v8 = dword_6973FC % (unsigned int)dword_697358;\n  v9 = qword_6972D0;\n  result = 5 * v8;\n  v11 = *((char *)qword_6972D0 + 20 * (unsigned int)v8);\n  if ( v11 < a6 )\n    goto LABEL_38;\n  if ( v11 != a6 )\n    goto LABEL_13;\n  if ( a1 > a2 && *((_BYTE *)qword_6972D0 + 4 * result + 3) == 1 )\n  {\nLABEL_38:\n    if ( !HIDWORD(qword_697414) )\n    {\nLABEL_3:\n      if ( a1 <= a2 )\n      {\n        *((_BYTE *)qword_6972D0 + 4 * result + 3) = 1;\n        if ( a1 <= -999501 )\n          a1 = -999500;\n      }\n      else\n      {\n        v12 = (char *)qword_6972D0 + 4 * result + 3;\n        if ( a1 >= v6 )\n        {\n          *v12 = 2;\n          if ( a1 >= 999501 )\n            a1 = 999500;\n        }\n        else\n        {\n          *v12 = 3;\n          if ( a1 < 999501 )\n          {\n            if ( a1 <= -999501 )\n              a1 -= dword_697484;\n          }\n          else\n          {\n            a1 += dword_697484;\n          }\n        }\n      }\n      v9[result + 2] = v7;\n      v9[result + 3] = dword_697408;\n      LOBYTE(v9[result]) = a6;\n      goto LABEL_35;\n    }\n  }\n  else if ( a1 > a2 && a1 < v6 && !HIDWORD(qword_697414) )\n  {\n    goto LABEL_3;\n  }\nLABEL_13:\n  if ( a1 <= a2 )\n  {\n    v9 = qword_6972C8;\n    *((_BYTE *)qword_6972C8 + 4 * result + 3) = 1;\n    if ( a1 <= -999501 )\n      a1 = -999500;\n  }\n  else\n  {\n    v9 = qword_6972C8;\n    v13 = (char *)qword_6972C8 + 4 * result + 3;\n    if ( a1 >= v6 )\n    {\n      *v13 = 2;\n      if ( a1 >= 999501 )\n        a1 = 999500;\n    }\n    else\n    {\n      *v13 = 3;\n      if ( a1 < 999501 )\n      {\n        if ( a1 <= -999501 )\n          a1 -= dword_697484;\n      }\n      else\n      {\n        a1 += dword_697484;\n      }\n    }\n  }\n  v9[result + 2] = v7;\n  v9[result + 3] = dword_697408;\n  LOBYTE(v9[result]) = a6;\nLABEL_35:\n  LOWORD(v9[result + 1]) = a4;\n  v9[result + 4] = a1;\n  BYTE1(v9[result]) = dword_6974EC == 0;\n  BYTE2(v9[result]) = a5;\n  return result;\n}\n", 
            "funcStartAddr": "0x4155c0L", 
            "funcEndAddr": "0x415732L", 
            "funcName": "sub_4155C0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4157A0(signed int *a1, int a2, _DWORD *a3, unsigned int *a4, _DWORD *a5, int a6)\n{\n  _DWORD *v6; // r10\n  _DWORD *v7; // rbx\n  signed __int64 v8; // rdx\n  signed __int64 result; // rax\n  int v10; // er11\n  unsigned int v11; // er8\n  signed int v12; // esi\n  int v13; // esi\n\n  *a5 = 1;\n  ++dword_697354;\n  v6 = a3;\n  v7 = qword_6972D0;\n  v8 = 5LL * (dword_6973FC % (unsigned int)dword_697358);\n  if ( *((_DWORD *)qword_6972D0 + 5 * (dword_6973FC % (unsigned int)dword_697358) + 2) == dword_6973FC\n    && *((_DWORD *)qword_6972D0 + 5 * (dword_6973FC % (unsigned int)dword_697358) + 3) == dword_697408\n    && *((_BYTE *)qword_6972D0 + 20 * (dword_6973FC % (unsigned int)dword_697358) + 1) == (dword_6974EC == 0)\n    || (v7 = qword_6972C8,\n        result = 4LL,\n        *((_DWORD *)qword_6972C8 + 5 * (dword_6973FC % (unsigned int)dword_697358) + 2) == dword_6973FC)\n    && *((_DWORD *)qword_6972C8 + 5 * (dword_6973FC % (unsigned int)dword_697358) + 3) == dword_697408\n    && *((_BYTE *)qword_6972C8 + 20 * (dword_6973FC % (unsigned int)dword_697358) + 1) == (dword_6974EC == 0) )\n  {\n    ++dword_697350;\n    result = (unsigned int)SHIBYTE(v7[5 * (dword_6973FC % (unsigned int)dword_697358)]);\n    if ( (_DWORD)result == 1 )\n    {\n      v10 = SLOBYTE(v7[5 * (dword_6973FC % (unsigned int)dword_697358)]);\n      if ( a6 - 3 <= v10 && v7[5 * (dword_6973FC % (unsigned int)dword_697358) + 4] < a2 )\n        *a5 = 0;\n    }\n    else\n    {\n      v10 = SLOBYTE(v7[5 * (dword_6973FC % (unsigned int)dword_697358)]);\n    }\n    v11 = SBYTE2(v7[v8]);\n    if ( a6 - ((v11 < 1) - 1) > v10 )\n    {\n      *v6 = LOWORD(v7[v8 + 1]);\n      *a4 = v11;\n      return 0LL;\n    }\n    v12 = v7[v8 + 4];\n    *a1 = v12;\n    if ( v12 < 999501 )\n    {\n      if ( v12 > -999501 )\n      {\nLABEL_19:\n        *v6 = LOWORD(v7[v8 + 1]);\n        *a4 = v11;\n        return result;\n      }\n      v13 = dword_697484 + v12;\n    }\n    else\n    {\n      v13 = v12 - dword_697484;\n    }\n    *a1 = v13;\n    goto LABEL_19;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4157a0L", 
            "funcEndAddr": "0x4158c5L", 
            "funcName": "sub_4157A0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4158D0(_DWORD *a1, _DWORD *a2)\n{\n  char *v2; // r8\n  signed __int64 v3; // rdx\n  signed __int64 result; // rax\n\n  ++dword_697354;\n  v2 = (char *)qword_6972E0;\n  v3 = 16LL * (dword_6973FC % (unsigned int)dword_697358);\n  result = 4LL;\n  if ( *(_DWORD *)((char *)qword_6972E0 + v3 + 4) == dword_6973FC\n    && *(_DWORD *)((char *)qword_6972E0 + v3 + 8) == dword_697408\n    && *((_BYTE *)qword_6972E0 + v3) == (dword_6974EC == 0) )\n  {\n    ++dword_697350;\n    *a1 = *(_DWORD *)((char *)qword_6972E0 + v3 + 12);\n    *a2 = *(unsigned __int16 *)&v2[v3 + 2];\n    result = (unsigned int)v2[v3 + 1];\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4158d0L", 
            "funcEndAddr": "0x41593eL", 
            "funcName": "sub_4158D0"
        }, 
        {
            "decompiledFuncCode": "void *sub_415940()\n{\n  __int64 v0; // rbx\n  size_t v1; // r14\n  void *v2; // rax\n  void *v3; // r15\n  void *v4; // rax\n  void *v5; // r14\n  void *result; // rax\n\n  v0 = dword_697358;\n  v1 = 20LL * dword_697358;\n  v2 = malloc(20LL * dword_697358);\n  v3 = v2;\n  qword_6972C8 = v2;\n  v4 = malloc(v1);\n  v5 = v4;\n  qword_6972D0 = v4;\n  result = malloc(16 * v0);\n  qword_6972E0 = result;\n  if ( !v3 || !v5 || !result )\n  {\n    puts(\"Out of memory allocating hashtables.\");\n    exit(1);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x415940L", 
            "funcEndAddr": "0x4159b8L", 
            "funcName": "sub_415940"
        }, 
        {
            "decompiledFuncCode": "void sub_4159C0()\n{\n  free(qword_6972C8);\n  free(qword_6972D0);\n  free(qword_6972E0);\n}\n", 
            "funcStartAddr": "0x4159c0L", 
            "funcEndAddr": "0x4159e6L", 
            "funcName": "sub_4159C0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_4159F0()\n{\n  double v0; // xmm1_8\n  double v1; // xmm0_8\n  double v3; // xmm1_8\n  double v4; // xmm2_8\n  double v5; // xmm0_8\n  double v6; // xmm1_8\n  __int64 v7; // rsi\n  __m128d v8; // xmm2\n  double v9; // xmm1_8\n  __m128d v10; // xmm1\n  double v11; // xmm2_8\n  double v12; // xmm0_8\n  double v13; // xmm0_8\n  double v14; // xmm1_8\n  double v15; // xmm0_8\n  double v16; // xmm2_8\n\n  if ( !dword_697444 )\n  {\n    if ( (dword_697438 > 5 || dword_697410)\n      && (double)(6000 * dword_697438 + 100 * dword_6974B4) * 4.0 / 5.0 <= (double)dword_6974C8 )\n    {\n      v5 = 20.0;\n    }\n    else\n    {\n      v3 = (double)dword_697470;\n      v4 = (double)(dword_697470 - dword_6974C8);\n      if ( dword_6974F8 && v4 > v3 / 5.0 )\n      {\n        v5 = 40.0;\n      }\n      else if ( dword_6974F8 && v4 > v3 / 10.0 )\n      {\n        v5 = 30.0;\n      }\n      else\n      {\n        v5 = 20.0;\n        v6 = v3 / 20.0;\n        v7 = 0LL;\n        if ( dword_6974F8 )\n        {\n          LOBYTE(v7) = v4 > v6;\n          v5 = qword_41EA18[v7];\n        }\n      }\n    }\n    if ( (unsigned int)(dword_697360 - 3) < 2 )\n    {\n      if ( dword_697360 == 4 )\n      {\n        v5 = v5 + -5.0;\n        goto LABEL_26;\n      }\n      if ( dword_697360 != 3 )\n        goto LABEL_26;\n    }\n    else\n    {\n      v8.m128d_f64[0] = (double)(dword_6974C8 - dword_697470);\n      v9 = (double)dword_6974C8;\n      if ( !dword_6974F8 || v8.m128d_f64[0] <= v9 / 5.0 )\n      {\n        if ( dword_6974F8 )\n        {\n          v10.m128d_f64[0] = v9 / 10.0;\n          *(_QWORD *)&v10.m128d_f64[0] = (unsigned __int128)_mm_cmplt_sd(v10, v8);\n          *(_QWORD *)&v5 = ~*(_QWORD *)&v10.m128d_f64[0] & *(_QWORD *)&v5 | COERCE_UNSIGNED_INT64(v5 + -5.0) & *(_QWORD *)&v10.m128d_f64[0];\n        }\nLABEL_26:\n        v0 = (double)dword_6974C8 / v5;\n        if ( dword_697410 )\n        {\n          v11 = (double)dword_6974C8 - v0;\n          v12 = (double)dword_697410;\n          if ( v11 - (double)dword_697410 > 500.0 )\n          {\n            v0 = v0 + v12;\n            if ( dword_697360 != 1 )\n              return (unsigned int)(signed int)v0;\n            goto LABEL_33;\n          }\n          v13 = (v12 + v12) / 3.0;\n          if ( v11 - v13 > 100.0 )\n            v0 = v0 + v13;\n        }\n        goto LABEL_32;\n      }\n    }\n    v5 = v5 + -10.0;\n    goto LABEL_26;\n  }\n  v0 = ((float)dword_6974B4 * 100.0 + (float)dword_697438 * 6000.0) / (float)dword_697444 + -100.0;\n  if ( !dword_6974B8 )\n  {\nLABEL_32:\n    if ( dword_697360 != 1 )\n      return (unsigned int)(signed int)v0;\n    goto LABEL_33;\n  }\n  v1 = (double)dword_6974B8 * 2.1 / 3.0;\n  v0 = v0 + v1;\n  dword_6974B8 -= (signed int)v1;\n  if ( dword_697360 != 1 )\n    return (unsigned int)(signed int)v0;\nLABEL_33:\n  v14 = v0 * 0.25;\n  v15 = 0.5 * v14;\n  v16 = 0.5 * v14;\n  if ( dword_697470 <= dword_6974C8 )\n    v16 = v14;\n  if ( dword_697470 >= 1500 )\n    v15 = v16;\n  return (unsigned int)(signed int)v15;\n}\n", 
            "funcStartAddr": "0x4159f0L", 
            "funcEndAddr": "0x415c8bL", 
            "funcName": "sub_4159F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_415C90@<rax>(char *s@<rdi>, __int64 a2, __int64 a3, __int64 a4)\n{\n  char *v4; // r15\n  __int64 v5; // rbx\n  char v6; // r12\n  unsigned int v7; // er10\n  __int64 v8; // rdx\n  __int64 v9; // rcx\n  const char *v10; // rsi\n  __int64 v11; // r8\n  int v12; // er12\n  signed __int16 v13; // r14\n  int v14; // ebp\n  int v15; // ebx\n  __int64 v17; // r14\n  __int64 v18; // r15\n  char *v19; // r13\n  __int64 v20; // rax\n  int v21; // ebx\n  int v22; // eax\n  int v23; // ecx\n  __int64 v24; // rdx\n  __int64 v25; // rcx\n  __int64 v26; // r8\n  const char *v27; // rsi\n  __int64 v28; // r8\n  const char *v29; // rsi\n  char v30; // [rsp+Bh] [rbp-604Dh]\n  unsigned int v31; // [rsp+Ch] [rbp-604Ch]\n  unsigned int v32; // [rsp+18h] [rbp-6040h]\n  int v33; // [rsp+1Ch] [rbp-603Ch]\n  char v34; // [rsp+20h] [rbp-6038h]\n  char v35; // [rsp+3020h] [rbp-3038h]\n\n  v4 = s;\n  v5 = (signed int)a2;\n  v6 = LOBYTE(dword_41A8E0[SHIDWORD(a2)]) + 96;\n  v7 = dword_41AB20[SHIDWORD(a2)];\n  if ( !(_DWORD)a2 )\n  {\n    v8 = (unsigned int)dword_41EBA0[SHIDWORD(a3)];\n    v9 = (unsigned int)v6;\n    v10 = \"%c@%c%d\";\nLABEL_13:\n    v11 = v7;\nLABEL_14:\n    sprintf(s, v10, v8, v9, v11);\n    goto LABEL_15;\n  }\n  if ( (unsigned int)(dword_696070[(signed int)a2] - 1) > 1 )\n  {\n    if ( (_DWORD)a4 )\n    {\n      if ( (_DWORD)a4 != 3 && (_DWORD)a4 != 1 )\n      {\n        *((_WORD *)s + 2) = 79;\n        *(_DWORD *)s = 760163663;\n      }\n      else\n      {\n        *(_DWORD *)s = (_DWORD)&unk_4F2D4F;\n      }\n      goto LABEL_15;\n    }\n    v30 = LOBYTE(dword_41A8E0[(signed int)a2]) + 96;\n    v31 = dword_41AB20[SHIDWORD(a2)];\n    sub_405540((__int64)&v34);\n    v17 = dword_697468;\n    v33 = sub_406E60();\n    if ( v17 <= 0 )\n    {\nLABEL_33:\n      v8 = (unsigned int)dword_41EBA0[dword_696070[(signed int)a2]];\n      v9 = (unsigned int)v6;\n      if ( dword_696070[SHIDWORD(a2)] == 13 )\n        v10 = \"%c%c%d\";\n      else\n        v10 = \"%cx%c%d\";\n      v4 = s;\n      v11 = v31;\n      goto LABEL_14;\n    }\n    v32 = dword_41AB20[v5];\n    v18 = 0LL;\n    v19 = &v34;\n    while ( 1 )\n    {\n      if ( *((_DWORD *)v19 + 1) == HIDWORD(a2) )\n      {\n        v20 = *(signed int *)v19;\n        if ( (_DWORD)v20 != (_DWORD)a2 && dword_696070[v20] == dword_696070[(signed int)a2] )\n        {\n          sub_407B10((__int64)&v34, v18);\n          v21 = sub_404CA0((__int64)&v34, v18, v33);\n          sub_4083E0((__int64)&v34, v18);\n          if ( v21 )\n            break;\n        }\n      }\n      ++v18;\n      v19 += 24;\n      if ( v18 >= v17 )\n        goto LABEL_33;\n    }\n    v22 = dword_41A8E0[*(signed int *)v19];\n    v23 = dword_41A8E0[(signed int)a2];\n    v24 = (unsigned int)dword_41EBA0[dword_696070[(signed int)a2]];\n    v4 = s;\n    if ( dword_696070[SHIDWORD(a2)] == 13 )\n    {\n      if ( v22 != v23 )\n      {\n        v25 = (unsigned int)v30;\n        v26 = (unsigned int)v6;\n        v27 = \"%c%c%c%d\";\nLABEL_46:\n        sprintf(s, v27, v24, v25, v26, v31);\n        goto LABEL_15;\n      }\n      v28 = (unsigned int)v6;\n      v29 = \"%c%d%c%d\";\n    }\n    else\n    {\n      if ( v22 != v23 )\n      {\n        v25 = (unsigned int)v30;\n        v26 = (unsigned int)v6;\n        v27 = \"%c%cx%c%d\";\n        goto LABEL_46;\n      }\n      v28 = (unsigned int)v6;\n      v29 = \"%c%dx%c%d\";\n    }\n    sprintf(s, v29, v24, v32, v28, v31);\n    goto LABEL_15;\n  }\n  if ( dword_696070[SHIDWORD(a2)] != 13 || HIDWORD(a4) )\n  {\n    v8 = (unsigned int)(char)(LOBYTE(dword_41A8E0[(signed int)a2]) + 96);\n    v9 = (unsigned int)v6;\n    if ( HIDWORD(a3) )\n    {\n      sprintf(s, \"%cx%c%d=%c\", v8, v9, v7, (unsigned int)dword_41EBA0[SHIDWORD(a3)]);\n      goto LABEL_15;\n    }\n    v10 = \"%cx%c%d\";\n    goto LABEL_13;\n  }\n  v8 = (unsigned int)v6;\n  if ( HIDWORD(a3) )\n  {\n    v11 = (unsigned int)dword_41EBA0[SHIDWORD(a3)];\n    v10 = \"%c%d=%c\";\n    v9 = v7;\n    goto LABEL_14;\n  }\n  sprintf(s, \"%c%d\", v8, v7);\nLABEL_15:\n  sub_407B10((__int64)&a2, 0);\n  if ( (unsigned int)sub_404CA0((__int64)&a2, 0, 1) )\n  {\n    if ( (unsigned int)sub_406E60() )\n    {\n      sub_405540((__int64)&v35);\n      v12 = dword_697468;\n      v13 = 35;\n      if ( dword_697468 > 0 )\n      {\n        v14 = 0;\n        while ( 1 )\n        {\n          sub_407B10((__int64)&v35, v14);\n          v15 = sub_404CA0((__int64)&v35, v14, 1);\n          sub_4083E0((__int64)&v35, v14);\n          if ( v15 )\n            break;\n          if ( ++v14 >= v12 )\n            goto LABEL_24;\n        }\n        v13 = 43;\n      }\nLABEL_24:\n      *(_WORD *)&v4[strlen(v4)] = v13;\n    }\n  }\n  else\n  {\n    v4[4] = 0;\n    *(_DWORD *)v4 = 1735158889;\n  }\n  return sub_4083E0((__int64)&a2, 0);\n}\n", 
            "funcStartAddr": "0x415c90L", 
            "funcEndAddr": "0x41605aL", 
            "funcName": "sub_415C90"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_416060(char *a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6, __int64 a7, __int64 a8)\n{\n  char v8; // al\n  __int64 v9; // r9\n  char v10; // dl\n  __int64 v11; // rcx\n  int result; // eax\n  __int64 v13; // rdx\n  __int64 v14; // r8\n\n  v8 = LOBYTE(dword_41A8E0[SHIDWORD(a7)]) + 96;\n  v9 = (unsigned int)dword_41AB20[SHIDWORD(a7)];\n  if ( !(_DWORD)a7 )\n    return sprintf(a1, \"%c@%c%d\", (unsigned int)dword_41EBE0[SHIDWORD(a8)], (unsigned int)v8, (unsigned int)v9);\n  v10 = LOBYTE(dword_41A8E0[(signed int)a7]) + 96;\n  v11 = (unsigned int)dword_41AB20[(signed int)a7];\n  if ( !HIDWORD(a8) )\n    return sprintf(a1, \"%c%d%c%d\", (unsigned int)v10, v11, (unsigned int)v8, v9);\n  if ( (unsigned int)(HIDWORD(a8) - 3) <= 1 )\n    return sprintf(a1, \"%c%d%c%dn\", (unsigned int)v10, v11, (unsigned int)v8, v9);\n  if ( (unsigned int)(HIDWORD(a8) - 7) <= 1 )\n    return sprintf(a1, \"%c%d%c%dr\", (unsigned int)v10, v11, (unsigned int)v8, v9);\n  if ( (unsigned int)(HIDWORD(a8) - 11) <= 1 )\n    return sprintf(a1, \"%c%d%c%db\", (unsigned int)v10, v11, (unsigned int)v8, v9);\n  v13 = (unsigned int)v10;\n  v14 = (unsigned int)v8;\n  if ( (unsigned int)(HIDWORD(a8) - 5) > 1 )\n    result = sprintf(a1, \"%c%d%c%dq\", v13, v11, v14, v9);\n  else\n    result = sprintf(a1, \"%c%d%c%dk\", v13, v11, v14, v9);\n  return result;\n}\n", 
            "funcStartAddr": "0x416060L", 
            "funcEndAddr": "0x416145L", 
            "funcName": "sub_416060"
        }, 
        {
            "decompiledFuncCode": "size_t __fastcall sub_416150(FILE *s, char a2)\n{\n  FILE *v2; // rbx\n  unsigned int v3; // er14\n  signed __int64 v4; // rbp\n  __int64 v5; // rax\n  __int64 v6; // rax\n  __int64 v7; // rax\n  __int64 v8; // rax\n  __int64 v9; // rax\n  __int64 v10; // rax\n  __int64 v11; // rax\n  __int64 v12; // rax\n  __int64 v13; // rax\n  __int64 v14; // rax\n  __int64 v15; // rax\n  const char *v16; // rdi\n  signed __int64 v17; // r14\n  signed int *v18; // rbp\n  __int64 v19; // rax\n  __int64 v20; // rax\n  __int64 v21; // rax\n  __int64 v22; // rax\n  __int64 v23; // rax\n  __int64 v24; // rax\n  __int64 v25; // rax\n  __int64 v26; // rax\n  __int64 v27; // rax\n  __int64 v28; // rax\n  __int64 v29; // rax\n  __int64 v30; // rax\n\n  v2 = s;\n  fprintf(s, \"  %s\\n\", \"+----+----+----+----+----+----+----+----+\");\n  if ( a2 & 1 )\n  {\n    v17 = 8LL;\n    v18 = (signed int *)&unk_69624C;\n    do\n    {\n      fprintf(s, \"%d |\", (unsigned int)v17);\n      v19 = *(v18 - 11);\n      if ( *(v18 - 11) )\n        fprintf(s, \" %s |\", off_41EC20[v19]);\n      v20 = *(v18 - 10);\n      if ( *(v18 - 10) )\n        fprintf(s, \" %s |\", off_41EC20[v20]);\n      v21 = *(v18 - 9);\n      if ( *(v18 - 9) )\n        fprintf(s, \" %s |\", off_41EC20[v21]);\n      v22 = *(v18 - 8);\n      if ( *(v18 - 8) )\n        fprintf(s, \" %s |\", off_41EC20[v22]);\n      v23 = *(v18 - 7);\n      if ( *(v18 - 7) )\n        fprintf(s, \" %s |\", off_41EC20[v23]);\n      v24 = *(v18 - 6);\n      if ( *(v18 - 6) )\n        fprintf(s, \" %s |\", off_41EC20[v24]);\n      v25 = *(v18 - 5);\n      if ( *(v18 - 5) )\n        fprintf(s, \" %s |\", off_41EC20[v25]);\n      v26 = *(v18 - 4);\n      if ( *(v18 - 4) )\n        fprintf(s, \" %s |\", off_41EC20[v26]);\n      v27 = *(v18 - 3);\n      if ( *(v18 - 3) )\n        fprintf(s, \" %s |\", off_41EC20[v27]);\n      v28 = *(v18 - 2);\n      if ( *(v18 - 2) )\n        fprintf(s, \" %s |\", off_41EC20[v28]);\n      v29 = *(v18 - 1);\n      if ( *(v18 - 1) )\n        fprintf(s, \" %s |\", off_41EC20[v29]);\n      v30 = *v18;\n      if ( *v18 )\n        fprintf(s, \" %s |\", off_41EC20[v30]);\n      fprintf(s, \"\\n  %s\\n\", \"+----+----+----+----+----+----+----+----+\");\n      v18 -= 12;\n      --v17;\n    }\n    while ( v17 );\n    v16 = \"\\n     a    b    c    d    e    f    g    h\\n\\n\";\n  }\n  else\n  {\n    v3 = 1;\n    v4 = 4611686018427387808LL;\n    do\n    {\n      fprintf(s, \"%d |\", v3);\n      v5 = dword_696280[v4];\n      if ( dword_696280[v4] )\n        fprintf(s, \" %s |\", off_41EC20[v5]);\n      v6 = dword_69627C[v4];\n      if ( dword_69627C[v4] )\n        fprintf(s, \" %s |\", off_41EC20[v6]);\n      v7 = dword_696278[v4];\n      if ( dword_696278[v4] )\n        fprintf(s, \" %s |\", off_41EC20[v7]);\n      v8 = dword_696274[v4];\n      if ( dword_696274[v4] )\n        fprintf(s, \" %s |\", off_41EC20[v8]);\n      v9 = dword_696270[v4];\n      if ( dword_696270[v4] )\n        fprintf(s, \" %s |\", off_41EC20[v9]);\n      v10 = dword_69626C[v4];\n      if ( dword_69626C[v4] )\n        fprintf(s, \" %s |\", off_41EC20[v10]);\n      v11 = dword_696268[v4];\n      if ( dword_696268[v4] )\n        fprintf(s, \" %s |\", off_41EC20[v11]);\n      v12 = dword_696264[v4];\n      if ( dword_696264[v4] )\n        fprintf(s, \" %s |\", off_41EC20[v12]);\n      v13 = dword_696260[v4];\n      if ( dword_696260[v4] )\n        fprintf(s, \" %s |\", off_41EC20[v13]);\n      v14 = dword_69625C[v4];\n      if ( dword_69625C[v4] )\n        fprintf(s, \" %s |\", off_41EC20[v14]);\n      v15 = dword_696258[v4];\n      if ( dword_696258[v4] )\n        fprintf(s, \" %s |\", off_41EC20[v15]);\n      if ( dword_696254[v4] )\n        fprintf(s, \" %s |\", off_41EC20[dword_696254[v4]]);\n      fprintf(s, \"\\n  %s\\n\", \"+----+----+----+----+----+----+----+----+\");\n      ++v3;\n      v4 += 12LL;\n    }\n    while ( v4 * 4 );\n    v16 = \"\\n     h    g    f    e    d    c    b    a\\n\\n\";\n  }\n  return fwrite(v16, 0x2CuLL, 1uLL, v2);\n}\n", 
            "funcStartAddr": "0x416150L", 
            "funcEndAddr": "0x41654fL", 
            "funcName": "sub_416150"
        }, 
        {
            "decompiledFuncCode": "signed __int64 sub_416550()\n{\n  signed __int64 v0; // rax\n  int v1; // ebx\n  int v2; // ecx\n  int v3; // esi\n  signed __int64 result; // rax\n  int v5; // edx\n  __int64 v6; // rsi\n  int v7[117]; // [rsp+0h] [rbp-248h]\n  int v8[29]; // [rsp+1D4h] [rbp-74h]\n\n  memcpy(dword_696070, &unk_41EC90, 0x240uLL);\n  memset(dword_6962B0, 0, 0x240uLL);\n  dword_6974EC = 1;\n  dword_6973C4 = 0;\n  dword_6974F0 = 30;\n  dword_697370 = 114;\n  dword_6974E4 = 0;\n  dword_697374 = 0;\n  dword_6974A4 = 0;\n  dword_697388 = 0;\n  dword_69747C = 32;\n  xmmword_697030 = 0LL;\n  xmmword_697020 = 0LL;\n  xmmword_697010 = 0LL;\n  xmmword_697000 = 0LL;\n  xmmword_696FF0 = 0LL;\n  xmmword_696FE0 = 0LL;\n  xmmword_696FD0 = 0LL;\n  xmmword_696FC0 = 0LL;\n  xmmword_696FB0 = 0LL;\n  xmmword_696FA0 = 0LL;\n  xmmword_696F90 = 0LL;\n  xmmword_696F80 = 0LL;\n  xmmword_696F70 = 0LL;\n  xmmword_696F60 = 0LL;\n  xmmword_696F50 = 0LL;\n  dword_697334 = 0;\n  qword_697040 = 0LL;\n  xmmword_697250 = 0LL;\n  xmmword_697240 = 0LL;\n  xmmword_697230 = 0LL;\n  xmmword_697220 = 0LL;\n  xmmword_697210 = 0LL;\n  xmmword_697200 = 0LL;\n  xmmword_6971F0 = 0LL;\n  xmmword_6971E0[0] = 0LL;\n  dword_6974E8 = 0;\n  dword_697378 = 0;\n  memset(v7, 0, 0x240uLL);\n  v0 = -31LL;\n  while ( v0 )\n  {\n    v1 = *((_DWORD *)&xmmword_696FD0 + v0++ + 1);\n    if ( v1 )\n      v7[*((signed int *)&xmmword_6970D0 + v0)] = 1;\n  }\n  dword_697334 = 0;\n  xmmword_697130 = 0LL;\n  xmmword_697120 = 0LL;\n  xmmword_697110 = 0LL;\n  xmmword_697100 = 0LL;\n  xmmword_6970F0 = 0LL;\n  xmmword_6970E0 = 0LL;\n  xmmword_6970D0 = 0LL;\n  xmmword_6970C0 = 0LL;\n  xmmword_6970B0 = 0LL;\n  xmmword_6970A0 = 0LL;\n  xmmword_697090 = 0LL;\n  xmmword_697080 = 0LL;\n  xmmword_697070 = 0LL;\n  xmmword_697060 = 0LL;\n  dword_69747C = 0;\n  xmmword_697050 = 0LL;\n  qword_697140 = 0LL;\n  xmmword_697030 = 0LL;\n  xmmword_697020 = 0LL;\n  xmmword_697010 = 0LL;\n  xmmword_697000 = 0LL;\n  xmmword_696FF0 = 0LL;\n  xmmword_696FE0 = 0LL;\n  xmmword_696FD0 = 0LL;\n  xmmword_696FC0 = 0LL;\n  xmmword_696FB0 = 0LL;\n  xmmword_696FA0 = 0LL;\n  xmmword_696F90 = 0LL;\n  xmmword_696F80 = 0LL;\n  xmmword_696F70 = 0LL;\n  xmmword_696F60 = 0LL;\n  xmmword_696F50 = 0LL;\n  qword_697040 = 0LL;\n  LODWORD(xmmword_697050) = 0;\n  v2 = 0;\n  v3 = 7;\n  result = -91LL;\n  v5 = 0;\nLABEL_7:\n  if ( v3 > 12 )\n  {\n    while ( 1 )\n    {\n      dword_6966C4[result] = 0;\n      if ( !result )\n        break;\nLABEL_6:\n      v3 = dword_696248[result++];\n      if ( v3 )\n        goto LABEL_7;\n    }\n  }\n  else\n  {\n    v5 += *((_DWORD *)&xmmword_422610 + v3);\n    dword_697334 = v5;\n    v6 = v2++;\n    dword_69747C = v2;\n    *((_DWORD *)&xmmword_697050 + v6 + 1) = result + 117;\n    dword_6966C4[result] = v2;\n    if ( v8[result] )\n      *((_DWORD *)&xmmword_696F50 + v6 + 1) = 1;\n    if ( result )\n      goto LABEL_6;\n  }\n  dword_697384 = 0;\n  dword_697380 = 0;\n  dword_6973E0 = 0;\n  dword_697484 = 0;\n  dword_697478 = 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x416550L", 
            "funcEndAddr": "0x4168dbL", 
            "funcName": "sub_416550"
        }, 
        {
            "decompiledFuncCode": "signed __int64 sub_4168E0()\n{\n  int v0; // ebx\n  __int64 v1; // rax\n  signed __int64 v2; // rcx\n  __int64 v3; // rdx\n  signed __int64 v4; // rsi\n  signed __int64 result; // rax\n  int v6; // ecx\n  __int64 v7; // rdx\n  __int64 v8; // rdx\n  int v9[146]; // [rsp+0h] [rbp-248h]\n\n  v0 = 0;\n  memset(v9, 0, 0x240uLL);\n  if ( dword_69747C <= 0LL )\n    goto LABEL_14;\n  v1 = dword_69747C & 1;\n  if ( dword_69747C == 1 )\n  {\n    v2 = 1LL;\n    if ( !(dword_69747C & 1) )\n      goto LABEL_14;\n    goto LABEL_12;\n  }\n  v3 = v1 - dword_69747C;\n  v2 = 1LL;\n  do\n  {\n    if ( *((_DWORD *)&xmmword_696F50 + v2) )\n      v9[*((signed int *)&xmmword_697050 + v2)] = 1;\n    if ( *((_DWORD *)&xmmword_696F50 + v2 + 1) )\n      v9[*((signed int *)&xmmword_697050 + v2 + 1)] = 1;\n    v4 = v3 + v2 + 2;\n    v2 += 2LL;\n  }\n  while ( v4 != 1 );\n  if ( v1 )\n  {\nLABEL_12:\n    if ( *((_DWORD *)&xmmword_696F50 + v2) )\n      v9[*((signed int *)&xmmword_697050 + v2)] = 1;\n  }\nLABEL_14:\n  dword_697334 = 0;\n  xmmword_697130 = 0LL;\n  xmmword_697120 = 0LL;\n  xmmword_697110 = 0LL;\n  xmmword_697100 = 0LL;\n  xmmword_6970F0 = 0LL;\n  xmmword_6970E0 = 0LL;\n  xmmword_6970D0 = 0LL;\n  xmmword_6970C0 = 0LL;\n  xmmword_6970B0 = 0LL;\n  xmmword_6970A0 = 0LL;\n  xmmword_697090 = 0LL;\n  xmmword_697080 = 0LL;\n  xmmword_697070 = 0LL;\n  xmmword_697060 = 0LL;\n  xmmword_697050 = 0LL;\n  dword_69747C = 0;\n  qword_697140 = 0LL;\n  xmmword_697030 = 0LL;\n  xmmword_697020 = 0LL;\n  xmmword_697010 = 0LL;\n  xmmword_697000 = 0LL;\n  xmmword_696FF0 = 0LL;\n  xmmword_696FE0 = 0LL;\n  xmmword_696FD0 = 0LL;\n  xmmword_696FC0 = 0LL;\n  xmmword_696FB0 = 0LL;\n  xmmword_696FA0 = 0LL;\n  xmmword_696F90 = 0LL;\n  xmmword_696F80 = 0LL;\n  xmmword_696F70 = 0LL;\n  xmmword_696F60 = 0LL;\n  xmmword_696F50 = 0LL;\n  qword_697040 = 0LL;\n  LODWORD(xmmword_697050) = 0;\n  result = 26LL;\n  v6 = 0;\n  do\n  {\n    v7 = dword_696070[result];\n    if ( dword_696070[result] && (signed int)v7 <= 12 )\n    {\n      v6 += *((_DWORD *)&xmmword_422610 + v7);\n      dword_697334 = v6;\n      v8 = v0++;\n      dword_69747C = v0;\n      *((_DWORD *)&xmmword_697050 + v8 + 1) = result;\n      dword_6964F0[result] = v0;\n      if ( v9[result] )\n        *((_DWORD *)&xmmword_696F50 + v8 + 1) = 1;\n    }\n    else\n    {\n      dword_6964F0[result] = 0;\n    }\n    ++result;\n  }\n  while ( result != 118 );\n  return result;\n}\n", 
            "funcStartAddr": "0x4168e0L", 
            "funcEndAddr": "0x416b1eL", 
            "funcName": "sub_4168E0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_416B20(char *a1)\n{\n  const unsigned __int16 **v1; // rax\n  const unsigned __int16 *v2; // rcx\n  __int64 v3; // rdx\n  signed __int64 result; // rax\n\n  v1 = __ctype_b_loc();\n  v2 = *v1;\n  if ( !((*v1)[*a1] & 0x400)\n    || ((v3 = a1[1], !(v2[v3] & 0x800)) || !(v2[a1[2]] & 0x400) || (result = 1LL, !(v2[a1[3]] & 0x800)))\n    && ((_BYTE)v3 != 64 || !(v2[a1[2]] & 0x400) || (result = 1LL, !(v2[a1[3]] & 0x800))) )\n  {\n    result = 0LL;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x416b20L", 
            "funcEndAddr": "0x416b86L", 
            "funcName": "sub_416B20"
        }, 
        {
            "decompiledFuncCode": "void __noreturn sub_416B90()\n{\n  _IO_FILE *v0; // rbx\n  unsigned int v1; // ebp\n  __int64 v2; // rcx\n  int v3; // eax\n  unsigned int v4; // er13\n  unsigned int v5; // ebx\n  _IO_FILE *v6; // rbx\n  __int64 v7; // rcx\n  int v8; // eax\n  char v9; // bl\n  const __int32_t **v10; // rax\n  char *v11; // rcx\n  unsigned int v12; // ebp\n  _IO_FILE *v13; // rbx\n  __int64 v14; // rcx\n  int v15; // eax\n  char v16; // bl\n  const __int32_t **v17; // rax\n  char *v18; // rcx\n  char v19; // [rsp+8h] [rbp-150h]\n  char nptr; // [rsp+20h] [rbp-138h]\n  char v21; // [rsp+21h] [rbp-137h]\n\n  sub_416550();\n  while ( 1 )\n  {\n    puts(\"\\n\\nPlease enter the desired depth for perft():\");\n    v0 = stdin;\n    v1 = 0;\n    while ( 1 )\n    {\n      v3 = _IO_getc(v0);\n      if ( v3 == -1 || v3 == 10 )\n        break;\n      if ( v1 <= 0xFE )\n      {\n        v2 = v1++;\n        *(&nptr + v2) = v3;\n      }\n    }\n    *(&nptr + v1) = 0;\n    v4 = 0;\n    v5 = strtol(&nptr, 0LL, 10);\n    dword_697498 = 0;\n    sub_40E400(v5);\n    printf(\"\\n\\nRaw nodes for depth %d: %i\\n\\n\", v5, (unsigned int)dword_697498);\n    sub_416150(stdout, 1);\n    puts(\"\\nPlease input a move/command:\");\n    v6 = stdin;\n    while ( 1 )\n    {\n      v8 = _IO_getc(v6);\n      if ( v8 == -1 || v8 == 10 )\n        break;\n      if ( v4 <= 0xFE )\n      {\n        v7 = v4++;\n        *(&nptr + v7) = v8;\n      }\n    }\n    *(&nptr + v4) = 0;\n    v9 = nptr;\n    if ( nptr )\n    {\n      v10 = __ctype_tolower_loc();\n      v11 = &v21;\n      do\n      {\n        *(v11 - 1) = (*v10)[v9];\n        v9 = *v11++;\n      }\n      while ( v9 );\n    }\n    while ( 1 )\n    {\n      if ( !strcmp(&nptr, \"exit\") || !strcmp(&nptr, \"quit\") )\n        exit(0);\n      if ( (unsigned int)sub_416DF0(&nptr) )\n        break;\n      puts(\"\\nIllegal move/command!  Please input a new move/command:\");\n      v12 = 0;\n      v13 = stdin;\n      while ( 1 )\n      {\n        v15 = _IO_getc(v13);\n        if ( v15 == -1 || v15 == 10 )\n          break;\n        if ( v12 <= 0xFE )\n        {\n          v14 = v12++;\n          *(&nptr + v14) = v15;\n        }\n      }\n      *(&nptr + v12) = 0;\n      v16 = nptr;\n      if ( nptr )\n      {\n        v17 = __ctype_tolower_loc();\n        v18 = &v21;\n        do\n        {\n          *(v18 - 1) = (*v17)[v16];\n          v16 = *v18++;\n        }\n        while ( v16 );\n      }\n    }\n    sub_407B10((__int64)&v19, 0);\n  }\n}\n", 
            "funcStartAddr": "0x416b90L", 
            "funcEndAddr": "0x416d9aL", 
            "funcName": "sub_416B90"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_416DA0(__int64 a1, int a2, _IO_FILE *a3)\n{\n  _IO_FILE *v3; // r15\n  unsigned int v4; // ebx\n  __int64 v5; // rcx\n  int v6; // eax\n  __int64 result; // rax\n\n  v3 = a3;\n  v4 = 0;\n  while ( 1 )\n  {\n    v6 = _IO_getc(v3);\n    if ( v6 == -1 || v6 == 10 )\n      break;\n    if ( (signed int)v4 < a2 - 1 )\n    {\n      v5 = v4++;\n      *(_BYTE *)(a1 + v5) = v6;\n    }\n  }\n  result = v4;\n  *(_BYTE *)(a1 + v4) = 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x416da0L", 
            "funcEndAddr": "0x416deaL", 
            "funcName": "sub_416DA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_416DF0(char *s1, __int64 a2)\n{\n  __int64 v2; // r14\n  unsigned int v3; // ebx\n  int v4; // ebp\n  __int64 v5; // rdx\n  __int64 v6; // rcx\n  __int64 v7; // r8\n  __int64 v8; // r9\n  __int64 v9; // rbx\n  char *v10; // r12\n  __int64 v11; // ST10_8\n  unsigned int v13; // [rsp+1Ch] [rbp-304Ch]\n  __int64 v14; // [rsp+20h] [rbp-3048h]\n  char s2; // [rsp+2Ah] [rbp-303Eh]\n  char v16; // [rsp+30h] [rbp-3038h]\n\n  v14 = a2;\n  if ( dword_697360 != 4 )\n    goto LABEL_7;\n  dword_697388 = 1;\n  sub_405540((__int64)&v16);\n  LODWORD(v2) = dword_697468;\n  dword_697388 = 0;\n  if ( dword_697468 <= 0 )\n  {\nLABEL_6:\n    dword_697388 = 0;\nLABEL_7:\n    sub_405540((__int64)&v16);\n    LODWORD(v2) = dword_697468;\n    goto LABEL_8;\n  }\n  v3 = 0;\n  while ( 1 )\n  {\n    sub_407B10((__int64)&v16, v3);\n    v4 = sub_404CA0((__int64)&v16, v3, 1);\n    a2 = v3;\n    sub_4083E0((__int64)&v16, v3);\n    if ( v4 )\n      break;\n    if ( (signed int)++v3 >= (signed int)v2 )\n      goto LABEL_6;\n  }\nLABEL_8:\n  if ( (signed int)v2 <= 0 )\n  {\n    v13 = 0;\n  }\n  else\n  {\n    v2 = (unsigned int)v2;\n    v9 = 0LL;\n    v10 = &v16;\n    v13 = 0;\n    do\n    {\n      v11 = *((_QWORD *)v10 + 2);\n      sub_416060(&s2, a2, v5, v6, v7, v8, *(_OWORD *)v10, *(_OWORD *)v10 >> 64);\n      a2 = (__int64)&s2;\n      if ( !strcmp(s1, &s2) )\n      {\n        sub_407B10((__int64)&v16, v9);\n        if ( (unsigned int)sub_404CA0((__int64)&v16, v9, 1) )\n        {\n          *(_QWORD *)(v14 + 16) = *((_QWORD *)v10 + 2);\n          *(_OWORD *)v14 = *(_OWORD *)v10;\n          v13 = 1;\n        }\n        a2 = (unsigned int)v9;\n        sub_4083E0((__int64)&v16, v9);\n      }\n      ++v9;\n      v10 += 24;\n    }\n    while ( v2 != v9 );\n  }\n  return v13;\n}\n", 
            "funcStartAddr": "0x416df0L", 
            "funcEndAddr": "0x416f5cL", 
            "funcName": "sub_416DF0"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_416F60(int a1, char *a2)\n{\n  size_t v2; // rax\n  int v3; // [rsp+18h] [rbp-3120h]\n  unsigned int v4; // [rsp+1Ch] [rbp-311Ch]\n  char src; // [rsp+20h] [rbp-3118h]\n  int v6[4]; // [rsp+120h] [rbp-3018h]\n  __int64 v7[1537]; // [rsp+130h] [rbp-3008h]\n\n  if ( a1 != 1 && (unsigned int)sub_4157A0((signed int *)&v4, 0, &v3, &v4, &v4, 0) != 4 )\n  {\n    sub_405540((__int64)v6);\n    if ( v3 >= 0LL && v3 < dword_697468 )\n    {\n      sub_415C90(&src, *(_OWORD *)&v6[6 * v3], *(_OWORD *)&v6[6 * v3] >> 64, v7[3 * v3]);\n      sub_407B10((__int64)v6, v3);\n      if ( (unsigned int)sub_404CA0((__int64)v6, v3, 1) )\n      {\n        *(_WORD *)&a2[strlen(a2)] = 60;\n        strcat(a2, &src);\n        v2 = strlen(a2);\n        a2[v2 + 2] = 0;\n        *(_WORD *)&a2[v2] = 8254;\n        sub_416F60((unsigned int)(a1 - 1), a2);\n      }\n      sub_4083E0((__int64)v6, v3);\n    }\n  }\n}\n", 
            "funcStartAddr": "0x416f60L", 
            "funcEndAddr": "0x417068L", 
            "funcName": "sub_416F60"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_417070(char *s)\n{\n  signed __int64 v1; // r12\n  int *v2; // rbx\n  __int64 result; // rax\n  signed __int64 v4; // r14\n  char *v5; // rbx\n  char src; // [rsp+20h] [rbp-128h]\n\n  *((_OWORD *)s + 15) = 0LL;\n  *((_OWORD *)s + 14) = 0LL;\n  *((_OWORD *)s + 13) = 0LL;\n  *((_OWORD *)s + 12) = 0LL;\n  *((_OWORD *)s + 11) = 0LL;\n  *((_OWORD *)s + 10) = 0LL;\n  *((_OWORD *)s + 9) = 0LL;\n  *((_OWORD *)s + 8) = 0LL;\n  *((_OWORD *)s + 7) = 0LL;\n  *((_OWORD *)s + 6) = 0LL;\n  *((_OWORD *)s + 5) = 0LL;\n  *((_OWORD *)s + 4) = 0LL;\n  *((_OWORD *)s + 3) = 0LL;\n  *((_OWORD *)s + 2) = 0LL;\n  *((_OWORD *)s + 1) = 0LL;\n  *(_OWORD *)s = 0LL;\n  if ( dword_694DB4[0] >= 2 )\n  {\n    v1 = 1LL;\n    v2 = &dword_424C88;\n    do\n    {\n      sub_415C90(&src, *(_OWORD *)v2, *(_OWORD *)v2 >> 64, *((_QWORD *)v2 + 2));\n      sub_407B10((__int64)v2, 0);\n      strcat(s, &src);\n      *(_WORD *)&s[strlen(s)] = 32;\n      ++v1;\n      v2 += 6;\n    }\n    while ( v1 < dword_694DB4[0] );\n  }\n  sub_416F60(7, s);\n  result = dword_694DB4[0];\n  if ( dword_694DB4[0] >= 2LL )\n  {\n    v4 = dword_694DB4[0] + 1LL;\n    v5 = (char *)&unk_424C58 + 24 * dword_694DB4[0];\n    do\n    {\n      result = sub_4083E0((__int64)v5, 0);\n      --v4;\n      v5 -= 24;\n    }\n    while ( v4 > 2 );\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x417070L", 
            "funcEndAddr": "0x4171b7L", 
            "funcName": "sub_417070"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_4171C0(unsigned int a1)\n{\n  unsigned int v1; // ebx\n  double v2; // xmm0_8\n  unsigned int v3; // eax\n  __int64 v4; // rcx\n  __int64 v5; // r8\n  signed int v6; // er14\n  signed __int64 v7; // rbp\n  int *v8; // rbx\n  signed __int64 v9; // rbp\n  char *v10; // rbx\n  __int128 v12; // [rsp+20h] [rbp-228h]\n  __int128 v13; // [rsp+30h] [rbp-218h]\n  __int128 v14; // [rsp+40h] [rbp-208h]\n  __int128 v15; // [rsp+50h] [rbp-1F8h]\n  __int128 v16; // [rsp+60h] [rbp-1E8h]\n  __int128 v17; // [rsp+70h] [rbp-1D8h]\n  __int128 v18; // [rsp+80h] [rbp-1C8h]\n  __int128 v19; // [rsp+90h] [rbp-1B8h]\n  __int128 v20; // [rsp+A0h] [rbp-1A8h]\n  __int128 v21; // [rsp+B0h] [rbp-198h]\n  __int128 v22; // [rsp+C0h] [rbp-188h]\n  __int128 v23; // [rsp+D0h] [rbp-178h]\n  __int128 v24; // [rsp+E0h] [rbp-168h]\n  __int128 v25; // [rsp+F0h] [rbp-158h]\n  __int128 v26; // [rsp+100h] [rbp-148h]\n  __int128 v27; // [rsp+110h] [rbp-138h]\n  char s; // [rsp+120h] [rbp-128h]\n\n  v1 = dword_69740C;\n  if ( dword_6974F8 )\n  {\n    v2 = difftime(0LL, time0);\n    printf(\"%2i %7i %5i %8i  \", v1, a1, (unsigned int)(100 * (signed int)v2), (unsigned int)dword_697460);\n  }\n  else\n  {\n    v3 = ((unsigned __int64)(1374389535LL * (signed int)a1) >> 63) + (1374389535LL * (signed int)a1 >> 37);\n    v4 = -v3;\n    if ( (signed int)-v3 < 1 )\n      v4 = v3;\n    v5 = 100 * v3 - a1;\n    if ( (signed int)(100 * v3 - a1) < 1 )\n      v5 = a1 - 100 * v3;\n    printf(\n      \"%2i %c%1i.%02i %9i \",\n      (unsigned int)dword_69740C,\n      ((signed int)a1 >> 31) & 0xD | 0x20u,\n      v4,\n      v5,\n      (unsigned int)dword_697460);\n  }\n  if ( dword_424C88 )\n  {\n    v6 = 0;\n    if ( dword_696070[dword_424C88] != 13 )\n      goto LABEL_11;\n    goto LABEL_10;\n  }\n  v6 = 0;\n  if ( dword_696070[dword_424C8C] != 13 )\n  {\nLABEL_10:\n    sub_4083E0((__int64)&dword_424C88, 0);\n    v6 = 1;\n  }\nLABEL_11:\n  if ( dword_694DB4[0] >= 2 )\n  {\n    v7 = 1LL;\n    v8 = &dword_424C88;\n    do\n    {\n      sub_415C90(&s, *(_OWORD *)v8, *(_OWORD *)v8 >> 64, *((_QWORD *)v8 + 2));\n      sub_407B10((__int64)v8, 0);\n      printf(\"%s \", &s);\n      ++v7;\n      v8 += 6;\n    }\n    while ( v7 < dword_694DB4[0] );\n  }\n  v27 = 0LL;\n  v26 = 0LL;\n  v25 = 0LL;\n  v24 = 0LL;\n  v23 = 0LL;\n  v22 = 0LL;\n  v21 = 0LL;\n  v20 = 0LL;\n  v19 = 0LL;\n  v18 = 0LL;\n  v17 = 0LL;\n  v16 = 0LL;\n  v15 = 0LL;\n  v14 = 0LL;\n  v13 = 0LL;\n  v12 = 0LL;\n  sub_416F60(7, (char *)&v12);\n  printf(\"%s\", &v12);\n  if ( dword_694DB4[0] >= 2LL )\n  {\n    v9 = dword_694DB4[0] + 1LL;\n    v10 = (char *)&unk_424C58 + 24 * dword_694DB4[0];\n    do\n    {\n      sub_4083E0((__int64)v10, 0);\n      --v9;\n      v10 -= 24;\n    }\n    while ( v9 > 2 );\n  }\n  if ( v6 )\n    sub_407B10((__int64)&dword_424C88, 0);\n  return putchar(10);\n}\n", 
            "funcStartAddr": "0x4171c0L", 
            "funcEndAddr": "0x41740eL", 
            "funcName": "sub_4171C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_417410(time_t a1, time_t a2)\n{\n  return (unsigned int)(100 * (signed int)difftime(a1, a2));\n}\n", 
            "funcStartAddr": "0x417410L", 
            "funcEndAddr": "0x41741fL", 
            "funcName": "sub_417410"
        }, 
        {
            "decompiledFuncCode": "__int64 rtime()\n{\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x417420L", 
            "funcEndAddr": "0x417423L", 
            "funcName": "rtime"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_417430(unsigned int a1, __int64 a2)\n{\n  unsigned int v2; // er14\n  double v3; // xmm0_8\n  unsigned int v4; // eax\n  __int64 v5; // rcx\n  __int64 v6; // r8\n  char s; // [rsp+40h] [rbp-118h]\n\n  v2 = dword_69740C;\n  if ( dword_6974F8 )\n  {\n    v3 = difftime(0LL, time0);\n    printf(\"%2i %7i %5i %8i  \", v2, a1, (unsigned int)(100 * (signed int)v3), (unsigned int)dword_697460);\n  }\n  else\n  {\n    v4 = ((unsigned __int64)(1374389535LL * (signed int)a1) >> 63) + (1374389535LL * (signed int)a1 >> 37);\n    v5 = -v4;\n    if ( (signed int)-v4 < 1 )\n      v5 = v4;\n    v6 = 100 * v4 - a1;\n    if ( (signed int)(100 * v4 - a1) < 1 )\n      v6 = a1 - 100 * v4;\n    printf(\n      \"%2i %c%1i.%02i %9i \",\n      (unsigned int)dword_69740C,\n      ((signed int)a1 >> 31) & 0xD | 0x20u,\n      v5,\n      v6,\n      (unsigned int)dword_697460);\n  }\n  sub_4083E0(a2, 0);\n  sub_415C90(&s, *(_OWORD *)a2, *(_OWORD *)a2 >> 64, *(_QWORD *)(a2 + 16));\n  sub_407B10(a2, 0);\n  printf(\"%s !\", &s);\n  return putchar(10);\n}\n", 
            "funcStartAddr": "0x417430L", 
            "funcEndAddr": "0x417537L", 
            "funcName": "sub_417430"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_417540(unsigned int a1, __int64 a2)\n{\n  unsigned int v2; // er14\n  double v3; // xmm0_8\n  unsigned int v4; // eax\n  __int64 v5; // rcx\n  __int64 v6; // r8\n  char s; // [rsp+40h] [rbp-118h]\n\n  v2 = dword_69740C;\n  if ( dword_6974F8 )\n  {\n    v3 = difftime(0LL, time0);\n    printf(\"%2i %7i %5i %8i  \", v2, a1, (unsigned int)(100 * (signed int)v3), (unsigned int)dword_697460);\n  }\n  else\n  {\n    v4 = ((unsigned __int64)(1374389535LL * (signed int)a1) >> 63) + (1374389535LL * (signed int)a1 >> 37);\n    v5 = -v4;\n    if ( (signed int)-v4 < 1 )\n      v5 = v4;\n    v6 = 100 * v4 - a1;\n    if ( (signed int)(100 * v4 - a1) < 1 )\n      v6 = a1 - 100 * v4;\n    printf(\n      \"%2i %c%1i.%02i %9i \",\n      (unsigned int)dword_69740C,\n      ((signed int)a1 >> 31) & 0xD | 0x20u,\n      v5,\n      v6,\n      (unsigned int)dword_697460);\n  }\n  sub_4083E0(a2, 0);\n  sub_415C90(&s, *(_OWORD *)a2, *(_OWORD *)a2 >> 64, *(_QWORD *)(a2 + 16));\n  sub_407B10(a2, 0);\n  printf(\"%s !!\", &s);\n  return putchar(10);\n}\n", 
            "funcStartAddr": "0x417540L", 
            "funcEndAddr": "0x417647L", 
            "funcName": "sub_417540"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_417650(unsigned int a1, __int64 a2)\n{\n  unsigned int v2; // er14\n  double v3; // xmm0_8\n  unsigned int v4; // eax\n  __int64 v5; // rcx\n  __int64 v6; // r8\n  char s; // [rsp+40h] [rbp-118h]\n\n  v2 = dword_69740C;\n  if ( dword_6974F8 )\n  {\n    v3 = difftime(0LL, time0);\n    printf(\"%2i %7i %5i %8i  \", v2, a1, (unsigned int)(100 * (signed int)v3), (unsigned int)dword_697460);\n  }\n  else\n  {\n    v4 = ((unsigned __int64)(1374389535LL * (signed int)a1) >> 63) + (1374389535LL * (signed int)a1 >> 37);\n    v5 = -v4;\n    if ( (signed int)-v4 < 1 )\n      v5 = v4;\n    v6 = 100 * v4 - a1;\n    if ( (signed int)(100 * v4 - a1) < 1 )\n      v6 = a1 - 100 * v4;\n    printf(\n      \"%2i %c%1i.%02i %9i \",\n      (unsigned int)dword_69740C,\n      ((signed int)a1 >> 31) & 0xD | 0x20u,\n      v5,\n      v6,\n      (unsigned int)dword_697460);\n  }\n  sub_4083E0(a2, 0);\n  sub_415C90(&s, *(_OWORD *)a2, *(_OWORD *)a2 >> 64, *(_QWORD *)(a2 + 16));\n  sub_407B10(a2, 0);\n  printf(\"%s ??\", &s);\n  return putchar(10);\n}\n", 
            "funcStartAddr": "0x417650L", 
            "funcEndAddr": "0x417757L", 
            "funcName": "sub_417650"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_4177E0(__int64 a1, int a2, FILE *a3)\n{\n  FILE *v3; // rbx\n  char s; // [rsp+40h] [rbp-118h]\n\n  v3 = a3;\n  sub_415C90(&s, *(_OWORD *)(a1 + 24LL * a2), *(_OWORD *)(a1 + 24LL * a2) >> 64, *(_QWORD *)(a1 + 24LL * a2 + 16));\n  return fputs(&s, v3);\n}\n", 
            "funcStartAddr": "0x4177e0L", 
            "funcEndAddr": "0x41783dL", 
            "funcName": "sub_4177E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_417840(signed int a1)\n{\n  __int64 result; // rax\n\n  if ( a1 > 0 )\n  {\n    result = (unsigned int)(signed int)difftime(0LL, 0LL);\n    if ( (signed int)result < a1 )\n    {\n      while ( 1 )\n        ;\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x417840L", 
            "funcEndAddr": "0x417864L", 
            "funcName": "sub_417840"
        }, 
        {
            "decompiledFuncCode": "int sub_417990()\n{\n  return puts(\"\\nSjeng version SPEC 1.0, Copyright (C) 2000-2005 Gian-Carlo Pascutto\\n\");\n}\n", 
            "funcStartAddr": "0x417990L", 
            "funcEndAddr": "0x41799aL", 
            "funcName": "sub_417990"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4179A0(_DWORD *a1)\n{\n  _BOOL8 result; // rax\n\n  result = *a1 == 0;\n  *a1 = result;\n  return result;\n}\n", 
            "funcStartAddr": "0x4179a0L", 
            "funcEndAddr": "0x4179abL", 
            "funcName": "sub_4179A0"
        }, 
        {
            "decompiledFuncCode": "int sub_4179B0()\n{\n  unsigned int v0; // ebp\n  _IO_FILE *v1; // rbx\n  __int64 v2; // rcx\n  int v3; // eax\n  unsigned int v4; // er14\n  unsigned int v5; // er15\n  _IO_FILE *v6; // rbx\n  __int64 v7; // rcx\n  int v8; // eax\n  unsigned int v9; // ebp\n  _IO_FILE *v10; // rbx\n  __int64 v11; // rcx\n  int v12; // eax\n  FILE *v13; // r14\n  unsigned int v14; // ebp\n  _IO_FILE *v15; // rbx\n  __int64 v16; // rcx\n  int v17; // eax\n  char v19[296]; // [rsp+0h] [rbp-128h]\n\n  sub_416550();\n  puts(\"\\nPlease enter the desired depth:\");\n  v0 = 0;\n  v1 = stdin;\n  while ( 1 )\n  {\n    v3 = _IO_getc(v1);\n    if ( v3 == -1 || v3 == 10 )\n      break;\n    if ( v0 <= 0xFE )\n    {\n      v2 = v0++;\n      v19[v2] = v3;\n    }\n  }\n  v19[v0] = 0;\n  v4 = 0;\n  v5 = strtol(v19, 0LL, 10);\n  puts(\"\\nDo you want tree () output?  (y/n)\");\n  v6 = stdin;\n  while ( 1 )\n  {\n    v8 = _IO_getc(v6);\n    if ( v8 == -1 || v8 == 10 )\n      break;\n    if ( v4 <= 0xFE )\n    {\n      v7 = v4++;\n      v19[v7] = v8;\n    }\n  }\n  v19[v4] = 0;\n  if ( v19[0] == 121 )\n  {\n    puts(\"\\nPlease enter the name of the output file for tree ():\");\n    v9 = 0;\n    v10 = stdin;\n    while ( 1 )\n    {\n      v12 = _IO_getc(v10);\n      if ( v12 == -1 || v12 == 10 )\n        break;\n      if ( v9 <= 0xFE )\n      {\n        v11 = v9++;\n        v19[v11] = v12;\n      }\n    }\n    v19[v9] = 0;\n    v13 = fopen(v19, \"w\");\n    if ( !v13 )\n      fprintf(stderr, \"Couldn't open file %s\\n\", v19);\n    puts(\"\\nDo you want to output diagrams? (y/n)\");\n    v14 = 0;\n    v15 = stdin;\n    while ( 1 )\n    {\n      v17 = _IO_getc(v15);\n      if ( v17 == -1 || v17 == 10 )\n        break;\n      if ( v14 <= 0xFE )\n      {\n        v16 = v14++;\n        v19[v16] = v17;\n      }\n    }\n    v19[v14] = 0;\n    sub_411B60(v5, 0, v13, v19);\n  }\n  dword_697498 = 0;\n  sub_40E400(v5);\n  return printf(\"\\n\\n%s\\nRaw nodes for depth %d: %i\\n%s\\n\\n\", asc_4225B0, v5, (unsigned int)dword_697498, asc_4225B0);\n}\n", 
            "funcStartAddr": "0x4179b0L", 
            "funcEndAddr": "0x417b7dL", 
            "funcName": "sub_4179B0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_417B80()\n{\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x417b80L", 
            "funcEndAddr": "0x417b83L", 
            "funcName": "sub_417B80"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_417B90(int a1, char a2, int a3, int a4)\n{\n  __int64 result; // rax\n\n  result = (unsigned int)(a3 + 12 * a4 - 659);\n  if ( a1 == 1 )\n  {\n    switch ( a2 )\n    {\n      case 98:\n        result = (signed int)result;\n        dword_696070[(signed int)result] = 12;\n        break;\n      case 107:\n        result = (signed int)result;\n        dword_696070[(signed int)result] = 6;\n        break;\n      case 110:\n        result = (signed int)result;\n        dword_696070[(signed int)result] = 4;\n        break;\n      case 112:\n        result = (signed int)result;\n        dword_696070[(signed int)result] = 2;\n        break;\n      case 113:\n        result = (signed int)result;\n        dword_696070[(signed int)result] = 10;\n        break;\n      case 114:\n        result = (signed int)result;\n        dword_696070[(signed int)result] = 8;\n        break;\n      case 120:\nLABEL_7:\n        result = (signed int)result;\n        dword_696070[(signed int)result] = 13;\n        break;\n      default:\n        return result;\n    }\n  }\n  else if ( !a1 )\n  {\n    switch ( a2 )\n    {\n      case 98:\n        result = (signed int)result;\n        dword_696070[(signed int)result] = 11;\n        break;\n      case 107:\n        result = (signed int)result;\n        dword_696070[(signed int)result] = 5;\n        break;\n      case 110:\n        result = (signed int)result;\n        dword_696070[(signed int)result] = 3;\n        break;\n      case 112:\n        result = (signed int)result;\n        dword_696070[(signed int)result] = 1;\n        break;\n      case 113:\n        result = (signed int)result;\n        dword_696070[(signed int)result] = 9;\n        break;\n      case 114:\n        result = (signed int)result;\n        dword_696070[(signed int)result] = 7;\n        break;\n      case 120:\n        goto LABEL_7;\n      default:\n        return result;\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x417b90L", 
            "funcEndAddr": "0x417c80L", 
            "funcName": "sub_417B90"
        }, 
        {
            "decompiledFuncCode": "signed __int64 sub_417C80()\n{\n  int v0; // ebx\n  int v1; // edx\n  signed __int64 result; // rax\n  int v3; // ecx\n  __int64 v4; // rdx\n  __int64 v5; // [rsp+0h] [rbp-248h]\n  int v6[29]; // [rsp+1D4h] [rbp-74h]\n\n  memcpy(dword_696070, &unk_41EED0, 0x240uLL);\n  v0 = 0;\n  memset(dword_6962B0, 0, 0x240uLL);\n  dword_6973C4 = 0;\n  xmmword_697250 = 0LL;\n  xmmword_697240 = 0LL;\n  xmmword_697230 = 0LL;\n  xmmword_697220 = 0LL;\n  xmmword_697210 = 0LL;\n  xmmword_697200 = 0LL;\n  xmmword_6971F0 = 0LL;\n  xmmword_6971E0[0] = 0LL;\n  dword_6974E8 = 0;\n  dword_697378 = 0;\n  dword_697384 = 0;\n  dword_6973E0 = 0;\n  memset(&v5, 0, 0x240uLL);\n  dword_697334 = 0;\n  dword_69747C = 0;\n  xmmword_697130 = 0LL;\n  xmmword_697120 = 0LL;\n  xmmword_697110 = 0LL;\n  xmmword_697100 = 0LL;\n  xmmword_6970F0 = 0LL;\n  xmmword_6970E0 = 0LL;\n  xmmword_6970D0 = 0LL;\n  xmmword_6970C0 = 0LL;\n  xmmword_6970B0 = 0LL;\n  xmmword_6970A0 = 0LL;\n  xmmword_697090 = 0LL;\n  xmmword_697080 = 0LL;\n  xmmword_697070 = 0LL;\n  xmmword_697060 = 0LL;\n  xmmword_697050 = 0LL;\n  xmmword_697030 = 0LL;\n  xmmword_697020 = 0LL;\n  xmmword_697010 = 0LL;\n  xmmword_697000 = 0LL;\n  xmmword_696FF0 = 0LL;\n  xmmword_696FE0 = 0LL;\n  xmmword_696FD0 = 0LL;\n  xmmword_696FC0 = 0LL;\n  xmmword_696FB0 = 0LL;\n  xmmword_696FA0 = 0LL;\n  xmmword_696F90 = 0LL;\n  xmmword_696F80 = 0LL;\n  xmmword_696F70 = 0LL;\n  xmmword_696F60 = 0LL;\n  qword_697140 = 0LL;\n  xmmword_696F50 = 0LL;\n  qword_697040 = 0LL;\n  LODWORD(xmmword_697050) = 0;\n  v1 = 13;\n  result = -91LL;\n  v3 = 0;\nLABEL_3:\n  if ( v1 > 12 )\n  {\n    while ( 1 )\n    {\n      dword_6966C4[result] = 0;\n      if ( !result )\n        break;\nLABEL_2:\n      v1 = dword_696248[result++];\n      if ( v1 )\n        goto LABEL_3;\n    }\n  }\n  else\n  {\n    v3 += *((_DWORD *)&xmmword_422610 + v1);\n    dword_697334 = v3;\n    v4 = v0++;\n    dword_69747C = v0;\n    *((_DWORD *)&xmmword_697050 + v4 + 1) = result + 117;\n    dword_6966C4[result] = v0;\n    if ( v6[result] )\n      *((_DWORD *)&xmmword_696F50 + v4 + 1) = 1;\n    if ( result )\n      goto LABEL_2;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x417c80L", 
            "funcEndAddr": "0x417ed9L", 
            "funcName": "sub_417C80"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_417EE0(int a1)\n{\n  int v1; // edi\n  signed __int64 result; // rax\n\n  v1 = a1 | 1;\n  dword_4225E4 = 0;\n  dword_422680[0] = v1;\n  result = 1LL;\n  do\n  {\n    dword_422680[result] = 69069 * v1;\n    dword_422684[result] = 475559465 * v1;\n    dword_422688[result] = -1493191723 * v1;\n    dword_42268C[result] = 1790562961 * v1;\n    dword_422690[result] = -1190135011 * v1;\n    dword_422694[result] = -55996615 * v1;\n    v1 *= 2135332261;\n    dword_422698[result] = v1;\n    result += 7LL;\n  }\n  while ( (_DWORD)(result * 4) != 2496 );\n  return result * 4;\n}\n", 
            "funcStartAddr": "0x417ee0L", 
            "funcEndAddr": "0x417f60L", 
            "funcName": "sub_417EE0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_418170()\n{\n  int v0; // eax\n  signed __int64 v1; // rcx\n  int v2; // edx\n  signed __int64 i; // rdx\n  int v4; // ecx\n  __int64 v5; // rdx\n  unsigned int v6; // ecx\n  int v7; // eax\n  _DWORD *v8; // rax\n  __int64 result; // rax\n\n  v7 = dword_4225E4--;\n  if ( v7 <= 0 )\n  {\n    if ( dword_4225E4 >= -1 )\n    {\n      v0 = dword_422680[0];\n    }\n    else\n    {\n      dword_4225E4 = 0;\n      dword_422680[0] = 4357;\n      v0 = 4357;\n      v1 = 1LL;\n      v2 = 4357;\n      do\n      {\n        dword_422680[v1] = 69069 * v2;\n        dword_422684[v1] = 475559465 * v2;\n        dword_422688[v1] = -1493191723 * v2;\n        dword_42268C[v1] = 1790562961 * v2;\n        dword_422690[v1] = -1190135011 * v2;\n        dword_422694[v1] = -55996615 * v2;\n        v2 *= 2135332261;\n        dword_422698[v1] = v2;\n        v1 += 7LL;\n      }\n      while ( (_DWORD)(v1 * 4) != 2496 );\n    }\n    dword_4225E4 = 623;\n    qword_423048 = (__int64)dword_422684;\n    for ( i = 1LL; ; i += 2LL )\n    {\n      v4 = dword_422680[i];\n      *(_DWORD *)(i * 4 + 4335228) = dword_422CB0[i] ^ ((v0 & 0x80000000 | dword_422680[i] & 0x7FFFFFFE) >> 1) ^ -(dword_422680[i] & 1) & 0x9908B0DF;\n      v0 = dword_422684[i];\n      if ( (_DWORD)(i * 4) == 908 )\n        break;\n      dword_422680[i] = dword_422CB4[i] ^ ((v4 & 0x80000000 | dword_422684[i] & 0x7FFFFFFE) >> 1) ^ -(dword_422684[i] & 1) & 0x9908B0DF;\n    }\n    v5 = 0LL;\n    do\n    {\n      dword_422A0C[v5] = dword_422680[v5] ^ ((v4 & 0x80000000 | v0 & 0x7FFFFFFE) >> 1) ^ -(v0 & 1) & 0x9908B0DF;\n      v4 = dword_422A14[v5];\n      dword_422A10[v5] = dword_422684[v5] ^ ((v0 & 0x80000000 | dword_422A14[v5] & 0x7FFFFFFE) >> 1) ^ -(dword_422A14[v5] & 1) & 0x9908B0DF;\n      v0 = dword_422A18[v5];\n      v5 += 2LL;\n    }\n    while ( (_DWORD)(v5 * 4) != 1584 );\n    dword_42303C = dword_422CB0[0] ^ ((v4 & 0x80000000 | dword_422680[0] & 0x7FFFFFFE) >> 1) ^ -(dword_422680[0] & 1) & 0x9908B0DF;\n    v6 = dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11) ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11)) << 7) & 0x9D2C5680 ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11) ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11)) << 7) & 0x9D2C5680) << 15) & 0xEFC60000;\n    result = v6 ^ (v6 >> 18);\n  }\n  else\n  {\n    v8 = (_DWORD *)qword_423048;\n    qword_423048 += 4LL;\n    LODWORD(v8) = *v8 ^ (*v8 >> 11) ^ ((*v8 ^ (*v8 >> 11)) << 7) & 0x9D2C5680;\n    result = (unsigned int)v8 ^ ((_DWORD)v8 << 15) & 0xEFC60000 ^ (((unsigned int)v8 ^ ((_DWORD)v8 << 15) & 0xEFC60000) >> 18);\n  }\n  return result;\n}\n\n__int64 sub_418170()\n{\n  int v0; // eax\n  signed __int64 v1; // rcx\n  int v2; // edx\n  signed __int64 i; // rdx\n  int v4; // ecx\n  __int64 v5; // rdx\n  unsigned int v6; // ecx\n  int v7; // eax\n  _DWORD *v8; // rax\n  __int64 result; // rax\n\n  v7 = dword_4225E4--;\n  if ( v7 <= 0 )\n  {\n    if ( dword_4225E4 >= -1 )\n    {\n      v0 = dword_422680[0];\n    }\n    else\n    {\n      dword_4225E4 = 0;\n      dword_422680[0] = 4357;\n      v0 = 4357;\n      v1 = 1LL;\n      v2 = 4357;\n      do\n      {\n        dword_422680[v1] = 69069 * v2;\n        dword_422684[v1] = 475559465 * v2;\n        dword_422688[v1] = -1493191723 * v2;\n        dword_42268C[v1] = 1790562961 * v2;\n        dword_422690[v1] = -1190135011 * v2;\n        dword_422694[v1] = -55996615 * v2;\n        v2 *= 2135332261;\n        dword_422698[v1] = v2;\n        v1 += 7LL;\n      }\n      while ( (_DWORD)(v1 * 4) != 2496 );\n    }\n    dword_4225E4 = 623;\n    qword_423048 = (__int64)dword_422684;\n    for ( i = 1LL; ; i += 2LL )\n    {\n      v4 = dword_422680[i];\n      *(_DWORD *)(i * 4 + 4335228) = dword_422CB0[i] ^ ((v0 & 0x80000000 | dword_422680[i] & 0x7FFFFFFE) >> 1) ^ -(dword_422680[i] & 1) & 0x9908B0DF;\n      v0 = dword_422684[i];\n      if ( (_DWORD)(i * 4) == 908 )\n        break;\n      dword_422680[i] = dword_422CB4[i] ^ ((v4 & 0x80000000 | dword_422684[i] & 0x7FFFFFFE) >> 1) ^ -(dword_422684[i] & 1) & 0x9908B0DF;\n    }\n    v5 = 0LL;\n    do\n    {\n      dword_422A0C[v5] = dword_422680[v5] ^ ((v4 & 0x80000000 | v0 & 0x7FFFFFFE) >> 1) ^ -(v0 & 1) & 0x9908B0DF;\n      v4 = dword_422A14[v5];\n      dword_422A10[v5] = dword_422684[v5] ^ ((v0 & 0x80000000 | dword_422A14[v5] & 0x7FFFFFFE) >> 1) ^ -(dword_422A14[v5] & 1) & 0x9908B0DF;\n      v0 = dword_422A18[v5];\n      v5 += 2LL;\n    }\n    while ( (_DWORD)(v5 * 4) != 1584 );\n    dword_42303C = dword_422CB0[0] ^ ((v4 & 0x80000000 | dword_422680[0] & 0x7FFFFFFE) >> 1) ^ -(dword_422680[0] & 1) & 0x9908B0DF;\n    v6 = dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11) ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11)) << 7) & 0x9D2C5680 ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11) ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11)) << 7) & 0x9D2C5680) << 15) & 0xEFC60000;\n    result = v6 ^ (v6 >> 18);\n  }\n  else\n  {\n    v8 = (_DWORD *)qword_423048;\n    qword_423048 += 4LL;\n    LODWORD(v8) = *v8 ^ (*v8 >> 11) ^ ((*v8 ^ (*v8 >> 11)) << 7) & 0x9D2C5680;\n    result = (unsigned int)v8 ^ ((_DWORD)v8 << 15) & 0xEFC60000 ^ (((unsigned int)v8 ^ ((_DWORD)v8 << 15) & 0xEFC60000) >> 18);\n  }\n  return result;\n}\n\n__int64 sub_418170()\n{\n  int v0; // eax\n  signed __int64 v1; // rcx\n  int v2; // edx\n  signed __int64 i; // rdx\n  int v4; // ecx\n  __int64 v5; // rdx\n  unsigned int v6; // ecx\n  int v7; // eax\n  _DWORD *v8; // rax\n  __int64 result; // rax\n\n  v7 = dword_4225E4--;\n  if ( v7 <= 0 )\n  {\n    if ( dword_4225E4 >= -1 )\n    {\n      v0 = dword_422680[0];\n    }\n    else\n    {\n      dword_4225E4 = 0;\n      dword_422680[0] = 4357;\n      v0 = 4357;\n      v1 = 1LL;\n      v2 = 4357;\n      do\n      {\n        dword_422680[v1] = 69069 * v2;\n        dword_422684[v1] = 475559465 * v2;\n        dword_422688[v1] = -1493191723 * v2;\n        dword_42268C[v1] = 1790562961 * v2;\n        dword_422690[v1] = -1190135011 * v2;\n        dword_422694[v1] = -55996615 * v2;\n        v2 *= 2135332261;\n        dword_422698[v1] = v2;\n        v1 += 7LL;\n      }\n      while ( (_DWORD)(v1 * 4) != 2496 );\n    }\n    dword_4225E4 = 623;\n    qword_423048 = (__int64)dword_422684;\n    for ( i = 1LL; ; i += 2LL )\n    {\n      v4 = dword_422680[i];\n      *(_DWORD *)(i * 4 + 4335228) = dword_422CB0[i] ^ ((v0 & 0x80000000 | dword_422680[i] & 0x7FFFFFFE) >> 1) ^ -(dword_422680[i] & 1) & 0x9908B0DF;\n      v0 = dword_422684[i];\n      if ( (_DWORD)(i * 4) == 908 )\n        break;\n      dword_422680[i] = dword_422CB4[i] ^ ((v4 & 0x80000000 | dword_422684[i] & 0x7FFFFFFE) >> 1) ^ -(dword_422684[i] & 1) & 0x9908B0DF;\n    }\n    v5 = 0LL;\n    do\n    {\n      dword_422A0C[v5] = dword_422680[v5] ^ ((v4 & 0x80000000 | v0 & 0x7FFFFFFE) >> 1) ^ -(v0 & 1) & 0x9908B0DF;\n      v4 = dword_422A14[v5];\n      dword_422A10[v5] = dword_422684[v5] ^ ((v0 & 0x80000000 | dword_422A14[v5] & 0x7FFFFFFE) >> 1) ^ -(dword_422A14[v5] & 1) & 0x9908B0DF;\n      v0 = dword_422A18[v5];\n      v5 += 2LL;\n    }\n    while ( (_DWORD)(v5 * 4) != 1584 );\n    dword_42303C = dword_422CB0[0] ^ ((v4 & 0x80000000 | dword_422680[0] & 0x7FFFFFFE) >> 1) ^ -(dword_422680[0] & 1) & 0x9908B0DF;\n    v6 = dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11) ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11)) << 7) & 0x9D2C5680 ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11) ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11)) << 7) & 0x9D2C5680) << 15) & 0xEFC60000;\n    result = v6 ^ (v6 >> 18);\n  }\n  else\n  {\n    v8 = (_DWORD *)qword_423048;\n    qword_423048 += 4LL;\n    LODWORD(v8) = *v8 ^ (*v8 >> 11) ^ ((*v8 ^ (*v8 >> 11)) << 7) & 0x9D2C5680;\n    result = (unsigned int)v8 ^ ((_DWORD)v8 << 15) & 0xEFC60000 ^ (((unsigned int)v8 ^ ((_DWORD)v8 << 15) & 0xEFC60000) >> 18);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x418020L", 
            "funcEndAddr": "0x418168L", 
            "funcName": "sub_418170"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_418170()\n{\n  int v0; // eax\n  signed __int64 v1; // rcx\n  int v2; // edx\n  signed __int64 i; // rdx\n  int v4; // ecx\n  __int64 v5; // rdx\n  unsigned int v6; // ecx\n  int v7; // eax\n  _DWORD *v8; // rax\n  __int64 result; // rax\n\n  v7 = dword_4225E4--;\n  if ( v7 <= 0 )\n  {\n    if ( dword_4225E4 >= -1 )\n    {\n      v0 = dword_422680[0];\n    }\n    else\n    {\n      dword_4225E4 = 0;\n      dword_422680[0] = 4357;\n      v0 = 4357;\n      v1 = 1LL;\n      v2 = 4357;\n      do\n      {\n        dword_422680[v1] = 69069 * v2;\n        dword_422684[v1] = 475559465 * v2;\n        dword_422688[v1] = -1493191723 * v2;\n        dword_42268C[v1] = 1790562961 * v2;\n        dword_422690[v1] = -1190135011 * v2;\n        dword_422694[v1] = -55996615 * v2;\n        v2 *= 2135332261;\n        dword_422698[v1] = v2;\n        v1 += 7LL;\n      }\n      while ( (_DWORD)(v1 * 4) != 2496 );\n    }\n    dword_4225E4 = 623;\n    qword_423048 = (__int64)dword_422684;\n    for ( i = 1LL; ; i += 2LL )\n    {\n      v4 = dword_422680[i];\n      *(_DWORD *)(i * 4 + 4335228) = dword_422CB0[i] ^ ((v0 & 0x80000000 | dword_422680[i] & 0x7FFFFFFE) >> 1) ^ -(dword_422680[i] & 1) & 0x9908B0DF;\n      v0 = dword_422684[i];\n      if ( (_DWORD)(i * 4) == 908 )\n        break;\n      dword_422680[i] = dword_422CB4[i] ^ ((v4 & 0x80000000 | dword_422684[i] & 0x7FFFFFFE) >> 1) ^ -(dword_422684[i] & 1) & 0x9908B0DF;\n    }\n    v5 = 0LL;\n    do\n    {\n      dword_422A0C[v5] = dword_422680[v5] ^ ((v4 & 0x80000000 | v0 & 0x7FFFFFFE) >> 1) ^ -(v0 & 1) & 0x9908B0DF;\n      v4 = dword_422A14[v5];\n      dword_422A10[v5] = dword_422684[v5] ^ ((v0 & 0x80000000 | dword_422A14[v5] & 0x7FFFFFFE) >> 1) ^ -(dword_422A14[v5] & 1) & 0x9908B0DF;\n      v0 = dword_422A18[v5];\n      v5 += 2LL;\n    }\n    while ( (_DWORD)(v5 * 4) != 1584 );\n    dword_42303C = dword_422CB0[0] ^ ((v4 & 0x80000000 | dword_422680[0] & 0x7FFFFFFE) >> 1) ^ -(dword_422680[0] & 1) & 0x9908B0DF;\n    v6 = dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11) ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11)) << 7) & 0x9D2C5680 ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11) ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11)) << 7) & 0x9D2C5680) << 15) & 0xEFC60000;\n    result = v6 ^ (v6 >> 18);\n  }\n  else\n  {\n    v8 = (_DWORD *)qword_423048;\n    qword_423048 += 4LL;\n    LODWORD(v8) = *v8 ^ (*v8 >> 11) ^ ((*v8 ^ (*v8 >> 11)) << 7) & 0x9D2C5680;\n    result = (unsigned int)v8 ^ ((_DWORD)v8 << 15) & 0xEFC60000 ^ (((unsigned int)v8 ^ ((_DWORD)v8 << 15) & 0xEFC60000) >> 18);\n  }\n  return result;\n}\n\n__int64 sub_418170()\n{\n  int v0; // eax\n  signed __int64 v1; // rcx\n  int v2; // edx\n  signed __int64 i; // rdx\n  int v4; // ecx\n  __int64 v5; // rdx\n  unsigned int v6; // ecx\n  int v7; // eax\n  _DWORD *v8; // rax\n  __int64 result; // rax\n\n  v7 = dword_4225E4--;\n  if ( v7 <= 0 )\n  {\n    if ( dword_4225E4 >= -1 )\n    {\n      v0 = dword_422680[0];\n    }\n    else\n    {\n      dword_4225E4 = 0;\n      dword_422680[0] = 4357;\n      v0 = 4357;\n      v1 = 1LL;\n      v2 = 4357;\n      do\n      {\n        dword_422680[v1] = 69069 * v2;\n        dword_422684[v1] = 475559465 * v2;\n        dword_422688[v1] = -1493191723 * v2;\n        dword_42268C[v1] = 1790562961 * v2;\n        dword_422690[v1] = -1190135011 * v2;\n        dword_422694[v1] = -55996615 * v2;\n        v2 *= 2135332261;\n        dword_422698[v1] = v2;\n        v1 += 7LL;\n      }\n      while ( (_DWORD)(v1 * 4) != 2496 );\n    }\n    dword_4225E4 = 623;\n    qword_423048 = (__int64)dword_422684;\n    for ( i = 1LL; ; i += 2LL )\n    {\n      v4 = dword_422680[i];\n      *(_DWORD *)(i * 4 + 4335228) = dword_422CB0[i] ^ ((v0 & 0x80000000 | dword_422680[i] & 0x7FFFFFFE) >> 1) ^ -(dword_422680[i] & 1) & 0x9908B0DF;\n      v0 = dword_422684[i];\n      if ( (_DWORD)(i * 4) == 908 )\n        break;\n      dword_422680[i] = dword_422CB4[i] ^ ((v4 & 0x80000000 | dword_422684[i] & 0x7FFFFFFE) >> 1) ^ -(dword_422684[i] & 1) & 0x9908B0DF;\n    }\n    v5 = 0LL;\n    do\n    {\n      dword_422A0C[v5] = dword_422680[v5] ^ ((v4 & 0x80000000 | v0 & 0x7FFFFFFE) >> 1) ^ -(v0 & 1) & 0x9908B0DF;\n      v4 = dword_422A14[v5];\n      dword_422A10[v5] = dword_422684[v5] ^ ((v0 & 0x80000000 | dword_422A14[v5] & 0x7FFFFFFE) >> 1) ^ -(dword_422A14[v5] & 1) & 0x9908B0DF;\n      v0 = dword_422A18[v5];\n      v5 += 2LL;\n    }\n    while ( (_DWORD)(v5 * 4) != 1584 );\n    dword_42303C = dword_422CB0[0] ^ ((v4 & 0x80000000 | dword_422680[0] & 0x7FFFFFFE) >> 1) ^ -(dword_422680[0] & 1) & 0x9908B0DF;\n    v6 = dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11) ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11)) << 7) & 0x9D2C5680 ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11) ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11)) << 7) & 0x9D2C5680) << 15) & 0xEFC60000;\n    result = v6 ^ (v6 >> 18);\n  }\n  else\n  {\n    v8 = (_DWORD *)qword_423048;\n    qword_423048 += 4LL;\n    LODWORD(v8) = *v8 ^ (*v8 >> 11) ^ ((*v8 ^ (*v8 >> 11)) << 7) & 0x9D2C5680;\n    result = (unsigned int)v8 ^ ((_DWORD)v8 << 15) & 0xEFC60000 ^ (((unsigned int)v8 ^ ((_DWORD)v8 << 15) & 0xEFC60000) >> 18);\n  }\n  return result;\n}\n\n__int64 sub_418170()\n{\n  int v0; // eax\n  signed __int64 v1; // rcx\n  int v2; // edx\n  signed __int64 i; // rdx\n  int v4; // ecx\n  __int64 v5; // rdx\n  unsigned int v6; // ecx\n  int v7; // eax\n  _DWORD *v8; // rax\n  __int64 result; // rax\n\n  v7 = dword_4225E4--;\n  if ( v7 <= 0 )\n  {\n    if ( dword_4225E4 >= -1 )\n    {\n      v0 = dword_422680[0];\n    }\n    else\n    {\n      dword_4225E4 = 0;\n      dword_422680[0] = 4357;\n      v0 = 4357;\n      v1 = 1LL;\n      v2 = 4357;\n      do\n      {\n        dword_422680[v1] = 69069 * v2;\n        dword_422684[v1] = 475559465 * v2;\n        dword_422688[v1] = -1493191723 * v2;\n        dword_42268C[v1] = 1790562961 * v2;\n        dword_422690[v1] = -1190135011 * v2;\n        dword_422694[v1] = -55996615 * v2;\n        v2 *= 2135332261;\n        dword_422698[v1] = v2;\n        v1 += 7LL;\n      }\n      while ( (_DWORD)(v1 * 4) != 2496 );\n    }\n    dword_4225E4 = 623;\n    qword_423048 = (__int64)dword_422684;\n    for ( i = 1LL; ; i += 2LL )\n    {\n      v4 = dword_422680[i];\n      *(_DWORD *)(i * 4 + 4335228) = dword_422CB0[i] ^ ((v0 & 0x80000000 | dword_422680[i] & 0x7FFFFFFE) >> 1) ^ -(dword_422680[i] & 1) & 0x9908B0DF;\n      v0 = dword_422684[i];\n      if ( (_DWORD)(i * 4) == 908 )\n        break;\n      dword_422680[i] = dword_422CB4[i] ^ ((v4 & 0x80000000 | dword_422684[i] & 0x7FFFFFFE) >> 1) ^ -(dword_422684[i] & 1) & 0x9908B0DF;\n    }\n    v5 = 0LL;\n    do\n    {\n      dword_422A0C[v5] = dword_422680[v5] ^ ((v4 & 0x80000000 | v0 & 0x7FFFFFFE) >> 1) ^ -(v0 & 1) & 0x9908B0DF;\n      v4 = dword_422A14[v5];\n      dword_422A10[v5] = dword_422684[v5] ^ ((v0 & 0x80000000 | dword_422A14[v5] & 0x7FFFFFFE) >> 1) ^ -(dword_422A14[v5] & 1) & 0x9908B0DF;\n      v0 = dword_422A18[v5];\n      v5 += 2LL;\n    }\n    while ( (_DWORD)(v5 * 4) != 1584 );\n    dword_42303C = dword_422CB0[0] ^ ((v4 & 0x80000000 | dword_422680[0] & 0x7FFFFFFE) >> 1) ^ -(dword_422680[0] & 1) & 0x9908B0DF;\n    v6 = dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11) ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11)) << 7) & 0x9D2C5680 ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11) ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11)) << 7) & 0x9D2C5680) << 15) & 0xEFC60000;\n    result = v6 ^ (v6 >> 18);\n  }\n  else\n  {\n    v8 = (_DWORD *)qword_423048;\n    qword_423048 += 4LL;\n    LODWORD(v8) = *v8 ^ (*v8 >> 11) ^ ((*v8 ^ (*v8 >> 11)) << 7) & 0x9D2C5680;\n    result = (unsigned int)v8 ^ ((_DWORD)v8 << 15) & 0xEFC60000 ^ (((unsigned int)v8 ^ ((_DWORD)v8 << 15) & 0xEFC60000) >> 18);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x418020L", 
            "funcEndAddr": "0x418168L", 
            "funcName": "sub_418170"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_418170()\n{\n  int v0; // eax\n  signed __int64 v1; // rcx\n  int v2; // edx\n  signed __int64 i; // rdx\n  int v4; // ecx\n  __int64 v5; // rdx\n  unsigned int v6; // ecx\n  int v7; // eax\n  _DWORD *v8; // rax\n  __int64 result; // rax\n\n  v7 = dword_4225E4--;\n  if ( v7 <= 0 )\n  {\n    if ( dword_4225E4 >= -1 )\n    {\n      v0 = dword_422680[0];\n    }\n    else\n    {\n      dword_4225E4 = 0;\n      dword_422680[0] = 4357;\n      v0 = 4357;\n      v1 = 1LL;\n      v2 = 4357;\n      do\n      {\n        dword_422680[v1] = 69069 * v2;\n        dword_422684[v1] = 475559465 * v2;\n        dword_422688[v1] = -1493191723 * v2;\n        dword_42268C[v1] = 1790562961 * v2;\n        dword_422690[v1] = -1190135011 * v2;\n        dword_422694[v1] = -55996615 * v2;\n        v2 *= 2135332261;\n        dword_422698[v1] = v2;\n        v1 += 7LL;\n      }\n      while ( (_DWORD)(v1 * 4) != 2496 );\n    }\n    dword_4225E4 = 623;\n    qword_423048 = (__int64)dword_422684;\n    for ( i = 1LL; ; i += 2LL )\n    {\n      v4 = dword_422680[i];\n      *(_DWORD *)(i * 4 + 4335228) = dword_422CB0[i] ^ ((v0 & 0x80000000 | dword_422680[i] & 0x7FFFFFFE) >> 1) ^ -(dword_422680[i] & 1) & 0x9908B0DF;\n      v0 = dword_422684[i];\n      if ( (_DWORD)(i * 4) == 908 )\n        break;\n      dword_422680[i] = dword_422CB4[i] ^ ((v4 & 0x80000000 | dword_422684[i] & 0x7FFFFFFE) >> 1) ^ -(dword_422684[i] & 1) & 0x9908B0DF;\n    }\n    v5 = 0LL;\n    do\n    {\n      dword_422A0C[v5] = dword_422680[v5] ^ ((v4 & 0x80000000 | v0 & 0x7FFFFFFE) >> 1) ^ -(v0 & 1) & 0x9908B0DF;\n      v4 = dword_422A14[v5];\n      dword_422A10[v5] = dword_422684[v5] ^ ((v0 & 0x80000000 | dword_422A14[v5] & 0x7FFFFFFE) >> 1) ^ -(dword_422A14[v5] & 1) & 0x9908B0DF;\n      v0 = dword_422A18[v5];\n      v5 += 2LL;\n    }\n    while ( (_DWORD)(v5 * 4) != 1584 );\n    dword_42303C = dword_422CB0[0] ^ ((v4 & 0x80000000 | dword_422680[0] & 0x7FFFFFFE) >> 1) ^ -(dword_422680[0] & 1) & 0x9908B0DF;\n    v6 = dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11) ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11)) << 7) & 0x9D2C5680 ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11) ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11)) << 7) & 0x9D2C5680) << 15) & 0xEFC60000;\n    result = v6 ^ (v6 >> 18);\n  }\n  else\n  {\n    v8 = (_DWORD *)qword_423048;\n    qword_423048 += 4LL;\n    LODWORD(v8) = *v8 ^ (*v8 >> 11) ^ ((*v8 ^ (*v8 >> 11)) << 7) & 0x9D2C5680;\n    result = (unsigned int)v8 ^ ((_DWORD)v8 << 15) & 0xEFC60000 ^ (((unsigned int)v8 ^ ((_DWORD)v8 << 15) & 0xEFC60000) >> 18);\n  }\n  return result;\n}\n\n__int64 sub_418170()\n{\n  int v0; // eax\n  signed __int64 v1; // rcx\n  int v2; // edx\n  signed __int64 i; // rdx\n  int v4; // ecx\n  __int64 v5; // rdx\n  unsigned int v6; // ecx\n  int v7; // eax\n  _DWORD *v8; // rax\n  __int64 result; // rax\n\n  v7 = dword_4225E4--;\n  if ( v7 <= 0 )\n  {\n    if ( dword_4225E4 >= -1 )\n    {\n      v0 = dword_422680[0];\n    }\n    else\n    {\n      dword_4225E4 = 0;\n      dword_422680[0] = 4357;\n      v0 = 4357;\n      v1 = 1LL;\n      v2 = 4357;\n      do\n      {\n        dword_422680[v1] = 69069 * v2;\n        dword_422684[v1] = 475559465 * v2;\n        dword_422688[v1] = -1493191723 * v2;\n        dword_42268C[v1] = 1790562961 * v2;\n        dword_422690[v1] = -1190135011 * v2;\n        dword_422694[v1] = -55996615 * v2;\n        v2 *= 2135332261;\n        dword_422698[v1] = v2;\n        v1 += 7LL;\n      }\n      while ( (_DWORD)(v1 * 4) != 2496 );\n    }\n    dword_4225E4 = 623;\n    qword_423048 = (__int64)dword_422684;\n    for ( i = 1LL; ; i += 2LL )\n    {\n      v4 = dword_422680[i];\n      *(_DWORD *)(i * 4 + 4335228) = dword_422CB0[i] ^ ((v0 & 0x80000000 | dword_422680[i] & 0x7FFFFFFE) >> 1) ^ -(dword_422680[i] & 1) & 0x9908B0DF;\n      v0 = dword_422684[i];\n      if ( (_DWORD)(i * 4) == 908 )\n        break;\n      dword_422680[i] = dword_422CB4[i] ^ ((v4 & 0x80000000 | dword_422684[i] & 0x7FFFFFFE) >> 1) ^ -(dword_422684[i] & 1) & 0x9908B0DF;\n    }\n    v5 = 0LL;\n    do\n    {\n      dword_422A0C[v5] = dword_422680[v5] ^ ((v4 & 0x80000000 | v0 & 0x7FFFFFFE) >> 1) ^ -(v0 & 1) & 0x9908B0DF;\n      v4 = dword_422A14[v5];\n      dword_422A10[v5] = dword_422684[v5] ^ ((v0 & 0x80000000 | dword_422A14[v5] & 0x7FFFFFFE) >> 1) ^ -(dword_422A14[v5] & 1) & 0x9908B0DF;\n      v0 = dword_422A18[v5];\n      v5 += 2LL;\n    }\n    while ( (_DWORD)(v5 * 4) != 1584 );\n    dword_42303C = dword_422CB0[0] ^ ((v4 & 0x80000000 | dword_422680[0] & 0x7FFFFFFE) >> 1) ^ -(dword_422680[0] & 1) & 0x9908B0DF;\n    v6 = dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11) ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11)) << 7) & 0x9D2C5680 ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11) ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11)) << 7) & 0x9D2C5680) << 15) & 0xEFC60000;\n    result = v6 ^ (v6 >> 18);\n  }\n  else\n  {\n    v8 = (_DWORD *)qword_423048;\n    qword_423048 += 4LL;\n    LODWORD(v8) = *v8 ^ (*v8 >> 11) ^ ((*v8 ^ (*v8 >> 11)) << 7) & 0x9D2C5680;\n    result = (unsigned int)v8 ^ ((_DWORD)v8 << 15) & 0xEFC60000 ^ (((unsigned int)v8 ^ ((_DWORD)v8 << 15) & 0xEFC60000) >> 18);\n  }\n  return result;\n}\n\n__int64 sub_418170()\n{\n  int v0; // eax\n  signed __int64 v1; // rcx\n  int v2; // edx\n  signed __int64 i; // rdx\n  int v4; // ecx\n  __int64 v5; // rdx\n  unsigned int v6; // ecx\n  int v7; // eax\n  _DWORD *v8; // rax\n  __int64 result; // rax\n\n  v7 = dword_4225E4--;\n  if ( v7 <= 0 )\n  {\n    if ( dword_4225E4 >= -1 )\n    {\n      v0 = dword_422680[0];\n    }\n    else\n    {\n      dword_4225E4 = 0;\n      dword_422680[0] = 4357;\n      v0 = 4357;\n      v1 = 1LL;\n      v2 = 4357;\n      do\n      {\n        dword_422680[v1] = 69069 * v2;\n        dword_422684[v1] = 475559465 * v2;\n        dword_422688[v1] = -1493191723 * v2;\n        dword_42268C[v1] = 1790562961 * v2;\n        dword_422690[v1] = -1190135011 * v2;\n        dword_422694[v1] = -55996615 * v2;\n        v2 *= 2135332261;\n        dword_422698[v1] = v2;\n        v1 += 7LL;\n      }\n      while ( (_DWORD)(v1 * 4) != 2496 );\n    }\n    dword_4225E4 = 623;\n    qword_423048 = (__int64)dword_422684;\n    for ( i = 1LL; ; i += 2LL )\n    {\n      v4 = dword_422680[i];\n      *(_DWORD *)(i * 4 + 4335228) = dword_422CB0[i] ^ ((v0 & 0x80000000 | dword_422680[i] & 0x7FFFFFFE) >> 1) ^ -(dword_422680[i] & 1) & 0x9908B0DF;\n      v0 = dword_422684[i];\n      if ( (_DWORD)(i * 4) == 908 )\n        break;\n      dword_422680[i] = dword_422CB4[i] ^ ((v4 & 0x80000000 | dword_422684[i] & 0x7FFFFFFE) >> 1) ^ -(dword_422684[i] & 1) & 0x9908B0DF;\n    }\n    v5 = 0LL;\n    do\n    {\n      dword_422A0C[v5] = dword_422680[v5] ^ ((v4 & 0x80000000 | v0 & 0x7FFFFFFE) >> 1) ^ -(v0 & 1) & 0x9908B0DF;\n      v4 = dword_422A14[v5];\n      dword_422A10[v5] = dword_422684[v5] ^ ((v0 & 0x80000000 | dword_422A14[v5] & 0x7FFFFFFE) >> 1) ^ -(dword_422A14[v5] & 1) & 0x9908B0DF;\n      v0 = dword_422A18[v5];\n      v5 += 2LL;\n    }\n    while ( (_DWORD)(v5 * 4) != 1584 );\n    dword_42303C = dword_422CB0[0] ^ ((v4 & 0x80000000 | dword_422680[0] & 0x7FFFFFFE) >> 1) ^ -(dword_422680[0] & 1) & 0x9908B0DF;\n    v6 = dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11) ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11)) << 7) & 0x9D2C5680 ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11) ^ ((dword_422680[0] ^ ((unsigned int)dword_422680[0] >> 11)) << 7) & 0x9D2C5680) << 15) & 0xEFC60000;\n    result = v6 ^ (v6 >> 18);\n  }\n  else\n  {\n    v8 = (_DWORD *)qword_423048;\n    qword_423048 += 4LL;\n    LODWORD(v8) = *v8 ^ (*v8 >> 11) ^ ((*v8 ^ (*v8 >> 11)) << 7) & 0x9D2C5680;\n    result = (unsigned int)v8 ^ ((_DWORD)v8 << 15) & 0xEFC60000 ^ (((unsigned int)v8 ^ ((_DWORD)v8 << 15) & 0xEFC60000) >> 18);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x418020L", 
            "funcEndAddr": "0x418168L", 
            "funcName": "sub_418170"
        }, 
        {
            "decompiledFuncCode": "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v3; // r15\n  signed __int64 v4; // rbp\n  __int64 v5; // rbx\n\n  v3 = a3;\n  v4 = ((char *)&stru_421E08 - (char *)&off_421E00) >> 3;\n  init_proc();\n  if ( v4 )\n  {\n    v5 = 0LL;\n    do\n      ((void (__fastcall *)(_QWORD, __int64, __int64))*(&off_421E00 + v5++))(a1, a2, v3);\n    while ( v4 != v5 );\n  }\n}\n", 
            "funcStartAddr": "0x4181d0L", 
            "funcEndAddr": "0x418235L", 
            "funcName": "init"
        }, 
        {
            "decompiledFuncCode": "void fini(void)\n{\n  ;\n}\n", 
            "funcStartAddr": "0x418240L", 
            "funcEndAddr": "0x418242L", 
            "funcName": "fini"
        }
    ], 
    "failedCount": 0, 
    "binaryInfo": {
        "binaryName": "sjeng-amd64-clang-O2_strip", 
        "isStripped": "True"
    }, 
    "funcCount": "117", 
    "buildInfo": {
        "decompilerName": "IDA Pro", 
        "compilerVersion": "9.4.0", 
        "Optlevel": "-O", 
        "compilerName": "gcc"
    }, 
    "recognizedCount": 0
}