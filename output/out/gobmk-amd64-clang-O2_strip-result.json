{
    "decompileResult": [
        {
            "decompiledFuncCode": "void *sub_401200()\n{\n  void *result; // rax\n\n  result = &unk_751E98;\n  if ( &unk_751E98 != &unk_751E98 )\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x401200L", 
            "funcEndAddr": "0x401221L", 
            "funcName": "sub_401200"
        }, 
        {
            "decompiledFuncCode": "void *sub_401270()\n{\n  void *result; // rax\n\n  if ( !byte_751EA0 )\n  {\n    result = sub_401200();\n    byte_751EA0 = 1;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x401270L", 
            "funcEndAddr": "0x401291L", 
            "funcName": "sub_401270"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_4012A0()\n{\n  return 0LL;\n}\n\n__int64 sub_4012A0()\n{\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x401230L", 
            "funcEndAddr": "0x401261L", 
            "funcName": "sub_4012A0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_4012A0()\n{\n  return 0LL;\n}\n\n__int64 sub_4012A0()\n{\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x401230L", 
            "funcEndAddr": "0x401261L", 
            "funcName": "sub_4012A0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4012B0(__int64 a1, int a2)\n{\n  __int64 v2; // rbx\n  size_t v3; // rcx\n  signed __int64 result; // rax\n  __int32_t v5; // ebx\n  int v6; // ebx\n\n  v2 = *(_QWORD *)(a1 + 16);\n  v3 = strlen(*(const char **)(a1 + 16));\n  result = 0xFFFFFFFFLL;\n  if ( v3 >= 2 )\n  {\n    v5 = *(char *)(v2 + 1);\n    if ( (unsigned int)(v5 + 128) <= 0x17F )\n      v5 = (*__ctype_toupper_loc())[v5];\n    v6 = v5 - 65;\n    result = 0xFFFFFFFFLL;\n    if ( v6 < a2 )\n      result = (unsigned int)v6;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4012b0L", 
            "funcEndAddr": "0x401301L", 
            "funcName": "sub_4012B0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_401310(__int64 a1, int a2)\n{\n  char *v2; // rbx\n  size_t v3; // rcx\n  signed __int64 result; // rax\n  __int32_t v5; // ebx\n  int v6; // ebx\n\n  v2 = *(char **)(a1 + 16);\n  v3 = strlen(*(const char **)(a1 + 16));\n  result = 0xFFFFFFFFLL;\n  if ( v3 >= 2 )\n  {\n    v5 = *v2;\n    if ( (unsigned int)(v5 + 128) <= 0x17F )\n      v5 = (*__ctype_toupper_loc())[v5];\n    v6 = v5 - 65;\n    result = 0xFFFFFFFFLL;\n    if ( v6 < a2 )\n      result = (unsigned int)v6;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x401310L", 
            "funcEndAddr": "0x401360L", 
            "funcName": "sub_401310"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_401360(__int64 a1, signed int *a2, signed int *a3, int a4)\n{\n  int v4; // er15\n  signed int *v5; // r14\n  const char *v6; // r13\n  size_t v7; // rax\n  signed int v8; // ebx\n  signed int v9; // ecx\n  __int32_t v10; // ebp\n  int v11; // ebp\n  __int32_t v12; // ebp\n  int v13; // ebp\n\n  v4 = a4;\n  v5 = a3;\n  v6 = *(const char **)(a1 + 16);\n  v7 = strlen(*(const char **)(a1 + 16));\n  v8 = -1;\n  v9 = -1;\n  if ( v7 >= 2 )\n  {\n    v10 = v6[1];\n    if ( (unsigned int)(v10 + 128) <= 0x17F )\n      v10 = (*__ctype_toupper_loc())[v10];\n    v11 = v10 - 65;\n    v9 = -1;\n    if ( v11 < v4 )\n      v9 = v11;\n  }\n  *a2 = v9;\n  if ( strlen(v6) >= 2 )\n  {\n    v12 = *v6;\n    if ( (unsigned int)(v12 + 128) <= 0x17F )\n      v12 = (*__ctype_toupper_loc())[v12];\n    v13 = v12 - 65;\n    v8 = -1;\n    if ( v13 < v4 )\n      v8 = v13;\n  }\n  *v5 = v8;\n  return (*a2 & v8) != -1;\n}\n", 
            "funcStartAddr": "0x401360L", 
            "funcEndAddr": "0x40141aL", 
            "funcName": "sub_401360"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_401420(__int64 **a1)\n{\n  __int64 *v1; // rbx\n  unsigned int v2; // ebp\n\n  printf(\"P: \");\n  v1 = *a1;\n  if ( *a1 )\n  {\n    v2 = 0;\n    do\n    {\n      printf(\"%c%c \", (unsigned __int8)*((_WORD *)v1 + 4), (unsigned __int8)(*((_WORD *)v1 + 4) >> 8));\n      v1 = (__int64 *)*v1;\n      ++v2;\n    }\n    while ( v1 );\n    printf(\"(%d) \", v2);\n    if ( a1[3] )\n      putchar(110);\n    if ( a1[2] )\n      putchar(99);\n    putchar(10);\n  }\n  else\n  {\n    puts(\"None\");\n    v2 = 0;\n  }\n  return v2;\n}\n", 
            "funcStartAddr": "0x401420L", 
            "funcEndAddr": "0x4014b0L", 
            "funcName": "sub_401420"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4014B0(__int64 a1)\n{\n  __int64 v1; // rbx\n  __int64 v2; // rdi\n  unsigned int v3; // ebp\n  __int64 v4; // rdi\n  __int64 result; // rax\n\n  v1 = a1;\n  sub_401420((__int64 **)a1);\n  v2 = *(_QWORD *)(a1 + 16);\n  if ( v2 )\n    v3 = (unsigned __int64)sub_4014B0(v2) + 1;\n  else\n    v3 = 1;\n  v4 = *(_QWORD *)(v1 + 24);\n  if ( v4 )\n    result = v3 + (unsigned int)sub_4014B0(v4);\n  else\n    result = v3;\n  return result;\n}\n", 
            "funcStartAddr": "0x4014b0L", 
            "funcEndAddr": "0x4014f0L", 
            "funcName": "sub_4014B0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4015E0(__int64 ***a1, int a2)\n{\n  __int64 **v2; // rcx\n  _BOOL8 result; // rax\n  int v4; // edx\n  char *v5; // r15\n  int v6; // ebp\n  signed int v7; // er12\n  __int32_t v8; // ebp\n  __int32_t v9; // ebx\n  int v10; // ebx\n\n  v2 = *a1;\n  result = 0LL;\n  if ( *a1 )\n  {\n    while ( 1 )\n    {\n      v4 = *((signed __int16 *)v2 + 4);\n      if ( v4 == 8279 || v4 == 8258 )\n        break;\n      v2 = (__int64 **)*v2;\n      if ( !v2 )\n        return result;\n    }\n    v5 = (char *)v2[2];\n    v6 = -1;\n    v7 = -1;\n    if ( strlen((const char *)v2[2]) >= 2 )\n    {\n      v8 = v5[1];\n      if ( (unsigned int)(v8 + 128) <= 0x17F )\n        v8 = (*__ctype_toupper_loc())[v8];\n      v6 = v8 - 65;\n      v7 = -1;\n      if ( v6 >= a2 )\n        v6 = -1;\n      v9 = *v5;\n      if ( (unsigned int)(v9 + 128) <= 0x17F )\n        v9 = (*__ctype_toupper_loc())[v9];\n      v10 = v9 - 65;\n      if ( v10 < a2 )\n        v7 = v10;\n    }\n    result = (v7 & v6) == -1;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4015e0L", 
            "funcEndAddr": "0x4016a8L", 
            "funcName": "sub_4015E0"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_4016F0(_OWORD *a1)\n{\n  *a1 = 0LL;\n}\n", 
            "funcStartAddr": "0x4016f0L", 
            "funcEndAddr": "0x4016f7L", 
            "funcName": "sub_4016F0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_401700(__int64 a1, char *a2)\n{\n  void *v2; // r14\n  __int64 v3; // rax\n  signed __int64 result; // rax\n\n  v2 = *(void **)a1;\n  v3 = sub_403050(a2);\n  *(_QWORD *)a1 = v3;\n  if ( v3 )\n  {\n    sub_401BB0(v2);\n    *(_QWORD *)(a1 + 8) = 0LL;\n    result = 1LL;\n  }\n  else\n  {\n    *(_QWORD *)a1 = v2;\n    result = 0LL;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x401700L", 
            "funcEndAddr": "0x40173eL", 
            "funcName": "sub_401700"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_401740(__int64 *a1)\n{\n  __int64 v1; // rax\n  __int64 v2; // rax\n  signed __int64 result; // rax\n  __int64 v4; // rax\n\n  v1 = a1[1];\n  if ( v1 )\n  {\n    v2 = *(_QWORD *)(v1 + 8);\n    if ( v2 )\n    {\n      a1[1] = v2;\n      result = 1LL;\n    }\n    else\n    {\n      result = 0LL;\n    }\n  }\n  else\n  {\n    do\n    {\nLABEL_6:\n      v4 = *a1;\n      a1[1] = *a1;\n    }\n    while ( !v4 );\n    while ( 1 )\n    {\n      v4 = *(_QWORD *)(v4 + 16);\n      if ( !v4 )\n        break;\n      a1[1] = v4;\n      if ( !v4 )\n        goto LABEL_6;\n    }\n    result = 1LL;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x401740L", 
            "funcEndAddr": "0x401797L", 
            "funcName": "sub_401740"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4017A0(__int64 *a1)\n{\n  __int64 v1; // rax\n  __int64 v2; // rax\n\n  v1 = a1[1];\n  if ( v1 )\n  {\n    v2 = *(_QWORD *)(v1 + 16);\n    if ( !v2 )\n      return 0LL;\n  }\n  else\n  {\n    v2 = *a1;\n  }\n  a1[1] = v2;\n  return 1LL;\n}\n", 
            "funcStartAddr": "0x4017a0L", 
            "funcEndAddr": "0x4017c2L", 
            "funcName": "sub_4017A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_401820(__int64 *a1)\n{\n  __int64 v1; // rax\n  __int64 result; // rax\n\n  if ( !a1[1] )\n  {\n    v1 = *a1;\n    do\n      v1 = *(_QWORD *)(v1 + 16);\n    while ( v1 );\n  }\n  result = sub_402280();\n  a1[1] = result;\n  return result;\n}\n", 
            "funcStartAddr": "0x401820L", 
            "funcEndAddr": "0x401847L", 
            "funcName": "sub_401820"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_401850(__int64 *a1)\n{\n  __int64 v1; // rax\n  __int64 result; // rax\n\n  if ( !a1[1] )\n  {\n    v1 = *a1;\n    do\n      v1 = *(_QWORD *)(v1 + 16);\n    while ( v1 );\n  }\n  result = sub_402400();\n  a1[1] = result;\n  return result;\n}\n", 
            "funcStartAddr": "0x401850L", 
            "funcEndAddr": "0x401877L", 
            "funcName": "sub_401850"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_401880(__int64 *a1, int a2)\n{\n  __int64 v2; // rbx\n  __int64 result; // rax\n\n  v2 = sub_401B60();\n  sub_401D40(v2, \"SZ\", a2);\n  result = sub_401DB0(v2, \"KM\");\n  *a1 = v2;\n  a1[1] = v2;\n  return result;\n}\n", 
            "funcStartAddr": "0x401880L", 
            "funcEndAddr": "0x4018ceL", 
            "funcName": "sub_401880"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4018D0(__int64 *a1)\n{\n  __int64 v1; // rax\n\n  if ( !a1[1] )\n  {\n    v1 = *a1;\n    do\n      v1 = *(_QWORD *)(v1 + 16);\n    while ( v1 );\n  }\n  return sub_402640();\n}\n", 
            "funcStartAddr": "0x4018d0L", 
            "funcEndAddr": "0x4018f1L", 
            "funcName": "sub_4018D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_401A50(__int64 *a1)\n{\n  __int64 v1; // rax\n  __int64 result; // rax\n\n  if ( !a1[1] )\n  {\n    v1 = *a1;\n    do\n      v1 = *(_QWORD *)(v1 + 16);\n    while ( v1 );\n  }\n  result = sub_402A40();\n  a1[1] = result;\n  return result;\n}\n", 
            "funcStartAddr": "0x401a50L", 
            "funcEndAddr": "0x401a77L", 
            "funcName": "sub_401A50"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_401A80(__int64 *a1)\n{\n  __int64 v1; // rax\n  __int64 result; // rax\n\n  if ( !a1[1] )\n  {\n    v1 = *a1;\n    do\n      v1 = *(_QWORD *)(v1 + 16);\n    while ( v1 );\n  }\n  result = sub_402390();\n  a1[1] = result;\n  return result;\n}\n", 
            "funcStartAddr": "0x401a80L", 
            "funcEndAddr": "0x401aa7L", 
            "funcName": "sub_401A80"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_401AB0(_QWORD *a1)\n{\n  return sub_402AB0(*a1);\n}\n", 
            "funcStartAddr": "0x401ab0L", 
            "funcEndAddr": "0x401ab8L", 
            "funcName": "sub_401AB0"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_401AC0(__int64 a1, __int64 a2)\n{\n  *(_QWORD *)(a1 + 8) = a2;\n}\n", 
            "funcStartAddr": "0x401ac0L", 
            "funcEndAddr": "0x401ac5L", 
            "funcName": "sub_401AC0"
        }, 
        {
            "decompiledFuncCode": "void *__fastcall sub_401AD0(size_t n)\n{\n  void *v1; // rax\n\n  v1 = malloc((unsigned int)n);\n  if ( !v1 )\n  {\n    fwrite(\"xalloc: Out of memory!\\n\", 0x17uLL, 1uLL, stderr);\n    exit(2);\n  }\n  return memset(v1, 0, (unsigned int)n);\n}\n", 
            "funcStartAddr": "0x401ad0L", 
            "funcEndAddr": "0x401b13L", 
            "funcName": "sub_401AD0"
        }, 
        {
            "decompiledFuncCode": "_OWORD *sub_401B60()\n{\n  _OWORD *result; // rax\n\n  result = malloc(0x20uLL);\n  if ( !result )\n  {\n    fwrite(\"xalloc: Out of memory!\\n\", 0x17uLL, 1uLL, stderr);\n    exit(2);\n  }\n  result[1] = 0LL;\n  *result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x401b60L", 
            "funcEndAddr": "0x401ba1L", 
            "funcName": "sub_401B60"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_401BB0(void *ptr)\n{\n  if ( ptr )\n  {\n    sub_401BB0(*((void **)ptr + 3));\n    sub_401BB0(*((void **)ptr + 2));\n    sub_401BE0(*(void **)ptr);\n    free(ptr);\n  }\n}\n", 
            "funcStartAddr": "0x401bb0L", 
            "funcEndAddr": "0x401bdeL", 
            "funcName": "sub_401BB0"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_401BE0(void *ptr)\n{\n  if ( ptr )\n  {\n    sub_401BE0(*(void **)ptr);\n    free(*((void **)ptr + 2));\n    free(ptr);\n  }\n}\n", 
            "funcStartAddr": "0x401be0L", 
            "funcEndAddr": "0x401c05L", 
            "funcName": "sub_401BE0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_401C10(_QWORD **a1, char *a2, char *a3)\n{\n  _QWORD *i; // rdi\n\n  for ( i = *a1; i; i = (_QWORD *)*i )\n    ;\n  return sub_401C40(a2, a3);\n}\n", 
            "funcStartAddr": "0x401c10L", 
            "funcEndAddr": "0x401c3aL", 
            "funcName": "sub_401C10"
        }, 
        {
            "decompiledFuncCode": "_QWORD *__fastcall sub_401C40(char *s, char *src, _QWORD *a3, _QWORD *a4)\n{\n  _QWORD *v4; // r12\n  _QWORD *v5; // rax\n  _QWORD *v6; // rbx\n  size_t v7; // r14\n  char *v8; // rax\n  char *v9; // rbp\n  int v10; // eax\n  _QWORD *v12; // [rsp+0h] [rbp-38h]\n\n  v12 = a4;\n  v4 = a3;\n  v5 = malloc(0x18uLL);\n  v6 = v5;\n  if ( !v5\n    || (*(_OWORD *)v5 = 0LL, v5[2] = 0LL, v7 = (unsigned int)strlen(src) + 1, v8 = (char *)malloc(v7), (v9 = v8) == 0LL) )\n  {\n    fwrite(\"xalloc: Out of memory!\\n\", 0x17uLL, 1uLL, stderr);\n    exit(2);\n  }\n  memset(v8, 0, v7);\n  v6[2] = v9;\n  *v6 = 0LL;\n  if ( strlen(s) == 1 )\n    LOWORD(v10) = *s | 0x2000;\n  else\n    v10 = ((unsigned __int8)s[1] << 8) | *s;\n  *((_WORD *)v6 + 4) = v10;\n  strcpy(v9, src);\n  if ( v12 )\n    v4 = v12;\n  *v4 = v6;\n  return v6;\n}\n", 
            "funcStartAddr": "0x401c40L", 
            "funcEndAddr": "0x401d32L", 
            "funcName": "sub_401C40"
        }, 
        {
            "decompiledFuncCode": "_QWORD *__fastcall sub_401D40(_QWORD *a1, char *a2, __int64 a3)\n{\n  _QWORD *v3; // rbx\n  _QWORD *v4; // rax\n  char src; // [rsp+6h] [rbp-22h]\n\n  v3 = 0LL;\n  sub_4937C0(&src, 10LL, &off_49441D, a3);\n  v4 = (_QWORD *)*a1;\n  if ( *a1 )\n  {\n    do\n    {\n      v3 = v4;\n      v4 = (_QWORD *)*v4;\n    }\n    while ( v4 );\n  }\n  return sub_401C40(a2, &src, a1, v3);\n}\n", 
            "funcStartAddr": "0x401d40L", 
            "funcEndAddr": "0x401da8L", 
            "funcName": "sub_401D40"
        }, 
        {
            "decompiledFuncCode": "_QWORD *__fastcall sub_401DB0(_QWORD *a1, char *a2, __int64 a3, __int64 a4)\n{\n  _QWORD *v4; // rax\n  _QWORD *v5; // rcx\n  char src; // [rsp+Eh] [rbp-1Ah]\n\n  sub_4937C0(&src, 10LL, \"%3.1f\", a4);\n  v4 = (_QWORD *)*a1;\n  if ( *a1 )\n  {\n    do\n    {\n      v5 = v4;\n      v4 = (_QWORD *)*v4;\n    }\n    while ( v4 );\n  }\n  else\n  {\n    v5 = 0LL;\n  }\n  return sub_401C40(a2, &src, a1, v5);\n}\n", 
            "funcStartAddr": "0x401db0L", 
            "funcEndAddr": "0x401e07L", 
            "funcName": "sub_401DB0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_401E10(__int64 **a1, char *a2, _DWORD *a3)\n{\n  _DWORD *v3; // rbx\n  __int64 *v4; // rcx\n  signed __int64 result; // rax\n  int v6; // edx\n\n  v3 = a3;\n  v4 = *a1;\n  result = 0LL;\n  if ( *a1 )\n  {\n    v6 = *a2 | ((unsigned __int8)a2[1] << 8);\n    while ( *((_WORD *)v4 + 4) != (_WORD)v6 )\n    {\n      v4 = (__int64 *)*v4;\n      if ( !v4 )\n        return result;\n    }\n    *v3 = strtol((const char *)v4[2], 0LL, 10);\n    result = 1LL;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x401e10L", 
            "funcEndAddr": "0x401e59L", 
            "funcName": "sub_401E10"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_401E60(__int64 **a1, char *a2, float *a3)\n{\n  float *v3; // rbx\n  __int64 *v4; // rcx\n  signed __int64 result; // rax\n  int v6; // edx\n  float v7; // xmm0_4\n\n  v3 = a3;\n  v4 = *a1;\n  result = 0LL;\n  if ( *a1 )\n  {\n    v6 = *a2 | ((unsigned __int8)a2[1] << 8);\n    while ( *((_WORD *)v4 + 4) != (_WORD)v6 )\n    {\n      v4 = (__int64 *)*v4;\n      if ( !v4 )\n        return result;\n    }\n    v7 = strtod((const char *)v4[2], 0LL);\n    *v3 = v7;\n    result = 1LL;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x401e60L", 
            "funcEndAddr": "0x401eaaL", 
            "funcName": "sub_401E60"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_401EB0(__int64 **a1, char *a2, _QWORD *a3)\n{\n  __int64 *v3; // rcx\n  signed __int64 result; // rax\n  int v5; // esi\n\n  v3 = *a1;\n  result = 0LL;\n  if ( *a1 )\n  {\n    v5 = *a2 | ((unsigned __int8)a2[1] << 8);\n    while ( *((_WORD *)v3 + 4) != (_WORD)v5 )\n    {\n      v3 = (__int64 *)*v3;\n      if ( !v3 )\n        return result;\n    }\n    *a3 = v3[2];\n    result = 1LL;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x401eb0L", 
            "funcEndAddr": "0x401eecL", 
            "funcName": "sub_401EB0"
        }, 
        {
            "decompiledFuncCode": "char *__fastcall sub_401EF0(_QWORD *a1, char *a2, char *a3)\n{\n  char *v3; // r15\n  _QWORD *v4; // rdx\n  _QWORD *v5; // rbx\n  _QWORD *v6; // rcx\n  void *v8; // r14\n  int v9; // eax\n  char *v10; // rax\n\n  v3 = a3;\n  v4 = (_QWORD *)*a1;\n  if ( *a1 )\n  {\n    v5 = (_QWORD *)*a1;\n    do\n    {\n      if ( *((_WORD *)v5 + 4) == ((unsigned __int16)*a2 | (unsigned __int16)((unsigned __int8)a2[1] << 8)) )\n      {\n        v8 = (void *)v5[2];\n        v9 = strlen(v3);\n        v10 = (char *)realloc(v8, (unsigned int)(v9 + 1));\n        if ( !v10 )\n        {\n          fwrite(\"xrealloc: Out of memory!\\n\", 0x19uLL, 1uLL, stderr);\n          exit(2);\n        }\n        v5[2] = v10;\n        return strcpy(v10, v3);\n      }\n      v5 = (_QWORD *)*v5;\n    }\n    while ( v5 );\n    if ( !v4 )\n      goto LABEL_8;\n    do\n    {\n      v6 = v4;\n      v4 = (_QWORD *)*v4;\n    }\n    while ( v4 );\n  }\n  else\n  {\nLABEL_8:\n    v6 = 0LL;\n  }\n  return (char *)sub_401C40(a2, v3, a1, v6);\n}\n", 
            "funcStartAddr": "0x401ef0L", 
            "funcEndAddr": "0x401fb7L", 
            "funcName": "sub_401EF0"
        }, 
        {
            "decompiledFuncCode": "_QWORD *__fastcall sub_401FC0(_QWORD *a1, char *a2, unsigned int a3)\n{\n  unsigned int v3; // er15\n  _QWORD *v4; // rbp\n  int v5; // eax\n  _QWORD *v6; // rbp\n  _QWORD *v7; // rax\n  _QWORD *result; // rax\n  void *v9; // rax\n  char src; // [rsp+Eh] [rbp-2Ah]\n\n  v3 = a3;\n  v4 = (_QWORD *)*a1;\n  if ( *a1 )\n  {\n    v5 = *a2 | ((unsigned __int8)a2[1] << 8);\n    while ( *((_WORD *)v4 + 4) != (_WORD)v5 )\n    {\n      v4 = (_QWORD *)*v4;\n      if ( !v4 )\n        goto LABEL_5;\n    }\n    v9 = realloc((void *)v4[2], 0xCuLL);\n    if ( !v9 )\n    {\n      fwrite(\"xrealloc: Out of memory!\\n\", 0x19uLL, 1uLL, stderr);\n      exit(2);\n    }\n    v4[2] = v9;\n    result = (_QWORD *)sub_4937C0(v9, 12LL, \"%d\", v3);\n  }\n  else\n  {\nLABEL_5:\n    v6 = 0LL;\n    sub_4937C0(&src, 10LL, &off_49441D, (signed int)a3);\n    v7 = (_QWORD *)*a1;\n    if ( *a1 )\n    {\n      do\n      {\n        v6 = v7;\n        v7 = (_QWORD *)*v7;\n      }\n      while ( v7 );\n    }\n    result = sub_401C40(a2, &src, a1, v6);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x401fc0L", 
            "funcEndAddr": "0x4020baL", 
            "funcName": "sub_401FC0"
        }, 
        {
            "decompiledFuncCode": "_QWORD *__fastcall sub_4020C0(_QWORD *a1, char *a2, __int64 a3, __int64 a4)\n{\n  _QWORD *v4; // rbx\n  _QWORD *v5; // rax\n  _QWORD *v6; // rcx\n  void *v7; // rax\n  _QWORD *result; // rax\n  char src; // [rsp+6h] [rbp-22h]\n\n  v4 = (_QWORD *)*a1;\n  if ( *a1 )\n  {\n    a4 = (unsigned int)*a2;\n    while ( *((_WORD *)v4 + 4) != ((unsigned __int16)a4 | (unsigned __int16)((unsigned __int8)a2[1] << 8)) )\n    {\n      v4 = (_QWORD *)*v4;\n      if ( !v4 )\n        goto LABEL_5;\n    }\n    v7 = realloc((void *)v4[2], 0xFuLL);\n    if ( !v7 )\n    {\n      fwrite(\"xrealloc: Out of memory!\\n\", 0x19uLL, 1uLL, stderr);\n      exit(2);\n    }\n    v4[2] = v7;\n    result = (_QWORD *)sub_4937C0(v7, 15LL, \"%3.1f\", v7);\n  }\n  else\n  {\nLABEL_5:\n    sub_4937C0(&src, 10LL, \"%3.1f\", a4);\n    v5 = (_QWORD *)*a1;\n    if ( *a1 )\n    {\n      do\n      {\n        v6 = v5;\n        v5 = (_QWORD *)*v5;\n      }\n      while ( v5 );\n    }\n    else\n    {\n      v6 = 0LL;\n    }\n    result = sub_401C40(a2, &src, a1, v6);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4020c0L", 
            "funcEndAddr": "0x4021b3L", 
            "funcName": "sub_4020C0"
        }, 
        {
            "decompiledFuncCode": "_QWORD *__usercall sub_402200@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<ecx>, _QWORD *a4@<rdi>, int a5@<esi>)\n{\n  _QWORD *v5; // r14\n  _QWORD *v6; // rbx\n  char *v7; // rdi\n  _QWORD *v8; // rax\n  __int64 v10; // [rsp-4h] [rbp-28h]\n\n  v10 = a1;\n  v5 = a4;\n  v6 = 0LL;\n  sprintf((char *)&v10 + 5, \"%c%c\", (unsigned int)(a3 + 97), (unsigned int)(a2 + 97), a1);\n  v7 = \"AW\";\n  if ( a5 == 2 )\n    v7 = \"AB\";\n  v8 = (_QWORD *)*v5;\n  if ( *v5 )\n  {\n    do\n    {\n      v6 = v8;\n      v8 = (_QWORD *)*v8;\n    }\n    while ( v8 );\n  }\n  sub_401C40(v7, (char *)&v10 + 5, v5, v6);\n  return v5;\n}\n", 
            "funcStartAddr": "0x402200L", 
            "funcEndAddr": "0x402279L", 
            "funcName": "sub_402200"
        }, 
        {
            "decompiledFuncCode": "_QWORD *__usercall sub_402280@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<ecx>, __int64 a4@<rdi>, int a5@<esi>)\n{\n  __int64 v5; // rbp\n  _QWORD *v6; // rax\n  _QWORD *v7; // rbx\n  __int64 v8; // rax\n  char *v9; // rdi\n  _QWORD *v10; // rax\n  _QWORD *v11; // rcx\n  __int64 v13; // [rsp-4h] [rbp-28h]\n  __int64 v14; // [rsp-4h] [rbp-28h]\n\n  v13 = a1;\n  if ( (a2 & a3) == -1 )\n    BYTE5(v13) = 0;\n  else\n    sprintf((char *)&v13 + 5, \"%c%c\", (unsigned int)(a3 + 97), (unsigned int)(a2 + 97), v14);\n  v5 = *(_QWORD *)(a4 + 16);\n  v6 = malloc(0x20uLL);\n  v7 = v6;\n  if ( !v5 )\n  {\n    if ( v6 )\n    {\n      *((_OWORD *)v6 + 1) = 0LL;\n      *(_OWORD *)v6 = 0LL;\n      *(_QWORD *)(a4 + 16) = v6;\n      v6[1] = a4;\n      goto LABEL_11;\n    }\nLABEL_18:\n    fwrite(\"xalloc: Out of memory!\\n\", 0x17uLL, 1uLL, stderr);\n    exit(2);\n  }\n  if ( !v6 )\n    goto LABEL_18;\n  *(_OWORD *)v6 = 0LL;\n  v6[2] = 0LL;\n  v6[3] = v5;\n  v8 = *(_QWORD *)(v5 + 8);\n  if ( v8 )\n  {\n    v7[1] = v8;\n    *(_QWORD *)(v5 + 8) = v7;\n    *(_QWORD *)(v8 + 16) = v7;\n  }\n  else\n  {\n    *(_QWORD *)(v5 + 8) = v7;\n  }\nLABEL_11:\n  v9 = off_494435 + 2;\n  if ( a5 == 2 )\n    v9 = off_494435;\n  v10 = (_QWORD *)*v7;\n  if ( *v7 )\n  {\n    do\n    {\n      v11 = v10;\n      v10 = (_QWORD *)*v10;\n    }\n    while ( v10 );\n  }\n  else\n  {\n    v11 = 0LL;\n  }\n  sub_401C40(v9, (char *)&v13 + 5, v7, v11);\n  return v7;\n}\n", 
            "funcStartAddr": "0x402280L", 
            "funcEndAddr": "0x40238fL", 
            "funcName": "sub_402280"
        }, 
        {
            "decompiledFuncCode": "_QWORD *__fastcall sub_402390(__int64 a1)\n{\n  _QWORD *result; // rax\n  __int64 v2; // rcx\n  _QWORD *v3; // rbx\n\n  result = malloc(0x20uLL);\n  if ( !result )\n  {\n    fwrite(\"xalloc: Out of memory!\\n\", 0x17uLL, 1uLL, stderr);\n    exit(2);\n  }\n  *(_OWORD *)result = 0LL;\n  result[2] = 0LL;\n  result[3] = a1;\n  v2 = *(_QWORD *)(a1 + 8);\n  v3 = (_QWORD *)(a1 + 8);\n  if ( v2 )\n  {\n    result[1] = v2;\n    *v3 = result;\n    v3 = (_QWORD *)(v2 + 16);\n  }\n  *v3 = result;\n  return result;\n}\n", 
            "funcStartAddr": "0x402390L", 
            "funcEndAddr": "0x4023faL", 
            "funcName": "sub_402390"
        }, 
        {
            "decompiledFuncCode": "_QWORD *__fastcall sub_402400(__int64 a1, int a2, int a3, int a4)\n{\n  _QWORD *v4; // rax\n  _QWORD *v5; // rbp\n  __int64 v6; // rax\n  __int64 v7; // rbx\n  _QWORD *v8; // rbx\n  char *v9; // rdi\n  char s; // [rsp+Dh] [rbp-1Bh]\n\n  if ( (a3 & a4) == -1 )\n    s = 0;\n  else\n    sprintf(&s, \"%c%c\", (unsigned int)(a4 + 97), (unsigned int)(a3 + 97));\n  v4 = malloc(0x20uLL);\n  v5 = v4;\n  if ( !v4 )\n  {\n    fwrite(\"xalloc: Out of memory!\\n\", 0x17uLL, 1uLL, stderr);\n    exit(2);\n  }\n  *(_OWORD *)v4 = 0LL;\n  *((_OWORD *)v4 + 1) = 0LL;\n  v4[1] = a1;\n  v6 = *(_QWORD *)(a1 + 16);\n  if ( v6 )\n  {\n    do\n    {\n      v7 = v6;\n      v6 = *(_QWORD *)(v6 + 24);\n    }\n    while ( v6 );\n    v8 = (_QWORD *)(v7 + 24);\n  }\n  else\n  {\n    v8 = (_QWORD *)(a1 + 16);\n  }\n  *v8 = v5;\n  v9 = off_494435 + 2;\n  if ( a2 == 2 )\n    v9 = off_494435;\n  sub_401C40(v9, &s, v5, 0LL);\n  return v5;\n}\n", 
            "funcStartAddr": "0x402400L", 
            "funcEndAddr": "0x4024dbL", 
            "funcName": "sub_402400"
        }, 
        {
            "decompiledFuncCode": "_OWORD *__fastcall sub_4024E0(__int64 a1)\n{\n  _OWORD *result; // rax\n  __int64 v2; // rcx\n  __int64 v3; // rbx\n  _QWORD *v4; // rbx\n\n  result = malloc(0x20uLL);\n  if ( !result )\n  {\n    fwrite(\"xalloc: Out of memory!\\n\", 0x17uLL, 1uLL, stderr);\n    exit(2);\n  }\n  *result = 0LL;\n  result[1] = 0LL;\n  *((_QWORD *)result + 1) = a1;\n  v2 = *(_QWORD *)(a1 + 16);\n  if ( v2 )\n  {\n    do\n    {\n      v3 = v2;\n      v2 = *(_QWORD *)(v2 + 24);\n    }\n    while ( v2 );\n    v4 = (_QWORD *)(v3 + 24);\n  }\n  else\n  {\n    v4 = (_QWORD *)(a1 + 16);\n  }\n  *v4 = result;\n  return result;\n}\n", 
            "funcStartAddr": "0x4024e0L", 
            "funcEndAddr": "0x402550L", 
            "funcName": "sub_4024E0"
        }, 
        {
            "decompiledFuncCode": "_QWORD *__fastcall sub_402640(_QWORD *a1, char *a2)\n{\n  _QWORD *v2; // rax\n  _QWORD *v3; // rcx\n\n  v2 = (_QWORD *)*a1;\n  if ( *a1 )\n  {\n    do\n    {\n      v3 = v2;\n      v2 = (_QWORD *)*v2;\n    }\n    while ( v2 );\n  }\n  else\n  {\n    v3 = 0LL;\n  }\n  sub_401C40(\"C \", a2, a1, v3);\n  return a1;\n}\n", 
            "funcStartAddr": "0x402640L", 
            "funcEndAddr": "0x402671L", 
            "funcName": "sub_402640"
        }, 
        {
            "decompiledFuncCode": "_QWORD *__fastcall sub_402680(__int64 a1, int a2, int a3, const char *a4)\n{\n  const char *v4; // r15\n  int v5; // er13\n  int v6; // eax\n  size_t v7; // r14\n  char *v8; // rax\n  char *v9; // r12\n  _QWORD *v10; // rbx\n  _QWORD *v11; // rax\n  _QWORD *v13; // [rsp+0h] [rbp-38h]\n\n  v4 = a4;\n  v5 = a3;\n  v6 = strlen(a4);\n  v7 = (unsigned int)(v6 + 3);\n  v8 = (char *)malloc(v7);\n  v9 = v8;\n  if ( !v8 )\n  {\n    fwrite(\"xalloc: Out of memory!\\n\", 0x17uLL, 1uLL, stderr);\n    exit(2);\n  }\n  v10 = 0LL;\n  memset(v8, 0, v7);\n  sprintf(v9, \"%c%c:%s\", (unsigned int)(v5 + 97), (unsigned int)(a2 + 97), v4, a1);\n  v11 = (_QWORD *)*v13;\n  if ( *v13 )\n  {\n    do\n    {\n      v10 = v11;\n      v11 = (_QWORD *)*v11;\n    }\n    while ( v11 );\n  }\n  sub_401C40(\"LB\", v9, v13, v10);\n  free(v9);\n  return v13;\n}\n", 
            "funcStartAddr": "0x402680L", 
            "funcEndAddr": "0x40274dL", 
            "funcName": "sub_402680"
        }, 
        {
            "decompiledFuncCode": "_QWORD *__fastcall sub_402840(_QWORD *a1, __int64 a2, __int64 a3, int a4)\n{\n  _QWORD *v4; // rbx\n  _QWORD *v5; // rax\n  __int64 v7; // [rsp+0h] [rbp-28h]\n\n  v4 = 0LL;\n  sub_4937C0(&v7, 16LL, \"%c%c:%s\", (unsigned int)(a4 + 97));\n  v5 = (_QWORD *)*a1;\n  if ( *a1 )\n  {\n    do\n    {\n      v4 = v5;\n      v5 = (_QWORD *)*v5;\n    }\n    while ( v5 );\n  }\n  sub_401C40(\"LB\", (char *)&v7, a1, v4);\n  return a1;\n}\n", 
            "funcStartAddr": "0x402840L", 
            "funcEndAddr": "0x4028a9L", 
            "funcName": "sub_402840"
        }, 
        {
            "decompiledFuncCode": "_QWORD *__fastcall sub_4028B0(_QWORD *a1, __int64 a2, __int64 a3, int a4)\n{\n  _QWORD *v4; // rbx\n  _QWORD *v5; // rax\n  __int64 v7; // [rsp+0h] [rbp-28h]\n\n  v4 = 0LL;\n  sub_4937C0(&v7, 16LL, \"%c%c:%d\", (unsigned int)(a4 + 97));\n  v5 = (_QWORD *)*a1;\n  if ( *a1 )\n  {\n    do\n    {\n      v4 = v5;\n      v5 = (_QWORD *)*v5;\n    }\n    while ( v5 );\n  }\n  sub_401C40(\"LB\", (char *)&v7, a1, v4);\n  return a1;\n}\n", 
            "funcStartAddr": "0x4028b0L", 
            "funcEndAddr": "0x402919L", 
            "funcName": "sub_4028B0"
        }, 
        {
            "decompiledFuncCode": "_QWORD *__usercall sub_402920@<rax>(__int64 a1@<rax>, int a2@<edx>, _QWORD *a3@<rdi>)\n{\n  _QWORD *v3; // rbx\n  _QWORD *v4; // rax\n  __int64 v6; // [rsp-4h] [rbp-18h]\n\n  v6 = a1;\n  v3 = 0LL;\n  sub_4937C0((char *)&v6 + 5, 3LL, \"%c%c\", (unsigned int)(a2 + 97));\n  v4 = (_QWORD *)*a3;\n  if ( *a3 )\n  {\n    do\n    {\n      v3 = v4;\n      v4 = (_QWORD *)*v4;\n    }\n    while ( v4 );\n  }\n  sub_401C40(\"CR\", (char *)&v6 + 5, a3, v3);\n  return a3;\n}\n", 
            "funcStartAddr": "0x402920L", 
            "funcEndAddr": "0x40297bL", 
            "funcName": "sub_402920"
        }, 
        {
            "decompiledFuncCode": "_OWORD *__fastcall sub_402A40(__int64 a1)\n{\n  __int64 v1; // rbx\n  _OWORD *result; // rax\n\n  do\n  {\n    v1 = a1;\n    a1 = *(_QWORD *)(a1 + 24);\n  }\n  while ( a1 );\n  result = malloc(0x20uLL);\n  if ( !result )\n  {\n    fwrite(\"xalloc: Out of memory!\\n\", 0x17uLL, 1uLL, stderr);\n    exit(2);\n  }\n  result[1] = 0LL;\n  *result = 0LL;\n  *(_QWORD *)(v1 + 24) = result;\n  *((_QWORD *)result + 1) = v1;\n  return result;\n}\n", 
            "funcStartAddr": "0x402a40L", 
            "funcEndAddr": "0x402aa4L", 
            "funcName": "sub_402A40"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_402AB0(__int64 **a1, int a2, float a3)\n{\n  __int64 *v3; // rax\n  signed __int64 v4; // rcx\n  char v5; // [rsp+8h] [rbp-10h]\n\n  if ( a1 )\n  {\n    if ( a2 || (v3 = *a1) == 0LL )\n    {\nLABEL_8:\n      v4 = 87LL;\n      if ( a3 <= 0.0 )\n      {\n        if ( a3 >= 0.0 )\n        {\n          sub_4937C0(&v5, 8LL, \"0\", 87LL);\nLABEL_16:\n          sub_401EF0(a1, \"RE\", &v5);\n          return;\n        }\n        v4 = 66LL;\n      }\n      if ( a3 >= 1000.0 || a3 <= -1000.0 )\n        sub_4937C0(&v5, 8LL, \"%c+%c\", v4);\n      else\n        sub_4937C0(&v5, 8LL, \"%c+%3.1f\", v4);\n      goto LABEL_16;\n    }\n    while ( *((_WORD *)v3 + 4) != 17746 )\n    {\n      v3 = (__int64 *)*v3;\n      if ( !v3 )\n        goto LABEL_8;\n    }\n    strtol((const char *)v3[2], 0LL, 10);\n  }\n}\n", 
            "funcStartAddr": "0x402ab0L", 
            "funcEndAddr": "0x402b9eL", 
            "funcName": "sub_402AB0"
        }, 
        {
            "decompiledFuncCode": "_QWORD *__fastcall sub_402BA0(__int64 **a1, int a2, __int64 a3, __int64 a4, int a5)\n{\n  int v5; // er14\n  __int64 *v6; // rax\n  __int64 *v7; // rax\n  __int64 *v8; // rax\n  char *v9; // rdx\n  __int64 v10; // rdx\n  __int64 v11; // rcx\n  char v13; // [rsp+10h] [rbp-A8h]\n\n  v5 = a5;\n  sub_4937C0(&v13, 128LL, \"GNU Go %s Random Seed %d level %d\", \"3.3.14\");\n  if ( !a2 && (v6 = *a1) != 0LL )\n  {\n    while ( *((_WORD *)v6 + 4) != 20039 )\n    {\n      v6 = (__int64 *)*v6;\n      if ( !v6 )\n        goto LABEL_8;\n    }\n    strtol((const char *)v6[2], 0LL, 10);\n  }\n  else\n  {\nLABEL_8:\n    sub_401EF0(a1, \"GN\", &v13);\n    if ( a2 )\n      goto LABEL_15;\n  }\n  v7 = *a1;\n  if ( *a1 )\n  {\n    while ( *((_WORD *)v7 + 4) != 20545 )\n    {\n      v7 = (__int64 *)*v7;\n      if ( !v7 )\n        goto LABEL_15;\n    }\n    strtol((const char *)v7[2], 0LL, 10);\n    if ( a2 )\n      goto LABEL_21;\n    goto LABEL_16;\n  }\nLABEL_15:\n  sub_401EF0(a1, \"AP\", \"GNU Go 3.3.14\");\n  if ( a2 )\n  {\nLABEL_21:\n    v9 = \"Chinese\";\n    if ( !v5 )\n      v9 = \"Japanese\";\n    sub_401EF0(a1, \"RU\", v9);\n    goto LABEL_24;\n  }\nLABEL_16:\n  v8 = *a1;\n  if ( !*a1 )\n    goto LABEL_21;\n  while ( *((_WORD *)v8 + 4) != 21842 )\n  {\n    v8 = (__int64 *)*v8;\n    if ( !v8 )\n      goto LABEL_21;\n  }\n  strtol((const char *)v8[2], 0LL, 10);\nLABEL_24:\n  sub_401EF0(a1, \"FF\", (char *)a4R);\n  return sub_4020C0(a1, \"KM\", v10, v11);\n}\n", 
            "funcStartAddr": "0x402ba0L", 
            "funcEndAddr": "0x402d19L", 
            "funcName": "sub_402BA0"
        }, 
        {
            "decompiledFuncCode": "__int64 **__fastcall sub_402D20(char *filename, unsigned int a2)\n{\n  FILE *v2; // rax\n  int v3; // ebp\n  const unsigned __int16 **v4; // rbx\n  __int64 **v5; // rbx\n  __int64 *v6; // rax\n  unsigned int v7; // ecx\n  __int64 *v8; // rax\n  __int64 **v10; // [rsp+8h] [rbp-20h]\n\n  if ( !strcmp(filename, (const char *)&a4R[1]) )\n    v2 = stdin;\n  else\n    v2 = fopen(filename, (const char *)&a4R[2]);\n  fp = v2;\n  if ( !v2 )\n    return 0LL;\n  v3 = _IO_getc(v2);\n  dword_751EB4 = v3;\n  v4 = __ctype_b_loc();\n  if ( (*v4)[v3] & 0x2000 )\n  {\n    do\n      dword_751EB4 = _IO_getc(fp);\n    while ( (*v4)[dword_751EB4] & 0x2000 );\n  }\n  sub_402E90(&v10, 0LL, a2, 0LL);\n  fclose(fp);\n  v5 = v10;\n  v6 = *v10;\n  if ( *v10 )\n  {\n    while ( *((_WORD *)v6 + 4) != 19783 )\n    {\n      v6 = (__int64 *)*v6;\n      if ( !v6 )\n        goto LABEL_14;\n    }\n    v7 = strtol((const char *)v6[2], 0LL, 10);\n    if ( v7 != 1 )\n    {\n      fprintf(stderr, \"SGF file might be for game other than go: %d\\n\", v7);\n      fwrite(\"Trying to load anyway.\\n\", 0x17uLL, 1uLL, stderr);\n    }\nLABEL_14:\n    v8 = *v5;\n    if ( *v5 )\n    {\n      while ( *((_WORD *)v8 + 4) != 17990 )\n      {\n        v8 = (__int64 *)*v8;\n        if ( !v8 )\n          return v5;\n      }\n      strtol((const char *)v8[2], 0LL, 10);\n    }\n  }\n  return v5;\n}\n", 
            "funcStartAddr": "0x402d20L", 
            "funcEndAddr": "0x402e82L", 
            "funcName": "sub_402D20"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_402E90(__int64 **a1, __int64 a2, unsigned int a3, unsigned int a4)\n{\n  unsigned int v4; // er13\n  unsigned int v5; // er14\n  int v6; // ebx\n  __int64 *v7; // rax\n  __int64 *v8; // rbp\n  __int64 result; // rax\n  __int64 *v10; // rax\n  __int64 *v11; // rbx\n  _QWORD *v12; // rbx\n\n  v4 = a4;\n  v5 = a3;\n  v6 = dword_751EB4;\n  while ( 1 )\n  {\n    if ( v6 != 40 )\n    {\n      if ( v6 == -1 )\n        sub_4037C0(\"Empty file?\");\n      goto LABEL_2;\n    }\n    while ( v6 == 40 )\n    {\n      do\n      {\n        v6 = _IO_getc(fp);\n        dword_751EB4 = v6;\n      }\n      while ( (*__ctype_b_loc())[v6] & 0x2000 );\n    }\n    if ( v6 == 59 )\n      break;\n    do\n    {\nLABEL_2:\n      v6 = _IO_getc(fp);\n      dword_751EB4 = v6;\n    }\n    while ( (*__ctype_b_loc())[v6] & 0x2000 );\n  }\n  v7 = (__int64 *)malloc(0x20uLL);\n  v8 = v7;\n  if ( !v7 )\n  {\nLABEL_25:\n    fwrite(\"xalloc: Out of memory!\\n\", 0x17uLL, 1uLL, stderr);\n    exit(2);\n  }\n  *(_OWORD *)v7 = 0LL;\n  *((_OWORD *)v7 + 1) = 0LL;\n  v7[1] = a2;\n  *a1 = v7;\n  sub_403800(v7);\n  result = (unsigned int)dword_751EB4;\n  if ( dword_751EB4 == 59 )\n  {\n    do\n    {\n      v10 = (__int64 *)malloc(0x20uLL);\n      v11 = v10;\n      if ( !v10 )\n        goto LABEL_25;\n      *(_OWORD *)v10 = 0LL;\n      *((_OWORD *)v10 + 1) = 0LL;\n      v10[1] = (__int64)v8;\n      v8[2] = (__int64)v10;\n      sub_403800(v10);\n      result = (unsigned int)dword_751EB4;\n      v8 = v11;\n    }\n    while ( dword_751EB4 == 59 );\n    v8 = v11;\n  }\n  if ( (_DWORD)result == 40 )\n  {\n    v12 = v8 + 2;\n    while ( 1 )\n    {\n      result = *v8;\n      if ( *v8 )\n      {\n        result = *(unsigned __int16 *)(result + 8);\n        if ( (_DWORD)result == 8279 || (result = (unsigned __int16)result, (unsigned __int16)result == 8258) )\n          ++v4;\n      }\n      if ( (signed int)v4 >= (signed int)v5 )\n        break;\n      result = sub_402E90(v12, v8[1], v5, v4);\n      v12 = (_QWORD *)(*v12 + 24LL);\n      if ( dword_751EB4 != 40 )\n        return result;\n    }\n    *((_OWORD *)v8 + 1) = 0LL;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x402e90L", 
            "funcEndAddr": "0x403042L", 
            "funcName": "sub_402E90"
        }, 
        {
            "decompiledFuncCode": "__int64 **__usercall sub_403050@<rax>(char *filename@<rdi>, __int64 **a2@<rax>)\n{\n  FILE *v2; // rax\n  int v3; // ebp\n  const unsigned __int16 **v4; // rbx\n  __int64 **v5; // rbx\n  __int64 *v6; // rax\n  unsigned int v7; // ecx\n  __int64 *v8; // rax\n  __int64 **v10; // [rsp+0h] [rbp-18h]\n\n  v10 = a2;\n  if ( !strcmp(filename, (const char *)&a4R[1]) )\n    v2 = stdin;\n  else\n    v2 = fopen(filename, (const char *)&a4R[2]);\n  fp = v2;\n  if ( !v2 )\n    return 0LL;\n  v3 = _IO_getc(v2);\n  dword_751EB4 = v3;\n  v4 = __ctype_b_loc();\n  if ( (*v4)[v3] & 0x2000 )\n  {\n    do\n      dword_751EB4 = _IO_getc(fp);\n    while ( (*v4)[dword_751EB4] & 0x2000 );\n  }\n  sub_4031A0(&v10, 0LL, 108LL);\n  fclose(fp);\n  v5 = v10;\n  v6 = *v10;\n  if ( *v10 )\n  {\n    while ( *((_WORD *)v6 + 4) != 19783 )\n    {\n      v6 = (__int64 *)*v6;\n      if ( !v6 )\n        goto LABEL_14;\n    }\n    v7 = strtol((const char *)v6[2], 0LL, 10);\n    if ( v7 != 1 )\n    {\n      fprintf(stderr, \"SGF file might be for game other than go: %d\\n\", v7, v10);\n      fwrite(\"Trying to load anyway.\\n\", 0x17uLL, 1uLL, stderr);\n    }\nLABEL_14:\n    v8 = *v5;\n    if ( *v5 )\n    {\n      while ( *((_WORD *)v8 + 4) != 17990 )\n      {\n        v8 = (__int64 *)*v8;\n        if ( !v8 )\n          return v5;\n      }\n      strtol((const char *)v8[2], 0LL, 10);\n    }\n  }\n  return v5;\n}\n", 
            "funcStartAddr": "0x403050L", 
            "funcEndAddr": "0x4031a0L", 
            "funcName": "sub_403050"
        }, 
        {
            "decompiledFuncCode": "const unsigned __int16 *__fastcall sub_4031A0(_QWORD *a1, __int64 a2, int a3)\n{\n  int v3; // er14\n  int v4; // ebx\n  _OWORD *v5; // rax\n  _OWORD *v6; // rbx\n  const unsigned __int16 *result; // rax\n  _OWORD *v8; // rax\n  _OWORD *v9; // rbp\n  _QWORD *v10; // rbp\n  int v11; // eax\n  int v12; // ebx\n\n  v3 = a3;\n  v4 = dword_751EB4;\n  if ( a3 != 115 )\n  {\n    while ( 1 )\n    {\n      if ( v4 == 40 )\n      {\n        while ( v4 == 40 )\n        {\n          do\n          {\n            v4 = _IO_getc(fp);\n            dword_751EB4 = v4;\n          }\n          while ( (*__ctype_b_loc())[v4] & 0x2000 );\n        }\n        if ( v4 == 59 )\n          goto LABEL_12;\n      }\n      else if ( v4 == -1 )\n      {\n        sub_4037C0(\"Empty file?\");\n      }\n      do\n      {\n        v4 = _IO_getc(fp);\n        dword_751EB4 = v4;\n      }\n      while ( (*__ctype_b_loc())[v4] & 0x2000 );\n    }\n  }\n  if ( dword_751EB4 != 40 )\n    sub_4037C0(\"expected: %c\");\n  do\n    dword_751EB4 = _IO_getc(fp);\n  while ( (*__ctype_b_loc())[dword_751EB4] & 0x2000 );\nLABEL_12:\n  v5 = malloc(0x20uLL);\n  v6 = v5;\n  if ( !v5 )\n  {\nLABEL_24:\n    fwrite(\"xalloc: Out of memory!\\n\", 0x17uLL, 1uLL, stderr);\n    exit(2);\n  }\n  *v5 = 0LL;\n  v5[1] = 0LL;\n  *((_QWORD *)v5 + 1) = a2;\n  *a1 = v5;\n  sub_403800(v5);\n  result = (const unsigned __int16 *)(unsigned int)dword_751EB4;\n  if ( dword_751EB4 == 59 )\n  {\n    do\n    {\n      v8 = malloc(0x20uLL);\n      v9 = v8;\n      if ( !v8 )\n        goto LABEL_24;\n      *v8 = 0LL;\n      v8[1] = 0LL;\n      *((_QWORD *)v8 + 1) = v6;\n      *((_QWORD *)v6 + 2) = v8;\n      sub_403800(v8);\n      result = (const unsigned __int16 *)(unsigned int)dword_751EB4;\n      v6 = v9;\n    }\n    while ( dword_751EB4 == 59 );\n    v6 = v9;\n  }\n  if ( (_DWORD)result == 40 )\n  {\n    v10 = v6 + 1;\n    do\n    {\n      sub_4031A0(v10, *((_QWORD *)v6 + 1), 115LL);\n      v10 = (_QWORD *)(*v10 + 24LL);\n      result = (const unsigned __int16 *)(unsigned int)dword_751EB4;\n    }\n    while ( dword_751EB4 == 40 );\n  }\n  if ( v3 == 115 )\n  {\n    if ( (_DWORD)result != 41 )\n      sub_4037C0(\"expected: %c\");\n    do\n    {\n      v11 = _IO_getc(fp);\n      v12 = v11;\n      dword_751EB4 = v11;\n      result = *__ctype_b_loc();\n    }\n    while ( result[v12] & 0x2000 );\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4031a0L", 
            "funcEndAddr": "0x4033b0L", 
            "funcName": "sub_4031A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4033B0@<rax>(__int64 a1@<rax>, __int64 a2@<rdi>, const char *a3@<rsi>)\n{\n  FILE *v3; // rbp\n  unsigned int v4; // er15\n  __int64 v6; // [rsp-8h] [rbp-28h]\n\n  v6 = a1;\n  if ( !strcmp(a3, (const char *)&a4R[1]) )\n  {\n    v3 = stdout;\n    if ( stdout )\n      goto LABEL_3;\nLABEL_6:\n    v4 = 0;\n    fprintf(stderr, \"Can not open %s\\n\", a3, v6);\n    return v4;\n  }\n  v3 = fopen(a3, \"w\");\n  if ( !v3 )\n    goto LABEL_6;\nLABEL_3:\n  dword_751EB0 = 0;\n  v4 = 1;\n  sub_403450(v3, a2, 1LL);\n  fclose(v3);\n  sub_403790(a2);\n  return v4;\n}\n", 
            "funcStartAddr": "0x4033b0L", 
            "funcEndAddr": "0x403448L", 
            "funcName": "sub_4033B0"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_403450(FILE *a1, __int64 **a2, int a3)\n{\n  int v3; // er14\n  __int64 *v4; // rax\n  __int64 *i; // rbp\n  __int64 *v6; // rbp\n  int result; // eax\n\n  v3 = a3;\n  if ( a3 )\n  {\n    fputc(40, a1);\n    ++dword_751EB0;\n    fputc(59, a1);\n    ++dword_751EB0;\n    v4 = *a2;\n    if ( *a2 )\n    {\n      while ( *((_WORD *)v4 + 4) != 19783 )\n      {\n        v4 = (__int64 *)*v4;\n        if ( !v4 )\n          goto LABEL_7;\n      }\n      sub_403B90(a1);\n    }\n    else\n    {\nLABEL_7:\n      fwrite(\"GM[1]\", 5uLL, 1uLL, a1);\n      dword_751EB0 += 5;\n    }\n    sub_403B90(a1);\n    if ( dword_751EB0 )\n    {\n      fputc(10, a1);\n      dword_751EB0 = 0;\n    }\n    sub_403B90(a1);\n    if ( dword_751EB0 )\n    {\n      fputc(10, a1);\n      dword_751EB0 = 0;\n    }\n    sub_403B90(a1);\n    if ( dword_751EB0 )\n    {\n      fputc(10, a1);\n      dword_751EB0 = 0;\n    }\n    sub_403B90(a1);\n    if ( dword_751EB0 )\n    {\n      fputc(10, a1);\n      dword_751EB0 = 0;\n    }\n    sub_403B90(a1);\n    sub_403B90(a1);\n    if ( dword_751EB0 )\n    {\n      fputc(10, a1);\n      dword_751EB0 = 0;\n    }\n    sub_403B90(a1);\n    sub_403B90(a1);\n    if ( dword_751EB0 )\n    {\n      fputc(10, a1);\n      dword_751EB0 = 0;\n    }\n    sub_403B90(a1);\n    sub_403B90(a1);\n    for ( i = *a2; i; i = (__int64 *)*i )\n    {\n      if ( !(i[1] & 0x20) )\n        sub_403B90(a1);\n    }\n    if ( dword_751EB0 )\n    {\n      fputc(10, a1);\n      dword_751EB0 = 0;\n    }\n  }\n  else\n  {\n    if ( dword_751EB0 )\n    {\n      fputc(10, a1);\n      dword_751EB0 = 0;\n    }\n    fputc(40, a1);\n    ++dword_751EB0;\n    sub_403AE0(a1);\n  }\n  v6 = a2[2];\n  if ( v6 )\n  {\n    while ( !v6[3] )\n    {\n      sub_403AE0(a1);\n      v6 = (__int64 *)v6[2];\n      if ( !v6 )\n        goto LABEL_35;\n    }\n    do\n    {\n      sub_403450(a1, v6, 0LL);\n      v6 = (__int64 *)v6[3];\n    }\n    while ( v6 );\n  }\nLABEL_35:\n  result = fputc(41, a1);\n  if ( ++dword_751EB0 )\n  {\n    if ( v3 )\n    {\n      result = fputc(10, a1);\n      dword_751EB0 = 0;\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x403450L", 
            "funcEndAddr": "0x403783L", 
            "funcName": "sub_403450"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_403790(_QWORD *a1)\n{\n  _QWORD *i; // rbx\n  __int64 result; // rax\n\n  for ( i = a1; i; i = (_QWORD *)i[3] )\n  {\n    sub_403E30(*i);\n    result = sub_403790(i[2]);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x403790L", 
            "funcEndAddr": "0x4037bcL", 
            "funcName": "sub_403790"
        }, 
        {
            "decompiledFuncCode": "void __usercall __noreturn sub_4037C0(char *format@<rdi>, __int64 a2@<rax>, unsigned int a3@<esi>)\n{\n  fprintf(stderr, format, a3, a2);\n  fputc(10, stderr);\n  exit(1);\n}\n", 
            "funcStartAddr": "0x4037c0L", 
            "funcEndAddr": "0x4037f4L", 
            "funcName": "sub_4037C0"
        }, 
        {
            "decompiledFuncCode": "char __usercall sub_403800@<al>(__int64 a1@<rax>, _QWORD *a2@<rdi>)\n{\n  int v2; // eax\n  char *v3; // rbp\n  _QWORD *v4; // rbx\n  __int64 v5; // rax\n  _QWORD *v6; // r12\n  char *v7; // r15\n  signed int v8; // er14\n  int v9; // eax\n  __int64 v10; // rax\n  signed int v11; // er15\n  signed __int64 v12; // r14\n  char *v13; // rbp\n  char s; // [rsp+5h] [rbp-FE3h]\n  _QWORD *v16; // [rsp+8h] [rbp-FE0h]\n  char src[4056]; // [rsp+10h] [rbp-FD8h]\n\n  v16 = a2;\n  if ( dword_751EB4 != 59 )\n    sub_4037C0(\"expected: %c\", a1, 0x3Bu);\n  do\n  {\n    v2 = _IO_getc(fp);\n    LODWORD(v3) = v2;\n    dword_751EB4 = v2;\n    v5 = (__int64)__ctype_b_loc();\n    v4 = (_QWORD *)v5;\n    LODWORD(v5) = *(unsigned __int16 *)(*(_QWORD *)v5 + 2LL * (signed int)v3);\n  }\n  while ( _bittest((const signed int *)&v5, 0xDu) );\n  if ( (_DWORD)v3 != -1 && v5 & 0x100 )\n  {\n    v6 = 0LL;\n    do\n    {\n      v5 = (unsigned __int16)v5;\n      v7 = &s;\n      if ( v5 & 0x400 )\n      {\n        v8 = 3;\n        v7 = &s;\n        do\n        {\n          if ( v5 & 0x100 && v8 >= 2 )\n          {\n            *v7++ = (char)v3;\n            --v8;\n          }\n          do\n          {\n            v9 = _IO_getc(fp);\n            LODWORD(v3) = v9;\n            dword_751EB4 = v9;\n            v5 = *(unsigned __int16 *)(*v4 + 2LL * v9);\n          }\n          while ( _bittest((const signed int *)&v5, 0xDu) );\n        }\n        while ( (_DWORD)v3 != -1 && v5 & 0x400 );\n      }\n      *v7 = 0;\n      LOBYTE(v5) = dword_751EB4 == 91;\n      do\n      {\n        if ( !(v5 & 1) )\n          sub_4037C0(\"expected: %c\", v5, 0x5Bu);\n        do\n        {\n          LODWORD(v10) = _IO_getc(fp);\n          dword_751EB4 = v10;\n        }\n        while ( *(_BYTE *)(*v4 + 2LL * (signed int)v10 + 1) & 0x20 );\n        v11 = 4000;\n        v12 = 0LL;\n        if ( (_DWORD)v10 == 92 )\n        {\nLABEL_23:\n          LODWORD(v10) = _IO_getc(fp);\n          dword_751EB4 = v10;\n          if ( (_DWORD)v10 == 10 )\n          {\n            LODWORD(v10) = _IO_getc(fp);\n            dword_751EB4 = v10;\n            if ( (_DWORD)v10 != 13 )\n              goto LABEL_27;\n          }\n          else\n          {\n            if ( (_DWORD)v10 != 13 )\n              goto LABEL_27;\n            LODWORD(v10) = _IO_getc(fp);\n            dword_751EB4 = v10;\n            if ( (_DWORD)v10 != 10 )\n              goto LABEL_27;\n          }\n          LODWORD(v10) = _IO_getc(fp);\n          dword_751EB4 = v10;\n          goto LABEL_27;\n        }\n        while ( (_DWORD)v10 != 93 )\n        {\n          if ( (_DWORD)v10 == -1 )\n            sub_4037C0(\"expected: %c\", v10, 0x5Du);\nLABEL_27:\n          if ( v11 >= 2 )\n          {\n            src[v12++] = v10;\n            --v11;\n          }\n          LODWORD(v10) = _IO_getc(fp);\n          dword_751EB4 = v10;\n          if ( (_DWORD)v10 == 92 )\n            goto LABEL_23;\n        }\n        v3 = &src[v12];\n        do\n          dword_751EB4 = _IO_getc(fp);\n        while ( *(_BYTE *)(*v4 + 2LL * dword_751EB4 + 1) & 0x20 );\n        if ( v12 >= 2 )\n        {\n          v13 = (char *)&v16 + v12 + 7;\n          do\n          {\n            if ( !(*(_BYTE *)(*v4 + 2LL * *v13 + 1) & 0x20) )\n              break;\n            --v13;\n          }\n          while ( v13 > src );\n          v3 = v13 + 1;\n        }\n        *v3 = 0;\n        v5 = (__int64)sub_401C40(&s, src, v16, v6);\n        v6 = (_QWORD *)v5;\n        LOBYTE(v3) = dword_751EB4;\n        LOBYTE(v5) = 1;\n      }\n      while ( dword_751EB4 == 91LL );\n      if ( dword_751EB4 == -1 )\n        break;\n      LODWORD(v5) = *(unsigned __int16 *)(*v4 + 2LL * dword_751EB4);\n    }\n    while ( _bittest((const signed int *)&v5, 8u) );\n  }\n  return v5;\n}\n", 
            "funcStartAddr": "0x403800L", 
            "funcEndAddr": "0x403addL", 
            "funcName": "sub_403800"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_403AE0(FILE *stream, __int64 ***a2)\n{\n  __int64 result; // rax\n  __int64 **i; // rbx\n\n  fputc(59, stream);\n  ++dword_751EB0;\n  sub_403B90(stream);\n  sub_403B90(stream);\n  sub_403B90(stream);\n  result = sub_403B90(stream);\n  for ( i = *a2; i; i = (__int64 **)*i )\n  {\n    result = *((unsigned __int16 *)i + 4);\n    if ( !(result & 0x20) )\n      result = sub_403B90(stream);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x403ae0L", 
            "funcEndAddr": "0x403b88L", 
            "funcName": "sub_403AE0"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_403B90(FILE *stream, __int64 **a2, __int16 a3, int a4)\n{\n  unsigned __int16 v4; // r13\n  __int64 *v5; // r14\n  int v6; // ebp\n  signed int v7; // er15\n  int v8; // eax\n  int v9; // eax\n  int v10; // eax\n  bool v11; // al\n  int v12; // eax\n  char *i; // r12\n  char v14; // al\n  int v15; // eax\n  int result; // eax\n  int c; // [rsp+8h] [rbp-40h]\n  int v18; // [rsp+Ch] [rbp-3Ch]\n  __int16 v19; // [rsp+14h] [rbp-34h]\n\n  v18 = a4;\n  v4 = a3;\n  v5 = *a2;\n  if ( !*a2 )\n  {\n    v7 = 0;\n    goto LABEL_37;\n  }\n  c = (unsigned __int8)a3;\n  v6 = a3 >> 8;\n  v19 = a3 | 0x20;\n  v7 = 0;\n  do\n  {\n    if ( *((_WORD *)v5 + 4) != v4 )\n      goto LABEL_32;\n    *((_WORD *)v5 + 4) = v19;\n    if ( !v7 )\n    {\n      v9 = 0;\n      if ( c != 10 || dword_751EB0 )\n      {\n        fputc(c, stream);\n        v9 = dword_751EB0 + 1;\n        if ( c == 10 )\n          v9 = 0;\n        dword_751EB0 = v9;\n        if ( c == 93 && v9 >= 61 )\n        {\n          fputc(10, stream);\n          dword_751EB0 = 0;\n          v9 = 0;\n        }\n      }\n      v11 = (v6 ^ 0xA | v9) == 0;\n      if ( v6 == 32 || v11 )\n        goto LABEL_24;\n      fputc(v6, stream);\n      v12 = dword_751EB0 + 1;\n      if ( v6 == 10 )\n        v12 = 0;\n      dword_751EB0 = v12;\n      if ( v6 != 93 || v12 < 61 )\n        goto LABEL_24;\nLABEL_23:\n      fputc(10, stream);\n      dword_751EB0 = 0;\nLABEL_24:\n      fputc(91, stream);\n      v8 = dword_751EB0 + 1;\n      goto LABEL_25;\n    }\n    if ( !v18 )\n    {\n      fputc(93, stream);\n      v10 = dword_751EB0++;\n      if ( v10 < 60 )\n        goto LABEL_24;\n      goto LABEL_23;\n    }\n    if ( dword_751EB0 )\n    {\n      fputc(10, stream);\n      v8 = 0;\nLABEL_25:\n      dword_751EB0 = v8;\n    }\n    for ( i = (char *)v5[2]; ; ++i )\n    {\n      v14 = *i;\n      if ( (unsigned __int8)(*i - 91) < 3u )\n      {\n        fputc(92, stream);\n        ++dword_751EB0;\n        v14 = *i;\n        goto LABEL_27;\n      }\n      if ( !v14 )\n        break;\nLABEL_27:\n      fputc(v14, stream);\n      ++dword_751EB0;\n    }\n    ++v7;\nLABEL_32:\n    v5 = (__int64 *)*v5;\n  }\n  while ( v5 );\n  if ( v7 > 0 )\n  {\n    fputc(93, stream);\n    v15 = dword_751EB0++;\n    if ( v15 >= 60 )\n    {\n      fputc(10, stream);\n      dword_751EB0 = 0;\n    }\n  }\nLABEL_37:\n  result = v4;\n  if ( v4 != 16961 && v4 != 17729 && v4 != 22337 )\n  {\n    if ( v18 )\n    {\n      if ( v7 >= 2 )\n      {\n        result = dword_751EB0;\n        if ( dword_751EB0 )\n        {\nLABEL_41:\n          result = fputc(10, stream);\n          dword_751EB0 = 0;\n        }\n      }\n    }\n  }\n  else if ( dword_751EB0 )\n  {\n    goto LABEL_41;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x403b90L", 
            "funcEndAddr": "0x403e27L", 
            "funcName": "sub_403B90"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_403E30(__int64 a1)\n{\n  __int64 result; // rax\n\n  if ( a1 )\n  {\n    result = sub_403E30(*(_QWORD *)a1);\n    *(_BYTE *)(a1 + 8) &= 0xDFu;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x403e30L", 
            "funcEndAddr": "0x403e47L", 
            "funcName": "sub_403E30"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_403E50(_DWORD *a1, unsigned int a2, __int64 a3, int a4)\n{\n  int v4; // ebx\n  signed __int64 v5; // rax\n  _DWORD *v6; // rcx\n  int v7; // esi\n  int v8; // edx\n  __int64 v9; // r8\n  int v10; // er10\n  int v11; // er11\n  int v12; // ebp\n  int v13; // edi\n  int v14; // er14\n  int v15; // er13\n  int v16; // er15\n  __int64 v17; // rbx\n  signed int v18; // er9\n  __int64 v19; // rcx\n  char v20; // r12\n  __int64 v21; // rcx\n  char v22; // al\n  __int64 v23; // rcx\n  char v24; // al\n  __int64 v25; // rcx\n  char v26; // al\n  int v27; // edx\n  int v28; // esi\n  signed __int64 v29; // rdx\n  signed __int64 v30; // rax\n  int v31; // eax\n  __int64 v32; // r12\n  signed __int64 v33; // r15\n  signed __int64 v34; // rbx\n  int v35; // edx\n  char v36; // al\n  void *v37; // rdi\n  __int64 v38; // rsi\n  __int64 v39; // rsi\n  signed __int64 v40; // r15\n  signed int v41; // er12\n  signed __int64 v42; // rbx\n  __int64 v43; // rbp\n  __int64 v44; // rcx\n  __int64 v45; // rbp\n  signed int v46; // eax\n  __int64 v47; // rcx\n  unsigned int v48; // ebp\n  const char *v49; // rdi\n  unsigned __int64 v50; // rbp\n  _DWORD *v51; // rbx\n  signed int v52; // eax\n  __int64 v53; // rbx\n  signed __int64 v54; // r14\n  __int64 v55; // rax\n  signed int v56; // er12\n  signed __int64 v57; // rbx\n  int v58; // er15\n  __int64 v59; // rbp\n  int v60; // eax\n  __int64 v61; // rbp\n  int v62; // er12\n  int v63; // er15\n  int v64; // er12\n  int v65; // er12\n  int v66; // eax\n  int v67; // eax\n  int v68; // ecx\n  int v69; // ebx\n  int v70; // edi\n  signed __int64 v71; // rbx\n  unsigned __int64 v72; // r15\n  int v73; // edi\n  int v74; // esi\n  signed int v75; // er13\n  __int64 v76; // rbp\n  int v77; // eax\n  __int64 v78; // rbp\n  signed __int64 v79; // rax\n  __int64 v80; // rcx\n  int *v81; // r14\n  signed __int64 v82; // r14\n  __int64 v83; // rbp\n  signed int v84; // er12\n  int v85; // eax\n  _BOOL8 v86; // r12\n  __int64 v87; // rdi\n  int v88; // eax\n  __int64 v89; // rdi\n  int v90; // eax\n  signed int v91; // ecx\n  unsigned int v92; // er12\n  int v93; // eax\n  int v94; // eax\n  __int64 v95; // rdi\n  int v96; // eax\n  signed int v97; // ecx\n  int v98; // eax\n  __int64 v99; // rdi\n  int v100; // eax\n  signed int v101; // ecx\n  int v102; // esi\n  int v103; // eax\n  int v104; // er8\n  signed int v105; // ecx\n  int v106; // edx\n  int v107; // ebp\n  int v108; // ebp\n  signed __int64 v109; // rax\n  unsigned int v110; // er13\n  __int64 v111; // rcx\n  bool v112; // zf\n  bool v113; // sf\n  unsigned __int8 v114; // of\n  __int64 v115; // rbp\n  signed int v116; // ebp\n  signed __int64 v117; // rax\n  signed int v118; // er14\n  __int64 v119; // rbp\n  signed int v120; // er12\n  int *v121; // rbx\n  __int64 v122; // rdi\n  __int64 v123; // rbx\n  __int64 v124; // rsi\n  __int64 v125; // rsi\n  signed __int64 v126; // rbx\n  int v127; // er13\n  int v128; // ecx\n  signed __int64 v129; // rbp\n  int v130; // ecx\n  int v131; // ecx\n  int v132; // ecx\n  signed __int64 v133; // r15\n  char v134; // r14\n  unsigned int v135; // er12\n  unsigned __int64 v136; // rbx\n  signed __int64 v137; // rbp\n  signed __int64 v138; // rcx\n  int v139; // eax\n  int v141[2]; // [rsp+0h] [rbp-2608h]\n  unsigned int v142; // [rsp+8h] [rbp-2600h]\n  unsigned int v143; // [rsp+Ch] [rbp-25FCh]\n  __int64 v144; // [rsp+10h] [rbp-25F8h]\n  int v145; // [rsp+1Ch] [rbp-25ECh]\n  __int64 v146; // [rsp+20h] [rbp-25E8h]\n  __int64 v147; // [rsp+28h] [rbp-25E0h]\n  _DWORD *v148; // [rsp+30h] [rbp-25D8h]\n  __int64 v149; // [rsp+38h] [rbp-25D0h]\n  __int64 v150; // [rsp+40h] [rbp-25C8h]\n  int v151; // [rsp+4Ch] [rbp-25BCh]\n  int v152; // [rsp+50h] [rbp-25B8h]\n  int v153[19]; // [rsp+54h] [rbp-25B4h]\n  int v154; // [rsp+A0h] [rbp-2568h]\n  int v155[378]; // [rsp+A4h] [rbp-2564h]\n  int v156; // [rsp+68Ch] [rbp-1F7Ch]\n  int v157[400]; // [rsp+690h] [rbp-1F78h]\n  int s[400]; // [rsp+CD0h] [rbp-1938h]\n  int v159[400]; // [rsp+1310h] [rbp-12F8h]\n  int v160[400]; // [rsp+1950h] [rbp-CB8h]\n  int v161[414]; // [rsp+1F90h] [rbp-678h]\n\n  v4 = a4;\n  v144 = a3;\n  v148 = a1;\n  v142 = a2;\n  v143 = 3 - a2;\n  sub_459A70(v160);\n  sub_458900(v159);\n  v5 = -379LL;\n  v6 = &unk_8EB3D4;\n  do\n  {\n    v8 = (unsigned __int8)byte_98A340[v5];\n    if ( v8 == 3 )\n      goto LABEL_14;\n    if ( v8 != v142 || (v7 = 0, !*(v6 - 1)) )\n    {\n      if ( v4 )\n        goto LABEL_12;\n      if ( v143 != v8 || *v6 )\n      {\n        if ( v8 == v142 )\n        {\n          v7 = 0;\n          if ( *v6 == 1 )\n            goto LABEL_13;\n        }\nLABEL_12:\n        v7 = -1;\n        goto LABEL_13;\n      }\n      v7 = 0;\n    }\nLABEL_13:\n    v157[v5] = v7;\nLABEL_14:\n    v6 += 95;\n    ++v5;\n  }\n  while ( v5 );\n  v151 = v4;\n  v9 = (unsigned int)(dword_5641BC + 21);\n  v10 = dword_5641B8 + 21;\n  v11 = dword_5641B4 + 21;\n  v12 = dword_5641B0[0] + 21;\n  v13 = 0;\n  v14 = 0;\n  v15 = 0;\n  do\n  {\n    v16 = v13 + 1;\n    v17 = 0LL;\n    v18 = 0;\n    do\n    {\n      v28 = (unsigned __int8)byte_98A1C5[v17];\n      if ( v28 == 3 || v155[v17] != -1 )\n        goto LABEL_42;\n      v19 = (signed int)v17 + v12;\n      v20 = byte_98A1B0[v19];\n      if ( v20 == 3 || v20 != 0 && v13 != 0 || *(&v152 + v19) != v13 )\n      {\n        v21 = v11 + (signed int)v17;\n        v22 = byte_98A1B0[v21];\n        if ( v22 == 3 || v22 != 0 && v13 != 0 || *(&v152 + v21) != v13 )\n        {\n          v23 = v10 + (signed int)v17;\n          v24 = byte_98A1B0[v23];\n          if ( v24 == 3 || v24 != 0 && v13 != 0 || *(&v152 + v23) != v13 )\n          {\n            v25 = (signed int)v9 + (signed int)v17;\n            v26 = byte_98A1B0[v25];\n            if ( v26 == 3 || v26 != 0 && v13 != 0 || *(&v152 + v25) != v13 )\n              goto LABEL_42;\n          }\n        }\n      }\n      if ( !v13 )\n        goto LABEL_396;\n      v27 = v17 + 21;\n      if ( v143 == v28 )\n      {\n        v155[v17] = v16;\n        if ( v15 )\n          v27 = v15;\n        v15 = v27;\n        goto LABEL_42;\n      }\n      if ( v28 == v142 )\n      {\n        v155[v17] = v16;\n        if ( v14 )\n          v27 = v14;\n        v14 = v27;\n      }\n      else\n      {\nLABEL_396:\n        if ( !(_BYTE)v28 )\n        {\n          v155[v17] = v16;\n          v18 = 1;\n        }\n      }\nLABEL_42:\n      ++v17;\n    }\n    while ( v17 != 379 );\n    ++v13;\n  }\n  while ( v18 );\n  v29 = v144;\n  if ( v144 )\n  {\n    v30 = -378LL;\n    if ( byte_98A33F[-378] == 3 )\n      goto LABEL_49;\n    while ( 1 )\n    {\n      *(_DWORD *)(v29 + 4 * v30 + 1596) = *(&v156 + v30) != -1;\n      if ( !v30 )\n        break;\n      while ( 1 )\n      {\n        if ( byte_98A340[v30] != 3 )\n          *(_DWORD *)(v29 + 4 * v30 + 1600) = v157[v30] != -1;\n        v30 += 2LL;\n        if ( byte_98A33F[v30] != 3 )\n          break;\nLABEL_49:\n        if ( !v30 )\n          goto LABEL_52;\n      }\n    }\n  }\nLABEL_52:\n  if ( dword_88C264 & 0x20000 )\n  {\n    v31 = dword_565C68;\n    if ( dword_565C68 > 0 )\n    {\n      LODWORD(v32) = 21;\n      v33 = 0LL;\n      do\n      {\n        v32 = (unsigned int)v32;\n        if ( v31 > 0 )\n        {\n          v34 = 0LL;\n          do\n          {\n            v35 = *(&v152 + v32 + v34);\n            if ( v35 > 0 )\n            {\n              fprintf(stderr, off_494546);\n            }\n            else\n            {\n              v36 = byte_98A1B0[v32 + v34];\n              if ( v35 )\n              {\n                if ( v36 == 1 )\n                {\n                  v37 = &unk_494553;\n                }\n                else if ( v36 == 2 )\n                {\n                  v37 = &unk_494556;\n                }\n                else\n                {\n                  v37 = &unk_494559;\n                }\n              }\n              else if ( v36 == 1 )\n              {\n                v37 = &unk_49454A;\n              }\n              else if ( v36 == 2 )\n              {\n                v37 = &unk_49454D;\n              }\n              else\n              {\n                v37 = &unk_494550;\n              }\n              sub_433F90((char)v37);\n            }\n            ++v34;\n          }\n          while ( v34 < dword_565C68 );\n        }\n        sub_433F90((unsigned __int64)\"\\n\");\n        ++v33;\n        v31 = dword_565C68;\n        LODWORD(v32) = v32 + 20;\n      }\n      while ( v33 < dword_565C68 );\n    }\n    sub_433F90((unsigned __int64)\"Closest opponent %1m\");\n    if ( v15 )\n    {\n      v38 = (unsigned int)*(&v152 + v15);\n      sub_433F90((unsigned __int64)\", distance %d\\n\");\n    }\n    else\n    {\n      sub_433F90((unsigned __int64)\"\\n\");\n    }\n    sub_433F90((unsigned __int64)\"Closest own %1m\");\n    if ( v14 )\n    {\n      v39 = (unsigned int)*(&v152 + v14);\n      sub_433F90((unsigned __int64)\", distance %d\\n\");\n    }\n    else\n    {\n      sub_433F90((unsigned __int64)\"\\n\");\n      v14 = 0;\n    }\n  }\n  v144 = 0LL;\n  LODWORD(v146) = 5;\n  v40 = 21LL;\n  do\n  {\n    if ( !byte_98A1B0[v40] )\n    {\n      if ( *(&v152 + v40) )\n      {\n        v41 = sub_4093D0((unsigned int)v40, v142, 3LL, 0LL);\n        if ( v41 >= 3 && !(unsigned int)sub_40AD70((unsigned int)v40, v143) )\n        {\n          v42 = 1LL;\n          do\n          {\n            v43 = dword_5641AC[v42];\n            if ( byte_98A1B0[(signed int)v40 - v43] == 3 && (unsigned __int8)byte_98A1B0[v43 + (signed int)v40] == v142 )\n            {\n              v44 = dword_5641B0[v42 & 3];\n              v45 = (signed int)v40 + v43;\n              if ( v143 == (unsigned __int8)byte_98A1B0[(signed int)v45 + v44]\n                && v143 == (unsigned __int8)byte_98A1B0[(signed int)v45 - v44]\n                && (v41 > (signed int)sub_4083A0((unsigned int)v45)\n                 || v41 >= 5 && v41 == (unsigned int)sub_4083A0((unsigned int)v45))\n                && (*((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * v45 + 1) + 15) & 0xFFFFFFFE) == 8 )\n              {\n                v46 = (signed int)(float)((float)(*(float *)&v160[v40] + *(float *)&v159[v40]) * 20.0);\n                v29 = (unsigned int)v146;\n                v47 = v144;\n                if ( (signed int)v146 < v46 )\n                  v47 = (unsigned int)v40;\n                v144 = v47;\n                if ( (signed int)v146 < v46 )\n                  v29 = (unsigned int)v46;\n                LODWORD(v146) = v29;\n              }\n            }\n            ++v42;\n          }\n          while ( v42 != 5 );\n        }\n      }\n    }\n    ++v40;\n  }\n  while ( v40 != 400 );\n  if ( (_DWORD)v144 && (unsigned int)sub_43F100((unsigned int)v144, v142) == 5 )\n  {\n    *v148 = v144;\n    v48 = 1;\n    if ( dword_88C264 & 0x20000 )\n    {\n      v49 = \"Closing edge at %1m\\n\";\n      goto LABEL_390;\n    }\n    return v48;\n  }\n  v50 = 21LL;\n  v51 = &unk_8EB3D4;\n  do\n  {\n    if ( v143 == (unsigned __int8)byte_98A1B0[v50]\n      && *v51\n      && (unsigned int)sub_4083A0((unsigned int)v50) == 1\n      && (byte_98A1C4[v50] != 3 && !*(&v154 + v50)\n       || byte_98A1AF[v50] != 3 && !*(&v151 + v50)\n       || byte_98A19C[v50] != 3 && !v141[v50]\n       || byte_98A1B1[v50] != 3 && !v153[v50]) )\n    {\n      sub_408410((unsigned int)v50, 1LL, s);\n      if ( (signed int)sub_40A5F0((unsigned int)v50) > 1 || !(unsigned int)sub_40AD70((unsigned int)s[0], v142) )\n      {\n        *v148 = s[0];\n        return 1;\n      }\n    }\n    ++v50;\n    v51 += 95;\n  }\n  while ( v50 < 0x190 );\n  if ( v14 | v15 )\n  {\n    if ( v14 )\n      v15 = v14;\n    v52 = *(&v152 + v15);\n    if ( v52 != 2 )\n    {\nLABEL_151:\n      if ( v52 < 2 )\n      {\n        v69 = v15;\n      }\n      else\n      {\n        do\n        {\n          if ( byte_98A1B0[dword_5641B0[0] + (signed __int64)v15]\n            || (v69 = dword_5641B0[0] + v15, v70 = *(&v152 + dword_5641B0[0] + (signed __int64)v15), v70 != v52 - 1) )\n          {\n            if ( byte_98A1B0[dword_5641B4 + (signed __int64)v15]\n              || (v69 = dword_5641B4 + v15, v70 = v52 - 1, *(&v152 + dword_5641B4 + (signed __int64)v15) != v52 - 1) )\n            {\n              if ( byte_98A1B0[dword_5641B8 + (signed __int64)v15]\n                || (v69 = dword_5641B8 + v15, v70 = v52 - 1, *(&v152 + dword_5641B8 + (signed __int64)v15) != v52 - 1) )\n              {\n                if ( byte_98A1B0[dword_5641BC + (signed __int64)v15]\n                  || (v69 = dword_5641BC + v15, v70 = v52 - 1, *(&v152 + dword_5641BC + (signed __int64)v15) != v52 - 1) )\n                {\n                  v70 = *(&v152 + v15);\n                  v69 = v15;\n                }\n              }\n            }\n          }\n          v52 = v70;\n          v15 = v69;\n        }\n        while ( v70 > 1 );\n      }\n      *v148 = v69;\n      return 1;\n    }\n    v53 = 0LL;\n    memset(s, 0, 0x190uLL);\n    v54 = 21LL;\n    v144 = 0LL;\nLABEL_125:\n    if ( byte_98A1B0[v54] == 3 || *(&v152 + v54) != 1 )\n      goto LABEL_149;\n    v146 = v53;\n    v55 = v144;\n    LOBYTE(v55) = v144 + 1;\n    v144 = v55;\n    v56 = 0;\n    v57 = 4611686018427387900LL;\n    v58 = 0;\n    while ( 1 )\n    {\n      while ( 1 )\n      {\nLABEL_128:\n        v59 = dword_5641C0[v57];\n        v60 = (unsigned __int8)byte_98A1B0[v59 + (signed int)v54];\n        if ( v60 == 3 )\n          goto LABEL_129;\n        v61 = (signed int)v54 + v59;\n        if ( *(&v152 + v61) > 0 )\n          break;\n        --v58;\n        ++v57;\n        if ( !(v57 * 4) )\n          goto LABEL_143;\n      }\n      if ( (_BYTE)v60 )\n      {\n        if ( *((_BYTE *)s + v61) == (_BYTE)v144 )\n        {\n          --v58;\nLABEL_129:\n          ++v57;\n          if ( !(v57 * 4) )\n            goto LABEL_143;\n          goto LABEL_128;\n        }\n        if ( v60 == v142 )\n        {\n          v62 = v58 + ((signed int)sub_40A5F0((unsigned int)v61) > 2);\n          v63 = v62 + ((signed int)sub_40A5F0((unsigned int)v61) > 4);\n          v64 = v63 + ((signed int)sub_4083A0((unsigned int)v61) < 4);\n          v58 = ((signed int)sub_4083A0((unsigned int)v61) < 3) + v64 + 7;\n        }\n        else\n        {\n          v65 = sub_4093D0((unsigned int)v54, v143, 241LL, 0LL);\n          v66 = sub_4083A0((unsigned int)v61);\n          v58 += (v65 - v66 > 0) + ((v65 - v66) >> 31) + 2;\n        }\n        sub_40BAB0((unsigned int)v61, s, (unsigned int)(char)v144);\n        v56 = 1;\n        ++v57;\n        if ( !(v57 * 4) )\n        {\nLABEL_143:\n          v67 = sub_407C30((unsigned int)v54, v143);\n          v68 = v58 - 3;\n          if ( !v67 )\n            v68 = v58;\n          v53 = v146;\n          if ( v68 > (signed int)v146 && v56 != 0 )\n            v15 = v54;\n          if ( v68 > (signed int)v146 && v56 != 0 )\n            v53 = (unsigned int)v68;\nLABEL_149:\n          if ( ++v54 == 400 )\n          {\n            v52 = *(&v152 + v15);\n            goto LABEL_151;\n          }\n          goto LABEL_125;\n        }\n      }\n      else\n      {\n        ++v58;\n        ++v57;\n        if ( !(v57 * 4) )\n          goto LABEL_143;\n      }\n    }\n  }\n  v71 = 21LL;\n  while ( 2 )\n  {\n    s[v71] = 0;\n    if ( byte_98A1B0[v71] || *(&v152 + v71) != -1 )\n      goto LABEL_269;\n    v72 = 0LL;\n    memset(v157, 0, 0x640uLL);\n    v73 = 3;\n    v29 = 0LL;\n    v150 = 0LL;\n    v149 = 0LL;\n    v9 = 0LL;\n    v74 = 0;\n    v75 = 0;\n    while ( 2 )\n    {\n      v76 = dword_5641B0[v72];\n      v77 = (unsigned __int8)byte_98A1B0[v76 + (signed int)v71];\n      if ( v77 == 3 )\n        goto LABEL_237;\n      if ( !(_BYTE)v77 )\n      {\n        v75 += v72 < 4;\n        goto LABEL_237;\n      }\n      v78 = (signed int)v71 + v76;\n      if ( v143 != v77 )\n      {\n        if ( v77 != v142 )\n          goto LABEL_237;\n        v161[v71] = v78;\n        if ( v73 == 3 )\n          v73 = 2 * (dword_954FF0[19 * v78] != 1) + 1;\n        if ( *((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * v78 + 1) + 15) == 9 )\n          v73 = 9;\n        if ( v72 > 3 )\n        {\n          v9 = (unsigned int)(v9 + 1);\n          goto LABEL_237;\n        }\n        v82 = v29;\n        LODWORD(v146) = v74;\n        v83 = dword_8E947C[95 * v78];\n        v112 = v157[v83] == 0;\n        LODWORD(v144) = v9;\n        v145 = v73;\n        if ( v112 )\n        {\n          if ( (unsigned int)sub_40A5F0((unsigned int)v83) == 1 )\n            v82 = (unsigned int)(v82 + 2);\n          if ( (signed int)sub_4083A0((unsigned int)v83) <= 5 )\n          {\n            v84 = sub_4093D0((unsigned int)v71, v142, 5LL, 0LL);\n            if ( v84 < (signed int)sub_4083A0((unsigned int)v83) )\n              v82 = (unsigned int)(v82 - 5);\n          }\n          v150 = (unsigned int)(v150 + 1);\n          v157[v83] = 1;\n        }\n        if ( (signed int)sub_4083A0((unsigned int)v83) > 2 )\n          goto LABEL_234;\n        v85 = (unsigned __int8)byte_98A1B0[dword_5641B0[0] + v83];\n        LODWORD(v86) = 0;\n        if ( v85 != 3 )\n        {\n          v87 = v83 + dword_5641B0[0];\n          if ( v143 == v85 && !dword_954FF0[19 * v87] )\n          {\n            LODWORD(v147) = 1;\nLABEL_194:\n            v88 = (unsigned __int8)byte_98A1B0[dword_5641B4 + v83];\n            if ( v88 != 3 )\n            {\n              v89 = v83 + dword_5641B4;\n              if ( v143 != v88 || dword_954FF0[19 * v89] )\n              {\n                if ( !(_BYTE)v88 )\n                {\n                  v90 = sub_40AD70(v89, v143);\n                  v91 = 1;\n                  if ( v90 )\n                    v91 = v86;\n                  LODWORD(v86) = v91;\n                }\n              }\n              else\n              {\n                LODWORD(v147) = 1;\n              }\n            }\n            v94 = (unsigned __int8)byte_98A1B0[dword_5641B8 + v83];\n            if ( v94 != 3 )\n            {\n              v95 = v83 + dword_5641B8;\n              if ( v143 != v94 || dword_954FF0[19 * v95] )\n              {\n                if ( !(_BYTE)v94 )\n                {\n                  v96 = sub_40AD70(v95, v143);\n                  v97 = 1;\n                  if ( v96 )\n                    v97 = v86;\n                  LODWORD(v86) = v97;\n                }\n              }\n              else\n              {\n                LODWORD(v147) = 1;\n              }\n            }\n            v98 = (unsigned __int8)byte_98A1B0[dword_5641BC + v83];\n            if ( v98 != 3 )\n            {\n              v99 = v83 + dword_5641BC;\n              if ( v143 != v98 || dword_954FF0[19 * v99] )\n              {\n                if ( !(_BYTE)v98 )\n                {\n                  v100 = sub_40AD70(v99, v143);\n                  v101 = 1;\n                  if ( v100 )\n                    v101 = v86;\n                  LODWORD(v86) = v101;\n                }\n              }\n              else\n              {\n                LODWORD(v147) = 1;\n              }\n            }\n            if ( (signed int)sub_4093D0((unsigned int)v71, v142, 3LL, 0LL) > 2 )\n            {\n              v9 = (unsigned int)v144;\n              v102 = v146;\n              v73 = v145;\n              if ( (_DWORD)v147 )\n                v29 = (unsigned int)(v82 + 2 * v86 + 3);\n              else\n                v29 = (unsigned int)(v82 + 1);\n              goto LABEL_236;\n            }\nLABEL_234:\n            v9 = (unsigned int)v144;\n            v102 = v146;\n            v73 = v145;\n            v29 = v82;\nLABEL_236:\n            v74 = v102 + 1;\n            goto LABEL_237;\n          }\n          if ( !(_BYTE)v85 )\n            v86 = (unsigned int)sub_40AD70(v87, v143) == 0;\n        }\n        LODWORD(v147) = 0;\n        goto LABEL_194;\n      }\n      v79 = 19 * v78;\n      v80 = *((signed int *)&xmmword_954FB0 + 19 * v78 + 2);\n      if ( v72 > 3 )\n      {\n        v81 = &v157[v80];\n        if ( v157[v80] || dword_954FF0[v79] )\n          goto LABEL_210;\nLABEL_203:\n        v92 = v29 + 1;\n        if ( v72 <= 3 )\n        {\n          v147 = v29;\n          v145 = v73;\n          LODWORD(v146) = v74;\n          LODWORD(v144) = v9;\n          if ( (signed int)sub_4083A0((unsigned int)v78) <= 2 && (signed int)sub_40A5F0((unsigned int)v78) > 2 )\n            v92 = v147 + 2;\n          v93 = sub_4083A0((unsigned int)v78);\n          v29 = v92 + 3;\n          if ( v93 != 1 )\n            v29 = v92;\n          v9 = (unsigned int)v144;\n          v74 = v146;\n          v73 = v145;\n          goto LABEL_210;\n        }\n        v29 = v92;\n        *v81 = 1;\nLABEL_237:\n        if ( ++v72 >= 8 )\n        {\n          if ( !v75 )\n            goto LABEL_269;\n          goto LABEL_239;\n        }\n        continue;\n      }\n      break;\n    }\n    if ( dword_954FF0[v79] != 1 )\n    {\n      v81 = &v157[v80];\n      if ( !v157[v80] )\n      {\n        ++v75;\n        v149 = (unsigned int)(v149 + 1);\n        if ( !dword_954FF0[v79] )\n          goto LABEL_203;\n      }\nLABEL_210:\n      *v81 = 1;\n      goto LABEL_237;\n    }\n    v73 = 0;\n    if ( !v75 )\n      goto LABEL_269;\nLABEL_239:\n    if ( v73 && v73 != 3 && (_DWORD)v9 + v74 )\n    {\n      if ( (signed int)v29 < 0 )\n        LODWORD(v29) = 0;\n      v103 = v29 + 4 * v75;\n      s[v71] = v103;\n      if ( v73 == 9 )\n      {\n        if ( v74 >= 2 )\n          LODWORD(v9) = 0;\n        v104 = v103 + v74 + v9;\n        s[v71] = v104;\n        if ( v75 > 0 )\n        {\n          v105 = v149;\n          if ( (signed int)v150 >= 2 )\n          {\n            v104 += 5 * v150;\n            s[v71] = v104;\n          }\n          v103 = v104;\n          if ( v105 < 2 )\n          {\nLABEL_259:\n            v106 = (signed int)(*(float *)&v159[v71] * 20.0) + (signed int)(*(float *)&v160[v71] * 20.0);\n            v107 = 1 - v103;\n            if ( !((unsigned __int8)((v103 + v106 < 0) ^ __OFADD__(v103, v106)) | (v103 + v106 == 0)) )\n              v107 = (signed int)(*(float *)&v159[v71] * 20.0) + (signed int)(*(float *)&v160[v71] * 20.0);\n            if ( v103 <= 0 )\n              v107 = (signed int)(*(float *)&v159[v71] * 20.0) + (signed int)(*(float *)&v160[v71] * 20.0);\n            v108 = v103 + v107;\n            s[v71] = v108;\n            if ( dword_88C264 & 0x20000 )\n              sub_433F90((unsigned __int64)\"Score %1M = %d (hotspot bonus %d + %d)\\n\");\n            if ( (unsigned int)sub_408130((unsigned int)v71, v142, 0LL) )\n              s[v71] = (signed int)(((unsigned int)(v108 + 1) >> 31) + v108 + 1) >> 1;\n            goto LABEL_269;\n          }\nLABEL_258:\n          v103 = v103 + 10 * v105 - 10;\n          s[v71] = v103;\n          goto LABEL_259;\n        }\n        v103 = v104;\n      }\n      else if ( v75 >= 3 )\n      {\n        v103 += v9;\n        s[v71] = v103;\n      }\n      v105 = v149;\n      if ( (signed int)v149 < 2 )\n        goto LABEL_259;\n      goto LABEL_258;\n    }\nLABEL_269:\n    if ( ++v71 != 400 )\n      continue;\n    break;\n  }\n  while ( 1 )\n  {\n    v109 = 21LL;\n    v110 = 0;\n    v111 = 0LL;\n    do\n    {\n      if ( byte_98A1B0[v109] != 3 )\n      {\n        v29 = (unsigned int)s[v109];\n        v114 = __OFSUB__((_DWORD)v29, (_DWORD)v111);\n        v112 = (_DWORD)v29 == (_DWORD)v111;\n        v113 = (signed int)v29 - (signed int)v111 < 0;\n        if ( (signed int)v29 >= (signed int)v111 )\n          v111 = (unsigned int)v29;\n        if ( !((unsigned __int8)(v113 ^ v114) | v112) )\n          v110 = v109;\n      }\n      ++v109;\n    }\n    while ( v109 != 400 );\n    if ( !v110 )\n      break;\n    v115 = v161[v110];\n    if ( !(unsigned int)sub_407DC0(v110, v142, v29, v111, v9)\n      && (unsigned int)sub_43F100(v110, v142)\n      && ((*((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * v115 + 1) + 15) & 0xFFFFFFFE) == 8\n       || (unsigned int)sub_42EAE0(v110, (unsigned int)v115, 0LL) == 5)\n      && (unsigned int)sub_44C110(v110, v142, 0LL, 0LL) )\n    {\n      v116 = sub_4093D0(v110, v142, 5LL, 0LL);\n      if ( v116 > 4 )\n        goto LABEL_388;\n      if ( (unsigned __int8)byte_98A1B0[dword_5641B0[0] + (signed __int64)(signed int)v110] != v142\n        || (signed int)sub_4083A0((signed int)v110 + (signed __int64)dword_5641B0[0]) <= v116 )\n      {\n        if ( (unsigned __int8)byte_98A1B0[dword_5641B4 + (signed __int64)(signed int)v110] != v142\n          || (signed int)sub_4083A0((signed int)v110 + (signed __int64)dword_5641B4) <= v116 )\n        {\n          if ( (unsigned __int8)byte_98A1B0[dword_5641B8 + (signed __int64)(signed int)v110] != v142\n            || (signed int)sub_4083A0((signed int)v110 + (signed __int64)dword_5641B8) <= v116 )\n          {\n            if ( (unsigned __int8)byte_98A1B0[dword_5641BC + (signed __int64)(signed int)v110] != v142\n              || (signed int)sub_4083A0((signed int)v110 + (signed __int64)dword_5641BC) <= v116 )\n            {\n              goto LABEL_388;\n            }\n            v117 = 3LL;\n          }\n          else\n          {\n            v117 = 2LL;\n          }\n        }\n        else\n        {\n          v117 = 1LL;\n        }\n      }\n      else\n      {\n        v117 = 0LL;\n      }\n      if ( !(unsigned int)sub_406880(v110, v142, \"aftermath-B\", v110 + dword_5641B0[v117], 0LL, 0LL) )\n        goto LABEL_388;\n      v118 = sub_40A7D0(v110, v157);\n      if ( v118 <= 0 )\n      {\n        sub_407030();\nLABEL_388:\n        *v148 = v110;\n        v48 = 1;\n        if ( dword_88C264 & 0x20000 )\n        {\n          v49 = \"Splitting eyespace at %1m\\n\";\n          goto LABEL_390;\n        }\n        return v48;\n      }\n      v119 = (unsigned int)v118;\n      v120 = 1;\n      v121 = v157;\n      do\n      {\n        v122 = *v121;\n        if ( dword_8E94D4[95 * v122] )\n        {\n          if ( (signed int)sub_43B6F0(v122, 0LL) > dword_8E9524[95 * *v121] )\n          {\n            v120 = 0;\n            if ( dword_88C264 & 0x20000 )\n            {\n              v120 = 0;\n              sub_433F90((unsigned __int64)\"Blunder: %1m becomes tactically safer after %1m\\n\");\n            }\n          }\n        }\n        ++v121;\n        --v119;\n      }\n      while ( v119 );\n      sub_407030();\n      if ( v120 && v118 > 0 )\n      {\n        v123 = 0LL;\n        while ( 1 )\n        {\n          v124 = v157[v123];\n          if ( !dword_954FF0[19 * v124] && !(unsigned int)sub_42F0B0(v110, v124, 0LL) )\n            break;\n          if ( ++v123 >= v118 )\n            goto LABEL_388;\n        }\n        if ( dword_88C264 & 0x20000 )\n        {\n          v125 = (unsigned int)v157[v123];\n          sub_433F90((unsigned __int64)\"Blunder: %1m becomes more alive after %1m\\n\");\n        }\n      }\n      else if ( v120 )\n      {\n        goto LABEL_388;\n      }\n    }\n    s[v110] = 0;\n  }\n  v126 = 21LL;\n  v127 = v151;\n  while ( 2 )\n  {\n    if ( byte_98A1B0[v126] || *(&v152 + v126) != -1 )\n      goto LABEL_397;\n    if ( (v128 = (unsigned __int8)byte_98A1B0[dword_5641B0[0] + (signed __int64)(signed int)v126], v128 == 3)\n      || v143 != v128\n      || (v129 = (signed int)v126 + (signed __int64)dword_5641B0[0], dword_954FF0[19 * v129] == 1)\n      || !v127 && (v29 = 380 * v129, !dword_8E94A8[95 * v129])\n      || *((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * v129 + 1) + 15) == 5 )\n    {\n      if ( (v130 = (unsigned __int8)byte_98A1B0[dword_5641B4 + (signed __int64)(signed int)v126], v130 == 3)\n        || v143 != v130\n        || (v129 = (signed int)v126 + (signed __int64)dword_5641B4, dword_954FF0[19 * v129] == 1)\n        || !v127 && (v29 = 380 * v129, !dword_8E94A8[95 * v129])\n        || *((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * v129 + 1) + 15) == 5 )\n      {\n        if ( (v131 = (unsigned __int8)byte_98A1B0[dword_5641B8 + (signed __int64)(signed int)v126], v131 == 3)\n          || v143 != v131\n          || (v129 = (signed int)v126 + (signed __int64)dword_5641B8, dword_954FF0[19 * v129] == 1)\n          || !v127 && (v29 = 380 * v129, !dword_8E94A8[95 * v129])\n          || *((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * v129 + 1) + 15) == 5 )\n        {\n          v132 = (unsigned __int8)byte_98A1B0[dword_5641BC + (signed __int64)(signed int)v126];\n          if ( v132 == 3 )\n            goto LABEL_397;\n          if ( v143 != v132 )\n            goto LABEL_397;\n          v129 = (signed int)v126 + (signed __int64)dword_5641BC;\n          if ( dword_954FF0[19 * v129] == 1 )\n            goto LABEL_397;\n          if ( !v127 )\n          {\n            v29 = 380 * v129;\n            if ( !dword_8E94A8[95 * v129] )\n              goto LABEL_397;\n          }\n          if ( *((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * v129 + 1) + 15) == 5 )\n            goto LABEL_397;\n        }\n      }\n    }\n    if ( !(_DWORD)v129\n      || !(unsigned int)sub_406880((unsigned int)v126, v142, \"aftermath-A\", (unsigned int)v129, 0LL, 0LL) )\n    {\n      goto LABEL_397;\n    }\n    if ( (unsigned __int8)byte_98A1B0[dword_5641B0[0] + (signed __int64)(signed int)v126] != v142\n      || (v133 = (signed int)v126 + (signed __int64)dword_5641B0[0],\n          *((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * v133 + 1) + 15) == 5) )\n    {\n      if ( (unsigned __int8)byte_98A1B0[dword_5641B4 + (signed __int64)(signed int)v126] != v142\n        || (v133 = (signed int)v126 + (signed __int64)dword_5641B4,\n            *((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * v133 + 1) + 15) == 5) )\n      {\n        if ( (unsigned __int8)byte_98A1B0[dword_5641B8 + (signed __int64)(signed int)v126] != v142\n          || (v133 = (signed int)v126 + (signed __int64)dword_5641B8,\n              *((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * v133 + 1) + 15) == 5) )\n        {\n          v134 = 1;\n          if ( (unsigned __int8)byte_98A1B0[dword_5641BC + (signed __int64)(signed int)v126] != v142\n            || (v133 = (signed int)v126 + (signed __int64)dword_5641BC,\n                *((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * v133 + 1) + 15) == 5) )\n          {\n            LODWORD(v133) = 0;\n            v135 = v126;\n            if ( dword_98A7F4 <= 0 )\n              goto LABEL_368;\n            do\nLABEL_367:\n              sub_407030();\n            while ( dword_98A7F4 > 0 );\n            goto LABEL_368;\n          }\n        }\n      }\n    }\n    v135 = v126;\n    if ( (unsigned int)sub_4083A0((unsigned int)v126) == 1 )\n    {\n      do\n      {\n        sub_408410((unsigned int)v126, 1LL, v157);\n        v135 = v157[0];\n      }\n      while ( (unsigned int)sub_406880((unsigned int)v157[0], v142, \"aftermath-B\", (unsigned int)v129, 0LL, 0LL)\n           && (unsigned int)sub_4083A0((unsigned int)v126) == 1 );\n    }\n    v134 = 0;\n    if ( (unsigned int)sub_4083A0((unsigned int)v126) == 1 )\n      v135 = 0;\n    if ( dword_98A7F4 > 0 )\n      goto LABEL_367;\nLABEL_368:\n    if ( !v135 || !v134 && (unsigned int)sub_40AD70(v135, v142) )\n      goto LABEL_397;\n    if ( (unsigned int)sub_42F0B0(v135, (unsigned int)v129, 0LL) != 5\n      || (_DWORD)v133 && !(unsigned int)sub_42EAE0(v135, (unsigned int)v133, 0LL)\n      || !v134 && !(unsigned int)sub_44C110(v135, v142, 0LL, 0LL) )\n    {\nLABEL_397:\n      if ( (unsigned __int64)++v126 >= 0x190 )\n      {\n        v136 = 21LL;\n        v137 = 1600LL;\n        while ( 1 )\n        {\n          if ( v143 == (unsigned __int8)byte_98A1B0[v136]\n            && (v127 || *(_DWORD *)((char *)&qword_8E9494 + 5 * v137) == 3) )\n          {\n            v138 = 104LL * *(signed int *)((char *)&xmmword_954FB0 + v137);\n            v139 = *(_DWORD *)((char *)ptr + v138 + 60);\n            if ( (v139 == 6 || !v139)\n              && *(_DWORD *)((char *)dword_8E94C0 + 5 * v137)\n              && !(unsigned int)sub_407DC0(*(unsigned int *)((char *)&qword_8E9494 + 5 * v137 + 4), v142, v29, v138, v9) )\n            {\n              break;\n            }\n          }\n          ++v136;\n          v137 += 76LL;\n          if ( v136 >= 0x190 )\n            return (unsigned int)-1;\n        }\n        *v148 = *(_DWORD *)((char *)&qword_8E9494 + 5 * v137 + 4);\n        v48 = 1;\n        if ( dword_88C264 & 0x20000 )\n          sub_433F90((unsigned __int64)\"Tactically attack %1m at %1m\\n\");\n        return v48;\n      }\n      continue;\n    }\n    break;\n  }\n  *v148 = v135;\n  v48 = 1;\n  if ( !(dword_88C264 & 0x20000) )\n    return v48;\n  v49 = \"Filling opponent liberty at %1m\\n\";\nLABEL_390:\n  sub_433F90((char)v49);\n  return v48;\n}\n", 
            "funcStartAddr": "0x403e50L", 
            "funcEndAddr": "0x405502L", 
            "funcName": "sub_403E50"
        }, 
        {
            "decompiledFuncCode": "unsigned __int64 __usercall sub_405510@<rax>(unsigned int a1@<eax>, __int64 a2@<rsi>, unsigned int a3@<xmm0>)\n{\n  unsigned __int64 v3; // ST00_8\n\n  v3 = __PAIR__(a3, a1);\n  qword_7531A0 = a2;\n  sub_405570();\n  return v3;\n}\n", 
            "funcStartAddr": "0x405510L", 
            "funcEndAddr": "0x40556dL", 
            "funcName": "sub_405510"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_405570(int a1)\n{\n  unsigned int v1; // er13\n  __int64 result; // rax\n  signed __int64 i; // rcx\n  int v4; // edx\n  int v5; // edx\n  const char *v6; // rdi\n  signed int v7; // ebx\n  signed int v8; // er12\n  int v9; // ebp\n  int v10; // ebp\n  int *v11; // rdx\n  __int64 v12; // rsi\n  int v13; // eax\n  char v14; // cl\n  unsigned int v15; // [rsp+Ch] [rbp-135Ch]\n  float v16; // [rsp+10h] [rbp-1358h]\n  int v17; // [rsp+14h] [rbp-1354h]\n  unsigned int v18; // [rsp+18h] [rbp-1350h]\n  int v19; // [rsp+1Ch] [rbp-134Ch]\n  char v20; // [rsp+20h] [rbp-1348h]\n\n  v1 = a1;\n  if ( (unsigned int)(a1 - 1) >= 2 )\n    sub_4340E0(\"engine/aftermath.c\", 927LL, \"color == 2 || color == 1\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  result = 1LL;\n  if ( dword_7537F0[0] != a1 )\n  {\n    dword_7537F0[0] = a1;\n    result = 0LL;\n  }\n  for ( i = -378LL; ; i += 2LL )\n  {\n    v4 = (unsigned __int8)byte_98A33F[i];\n    if ( v4 != 3 && dword_7537EC[i] != v4 )\n    {\n      dword_7537EC[i] = v4;\n      result = 0LL;\n    }\n    if ( !i )\n      break;\n    v5 = (unsigned __int8)byte_98A340[i];\n    if ( v5 != 3 && dword_7537F0[i] != v5 )\n    {\n      dword_7537F0[i] = v5;\n      result = 0LL;\n    }\n  }\n  if ( !(_DWORD)result )\n  {\n    dword_751EC0 = dword_98A800;\n    dword_751EC4 = dword_98A760;\n    xmmword_751EC8 = 0LL;\n    qword_751ED8 = 0LL;\n    v6 = &v20;\n    sub_405D30(&v20);\n    if ( dword_88C264 & 0x20000 )\n    {\n      v6 = \"The aftermath starts.\\n\";\n      sub_433F90((unsigned __int64)\"The aftermath starts.\\n\");\n    }\n    dword_88C2F4 = 1;\n    dword_88C2F8 = 1;\n    v7 = -1;\n    v8 = 0;\n    do\n    {\n      if ( ++v7 >= (unsigned int)(dword_565C68 * dword_565C68) )\n        break;\n      v17 = sub_43F970(v6);\n      ((void (*)(void))sub_4310D0)();\n      v15 = 0;\n      v16 = -1.0;\n      sub_418500();\n      sub_418580(v1, 99LL);\n      if ( dword_565C78 < 8 )\n      {\n        dword_88C254 = 0;\n        if ( dword_98A7F4 )\n          goto LABEL_24;\n      }\n      else\n      {\n        sub_445420(&dword_88C258, &dword_88C25C);\n        if ( dword_88C268 | dword_88C250 )\n        {\n          if ( *(float *)&dword_88C258 == *(float *)&dword_88C25C )\n            sub_433F90((unsigned __int64)\"\\nScore estimate: %s %f\\n\");\n          else\n            sub_433F90((unsigned __int64)\"\\nScore estimate: %s %f to %s %f\\n\");\n          fflush(stderr);\n        }\n        if ( v1 == 1 )\n          v13 = dword_88C258;\n        else\n          v13 = dword_88C25C;\n        dword_88C254 = v13;\n        if ( dword_98A7F4 )\nLABEL_24:\n          sub_4340E0(\"engine/aftermath.c\", 831LL, \"stackp == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n      }\n      sub_456640(v1);\n      v9 = dword_88C268;\n      if ( dword_88C268 > 0 )\n        --dword_88C268;\n      sub_42E540(v1);\n      dword_88C268 = v9;\n      sub_40F490(v1);\n      if ( dword_98A7F4 )\n        sub_4340E0(\"engine/aftermath.c\", 849LL, \"stackp == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n      if ( (unsigned int)sub_44E830(&v15, &v16, v1, 0LL) && dword_88C268 )\n        sub_433F90((unsigned __int64)\"Move generation likes %1m with value %f\\n\");\n      if ( dword_98A7F4 )\n        sub_4340E0(\"engine/aftermath.c\", 854LL, \"stackp == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n      if ( v16 >= 0.0 )\n      {\n        if ( dword_88C268 )\n          sub_433F90((unsigned __int64)\"reduced_genmove() recommends %1m with value %f\\n\");\n      }\n      else\n      {\n        if ( dword_88C268 )\n          sub_433F90((unsigned __int64)\"I pass.\\n\");\n        v15 = 0;\n      }\n      if ( (signed int)v16 < 0 )\n      {\n        v10 = dword_88C268;\n        if ( dword_88C268 > 0 )\n          --dword_88C268;\n        v11 = dword_752520;\n        if ( v1 == 1 )\n          v11 = (int *)&unk_751EE0;\n        sub_403E50(&v15, v1, (__int64)v11, 0);\n        dword_88C268 = v10;\n      }\n      v12 = v1;\n      sub_4074F0(v15, v1);\n      v6 = (const char *)qword_7531A0;\n      if ( qword_7531A0 )\n      {\n        v12 = v1;\n        sub_401820((__int64 *)qword_7531A0);\n      }\n      if ( dword_88C264 & 0x20000 )\n      {\n        v19 = dword_98A7C0;\n        v18 = v15;\n        sub_4310D0(v6, v12);\n        sub_43F970(v6);\n        sub_4310D0(v6, v12);\n        v17 = v7;\n        sub_43F970(v6);\n        v6 = \"%d %C move %1m (nodes %d, %d  total %d, %d)\\n\";\n        v7 = v17;\n        sub_433F90((unsigned __int64)\"%d %C move %1m (nodes %d, %d  total %d, %d)\\n\");\n      }\n      ++v8;\n      if ( v15 )\n        v8 = 0;\n      v1 = 3 - v1;\n    }\n    while ( v8 < 2 );\n    dword_88C2F4 = 0;\n    dword_88C2F8 = 0;\n    sub_405FF0(&v20);\n    result = -379LL;\n    do\n    {\n      while ( 1 )\n      {\n        while ( 1 )\n        {\n          while ( 1 )\n          {\n            while ( 1 )\n            {\n              while ( 1 )\n              {\n                v14 = byte_98A340[result];\n                if ( v14 != 3 )\n                  break;\n                if ( !++result )\n                  goto LABEL_90;\n              }\n              if ( !dword_752B60[result] )\n                break;\n              ++HIDWORD(qword_751ED8);\n              if ( v14 )\n              {\n                if ( v14 == 1 )\n                {\n                  ++HIDWORD(xmmword_751EC8);\n                  LODWORD(xmmword_751EC8) = xmmword_751EC8 + 1;\n                  *((_DWORD *)&qword_7531A0 + result++) = 0;\n                  if ( !result )\n                    goto LABEL_90;\n                }\n                else\n                {\n                  *((_DWORD *)&qword_7531A0 + result++) = 1;\n                  if ( !result )\n                    goto LABEL_90;\n                }\n              }\n              else\n              {\n                ++HIDWORD(xmmword_751EC8);\n                *((_DWORD *)&qword_7531A0 + result++) = 13;\n                if ( !result )\n                  goto LABEL_90;\n              }\n            }\n            if ( !dword_752520[result] )\n              break;\n            LODWORD(qword_751ED8) = qword_751ED8 + 1;\n            if ( v14 )\n            {\n              if ( v14 == 2 )\n              {\n                ++DWORD2(xmmword_751EC8);\n                ++DWORD1(xmmword_751EC8);\n                *((_DWORD *)&qword_7531A0 + result++) = 0;\n                if ( !result )\n                  goto LABEL_90;\n              }\n              else\n              {\n                *((_DWORD *)&qword_7531A0 + result++) = 1;\n                if ( !result )\n                  goto LABEL_90;\n              }\n            }\n            else\n            {\n              ++DWORD2(xmmword_751EC8);\n              *((_DWORD *)&qword_7531A0 + result++) = 14;\n              if ( !result )\n                goto LABEL_90;\n            }\n          }\n          if ( v14 )\n            break;\n          *((_DWORD *)&qword_7531A0 + result++) = 15;\n          if ( !result )\n            goto LABEL_90;\n        }\n        *((_DWORD *)&qword_7531A0 + result) = 7;\n        if ( v14 != 1 )\n          break;\n        LODWORD(qword_751ED8) = qword_751ED8 + 1;\n        if ( !++result )\n          goto LABEL_90;\n      }\n      ++HIDWORD(qword_751ED8);\n      ++result;\n    }\n    while ( result );\nLABEL_90:\n    if ( dword_88C264 & 0x20000 )\n    {\n      sub_433F90((unsigned __int64)\"White captured: %d\\n\");\n      sub_433F90((unsigned __int64)\"Black captured: %d\\n\");\n      sub_433F90((unsigned __int64)\"White prisoners: %d\\n\");\n      sub_433F90((unsigned __int64)\"Black prisoners: %d\\n\");\n      sub_433F90((unsigned __int64)\"White territory: %d\\n\");\n      sub_433F90((unsigned __int64)\"Black territory: %d\\n\");\n      sub_433F90((unsigned __int64)\"White area: %d\\n\");\n      result = sub_433F90((unsigned __int64)\"Black area: %d\\n\");\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x405570L", 
            "funcEndAddr": "0x405caaL", 
            "funcName": "sub_405570"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_405CB0(int a1, signed int a2)\n{\n  int v2; // edx\n\n  if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v2 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\"engine/aftermath.c\", 1043LL, \"ON_BOARD1(pos)\", (unsigned int)(v2 - 1), (unsigned int)(a2 - 20 * v2 - 1));\n  }\n  qword_7531A0 = 0LL;\n  sub_405570(a1);\n  return (unsigned int)dword_752B60[a2];\n}\n", 
            "funcStartAddr": "0x405cb0L", 
            "funcEndAddr": "0x405d28L", 
            "funcName": "sub_405CB0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_405D30(_DWORD *a1)\n{\n  _DWORD *v1; // rbx\n  __int64 v2; // rax\n  signed __int64 v3; // rcx\n  __int128 *v4; // rsi\n  bool v5; // r9\n  bool v6; // si\n  unsigned __int64 v7; // rsi\n  __int64 v8; // rdx\n  __int64 v9; // rsi\n  signed __int64 v10; // rdi\n  signed __int64 v11; // rsi\n  __int64 v12; // rdx\n  signed __int64 v13; // rdx\n  __int64 result; // rax\n\n  v1 = a1;\n  if ( dword_98A7F4 )\n    sub_4340E0(\"engine/board.c\", 327LL, \"stackp == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  *a1 = dword_565C68;\n  memcpy(a1 + 1, byte_98A1B0, 0x1A5uLL);\n  memcpy(a1 + 110, &byte_98A360, 0x1A5uLL);\n  a1[107] = dword_98A764;\n  a1[109] = dword_98A800;\n  a1[108] = dword_98A760;\n  a1[216] = dword_98A77C;\n  a1[217] = dword_98A780;\n  a1[218] = dword_98A778;\n  v2 = (unsigned int)dword_98A7BC;\n  a1[1219] = dword_98A7BC;\n  if ( (signed int)v2 > 0 )\n  {\n    if ( (unsigned int)v2 < 4 )\n    {\n      v3 = 0LL;\nLABEL_17:\n      v13 = v3;\n      if ( v2 & 1 )\n      {\n        v1[v3 + 219] = *((_DWORD *)xmmword_985380 + v3);\n        v1[v3 + 719] = *((_DWORD *)xmmword_985B50 + v3);\n        v13 = v3 | 1;\n      }\n      if ( v2 - 1 != v3 )\n      {\n        do\n        {\n          v1[v13 + 219] = *((_DWORD *)xmmword_985380 + v13);\n          v1[v13 + 719] = *((_DWORD *)xmmword_985B50 + v13);\n          v1[v13 + 220] = *((_DWORD *)xmmword_985380 + v13 + 1);\n          v1[v13 + 720] = *((_DWORD *)xmmword_985B50 + v13 + 1);\n          v13 += 2LL;\n        }\n        while ( v2 != v13 );\n      }\n      goto LABEL_21;\n    }\n    v4 = (__int128 *)&a1[v2 + 719];\n    v5 = v4 > xmmword_985380;\n    v6 = v4 > xmmword_985B50;\n    v3 = 0LL;\n    if ( v5 && a1 + 219 < (_DWORD *)xmmword_985380 + v2 || v6 && a1 + 219 < (_DWORD *)xmmword_985B50 + v2 )\n      goto LABEL_17;\n    v3 = (unsigned int)v2 & 0xFFFFFFFC;\n    v7 = (unsigned __int64)(v3 - 4) >> 2;\n    v8 = ((_BYTE)v7 + 1) & 3;\n    if ( (unsigned __int64)(v3 - 4) >= 0xC )\n    {\n      v10 = v8 - 1 - v7;\n      v9 = 0LL;\n      do\n      {\n        *(_OWORD *)&v1[v9 * 4 + 219] = xmmword_985380[v9];\n        *(_OWORD *)&v1[v9 * 4 + 719] = xmmword_985B50[v9];\n        *(_OWORD *)&v1[v9 * 4 + 223] = xmmword_985390[v9];\n        *(_OWORD *)&v1[v9 * 4 + 723] = xmmword_985B60[v9];\n        *(_OWORD *)&v1[v9 * 4 + 227] = xmmword_9853A0[v9];\n        *(_OWORD *)&v1[v9 * 4 + 727] = xmmword_985B70[v9];\n        *(_OWORD *)&v1[v9 * 4 + 231] = xmmword_9853B0[v9];\n        *(_OWORD *)&v1[v9 * 4 + 731] = xmmword_985B80[v9];\n        v9 += 4LL;\n        v10 += 4LL;\n      }\n      while ( v10 );\n      if ( !v8 )\n      {\nLABEL_16:\n        if ( v3 == v2 )\n          goto LABEL_21;\n        goto LABEL_17;\n      }\n    }\n    else\n    {\n      v9 = 0LL;\n      if ( !v8 )\n        goto LABEL_16;\n    }\n    v11 = 1 * v9;\n    v12 = -v8;\n    do\n    {\n      *(_OWORD *)&v1[(unsigned __int64)v11 / 4 + 219] = *(__int128 *)((char *)xmmword_985380 + v11);\n      *(_OWORD *)&v1[(unsigned __int64)v11 / 4 + 719] = *(__int128 *)((char *)xmmword_985B50 + v11);\n      v11 += 16LL;\n      ++v12;\n    }\n    while ( v12 );\n    goto LABEL_16;\n  }\nLABEL_21:\n  v1[1220] = dword_98A788;\n  result = (unsigned int)dword_98A7C0;\n  v1[1221] = dword_98A7C0;\n  return result;\n}\n", 
            "funcStartAddr": "0x405d30L", 
            "funcEndAddr": "0x405febL", 
            "funcName": "sub_405D30"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_405FF0(int *a1)\n{\n  int *v1; // rbx\n  __int64 v2; // rax\n  signed __int64 v3; // rcx\n  signed __int64 v4; // rsi\n  char *v5; // rcx\n  char *v6; // rdi\n  int *v7; // rbp\n  bool v8; // r15\n  bool v9; // r8\n  unsigned __int64 v10; // rdi\n  __int64 v11; // r8\n  signed __int64 v12; // rsi\n  __int64 v13; // rdi\n  __int128 v14; // xmm1\n  __int128 v15; // xmm1\n  __int128 v16; // xmm1\n  __int128 v17; // xmm1\n  __int128 v18; // xmm1\n  __int128 v19; // xmm1\n\n  v1 = a1;\n  if ( dword_98A7F4 )\n    sub_4340E0(\"engine/board.c\", 362LL, \"stackp == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  dword_565C68 = *a1;\n  memcpy(byte_98A1B0, a1 + 1, 0x1A5uLL);\n  memcpy(&byte_98A360, a1 + 110, 0x1A5uLL);\n  dword_98A764 = a1[107];\n  dword_98A800 = a1[109];\n  dword_98A760 = a1[108];\n  dword_98A77C = a1[216];\n  dword_98A780 = a1[217];\n  dword_98A778 = a1[218];\n  v2 = (unsigned int)a1[1219];\n  dword_98A7BC = v2;\n  if ( (signed int)v2 > 0 )\n  {\n    if ( (unsigned int)v2 < 8 )\n    {\n      v3 = 0LL;\nLABEL_6:\n      v4 = v3;\n      if ( v2 & 1 )\n      {\n        *((_DWORD *)xmmword_985380 + v3) = v1[v3 + 219];\n        *((_DWORD *)xmmword_985B50 + v3) = v1[v3 + 719];\n        v4 = v3 | 1;\n      }\n      if ( v2 - 1 != v3 )\n      {\n        do\n        {\n          *((_DWORD *)xmmword_985380 + v4) = v1[v4 + 219];\n          *((_DWORD *)xmmword_985B50 + v4) = v1[v4 + 719];\n          *((_DWORD *)xmmword_985380 + v4 + 1) = v1[v4 + 220];\n          *((_DWORD *)xmmword_985B50 + v4 + 1) = v1[v4 + 720];\n          v4 += 2LL;\n        }\n        while ( v2 != v4 );\n      }\n      goto LABEL_20;\n    }\n    v5 = (char *)xmmword_985380 + 4 * v2;\n    v6 = (char *)xmmword_985B50 + 4 * v2;\n    v7 = &v1[v2 + 719];\n    v8 = v5 > (char *)xmmword_985B50;\n    v9 = v1 + 219 < (int *)v5;\n    v3 = 0LL;\n    if ( v8 && v6 > (char *)xmmword_985380\n      || v9 && v7 > (int *)xmmword_985380\n      || v1 + 219 < (int *)v6 && v7 > (int *)xmmword_985B50 )\n    {\n      goto LABEL_6;\n    }\n    v3 = (unsigned int)v2 & 0xFFFFFFF8;\n    v10 = (unsigned __int64)(v3 - 8) >> 3;\n    v11 = ((_BYTE)v10 + 1) & 1;\n    if ( v3 == 8 )\n    {\n      v13 = 0LL;\n      if ( v11 )\n      {\nLABEL_18:\n        v18 = *(_OWORD *)&v1[v13 * 4 + 223];\n        xmmword_985380[v13] = *(_OWORD *)&v1[v13 * 4 + 219];\n        xmmword_985390[v13] = v18;\n        v19 = *(_OWORD *)&v1[v13 * 4 + 723];\n        xmmword_985B50[v13] = *(_OWORD *)&v1[v13 * 4 + 719];\n        xmmword_985B60[v13] = v19;\n        goto LABEL_19;\n      }\n    }\n    else\n    {\n      v12 = v11 - 1 - v10;\n      v13 = 0LL;\n      do\n      {\n        v14 = *(_OWORD *)&v1[v13 * 4 + 223];\n        xmmword_985380[v13] = *(_OWORD *)&v1[v13 * 4 + 219];\n        xmmword_985390[v13] = v14;\n        v15 = *(_OWORD *)&v1[v13 * 4 + 723];\n        xmmword_985B50[v13] = *(_OWORD *)&v1[v13 * 4 + 719];\n        xmmword_985B60[v13] = v15;\n        v16 = *(_OWORD *)&v1[v13 * 4 + 231];\n        xmmword_9853A0[v13] = *(_OWORD *)&v1[v13 * 4 + 227];\n        xmmword_9853B0[v13] = v16;\n        v17 = *(_OWORD *)&v1[v13 * 4 + 731];\n        xmmword_985B70[v13] = *(_OWORD *)&v1[v13 * 4 + 727];\n        xmmword_985B80[v13] = v17;\n        v13 += 4LL;\n        v12 += 2LL;\n      }\n      while ( v12 );\n      if ( v11 )\n        goto LABEL_18;\n    }\nLABEL_19:\n    if ( v3 == v2 )\n      goto LABEL_20;\n    goto LABEL_6;\n  }\nLABEL_20:\n  dword_98A788 = v1[1220];\n  dword_98A7C0 = v1[1221];\n  sub_419C40(&qword_98A740, byte_98A1B0);\n  return sub_406310();\n}\n", 
            "funcStartAddr": "0x405ff0L", 
            "funcEndAddr": "0x40630cL", 
            "funcName": "sub_405FF0"
        }, 
        {
            "decompiledFuncCode": "char sub_406310()\n{\n  signed __int64 v0; // rax\n  int v1; // edx\n  signed __int64 v2; // rbx\n  signed __int64 v3; // rax\n  int v4; // ecx\n  signed __int64 v5; // rdx\n  int v6; // er11\n  int v7; // er14\n  __int64 v8; // r8\n  __int64 v9; // r9\n  signed __int64 v10; // r10\n  int v11; // ebx\n  int *v12; // rdx\n  int v13; // edi\n  __int64 v14; // rsi\n  __int64 v15; // rcx\n  int *v16; // r15\n  __int64 v17; // rbp\n  signed __int64 v18; // rcx\n  __int64 v19; // rcx\n  int *v20; // r15\n  __int64 v21; // rbp\n  signed __int64 v22; // rcx\n  __int64 v23; // rcx\n  int *v24; // r15\n  __int64 v25; // rbp\n  signed __int64 v26; // rcx\n  __int64 v27; // rcx\n  __int64 v28; // rdi\n  signed __int64 v29; // rcx\n\n  ++dword_98A7F0;\n  dword_781B20 = 0;\n  dword_780E70[0] = 0;\n  dword_781B00 = 0;\n  qword_781B10 = (__int64)&unk_781B30;\n  qword_781B18 = (__int64)&unk_7F2830;\n  memset(dword_754EB0, 0, 0x2B980uLL);\n  memset(&dword_780E80, 0, 0x640uLL);\n  v0 = -378LL;\n  if ( byte_98A33F[-378] != 3 )\nLABEL_4:\n    dword_780E6C[v0] = -1;\n  while ( v0 )\n  {\n    if ( byte_98A340[v0] != 3 )\n      dword_780E70[v0] = -1;\n    v0 += 2LL;\n    if ( byte_98A33F[v0] != 3 )\n      goto LABEL_4;\n  }\n  v1 = 0;\n  v2 = 21LL;\n  do\n  {\n    LOBYTE(v3) = byte_98A1B0[v2] - 1;\n    if ( (unsigned __int8)v3 <= 1u && dword_780830[v2] == -1 )\n    {\n      dword_780830[v2] = v1;\n      LODWORD(v3) = sub_40E110((unsigned int)v2, (unsigned int)v2);\n      v4 = dword_781B20;\n      v5 = 186LL * dword_781B20;\n      dword_754EB4[v5] = v3;\n      LODWORD(v3) = (unsigned __int8)byte_98A1B0[v2];\n      dword_754EB0[v5] = v3;\n      dword_754EB8[v5] = v2;\n      dword_755194[v5] = 0;\n      v1 = v4 + 1;\n      dword_781B20 = v4 + 1;\n    }\n    ++v2;\n  }\n  while ( v2 != 400 );\n  if ( v1 > 0 )\n  {\n    v6 = dword_780E70[0];\n    v7 = dword_781B00;\n    v8 = v1;\n    v9 = 0LL;\n    do\n    {\n      v10 = 186 * v9;\n      v11 = 3 - dword_754EB0[186 * v9];\n      ++v6;\n      ++v7;\n      v12 = &dword_754EB8[186 * v9];\n      v13 = dword_754EB8[186 * v9];\n      do\n      {\n        v14 = v13;\n        if ( byte_98A1C4[v13] || dword_780ED0[v13] == v6 )\n        {\n          if ( v11 == (unsigned __int8)byte_98A1C4[v13] )\n          {\n            v15 = dword_780880[v13];\n            v3 = 744 * v15;\n            if ( dword_755194[186 * v15] != v7 )\n            {\n              v16 = (int *)((char *)dword_755194 + v3);\n              v17 = v12[22];\n              LOBYTE(v3) = v17 + 1;\n              v12[22] = v17 + 1;\n              dword_754F14[v17 + v10] = v15;\n              *v16 = v7;\n            }\n          }\n        }\n        else\n        {\n          v18 = v12[1];\n          if ( v18 <= 19 )\n          {\n            LOBYTE(v3) = v13 + 20;\n            dword_754EC0[v18 + v10] = v13 + 20;\n            LODWORD(v18) = v12[1];\n          }\n          v12[1] = v18 + 1;\n          dword_780ED0[v13] = v6;\n        }\n        if ( byte_98A1AF[v13] || dword_780E7C[v13] == v6 )\n        {\n          if ( v11 == (unsigned __int8)byte_98A1AF[v13] )\n          {\n            v19 = dword_78082C[v13];\n            v3 = 744 * v19;\n            if ( dword_755194[186 * v19] != v7 )\n            {\n              v20 = (int *)((char *)dword_755194 + v3);\n              v21 = v12[22];\n              LOBYTE(v3) = v21 + 1;\n              v12[22] = v21 + 1;\n              dword_754F14[v21 + v10] = v19;\n              *v20 = v7;\n            }\n          }\n        }\n        else\n        {\n          v22 = v12[1];\n          if ( v22 <= 19 )\n          {\n            LOBYTE(v3) = v13 - 1;\n            dword_754EC0[v22 + v10] = v13 - 1;\n            LODWORD(v22) = v12[1];\n          }\n          v12[1] = v22 + 1;\n          dword_780E7C[v13] = v6;\n        }\n        if ( byte_98A19C[v13] || dword_780E30[v13] == v6 )\n        {\n          if ( v11 == (unsigned __int8)byte_98A19C[v13] )\n          {\n            v23 = dword_7807E0[v13];\n            v3 = 744 * v23;\n            if ( dword_755194[186 * v23] != v7 )\n            {\n              v24 = (int *)((char *)dword_755194 + v3);\n              v25 = v12[22];\n              LOBYTE(v3) = v25 + 1;\n              v12[22] = v25 + 1;\n              dword_754F14[v25 + v10] = v23;\n              *v24 = v7;\n            }\n          }\n        }\n        else\n        {\n          v26 = v12[1];\n          if ( v26 <= 19 )\n          {\n            LOBYTE(v3) = v13 - 20;\n            dword_754EC0[v26 + v10] = v13 - 20;\n            LODWORD(v26) = v12[1];\n          }\n          v12[1] = v26 + 1;\n          dword_780E30[v13] = v6;\n        }\n        if ( byte_98A1B1[v13] || dword_780E84[v13] == v6 )\n        {\n          if ( v11 == (unsigned __int8)byte_98A1B1[v13] )\n          {\n            v27 = dword_780834[v13];\n            v3 = 744 * v27;\n            if ( dword_755194[186 * v27] != v7 )\n            {\n              v3 += (signed __int64)dword_755194;\n              v28 = v12[22];\n              v12[22] = v28 + 1;\n              dword_754F14[v28 + v10] = v27;\n              *(_DWORD *)v3 = v7;\n            }\n          }\n        }\n        else\n        {\n          v29 = v12[1];\n          if ( v29 <= 19 )\n          {\n            dword_754EC0[v29 + v10] = v13 + 1;\n            LODWORD(v29) = v12[1];\n          }\n          v12[1] = v29 + 1;\n          dword_780E84[v13] = v6;\n        }\n        v13 = dword_7814C0[v14];\n      }\n      while ( v13 != *v12 );\n      ++v9;\n    }\n    while ( v9 < v8 );\n    dword_780E70[0] = v6;\n    dword_781B00 = v7;\n  }\n  return v3;\n}\n", 
            "funcStartAddr": "0x406310L", 
            "funcEndAddr": "0x4066d5L", 
            "funcName": "sub_406310"
        }, 
        {
            "decompiledFuncCode": "char sub_4066E0()\n{\n  unsigned int v0; // er14\n  __int64 v1; // rbx\n  signed int v2; // eax\n\n  v0 = dword_565C68;\n  if ( (unsigned int)(dword_565C68 - 1) >= 0x13 )\n    sub_4340E0(\"engine/board.c\", 400LL, \"board_size > 0 && board_size <= 19\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  v1 = 0LL;\n  memset(byte_98A1B0, 0, 0x1A5uLL);\n  memset(byte_98A360, 0, 0x1A5uLL);\n  v2 = -1;\n  do\n  {\n    if ( (unsigned int)v1 / 0x14 - 1 >= v0 || v2 - 20 * ((unsigned int)v1 / 0x14) >= v0 )\n    {\n      byte_98A1B0[v1] = 3;\n      byte_98A360[v1] = 3;\n    }\n    ++v1;\n    ++v2;\n  }\n  while ( v1 != 421 );\n  dword_98A764 = 0;\n  dword_98A800 = 0;\n  dword_98A760 = 0;\n  dword_98A77C = 0;\n  dword_98A780 = 0;\n  dword_98A778 = 0;\n  dword_98A7BC = 0;\n  dword_98A7C0 = 0;\n  sub_419C40(&qword_98A740, byte_98A1B0);\n  return sub_406310();\n}\n", 
            "funcStartAddr": "0x4066e0L", 
            "funcEndAddr": "0x4067fcL", 
            "funcName": "sub_4066E0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 sub_406800()\n{\n  signed __int64 result; // rax\n\n  if ( (unsigned int)(dword_565C68 - 1) >= 0x13 )\n    sub_4340E0(\"engine/board.c\", 432LL, \"board_size > 0 && board_size <= 19\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  result = 0LL;\n  while ( (unsigned int)result / 0x14 - 1 < dword_565C68\n       && (unsigned int)result + ~(20 * ((unsigned int)result / 0x14)) < dword_565C68\n       || byte_98A1B0[result] == 3 )\n  {\n    if ( (unsigned __int64)++result >= 0x1A5 )\n      return 0xFFFFFFFFLL;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x406800L", 
            "funcEndAddr": "0x40687aL", 
            "funcName": "sub_406800"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_406880(__int64 a1, __int64 a2, const char *a3, unsigned int a4, unsigned int a5, unsigned int a6)\n{\n  unsigned int v6; // er12\n  unsigned int v7; // ebp\n  unsigned int v8; // ebx\n  const char *v9; // r14\n  unsigned int v10; // er15\n  __int64 v11; // rdx\n  __int64 v12; // rcx\n  __int64 v13; // r8\n  __int64 v14; // r9\n  const char *v15; // r15\n  __int64 v16; // rax\n  __int64 v17; // rdx\n  __int64 v18; // r8\n  __int64 v19; // r9\n  char *v20; // rbx\n  char *v21; // rbx\n  char v23; // [rsp+20h] [rbp-98h]\n\n  v6 = a6;\n  v7 = a5;\n  v8 = a4;\n  v9 = a3;\n  v10 = 0;\n  if ( (unsigned int)sub_406AD0(a1, a2, 0LL) )\n  {\n    if ( qword_88C238 )\n    {\n      v15 = \"UNKNOWN\";\n      if ( v9 )\n        v15 = v9;\n      if ( v8 )\n      {\n        v16 = sub_4341C0(v8, a2, v11, v12, v13, v14);\n        if ( v7 )\n        {\n          if ( v7 >= 7 )\n            sub_4340E0(\"engine/board.c\", 462LL, \"komaster >= 0 && komaster <= 6\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n          v20 = off_4AE410[v7];\n          sub_4341C0(v6, a2, v17, v16, v18, v19);\n          sub_4937C0(&v23, 100LL, \"%s at %s (variation %d, hash %lx, komaster %s:%s)\", v15);\n        }\n        else\n        {\n          sub_4937C0(&v23, 100LL, \"%s at %s (variation %d, hash %lx)\", v15);\n        }\n      }\n      else if ( v7 )\n      {\n        if ( v7 >= 7 )\n          sub_4340E0(\"engine/board.c\", 462LL, \"komaster >= 0 && komaster <= 6\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n        v21 = off_4AE410[v7];\n        sub_4341C0(v6, a2, v11, v12, v13, qword_98A740);\n        sub_4937C0(&v23, 100LL, \"%s (variation %d, hash %lx, komaster %s:%s)\", v15);\n      }\n      else\n      {\n        sub_4937C0(&v23, 100LL, \"%s (variation %d, hash %lx)\", v15);\n      }\n      sub_401850((__int64 *)qword_88C238);\n      sub_4018D0((__int64 *)qword_88C238);\n    }\n    if ( dword_88C22C )\n      ++dword_88C22C;\n    LODWORD(xmmword_98A720) = xmmword_98A720 + 1;\n    v10 = 1;\n  }\n  return v10;\n}\n", 
            "funcStartAddr": "0x406880L", 
            "funcEndAddr": "0x406ac1L", 
            "funcName": "sub_406880"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_406AD0(unsigned __int64 a1, unsigned int a2, int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  int v5; // edx\n  unsigned int v6; // ebp\n  __int64 v8; // rax\n  __int64 v9; // rdx\n  _QWORD *v10; // rcx\n  int v11; // esi\n  signed __int64 v12; // rcx\n\n  v3 = a2;\n  v4 = a1;\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[(signed int)a1] == 3 )\n  {\n    v5 = (1717986919LL * (signed int)a1 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 646LL, \"ON_BOARD1(pos)\", (unsigned int)(v5 - 1), (unsigned int)(a1 - 20 * v5 - 1));\n  }\n  if ( a2 - 1 >= 2 )\n    sub_4340E0(\"engine/board.c\", 647LL, \"color == 2 || color == 1\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  byte_98A510[(signed int)a1] = 1;\n  v6 = 0;\n  if ( !byte_98A1B0[(signed int)a1]\n    && (a3\n     || dword_98A764 != (_DWORD)a1\n     || 3 - a2 != (unsigned __int8)byte_98A1AF[(signed int)a1] && 3 - a2 != (unsigned __int8)byte_98A1B1[(signed int)a1]) )\n  {\n    a1 = (unsigned int)a1;\n    if ( !(unsigned int)sub_407C30((unsigned int)a1, a2) )\n    {\n      v8 = dword_98A7F4;\n      if ( dword_98A7F4 >= 359LL )\n      {\n        fwrite(\"gnugo: Truncating search. This is beyond my reading ability!\\n\", 0x3DuLL, 1uLL, stderr);\n        if ( dword_88C268 > 0 )\n        {\n          sub_44A610(0LL, 61LL);\n          sub_407180(0LL);\n        }\n        fflush(stdout);\n        fflush(stderr);\n      }\n      else\n      {\n        ++dword_781B0C;\n        dword_754900[dword_98A7F4] = a1;\n        dword_754350[v8] = a2;\n        v9 = qword_781B10;\n        *(_QWORD *)qword_781B10 = 0LL;\n        v10 = (_QWORD *)qword_781B18;\n        qword_781B18 += 16LL;\n        *v10 = 0LL;\n        *(_QWORD *)(v9 + 16) = &dword_98A764;\n        v11 = dword_98A764;\n        v12 = v9 + 32;\n        qword_781B10 = v9 + 32;\n        *(_DWORD *)(v9 + 24) = dword_98A764;\n        qword_753800[v8] = qword_98A740;\n        if ( v11 )\n        {\n          a1 = (unsigned __int64)&qword_98A740;\n          sub_419CB0(&qword_98A740);\n          v12 = qword_781B10;\n          LODWORD(v8) = dword_98A7F4;\n        }\n        dword_98A764 = 0;\n        *(_QWORD *)v12 = &dword_98A760;\n        *(_DWORD *)(v12 + 8) = dword_98A760;\n        *(_QWORD *)(v12 + 16) = &dword_98A800;\n        qword_781B10 = v12 + 32;\n        *(_DWORD *)(v12 + 24) = dword_98A800;\n        dword_98A7F4 = v8 + 1;\n        if ( dword_88C268 == 4 )\n          sub_407180(a1);\n        sub_40C1E0(v4, v3);\n        v6 = 1;\n      }\n    }\n  }\n  return v6;\n}\n", 
            "funcStartAddr": "0x406ad0L", 
            "funcEndAddr": "0x406cfcL", 
            "funcName": "sub_406AD0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_406D00(unsigned __int64 a1, unsigned int a2, const char *a3, unsigned int a4, unsigned int a5, int a6)\n{\n  int v6; // er12\n  unsigned int v7; // er13\n  unsigned int v8; // ebx\n  const char *v9; // r14\n  unsigned int v10; // ebp\n  const char *v11; // rbp\n  char v13; // [rsp+2h] [rbp-A6h]\n  char v14; // [rsp+7h] [rbp-A1h]\n  unsigned int v15; // [rsp+Ch] [rbp-9Ch]\n  char v16; // [rsp+10h] [rbp-98h]\n\n  v6 = a6;\n  v7 = a5;\n  v8 = a4;\n  v9 = a3;\n  v10 = 0;\n  v15 = a2;\n  if ( (unsigned int)sub_406AD0(a1, a2, 0) )\n  {\n    v11 = \"UNKNOWN\";\n    if ( v9 )\n      v11 = v9;\n    if ( qword_88C238 )\n    {\n      sub_434320(v8, &v14);\n      sub_434320(v7, &v13);\n      if ( v6 )\n        sub_4937C0(&v16, 100LL, \"%s in semeai %s-%s (variation %d, value %d, owl_phase)\", v11);\n      else\n        sub_4937C0(&v16, 100LL, v11, &v14);\n      sub_401850((__int64 *)qword_88C238);\n      sub_4018D0((__int64 *)qword_88C238);\n    }\n    if ( dword_88C22C )\n      ++dword_88C22C;\n    LODWORD(xmmword_98A720) = xmmword_98A720 + 1;\n    v10 = 1;\n  }\n  return v10;\n}\n", 
            "funcStartAddr": "0x406d00L", 
            "funcEndAddr": "0x406e51L", 
            "funcName": "sub_406D00"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_406E60(unsigned __int64 a1, __int64 a2, const char *a3, unsigned int a4, unsigned int a5)\n{\n  unsigned int v5; // er13\n  unsigned int v6; // er12\n  const char *v7; // rbp\n  __int64 v8; // rdx\n  __int64 v9; // rcx\n  const char *v10; // r15\n  char *v11; // r12\n  char v13; // [rsp+10h] [rbp-98h]\n\n  v5 = a5;\n  v6 = a4;\n  v7 = a3;\n  if ( !(unsigned int)sub_406AD0(a1, a2, 1) )\n    return 0LL;\n  if ( qword_88C238 )\n  {\n    v10 = \"UNKNOWN\";\n    if ( v7 )\n      v10 = v7;\n    if ( v6 )\n    {\n      if ( v6 >= 7 )\n        sub_4340E0(\"engine/board.c\", 462LL, \"komaster >= 0 && komaster <= 6\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n      v11 = off_4AE410[v6];\n      sub_4341C0(v5, a2, v8, v9, (unsigned int)dword_88C22C, qword_98A740);\n      sub_4937C0(&v13, 100LL, \"tryko: %s (variation %d, %lx, komaster %s:%s)\", v10);\n    }\n    else\n    {\n      sub_4937C0(&v13, 100LL, \"tryko: %s (variation %d, %lx)\", v10);\n    }\n    sub_401850((__int64 *)qword_88C238);\n    sub_4018D0((__int64 *)qword_88C238);\n    sub_401850((__int64 *)qword_88C238);\n    sub_4018D0((__int64 *)qword_88C238);\n    sub_401850((__int64 *)qword_88C238);\n    sub_4018D0((__int64 *)qword_88C238);\n  }\n  if ( dword_88C22C )\n    ++dword_88C22C;\n  LODWORD(xmmword_98A720) = xmmword_98A720 + 1;\n  return 1LL;\n}\n", 
            "funcStartAddr": "0x406e60L", 
            "funcEndAddr": "0x407021L", 
            "funcName": "sub_406E60"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_407030()\n{\n  __int64 v0; // rcx\n  __int64 v1; // rax\n  _DWORD *v2; // rcx\n  __int64 v3; // rax\n  _BYTE *v4; // rcx\n  __int64 result; // rax\n  __int64 ***v6; // rdi\n  __int64 v7; // [rsp+0h] [rbp-78h]\n\n  --dword_98A7F4;\n  v0 = qword_781B10;\n  if ( qword_781B10 - (signed __int64)&unk_781B30 >= 462096 )\n    sub_4340E0(\n      \"engine/board.c\",\n      766LL,\n      \"change_stack_pointer - change_stack <= 80 * 19 * 19\",\n      0xFFFFFFFFLL,\n      0xFFFFFFFFLL);\n  v1 = qword_781B10 - 16;\n  qword_781B10 -= 16LL;\n  v2 = *(_DWORD **)(v0 - 16);\n  if ( v2 )\n  {\n    do\n    {\n      *v2 = *(_DWORD *)(v1 + 8);\n      v2 = *(_DWORD **)(v1 - 16);\n      v1 -= 16LL;\n    }\n    while ( v2 );\n    qword_781B10 = v1;\n  }\n  v3 = qword_781B18 - 16;\n  qword_781B18 = v3;\n  v4 = *(_BYTE **)v3;\n  if ( *(_QWORD *)v3 )\n  {\n    do\n    {\n      *v4 = *(_BYTE *)(v3 + 8);\n      v4 = *(_BYTE **)(v3 - 16);\n      v3 -= 16LL;\n    }\n    while ( v4 );\n    qword_781B18 = v3;\n  }\n  result = qword_753800[dword_98A7F4];\n  qword_98A740 = qword_753800[dword_98A7F4];\n  if ( qword_88C238 )\n  {\n    sub_4937C0(&v7, 100LL, \"(next variation: %d)\", (unsigned int)dword_88C22C);\n    sub_4018D0((__int64 *)qword_88C238);\n    do\n    {\n      v6 = *(__int64 ****)(*(_QWORD *)(qword_88C238 + 8) + 8LL);\n      *(_QWORD *)(qword_88C238 + 8) = v6;\n      result = sub_4015E0(v6, dword_565C68);\n    }\n    while ( (_DWORD)result );\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x407030L", 
            "funcEndAddr": "0x407178L", 
            "funcName": "sub_407030"
        }, 
        {
            "decompiledFuncCode": "int sub_407180()\n{\n  signed __int64 v0; // rbx\n  __int64 v1; // rdx\n\n  if ( dword_98A7F4 > 0 )\n  {\n    v0 = 0LL;\n    do\n    {\n      dword_754350[v0];\n      v1 = (unsigned int)dword_754900[v0];\n      sub_433F90((unsigned __int64)\"%o%s:%1m \");\n      ++v0;\n    }\n    while ( v0 < dword_98A7F4 );\n  }\n  if ( dword_88C22C )\n    sub_433F90((unsigned __int64)\"%o (variation %d)\");\n  sub_433F90((unsigned __int64)\"%o\\n\");\n  fflush(stdout);\n  return fflush(stderr);\n}\n", 
            "funcStartAddr": "0x407180L", 
            "funcEndAddr": "0x407218L", 
            "funcName": "sub_407180"
        }, 
        {
            "decompiledFuncCode": "char __fastcall sub_407220(signed int a1, unsigned int a2)\n{\n  int v2; // edx\n  char v3; // al\n  int v4; // edx\n  int v5; // edx\n\n  if ( dword_98A7F4 )\n  {\n    v2 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 823LL, \"stackp == 0\", (unsigned int)(v2 - 1), (unsigned int)(a1 - 20 * v2 - 1));\n  }\n  if ( (unsigned int)a1 > 0x1A4 || (v3 = byte_98A1B0[a1], v3 == 3) )\n  {\n    v4 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 824LL, \"ON_BOARD1(pos)\", (unsigned int)(v4 - 1), (unsigned int)(a1 - 20 * v4 - 1));\n  }\n  if ( v3 )\n  {\n    v5 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 825LL, \"board[pos] == EMPTY\", (unsigned int)(v5 - 1), (unsigned int)(a1 - 20 * v5 - 1));\n  }\n  byte_98A1B0[a1] = a2;\n  sub_419CC0(&qword_98A740, (unsigned int)a1, a2);\n  memcpy(byte_98A360, byte_98A1B0, 0x1A5uLL);\n  dword_98A780 = dword_98A800;\n  qword_98A778 = qword_98A760;\n  dword_98A7BC = 0;\n  return sub_406310();\n}\n", 
            "funcStartAddr": "0x407220L", 
            "funcEndAddr": "0x407372L", 
            "funcName": "sub_407220"
        }, 
        {
            "decompiledFuncCode": "char __fastcall sub_407380(signed int a1)\n{\n  int v1; // edx\n  unsigned __int8 v2; // al\n  int v3; // edx\n  int v4; // edx\n\n  if ( dword_98A7F4 )\n  {\n    v1 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 841LL, \"stackp == 0\", (unsigned int)(v1 - 1), (unsigned int)(a1 - 20 * v1 - 1));\n  }\n  if ( (unsigned int)a1 > 0x1A4 || (v2 = byte_98A1B0[a1], v2 == 3) )\n  {\n    v3 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 842LL, \"ON_BOARD1(pos)\", (unsigned int)(v3 - 1), (unsigned int)(a1 - 20 * v3 - 1));\n  }\n  if ( (unsigned __int8)(v2 - 1) >= 2u )\n  {\n    v4 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      843LL,\n      \"IS_STONE(board[pos])\",\n      (unsigned int)(v4 - 1),\n      (unsigned int)(a1 - 20 * v4 - 1));\n  }\n  sub_419CC0(&qword_98A740, (unsigned int)a1, v2);\n  byte_98A1B0[a1] = 0;\n  memcpy(byte_98A360, byte_98A1B0, 0x1A5uLL);\n  dword_98A780 = dword_98A800;\n  qword_98A778 = qword_98A760;\n  dword_98A7BC = 0;\n  return sub_406310();\n}\n", 
            "funcStartAddr": "0x407380L", 
            "funcEndAddr": "0x4074e2L", 
            "funcName": "sub_407380"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4074F0(signed int a1, unsigned int a2)\n{\n  unsigned int v2; // er14\n  unsigned int v3; // ebx\n  int v4; // edx\n  int v5; // edx\n  char v6; // al\n  int v7; // edx\n  int v8; // edx\n  int v9; // ebp\n  int v10; // er13\n  int v11; // er15\n  int v12; // er12\n  signed __int64 v13; // rbp\n  signed __int64 v14; // rbp\n  unsigned __int64 v15; // rcx\n  signed __int64 v16; // rax\n  unsigned __int64 v17; // rax\n  unsigned __int64 v18; // rsi\n  __int64 v19; // rdx\n  signed __int64 v20; // rdi\n  __int64 v21; // rsi\n  __int128 v22; // xmm1\n  __int128 v23; // xmm1\n  __int128 v24; // xmm1\n  __int128 v25; // xmm1\n  __int128 v26; // xmm1\n  __int128 v27; // xmm1\n  __int64 v28; // rax\n  __int64 result; // rax\n  __int64 v30; // [rsp+0h] [rbp-1D8h]\n\n  v2 = a2;\n  v3 = a1;\n  if ( dword_98A7F4 )\n  {\n    v4 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 924LL, \"stackp == 0\", (unsigned int)(v4 - 1), (unsigned int)(a1 - 20 * v4 - 1));\n  }\n  if ( a2 - 1 >= 2 )\n  {\n    v5 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      925LL,\n      \"color == WHITE || color == BLACK\",\n      (unsigned int)(v5 - 1),\n      (unsigned int)(a1 - 20 * v5 - 1));\n  }\n  if ( a1 )\n  {\n    if ( (unsigned int)a1 > 0x1A4 || (v6 = byte_98A1B0[a1], v6 == 3) )\n    {\n      v7 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n      sub_4340E0(\n        \"engine/board.c\",\n        926LL,\n        \"pos == PASS_MOVE || ON_BOARD1(pos)\",\n        (unsigned int)(v7 - 1),\n        (unsigned int)(a1 - 20 * v7 - 1));\n    }\n    if ( v6 )\n    {\n      v8 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n      sub_4340E0(\n        \"engine/board.c\",\n        927LL,\n        \"pos == PASS_MOVE || board[pos] == EMPTY\",\n        (unsigned int)(v8 - 1),\n        (unsigned int)(a1 - 20 * v8 - 1));\n    }\n  }\n  v9 = dword_98A7BC;\n  if ( dword_98A7BC >= 500 )\n  {\n    v10 = HIDWORD(qword_98A760);\n    v11 = dword_98A800;\n    v12 = qword_98A760;\n    memcpy(&v30, byte_98A1B0, 0x1A5uLL);\n    memcpy(byte_98A1B0, byte_98A360, 0x1A5uLL);\n    dword_98A800 = dword_98A780;\n    qword_98A760 = qword_98A778;\n    sub_406310();\n    v13 = -204LL;\n    do\n    {\n      sub_4078F0(*(unsigned int *)((char *)xmmword_985C1C + v13), *(unsigned int *)((char *)xmmword_98544C + v13));\n      v13 += 4LL;\n    }\n    while ( v13 );\n    memcpy(byte_98A360, byte_98A1B0, 0x1A5uLL);\n    dword_98A780 = dword_98A800;\n    qword_98A778 = qword_98A760;\n    v14 = dword_98A7BC;\n    if ( dword_98A7BC < 52LL )\n      goto LABEL_25;\n    v15 = dword_98A7BC - 51LL;\n    if ( v15 < 8 )\n    {\n      v16 = 51LL;\n      goto LABEL_24;\n    }\n    v17 = v15 & 0xFFFFFFFFFFFFFFF8LL;\n    v18 = ((v15 & 0xFFFFFFFFFFFFFFF8LL) - 8) >> 3;\n    v19 = ((_BYTE)v18 + 1) & 1;\n    if ( (v15 & 0xFFFFFFFFFFFFFFF8LL) == 8 )\n    {\n      v21 = 0LL;\n      if ( !v19 )\n        goto LABEL_22;\n    }\n    else\n    {\n      v20 = v19 - 1 - v18;\n      v21 = 0LL;\n      do\n      {\n        v22 = xmmword_98545C[v21];\n        xmmword_985380[v21] = xmmword_98544C[v21];\n        xmmword_985390[v21] = v22;\n        v23 = xmmword_985C2C[v21];\n        xmmword_985B50[v21] = xmmword_985C1C[v21];\n        xmmword_985B60[v21] = v23;\n        v24 = xmmword_98547C[v21];\n        xmmword_9853A0[v21] = xmmword_98546C[v21];\n        xmmword_9853B0[v21] = v24;\n        v25 = xmmword_985C4C[v21];\n        xmmword_985B70[v21] = xmmword_985C3C[v21];\n        xmmword_985B80[v21] = v25;\n        v21 += 4LL;\n        v20 += 2LL;\n      }\n      while ( v20 );\n      if ( !v19 )\n        goto LABEL_22;\n    }\n    v26 = xmmword_98545C[v21];\n    xmmword_985380[v21] = xmmword_98544C[v21];\n    xmmword_985390[v21] = v26;\n    v27 = xmmword_985C2C[v21];\n    xmmword_985B50[v21] = xmmword_985C1C[v21];\n    xmmword_985B60[v21] = v27;\nLABEL_22:\n    if ( v15 == v17 )\n    {\nLABEL_25:\n      v9 = v14 - 51;\n      dword_98A7BC = v9;\n      memcpy(byte_98A1B0, &v30, 0x1A5uLL);\n      HIDWORD(qword_98A760) = v10;\n      dword_98A800 = v11;\n      LODWORD(qword_98A760) = v12;\n      goto LABEL_26;\n    }\n    v16 = v17 + 51;\n    do\n    {\nLABEL_24:\n      dword_9852B4[v16] = *((_DWORD *)xmmword_985380 + v16);\n      dword_985A84[v16] = *((_DWORD *)xmmword_985B50 + v16);\n      ++v16;\n    }\n    while ( v16 < v14 );\n    goto LABEL_25;\n  }\nLABEL_26:\n  v28 = v9;\n  *((_DWORD *)xmmword_985380 + v28) = v2;\n  *((_DWORD *)xmmword_985B50 + v28) = v3;\n  dword_98A7BC = v9 + 1;\n  result = sub_4078F0(v3, v2);\n  ++dword_98A7C0;\n  return result;\n}\n", 
            "funcStartAddr": "0x4074f0L", 
            "funcEndAddr": "0x4078e3L", 
            "funcName": "sub_4074F0"
        }, 
        {
            "decompiledFuncCode": "char __fastcall sub_4078F0(signed int a1, unsigned int a2)\n{\n  char v2; // al\n  int v3; // edx\n  int v4; // edx\n\n  if ( HIDWORD(qword_98A760) )\n    sub_419CB0(&qword_98A740);\n  HIDWORD(qword_98A760) = 0;\n  if ( a1 )\n  {\n    if ( (unsigned int)a1 > 0x1A4 || (v2 = byte_98A1B0[a1], v2 == 3) )\n    {\n      v3 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n      sub_4340E0(\"engine/board.c\", 872LL, \"ON_BOARD1(pos)\", (unsigned int)(v3 - 1), (unsigned int)(a1 - 20 * v3 - 1));\n    }\n    if ( v2 )\n    {\n      v4 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n      sub_4340E0(\n        \"engine/board.c\",\n        873LL,\n        \"board[pos] == EMPTY\",\n        (unsigned int)(v4 - 1),\n        (unsigned int)(a1 - 20 * v4 - 1));\n    }\n    sub_40C1E0((unsigned int)a1, a2);\n  }\n  return sub_406310();\n}\n", 
            "funcStartAddr": "0x4078f0L", 
            "funcEndAddr": "0x4079cfL", 
            "funcName": "sub_4078F0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4079D0(int a1)\n{\n  int v1; // ebp\n  signed __int64 result; // rax\n  unsigned __int8 v3; // of\n  __int64 v4; // rbp\n  __int64 v5; // rbx\n\n  if ( dword_98A7F4 )\n    sub_4340E0(\"engine/board.c\", 976LL, \"stackp == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  v1 = dword_98A7BC;\n  result = 0LL;\n  if ( dword_98A7BC >= a1 )\n  {\n    memcpy(byte_98A1B0, byte_98A360, 0x1A5uLL);\n    dword_98A800 = dword_98A780;\n    qword_98A760 = qword_98A778;\n    sub_406310();\n    v3 = __OFSUB__(v1, a1);\n    LODWORD(v4) = v1 - a1;\n    if ( !((unsigned __int8)(((signed int)v4 < 0) ^ v3) | ((_DWORD)v4 == 0)) )\n    {\n      v4 = (unsigned int)v4;\n      v5 = 0LL;\n      do\n      {\n        sub_4078F0(*((_DWORD *)xmmword_985B50 + v5), *((_DWORD *)xmmword_985380 + v5));\n        ++v5;\n      }\n      while ( v4 != v5 );\n    }\n    dword_98A7BC -= a1;\n    dword_98A7C0 -= a1;\n    result = 1LL;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4079d0L", 
            "funcEndAddr": "0x407a94L", 
            "funcName": "sub_4079D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_407AA0(int a1)\n{\n  __int64 result; // rax\n  signed __int64 v2; // rcx\n\n  result = 0LL;\n  if ( dword_98A7BC > 0LL )\n  {\n    v2 = dword_98A7BC + 1LL;\n    while ( dword_985378[v2] != 3 - a1 )\n    {\n      if ( --v2 < 2 )\n        return result;\n    }\n    result = (unsigned int)dword_985B48[v2];\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x407aa0L", 
            "funcEndAddr": "0x407adcL", 
            "funcName": "sub_407AA0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_407AE0()\n{\n  __int64 result; // rax\n\n  if ( dword_98A7BC )\n    result = (unsigned int)dword_985B4C[dword_98A7BC];\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x407ae0L", 
            "funcEndAddr": "0x407af7L", 
            "funcName": "sub_407AE0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_407B00()\n{\n  __int64 result; // rax\n\n  if ( dword_98A7BC )\n    result = (unsigned int)dword_98537C[dword_98A7BC];\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x407b00L", 
            "funcEndAddr": "0x407b17L", 
            "funcName": "sub_407B00"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_407B20(int a1)\n{\n  return a1 == 0;\n}\n", 
            "funcStartAddr": "0x407b20L", 
            "funcEndAddr": "0x407b28L", 
            "funcName": "sub_407B20"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_407B30(unsigned int a1, unsigned int a2)\n{\n  unsigned int v2; // ebp\n  char v3; // al\n  int v4; // edx\n\n  v2 = 1;\n  if ( a1 )\n  {\n    if ( a1 > 0x1A4 || (v3 = byte_98A1B0[a1], v3 == 3) )\n    {\n      v4 = (1717986919LL * (signed int)a1 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)a1) >> 63);\n      sub_4340E0(\"engine/board.c\", 1059LL, \"ON_BOARD1(pos)\", (unsigned int)(v4 - 1), a1 - 20 * v4 - 1);\n    }\n    v2 = 0;\n    if ( !v3\n      && (HIDWORD(qword_98A760) != a1\n       || 3 - a2 != (unsigned __int8)byte_98A1AF[a1] && 3 - a2 != (unsigned __int8)byte_98A1B1[a1]) )\n    {\n      if ( dword_98A7F4 >= 359 )\n      {\n        fwrite(\"gnugo: Truncating search. This is beyond my reading ability!\\n\", 0x3DuLL, 1uLL, stderr);\n      }\n      else if ( dword_88C30C || !(unsigned int)sub_407C30(a1, a2) )\n      {\n        v2 = 1;\n      }\n    }\n  }\n  return v2;\n}\n", 
            "funcStartAddr": "0x407b30L", 
            "funcEndAddr": "0x407c27L", 
            "funcName": "sub_407B30"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_407C30(signed int a1, int a2)\n{\n  char v2; // al\n  int v3; // edx\n  int v4; // edx\n  int v5; // ecx\n  signed __int64 result; // rax\n  int v7; // ecx\n  int v8; // ecx\n  int v9; // ecx\n\n  if ( (unsigned int)a1 > 0x1A4 || (v2 = byte_98A1B0[a1], v2 == 3) )\n  {\n    v3 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 1104LL, \"ON_BOARD1(pos)\", (unsigned int)(v3 - 1), (unsigned int)(a1 - 20 * v3 - 1));\n  }\n  if ( v2 )\n  {\n    v4 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      1105LL,\n      \"board[pos] == EMPTY\",\n      (unsigned int)(v4 - 1),\n      (unsigned int)(a1 - 20 * v4 - 1));\n  }\n  v5 = (unsigned __int8)byte_98A1C4[a1];\n  result = 0LL;\n  if ( byte_98A1C4[a1] && ((_BYTE)v5 == 3 || !((v5 == a2) ^ (dword_754EBC[186 * dword_780880[a1]] == 1))) )\n  {\n    v7 = (unsigned __int8)byte_98A1AF[a1];\n    if ( byte_98A1AF[a1] && ((_BYTE)v7 == 3 || !((v7 == a2) ^ (dword_754EBC[186 * dword_78082C[a1]] == 1))) )\n    {\n      v8 = (unsigned __int8)byte_98A19C[a1];\n      if ( byte_98A19C[a1] )\n      {\n        if ( (_BYTE)v8 == 3 || !((v8 == a2) ^ (dword_754EBC[186 * dword_7807E0[a1]] == 1)) )\n        {\n          v9 = (unsigned __int8)byte_98A1B1[a1];\n          if ( byte_98A1B1[a1] && ((_BYTE)v9 == 3 || !((v9 == a2) ^ (dword_754EBC[186 * dword_780834[a1]] == 1))) )\n            result = 1LL;\n        }\n      }\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x407c30L", 
            "funcEndAddr": "0x407dbaL", 
            "funcName": "sub_407C30"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_407DC0(signed int a1, int a2)\n{\n  char v2; // al\n  int v3; // edx\n  int v4; // edx\n  _BOOL8 result; // rax\n\n  if ( (unsigned int)a1 > 0x1A4 || (v2 = byte_98A1B0[a1], v2 == 3) )\n  {\n    v3 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 1139LL, \"ON_BOARD1(pos)\", (unsigned int)(v3 - 1), (unsigned int)(a1 - 20 * v3 - 1));\n  }\n  if ( v2 )\n  {\n    v4 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      1140LL,\n      \"board[pos] == EMPTY\",\n      (unsigned int)(v4 - 1),\n      (unsigned int)(a1 - 20 * v4 - 1));\n  }\n  result = 0LL;\n  if ( HIDWORD(qword_98A760) == a1 )\n  {\n    result = 1LL;\n    if ( 3 - a2 != (unsigned __int8)byte_98A1AF[a1] )\n      result = 3 - a2 == (unsigned __int8)byte_98A1B1[a1];\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x407dc0L", 
            "funcEndAddr": "0x407e9bL", 
            "funcName": "sub_407DC0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_407EA0(unsigned int a1, unsigned int a2, const char *a3, unsigned int a4, unsigned int a5, unsigned int a6, unsigned int *a7, _DWORD *a8, _DWORD *a9, int a10)\n{\n  unsigned int v10; // ebp\n  unsigned int v11; // ebx\n  int v12; // er13\n  int v13; // er15\n  unsigned int v14; // edx\n  int v15; // eax\n  int v16; // ecx\n  int v18; // [rsp+4h] [rbp-44h]\n  int v19; // [rsp+8h] [rbp-40h]\n  unsigned int v20; // [rsp+Ch] [rbp-3Ch]\n  const char *v21; // [rsp+10h] [rbp-38h]\n\n  v10 = a6;\n  v11 = a5;\n  v20 = a4;\n  v21 = a3;\n  v19 = HIDWORD(qword_98A760);\n  switch ( a5 )\n  {\n    case 1u:\n    case 4u:\n      if ( (unsigned __int8)(byte_98A1B0[a6] - 1) < 2u\n        || !(unsigned int)sub_408130(a6, 2LL, 0LL) && (unsigned int)sub_407C30(v10, 2) )\n      {\n        goto LABEL_6;\n      }\n      if ( v11 == 2 )\n        goto LABEL_5;\n      break;\n    case 2u:\n    case 5u:\nLABEL_5:\n      if ( (unsigned __int8)(byte_98A1B0[v10] - 1) < 2u\n        || !(unsigned int)sub_408130(v10, 1LL, 0LL) && (unsigned int)sub_407C30(v10, 1) )\n      {\nLABEL_6:\n        v10 = 0;\n        v11 = 0;\n      }\n      break;\n    default:\n      break;\n  }\n  *a7 = v11;\n  v12 = 3 - a2;\n  *a8 = v10;\n  *a9 = 0;\n  v13 = sub_408130(a1, a2, &v18);\n  if ( v13 )\n  {\n    v14 = 0;\n    if ( !(v12 ^ v11 | a1 ^ v10)\n      || (v11 | 1) == 5\n      || v11 == a2 && v18 != v10 + 21 && v18 != v10 - 19 && v18 != v10 + 19 && v18 != v10 - 21\n      || v11 == 6\n      && HIDWORD(qword_98A760) != a1\n      && v18 != v10 + 21\n      && v18 != v10 - 19\n      && v18 != v10 + 19\n      && v18 != v10 - 21 )\n    {\n      return v14;\n    }\n  }\n  else if ( v11 == 6 )\n  {\n    *a7 = 0;\n    *a8 = 0;\n  }\n  if ( !(unsigned int)sub_406880(a1, a2, v21, v20, v11, v10) )\n  {\n    v14 = 0;\n    if ( !a10 )\n      return v14;\n    v15 = sub_406E60(a1, a2, v21, v11, v10);\n    v14 = 0;\n    if ( !v15 )\n      return v14;\n    *a9 = 1;\n    if ( v11 == 6 || !v11 )\n    {\n      *a7 = a2;\n      *a8 = v18;\n      return 1;\n    }\n  }\n  v14 = 1;\n  if ( v13 )\n  {\n    if ( v11 == v12 )\n    {\n      if ( a2 == 1 )\n        *a7 = 5;\n      else\n        *a7 = 4;\n    }\n    else if ( v11 == a2 )\n    {\n      *a8 = v18;\n    }\n    else\n    {\n      v16 = v19;\n      if ( v19 )\n      {\n        *a7 = 6;\n        *a8 = v16;\n      }\n    }\n  }\n  return v14;\n}\n", 
            "funcStartAddr": "0x407ea0L", 
            "funcEndAddr": "0x408123L", 
            "funcName": "sub_407EA0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_408130(signed int a1, int a2, int *a3)\n{\n  int *v3; // r14\n  signed int v4; // er15\n  int v5; // edx\n  int v6; // edx\n  int v7; // ebp\n  int v8; // edi\n  int v9; // ecx\n  int v10; // esi\n  signed __int64 result; // rax\n  signed __int64 v12; // rax\n  int v13; // edi\n  int v14; // edi\n  signed __int64 v15; // rdi\n  int v16; // edi\n  signed __int64 v17; // rdx\n  signed __int64 v18; // rdi\n\n  v3 = a3;\n  v4 = a1;\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v5 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 2501LL, \"ON_BOARD1(pos)\", (unsigned int)(v5 - 1), (unsigned int)(a1 - 20 * v5 - 1));\n  }\n  if ( (unsigned int)(a2 - 1) >= 2 )\n  {\n    v6 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      2502LL,\n      \"color == WHITE || color == BLACK\",\n      (unsigned int)(v6 - 1),\n      (unsigned int)(a1 - 20 * v6 - 1));\n  }\n  v7 = 3 - a2;\n  v8 = (unsigned __int8)byte_98A1C4[a1];\n  v9 = 0;\n  v10 = 0;\n  if ( v8 != 3 )\n  {\n    result = 0LL;\n    if ( v7 != v8 )\n      return result;\n    v12 = 186LL * dword_780880[v4];\n    v9 = 0;\n    v10 = 0;\n    if ( dword_754EBC[v12] == 1 )\n    {\n      v9 = dword_754EB4[v12];\n      result = 0LL;\n      if ( v9 > 1 )\n        return result;\n      v10 = v4 + 20;\n    }\n  }\n  v13 = (unsigned __int8)byte_98A1AF[v4];\n  if ( v13 != 3 )\n  {\n    result = 0LL;\n    if ( v7 != v13 )\n      return result;\n    v18 = 186LL * dword_78082C[v4];\n    if ( dword_754EBC[v18] == 1 )\n    {\n      v9 += dword_754EB4[v18];\n      if ( v9 > 1 )\n        return result;\n      v10 = v4 - 1;\n    }\n  }\n  v14 = (unsigned __int8)byte_98A19C[v4];\n  if ( v14 != 3 )\n  {\n    result = 0LL;\n    if ( v7 != v14 )\n      return result;\n    v15 = 186LL * dword_7807E0[v4];\n    if ( dword_754EBC[v15] == 1 )\n    {\n      v9 += dword_754EB4[v15];\n      if ( v9 > 1 )\n        return result;\n      v10 = v4 - 20;\n    }\n  }\n  v16 = (unsigned __int8)byte_98A1B1[v4];\n  if ( v16 != 3 )\n  {\n    result = 0LL;\n    if ( v7 != v16 )\n      return result;\n    v17 = 186LL * dword_780834[v4];\n    if ( dword_754EBC[v17] == 1 )\n    {\n      v9 += dword_754EB4[v17];\n      if ( v9 > 1 )\n        return result;\n      v10 = v4 + 1;\n    }\n  }\n  result = 0LL;\n  if ( v9 == 1 )\n  {\n    result = 1LL;\n    if ( v3 )\n      *v3 = v10;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x408130L", 
            "funcEndAddr": "0x40831fL", 
            "funcName": "sub_408130"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_408320(signed int a1)\n{\n  int v1; // edx\n  _BOOL8 result; // rax\n\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v1 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 1309LL, \"ON_BOARD1(pos)\", (unsigned int)(v1 - 1), (unsigned int)(a1 - 20 * v1 - 1));\n  }\n  if ( byte_98A1C3[a1] == 3 )\n    result = 1LL;\n  else\n    result = byte_98A19D[a1] == 3;\n  return result;\n}\n", 
            "funcStartAddr": "0x408320L", 
            "funcEndAddr": "0x40839aL", 
            "funcName": "sub_408320"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4083A0(int a1)\n{\n  int v1; // edx\n\n  if ( (unsigned __int8)(byte_98A1B0[a1] - 1) >= 2u )\n  {\n    v1 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      1325LL,\n      \"IS_STONE(board[str])\",\n      (unsigned int)(v1 - 1),\n      (unsigned int)(a1 - 20 * v1 - 1));\n  }\n  return (unsigned int)dword_754EBC[186 * dword_780830[a1]];\n}\n", 
            "funcStartAddr": "0x4083a0L", 
            "funcEndAddr": "0x408406L", 
            "funcName": "sub_4083A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_408410(int a1, signed int a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // r12\n  signed int v4; // ebp\n  int v5; // edx\n  int v6; // edx\n  signed __int64 v7; // r11\n  __int64 result; // rax\n  int v9; // edx\n  int *v10; // rsi\n  signed int v11; // ecx\n  __int64 v12; // rsi\n  signed __int64 v13; // r10\n  unsigned __int64 v14; // rdx\n  unsigned __int64 v15; // rcx\n  signed __int64 v16; // r8\n  unsigned __int64 v17; // r8\n  signed __int64 v18; // rdi\n  unsigned __int64 v19; // rcx\n  unsigned __int64 v20; // rdx\n  __int64 v21; // rbp\n  __int64 v22; // rdx\n  char *v23; // rsi\n  signed __int64 v24; // rcx\n  __int128 v25; // xmm1\n  __int128 v26; // xmm1\n  __int128 v27; // xmm1\n  __int128 v28; // xmm1\n  signed __int64 v29; // rcx\n  signed __int64 v30; // rdx\n  __int64 v31; // rbp\n  __int64 v32; // rsi\n  __int128 v33; // xmm1\n\n  v3 = a3;\n  v4 = a2;\n  if ( (unsigned __int8)(byte_98A1B0[a1] - 1) >= 2u )\n  {\n    v5 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      1348LL,\n      \"IS_STONE(board[str])\",\n      (unsigned int)(v5 - 1),\n      (unsigned int)(a1 - 20 * v5 - 1));\n  }\n  if ( !a3 )\n  {\n    v6 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 1349LL, \"libs != NULL\", (unsigned int)(v6 - 1), (unsigned int)(a1 - 20 * v6 - 1));\n  }\n  v7 = 186LL * dword_780830[a1];\n  result = (unsigned int)dword_754EBC[v7];\n  if ( a2 < 21 || (signed int)result <= 20 )\n  {\n    if ( a2 <= 0 || (signed int)result <= 0 )\n      return result;\n    v13 = a2;\n    v14 = -(signed __int64)a2;\n    v15 = -(signed __int64)(signed int)result;\n    v16 = -(signed __int64)(signed int)result;\n    if ( v14 > v15 )\n      v16 = -(signed __int64)a2;\n    v17 = -v16;\n    if ( v17 < 8 )\n    {\n      v18 = 0LL;\n      do\n      {\nLABEL_43:\n        *(_DWORD *)(v3 + 4 * v18) = dword_754EC0[v18 + v7];\n        ++v18;\n      }\n      while ( v18 < v13 && v18 < (signed int)result );\n      return result;\n    }\n    if ( v14 > v15 )\n      v15 = -(signed __int64)a2;\n    v19 = 4 * v15;\n    if ( (unsigned __int64)&dword_754EC0[v7 + v19 / 0xFFFFFFFFFFFFFFFCLL] > v3\n      && (unsigned __int64)&dword_754EC0[v7] < v3 - v19 )\n    {\n      v18 = 0LL;\n      goto LABEL_43;\n    }\n    v18 = v17 & 0xFFFFFFFFFFFFFFF8LL;\n    v20 = ((v17 & 0xFFFFFFFFFFFFFFF8LL) - 8) >> 3;\n    v21 = ((_BYTE)v20 + 1) & 3;\n    if ( (v17 & 0xFFFFFFFFFFFFFFF8LL) - 8 >= 0x18 )\n    {\n      v23 = (char *)&unk_754F30 + v7 * 4;\n      v24 = v21 - 1 - v20;\n      v22 = 0LL;\n      do\n      {\n        v25 = *(_OWORD *)&v23[4 * v22 - 96];\n        *(_OWORD *)(v3 + 4 * v22) = *(_OWORD *)&v23[4 * v22 - 112];\n        *(_OWORD *)(v3 + 4 * v22 + 16) = v25;\n        v26 = *(_OWORD *)&v23[4 * v22 - 64];\n        *(_OWORD *)(v3 + 4 * v22 + 32) = *(_OWORD *)&v23[4 * v22 - 80];\n        *(_OWORD *)(v3 + 4 * v22 + 48) = v26;\n        v27 = *(_OWORD *)&v23[4 * v22 - 32];\n        *(_OWORD *)(v3 + 4 * v22 + 64) = *(_OWORD *)&v23[4 * v22 - 48];\n        *(_OWORD *)(v3 + 4 * v22 + 80) = v27;\n        v28 = *(_OWORD *)&v23[4 * v22];\n        *(_OWORD *)(v3 + 4 * v22 + 96) = *(_OWORD *)&v23[4 * v22 - 16];\n        *(_OWORD *)(v3 + 4 * v22 + 112) = v28;\n        v22 += 32LL;\n        v24 += 4LL;\n      }\n      while ( v24 );\n      if ( !v21 )\n      {\nLABEL_42:\n        if ( v18 == v17 )\n          return result;\n        goto LABEL_43;\n      }\n    }\n    else\n    {\n      v22 = 0LL;\n      if ( !v21 )\n        goto LABEL_42;\n    }\n    v29 = v3 + 4 * v22 + 16;\n    v30 = v7 * 4 + 4 * v22 + 7687888;\n    v31 = -v21;\n    v32 = 0LL;\n    do\n    {\n      v33 = *(_OWORD *)(v30 + v32);\n      *(_OWORD *)(v29 + v32 - 16) = *(_OWORD *)(v30 + v32 - 16);\n      *(_OWORD *)(v29 + v32) = v33;\n      v32 += 32LL;\n      ++v31;\n    }\n    while ( v31 );\n    goto LABEL_42;\n  }\n  v9 = dword_780E70[0]++ + 1;\n  v10 = &dword_754EB8[v7];\n  v11 = 0;\n  do\n  {\n    v12 = *v10;\n    if ( !byte_98A1C4[v12] && dword_780ED0[v12] != v9 )\n    {\n      *(_DWORD *)(v3 + 4LL * v11++) = v12 + 20;\n      dword_780ED0[v12] = v9;\n      if ( v11 >= v4 )\n        break;\n    }\n    if ( !byte_98A1AF[v12] && dword_780E7C[v12] != v9 )\n    {\n      *(_DWORD *)(v3 + 4LL * v11++) = v12 - 1;\n      dword_780E7C[v12] = v9;\n      if ( v11 >= v4 )\n        break;\n    }\n    if ( !byte_98A19C[v12] && dword_780E30[v12] != v9 )\n    {\n      *(_DWORD *)(v3 + 4LL * v11++) = v12 - 20;\n      dword_780E30[v12] = v9;\n      if ( v11 >= v4 )\n        break;\n    }\n    if ( !byte_98A1B1[v12] && dword_780E84[v12] != v9 )\n    {\n      *(_DWORD *)(v3 + 4LL * v11++) = v12 + 1;\n      dword_780E84[v12] = v9;\n      if ( v11 >= v4 )\n        break;\n    }\n    if ( v11 >= v4 )\n      break;\n    v10 = &dword_7814C0[v12];\n  }\n  while ( v11 < (signed int)result );\n  return result;\n}\n", 
            "funcStartAddr": "0x408410L", 
            "funcEndAddr": "0x408773L", 
            "funcName": "sub_408410"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_408780(int a1, int a2, int a3)\n{\n  int v3; // er14\n  int v4; // er15\n  __int64 v5; // rbx\n  int v6; // edx\n  int v7; // edx\n  int v8; // edx\n  int v9; // er11\n  int v10; // edi\n  int v11; // er9\n  int v12; // esi\n  int v13; // er8\n  int v14; // eax\n  unsigned int v15; // ebp\n  int v16; // eax\n  int v17; // ecx\n  signed int v18; // ebp\n  signed __int64 v19; // rax\n  signed __int64 v20; // rcx\n  int v21; // ebx\n  int v22; // ebp\n  int v23; // eax\n  int v24; // ebp\n  int v25; // ebp\n  signed int v26; // ecx\n  unsigned __int64 v27; // rsi\n  __int64 v28; // rdi\n  int v29; // ecx\n  __int64 v30; // rdi\n  __int64 v31; // rax\n  int v32; // edi\n  signed __int64 v33; // rax\n  signed __int64 v34; // rcx\n  int v36; // ecx\n  int v37; // edx\n  int v38; // er10\n  int v39; // ecx\n  int v40; // edx\n  int v41; // edi\n  int v42; // ecx\n  int v43; // edx\n  int v44; // esi\n  int v45; // ecx\n  int v46; // edx\n  int v47; // esi\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a1;\n  if ( byte_98A1B0[a1] )\n  {\n    v6 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      1435LL,\n      \"board[pos] == EMPTY\",\n      (unsigned int)(v6 - 1),\n      (unsigned int)(-20 * v6 + a1 - 1));\n  }\n  if ( (unsigned int)(a2 - 1) >= 2 )\n  {\n    v7 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 1436LL, \"IS_STONE(color)\", (unsigned int)(v7 - 1), (unsigned int)(-20 * v7 + a1 - 1));\n  }\n  v8 = (unsigned __int8)byte_98A1C4[a1];\n  if ( v8 != a2 )\n  {\n    v10 = (unsigned __int8)byte_98A1AF[a1];\n    if ( v10 == a2 )\n    {\n      v9 = dword_78082C[v5];\n      v12 = (unsigned __int8)byte_98A19C[v5];\n      if ( v12 == v4 )\n      {\n        v11 = dword_7807E0[v5];\n        if ( v11 != v9 )\n        {\n          v13 = (unsigned __int8)byte_98A1B1[v5];\n          if ( v13 == v4 )\n          {\n            v14 = dword_780834[v5];\n            if ( v14 != v9 )\n            {\n              v15 = -1;\n              if ( v14 != v11 )\n                return v15;\n            }\n          }\nLABEL_33:\n          if ( v3 )\n            goto LABEL_34;\n          goto LABEL_79;\n        }\n      }\n    }\n    else\n    {\n      v12 = (unsigned __int8)byte_98A19C[v5];\n      if ( v12 != v4 )\n      {\n        v13 = (unsigned __int8)byte_98A1B1[v5];\n        v11 = -1;\n        if ( v13 == v4 )\n        {\n          v9 = dword_780834[v5];\n          if ( !v3 )\n            goto LABEL_79;\n        }\n        else\n        {\n          v9 = -1;\n          if ( !v3 )\n            goto LABEL_79;\n        }\n        goto LABEL_34;\n      }\n      v9 = dword_7807E0[v5];\n    }\n    v13 = (unsigned __int8)byte_98A1B1[v5];\n    v11 = -1;\n    if ( v13 != v4 )\n      goto LABEL_33;\n    v11 = -1;\n    if ( dword_780834[v5] != v9 )\n      v11 = dword_780834[v5];\n    if ( !v3 )\n      goto LABEL_79;\nLABEL_34:\n    if ( v9 < 0 )\n    {\n      v25 = ((_BYTE)v8 == 0) + 1;\n      if ( (_BYTE)v10 )\n        v25 = (_BYTE)v8 == 0;\n      return ((unsigned __int8)v13 < 1u) + (unsigned int)((unsigned __int8)v12 < 1u) + v25;\n    }\n    if ( v11 < 0 )\n    {\n      v26 = 0;\n      if ( !(_BYTE)v8\n        && ((unsigned __int8)byte_98A1D8[v5] != v4 || dword_7808D0[v5] != v9)\n        && ((unsigned __int8)byte_98A1C3[v5] != v4 || dword_78087C[v5] != v9)\n        && ((unsigned __int8)byte_98A1C5[v5] != v4 || dword_780884[v5] != v9) )\n      {\n        v26 = 1;\n      }\n      if ( !(_BYTE)v10\n        && ((unsigned __int8)byte_98A1AE[v5] != v4 || dword_780828[v5] != v9)\n        && ((unsigned __int8)byte_98A19B[v5] != v4 || dword_7807DC[v5] != v9)\n        && ((unsigned __int8)byte_98A1C3[v5] != v4 || dword_78087C[v5] != v9) )\n      {\n        ++v26;\n      }\n      if ( !(_BYTE)v12\n        && ((unsigned __int8)byte_98A188[v5] != v4 || dword_780790[v5] != v9)\n        && ((unsigned __int8)byte_98A19D[v5] != v4 || dword_7807E4[v5] != v9)\n        && ((unsigned __int8)byte_98A19B[v5] != v4 || dword_7807DC[v5] != v9) )\n      {\n        ++v26;\n      }\n      if ( !(_BYTE)v13\n        && ((unsigned __int8)byte_98A1B2[v5] != v4 || dword_780838[v5] != v9)\n        && ((unsigned __int8)byte_98A1C5[v5] != v4 || dword_780884[v5] != v9)\n        && ((unsigned __int8)byte_98A19D[v5] != v4 || dword_7807E4[v5] != v9) )\n      {\n        ++v26;\n      }\n      return (unsigned int)(v26 + dword_754EBC[186 * v9] - 1);\n    }\n    v18 = 0;\n    if ( (_BYTE)v8\n      || (v36 = (unsigned __int8)byte_98A1D8[v5], v36 == v4) && dword_7808D0[v5] == v9\n      || (v37 = (unsigned __int8)byte_98A1C3[v5], v37 == v4) && dword_78087C[v5] == v9\n      || (v38 = (unsigned __int8)byte_98A1C5[v5], v38 == v4) && dword_780884[v5] == v9\n      || v36 == v4 && dword_7808D0[v5] == v11\n      || v37 == v4 && dword_78087C[v5] == v11\n      || v38 == v4 && dword_780884[v5] == v11 )\n    {\n      if ( (_BYTE)v10 )\n        goto LABEL_38;\n    }\n    else\n    {\n      v18 = 1;\n      if ( (_BYTE)v10 )\n        goto LABEL_38;\n    }\n    v39 = (unsigned __int8)byte_98A1AE[v5];\n    if ( v39 != v4 || dword_780828[v5] != v9 )\n    {\n      v40 = (unsigned __int8)byte_98A19B[v5];\n      if ( v40 != v4 || dword_7807DC[v5] != v9 )\n      {\n        v41 = (unsigned __int8)byte_98A1C3[v5];\n        if ( (v41 != v4 || dword_78087C[v5] != v9)\n          && (v39 != v4 || dword_780828[v5] != v11)\n          && (v40 != v4 || dword_7807DC[v5] != v11)\n          && (v41 != v4 || dword_78087C[v5] != v11) )\n        {\n          ++v18;\n          if ( (_BYTE)v12 )\n            goto LABEL_39;\n          goto LABEL_137;\n        }\n      }\n    }\nLABEL_38:\n    if ( (_BYTE)v12 )\n      goto LABEL_39;\nLABEL_137:\n    v42 = (unsigned __int8)byte_98A188[v5];\n    if ( v42 != v4 || dword_780790[v5] != v9 )\n    {\n      v43 = (unsigned __int8)byte_98A19D[v5];\n      if ( v43 != v4 || dword_7807E4[v5] != v9 )\n      {\n        v44 = (unsigned __int8)byte_98A19B[v5];\n        if ( (v44 != v4 || dword_7807DC[v5] != v9)\n          && (v42 != v4 || dword_780790[v5] != v11)\n          && (v43 != v4 || dword_7807E4[v5] != v11)\n          && (v44 != v4 || dword_7807DC[v5] != v11) )\n        {\n          ++v18;\n          if ( !(_BYTE)v13 )\n          {\nLABEL_150:\n            v45 = (unsigned __int8)byte_98A1B2[v5];\n            if ( v45 != v4 || dword_780838[v5] != v9 )\n            {\n              v46 = (unsigned __int8)byte_98A1C5[v5];\n              if ( v46 != v4 || dword_780884[v5] != v9 )\n              {\n                v47 = (unsigned __int8)byte_98A19D[v5];\n                if ( (v47 != v4 || dword_7807E4[v5] != v9)\n                  && (v45 != v4 || dword_780838[v5] != v11)\n                  && (v46 != v4 || dword_780884[v5] != v11)\n                  && (v47 != v4 || dword_7807E4[v5] != v11) )\n                {\n                  ++v18;\n                }\n              }\n            }\n          }\nLABEL_40:\n          v19 = 186LL * v9;\n          v20 = 186LL * v11;\n          v21 = dword_754EBC[v20];\n          v22 = dword_754EBC[v19] + v18;\n          v23 = sub_408FD0((unsigned int)dword_754EB8[v19], (unsigned int)dword_754EB8[v20]);\n          v24 = v21 + v22 - 1;\n          goto LABEL_109;\n        }\n      }\n    }\nLABEL_39:\n    if ( !(_BYTE)v13 )\n      goto LABEL_150;\n    goto LABEL_40;\n  }\n  v9 = dword_780880[a1];\n  v10 = (unsigned __int8)byte_98A1AF[a1];\n  if ( v10 == a2 && (v11 = dword_78082C[v5], v11 != v9) )\n  {\n    v12 = (unsigned __int8)byte_98A19C[v5];\n    if ( v12 == v4 )\n    {\n      v16 = dword_7807E0[v5];\n      if ( v16 != v9 )\n      {\n        v15 = -1;\n        if ( v16 != v11 )\n          return v15;\n      }\n    }\n  }\n  else\n  {\n    v12 = (unsigned __int8)byte_98A19C[v5];\n    v11 = -1;\n    if ( v12 == v4 )\n    {\n      v11 = -1;\n      if ( dword_7807E0[v5] != v9 )\n        v11 = dword_7807E0[v5];\n    }\n  }\n  v13 = (unsigned __int8)byte_98A1B1[v5];\n  if ( v13 != v4 )\n    goto LABEL_33;\n  v17 = dword_780834[v5];\n  if ( v17 == v9 )\n    goto LABEL_33;\n  if ( v11 >= 0 )\n  {\n    v15 = -1;\n    if ( v17 != v11 )\n      return v15;\n    goto LABEL_33;\n  }\n  v11 = dword_780834[v5];\n  if ( v3 )\n    goto LABEL_34;\nLABEL_79:\n  v27 = 0LL;\n  v15 = 0;\n  do\n  {\n    v28 = dword_5641B0[v27];\n    v29 = (unsigned __int8)byte_98A1B0[v28 + v5];\n    v30 = v5 + v28;\n    if ( !v29\n      && (v9 < 0\n       || ((unsigned __int8)byte_98A1C4[v30] != v4 || dword_780880[v30] != v9)\n       && ((unsigned __int8)byte_98A1AF[v30] != v4 || dword_78082C[v30] != v9)\n       && ((unsigned __int8)byte_98A19C[v30] != v4 || dword_7807E0[v30] != v9)\n       && ((unsigned __int8)byte_98A1B1[v30] != v4 || dword_780834[v30] != v9))\n      && (v11 < 0\n       || ((unsigned __int8)byte_98A1C4[v30] != v4 || dword_780880[v30] != v11)\n       && ((unsigned __int8)byte_98A1AF[v30] != v4 || dword_78082C[v30] != v11)\n       && ((unsigned __int8)byte_98A19C[v30] != v4 || dword_7807E0[v30] != v11)\n       && ((unsigned __int8)byte_98A1B1[v30] != v4 || dword_780834[v30] != v11)) )\n    {\n      goto LABEL_104;\n    }\n    if ( 3 - v4 == v29 )\n    {\n      v31 = dword_780830[v30];\n      if ( dword_754EBC[186 * v31] == 1 )\n      {\n        v32 = dword_754EB4[186 * v31];\n        if ( v32 != 1 && (v32 != 2 || v9 >= 0) )\n          return (unsigned int)-1;\nLABEL_104:\n        ++v15;\n        goto LABEL_105;\n      }\n    }\nLABEL_105:\n    ++v27;\n  }\n  while ( v27 < 4 );\n  if ( v9 >= 0 )\n  {\n    v33 = 186LL * v9;\n    v15 = dword_754EBC[v33] + v15 - 1;\n    if ( v11 >= 0 )\n    {\n      v34 = 186LL * v11;\n      v24 = dword_754EBC[v34] + v15;\n      v23 = sub_408FD0((unsigned int)dword_754EB8[v33], (unsigned int)dword_754EB8[v34]);\nLABEL_109:\n      v15 = v24 - v23;\n    }\n  }\n  return v15;\n}\n", 
            "funcStartAddr": "0x408780L", 
            "funcEndAddr": "0x408fcbL", 
            "funcName": "sub_408780"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_408FD0(signed int a1, signed int a2)\n{\n  int v2; // er14\n  int v3; // er15\n  int v4; // edx\n  int v5; // edx\n  int v6; // edx\n  int v7; // edx\n  __int64 v8; // rax\n  int v9; // edx\n  __int64 v10; // rcx\n  int v11; // esi\n  signed int v12; // ebp\n  int v13; // er12\n  __int64 v14; // rax\n  signed __int64 v15; // r8\n  __int64 v16; // rsi\n  int v17; // edx\n  __int64 v18; // rcx\n  unsigned __int64 v19; // rdi\n  __int64 v20; // r12\n  __int64 v21; // rdi\n  int *v22; // r14\n  __int64 v23; // rcx\n  char v24; // dl\n  signed __int64 v25; // rdi\n  __int64 result; // rax\n  __int64 v27; // rbp\n  __int64 v28; // rcx\n  char *v29; // rbp\n  signed int *v30; // rax\n  __int64 v31; // r12\n  __int64 v32; // rdi\n  __int64 v33; // rbx\n  __int64 v34; // rsi\n  char *v35; // rcx\n  __int64 v36; // rbp\n  __int64 v37; // rbp\n  __int64 v38; // rcx\n  __int64 v39; // [rsp+0h] [rbp-3F8h]\n\n  v2 = a2;\n  v3 = a1;\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v4 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 1914LL, \"ON_BOARD1(str1)\", (unsigned int)(v4 - 1), (unsigned int)(a1 - 20 * v4 - 1));\n  }\n  if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v5 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\"engine/board.c\", 1915LL, \"ON_BOARD1(str2)\", (unsigned int)(v5 - 1), (unsigned int)(a2 - 20 * v5 - 1));\n  }\n  if ( (unsigned __int8)(byte_98A1B0[a1] - 1) >= 2u )\n  {\n    v6 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      1916LL,\n      \"IS_STONE(board[str1])\",\n      (unsigned int)(v6 - 1),\n      (unsigned int)(a1 - 20 * v6 - 1));\n  }\n  if ( (unsigned __int8)(byte_98A1B0[a2] - 1) >= 2u )\n  {\n    v7 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      1917LL,\n      \"IS_STONE(board[str2])\",\n      (unsigned int)(v7 - 1),\n      (unsigned int)(a2 - 20 * v7 - 1));\n  }\n  v8 = dword_780830[a1];\n  v9 = dword_754EBC[186 * v8];\n  v10 = dword_780830[a2];\n  v11 = dword_754EBC[186 * v10];\n  v12 = v2;\n  if ( v9 > v11 )\n    v12 = a1;\n  v13 = dword_754EBC[186 * v8];\n  if ( v9 > v11 )\n    v13 = dword_754EBC[186 * v10];\n  if ( v13 > 20 )\n  {\n    if ( v9 > v11 )\n      v3 = v2;\n    v22 = (int *)&v39;\n    sub_408410(v3, 241, (unsigned __int64)&v39);\n    goto LABEL_28;\n  }\n  if ( v9 <= v11 )\n    LODWORD(v10) = dword_780830[a1];\n  v14 = (signed int)v10;\n  v15 = 186LL * dword_780830[v12];\n  v16 = (unsigned int)dword_754EBC[v15];\n  if ( (signed int)v16 > 20 )\n  {\n    if ( v13 <= 0 )\n      return 0LL;\n    v22 = &dword_754EC0[186 * (signed int)v10];\nLABEL_28:\n    v23 = v12;\n    v24 = byte_98A1B0[v12];\n    v25 = 0LL;\n    result = 0LL;\n    do\n    {\n      v27 = v22[v25];\n      if ( byte_98A1C4[v27] == v24 && dword_780880[v27] == dword_780830[v23]\n        || byte_98A1AF[v27] == v24 && dword_78082C[v27] == dword_780830[v23]\n        || byte_98A19C[v27] == v24 && dword_7807E0[v27] == dword_780830[v23]\n        || byte_98A1B1[v27] == v24 && dword_780834[v27] == dword_780830[v23] )\n      {\n        result = (unsigned int)(result + 1);\n      }\n      ++v25;\n    }\n    while ( v25 < v13 );\n    return result;\n  }\n  v17 = dword_780E70[0]++ + 1;\n  if ( v13 <= 0 )\n    goto LABEL_45;\n  v18 = v13;\n  v19 = v13 - 1LL;\n  v20 = v13 & 3;\n  if ( v19 < 3 )\n  {\n    v21 = 0LL;\n    if ( !v20 )\n      goto LABEL_45;\n    goto LABEL_43;\n  }\n  v28 = v18 - v20;\n  v29 = (char *)&unk_754ECC + 744 * v14;\n  v21 = 0LL;\n  do\n  {\n    dword_780E80[*(signed int *)&v29[4 * v21 - 12]] = v17;\n    dword_780E80[*(signed int *)&v29[4 * v21 - 8]] = v17;\n    dword_780E80[*(signed int *)&v29[4 * v21 - 4]] = v17;\n    dword_780E80[*(signed int *)&v29[4 * v21]] = v17;\n    v21 += 4LL;\n  }\n  while ( v28 != v21 );\n  if ( v20 )\n  {\nLABEL_43:\n    v30 = (signed int *)(744 * v14 + 4 * v21 + 7687872);\n    v31 = -v20;\n    do\n    {\n      dword_780E80[*v30] = v17;\n      ++v30;\n      ++v31;\n    }\n    while ( v31 );\n  }\nLABEL_45:\n  if ( (signed int)v16 <= 0 )\n    return 0LL;\n  v32 = v16 & 1;\n  if ( (_DWORD)v16 == 1 )\n  {\n    v33 = 0LL;\n    result = 0LL;\n    if ( !(v16 & 1) )\n      return result;\n    goto LABEL_59;\n  }\n  v34 = v16 - v32;\n  v35 = (char *)&unk_754EC4 + v15 * 4;\n  v33 = 0LL;\n  result = 0LL;\n  do\n  {\n    v36 = *(signed int *)&v35[4 * v33 - 4];\n    if ( byte_98A1B0[v36] || dword_780E80[v36] == v17 )\n      result = (unsigned int)(result + 1);\n    v37 = *(signed int *)&v35[4 * v33];\n    if ( byte_98A1B0[v37] || dword_780E80[v37] == v17 )\n      result = (unsigned int)(result + 1);\n    v33 += 2LL;\n  }\n  while ( v34 != v33 );\n  if ( v32 )\n  {\nLABEL_59:\n    v38 = dword_754EC0[v33 + v15];\n    if ( byte_98A1B0[v38] || dword_780E80[v38] == v17 )\n      result = (unsigned int)(result + 1);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x408fd0L", 
            "funcEndAddr": "0x4093ceL", 
            "funcName": "sub_408FD0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4093D0(int a1, int a2, signed int a3, _DWORD *a4)\n{\n  _DWORD *v4; // r15\n  signed int v5; // er12\n  int v6; // er14\n  __int64 v7; // r13\n  int v8; // edx\n  int v9; // edx\n  int v10; // er9\n  int v11; // er8\n  __int64 v12; // rsi\n  __int64 result; // rax\n  __int64 v14; // rdi\n  int v15; // edx\n  __int64 v16; // rdi\n  signed __int64 v17; // rbp\n  _DWORD *v18; // rdx\n  signed __int64 v19; // rbx\n  signed __int64 v20; // rbx\n  signed __int64 v21; // rbx\n  signed __int64 v22; // rbx\n  signed __int64 v23; // rcx\n  int v24; // edx\n  int *v25; // r8\n  signed __int64 v26; // rsi\n  int v27; // ebx\n  signed __int64 v28; // rcx\n  int v29; // edx\n  int *v30; // r8\n  signed __int64 v31; // rsi\n  int v32; // ebx\n  signed __int64 v33; // rcx\n  int v34; // edx\n  int *v35; // r8\n  signed __int64 v36; // rsi\n  int v37; // ebx\n  __int64 v38; // rcx\n  int v39; // edi\n  int *v40; // rdx\n  signed __int64 v41; // rsi\n  int v42; // ebx\n\n  v4 = a4;\n  v5 = a3;\n  v6 = a2;\n  v7 = a1;\n  if ( byte_98A1B0[a1] )\n  {\n    v8 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      1595LL,\n      \"board[pos] == EMPTY\",\n      (unsigned int)(v8 - 1),\n      (unsigned int)(a1 - 20 * v8 - 1));\n  }\n  if ( (unsigned int)(a2 - 1) >= 2 )\n  {\n    v9 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 1596LL, \"IS_STONE(color)\", (unsigned int)(v9 - 1), (unsigned int)(a1 - 20 * v9 - 1));\n  }\n  if ( a4 || (result = sub_408780(a1, a2, 1), (signed int)result < 0) )\n  {\n    v10 = dword_780E70[0] + 1;\n    dword_780E70[0] = v10;\n    dword_780E80[a1] = v10;\n    if ( v5 >= 21 )\n    {\n      v11 = dword_781B00++ + 1;\n      v12 = 0LL;\n      result = 0LL;\n      while ( 1 )\n      {\n        v14 = dword_5641B0[v12];\n        v15 = (unsigned __int8)byte_98A1B0[v14 + v7];\n        v16 = v7 + v14;\n        if ( v15 || dword_780E80[v16] == v10 )\n        {\n          if ( v15 == v6 )\n          {\n            v17 = 744LL * dword_780830[v16];\n            if ( *(int *)((char *)dword_755194 + v17) != v11 )\n            {\n              v18 = (int *)((char *)dword_754EB8 + v17);\n              LODWORD(v17) = *(int *)((char *)dword_754EB8 + v17);\n              do\n              {\n                v17 = (signed int)v17;\n                if ( !byte_98A1B0[dword_5641B0[0] + (signed __int64)(signed int)v17] )\n                {\n                  v19 = v17 + dword_5641B0[0];\n                  if ( dword_780E80[v19] != v10 )\n                  {\n                    if ( v4 )\n                      v4[(signed int)result] = v19;\n                    result = (unsigned int)(result + 1);\n                    if ( (_DWORD)result == v5 )\n                      return (unsigned int)v5;\n                    dword_780E80[v19] = v10;\n                  }\n                }\n                if ( !byte_98A1B0[dword_5641B4 + v17] )\n                {\n                  v20 = v17 + dword_5641B4;\n                  if ( dword_780E80[v20] != v10 )\n                  {\n                    if ( v4 )\n                      v4[(signed int)result] = v20;\n                    result = (unsigned int)(result + 1);\n                    if ( (_DWORD)result == v5 )\n                      return (unsigned int)v5;\n                    dword_780E80[v20] = v10;\n                  }\n                }\n                if ( !byte_98A1B0[dword_5641B8 + v17] )\n                {\n                  v21 = v17 + dword_5641B8;\n                  if ( dword_780E80[v21] != v10 )\n                  {\n                    if ( v4 )\n                      v4[(signed int)result] = v21;\n                    result = (unsigned int)(result + 1);\n                    if ( (_DWORD)result == v5 )\n                      return (unsigned int)v5;\n                    dword_780E80[v21] = v10;\n                  }\n                }\n                if ( !byte_98A1B0[dword_5641BC + v17] )\n                {\n                  v22 = v17 + dword_5641BC;\n                  if ( dword_780E80[v22] != v10 )\n                  {\n                    if ( v4 )\n                      v4[(signed int)result] = v22;\n                    result = (unsigned int)(result + 1);\n                    if ( (_DWORD)result == v5 )\n                      return (unsigned int)v5;\n                    dword_780E80[v22] = v10;\n                  }\n                }\n                LODWORD(v17) = dword_7814C0[v17];\n              }\n              while ( (_DWORD)v17 != *v18 );\n              dword_755194[186 * dword_780830[v16]] = v11;\n            }\n          }\n        }\n        else\n        {\n          if ( v4 )\n            v4[(signed int)result] = v16;\n          result = (unsigned int)(result + 1);\n          if ( (_DWORD)result == v5 )\n            return (unsigned int)v5;\n          dword_780E80[v16] = v10;\n        }\n        if ( (unsigned __int64)++v12 >= 4 )\n          return result;\n      }\n    }\n    if ( byte_98A1C4[a1] || dword_780ED0[a1] == v10 )\n    {\n      result = 0LL;\n      if ( (unsigned __int8)byte_98A1C4[a1] == a2 )\n      {\n        v23 = 186LL * dword_780880[a1];\n        v24 = dword_754EBC[v23];\n        if ( v24 > 0 )\n        {\n          v25 = &dword_754EBC[v23];\n          v26 = 0LL;\n          result = 0LL;\n          do\n          {\n            v27 = v25[v26 + 1];\n            if ( !byte_98A1B0[v27] && dword_780E80[v27] != v10 )\n            {\n              if ( v4 )\n                v4[(signed int)result] = v27;\n              result = (unsigned int)(result + 1);\n              if ( (signed int)result >= v5 )\n                return result;\n              dword_780E80[v27] = v10;\n              v24 = *v25;\n            }\n            ++v26;\n          }\n          while ( v26 < v24 );\n        }\n      }\n    }\n    else\n    {\n      if ( v4 )\n        *v4 = a1 + 20;\n      result = 1LL;\n      if ( v5 < 2 )\n        return result;\n      dword_780ED0[a1] = v10;\n      result = 1LL;\n    }\n    if ( byte_98A1AF[a1] || dword_780E7C[a1] == v10 )\n    {\n      if ( (unsigned __int8)byte_98A1AF[a1] == v6 )\n      {\n        v28 = 186LL * dword_78082C[a1];\n        v29 = dword_754EBC[v28];\n        if ( v29 > 0 )\n        {\n          v30 = &dword_754EBC[v28];\n          v31 = 0LL;\n          do\n          {\n            v32 = v30[v31 + 1];\n            if ( !byte_98A1B0[v32] && dword_780E80[v32] != v10 )\n            {\n              if ( v4 )\n                v4[(signed int)result] = v32;\n              result = (unsigned int)(result + 1);\n              if ( (signed int)result >= v5 )\n                return result;\n              dword_780E80[v32] = v10;\n              v29 = *v30;\n            }\n            ++v31;\n          }\n          while ( v31 < v29 );\n        }\n      }\n    }\n    else\n    {\n      if ( v4 )\n        v4[(signed int)result] = a1 - 1;\n      result = (unsigned int)(result + 1);\n      if ( (signed int)result >= v5 )\n        return result;\n      dword_780E7C[a1] = v10;\n    }\n    if ( byte_98A19C[a1] || dword_780E30[a1] == v10 )\n    {\n      if ( (unsigned __int8)byte_98A19C[a1] == v6 )\n      {\n        v33 = 186LL * dword_7807E0[a1];\n        v34 = dword_754EBC[v33];\n        if ( v34 > 0 )\n        {\n          v35 = &dword_754EBC[v33];\n          v36 = 0LL;\n          do\n          {\n            v37 = v35[v36 + 1];\n            if ( !byte_98A1B0[v37] && dword_780E80[v37] != v10 )\n            {\n              if ( v4 )\n                v4[(signed int)result] = v37;\n              result = (unsigned int)(result + 1);\n              if ( (signed int)result >= v5 )\n                return result;\n              dword_780E80[v37] = v10;\n              v34 = *v35;\n            }\n            ++v36;\n          }\n          while ( v36 < v34 );\n        }\n      }\n    }\n    else\n    {\n      if ( v4 )\n        v4[(signed int)result] = a1 - 20;\n      result = (unsigned int)(result + 1);\n      if ( (signed int)result >= v5 )\n        return result;\n      dword_780E30[a1] = v10;\n    }\n    if ( byte_98A1B1[a1] || dword_780E84[a1] == v10 )\n    {\n      if ( (unsigned __int8)byte_98A1B1[a1] == v6 )\n      {\n        v38 = dword_780834[a1];\n        v39 = dword_754EBC[186 * v38];\n        if ( v39 > 0 )\n        {\n          v40 = &dword_754EBC[186 * v38];\n          v41 = 0LL;\n          do\n          {\n            v42 = v40[v41 + 1];\n            if ( !byte_98A1B0[v42] && dword_780E80[v42] != v10 )\n            {\n              if ( v4 )\n                v4[(signed int)result] = v42;\n              result = (unsigned int)(result + 1);\n              if ( (signed int)result >= v5 )\n                return result;\n              dword_780E80[v42] = v10;\n              v39 = *v40;\n            }\n            ++v41;\n          }\n          while ( v41 < v39 );\n        }\n      }\n    }\n    else\n    {\n      if ( v4 )\n        v4[(signed int)result] = a1 + 1;\n      result = (unsigned int)(result + 1);\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4093d0L", 
            "funcEndAddr": "0x4099bfL", 
            "funcName": "sub_4093D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4099C0(int a1, int a2, signed int a3, __int64 a4)\n{\n  __int64 v4; // r15\n  signed int v5; // er14\n  int v6; // er12\n  __int64 v7; // r13\n  int v8; // edx\n  int v9; // edx\n  int v10; // er10\n  int v11; // er11\n  int v12; // er9\n  unsigned __int64 v13; // rdi\n  int v14; // esi\n  __int64 result; // rax\n  __int64 v16; // rbp\n  int v17; // ecx\n  __int64 v18; // rbp\n  signed __int64 v19; // rdx\n  __int64 v20; // rcx\n  int v21; // ebx\n  int v22; // esi\n  int *v23; // rcx\n  signed __int64 v24; // rsi\n  int v25; // er8\n  __int64 v26; // rdx\n  unsigned __int64 v27; // rsi\n  int v28; // ebp\n  unsigned __int64 v29; // rcx\n  int v30; // edi\n  int v31; // [rsp+Ch] [rbp-4Ch]\n  int v32[18]; // [rsp+10h] [rbp-48h]\n\n  v4 = a4;\n  v5 = a3;\n  v6 = a2;\n  v7 = a1;\n  if ( byte_98A1B0[a1] )\n  {\n    v8 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      1745LL,\n      \"board[pos] == EMPTY\",\n      (unsigned int)(v8 - 1),\n      (unsigned int)(a1 - 20 * v8 - 1));\n  }\n  if ( (unsigned int)(a2 - 1) >= 2 )\n  {\n    v9 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 1746LL, \"IS_STONE(color)\", (unsigned int)(v9 - 1), (unsigned int)(a1 - 20 * v9 - 1));\n  }\n  if ( a4 || (result = sub_408780(a1, a2, 0), (signed int)result < 0) )\n  {\n    v10 = dword_781B00++ + 1;\n    v11 = dword_780E70[0] + 1;\n    dword_780E70[0] = v11;\n    dword_780E80[a1] = v11;\n    v12 = 3 - a2;\n    v13 = 0LL;\n    v14 = 0;\n    result = 0LL;\n    do\n    {\n      v16 = dword_5641B0[v13];\n      v17 = (unsigned __int8)byte_98A1B0[v16 + v7];\n      v18 = v7 + v16;\n      if ( v17 || dword_780E80[v18] == v11 )\n      {\n        if ( v17 == v6 && (v19 = 186LL * dword_780830[v18], dword_755194[v19] != v10) )\n        {\n          v21 = dword_754EBC[v19];\n          v31 = v14;\n          if ( v5 >= 20 && v21 >= 21 )\n          {\n            v22 = v18;\n            while ( 1 )\n            {\n              if ( !byte_98A1C4[v22] && dword_780ED0[v22] != v11 )\n              {\n                if ( v4 )\n                  *(_DWORD *)(v4 + 4LL * (signed int)result) = v22 + 20;\n                result = (unsigned int)(result + 1);\n                if ( (signed int)result >= v5 )\n                  return result;\n                dword_780ED0[v22] = v11;\n              }\n              if ( !byte_98A1AF[v22] && dword_780E7C[v22] != v11 )\n              {\n                if ( v4 )\n                  *(_DWORD *)(v4 + 4LL * (signed int)result) = v22 - 1;\n                result = (unsigned int)(result + 1);\n                if ( (signed int)result >= v5 )\n                  return result;\n                dword_780E7C[v22] = v11;\n              }\n              if ( !byte_98A19C[v22] && dword_780E30[v22] != v11 )\n              {\n                if ( v4 )\n                  *(_DWORD *)(v4 + 4LL * (signed int)result) = v22 - 20;\n                result = (unsigned int)(result + 1);\n                if ( (signed int)result >= v5 )\n                  return result;\n                dword_780E30[v22] = v11;\n              }\n              if ( !byte_98A1B1[v22] && dword_780E84[v22] != v11 )\n              {\n                if ( v4 )\n                  *(_DWORD *)(v4 + 4LL * (signed int)result) = v22 + 1;\n                result = (unsigned int)(result + 1);\n                if ( (signed int)result >= v5 )\n                  return result;\n                dword_780E84[v22] = v11;\n              }\n              v22 = dword_7814C0[v22];\n              if ( v22 == (_DWORD)v18 )\n                goto LABEL_56;\n            }\n          }\n          if ( v21 > 0 )\n          {\n            v23 = &dword_754EBC[v19];\n            v24 = 0LL;\n            do\n            {\n              v25 = v23[v24 + 1];\n              if ( !byte_98A1B0[v25] && dword_780E80[v25] != v11 )\n              {\n                if ( v4 )\n                  *(_DWORD *)(v4 + 4LL * (signed int)result) = v25;\n                result = (unsigned int)(result + 1);\n                if ( (signed int)result >= v5 )\n                  return result;\n                dword_780E80[v25] = v11;\n                v21 = *v23;\n              }\n              ++v24;\n            }\n            while ( v24 < v21 );\n          }\nLABEL_56:\n          dword_755194[186 * dword_780830[v18]] = v10;\n          v14 = v31;\n        }\n        else if ( v12 == v17 && dword_754EBC[186 * dword_780830[v18]] == 1 )\n        {\n          v20 = v14++;\n          v32[v20] = v18;\n        }\n      }\n      else\n      {\n        if ( v4 )\n          *(_DWORD *)(v4 + 4LL * (signed int)result) = v18;\n        result = (unsigned int)(result + 1);\n        if ( (signed int)result >= v5 )\n          return result;\n        dword_780E80[v18] = v11;\n      }\n      ++v13;\n    }\n    while ( v13 < 4 );\n    if ( v14 > 0 )\n    {\n      v26 = v14;\n      v27 = 0LL;\n      do\n      {\n        v28 = v32[v27];\n        if ( ((unsigned __int8)byte_98A1C4[v28] != v6 || dword_755194[186 * dword_780880[v28]] != v10)\n          && ((unsigned __int8)byte_98A1AF[v28] != v6 || dword_755194[186 * dword_78082C[v28]] != v10)\n          && ((unsigned __int8)byte_98A19C[v28] != v6 || dword_755194[186 * dword_7807E0[v28]] != v10)\n          && ((unsigned __int8)byte_98A1B1[v28] != v6 || dword_755194[186 * dword_780834[v28]] != v10) )\n        {\n          if ( v4 )\n            *(_DWORD *)(v4 + 4LL * (signed int)result) = v28;\n          result = (unsigned int)(result + 1);\n          if ( (signed int)result >= v5 )\n            break;\n        }\n        if ( v27 )\n        {\n          v29 = 0LL;\n          do\n          {\n            if ( dword_780830[v32[v29]] == dword_780830[v28] )\n              break;\n            ++v29;\n          }\n          while ( v29 < v27 );\n        }\n        else\n        {\n          LODWORD(v29) = 0;\n        }\n        if ( v27 == (unsigned int)v29 )\n        {\n          v30 = v28;\n          do\n          {\n            if ( (unsigned __int8)byte_98A1C4[v30] == v6 && dword_755194[186 * dword_780880[v30]] == v10\n              || (unsigned __int8)byte_98A1AF[v30] == v6 && dword_755194[186 * dword_78082C[v30]] == v10\n              || (unsigned __int8)byte_98A19C[v30] == v6 && dword_755194[186 * dword_7807E0[v30]] == v10\n              || (unsigned __int8)byte_98A1B1[v30] == v6 && dword_755194[186 * dword_780834[v30]] == v10 )\n            {\n              if ( v4 )\n                *(_DWORD *)(v4 + 4LL * (signed int)result) = v30;\n              result = (unsigned int)(result + 1);\n              if ( (signed int)result >= v5 )\n                return result;\n            }\n            v30 = dword_7814C0[v30];\n          }\n          while ( v30 != v28 );\n        }\n        ++v27;\n      }\n      while ( (signed __int64)v27 < v26 );\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4099c0L", 
            "funcEndAddr": "0x409f25L", 
            "funcName": "sub_4099C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_409F30(signed int a1, signed int a2, signed int a3, __int64 a4)\n{\n  signed int v4; // er13\n  int v5; // er15\n  int v6; // er12\n  int v7; // edx\n  int v8; // edx\n  int v9; // edx\n  int v10; // edx\n  int v11; // edx\n  __int64 v12; // rax\n  int v13; // edx\n  __int64 v14; // rcx\n  int v15; // esi\n  signed int v16; // er14\n  int v17; // ebp\n  __int64 v18; // r8\n  signed __int64 v19; // r9\n  __int64 v20; // rcx\n  int v21; // edx\n  __int64 v22; // rdi\n  unsigned __int64 v23; // rsi\n  __int64 v24; // rbp\n  __int64 v25; // rbx\n  int *v26; // r15\n  signed __int64 v27; // rsi\n  __int64 result; // rax\n  int v29; // edi\n  char v30; // bl\n  __int64 v31; // rdi\n  char *v32; // rsi\n  signed int *v33; // rsi\n  __int64 v34; // rbp\n  int *v35; // rsi\n  int v36; // edi\n  __int64 v37; // [rsp+8h] [rbp-400h]\n  char v38; // [rsp+10h] [rbp-3F8h]\n\n  v4 = a3;\n  v5 = a2;\n  v6 = a1;\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v7 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 1981LL, \"ON_BOARD1(str1)\", (unsigned int)(v7 - 1), (unsigned int)(a1 - 20 * v7 - 1));\n  }\n  if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v8 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\"engine/board.c\", 1982LL, \"ON_BOARD1(str2)\", (unsigned int)(v8 - 1), (unsigned int)(a2 - 20 * v8 - 1));\n  }\n  if ( (unsigned __int8)(byte_98A1B0[a1] - 1) >= 2u )\n  {\n    v9 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      1983LL,\n      \"IS_STONE(board[str1])\",\n      (unsigned int)(v9 - 1),\n      (unsigned int)(a1 - 20 * v9 - 1));\n  }\n  if ( (unsigned __int8)(byte_98A1B0[a2] - 1) >= 2u )\n  {\n    v10 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      1984LL,\n      \"IS_STONE(board[str2])\",\n      (unsigned int)(v10 - 1),\n      (unsigned int)(a2 - 20 * v10 - 1));\n  }\n  v37 = a4;\n  if ( !a4 )\n  {\n    v11 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 1985LL, \"libs != NULL\", (unsigned int)(v11 - 1), (unsigned int)(a1 - 20 * v11 - 1));\n  }\n  v12 = dword_780830[a1];\n  v13 = dword_754EBC[186 * v12];\n  v14 = dword_780830[a2];\n  v15 = dword_754EBC[186 * v14];\n  v16 = v5;\n  if ( v13 > v15 )\n    v16 = a1;\n  v17 = dword_754EBC[186 * v12];\n  if ( v13 > v15 )\n    v17 = dword_754EBC[186 * v14];\n  if ( v17 > 20 )\n  {\n    if ( v13 > v15 )\n      v6 = v5;\n    v26 = (int *)&v38;\n    sub_408410(v6, 241, (unsigned __int64)&v38);\n  }\n  else\n  {\n    if ( v13 <= v15 )\n      LODWORD(v14) = dword_780830[a1];\n    v18 = (signed int)v14;\n    v19 = 186LL * dword_780830[v16];\n    v20 = (unsigned int)dword_754EBC[v19];\n    if ( (signed int)v20 <= 20 )\n    {\n      v21 = dword_780E70[0]++ + 1;\n      if ( v17 <= 0 )\n        goto LABEL_49;\n      v22 = v17;\n      v23 = v17 - 1LL;\n      v24 = v17 & 3;\n      if ( v23 >= 3 )\n      {\n        v31 = v22 - v24;\n        v32 = (char *)&unk_754ECC + 744 * v18;\n        v25 = 0LL;\n        do\n        {\n          dword_780E80[*(signed int *)&v32[4 * v25 - 12]] = v21;\n          dword_780E80[*(signed int *)&v32[4 * v25 - 8]] = v21;\n          dword_780E80[*(signed int *)&v32[4 * v25 - 4]] = v21;\n          dword_780E80[*(signed int *)&v32[4 * v25]] = v21;\n          v25 += 4LL;\n        }\n        while ( v31 != v25 );\n        if ( !v24 )\n        {\nLABEL_49:\n          if ( (signed int)v20 > 0 )\n          {\n            v35 = &dword_754EC0[v19];\n            result = 0LL;\n            do\n            {\n              v36 = *v35;\n              if ( byte_98A1B0[*v35] || dword_780E80[v36] == v21 )\n              {\n                if ( (signed int)result < v4 )\n                  *(_DWORD *)(v37 + 4LL * (signed int)result) = v36;\n                result = (unsigned int)(result + 1);\n              }\n              ++v35;\n              --v20;\n            }\n            while ( v20 );\n            return result;\n          }\n          return 0LL;\n        }\n      }\n      else\n      {\n        v25 = 0LL;\n        if ( !v24 )\n          goto LABEL_49;\n      }\n      v33 = (signed int *)(744 * v18 + 4 * v25 + 7687872);\n      v34 = -v24;\n      do\n      {\n        dword_780E80[*v33] = v21;\n        ++v33;\n        ++v34;\n      }\n      while ( v34 );\n      goto LABEL_49;\n    }\n    if ( v17 <= 0 )\n      return 0LL;\n    v26 = &dword_754EC0[186 * v18];\n  }\n  v27 = 0LL;\n  result = 0LL;\n  do\n  {\n    v29 = v26[v27];\n    v30 = byte_98A1B0[v16];\n    if ( byte_98A1C4[v29] == v30 && dword_780880[v29] == dword_780830[v16]\n      || byte_98A1AF[v29] == v30 && dword_78082C[v29] == dword_780830[v16]\n      || byte_98A19C[v29] == v30 && dword_7807E0[v29] == dword_780830[v16]\n      || byte_98A1B1[v29] == v30 && dword_780834[v29] == dword_780830[v16] )\n    {\n      if ( (signed int)result < v4 )\n        *(_DWORD *)(v37 + 4LL * (signed int)result) = v29;\n      result = (unsigned int)(result + 1);\n    }\n    ++v27;\n  }\n  while ( v27 < v17 );\n  return result;\n}\n", 
            "funcStartAddr": "0x409f30L", 
            "funcEndAddr": "0x40a356L", 
            "funcName": "sub_409F30"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_40A360(signed int a1, signed int a2, int *a3)\n{\n  int *v3; // r14\n  int v4; // er15\n  int v5; // er12\n  int v6; // edx\n  int v7; // edx\n  int v8; // edx\n  int v9; // edx\n  __int64 v10; // rcx\n  int v11; // edx\n  __int64 v12; // rax\n  int v13; // esi\n  signed int v14; // er13\n  int v15; // ebp\n  int *v16; // r15\n  char v17; // cl\n  __int64 v18; // rsi\n  int v19; // edi\n  signed __int64 result; // rax\n  __int64 v21; // [rsp+0h] [rbp-3F8h]\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a1;\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v6 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 2049LL, \"ON_BOARD1(str1)\", (unsigned int)(v6 - 1), (unsigned int)(a1 - 20 * v6 - 1));\n  }\n  if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v7 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\"engine/board.c\", 2050LL, \"ON_BOARD1(str2)\", (unsigned int)(v7 - 1), (unsigned int)(a2 - 20 * v7 - 1));\n  }\n  if ( (unsigned __int8)(byte_98A1B0[a1] - 1) >= 2u )\n  {\n    v8 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      2051LL,\n      \"IS_STONE(board[str1])\",\n      (unsigned int)(v8 - 1),\n      (unsigned int)(a1 - 20 * v8 - 1));\n  }\n  if ( (unsigned __int8)(byte_98A1B0[a2] - 1) >= 2u )\n  {\n    v9 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      2052LL,\n      \"IS_STONE(board[str2])\",\n      (unsigned int)(v9 - 1),\n      (unsigned int)(a2 - 20 * v9 - 1));\n  }\n  v10 = dword_780830[a1];\n  v11 = dword_754EBC[186 * v10];\n  v12 = dword_780830[a2];\n  v13 = dword_754EBC[186 * v12];\n  v14 = v4;\n  if ( v11 > v13 )\n    v14 = a1;\n  v15 = dword_754EBC[186 * v10];\n  if ( v11 > v13 )\n    v15 = dword_754EBC[186 * v12];\n  if ( v15 >= 21 )\n  {\n    if ( v11 > v13 )\n      v5 = v4;\n    v16 = (int *)&v21;\n    sub_408410(v5, 241, (unsigned __int64)&v21);\n  }\n  else\n  {\n    if ( v11 <= v13 )\n      LODWORD(v12) = v10;\n    if ( v15 <= 0 )\n      return 0LL;\n    v16 = &dword_754EC0[186 * (signed int)v12];\n  }\n  v17 = byte_98A1B0[v14];\n  v18 = 0LL;\n  while ( 1 )\n  {\n    v19 = v16[v18];\n    if ( byte_98A1C4[v19] == v17 && dword_780880[v19] == dword_780830[v14] )\n      break;\n    if ( byte_98A1AF[v19] == v17 && dword_78082C[v19] == dword_780830[v14]\n      || byte_98A19C[v19] == v17 && dword_7807E0[v19] == dword_780830[v14]\n      || byte_98A1B1[v19] == v17 && dword_780834[v19] == dword_780830[v14] )\n    {\n      break;\n    }\n    if ( ++v18 >= v15 )\n      return 0LL;\n  }\n  result = 1LL;\n  if ( v3 )\n    *v3 = v19;\n  return result;\n}\n", 
            "funcStartAddr": "0x40a360L", 
            "funcEndAddr": "0x40a5e3L", 
            "funcName": "sub_40A360"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40A5F0(signed int a1)\n{\n  char v1; // al\n  int v2; // edx\n  int v3; // edx\n\n  if ( (unsigned int)a1 > 0x1A4 || (v1 = byte_98A1B0[a1], v1 == 3) )\n  {\n    v2 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 2093LL, \"ON_BOARD1(str)\", (unsigned int)(v2 - 1), (unsigned int)(a1 - 20 * v2 - 1));\n  }\n  if ( (unsigned __int8)(v1 - 1) >= 2u )\n  {\n    v3 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      2094LL,\n      \"IS_STONE(board[str])\",\n      (unsigned int)(v3 - 1),\n      (unsigned int)(a1 - 20 * v3 - 1));\n  }\n  return (unsigned int)dword_754EB4[186 * dword_780830[a1]];\n}\n", 
            "funcStartAddr": "0x40a5f0L", 
            "funcEndAddr": "0x40a6b4L", 
            "funcName": "sub_40A5F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40A6C0(signed int a1, int a2, __int64 a3)\n{\n  __int64 v3; // rbx\n  int v4; // er14\n  char v5; // al\n  int v6; // edx\n  int v7; // edx\n  signed __int64 v8; // rdx\n  __int64 result; // rax\n  int *v10; // rdi\n  signed __int64 v11; // rsi\n  __int64 v12; // rdi\n  bool v13; // sf\n  unsigned __int8 v14; // of\n\n  v3 = a3;\n  v4 = a2;\n  if ( (unsigned int)a1 > 0x1A4 || (v5 = byte_98A1B0[a1], v5 == 3) )\n  {\n    v6 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 2113LL, \"ON_BOARD1(str)\", (unsigned int)(v6 - 1), (unsigned int)(-20 * v6 + a1 - 1));\n  }\n  if ( (unsigned __int8)(v5 - 1) >= 2u )\n  {\n    v7 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      2114LL,\n      \"IS_STONE(board[str])\",\n      (unsigned int)(v7 - 1),\n      (unsigned int)(-20 * v7 + a1 - 1));\n  }\n  v8 = 186LL * dword_780830[a1];\n  result = (unsigned int)dword_754EB4[v8];\n  if ( a2 > 0 && (signed int)result > 0 )\n  {\n    v10 = &dword_754EB8[v8];\n    v11 = 1LL;\n    do\n    {\n      v12 = *v10;\n      *(_DWORD *)(v3 + 4 * v11 - 4) = v12;\n      if ( v11 >= v4 )\n        break;\n      v10 = &dword_7814C0[v12];\n      v14 = __OFSUB__(v11, (signed int)result);\n      v13 = v11++ - (signed int)result < 0;\n    }\n    while ( v13 ^ v14 );\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x40a6c0L", 
            "funcEndAddr": "0x40a7c8L", 
            "funcName": "sub_40A6C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40A7D0(int a1, __int64 a2)\n{\n  int v2; // edx\n  signed __int64 v3; // rcx\n  __int64 result; // rax\n  int *v5; // rcx\n  __int64 v6; // rdx\n\n  if ( (unsigned __int8)(byte_98A1B0[a1] - 1) >= 2u )\n  {\n    v2 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      2140LL,\n      \"IS_STONE(board[str])\",\n      (unsigned int)(v2 - 1),\n      (unsigned int)(a1 - 20 * v2 - 1));\n  }\n  v3 = 186LL * dword_780830[a1];\n  result = (unsigned int)dword_754F10[v3];\n  if ( (signed int)result > 0 )\n  {\n    v5 = &dword_754F10[v3];\n    v6 = 0LL;\n    do\n    {\n      *(_DWORD *)(a2 + 4 * v6) = dword_754EB8[186 * v5[v6 + 1]];\n      ++v6;\n      result = *v5;\n    }\n    while ( v6 < result );\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x40a7d0L", 
            "funcEndAddr": "0x40a879L", 
            "funcName": "sub_40A7D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40A880(int a1, __int64 a2, int a3)\n{\n  int v3; // ebx\n  __int64 v4; // r14\n  int v5; // edx\n  signed __int64 v6; // rax\n  int v7; // esi\n  int *v8; // rcx\n  signed __int64 v9; // rdx\n  __int64 result; // rax\n  signed __int64 v11; // rdi\n  int v12; // esi\n  __int64 v13; // rdi\n\n  v3 = a3;\n  v4 = a2;\n  if ( (unsigned __int8)(byte_98A1B0[a1] - 1) >= 2u )\n  {\n    v5 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      2165LL,\n      \"IS_STONE(board[str])\",\n      (unsigned int)(v5 - 1),\n      (unsigned int)(a1 - 20 * v5 - 1));\n  }\n  v6 = 186LL * dword_780830[a1];\n  v7 = dword_754F10[v6];\n  if ( v7 <= 0 )\n    return 0LL;\n  v8 = &dword_754F10[v6];\n  v9 = 0LL;\n  result = 0LL;\n  do\n  {\n    v11 = 186LL * v8[v9 + 1];\n    if ( dword_754EBC[v11] == v3 )\n    {\n      v12 = dword_754EB8[v11];\n      v13 = (signed int)result;\n      result = (unsigned int)(result + 1);\n      *(_DWORD *)(v4 + 4 * v13) = v12;\n      v7 = *v8;\n    }\n    ++v9;\n  }\n  while ( v9 < v7 );\n  return result;\n}\n", 
            "funcStartAddr": "0x40a880L", 
            "funcEndAddr": "0x40a93cL", 
            "funcName": "sub_40A880"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40AA00(int a1, __int64 a2, int a3)\n{\n  int v3; // er15\n  __int64 v4; // r14\n  __int64 v5; // r13\n  int v6; // edx\n  int v7; // eax\n  signed __int64 v8; // rcx\n  int *v9; // rcx\n  signed __int64 v10; // rbx\n  __int64 v11; // rdx\n  __int64 *v12; // r12\n  unsigned int v13; // eax\n  int v14; // er8\n  __int64 v15; // r9\n  __int64 v16; // r10\n  int v17; // ebp\n  int v18; // esi\n  int v19; // edi\n  signed __int64 v20; // rax\n  __int64 v21; // rax\n  int v22; // ebp\n  signed __int64 v23; // rax\n  __int64 v24; // rax\n  int v25; // ebp\n  signed __int64 v26; // rax\n  __int64 v27; // rax\n  int v28; // ebp\n  signed __int64 v29; // rax\n  __int64 v30; // rax\n  __int64 v32; // [rsp+0h] [rbp-3F8h]\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a1;\n  if ( (unsigned __int8)(byte_98A1B0[a1] - 1) >= 2u )\n  {\n    v6 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      2227LL,\n      \"IS_STONE(board[str])\",\n      (unsigned int)(v6 - 1),\n      (unsigned int)(-20 * v6 + a1 - 1));\n  }\n  v7 = dword_781B00++ + 1;\n  v8 = 186LL * dword_780830[a1];\n  if ( dword_754F10[v8] <= 0 )\n  {\n    LODWORD(v10) = 0;\n  }\n  else\n  {\n    v9 = &dword_754F10[v8];\n    v10 = 0LL;\n    do\n    {\n      v11 = dword_754EB8[186 * v9[v10 + 1]];\n      *(_DWORD *)(a2 + 4 * v10) = v11;\n      dword_755194[186 * dword_780830[v11]] = v7;\n      ++v10;\n    }\n    while ( v10 < *v9 );\n  }\n  v12 = &v32;\n  v13 = sub_408410(a1, 241, (unsigned __int64)&v32);\n  if ( (signed int)v13 > 0 )\n  {\n    v14 = dword_781B00;\n    v15 = v13;\n    do\n    {\n      v16 = *(signed int *)v12;\n      v17 = (unsigned __int8)byte_98A1B0[dword_5641B0[0] + v16];\n      v18 = (unsigned __int8)byte_98A1B0[v5];\n      v19 = 3 - v18;\n      if ( 3 - v18 == v17 || (_BYTE)v17 == (_BYTE)v18 && v3 != 0 )\n      {\n        v20 = 186LL * dword_780830[v16 + dword_5641B0[0]];\n        if ( dword_755194[v20] != v14 )\n        {\n          v21 = dword_754EB8[v20];\n          v10 = (signed int)v10;\n          *(_DWORD *)(v4 + 4 * v10) = v21;\n          dword_755194[186 * dword_780830[v21]] = v14;\n          LODWORD(v10) = v10 + 1;\n          v18 = (unsigned __int8)byte_98A1B0[v5];\n          v19 = 3 - v18;\n        }\n      }\n      v22 = (unsigned __int8)byte_98A1B0[dword_5641B4 + v16];\n      if ( v19 == v22 || (_BYTE)v22 == (_BYTE)v18 && v3 != 0 )\n      {\n        v23 = 186LL * dword_780830[v16 + dword_5641B4];\n        if ( dword_755194[v23] != v14 )\n        {\n          v24 = dword_754EB8[v23];\n          v10 = (signed int)v10;\n          *(_DWORD *)(v4 + 4 * v10) = v24;\n          dword_755194[186 * dword_780830[v24]] = v14;\n          LODWORD(v10) = v10 + 1;\n          v18 = (unsigned __int8)byte_98A1B0[v5];\n          v19 = 3 - v18;\n        }\n      }\n      v25 = (unsigned __int8)byte_98A1B0[dword_5641B8 + v16];\n      if ( v19 == v25 || (_BYTE)v25 == (_BYTE)v18 && v3 != 0 )\n      {\n        v26 = 186LL * dword_780830[v16 + dword_5641B8];\n        if ( dword_755194[v26] != v14 )\n        {\n          v27 = dword_754EB8[v26];\n          v10 = (signed int)v10;\n          *(_DWORD *)(v4 + 4 * v10) = v27;\n          dword_755194[186 * dword_780830[v27]] = v14;\n          LODWORD(v10) = v10 + 1;\n          v18 = (unsigned __int8)byte_98A1B0[v5];\n          v19 = 3 - v18;\n        }\n      }\n      v28 = (unsigned __int8)byte_98A1B0[dword_5641BC + v16];\n      if ( v19 == v28 || (_BYTE)v28 == (_BYTE)v18 && v3 != 0 )\n      {\n        v29 = 186LL * dword_780830[v16 + dword_5641BC];\n        if ( dword_755194[v29] != v14 )\n        {\n          v30 = dword_754EB8[v29];\n          v10 = (signed int)v10;\n          *(_DWORD *)(v4 + 4 * v10) = v30;\n          dword_755194[186 * dword_780830[v30]] = v14;\n          LODWORD(v10) = v10 + 1;\n        }\n      }\n      v12 = (__int64 *)((char *)v12 + 4);\n      --v15;\n    }\n    while ( v15 );\n  }\n  return (unsigned int)v10;\n}\n", 
            "funcStartAddr": "0x40aa00L", 
            "funcEndAddr": "0x40acfaL", 
            "funcName": "sub_40AA00"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40AD00(int a1)\n{\n  int v1; // edx\n\n  if ( (unsigned __int8)(byte_98A1B0[a1] - 1) >= 2u )\n  {\n    v1 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      2270LL,\n      \"IS_STONE(board[str])\",\n      (unsigned int)(v1 - 1),\n      (unsigned int)(a1 - 20 * v1 - 1));\n  }\n  return (unsigned int)dword_754EB8[186 * dword_780830[a1]];\n}\n", 
            "funcStartAddr": "0x40ad00L", 
            "funcEndAddr": "0x40ad66L", 
            "funcName": "sub_40AD00"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_40AD70(signed int a1, int a2)\n{\n  int v2; // er15\n  int v3; // er14\n  __int64 v4; // rbx\n  char v5; // al\n  int v6; // edx\n  int v7; // edx\n  int v8; // edx\n  int v9; // ebp\n  int v10; // edi\n  int v11; // eax\n  signed __int64 v12; // rcx\n  _BOOL8 result; // rax\n  int v14; // edx\n  signed int v15; // ecx\n  signed int v16; // er8\n  signed __int64 v17; // rax\n  int v18; // eax\n  signed __int64 v19; // rsi\n  signed __int64 v20; // rax\n  int v21; // eax\n  signed __int64 v22; // rsi\n  signed __int64 v23; // rax\n  int v24; // eax\n  signed __int64 v25; // rsi\n  signed __int64 v26; // rax\n\n  v2 = a2;\n  v3 = a1;\n  v4 = a1;\n  if ( (unsigned int)a1 > 0x1A4 || (v5 = byte_98A1B0[a1], v5 == 3) )\n  {\n    v6 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 2294LL, \"ON_BOARD1(pos)\", (unsigned int)(v6 - 1), (unsigned int)(a1 - 20 * v6 - 1));\n  }\n  if ( v5 )\n  {\n    v7 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      2295LL,\n      \"board[pos] == EMPTY\",\n      (unsigned int)(v7 - 1),\n      (unsigned int)(a1 - 20 * v7 - 1));\n  }\n  if ( (unsigned int)(a2 - 1) >= 2 )\n  {\n    v8 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 2296LL, \"IS_STONE(color)\", (unsigned int)(v8 - 1), (unsigned int)(a1 - 20 * v8 - 1));\n  }\n  v9 = 3 - a2;\n  v10 = dword_781B00++ + 1;\n  v11 = (unsigned __int8)byte_98A1C4[v4];\n  if ( !byte_98A1C4[v4] )\n  {\n    v16 = 0;\n    v15 = 1;\nLABEL_17:\n    v14 = 0;\n    goto LABEL_18;\n  }\n  if ( v11 != a2 )\n  {\n    v15 = 0;\n    if ( v9 == v11 && (v17 = 186LL * dword_780880[v4], dword_754EBC[v17] == 1) && dword_755194[v17] != v10 )\n    {\n      dword_755194[v17] = v10;\n      v16 = 1;\n    }\n    else\n    {\n      v16 = 0;\n    }\n    goto LABEL_17;\n  }\n  v12 = 186LL * dword_780880[v4];\n  result = 0LL;\n  if ( dword_754EBC[v12] > 2 )\n    return result;\n  v14 = dword_754EBC[v12] == 2;\n  v15 = 0;\n  v16 = 0;\nLABEL_18:\n  v18 = (unsigned __int8)byte_98A1AF[v4];\n  if ( byte_98A1AF[v4] )\n  {\n    if ( v18 == a2 )\n    {\n      v19 = 186LL * dword_78082C[v4];\n      result = 0LL;\n      if ( dword_754EBC[v19] > 2 )\n        return result;\n      v14 += dword_754EBC[v19] == 2;\n    }\n    else if ( v9 == v18 )\n    {\n      v20 = 186LL * dword_78082C[v4];\n      if ( dword_754EBC[v20] == 1 && dword_755194[v20] != v10 )\n      {\n        ++v16;\n        dword_755194[v20] = v10;\n      }\n    }\n  }\n  else\n  {\n    ++v15;\n  }\n  v21 = (unsigned __int8)byte_98A19C[v4];\n  if ( byte_98A19C[v4] )\n  {\n    if ( v21 == v2 )\n    {\n      v22 = 186LL * dword_7807E0[v4];\n      result = 0LL;\n      if ( dword_754EBC[v22] > 2 )\n        return result;\n      v14 += dword_754EBC[v22] == 2;\n    }\n    else if ( v9 == v21 )\n    {\n      v23 = 186LL * dword_7807E0[v4];\n      if ( dword_754EBC[v23] == 1 && dword_755194[v23] != v10 )\n      {\n        ++v16;\n        dword_755194[v23] = v10;\n      }\n    }\n  }\n  else\n  {\n    ++v15;\n  }\n  v24 = (unsigned __int8)byte_98A1B1[v4];\n  if ( byte_98A1B1[v4] )\n  {\n    if ( v24 == v2 )\n    {\n      v25 = 186LL * dword_780834[v4];\n      result = 0LL;\n      if ( dword_754EBC[v25] > 2 )\n        return result;\n      v14 += dword_754EBC[v25] == 2;\n    }\n    else if ( v9 == v24 )\n    {\n      v26 = 186LL * dword_780834[v4];\n      if ( dword_754EBC[v26] == 1 )\n        v16 += dword_755194[v26] != v10;\n    }\n  }\n  else\n  {\n    ++v15;\n  }\n  result = 0LL;\n  if ( v16 + v15 <= 1 && v16 + (v14 > 0) <= 1 )\n  {\n    if ( v16 || (result = 1LL, v15 + v14 >= 2) )\n      result = (signed int)sub_4099C0(v3, v2, 2, 0LL) < 2;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x40ad70L", 
            "funcEndAddr": "0x40b099L", 
            "funcName": "sub_40AD70"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_40B0A0(signed int a1, signed int a2)\n{\n  int v2; // edx\n  int v3; // edx\n  _BOOL8 result; // rax\n  char v5; // bl\n\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v2 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 2381LL, \"ON_BOARD1(pos)\", (unsigned int)(v2 - 1), (unsigned int)(a1 - 20 * v2 - 1));\n  }\n  if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v3 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\"engine/board.c\", 2382LL, \"ON_BOARD1(str)\", (unsigned int)(v3 - 1), (unsigned int)(a2 - 20 * v3 - 1));\n  }\n  result = 0LL;\n  if ( (unsigned __int8)(byte_98A1B0[a1] - 1) >= 2u )\n  {\n    v5 = byte_98A1B0[a2];\n    if ( byte_98A1C4[a1] != v5 || (result = 1LL, dword_780880[a1] != dword_780830[a2]) )\n    {\n      if ( byte_98A1AF[a1] != v5 || (result = 1LL, dword_78082C[a1] != dword_780830[a2]) )\n      {\n        if ( byte_98A19C[a1] != v5 || (result = 1LL, dword_7807E0[a1] != dword_780830[a2]) )\n        {\n          result = 0LL;\n          if ( byte_98A1B1[a1] == v5 )\n            result = dword_780834[a1] == dword_780830[a2];\n        }\n      }\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x40b0a0L", 
            "funcEndAddr": "0x40b1f5L", 
            "funcName": "sub_40B0A0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_40B200(signed int a1, signed int a2)\n{\n  int v2; // edx\n  int v3; // edx\n  __int64 v4; // rax\n  __int64 v5; // rdx\n  __int64 v6; // rdx\n  char v7; // bl\n\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v2 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 2397LL, \"ON_BOARD1(pos)\", (unsigned int)(v2 - 1), (unsigned int)(a1 - 20 * v2 - 1));\n  }\n  if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v3 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\"engine/board.c\", 2398LL, \"ON_BOARD1(str)\", (unsigned int)(v3 - 1), (unsigned int)(a2 - 20 * v3 - 1));\n  }\n  v4 = 0LL;\n  while ( 1 )\n  {\n    v5 = dword_5641B0[v4];\n    if ( !byte_98A1B0[v5 + a1] )\n    {\n      v6 = a1 + v5;\n      v7 = byte_98A1B0[a2];\n      if ( byte_98A1C4[v6] == v7 && dword_780880[v6] == dword_780830[a2] )\n        break;\n      if ( byte_98A1AF[v6] == v7 && dword_78082C[v6] == dword_780830[a2]\n        || byte_98A19C[v6] == v7 && dword_7807E0[v6] == dword_780830[a2]\n        || byte_98A1B1[v6] == v7 && dword_780834[v6] == dword_780830[a2] )\n      {\n        break;\n      }\n    }\n    if ( (unsigned __int64)++v4 >= 4 )\n      return 0LL;\n  }\n  return 1LL;\n}\n", 
            "funcStartAddr": "0x40b200L", 
            "funcEndAddr": "0x40b373L", 
            "funcName": "sub_40B200"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_40B380(signed int a1, int a2)\n{\n  char v2; // bp\n  int v3; // edx\n  int v4; // edx\n  _BOOL8 result; // rax\n\n  v2 = byte_98A1B0[a2];\n  if ( (unsigned __int8)(v2 - 1) >= 2u )\n  {\n    v3 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\"engine/board.c\", 2418LL, \"IS_STONE(color)\", (unsigned int)(v3 - 1), (unsigned int)(a2 - 20 * v3 - 1));\n  }\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v4 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 2419LL, \"ON_BOARD1(pos)\", (unsigned int)(v4 - 1), (unsigned int)(a1 - 20 * v4 - 1));\n  }\n  if ( byte_98A1C4[a1] != v2 || (result = 1LL, dword_780880[a1] != dword_780830[a2]) )\n  {\n    if ( byte_98A1AF[a1] != v2 || (result = 1LL, dword_78082C[a1] != dword_780830[a2]) )\n    {\n      if ( byte_98A19C[a1] != v2 || (result = 1LL, dword_7807E0[a1] != dword_780830[a2]) )\n      {\n        result = 0LL;\n        if ( byte_98A1B1[a1] == v2 )\n          result = dword_780834[a1] == dword_780830[a2];\n      }\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x40b380L", 
            "funcEndAddr": "0x40b4b1L", 
            "funcName": "sub_40B380"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_40B4C0(signed int a1, int a2)\n{\n  int v2; // edx\n  int v3; // edx\n  _BOOL8 result; // rax\n\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v2 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 2431LL, \"ON_BOARD1(pos)\", (unsigned int)(v2 - 1), (unsigned int)(a1 - 20 * v2 - 1));\n  }\n  if ( (unsigned int)(a2 - 1) >= 2 )\n  {\n    v3 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 2432LL, \"IS_STONE(color)\", (unsigned int)(v3 - 1), (unsigned int)(a1 - 20 * v3 - 1));\n  }\n  result = 1LL;\n  if ( (unsigned __int8)byte_98A1C4[a1] != a2\n    && (unsigned __int8)byte_98A1AF[a1] != a2\n    && (unsigned __int8)byte_98A19C[a1] != a2 )\n  {\n    result = (unsigned __int8)byte_98A1B1[a1] == a2;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x40b4c0L", 
            "funcEndAddr": "0x40b5adL", 
            "funcName": "sub_40B4C0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_40B5B0(signed int a1, signed int a2)\n{\n  int v2; // edx\n  int v3; // edx\n  int v4; // edx\n  int v5; // edx\n\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v2 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 2447LL, \"ON_BOARD1(str1)\", (unsigned int)(v2 - 1), (unsigned int)(a1 - 20 * v2 - 1));\n  }\n  if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v3 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\"engine/board.c\", 2448LL, \"ON_BOARD1(str2)\", (unsigned int)(v3 - 1), (unsigned int)(a2 - 20 * v3 - 1));\n  }\n  if ( (unsigned __int8)(byte_98A1B0[a1] - 1) >= 2u )\n  {\n    v4 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      2449LL,\n      \"IS_STONE(board[str1])\",\n      (unsigned int)(v4 - 1),\n      (unsigned int)(a1 - 20 * v4 - 1));\n  }\n  if ( (unsigned __int8)(byte_98A1B0[a2] - 1) >= 2u )\n  {\n    v5 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      2450LL,\n      \"IS_STONE(board[str2])\",\n      (unsigned int)(v5 - 1),\n      (unsigned int)(a2 - 20 * v5 - 1));\n  }\n  return dword_780830[a1] == dword_780830[a2];\n}\n", 
            "funcStartAddr": "0x40b5b0L", 
            "funcEndAddr": "0x40b71eL", 
            "funcName": "sub_40B5B0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_40B720(signed int a1, signed int a2)\n{\n  signed int v2; // er14\n  int v3; // edx\n  int v4; // edx\n  int v5; // edx\n  int v6; // edx\n  signed __int64 v7; // rdx\n  __int64 v8; // rax\n  int *v9; // rdx\n  __int64 v10; // rsi\n\n  v2 = a2;\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v3 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 2466LL, \"ON_BOARD1(str1)\", (unsigned int)(v3 - 1), (unsigned int)(a1 - 20 * v3 - 1));\n  }\n  if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v4 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\"engine/board.c\", 2467LL, \"ON_BOARD1(str2)\", (unsigned int)(v4 - 1), (unsigned int)(a2 - 20 * v4 - 1));\n  }\n  if ( (unsigned __int8)(byte_98A1B0[a1] - 1) >= 2u )\n  {\n    v5 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      2468LL,\n      \"IS_STONE(board[str1])\",\n      (unsigned int)(v5 - 1),\n      (unsigned int)(a1 - 20 * v5 - 1));\n  }\n  if ( (unsigned __int8)(byte_98A1B0[a2] - 1) >= 2u )\n  {\n    v6 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      2469LL,\n      \"IS_STONE(board[str2])\",\n      (unsigned int)(v6 - 1),\n      (unsigned int)(a2 - 20 * v6 - 1));\n  }\n  v7 = 186LL * dword_780830[a1];\n  v8 = dword_754F10[v7];\n  if ( v8 <= 0 )\n    return 0LL;\n  v9 = &dword_754F14[v7];\n  v10 = 0LL;\n  while ( v9[v10] != dword_780830[v2] )\n  {\n    if ( ++v10 >= v8 )\n      return 0LL;\n  }\n  return 1LL;\n}\n", 
            "funcStartAddr": "0x40b720L", 
            "funcEndAddr": "0x40b8cdL", 
            "funcName": "sub_40B720"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_40B8D0(signed int a1)\n{\n  char v1; // al\n  int v2; // edx\n  signed __int64 v3; // rax\n  int v4; // esi\n  unsigned __int8 v5; // al\n  int v6; // ecx\n  signed __int64 result; // rax\n\n  if ( (unsigned int)a1 > 0x1A4 || (v1 = byte_98A1B0[a1], v1 == 3) )\n  {\n    v2 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/board.c\", 2563LL, \"ON_BOARD1(pos)\", (unsigned int)(v2 - 1), (unsigned int)(a1 - 20 * v2 - 1));\n  }\n  if ( v1 )\n  {\n    v3 = 186LL * dword_780830[a1];\n    if ( dword_754EBC[v3] == 1 && dword_754EB4[v3] == 1 )\n    {\n      a1 = dword_754EC0[v3];\n      v4 = 3 - dword_754EB0[v3];\n      goto LABEL_12;\n    }\n  }\n  else\n  {\n    v5 = byte_98A1C4[a1];\n    if ( v5 == 3 )\n      v5 = byte_98A19C[a1];\n    if ( (unsigned __int8)(v5 - 1) <= 1u )\n    {\n      v4 = 3 - v5;\nLABEL_12:\n      v6 = sub_408130(a1, v4, 0LL);\n      result = 1LL;\n      if ( v6 )\n        return result;\n      return 0LL;\n    }\n  }\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x40b8d0L", 
            "funcEndAddr": "0x40b9afL", 
            "funcName": "sub_40B8D0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_40B9B0(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // edx\n  signed __int64 result; // rax\n\n  v2 = 3 - a2;\n  if ( byte_98A1B0[a1] )\n  {\n    v3 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      2592LL,\n      \"board[pos] == EMPTY\",\n      (unsigned int)(v3 - 1),\n      (unsigned int)(a1 - 20 * v3 - 1));\n  }\n  if ( v2 != (unsigned __int8)byte_98A1C4[a1] || (result = 1LL, dword_754EBC[186 * dword_780880[a1]] != 1) )\n  {\n    if ( v2 != (unsigned __int8)byte_98A1AF[a1] || (result = 1LL, dword_754EBC[186 * dword_78082C[a1]] != 1) )\n    {\n      if ( v2 != (unsigned __int8)byte_98A19C[a1] || (result = 1LL, dword_754EBC[186 * dword_7807E0[a1]] != 1) )\n      {\n        if ( v2 != (unsigned __int8)byte_98A1B1[a1] || (result = 1LL, dword_754EBC[186 * dword_780834[a1]] != 1) )\n          result = 0LL;\n      }\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x40b9b0L", 
            "funcEndAddr": "0x40baaeL", 
            "funcName": "sub_40B9B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40BAB0(int a1, __int64 a2, char a3)\n{\n  int v3; // edx\n  __int64 result; // rax\n\n  if ( (unsigned __int8)(byte_98A1B0[a1] - 1) >= 2u )\n  {\n    v3 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/board.c\",\n      2621LL,\n      \"IS_STONE(board[str])\",\n      (unsigned int)(v3 - 1),\n      (unsigned int)(-20 * v3 + a1 - 1));\n  }\n  LODWORD(result) = a1;\n  do\n  {\n    result = (signed int)result;\n    *(_BYTE *)(a2 + result) = a3;\n    result = (unsigned int)dword_7814C0[(signed int)result];\n  }\n  while ( (_DWORD)result != a1 );\n  return result;\n}\n", 
            "funcStartAddr": "0x40bab0L", 
            "funcEndAddr": "0x40bb26L", 
            "funcName": "sub_40BAB0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40BB60(int a1, _DWORD *a2, _DWORD *a3)\n{\n  __int64 result; // rax\n\n  if ( dword_98A7F4 <= a1 )\n    sub_4340E0(\"engine/board.c\", 2649LL, \"k < stackp\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  *a2 = dword_754900[a1];\n  result = (unsigned int)dword_754350[a1];\n  *a3 = result;\n  return result;\n}\n", 
            "funcStartAddr": "0x40bb60L", 
            "funcEndAddr": "0x40bbaeL", 
            "funcName": "sub_40BB60"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40BBB0(int a1)\n{\n  int v1; // ecx\n  int v2; // eax\n  signed __int64 v3; // rsi\n  char v4; // dl\n  char v5; // dl\n\n  if ( dword_98A7F4 )\n    sub_4340E0(\"engine/board.c\", 2666LL, \"stackp == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  if ( dword_5641D0 != dword_98A7F0 )\n  {\n    dword_781B04 = 0;\n    dword_781B08 = 0;\n    v2 = 0;\n    v3 = -378LL;\n    v1 = 0;\n    while ( 1 )\n    {\n      while ( 1 )\n      {\n        v4 = byte_98A33F[v3];\n        if ( v4 == 2 )\n        {\n          dword_781B08 = ++v1;\n          if ( !v3 )\n            goto LABEL_17;\n        }\n        else\n        {\n          if ( v4 == 1 )\n            dword_781B04 = ++v2;\n          if ( !v3 )\n          {\nLABEL_17:\n            dword_5641D0 = dword_98A7F0;\n            return (v1 & (a1 << 30 >> 31)) + (v2 & -(a1 & 1));\n          }\n        }\n        v5 = byte_98A340[v3];\n        if ( v5 != 1 )\n          break;\n        dword_781B04 = ++v2;\nLABEL_6:\n        v3 += 2LL;\n      }\n      if ( v5 != 2 )\n        goto LABEL_6;\n      dword_781B08 = ++v1;\n      v3 += 2LL;\n    }\n  }\n  v1 = dword_781B08;\n  v2 = dword_781B04;\n  return (v1 & (a1 << 30 >> 31)) + (v2 & -(a1 & 1));\n}\n", 
            "funcStartAddr": "0x40bbb0L", 
            "funcEndAddr": "0x40bca8L", 
            "funcName": "sub_40BBB0"
        }, 
        {
            "decompiledFuncCode": "void sub_40BCB0()\n{\n  dword_781B0C = 0;\n}\n", 
            "funcStartAddr": "0x40bcb0L", 
            "funcEndAddr": "0x40bcbbL", 
            "funcName": "sub_40BCB0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_40BCC0()\n{\n  return (unsigned int)dword_781B0C;\n}\n", 
            "funcStartAddr": "0x40bcc0L", 
            "funcEndAddr": "0x40bcc7L", 
            "funcName": "sub_40BCC0"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_40BCD0(int a1, int a2, int a3, _DWORD *a4, _DWORD *a5, _DWORD *a6, _DWORD *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11)\n{\n  int v11; // er13\n  __int64 v12; // r14\n  unsigned __int8 v13; // bl\n  unsigned __int8 v14; // bl\n  unsigned __int8 v15; // bl\n  unsigned __int8 v16; // bl\n  __int64 v17; // rax\n  signed __int64 v18; // rax\n  __int64 v19; // rax\n  signed __int64 v20; // rax\n  __int64 v21; // rax\n  signed __int64 v22; // rax\n  __int64 v23; // rax\n  signed __int64 v24; // rax\n  signed __int64 v25; // rax\n  int v26; // edi\n  int v27; // ebp\n  int *v28; // rbx\n  signed __int64 v29; // rax\n  __int64 v30; // rdi\n  signed __int64 v31; // rax\n  int v32; // edi\n  int v33; // ebp\n  int *v34; // rbx\n  signed __int64 v35; // rax\n  signed __int64 v36; // rdi\n  signed __int64 v37; // rax\n  int v38; // edi\n  int v39; // ebp\n  int *v40; // rbx\n  signed __int64 v41; // rax\n  signed __int64 v42; // rdi\n  signed __int64 v43; // rcx\n  int v44; // eax\n  int v45; // eax\n  int *v46; // rcx\n  signed __int64 v47; // rdx\n  signed __int64 v48; // rsi\n\n  v11 = dword_781B00++ + 1;\n  v12 = a1;\n  v13 = byte_98A1C4[a1];\n  if ( v13 )\n  {\n    if ( v13 == 3 )\n    {\n      ++*a4;\n    }\n    else\n    {\n      v17 = dword_780880[a1];\n      if ( dword_780830[a3] == (_DWORD)v17 )\n      {\n        ++*a5;\n        v13 = byte_98A1C4[a1];\n      }\n      if ( v13 == a2 )\n      {\n        ++*a6;\n        v18 = 186 * v17;\n        if ( dword_754EBC[v18] == 1 )\n          *a10 += dword_754EB4[v18];\n      }\n      else\n      {\n        ++*a7;\n        v25 = 186 * v17;\n        v26 = dword_754EBC[v25];\n        if ( v26 == 2 )\n        {\n          if ( dword_755194[186 * dword_780880[v12]] != v11 )\n          {\n            *a9 += dword_754EB4[v25];\n            dword_755194[186 * dword_780880[v12]] = v11;\n          }\n        }\n        else if ( v26 == 1 )\n        {\n          *a8 += dword_754EB4[v25];\n          v27 = dword_754F10[v25];\n          if ( v27 > 0 )\n          {\n            v28 = &dword_754F10[v25];\n            v29 = 0LL;\n            do\n            {\n              v30 = v28[v29 + 1];\n              if ( dword_754EBC[186 * v30] == 1 )\n              {\n                *a10 += dword_754EB4[186 * v30];\n                v27 = *v28;\n              }\n              ++v29;\n            }\n            while ( v29 < v27 );\n          }\n        }\n      }\n    }\n  }\n  else\n  {\n    ++*a11;\n  }\n  v14 = byte_98A1AF[v12];\n  if ( v14 )\n  {\n    if ( v14 == 3 )\n    {\n      ++*a4;\n    }\n    else\n    {\n      v19 = dword_78082C[v12];\n      if ( dword_780830[a3] == (_DWORD)v19 )\n      {\n        ++*a5;\n        v14 = byte_98A1AF[v12];\n      }\n      if ( v14 == a2 )\n      {\n        ++*a6;\n        v20 = 186 * v19;\n        if ( dword_754EBC[v20] == 1 )\n          *a10 += dword_754EB4[v20];\n      }\n      else\n      {\n        ++*a7;\n        v31 = 186 * v19;\n        v32 = dword_754EBC[v31];\n        if ( v32 == 2 )\n        {\n          if ( dword_755194[186 * dword_78082C[v12]] != v11 )\n          {\n            *a9 += dword_754EB4[v31];\n            dword_755194[186 * dword_78082C[v12]] = v11;\n          }\n        }\n        else if ( v32 == 1 )\n        {\n          *a8 += dword_754EB4[v31];\n          v33 = dword_754F10[v31];\n          if ( v33 > 0 )\n          {\n            v34 = &dword_754F10[v31];\n            v35 = 0LL;\n            do\n            {\n              v36 = 186LL * v34[v35 + 1];\n              if ( dword_754EBC[v36] == 1 )\n              {\n                *a10 += dword_754EB4[v36];\n                v33 = *v34;\n              }\n              ++v35;\n            }\n            while ( v35 < v33 );\n          }\n        }\n      }\n    }\n  }\n  else\n  {\n    ++*a11;\n  }\n  v15 = byte_98A19C[v12];\n  if ( v15 )\n  {\n    if ( v15 == 3 )\n    {\n      ++*a4;\n    }\n    else\n    {\n      v21 = dword_7807E0[v12];\n      if ( dword_780830[a3] == (_DWORD)v21 )\n      {\n        ++*a5;\n        v15 = byte_98A19C[v12];\n      }\n      if ( v15 == a2 )\n      {\n        ++*a6;\n        v22 = 186 * v21;\n        if ( dword_754EBC[v22] == 1 )\n          *a10 += dword_754EB4[v22];\n      }\n      else\n      {\n        ++*a7;\n        v37 = 186 * v21;\n        v38 = dword_754EBC[v37];\n        if ( v38 == 2 )\n        {\n          if ( dword_755194[186 * dword_7807E0[v12]] != v11 )\n          {\n            *a9 += dword_754EB4[v37];\n            dword_755194[186 * dword_7807E0[v12]] = v11;\n          }\n        }\n        else if ( v38 == 1 )\n        {\n          *a8 += dword_754EB4[v37];\n          v39 = dword_754F10[v37];\n          if ( v39 > 0 )\n          {\n            v40 = &dword_754F10[v37];\n            v41 = 0LL;\n            do\n            {\n              v42 = 186LL * v40[v41 + 1];\n              if ( dword_754EBC[v42] == 1 )\n              {\n                *a10 += dword_754EB4[v42];\n                v39 = *v40;\n              }\n              ++v41;\n            }\n            while ( v41 < v39 );\n          }\n        }\n      }\n    }\n  }\n  else\n  {\n    ++*a11;\n  }\n  v16 = byte_98A1B1[v12];\n  if ( v16 )\n  {\n    if ( v16 == 3 )\n    {\n      ++*a4;\n    }\n    else\n    {\n      v23 = dword_780834[v12];\n      if ( dword_780830[a3] == (_DWORD)v23 )\n      {\n        ++*a5;\n        v16 = byte_98A1B1[v12];\n      }\n      if ( v16 == a2 )\n      {\n        ++*a6;\n        v24 = 186 * v23;\n        if ( dword_754EBC[v24] == 1 )\n          *a10 += dword_754EB4[v24];\n      }\n      else\n      {\n        ++*a7;\n        v43 = 186 * v23;\n        v44 = dword_754EBC[186 * v23];\n        if ( v44 == 2 )\n        {\n          if ( dword_755194[186 * dword_780834[v12]] != v11 )\n          {\n            *a9 += dword_754EB4[v43];\n            dword_755194[186 * dword_780834[v12]] = v11;\n          }\n        }\n        else if ( v44 == 1 )\n        {\n          *a8 += dword_754EB4[v43];\n          v45 = dword_754F10[v43];\n          if ( v45 > 0 )\n          {\n            v46 = &dword_754F10[v43];\n            v47 = 0LL;\n            do\n            {\n              v48 = 186LL * v46[v47 + 1];\n              if ( dword_754EBC[v48] == 1 )\n              {\n                *a10 += dword_754EB4[v48];\n                v45 = *v46;\n              }\n              ++v47;\n            }\n            while ( v47 < v45 );\n          }\n        }\n      }\n    }\n  }\n  else\n  {\n    ++*a11;\n  }\n}\n", 
            "funcStartAddr": "0x40bcd0L", 
            "funcEndAddr": "0x40c1d1L", 
            "funcName": "sub_40BCD0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_40C1E0(__int64 a1, unsigned int a2)\n{\n  int v2; // er15\n  signed __int64 v3; // r14\n  int v4; // ebx\n  signed __int64 v5; // r13\n  signed __int64 v6; // rsi\n  signed __int64 v7; // rbp\n  __int64 v8; // r13\n  __int64 v9; // rax\n  int v10; // ecx\n  unsigned int v11; // ebx\n  signed __int64 v12; // rdx\n  signed __int64 v13; // rsi\n  int v14; // er12\n  int v15; // er14\n  int v16; // eax\n  __int64 v17; // r10\n  signed __int64 v18; // r8\n  __int64 v19; // rdi\n  signed __int64 v20; // rax\n  signed __int64 v21; // r11\n  __int64 v22; // r9\n  signed __int64 v23; // rcx\n  int v24; // eax\n  int v25; // ecx\n  signed __int64 result; // rax\n  __int64 v27; // rdi\n  signed __int64 v28; // rbp\n  __int64 v29; // r9\n  int v30; // eax\n  __int64 v31; // rcx\n  __int64 v32; // rdi\n  signed __int64 v33; // rax\n  signed __int64 v34; // rcx\n  signed __int64 v35; // rbx\n  int v36; // ebp\n  int v37; // ST30_4\n  unsigned int v38; // er12\n  __int64 v39; // rdi\n  signed __int64 v40; // rbp\n  __int64 v41; // r9\n  int v42; // eax\n  __int64 v43; // rcx\n  __int64 v44; // rdi\n  signed __int64 v45; // rax\n  signed __int64 v46; // rcx\n  signed __int64 v47; // rbx\n  int v48; // ebp\n  int v49; // ST30_4\n  unsigned int v50; // er12\n  __int64 v51; // rdi\n  signed __int64 v52; // rbp\n  __int64 v53; // r9\n  int v54; // eax\n  __int64 v55; // rcx\n  __int64 v56; // rdi\n  signed __int64 v57; // rax\n  signed __int64 v58; // rcx\n  signed __int64 v59; // rbx\n  int v60; // ebp\n  unsigned int v61; // er15\n  int v62; // eax\n  __int64 v63; // rbp\n  int v64; // er14\n  signed __int64 v65; // r8\n  int v66; // edx\n  signed __int64 v67; // rcx\n  int *v68; // r9\n  int v69; // er12\n  int v70; // eax\n  signed __int64 v71; // rdi\n  signed __int64 v72; // r10\n  signed __int64 v73; // rbx\n  __int64 v74; // rax\n  int *v75; // rbx\n  __int64 v76; // rax\n  signed __int64 v77; // rbp\n  int v78; // edx\n  int v79; // er15\n  signed __int64 v80; // r12\n  int *v81; // r8\n  int v82; // ecx\n  int v83; // er14\n  int v84; // eax\n  int v85; // edx\n  signed __int64 v86; // rcx\n  int v87; // edi\n  signed __int64 v88; // rbp\n  __int64 v89; // rax\n  __int64 v90; // rax\n  signed __int64 v91; // rdi\n  int v92; // edi\n  signed __int64 v93; // rbp\n  __int64 v94; // rax\n  __int64 v95; // rax\n  signed __int64 v96; // rdi\n  int v97; // edi\n  signed __int64 v98; // rdx\n  __int64 v99; // rax\n  __int64 v100; // rax\n  signed __int64 v101; // rdx\n  signed __int64 v102; // rbx\n  int *v103; // rdx\n  __int64 v104; // rdi\n  signed __int64 v105; // rbx\n  __int64 v106; // rdx\n  int v107; // eax\n  int v108; // eax\n  signed __int64 v109; // rcx\n  __int64 v110; // rdx\n  int v111; // ecx\n  int v112; // eax\n  signed __int64 v113; // r14\n  int v114; // esi\n  signed __int64 v115; // rdx\n  int v116; // eax\n  char v117; // ST18_1\n  __int64 v118; // rcx\n  __int64 v119; // rsi\n  signed __int64 v120; // rdx\n  __int64 v121; // rsi\n  signed __int64 v122; // rcx\n  int v123; // ecx\n  int v124; // eax\n  int v125; // esi\n  signed __int64 v126; // rdx\n  int v127; // eax\n  int *v128; // r14\n  __int64 v129; // rcx\n  __int64 v130; // rsi\n  signed __int64 v131; // rdx\n  __int64 v132; // rsi\n  signed __int64 v133; // rcx\n  int v134; // edx\n  signed __int64 v135; // rcx\n  __int64 v136; // rax\n  __int64 v137; // rdx\n  signed __int64 v138; // rcx\n  __int64 v139; // rdx\n  signed __int64 v140; // rax\n  __int64 v141; // r9\n  int v142; // er14\n  signed __int64 v143; // r12\n  __int64 v144; // rcx\n  __int64 v145; // rdx\n  unsigned __int64 v146; // rsi\n  signed __int64 v147; // rax\n  int v148; // ecx\n  signed __int64 v149; // rcx\n  int v150; // er15\n  signed __int64 v151; // rbx\n  signed int v152; // er8\n  __int64 v153; // rsi\n  signed __int64 v154; // rdx\n  int v155; // ecx\n  __int64 v156; // rdx\n  __int64 v157; // rsi\n  __int64 v158; // rax\n  char *v159; // rbp\n  signed int *v160; // rax\n  __int64 v161; // rsi\n  int v162; // er9\n  int *v163; // r10\n  signed __int64 v164; // rax\n  __int64 v165; // rdi\n  int v166; // ebp\n  __int64 v167; // rdx\n  signed __int64 v168; // rax\n  signed __int64 v169; // rax\n  __int64 v170; // rdx\n  __int64 v171; // rdi\n  int v172; // ebp\n  __int64 v173; // rdi\n  signed __int64 v174; // rax\n  signed __int64 v175; // rax\n  __int64 v176; // rdx\n  __int64 v177; // rdi\n  int v178; // ebp\n  __int64 v179; // rdi\n  signed __int64 v180; // rax\n  __int64 v181; // rcx\n  __int64 v182; // rdx\n  int v183; // edi\n  __int64 v184; // rdx\n  signed __int64 v185; // rax\n  unsigned int v186; // [rsp+0h] [rbp-78h]\n  int *v187; // [rsp+0h] [rbp-78h]\n  __int64 v188; // [rsp+8h] [rbp-70h]\n  signed __int64 v189; // [rsp+10h] [rbp-68h]\n  signed __int64 v190; // [rsp+18h] [rbp-60h]\n  signed __int64 v191; // [rsp+20h] [rbp-58h]\n  signed __int64 v192; // [rsp+28h] [rbp-50h]\n  int v193; // [rsp+3Ch] [rbp-3Ch]\n  char *v194; // [rsp+40h] [rbp-38h]\n\n  v188 = a1;\n  v186 = a2;\n  v2 = 3 - a2;\n  v3 = (signed int)a1 - 1LL;\n  v4 = 0;\n  if ( 3 - a2 == (unsigned __int8)byte_98A1C4[(signed int)a1] && dword_754EBC[186 * dword_780880[(signed int)a1]] == 1 )\n    v4 = ((__int64 (*)(void))sub_40D9E0)();\n  v5 = (signed int)a1 - 20LL;\n  if ( v2 == (unsigned __int8)byte_98A1B0[v3] && dword_754EBC[186 * dword_78082C[(signed int)a1]] == 1 )\n    v4 += ((__int64 (*)(void))sub_40D9E0)();\n  v6 = (signed int)a1 + 1LL;\n  v189 = (signed int)a1 + 1LL;\n  if ( v2 == (unsigned __int8)byte_98A1B0[v5] && dword_754EBC[186 * dword_7807E0[(signed int)a1]] == 1 )\n  {\n    v6 = (signed int)a1 + 1LL;\n    v4 += ((__int64 (*)(void))sub_40D9E0)();\n  }\n  if ( v2 == (unsigned __int8)byte_98A1B0[v6] && dword_754EBC[186 * dword_780834[(signed int)a1]] == 1 )\n  {\n    v6 = (signed int)a1 + 1LL;\n    v4 += ((__int64 (*)(void))sub_40D9E0)();\n  }\n  v7 = (signed int)a1 + 20LL;\n  if ( !v4 )\n  {\n    v24 = (unsigned __int8)byte_98A1B0[v7];\n    if ( byte_98A1B0[v7] )\n    {\n      if ( v24 != v186 || dword_754EBC[186 * dword_780880[(signed int)a1]] <= 1 )\n      {\n        v25 = (unsigned __int8)byte_98A1B0[v3];\n        if ( byte_98A1B0[v3]\n          && (v25 != v186 || dword_754EBC[186 * dword_78082C[(signed int)a1]] <= 1)\n          && byte_98A1B0[v5]\n          && ((unsigned __int8)byte_98A1B0[v5] != v186 || dword_754EBC[186 * dword_7807E0[(signed int)a1]] <= 1)\n          && byte_98A1B0[v6]\n          && ((unsigned __int8)byte_98A1B0[v6] != v186 || dword_754EBC[186 * dword_780834[(signed int)a1]] <= 1) )\n        {\n          if ( v24 == v186 )\n          {\n            sub_40D9E0((unsigned int)dword_780880[(signed int)a1]);\n            v6 = (signed int)a1 + 1LL;\n            LOBYTE(v25) = byte_98A1B0[v3];\n          }\n          if ( (unsigned __int8)v25 == v186 )\n          {\n            sub_40D9E0((unsigned int)dword_78082C[(signed int)a1]);\n            v6 = (signed int)a1 + 1LL;\n          }\n          if ( (unsigned __int8)byte_98A1B0[v5] == v186 )\n          {\n            sub_40D9E0((unsigned int)dword_7807E0[(signed int)a1]);\n            v6 = (signed int)a1 + 1LL;\n          }\n          result = (unsigned __int8)byte_98A1B0[v6];\n          if ( (_DWORD)result == v186 )\n            result = sub_40D9E0((unsigned int)dword_780834[(signed int)a1]);\n          return result;\n        }\n      }\n    }\n  }\n  v193 = v4;\n  v190 = (signed int)a1 - 1LL;\n  v192 = (signed int)a1 - 20LL;\n  v8 = (signed int)a1;\n  v9 = qword_781B18;\n  v194 = &byte_98A1B0[(signed int)a1];\n  *(_QWORD *)qword_781B18 = &byte_98A1B0[(signed int)a1];\n  v10 = (unsigned __int8)byte_98A1B0[(signed int)a1];\n  qword_781B18 = v9 + 16;\n  *(_DWORD *)(v9 + 8) = v10;\n  v11 = v186;\n  byte_98A1B0[(signed int)a1] = v186;\n  v191 = (signed int)a1 + 20LL;\n  sub_419CC0(&qword_98A740, (unsigned int)a1, v186);\n  v13 = v191;\n  v14 = dword_781B00;\n  v15 = dword_781B00++ + 1;\n  v16 = (unsigned __int8)byte_98A1B0[v191];\n  if ( v16 == v186 )\n  {\n    v17 = dword_780880[(signed int)a1];\n    if ( dword_755194[186 * v17] != v15 )\n    {\n      dword_755194[186 * v17] = v15;\n      v18 = 1LL;\n      goto LABEL_41;\n    }\n  }\n  v18 = 0LL;\n  LODWORD(v17) = -1;\n  if ( v2 != v16 )\n  {\nLABEL_41:\n    v21 = (signed int)a1 + 1LL;\n    v22 = a1;\n    goto LABEL_49;\n  }\n  v19 = dword_780880[(signed int)a1];\n  v20 = 186 * v19;\n  v21 = v189;\n  v22 = v188;\n  if ( dword_755194[186 * v19] != v15 )\n  {\n    v23 = dword_754EBC[v20];\n    if ( v23 < 21 )\n    {\n      if ( (signed int)v23 > 0 )\n      {\n        v12 = (signed __int64)&dword_754EBC[v20];\n        v27 = 0LL;\n        v28 = 0LL;\n        while ( *(_DWORD *)(v12 + 4 * v28 + 4) != (_DWORD)v188 )\n        {\n          ++v28;\n          ++v27;\n          if ( v28 >= v23 )\n            goto LABEL_48;\n        }\n        v29 = qword_781B10;\n        *(_QWORD *)qword_781B10 = v20 * 4 + 4 * v23 + 7687868;\n        *(_DWORD *)(v29 + 8) = dword_754EBC[v23 + v20];\n        v11 = v186;\n        v18 = 0LL;\n        *(_QWORD *)(v29 + 16) = &dword_754EC0[v20 + v27];\n        *(_DWORD *)(v29 + 24) = dword_754EC0[v28 + v20];\n        *(_QWORD *)(v29 + 32) = v12;\n        qword_781B10 = v29 + 48;\n        *(_DWORD *)(v29 + 40) = v23;\n        v22 = v188;\n        dword_754EC0[v28 + v20] = dword_754EBC[v23 + v20];\n        *(_DWORD *)v12 = v23 - 1;\n      }\n    }\n    else\n    {\n      sub_40DBF0(v19, v191, v12, v23, 0LL, v188);\n      v18 = 0LL;\n      v22 = v188;\n      LODWORD(v17) = -1;\n      v13 = v191;\n      v21 = v189;\n    }\nLABEL_48:\n    dword_755194[186 * dword_780880[v8]] = v15;\n  }\nLABEL_49:\n  v30 = (unsigned __int8)byte_98A1B0[v190];\n  if ( v30 == v11 && (v31 = dword_78082C[v8], v12 = 744 * v31, dword_755194[186 * v31] != v15) )\n  {\n    v18 = (unsigned int)(v18 + 1);\n    *(int *)((char *)dword_755194 + v12) = v15;\n    LODWORD(v17) = v31;\n  }\n  else if ( v2 == v30 )\n  {\n    v32 = dword_78082C[v8];\n    v33 = 186 * v32;\n    if ( dword_755194[186 * v32] != v15 )\n    {\n      v34 = dword_754EBC[v33];\n      if ( v34 < 21 )\n      {\n        if ( (signed int)v34 > 0 )\n        {\n          v12 = (signed __int64)&dword_754EBC[v33];\n          v39 = 0LL;\n          v40 = 0LL;\n          while ( *(_DWORD *)(v12 + 4 * v40 + 4) != (_DWORD)v22 )\n          {\n            ++v40;\n            ++v39;\n            if ( v40 >= v34 )\n              goto LABEL_62;\n          }\n          v41 = qword_781B10;\n          *(_QWORD *)qword_781B10 = v33 * 4 + 4 * v34 + 7687868;\n          *(_DWORD *)(v41 + 8) = dword_754EBC[v34 + v33];\n          v11 = v186;\n          v18 = (unsigned int)v18;\n          *(_QWORD *)(v41 + 16) = &dword_754EC0[v33 + v39];\n          *(_DWORD *)(v41 + 24) = dword_754EC0[v40 + v33];\n          *(_QWORD *)(v41 + 32) = v12;\n          qword_781B10 = v41 + 48;\n          *(_DWORD *)(v41 + 40) = v34;\n          v22 = v188;\n          dword_754EC0[v40 + v33] = dword_754EBC[v34 + v33];\n          *(_DWORD *)v12 = v34 - 1;\n        }\n      }\n      else\n      {\n        v35 = v21;\n        v36 = v17;\n        v37 = v14;\n        v38 = v18;\n        sub_40DBF0(v32, v13, v12, v34, v18, v22);\n        v18 = v38;\n        v14 = v37;\n        v22 = v188;\n        LODWORD(v17) = v36;\n        v13 = v191;\n        v21 = v35;\n        v11 = v186;\n      }\nLABEL_62:\n      dword_755194[186 * dword_78082C[v8]] = v15;\n    }\n  }\n  v42 = (unsigned __int8)byte_98A1B0[v192];\n  if ( v42 == v11 && (v43 = dword_7807E0[v8], v12 = 744 * v43, dword_755194[186 * v43] != v15) )\n  {\n    v18 = (unsigned int)(v18 + 1);\n    *(int *)((char *)dword_755194 + v12) = v15;\n    LODWORD(v17) = v43;\n  }\n  else if ( v2 == v42 )\n  {\n    v44 = dword_7807E0[v8];\n    v45 = 186 * v44;\n    if ( dword_755194[186 * v44] != v15 )\n    {\n      v46 = dword_754EBC[v45];\n      if ( v46 < 21 )\n      {\n        if ( (signed int)v46 > 0 )\n        {\n          v12 = (signed __int64)&dword_754EBC[v45];\n          v51 = 0LL;\n          v52 = 0LL;\n          while ( *(_DWORD *)(v12 + 4 * v52 + 4) != (_DWORD)v22 )\n          {\n            ++v52;\n            ++v51;\n            if ( v52 >= v46 )\n              goto LABEL_76;\n          }\n          v53 = qword_781B10;\n          *(_QWORD *)qword_781B10 = v45 * 4 + 4 * v46 + 7687868;\n          *(_DWORD *)(v53 + 8) = dword_754EBC[v46 + v45];\n          v11 = v186;\n          v18 = (unsigned int)v18;\n          *(_QWORD *)(v53 + 16) = &dword_754EC0[v45 + v51];\n          *(_DWORD *)(v53 + 24) = dword_754EC0[v52 + v45];\n          *(_QWORD *)(v53 + 32) = v12;\n          qword_781B10 = v53 + 48;\n          *(_DWORD *)(v53 + 40) = v46;\n          v22 = v188;\n          dword_754EC0[v52 + v45] = dword_754EBC[v46 + v45];\n          *(_DWORD *)v12 = v46 - 1;\n        }\n      }\n      else\n      {\n        v47 = v21;\n        v48 = v17;\n        v49 = v14;\n        v50 = v18;\n        sub_40DBF0(v44, v13, v12, v46, v18, v22);\n        v18 = v50;\n        v14 = v49;\n        v22 = v188;\n        LODWORD(v17) = v48;\n        v13 = v191;\n        v21 = v47;\n        v11 = v186;\n      }\nLABEL_76:\n      dword_755194[186 * dword_7807E0[v8]] = v15;\n    }\n  }\n  v54 = (unsigned __int8)byte_98A1B0[v21];\n  if ( v54 == v11 && (v55 = dword_780834[v8], v12 = 744 * v55, dword_755194[186 * v55] != v15) )\n  {\n    v18 = (unsigned int)(v18 + 1);\n    LODWORD(v17) = dword_780834[v8];\n  }\n  else if ( v2 == v54 )\n  {\n    v56 = dword_780834[v8];\n    v57 = 186 * v56;\n    if ( dword_755194[186 * v56] != v15 )\n    {\n      v58 = dword_754EBC[v57];\n      if ( v58 >= 21 )\n      {\n        v59 = v21;\n        v60 = v17;\n        v61 = v18;\n        sub_40DBF0(v56, v13, v12, v58, v18, v22);\n        v18 = v61;\n        v22 = v188;\n        LODWORD(v17) = v60;\n        v13 = v191;\n        v21 = v59;\n        if ( v61 == 1 )\n          goto LABEL_170;\nLABEL_86:\n        if ( (_DWORD)v18 )\n        {\n          LODWORD(v75) = (unsigned __int8)*v194;\n          v76 = qword_781B10;\n          *(_QWORD *)qword_781B10 = &dword_781B20;\n          v77 = dword_781B20;\n          qword_781B10 = v76 + 16;\n          *(_DWORD *)(v76 + 8) = dword_781B20;\n          dword_781B20 = v77 + 1;\n          if ( v77 >= 240 )\n          {\n            v78 = (1717986919 * v8 >> 35) + ((unsigned __int64)(1717986919 * v8) >> 63);\n            sub_4340E0(\n              \"engine/board.c\",\n              3296LL,\n              \"s < (2 * 19 * 19 / 3)\",\n              (unsigned int)(v78 - 1),\n              (unsigned int)(v22 - 20 * v78 - 1));\n          }\n          v79 = 3 - (_DWORD)v75;\n          dword_780830[v8] = v77;\n          dword_7814C0[v8] = v22;\n          v80 = 186 * v77;\n          dword_754EB0[v80] = (signed int)v75;\n          dword_754EB4[v80] = 1;\n          dword_754EB8[v80] = v22;\n          v81 = &dword_754EBC[186 * v77];\n          dword_754EBC[v80] = 0;\n          v82 = dword_780E70[0]++ + 1;\n          dword_754F10[v80] = 0;\n          v83 = v15 + 1;\n          dword_781B00 = v83;\n          dword_755194[v80] = v83;\n          v84 = (unsigned __int8)byte_98A1B0[v13];\n          if ( byte_98A1B0[v13] || dword_780ED0[v8] == v82 )\n          {\n            if ( v79 == v84 && (v85 = dword_780880[v8], v86 = 186LL * v85, dword_755194[v86] != v83) )\n            {\n              v81[21] = 1;\n              dword_754F14[v80] = v85;\n              v106 = qword_781B10;\n              *(_QWORD *)qword_781B10 = &dword_754F10[v86];\n              v107 = dword_754F10[v86];\n              qword_781B10 = v106 + 16;\n              *(_DWORD *)(v106 + 8) = v107;\n              v108 = dword_780830[v8];\n              v109 = 186LL * dword_780880[v8];\n              v110 = dword_754F10[v109];\n              dword_754F10[v109] = v110 + 1;\n              dword_754F14[v110 + v109] = v108;\n              dword_755194[v109] = v83;\n            }\n            else if ( (_BYTE)v84 == (_BYTE)v75 && dword_755194[186 * dword_780880[v8]] != v83 )\n            {\n              sub_40DDB0((unsigned int)v77);\n              v81 = &dword_754EBC[186 * v77];\n            }\n          }\n          else\n          {\n            dword_754EC0[v80] = v13;\n            *v81 = 1;\n            dword_780ED0[v8] = v82;\n          }\n          v111 = (unsigned __int8)byte_98A1B0[v190];\n          if ( byte_98A1B0[v190] || (v112 = dword_780E70[0], dword_780E7C[v8] == dword_780E70[0]) )\n          {\n            v113 = v192;\n            if ( v79 == v111\n              && (v114 = dword_78082C[v8], v115 = 186LL * v114, v116 = dword_781B00, dword_755194[v115] != dword_781B00) )\n            {\n              v118 = v81[21];\n              v81[21] = v118 + 1;\n              dword_754F14[v118 + v80] = v114;\n              v119 = qword_781B10;\n              *(_QWORD *)qword_781B10 = &dword_754F10[v115];\n              LODWORD(v118) = dword_754F10[v115];\n              qword_781B10 = v119 + 16;\n              *(_DWORD *)(v119 + 8) = v118;\n              LODWORD(v118) = dword_780830[v8];\n              v120 = 186LL * dword_78082C[v8];\n              v121 = dword_754F10[v120];\n              dword_754F10[v120] = v121 + 1;\n              dword_754F14[v121 + v120] = v118;\n              dword_755194[v120] = v116;\n            }\n            else if ( (_BYTE)v111 == (_BYTE)v75 && dword_755194[186 * dword_78082C[v8]] != dword_781B00 )\n            {\n              v117 = (char)v75;\n              v75 = v81;\n              sub_40DDB0((unsigned int)v77);\n              v81 = v75;\n              LOBYTE(v75) = v117;\n            }\n          }\n          else\n          {\n            v122 = *v81;\n            v113 = v192;\n            if ( v122 <= 19 )\n            {\n              dword_754EC0[v122 + v80] = v190;\n              LODWORD(v122) = *v81;\n            }\n            *v81 = v122 + 1;\n            dword_780E7C[v8] = v112;\n          }\n          v123 = (unsigned __int8)byte_98A1B0[v113];\n          if ( byte_98A1B0[v113] || (v124 = dword_780E70[0], dword_780E30[v8] == dword_780E70[0]) )\n          {\n            if ( v79 == v123\n              && (v125 = dword_7807E0[v8], v126 = 186LL * v125, v127 = dword_781B00, dword_755194[v126] != dword_781B00) )\n            {\n              v129 = v81[21];\n              v81[21] = v129 + 1;\n              dword_754F14[v129 + v80] = v125;\n              v130 = qword_781B10;\n              *(_QWORD *)qword_781B10 = &dword_754F10[v126];\n              LODWORD(v129) = dword_754F10[v126];\n              qword_781B10 = v130 + 16;\n              *(_DWORD *)(v130 + 8) = v129;\n              LODWORD(v129) = dword_780830[v8];\n              v131 = 186LL * dword_7807E0[v8];\n              v132 = dword_754F10[v131];\n              dword_754F10[v131] = v132 + 1;\n              dword_754F14[v132 + v131] = v129;\n              dword_755194[v131] = v127;\n            }\n            else if ( (_BYTE)v123 == (_BYTE)v75 && dword_755194[186 * dword_7807E0[v8]] != dword_781B00 )\n            {\n              v128 = v81;\n              sub_40DDB0((unsigned int)v77);\n              v81 = v128;\n            }\n          }\n          else\n          {\n            v133 = *v81;\n            if ( v133 <= 19 )\n            {\n              dword_754EC0[v133 + v80] = v113;\n              LODWORD(v133) = *v81;\n            }\n            *v81 = v133 + 1;\n            dword_780E30[v8] = v124;\n          }\n          result = (unsigned __int8)byte_98A1B0[v189];\n          if ( byte_98A1B0[v189] || dword_780E84[v8] == dword_780E70[0] )\n          {\n            if ( v79 == (_DWORD)result\n              && (v134 = dword_780834[v8], v135 = 186LL * v134, dword_755194[v135] != dword_781B00) )\n            {\n              v136 = v81[21];\n              v81[21] = v136 + 1;\n              dword_754F14[v136 + v80] = v134;\n              v137 = qword_781B10;\n              *(_QWORD *)qword_781B10 = &dword_754F10[v135];\n              qword_781B10 = v137 + 16;\n              *(_DWORD *)(v137 + 8) = dword_754F10[v135];\n              result = (unsigned int)dword_780830[v8];\n              v138 = 186LL * dword_780834[v8];\n              v139 = dword_754F10[v138];\n              dword_754F10[v138] = v139 + 1;\n              dword_754F14[v139 + v138] = result;\n            }\n            else if ( (_BYTE)result == (_BYTE)v75 )\n            {\n              result = (unsigned int)dword_755194[186 * dword_780834[v8]];\n              if ( (_DWORD)result != dword_781B00 )\n                result = sub_40DDB0((unsigned int)v77);\n            }\n          }\n          else\n          {\n            v140 = *v81;\n            if ( v140 <= 19 )\n            {\n              dword_754EC0[v140 + v80] = v189;\n              LODWORD(v140) = *v81;\n            }\n            result = (unsigned int)(v140 + 1);\n            *v81 = result;\n          }\n          return result;\n        }\n        v62 = (unsigned __int8)byte_98A1B0[v8];\n        v63 = qword_781B10;\n        *(_QWORD *)qword_781B10 = &dword_781B20;\n        v64 = dword_781B20;\n        v65 = v63 + 16;\n        qword_781B10 = v63 + 16;\n        *(_DWORD *)(v63 + 8) = dword_781B20;\n        v66 = 3 - v62;\n        dword_781B20 = v64 + 1;\n        dword_780830[v8] = v64;\n        dword_7814C0[v8] = v22;\n        v67 = 186LL * v64;\n        dword_754EB0[v67] = v62;\n        dword_754EB4[v67] = 1;\n        dword_754EB8[v67] = v22;\n        v68 = &dword_754EBC[v67];\n        dword_754EBC[v67] = 0;\n        dword_754F10[v67] = 0;\n        dword_755194[v67] = 0;\n        v69 = v14 + 2;\n        dword_781B00 = v69;\n        if ( byte_98A1B0[v13] )\n        {\n          if ( v66 == (unsigned __int8)byte_98A1B0[v13] )\n          {\n            v70 = dword_780880[v8];\n            v71 = 186LL * v70;\n            v72 = v192;\n            v73 = v190;\n            if ( dword_755194[v71] != v69 )\n            {\n              v68[21] = 1;\n              dword_754F14[v67] = v70;\n              *(_QWORD *)(v63 + 16) = &dword_754F10[v71];\n              v74 = dword_754F10[v71];\n              v65 = v63 + 32;\n              qword_781B10 = v63 + 32;\n              *(_DWORD *)(v63 + 24) = v74;\n              v64 = dword_780830[v8];\n              dword_754F10[v71] = v74 + 1;\n              dword_754F14[v74 + v71] = v64;\n              dword_755194[186 * dword_780880[v8]] = v69;\n            }\n            goto LABEL_102;\n          }\n        }\n        else\n        {\n          dword_754EC0[v67] = v13;\n          *v68 = 1;\n        }\n        v72 = v192;\n        v73 = v190;\nLABEL_102:\n        if ( byte_98A1B0[v73] )\n        {\n          if ( v66 == (unsigned __int8)byte_98A1B0[v73] )\n          {\n            v87 = dword_78082C[v8];\n            v88 = 186LL * v87;\n            if ( dword_755194[v88] != v69 )\n            {\n              v89 = v68[21];\n              v68[21] = v89 + 1;\n              dword_754F14[v89 + v67] = v87;\n              *(_QWORD *)v65 = &dword_754F10[v88];\n              v90 = dword_754F10[v88];\n              qword_781B10 = v65 + 16;\n              *(_DWORD *)(v65 + 8) = v90;\n              v64 = dword_780830[v8];\n              dword_754F10[v88] = v90 + 1;\n              dword_754F14[v90 + v88] = v64;\n              dword_755194[186 * dword_78082C[v8]] = v69;\n              v65 += 16LL;\n            }\n          }\n        }\n        else\n        {\n          v91 = *v68;\n          if ( v91 <= 19 )\n          {\n            dword_754EC0[v91 + v67] = v73;\n            LODWORD(v91) = *v68;\n          }\n          *v68 = v91 + 1;\n        }\n        if ( byte_98A1B0[v72] )\n        {\n          if ( v66 == (unsigned __int8)byte_98A1B0[v72] )\n          {\n            v92 = dword_7807E0[v8];\n            v93 = 186LL * v92;\n            if ( dword_755194[v93] != v69 )\n            {\n              v94 = v68[21];\n              v68[21] = v94 + 1;\n              dword_754F14[v94 + v67] = v92;\n              *(_QWORD *)v65 = &dword_754F10[v93];\n              v95 = dword_754F10[v93];\n              qword_781B10 = v65 + 16;\n              *(_DWORD *)(v65 + 8) = v95;\n              v64 = dword_780830[v8];\n              dword_754F10[v93] = v95 + 1;\n              dword_754F14[v95 + v93] = v64;\n              dword_755194[186 * dword_7807E0[v8]] = v69;\n              v65 += 16LL;\n            }\n          }\n        }\n        else\n        {\n          v96 = *v68;\n          if ( v96 <= 19 )\n          {\n            dword_754EC0[v96 + v67] = v72;\n            LODWORD(v96) = *v68;\n          }\n          *v68 = v96 + 1;\n        }\n        if ( byte_98A1B0[v21] )\n        {\n          if ( v66 == (unsigned __int8)byte_98A1B0[v21] )\n          {\n            v97 = dword_780834[v8];\n            v98 = 186LL * v97;\n            if ( dword_755194[v98] != v69 )\n            {\n              v99 = v68[21];\n              v68[21] = v99 + 1;\n              dword_754F14[v99 + v67] = v97;\n              *(_QWORD *)v65 = &dword_754F10[v98];\n              v100 = dword_754F10[v98];\n              qword_781B10 = v65 + 16;\n              *(_DWORD *)(v65 + 8) = v100;\n              v64 = dword_780830[v8];\n              dword_754F10[v98] = v100 + 1;\n              dword_754F14[v100 + v98] = v64;\n            }\n          }\n        }\n        else\n        {\n          v101 = *v68;\n          if ( v101 <= 19 )\n          {\n            dword_754EC0[v101 + v67] = v21;\n            LODWORD(v101) = *v68;\n          }\n          *v68 = v101 + 1;\n        }\n        result = v64;\n        v102 = 186LL * v64;\n        if ( dword_754EBC[v102] == 1 && v193 == 1 && dword_754EB4[v102] == 1 )\n        {\n          if ( HIDWORD(qword_98A760) )\n            sub_419CB0(&qword_98A740);\n          HIDWORD(qword_98A760) = dword_754EC0[v102];\n          result = sub_419CB0(&qword_98A740);\n        }\n        return result;\n      }\n      if ( (signed int)v58 > 0 )\n      {\n        v103 = &dword_754EBC[v57];\n        v104 = 0LL;\n        v105 = 0LL;\n        while ( v103[v105 + 1] != (_DWORD)v22 )\n        {\n          ++v105;\n          ++v104;\n          if ( v105 >= v58 )\n            goto LABEL_85;\n        }\n        v141 = qword_781B10;\n        *(_QWORD *)qword_781B10 = v57 * 4 + 4 * v58 + 7687868;\n        *(_DWORD *)(v141 + 8) = dword_754EBC[v58 + v57];\n        *(_QWORD *)(v141 + 16) = &dword_754EC0[v57 + v104];\n        *(_DWORD *)(v141 + 24) = dword_754EC0[v105 + v57];\n        *(_QWORD *)(v141 + 32) = v103;\n        qword_781B10 = v141 + 48;\n        *(_DWORD *)(v141 + 40) = v58;\n        v22 = v188;\n        v18 = (unsigned int)v18;\n        dword_754EC0[v105 + v57] = dword_754EBC[v58 + v57];\n        *v103 = v58 - 1;\n        if ( (_DWORD)v18 == 1 )\n          goto LABEL_170;\n        goto LABEL_86;\n      }\n    }\n  }\nLABEL_85:\n  if ( (_DWORD)v18 != 1 )\n    goto LABEL_86;\nLABEL_170:\n  if ( (signed int)v17 < 0 )\n    sub_4340E0(\"engine/board.c\", 3498LL, \"s >= 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  v142 = (unsigned __int8)byte_98A1B0[v8];\n  v143 = 186LL * (signed int)v17;\n  v144 = dword_754EB8[v143];\n  dword_7814C0[v8] = dword_7814C0[v144];\n  v145 = qword_781B10;\n  *(_QWORD *)qword_781B10 = &dword_7814C0[v144];\n  v146 = (unsigned int)dword_7814C0[v144];\n  v147 = v145 + 16;\n  qword_781B10 = v145 + 16;\n  *(_DWORD *)(v145 + 8) = v146;\n  dword_7814C0[v144] = v22;\n  if ( (signed int)v144 > (signed int)v22 )\n  {\n    v146 = (unsigned __int64)&dword_754EB8[v143];\n    *(_QWORD *)(v145 + 16) = &dword_754EB8[v143];\n    v147 = v145 + 32;\n    qword_781B10 = v145 + 32;\n    *(_DWORD *)(v145 + 24) = v144;\n    dword_754EB8[v143] = v22;\n  }\n  dword_780830[v8] = v17;\n  *(_QWORD *)v147 = &dword_754EB4[v143];\n  v148 = dword_754EB4[v143];\n  qword_781B10 = v147 + 16;\n  *(_DWORD *)(v147 + 8) = v148;\n  dword_754EB4[v143] = v148 + 1;\n  v187 = &dword_754EBC[v143];\n  v149 = dword_754EBC[v143];\n  if ( v149 < 21 )\n  {\n    if ( (signed int)v149 <= 0 )\n    {\nLABEL_180:\n      v150 = v17;\n    }\n    else\n    {\n      v153 = 0LL;\n      v154 = 0LL;\n      while ( dword_754EC0[v143 + v154] != (_DWORD)v22 )\n      {\n        ++v154;\n        ++v153;\n        if ( v154 >= v149 )\n          goto LABEL_180;\n      }\n      v150 = v17;\n      *(_QWORD *)(v147 + 16) = v143 * 4 + 4 * v149 + 7687868;\n      *(_DWORD *)(v147 + 24) = dword_754EBC[v149 + v143];\n      *(_QWORD *)(v147 + 32) = &dword_754EC0[v143 + v153];\n      *(_DWORD *)(v147 + 40) = dword_754EC0[v154 + v143];\n      *(_QWORD *)(v147 + 48) = v187;\n      qword_781B10 = v147 + 64;\n      *(_DWORD *)(v147 + 56) = v149;\n      dword_754EC0[v154 + v143] = dword_754EBC[v149 + v143];\n      *v187 = v149 - 1;\n    }\n    v152 = 0;\n  }\n  else\n  {\n    v150 = v17;\n    v151 = v21;\n    sub_40DBF0((unsigned int)v17, v146, v147 + 16, v149, v18, v22);\n    v21 = v151;\n    v152 = 1;\n  }\n  v155 = dword_781B00++ + 1;\n  v156 = dword_754F10[v143];\n  if ( v156 > 0 )\n  {\n    v157 = v156 & 3;\n    if ( (unsigned __int64)(v156 - 1) >= 3 )\n    {\n      v159 = (char *)&unk_754F20 + v143 * 4;\n      v158 = 0LL;\n      do\n      {\n        dword_755194[186 * *(signed int *)&v159[4 * v158 - 12]] = v155;\n        dword_755194[186 * *(signed int *)&v159[4 * v158 - 8]] = v155;\n        dword_755194[186 * *(signed int *)&v159[4 * v158 - 4]] = v155;\n        dword_755194[186 * *(signed int *)&v159[4 * v158]] = v155;\n        v158 += 4LL;\n      }\n      while ( v156 - v157 != v158 );\n    }\n    else\n    {\n      v158 = 0LL;\n    }\n    if ( v156 & 3 )\n    {\n      v160 = (signed int *)(v143 * 4 + 4 * v158 + 7687956);\n      v161 = -v157;\n      do\n      {\n        dword_755194[186 * *v160] = v155;\n        ++v160;\n        ++v161;\n      }\n      while ( v161 );\n    }\n  }\n  v162 = 3 - v142;\n  v163 = &dword_754F10[v143];\n  if ( byte_98A1B0[v191] )\n  {\n    if ( v162 == (unsigned __int8)byte_98A1B0[v191] )\n    {\n      v164 = 186LL * dword_780880[v8];\n      if ( dword_755194[v164] != v155 )\n      {\n        v165 = qword_781B10;\n        *(_QWORD *)qword_781B10 = v163;\n        *(_DWORD *)(v165 + 8) = v156;\n        v166 = dword_780880[v8];\n        *v163 = v156 + 1;\n        dword_754F14[v156 + v143] = v166;\n        *(_QWORD *)(v165 + 16) = &dword_754F10[v164];\n        v167 = dword_754F10[v164];\n        qword_781B10 = v165 + 32;\n        *(_DWORD *)(v165 + 24) = v167;\n        LODWORD(v165) = dword_780830[v8];\n        dword_754F10[v164] = v167 + 1;\n        dword_754F14[v167 + v164] = v165;\n        dword_755194[186 * dword_780880[v8]] = v155;\n      }\n    }\n  }\n  else if ( !v152\n         && (byte_98A1D8[v8] != (_BYTE)v142 || dword_7808D0[v8] != v150)\n         && (byte_98A1C3[v8] != (_BYTE)v142 || dword_78087C[v8] != v150)\n         && (byte_98A1C5[v8] != (_BYTE)v142 || dword_780884[v8] != v150) )\n  {\n    v168 = *v187;\n    if ( v168 <= 19 )\n    {\n      dword_754EC0[v168 + v143] = v191;\n      LODWORD(v168) = *v187;\n    }\n    *v187 = v168 + 1;\n  }\n  if ( byte_98A1B0[v190] )\n  {\n    if ( v162 == (unsigned __int8)byte_98A1B0[v190] )\n    {\n      v169 = 186LL * dword_78082C[v8];\n      if ( dword_755194[v169] != v155 )\n      {\n        v170 = qword_781B10;\n        *(_QWORD *)qword_781B10 = v163;\n        v171 = *v163;\n        *(_DWORD *)(v170 + 8) = v171;\n        v172 = dword_78082C[v8];\n        *v163 = v171 + 1;\n        dword_754F14[v171 + v143] = v172;\n        *(_QWORD *)(v170 + 16) = &dword_754F10[v169];\n        v173 = dword_754F10[v169];\n        qword_781B10 = v170 + 32;\n        *(_DWORD *)(v170 + 24) = v173;\n        LODWORD(v170) = dword_780830[v8];\n        dword_754F10[v169] = v173 + 1;\n        dword_754F14[v173 + v169] = v170;\n        dword_755194[186 * dword_78082C[v8]] = v155;\n      }\n    }\n  }\n  else if ( !v152\n         && (byte_98A1AE[v8] != (_BYTE)v142 || dword_780828[v8] != v150)\n         && (byte_98A19B[v8] != (_BYTE)v142 || dword_7807DC[v8] != v150)\n         && (byte_98A1C3[v8] != (_BYTE)v142 || dword_78087C[v8] != v150) )\n  {\n    v174 = *v187;\n    if ( v174 <= 19 )\n    {\n      dword_754EC0[v174 + v143] = v190;\n      LODWORD(v174) = *v187;\n    }\n    *v187 = v174 + 1;\n  }\n  if ( byte_98A1B0[v192] )\n  {\n    if ( v162 == (unsigned __int8)byte_98A1B0[v192] )\n    {\n      v175 = 186LL * dword_7807E0[v8];\n      if ( dword_755194[v175] != v155 )\n      {\n        v176 = qword_781B10;\n        *(_QWORD *)qword_781B10 = v163;\n        v177 = *v163;\n        *(_DWORD *)(v176 + 8) = v177;\n        v178 = dword_7807E0[v8];\n        *v163 = v177 + 1;\n        dword_754F14[v177 + v143] = v178;\n        *(_QWORD *)(v176 + 16) = &dword_754F10[v175];\n        v179 = dword_754F10[v175];\n        qword_781B10 = v176 + 32;\n        *(_DWORD *)(v176 + 24) = v179;\n        LODWORD(v176) = dword_780830[v8];\n        dword_754F10[v175] = v179 + 1;\n        dword_754F14[v179 + v175] = v176;\n        dword_755194[186 * dword_7807E0[v8]] = v155;\n      }\n    }\n  }\n  else if ( !v152\n         && (byte_98A188[v8] != (_BYTE)v142 || dword_780790[v8] != v150)\n         && (byte_98A19D[v8] != (_BYTE)v142 || dword_7807E4[v8] != v150)\n         && (byte_98A19B[v8] != (_BYTE)v142 || dword_7807DC[v8] != v150) )\n  {\n    v180 = *v187;\n    if ( v180 <= 19 )\n    {\n      dword_754EC0[v180 + v143] = v192;\n      LODWORD(v180) = *v187;\n    }\n    *v187 = v180 + 1;\n  }\n  result = (unsigned __int8)byte_98A1B0[v21];\n  if ( byte_98A1B0[v21] )\n  {\n    if ( v162 == (_DWORD)result )\n    {\n      result = 744LL * dword_780834[v8];\n      if ( *(int *)((char *)dword_755194 + result) != v155 )\n      {\n        v181 = qword_781B10;\n        *(_QWORD *)qword_781B10 = v163;\n        v182 = *v163;\n        *(_DWORD *)(v181 + 8) = v182;\n        v183 = dword_780834[v8];\n        *v163 = v182 + 1;\n        dword_754F14[v182 + v143] = v183;\n        *(_QWORD *)(v181 + 16) = (char *)dword_754F10 + result;\n        v184 = *(int *)((char *)dword_754F10 + result);\n        qword_781B10 = v181 + 32;\n        *(_DWORD *)(v181 + 24) = v184;\n        LODWORD(v181) = dword_780830[v8];\n        *(int *)((char *)dword_754F10 + result) = v184 + 1;\n        *(int *)((char *)&dword_754F14[v184] + result) = v181;\n      }\n    }\n  }\n  else if ( !v152\n         && (byte_98A1B2[v8] != (_BYTE)v142 || dword_780838[v8] != v150)\n         && (byte_98A1C5[v8] != (_BYTE)v142 || dword_780884[v8] != v150)\n         && (byte_98A19D[v8] != (_BYTE)v142 || dword_7807E4[v8] != v150) )\n  {\n    v185 = *v187;\n    if ( v185 <= 19 )\n    {\n      dword_754EC0[v185 + v143] = v21;\n      LODWORD(v185) = *v187;\n    }\n    result = (unsigned int)(v185 + 1);\n    *v187 = result;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x40c1e0L", 
            "funcEndAddr": "0x40d9dfL", 
            "funcName": "sub_40C1E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40D9E0(int a1)\n{\n  int v1; // er13\n  signed __int64 v2; // r14\n  int v3; // eax\n  __int64 v4; // rbx\n  __int64 v5; // rcx\n  int v6; // eax\n  __int64 v7; // rcx\n  signed __int64 v8; // rbx\n  signed __int64 v9; // r9\n  __int64 v10; // rcx\n  int *v11; // rdx\n  __int64 v12; // rdi\n  __int64 v13; // rsi\n  signed __int64 v14; // r8\n  __int64 v15; // rax\n  __int64 result; // rax\n  __int64 *v17; // rdx\n\n  v1 = a1;\n  v2 = 186LL * a1;\n  v3 = dword_754EB8[v2];\n  do\n  {\n    v4 = v3;\n    v5 = qword_781B10;\n    *(_QWORD *)qword_781B10 = &dword_780830[v3];\n    *(_DWORD *)(v5 + 8) = dword_780830[v3];\n    *(_QWORD *)(v5 + 16) = &dword_7814C0[v3];\n    v6 = dword_7814C0[v3];\n    qword_781B10 = v5 + 32;\n    *(_DWORD *)(v5 + 24) = v6;\n    v7 = qword_781B18;\n    *(_QWORD *)qword_781B18 = &byte_98A1B0[v4];\n    qword_781B18 = v7 + 16;\n    *(_DWORD *)(v7 + 8) = (unsigned __int8)byte_98A1B0[v4];\n    sub_419CC0(&qword_98A740, (unsigned int)v4, (unsigned __int8)byte_98A1B0[v4]);\n    byte_98A1B0[v4] = 0;\n    v3 = dword_7814C0[v4];\n  }\n  while ( v3 != dword_754EB8[v2] );\n  if ( dword_754F10[v2] > 0 )\n  {\n    v8 = 0LL;\n    do\n    {\n      v9 = 186LL * dword_754F14[v8 + v2];\n      v10 = dword_754F10[v9];\n      if ( v10 <= 0 )\nLABEL_9:\n        sub_4340E0(\"engine/board.c\", 2930LL, \"done\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n      v11 = &dword_754F10[v9];\n      v12 = 0LL;\n      v13 = 0LL;\n      while ( v11[v13 + 1] != v1 )\n      {\n        ++v13;\n        ++v12;\n        if ( v13 >= v10 )\n          goto LABEL_9;\n      }\n      v14 = v9 * 4 + 4 * v10 + 7687952;\n      v15 = qword_781B10;\n      *(_QWORD *)qword_781B10 = v14;\n      *(_DWORD *)(v15 + 8) = dword_754F10[v10 + v9];\n      *(_QWORD *)(v15 + 16) = &dword_754F14[v9 + v12];\n      *(_DWORD *)(v15 + 24) = dword_754F14[v13 + v9];\n      *(_QWORD *)(v15 + 32) = v11;\n      qword_781B10 = v15 + 48;\n      *(_DWORD *)(v15 + 40) = v10;\n      dword_754F14[v13 + v9] = dword_754F10[v10 + v9];\n      *v11 = v10 - 1;\n      sub_40DBF0(*(unsigned int *)(v2 * 4 + 4 * v8++ + 7687956), v13, v11, v10, v14, v9 * 4);\n    }\n    while ( v8 < dword_754F10[v2] );\n  }\n  result = (unsigned int)dword_754EB4[v2];\n  v17 = &qword_98A760;\n  if ( dword_754EB0[v2] == 1 )\n    v17 = (__int64 *)&dword_98A800;\n  *(_DWORD *)v17 += result;\n  return result;\n}\n", 
            "funcStartAddr": "0x40d9e0L", 
            "funcEndAddr": "0x40dbe6L", 
            "funcName": "sub_40D9E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40DBF0(int a1)\n{\n  signed __int64 v1; // r8\n  int *v2; // r9\n  __int64 v3; // rdx\n  signed __int64 v4; // rax\n  signed __int64 v5; // rcx\n  int *v6; // rdx\n  signed __int64 v7; // rsi\n  bool v8; // cf\n  int v9; // edx\n  int v10; // ecx\n  signed int v11; // edi\n  __int64 result; // rax\n\n  v1 = 186LL * a1;\n  v2 = &dword_754EBC[v1];\n  v3 = qword_781B10;\n  *(_QWORD *)qword_781B10 = &dword_754EBC[v1];\n  v4 = v3 + 16;\n  qword_781B10 = v3 + 16;\n  v5 = dword_754EBC[v1];\n  *(_DWORD *)(v3 + 8) = v5;\n  if ( v5 > 0 )\n  {\n    v6 = &dword_754EC0[v1];\n    v7 = 1LL;\n    do\n    {\n      *(_QWORD *)v4 = v6;\n      *(_DWORD *)(v4 + 8) = *v6;\n      v4 += 16LL;\n      if ( v7 >= v5 )\n        break;\n      ++v6;\n      v8 = (unsigned __int64)v7++ < 0x14;\n    }\n    while ( v8 );\n    qword_781B10 = v4;\n  }\n  v9 = dword_780E70[0]++ + 1;\n  *v2 = 0;\n  v10 = dword_754EB8[v1];\n  v11 = 0;\n  do\n  {\n    result = v10;\n    if ( !byte_98A1C4[v10] && dword_780ED0[v10] != v9 )\n    {\n      if ( v11 <= 19 )\n      {\n        dword_754EC0[v11 + v1] = v10 + 20;\n        v11 = *v2;\n      }\n      *v2 = ++v11;\n      dword_780ED0[v10] = v9;\n    }\n    if ( !byte_98A1AF[v10] && dword_780E7C[v10] != v9 )\n    {\n      if ( v11 <= 19 )\n      {\n        dword_754EC0[v11 + v1] = v10 - 1;\n        v11 = *v2;\n      }\n      *v2 = ++v11;\n      dword_780E7C[v10] = v9;\n    }\n    if ( !byte_98A19C[v10] && dword_780E30[v10] != v9 )\n    {\n      if ( v11 <= 19 )\n      {\n        dword_754EC0[v11 + v1] = v10 - 20;\n        v11 = *v2;\n      }\n      *v2 = ++v11;\n      dword_780E30[v10] = v9;\n    }\n    if ( !byte_98A1B1[v10] && dword_780E84[v10] != v9 )\n    {\n      if ( v11 <= 19 )\n      {\n        dword_754EC0[v11 + v1] = v10 + 1;\n        v11 = *v2;\n      }\n      *v2 = ++v11;\n      dword_780E84[v10] = v9;\n    }\n    v10 = dword_7814C0[v10];\n  }\n  while ( v10 != dword_754EB8[v1] );\n  return result;\n}\n", 
            "funcStartAddr": "0x40dbf0L", 
            "funcEndAddr": "0x40dda1L", 
            "funcName": "sub_40DBF0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_40DDB0(int a1, int a2)\n{\n  int v2; // ebp\n  __int64 v3; // rbx\n  signed __int64 v4; // rcx\n  signed int v5; // eax\n  __int64 v6; // rcx\n  int v7; // esi\n  __int64 v8; // rdx\n  __int64 v9; // rdi\n  int v10; // esi\n  int v11; // edi\n  int *v12; // r10\n  int v13; // er9\n  signed int *v14; // r8\n  signed __int64 v15; // rsi\n  int v16; // ecx\n  signed __int64 v17; // rdi\n  signed __int64 result; // rax\n  __int64 v19; // r15\n  int v20; // er14\n  signed __int64 v21; // r12\n  int *v22; // r13\n  __int64 v23; // rax\n  __int64 v24; // rdx\n  __int64 v25; // rcx\n  __int64 v26; // rdi\n  int v27; // eax\n  __int64 v28; // rcx\n  __int64 v29; // rsi\n  __int64 v30; // rcx\n  signed __int64 v31; // [rsp+8h] [rbp-50h]\n  signed __int64 v32; // [rsp+10h] [rbp-48h]\n  signed int *v33; // [rsp+18h] [rbp-40h]\n\n  v2 = a1;\n  v3 = dword_780830[a2];\n  v4 = 186LL * a1;\n  v31 = v4 * 4;\n  dword_754EB4[v4] += dword_754EB4[186 * v3];\n  v32 = 186 * v3;\n  v5 = dword_754EB8[186 * v3];\n  v6 = qword_781B10 + 32;\n  v7 = dword_754EB8[186 * v3];\n  do\n  {\n    v8 = v7;\n    *(_QWORD *)(v6 - 32) = &dword_780830[v7];\n    *(_DWORD *)(v6 - 24) = dword_780830[v7];\n    dword_780830[v7] = a1;\n    v7 = dword_7814C0[v7];\n    v6 += 16LL;\n  }\n  while ( v7 != v5 );\n  v9 = *(int *)((char *)dword_754EB8 + v31);\n  *(_QWORD *)(v6 - 32) = &dword_7814C0[v8];\n  *(_DWORD *)(v6 - 24) = v5;\n  *(_QWORD *)(v6 - 16) = &dword_7814C0[v9];\n  v10 = dword_7814C0[v9];\n  qword_781B10 = v6;\n  *(_DWORD *)(v6 - 8) = v10;\n  dword_7814C0[v8] = dword_7814C0[v9];\n  dword_7814C0[v9] = v5;\n  if ( v5 < (signed int)v9 )\n    *(int *)((char *)dword_754EB8 + v31) = v5;\n  v11 = dword_754EBC[v32];\n  if ( v11 > 20 )\n  {\n    ++dword_780E70[0];\n    *(int *)((char *)dword_754EBC + v31) = 0;\n    sub_40DBF0(v2);\n  }\n  else if ( v11 > 0 )\n  {\n    v12 = &dword_754EBC[v32];\n    v13 = dword_780E70[0];\n    v14 = (int *)((char *)dword_754EBC + v31);\n    v15 = 0LL;\n    do\n    {\n      v16 = v12[v15 + 1];\n      if ( !byte_98A1B0[v16] && dword_780E80[v16] != v13 )\n      {\n        v17 = *v14;\n        if ( v17 <= 19 )\n        {\n          *(int *)((char *)&dword_754EC0[v17] + v31) = v16;\n          LODWORD(v17) = *v14;\n        }\n        *v14 = v17 + 1;\n        dword_780E80[v16] = v13;\n        v11 = *v12;\n      }\n      ++v15;\n    }\n    while ( v15 < v11 );\n  }\n  result = 744 * v3;\n  if ( dword_754F10[v32] > 0 )\n  {\n    v33 = (int *)((char *)dword_754F10 + v31);\n    v19 = 0LL;\n    do\n    {\n      v20 = dword_754F14[v19 + v32];\n      v21 = 186LL * v20;\n      v22 = &dword_754F10[v21];\n      v23 = dword_754F10[v21];\n      if ( v23 <= 0 )\nLABEL_22:\n        sub_4340E0(\"engine/board.c\", 2930LL, \"done\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n      v24 = 0LL;\n      v25 = 0LL;\n      while ( dword_754F14[v21 + v25] != (_DWORD)v3 )\n      {\n        ++v25;\n        ++v24;\n        if ( v25 >= v23 )\n          goto LABEL_22;\n      }\n      v26 = qword_781B10;\n      *(_QWORD *)qword_781B10 = v21 * 4 + 4 * v23 + 7687952;\n      *(_DWORD *)(v26 + 8) = dword_754F10[v23 + v21];\n      *(_QWORD *)(v26 + 16) = &dword_754F14[v21 + v24];\n      *(_DWORD *)(v26 + 24) = dword_754F14[v25 + v21];\n      *(_QWORD *)(v26 + 32) = v22;\n      qword_781B10 = v26 + 48;\n      *(_DWORD *)(v26 + 40) = v23;\n      dword_754F14[v25 + v21] = dword_754F10[v23 + v21];\n      *v22 = v23 - 1;\n      v27 = dword_781B00;\n      if ( dword_755194[v21] != dword_781B00 )\n      {\n        v28 = qword_781B10;\n        *(_QWORD *)qword_781B10 = v22;\n        qword_781B10 = v28 + 16;\n        v29 = *v22;\n        *(_DWORD *)(v28 + 8) = v29;\n        *v22 = v29 + 1;\n        dword_754F14[v29 + v21] = v2;\n        v30 = *v33;\n        *v33 = v30 + 1;\n        *(int *)((char *)&dword_754F14[v30] + v31) = v20;\n        dword_755194[v21] = v27;\n      }\n      ++v19;\n      result = dword_754F10[v32];\n    }\n    while ( v19 < result );\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x40ddb0L", 
            "funcEndAddr": "0x40e104L", 
            "funcName": "sub_40DDB0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40E110(int a1, unsigned int a2)\n{\n  __int64 v2; // rbx\n  int *v3; // rax\n  __int64 v4; // rbp\n  char v5; // cl\n  unsigned int v6; // er15\n  signed __int64 v7; // rax\n  char v8; // al\n  signed __int64 v9; // rdi\n  char v10; // al\n  __int64 v11; // rdi\n  char v12; // al\n  __int64 v13; // rdi\n\n  if ( a1 == a2 )\n  {\n    v2 = a1;\n    v3 = &dword_7814C0[a1];\n  }\n  else\n  {\n    v2 = a1;\n    dword_780830[v2] = dword_780830[a2];\n    v3 = &dword_7814C0[a2];\n    dword_7814C0[v2] = dword_7814C0[a2];\n  }\n  *v3 = a1;\n  v4 = a1;\n  v5 = byte_98A1B0[dword_5641B0[0] + (signed __int64)a1];\n  v6 = 1;\n  if ( v5 != 3 && v5 == byte_98A1B0[v2] )\n  {\n    v7 = a1 + (signed __int64)dword_5641B0[0];\n    if ( dword_780830[v7] == -1 )\n      v6 = (unsigned __int64)sub_40E110((unsigned int)v7, a2) + 1;\n  }\n  v8 = byte_98A1B0[dword_5641B4 + (signed __int64)a1];\n  if ( v8 != 3 && v8 == byte_98A1B0[v2] )\n  {\n    v9 = a1 + (signed __int64)dword_5641B4;\n    if ( dword_780830[v9] == -1 )\n      v6 += sub_40E110(v9, a2);\n  }\n  v10 = byte_98A1B0[dword_5641B8 + v4];\n  if ( v10 != 3 && v10 == byte_98A1B0[v2] )\n  {\n    v11 = v4 + dword_5641B8;\n    if ( dword_780830[v11] == -1 )\n      v6 += sub_40E110(v11, a2);\n  }\n  v12 = byte_98A1B0[dword_5641BC + v4];\n  if ( v12 != 3 && v12 == byte_98A1B0[v2] )\n  {\n    v13 = v4 + dword_5641BC;\n    if ( dword_780830[v13] == -1 )\n      v6 += sub_40E110(v13, a2);\n  }\n  return v6;\n}\n", 
            "funcStartAddr": "0x40e110L", 
            "funcEndAddr": "0x40e23eL", 
            "funcName": "sub_40E110"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_40E240(_DWORD *a1, FILE *a2)\n{\n  fprintf(\n    a2,\n    \"Komaster %u (%d, %d) Routine %u, (%d, %d), depth: %u \",\n    (unsigned int)(*a1 >> 29),\n    ((*a1 >> 19) & 0x3FFu) / 0x14 - 1,\n    ((*a1 >> 19) & 0x3FFu) % 0x14 - 1,\n    (*a1 >> 15) & 0xF,\n    ((*a1 >> 5) & 0x3FFu) / 0x14 - 1,\n    ((*a1 >> 5) & 0x3FFu) % 0x14 - 1,\n    *a1 & 0x1F);\n  return fprintf(\n           a2,\n           \"Result: %u %u, (%d, %d)\\n\",\n           (a1[1] >> 28) & 3,\n           (a1[1] >> 24) & 0xF,\n           ((a1[1] >> 10) & 0x3FFu) / 0x14 - 1,\n           ((a1[1] >> 10) & 0x3FFu) % 0x14 - 1);\n}\n", 
            "funcStartAddr": "0x40e240L", 
            "funcEndAddr": "0x40e330L", 
            "funcName": "sub_40E240"
        }, 
        {
            "decompiledFuncCode": "int __usercall sub_40E330@<eax>(__int64 a1@<rax>, __int64 a2@<rdi>, FILE *a3@<rsi>)\n{\n  int result; // eax\n  __int64 i; // r12\n\n  result = fprintf(a3, \"Hash value: %lx\\n\", a2, a1);\n  for ( i = *(_QWORD *)(a2 + 8); i; i = *(_QWORD *)(i + 8) )\n  {\n    fprintf(\n      a3,\n      \"Komaster %u (%d, %d) Routine %u, (%d, %d), depth: %u \",\n      (unsigned int)(*(_DWORD *)i >> 29),\n      ((*(_DWORD *)i >> 19) & 0x3FFu) / 0x14 - 1,\n      ((*(_DWORD *)i >> 19) & 0x3FFu) % 0x14 - 1,\n      (*(_DWORD *)i >> 15) & 0xF,\n      ((*(_DWORD *)i >> 5) & 0x3FFu) / 0x14 - 1,\n      ((*(_DWORD *)i >> 5) & 0x3FFu) % 0x14 - 1,\n      *(_DWORD *)i & 0x1F);\n    result = fprintf(\n               a3,\n               \"Result: %u %u, (%d, %d)\\n\",\n               (*(_DWORD *)(i + 4) >> 28) & 3,\n               (*(_DWORD *)(i + 4) >> 24) & 0xF,\n               ((*(_DWORD *)(i + 4) >> 10) & 0x3FFu) / 0x14 - 1,\n               ((*(_DWORD *)(i + 4) >> 10) & 0x3FFu) % 0x14 - 1);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x40e330L", 
            "funcEndAddr": "0x40e45cL", 
            "funcName": "sub_40E330"
        }, 
        {
            "decompiledFuncCode": "int __usercall sub_40E460@<eax>(__int64 a1@<rax>, unsigned int *a2@<rdi>, FILE *a3@<rsi>)\n{\n  __int64 v3; // ST00_8\n  __int64 v4; // rax\n  __int64 v5; // r15\n  __int64 v6; // rax\n  __int64 v7; // rbx\n\n  v3 = a1;\n  fwrite(\"Dump of hashtable\\n\", 0x12uLL, 1uLL, a3);\n  fprintf(a3, \"Total size: %d\\n\", a2[4], v3);\n  fprintf(a3, \"Size of hash table: %d\\n\", *a2);\n  LODWORD(v4) = fprintf(a3, \"Number of positions in table: %d\\n\", a2[8]);\n  if ( (signed int)*a2 > 0 )\n  {\n    v5 = 0LL;\n    do\n    {\n      fprintf(a3, \"Bucket %5d: \", (unsigned int)v5);\n      v6 = *((_QWORD *)a2 + 1);\n      v7 = *(_QWORD *)(v6 + 8 * v5);\n      if ( v7 )\n      {\n        do\n        {\n          LODWORD(v6) = sub_40E330(v6, v7, a3);\n          v7 = *(_QWORD *)(v7 + 16);\n        }\n        while ( v7 );\n      }\n      else\n      {\n        fwrite(\"empty\", 5uLL, 1uLL, a3);\n      }\n      fputc(10, a3);\n      ++v5;\n      v4 = (signed int)*a2;\n    }\n    while ( v5 < v4 );\n  }\n  return v4;\n}\n", 
            "funcStartAddr": "0x40e460L", 
            "funcEndAddr": "0x40e54cL", 
            "funcName": "sub_40E460"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_40E550(__int64 a1)\n{\n  _QWORD *v1; // r14\n  void *v2; // r15\n  void *v3; // r12\n  void *v4; // rbx\n  signed __int64 v5; // rax\n  signed __int64 result; // rax\n  void *v7; // rdi\n\n  sub_419BA0(a1);\n  v1 = malloc(0x38uLL);\n  if ( !v1 )\n  {\nLABEL_14:\n    qword_863530 = 0LL;\n    fwrite(\"Warning: failed to allocate hashtable, exiting.\\n\", 0x30uLL, 1uLL, stderr);\n    abort();\n  }\n  sub_419BA0(56LL);\n  *(_DWORD *)v1 = 600000;\n  v2 = malloc(0x493E00uLL);\n  v1[1] = v2;\n  if ( !v2 )\n  {\nLABEL_13:\n    free(v1);\n    free(v1);\n    goto LABEL_14;\n  }\n  *((_DWORD *)v1 + 4) = 400000;\n  v3 = malloc((size_t)&unk_927C00);\n  v1[3] = v3;\n  if ( !v3 )\n  {\n    v7 = v2;\nLABEL_12:\n    free(v7);\n    goto LABEL_13;\n  }\n  *((_DWORD *)v1 + 9) = 560000;\n  v4 = malloc((size_t)&unk_88B800);\n  v1[5] = v4;\n  if ( !v4 )\n  {\n    free(v2);\n    v7 = v3;\n    goto LABEL_12;\n  }\n  memset(v2, 0, 0x493E00uLL);\n  v5 = -8960000LL;\n  do\n  {\n    *(int *)((char *)&dword_88B804 + (_QWORD)v4 + v5) = 0;\n    *(int *)((char *)&dword_88B814 + (_QWORD)v4 + v5) = 0;\n    *(int *)((char *)&dword_88B824 + (_QWORD)v4 + v5) = 0;\n    *(int *)((char *)&dword_88B834 + (_QWORD)v4 + v5) = 0;\n    *(int *)((char *)&dword_88B844 + (_QWORD)v4 + v5) = 0;\n    v5 += 80LL;\n  }\n  while ( v5 );\n  result = -9600000LL;\n  do\n  {\n    *(__int64 *)((char *)&qword_927C08 + (_QWORD)v3 + result) = 0LL;\n    *(__int64 *)((char *)&qword_927C20 + (_QWORD)v3 + result) = 0LL;\n    *(__int64 *)((char *)&qword_927C38 + (_QWORD)v3 + result) = 0LL;\n    *(__int64 *)((char *)&qword_927C50 + (_QWORD)v3 + result) = 0LL;\n    *(__int64 *)((char *)&qword_927C68 + (_QWORD)v3 + result) = 0LL;\n    result += 120LL;\n  }\n  while ( result );\n  *((_DWORD *)v1 + 8) = 0;\n  *((_DWORD *)v1 + 12) = 0;\n  qword_863530 = (__int64)v1;\n  return result;\n}\n", 
            "funcStartAddr": "0x40e550L", 
            "funcEndAddr": "0x40e705L", 
            "funcName": "sub_40E550"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_40E710()\n{\n  __int64 result; // rax\n  __int64 v1; // rsi\n  __int64 v2; // rcx\n  __int64 v3; // rdx\n  __int64 v4; // rsi\n  __int64 v5; // rcx\n  __int64 v6; // rsi\n  __int64 v7; // r8\n  __int64 v8; // rcx\n  __int64 v9; // rdi\n  __int64 v10; // rsi\n  _DWORD *v11; // rdx\n  _DWORD *v12; // rdx\n  __int64 v13; // rcx\n  __int64 v14; // rsi\n  __int64 v15; // r8\n  __int64 v16; // rcx\n  __int64 v17; // rdi\n  __int64 v18; // rsi\n  _QWORD *v19; // rdx\n  _QWORD *v20; // rdx\n  __int64 v21; // rcx\n\n  result = qword_863530;\n  if ( qword_863530 )\n  {\n    v1 = *(signed int *)qword_863530;\n    if ( v1 <= 0 )\n      goto LABEL_11;\n    v2 = v1 & 3;\n    if ( (unsigned __int64)(v1 - 1) >= 3 )\n    {\n      v4 = v1 - v2;\n      v3 = 0LL;\n      do\n      {\n        *(_QWORD *)(*(_QWORD *)(result + 8) + 8 * v3) = 0LL;\n        *(_QWORD *)(*(_QWORD *)(result + 8) + 8 * v3 + 8) = 0LL;\n        *(_QWORD *)(*(_QWORD *)(result + 8) + 8 * v3 + 16) = 0LL;\n        *(_QWORD *)(*(_QWORD *)(result + 8) + 8 * v3 + 24) = 0LL;\n        v3 += 4LL;\n      }\n      while ( v4 != v3 );\n      if ( !v2 )\n      {\nLABEL_11:\n        v6 = *(signed int *)(result + 36);\n        if ( v6 <= 0 )\n          goto LABEL_20;\n        v7 = *(_QWORD *)(result + 40);\n        v8 = v6 & 3;\n        if ( (unsigned __int64)(v6 - 1) >= 3 )\n        {\n          v10 = v6 - v8;\n          v11 = (_DWORD *)(v7 + 52);\n          v9 = 0LL;\n          do\n          {\n            *(v11 - 12) = 0;\n            *(v11 - 8) = 0;\n            *(v11 - 4) = 0;\n            *v11 = 0;\n            v9 += 4LL;\n            v11 += 16;\n          }\n          while ( v10 != v9 );\n          if ( !v8 )\n          {\nLABEL_20:\n            v14 = *(signed int *)(result + 16);\n            if ( v14 > 0 )\n            {\n              v15 = *(_QWORD *)(result + 24);\n              v16 = v14 & 3;\n              if ( (unsigned __int64)(v14 - 1) >= 3 )\n              {\n                v18 = v14 - v16;\n                v19 = (_QWORD *)(v15 + 80);\n                v17 = 0LL;\n                do\n                {\n                  *(v19 - 9) = 0LL;\n                  *(v19 - 6) = 0LL;\n                  *(v19 - 3) = 0LL;\n                  *v19 = 0LL;\n                  v17 += 4LL;\n                  v19 += 12;\n                }\n                while ( v18 != v17 );\n                if ( !v16 )\n                  goto LABEL_29;\n              }\n              else\n              {\n                v17 = 0LL;\n                if ( !(v14 & 3) )\n                  goto LABEL_29;\n              }\n              v20 = (_QWORD *)(v15 + 24 * v17 + 8);\n              v21 = -v16;\n              do\n              {\n                *v20 = 0LL;\n                v20 += 3;\n                ++v21;\n              }\n              while ( v21 );\n            }\nLABEL_29:\n            *(_DWORD *)(result + 32) = 0;\n            *(_DWORD *)(result + 48) = 0;\n            return result;\n          }\n        }\n        else\n        {\n          v9 = 0LL;\n          if ( !(v6 & 3) )\n            goto LABEL_20;\n        }\n        v12 = (_DWORD *)(v7 + 16 * v9 + 4);\n        v13 = -v8;\n        do\n        {\n          *v12 = 0;\n          v12 += 4;\n          ++v13;\n        }\n        while ( v13 );\n        goto LABEL_20;\n      }\n    }\n    else\n    {\n      v3 = 0LL;\n      if ( !(v1 & 3) )\n        goto LABEL_11;\n    }\n    v5 = -v2;\n    do\n    {\n      *(_QWORD *)(*(_QWORD *)(result + 8) + 8 * v3++) = 0LL;\n      ++v5;\n    }\n    while ( v5 );\n    goto LABEL_11;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x40e710L", 
            "funcEndAddr": "0x40e8d0L", 
            "funcName": "sub_40E710"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40E8D0(unsigned int a1, unsigned int a2, unsigned int a3, int *a4, _QWORD *a5)\n{\n  _QWORD *v5; // rbx\n  int *v6; // rbp\n  unsigned int v7; // er14\n  __int64 result; // rax\n  unsigned int v9; // eax\n\n  v5 = a5;\n  v6 = a4;\n  v7 = a3;\n  if ( dword_98A7F4 <= dword_98A76C )\n  {\n    v9 = sub_40AD00(*a4);\n    *v6 = v9;\n    result = sub_40E960(a1, a2, v7, v9, 0LL, v5);\n    if ( !*v5 )\n    {\n      sub_40EC90(qword_863530);\n      result = sub_40E960(a1, a2, v7, (unsigned int)*v6, 0LL, v5);\n    }\n  }\n  else\n  {\n    *a5 = 0LL;\n    result = 0LL;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x40e8d0L", 
            "funcEndAddr": "0x40e958L", 
            "funcName": "sub_40E8D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40E960(int a1, int a2, int a3, int a4, int a5, _QWORD *a6)\n{\n  _QWORD *v6; // rbp\n  int v7; // er15\n  int v8; // er10\n  int v9; // er12\n  int v10; // er9\n  signed int *v11; // rsi\n  __int64 v12; // rbx\n  __int64 v13; // rdx\n  _QWORD *v14; // rax\n  _QWORD *v15; // r14\n  __int64 v16; // rax\n  __int64 v17; // rdx\n  _QWORD *v18; // rdi\n  __int64 v19; // rdi\n  _QWORD *v20; // r8\n  signed __int64 v21; // rbp\n  __int64 v22; // rax\n  __int64 v23; // rsi\n  unsigned int v24; // ebx\n  int v25; // ST04_4\n  int v26; // ebx\n  int v27; // er13\n  int v28; // ebx\n  int v29; // ST04_4\n  int v30; // er12\n  __int64 v31; // rax\n  __int64 v32; // rax\n  __int64 v33; // rcx\n  __int64 v34; // rdx\n  signed __int64 v35; // rsi\n  __int64 v36; // rdx\n  signed __int64 v37; // rax\n  signed __int64 v38; // rcx\n  int v39; // eax\n  const char *v40; // rdi\n\n  v6 = a6;\n  v7 = a5;\n  v8 = a3;\n  v9 = a2;\n  v10 = a1;\n  v11 = (signed int *)qword_863530;\n  v12 = qword_98A740;\n  v13 = (signed int)(qword_98A740 % (unsigned __int64)*(signed int *)qword_863530);\n  v14 = *(_QWORD **)(*(_QWORD *)(qword_863530 + 8) + 8 * v13);\n  if ( v14 )\n  {\n    v15 = *(_QWORD **)(*(_QWORD *)(qword_863530 + 8) + 8 * v13);\n    do\n    {\n      if ( *v15 == qword_98A740 )\n      {\n        ++DWORD2(xmmword_98A720);\n        if ( dword_88C264 & 0x80000 )\n        {\n          v25 = a4;\n          v26 = v8;\n          sub_433F90((unsigned __int64)\"We found position %H in the hash table...\\n\");\n          v8 = v26;\n          v10 = a1;\n          a4 = v25;\n        }\n        goto LABEL_19;\n      }\n      v15 = (_QWORD *)v15[2];\n    }\n    while ( v15 );\n    while ( *v14 != qword_98A740 )\n    {\n      v14 = (_QWORD *)v14[2];\n      if ( !v14 )\n        goto LABEL_7;\n    }\n    v15 = v14;\n  }\n  else\n  {\nLABEL_7:\n    LODWORD(v16) = *(_DWORD *)(qword_863530 + 32);\n    v17 = *(signed int *)(qword_863530 + 16);\n    if ( (signed int)v16 < (signed int)v17 )\n    {\n      v16 = (signed int)v16;\n      v18 = (_QWORD *)(*(_QWORD *)(qword_863530 + 24) + 24LL * (signed int)v16 + 8);\n      do\n      {\n        if ( !*v18 )\n          break;\n        v11[8] = ++v16;\n        v18 += 3;\n      }\n      while ( v16 < v17 );\n    }\n    if ( (_DWORD)v16 == (_DWORD)v17 )\n      goto LABEL_42;\n    v19 = *((_QWORD *)v11 + 3);\n    v11[8] = v16 + 1;\n    v20 = v6;\n    v21 = 3LL * (signed int)v16;\n    v15 = (_QWORD *)(v19 + 8 * v21);\n    *(_QWORD *)(v19 + 8 * v21) = v12;\n    *(_QWORD *)(v19 + 8 * v21 + 8) = 0LL;\n    v22 = *((_QWORD *)v11 + 1);\n    v23 = (signed int)(qword_98A740 % (unsigned __int64)*v11);\n    *(_QWORD *)(v19 + 8 * v21 + 16) = *(_QWORD *)(v22 + 8 * v23);\n    v6 = v20;\n    *(_QWORD *)(v22 + 8 * v23) = v15;\n    ++DWORD1(xmmword_98A720);\n    if ( !v15 )\n    {\nLABEL_42:\n      *v6 = 0LL;\n      return 0;\n    }\n  }\n  if ( dword_88C264 & 0x80000 )\n  {\n    v27 = a4;\n    v28 = v10;\n    v29 = v8;\n    sub_433F90((unsigned __int64)\"Created position %H in the hash table...\\n\");\n    v8 = v29;\n    v10 = v28;\n    a4 = v27;\n  }\nLABEL_19:\n  v30 = 32 * (a4 | ((v10 | 16 * (v8 | (v9 << 10))) << 10));\n  v31 = v15[1];\n  if ( !v31 )\n  {\nLABEL_23:\n    *v6 = 0LL;\n    if ( dword_88C264 & 0x80000 )\n      sub_433F90((unsigned __int64)\"...but no previous result for routine %d and (%1m, %1m)...\");\n    v32 = qword_863530;\n    LODWORD(v33) = *(_DWORD *)(qword_863530 + 48);\n    v34 = *(signed int *)(qword_863530 + 36);\n    if ( (signed int)v33 < (signed int)v34 )\n    {\n      v33 = (signed int)v33;\n      v35 = 16LL * (signed int)v33 + *(_QWORD *)(qword_863530 + 40) + 4;\n      do\n      {\n        if ( !(*(_BYTE *)(v35 + 3) & 0x30) )\n          break;\n        *(_DWORD *)(v32 + 48) = ++v33;\n        v35 += 16LL;\n      }\n      while ( v33 < v34 );\n    }\n    if ( (_DWORD)v33 == (_DWORD)v34 )\n    {\n      *v6 = 0LL;\n      v24 = 0;\n      if ( !(dword_88C264 & 0x80000) )\n        return v24;\n    }\n    else\n    {\n      v36 = *(_QWORD *)(v32 + 40);\n      *(_DWORD *)(v32 + 48) = v33 + 1;\n      v37 = 16LL * (signed int)v33;\n      v38 = v36 + v37;\n      *(_QWORD *)(v36 + v37 + 8) = v15[1];\n      v15[1] = v36 + v37;\n      *(_DWORD *)(v36 + v37) = v30 | (dword_98A76C - dword_98A7F4);\n      *(_DWORD *)(v36 + v37 + 4) = v7 | *(_DWORD *)(v36 + v37 + 4) & 0xEFFFFC00 | 0x10000000;\n      ++HIDWORD(xmmword_98A720);\n      *v6 = v36 + v37;\n      v39 = dword_88C264;\n      v24 = 0;\n      if ( v38 )\n      {\n        if ( !(v39 & 0x80000) )\n          return v24;\n        v24 = 0;\n        v40 = \"%o...so we allocate a new one.\\n\";\nLABEL_38:\n        sub_433F90((char)v40);\n        return v24;\n      }\n      if ( !(v39 & 0x80000) )\n        return v24;\n    }\n    v24 = 0;\n    v40 = \"%o...and unfortunately there was no room for one.\\n\";\n    goto LABEL_38;\n  }\n  while ( *(_DWORD *)v31 != (v30 | (dword_98A76C - dword_98A7F4)) || (*(_DWORD *)(v31 + 4) & 0x3FF) != v7 )\n  {\n    v31 = *(_QWORD *)(v31 + 8);\n    if ( !v31 )\n      goto LABEL_23;\n  }\n  *v6 = v31;\n  LODWORD(qword_98A730) = qword_98A730 + 1;\n  return 1;\n}\n", 
            "funcStartAddr": "0x40e960L", 
            "funcEndAddr": "0x40ec90L", 
            "funcName": "sub_40E960"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_40EC90(signed int *a1)\n{\n  signed int *v1; // rbx\n  __int64 v2; // rax\n  __int64 v3; // rdx\n  __int64 v4; // rax\n  __int64 v5; // r13\n  _QWORD *v6; // r14\n  __int64 v7; // r12\n  int v8; // er15\n  unsigned int v9; // ebx\n  __int64 v10; // rax\n  _QWORD *v11; // rax\n  _QWORD *v12; // rax\n  _QWORD *v13; // rcx\n  __int64 v14; // rcx\n  int *v15; // r15\n  __int64 v16; // rbp\n  signed __int64 v17; // r14\n  FILE *v18; // rcx\n  __m128i v19; // xmm0\n  __m128i v20; // xmm1\n  unsigned int v21; // er14\n  _QWORD *v23; // [rsp+8h] [rbp-2A0h]\n  __int64 v24; // [rsp+18h] [rbp-290h]\n  _QWORD *v25; // [rsp+20h] [rbp-288h]\n  __int64 v26; // [rsp+30h] [rbp-278h]\n  int s; // [rsp+40h] [rbp-268h]\n  int v28; // [rsp+44h] [rbp-264h]\n  int v29; // [rsp+48h] [rbp-260h]\n  int v30; // [rsp+4Ch] [rbp-25Ch]\n  __int128 v31; // [rsp+50h] [rbp-258h]\n  __int128 v32; // [rsp+60h] [rbp-248h]\n  __int128 v33; // [rsp+70h] [rbp-238h]\n  __int128 v34[34]; // [rsp+80h] [rbp-228h]\n\n  v1 = a1;\n  if ( (dword_88C264 & 0x8000u) != 0 )\n    sub_433F90((unsigned __int64)\"Hashtable cleared because it was full.\\n\");\n  LODWORD(v2) = (unsigned __int64)memset(&s, 0, 0x230uLL);\n  if ( a1[4] > 0 )\n  {\n    v3 = 0LL;\n    do\n    {\n      v4 = *((_QWORD *)v1 + 3);\n      v5 = *(_QWORD *)(v4 + 24 * v3 + 8);\n      if ( v5 )\n      {\n        v26 = *((_QWORD *)v1 + 3);\n        v23 = (_QWORD *)(v4 + 24 * v3 + 8);\n        v25 = (_QWORD *)(v4 + 24 * v3);\n        v24 = (signed int)(*v25 % (unsigned __int64)*v1);\n        v6 = *(_QWORD **)(*((_QWORD *)v1 + 1) + 8 * v24);\n        v7 = 0LL;\n        do\n        {\n          v8 = dword_98A76C - (*(_DWORD *)v5 & 0x1F);\n          if ( v8 >= 20 )\n            v8 = 19;\n          if ( v8 < 0 )\n            v8 = 0;\n          v9 = (*(_DWORD *)v5 >> 15) & 0xF;\n          if ( v9 >= 7 )\n            sub_4340E0(\"engine/cache.c\", 273LL, \"routine >= 0 && routine < (6 + 1)\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n          ++*(&s + 20 * v9 + v8);\n          v10 = v5;\n          if ( (*(_DWORD *)(v5 + 4) & 0x30000000) == 0x20000000 )\n          {\n            v10 = v5;\n            if ( (*(_DWORD *)v5 & 0x78000u) >= 0x10001 )\n            {\n              v10 = v5;\n              if ( dword_98A76C - (*(_DWORD *)v5 & 0x1Fu) >= 3 )\n              {\n                v11 = (_QWORD *)(v7 + 8);\n                if ( !v7 )\n                  v11 = v23;\n                *v11 = *(_QWORD *)(v5 + 8);\n                *(_DWORD *)(v5 + 4) = 0;\n                v10 = v7;\n              }\n            }\n          }\n          v5 = *(_QWORD *)(v5 + 8);\n          v7 = v10;\n        }\n        while ( v5 );\n        v1 = a1;\n        if ( !*v23 )\n        {\n          if ( v6 )\n          {\n            v12 = 0LL;\n            while ( 1 )\n            {\n              v13 = v6;\n              if ( v6 == v25 )\n                break;\n              v6 = (_QWORD *)v6[2];\n              v12 = v13;\n              if ( !v6 )\n                goto LABEL_29;\n            }\n            v14 = *(_QWORD *)(v26 + 24 * v3 + 16);\n            if ( v12 )\n              v12[2] = v14;\n            else\n              *(_QWORD *)(*((_QWORD *)a1 + 1) + 8 * v24) = v14;\n          }\n        }\n      }\nLABEL_29:\n      ++v3;\n      v2 = v1[4];\n    }\n    while ( v3 < v2 );\n  }\n  if ( (dword_88C264 & 0x8000u) != 0 )\n  {\n    fwrite(\n      \"routine        total     0     1     2     3     4     5     6     7     8     9    10    11    12    13    14    \"\n      \"15    16    17    18    19\\n\",\n      0x8DuLL,\n      1uLL,\n      stderr);\n    v15 = &v28;\n    v16 = 0LL;\n    do\n    {\n      LODWORD(v2) = 80 * v16;\n      v19 = _mm_add_epi32(\n              _mm_add_epi32(_mm_load_si128((const __m128i *)&v31 + 5 * v16), (__m128i)*(&v33 + 5 * v16)),\n              _mm_add_epi32(_mm_load_si128((const __m128i *)&v32 + 5 * v16), (__m128i)v34[5 * v16]));\n      v20 = _mm_add_epi32(_mm_shuffle_epi32(v19, 78), v19);\n      v21 = *(&s + 20 * v16);\n      if ( v21\n         + *(&v28 + 20 * v16)\n         + *(&v29 + 20 * v16)\n         + *(&v30 + 20 * v16)\n         + _mm_cvtsi128_si32(_mm_add_epi32(_mm_shuffle_epi32(v20, 229), v20)) )\n      {\n        fprintf(stderr, \"%-14s%6d\", off_4AE450[v16]);\n        fprintf(stderr, off_494E82, v21);\n        v17 = 4611686018427387885LL;\n        v18 = stderr;\n        do\n        {\n          fprintf(v18, off_494E82, (unsigned int)v15[v17 + 19]);\n          v18 = stderr;\n          ++v17;\n        }\n        while ( v17 * 4 );\n        LODWORD(v2) = fputc(10, stderr);\n      }\n      ++v16;\n      v15 += 20;\n    }\n    while ( v16 != 7 );\n  }\n  v1[12] = 0;\n  v1[8] = 0;\n  return v2;\n}\n", 
            "funcStartAddr": "0x40ec90L", 
            "funcEndAddr": "0x40efe1L", 
            "funcName": "sub_40EC90"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40EFF0(int a1, int a2, int a3, int *a4, int *a5, _QWORD *a6)\n{\n  _QWORD *v6; // rbx\n  int *v7; // r12\n  int *v8; // rbp\n  int v9; // er14\n  __int64 result; // rax\n  int v11; // eax\n\n  v6 = a6;\n  v7 = a5;\n  v8 = a4;\n  v9 = a3;\n  if ( dword_98A7F4 <= dword_98A76C )\n  {\n    *a4 = sub_40AD00(*a4);\n    v11 = sub_40AD00(*v7);\n    *v7 = v11;\n    result = sub_40E960(a1, a2, v9, *v8, v11, v6);\n    if ( !*v6 )\n    {\n      sub_40EC90((signed int *)qword_863530);\n      result = sub_40E960(a1, a2, v9, *v8, *v7, v6);\n    }\n  }\n  else\n  {\n    *a6 = 0LL;\n    result = 0LL;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x40eff0L", 
            "funcEndAddr": "0x40f09cL", 
            "funcName": "sub_40EFF0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40F0A0(__int64 a1, int a2, int a3, unsigned int a4, __int64 a5)\n{\n  __int64 v5; // r14\n  unsigned int v6; // ebx\n  int v7; // er12\n  __int64 v8; // rax\n  signed int v9; // esi\n  _BOOL4 v10; // er15\n  size_t v11; // rbp\n  __int64 v12; // rcx\n  char *v13; // rdi\n  size_t v14; // rax\n  char *v16; // r15\n  __int64 v17; // rax\n  signed int v18; // ecx\n  char s[2]; // [rsp+0h] [rbp-98h]\n\n  v5 = a5;\n  v6 = a4;\n  v7 = a3;\n  v8 = a2;\n  v9 = a2 - 20 * (((unsigned __int64)(1717986919LL * a2) >> 63) + (1717986919LL * a2 >> 35));\n  sprintf(\n    s,\n    \"%s %c%d: \",\n    a1,\n    (unsigned int)(v9 > 8) + v9 + 64,\n    dword_565C68 + ((unsigned __int64)(-1717986919 * v8) >> 63) + (unsigned int)(-1717986919 * v8 >> 35) + 1);\n  if ( v6 )\n  {\n    if ( byte_98A1B0[v7] == 3 )\n    {\n      v10 = sub_407B20(v7);\n      v11 = strlen(s);\n      v12 = sub_434430(v6);\n      v13 = &s[v11];\n      if ( v10 )\n      {\n        sprintf(v13, \"%s PASS\", v12);\n        if ( !v5 )\n          return sub_4018D0((__int64 *)qword_88C238);\n      }\n      else\n      {\n        sprintf(v13, \"%s [%d]\", v12, (unsigned int)v7);\n        if ( !v5 )\n          return sub_4018D0((__int64 *)qword_88C238);\n      }\n    }\n    else\n    {\n      v16 = &s[strlen(s)];\n      v17 = sub_434430(v6);\n      v18 = v7 - 20 * (((unsigned __int64)(1717986919LL * v7) >> 63) + (1717986919LL * v7 >> 35));\n      sprintf(\n        v16,\n        \"%s %c%d\",\n        v17,\n        (unsigned int)(v18 > 8) + v18 + 64,\n        dword_565C68 + ((unsigned __int64)(-1717986919LL * v7) >> 63) + (unsigned int)(-1717986919LL * v7 >> 35) + 1);\n      if ( !v5 )\n        return sub_4018D0((__int64 *)qword_88C238);\n    }\n    goto LABEL_7;\n  }\n  *(_WORD *)&s[strlen(s)] = 48;\n  if ( v5 )\n  {\nLABEL_7:\n    v14 = strlen(s);\n    sprintf(&s[v14], \" (%s)\", v5);\n  }\n  return sub_4018D0((__int64 *)qword_88C238);\n}\n", 
            "funcStartAddr": "0x40f0a0L", 
            "funcEndAddr": "0x40f259L", 
            "funcName": "sub_40F0A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40F260(__int64 a1, int a2, int a3, int a4, unsigned int a5, __int64 a6)\n{\n  __int64 v6; // r14\n  unsigned int v7; // ebx\n  int v8; // er15\n  __int64 v9; // rbp\n  signed int v10; // ecx\n  signed int v11; // edi\n  __int64 v12; // rbp\n  _BOOL4 v13; // er12\n  size_t v14; // rbp\n  __int64 v15; // rcx\n  char *v16; // rdi\n  size_t v17; // rax\n  char *v19; // r15\n  __int64 v20; // rax\n  signed int v21; // ecx\n  _QWORD v22[2]; // [rsp+0h] [rbp-A8h]\n  char s[2]; // [rsp+10h] [rbp-98h]\n\n  v6 = a6;\n  v7 = a5;\n  v8 = a4;\n  v9 = a1;\n  v10 = a2 - 20 * (((unsigned __int64)(1717986919LL * a2) >> 63) + (1717986919LL * a2 >> 35));\n  v11 = a3 - 20 * (((unsigned __int64)(1717986919LL * a3) >> 63) + (1717986919LL * a3 >> 35));\n  LODWORD(v22[0]) = dword_565C68 + ((unsigned __int64)(-1717986919LL * a3) >> 63) + (-1717986919LL * a3 >> 35) + 1;\n  sprintf(\n    s,\n    \"%s %c%d %c%d: \",\n    v9,\n    (unsigned int)(v10 > 8) + v10 + 64,\n    dword_565C68 + ((unsigned __int64)(-1717986919LL * a2) >> 63) + (unsigned int)(-1717986919LL * a2 >> 35) + 1,\n    (unsigned int)(v11 > 8) + v11 + 64,\n    v22[0]);\n  if ( v7 )\n  {\n    v12 = v8;\n    if ( byte_98A1B0[v8] == 3 )\n    {\n      v13 = sub_407B20(v8);\n      v14 = strlen(s);\n      v15 = sub_434430(v7);\n      v16 = &s[v14];\n      if ( v13 )\n      {\n        sprintf(v16, \"%s PASS\", v15);\n        if ( !v6 )\n          return sub_4018D0((__int64 *)qword_88C238);\n      }\n      else\n      {\n        sprintf(v16, \"%s [%d]\", v15, (unsigned int)v8);\n        if ( !v6 )\n          return sub_4018D0((__int64 *)qword_88C238);\n      }\n    }\n    else\n    {\n      v19 = &s[strlen(s)];\n      v20 = sub_434430(v7);\n      v21 = v12 - 20 * (((unsigned __int64)(1717986919 * v12) >> 63) + (1717986919 * v12 >> 35));\n      sprintf(\n        v19,\n        \"%s %c%d\",\n        v20,\n        (unsigned int)(v21 > 8) + v21 + 64,\n        dword_565C68 + ((unsigned __int64)(-1717986919 * v12) >> 63) + (unsigned int)(-1717986919 * v12 >> 35) + 1);\n      if ( !v6 )\n        return sub_4018D0((__int64 *)qword_88C238);\n    }\n    goto LABEL_7;\n  }\n  *(_WORD *)&s[strlen(s)] = 48;\n  if ( v6 )\n  {\nLABEL_7:\n    v17 = strlen(s);\n    sprintf(&s[v17], \" (%s)\", v6);\n  }\n  return sub_4018D0((__int64 *)qword_88C238);\n}\n", 
            "funcStartAddr": "0x40f260L", 
            "funcEndAddr": "0x40f48bL", 
            "funcName": "sub_40F260"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40F490(int a1)\n{\n  unsigned int v1; // er14\n  signed __int64 v2; // rbx\n  signed int v3; // er13\n  signed __int64 v4; // r12\n  char *v5; // r14\n  __int64 v6; // r15\n  signed __int64 v7; // r13\n  char *v8; // rbp\n  unsigned int v9; // er12\n  char v10; // r13\n  unsigned int v11; // ebx\n  __int64 result; // rax\n  unsigned int v13; // ebp\n  signed __int64 v14; // rbx\n  unsigned int v15; // [rsp+0h] [rbp-1E8h]\n  int v16; // [rsp+4h] [rbp-1E4h]\n  __int64 v17; // [rsp+8h] [rbp-1E0h]\n  __int64 v18; // [rsp+10h] [rbp-1D8h]\n  __int64 v19; // [rsp+18h] [rbp-1D0h]\n  int v20; // [rsp+20h] [rbp-1C8h]\n  char v21; // [rsp+24h] [rbp-1C4h]\n\n  v1 = a1;\n  v2 = 21LL;\n  v16 = a1;\n  do\n  {\n    if ( byte_98A1B0[v2] != 3 )\n    {\n      v3 = sub_421300((unsigned int)v2, 10LL, &v20);\n      if ( v3 >= 2 )\n      {\n        if ( (unsigned int)sub_406880((unsigned int)v2, v1, \"find_double_threats-A\", v2, 0, 0) )\n        {\n          v18 = (unsigned int)(v3 - 1);\n          v17 = v3;\n          v4 = (unsigned int)v3 - 1LL;\n          v5 = &v21;\n          v6 = 0LL;\n          while ( 1 )\n          {\n            v19 = v6 + 1;\n            if ( v6 + 1 < v17 )\n              break;\nLABEL_15:\n            v5 += 4;\n            --v4;\n            v6 = v19;\n            if ( v19 == v18 )\n            {\n              sub_407030();\n              v1 = v16;\n              goto LABEL_17;\n            }\n          }\n          v7 = v4;\n          v8 = v5;\n          while ( 1 )\n          {\n            if ( byte_98A1B0[*(&v20 + v6)] && byte_98A1B0[*(signed int *)v8] )\n            {\n              if ( !(unsigned int)sub_43E680() )\n                goto LABEL_13;\n            }\n            else if ( !(unsigned int)sub_43B050((unsigned int)v2, 0LL) )\n            {\nLABEL_13:\n              sub_421B30((unsigned int)v2, 1LL, (unsigned int)*(&v20 + v6), 1LL, *(unsigned int *)v8);\n              sub_421150((unsigned int)v2, (unsigned int)*(&v20 + v6));\n              sub_421150((unsigned int)v2, *(unsigned int *)v8);\n              goto LABEL_14;\n            }\nLABEL_14:\n            v8 += 4;\n            if ( !--v7 )\n              goto LABEL_15;\n          }\n        }\n      }\n    }\nLABEL_17:\n    ++v2;\n  }\n  while ( v2 != 400 );\n  v9 = dword_88C268;\n  if ( dword_88C268 > 0 )\n  {\n    --dword_88C268;\n    goto LABEL_21;\n  }\n  if ( dword_88C268 )\n  {\nLABEL_21:\n    sub_433F90((unsigned __int64)\"\\nlooking for combination attacks ...\\n\");\n    v10 = 1;\n  }\n  else\n  {\n    v10 = 0;\n  }\n  v11 = sub_40F720(v1, &v15, 0LL, v9);\n  if ( (signed int)v11 > 0 )\n  {\n    if ( v10 )\n      sub_433F90((unsigned __int64)\"Combination attack for %C with size %d found at %1m\\n\");\n    sub_422780(v15, v11);\n  }\n  result = sub_40F720(3 - v1, &v15, &v20, v9);\n  v13 = result;\n  if ( (signed int)result > 0 )\n  {\n    if ( v10 )\n      result = sub_433F90((unsigned __int64)\"Combination attack for %C with size %d found at %1m\\n\");\n    v14 = 21LL;\n    do\n    {\n      if ( byte_98A1B0[v14] != 3 )\n      {\n        if ( *((_BYTE *)&v20 + v14) )\n        {\n          result = sub_422790((unsigned int)v14, v13);\n          if ( v10 )\n            result = sub_433F90((unsigned __int64)\"- defense at %1m\\n\");\n        }\n      }\n      ++v14;\n    }\n    while ( v14 != 400 );\n  }\n  dword_88C268 = v9;\n  return result;\n}\n", 
            "funcStartAddr": "0x40f490L", 
            "funcEndAddr": "0x40f71eL", 
            "funcName": "sub_40F490"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40F720(unsigned int a1, _DWORD *a2, void *a3, int a4)\n{\n  void *v4; // rbx\n  unsigned int v5; // er14\n  unsigned int v6; // er13\n  unsigned int v7; // eax\n  __int64 v8; // rax\n  signed __int64 v9; // rbp\n  unsigned int v10; // er15\n  const char *v11; // rdi\n  int v13; // [rsp+0h] [rbp-1D8h]\n  int v14; // [rsp+4h] [rbp-1D4h]\n  char v15; // [rsp+8h] [rbp-1D0h]\n  unsigned int v16; // [rsp+Ch] [rbp-1CCh]\n  char dest; // [rsp+10h] [rbp-1C8h]\n\n  v13 = a4;\n  v4 = a3;\n  v5 = a1;\n  v6 = 0;\n  if ( dword_98A754 >= 2 )\n  {\n    v6 = 0;\n    memset(dword_863540, 0, 0x640uLL);\n    sub_40F970(a1, 0LL);\n    sub_40FBC0(a1);\n    if ( v4 )\n      memset(v4, 0, 0x190uLL);\n    v7 = sub_40FE90(a1, (unsigned __int64)&v14, &v15);\n    if ( v7 )\n    {\n      v16 = 3 - a1;\n      do\n      {\n        v6 = v7;\n        v8 = v14;\n        if ( a2 )\n          *a2 = v14;\n        dword_863540[v8] = 1;\n        if ( v4 )\n        {\n          memcpy(&dest, v4, 0x190uLL);\n          memset(v4, 0, 0x190uLL);\n        }\n        v7 = sub_40FE90(a1, (unsigned __int64)&v14, &v15);\n      }\n      while ( v7 );\n      if ( v4 )\n      {\n        memcpy(v4, &dest, 0x190uLL);\n        dword_863540[v14] = 0;\n        v9 = 21LL;\n        v10 = v16;\n        do\n        {\n          if ( byte_98A1B0[v9] == 3 || !*((_BYTE *)v4 + v9) )\n            goto LABEL_27;\n          if ( (unsigned int)sub_406880((unsigned int)v9, v10, \"atari_atari\", 0, 0, 0) )\n          {\n            if ( !(unsigned int)sub_43B050((unsigned int)v9, 0LL) )\n            {\n              if ( (signed int)sub_40FE90(v5, (unsigned __int64)&v14, &v15) > 0 )\n              {\n                if ( v13 )\n                  sub_433F90((unsigned __int64)\"%1m deleted defense point, didn't work\\n\");\n                *((_BYTE *)v4 + v9) = 0;\n              }\n              sub_407030();\n              goto LABEL_27;\n            }\n            *((_BYTE *)v4 + v9) = 0;\n            sub_407030();\n            if ( v13 )\n            {\n              v11 = \"%1m deleted defense point, unsafe\\n\";\nLABEL_21:\n              sub_433F90((char)v11);\n              goto LABEL_27;\n            }\n          }\n          else\n          {\n            *((_BYTE *)v4 + v9) = 0;\n            if ( v13 )\n            {\n              v11 = \"%1m deleted defense point, illegal\\n\";\n              goto LABEL_21;\n            }\n          }\nLABEL_27:\n          ++v9;\n        }\n        while ( v9 != 400 );\n      }\n    }\n  }\n  return v6;\n}\n", 
            "funcStartAddr": "0x40f720L", 
            "funcEndAddr": "0x40f966L", 
            "funcName": "sub_40F720"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40F970(int a1, __int64 a2)\n{\n  int v2; // er12\n  int v3; // er13\n  int v4; // er15\n  unsigned __int64 v5; // rax\n  __int64 v6; // rcx\n  int v7; // edx\n  int v8; // edx\n  signed __int64 v9; // rbx\n  signed __int64 v10; // rbp\n  signed __int64 v11; // rbx\n  __int64 result; // rax\n  __int64 v13; // [rsp+0h] [rbp-38h]\n\n  v13 = qword_88C238;\n  v2 = dword_88C22C;\n  v3 = dword_88C268;\n  qword_88C238 = 0LL;\n  dword_88C22C = 0;\n  if ( dword_88C268 )\n    --dword_88C268;\n  v4 = 3 - a1;\n  v5 = 0LL;\n  v6 = 0LL;\n  do\n  {\n    v7 = (unsigned __int8)byte_98A1C5[v6];\n    if ( v4 == v7 )\n    {\n      if ( a2 )\n      {\n        if ( *(_BYTE *)(a2 + v6 + 21) )\n          goto LABEL_7;\nLABEL_12:\n        dword_863BD4[v6] = 0;\n        goto LABEL_16;\n      }\n      v8 = dword_95562C[v5 / 4];\n      if ( v8 != 2 )\n      {\n        if ( !v8 )\n          goto LABEL_12;\n        if ( !*(_DWORD *)((char *)dword_8EB400 + 5 * v5) )\n        {\nLABEL_7:\n          dword_863BD4[v6] = 1;\n          goto LABEL_16;\n        }\n        if ( !*(_DWORD *)((char *)dword_8EB450 + 5 * v5) )\n          goto LABEL_12;\n      }\n      dword_863BD4[v6] = 2;\n    }\n    else if ( (_BYTE)v7 != 3 )\n    {\n      dword_863BD4[v6] = 3;\n    }\nLABEL_16:\n    ++v6;\n    v5 += 76LL;\n  }\n  while ( v6 != 379 );\n  v9 = 21LL;\n  do\n  {\n    if ( v4 == (unsigned __int8)byte_98A1B0[v9]\n      && v9 == dword_8E947C[95 * v9]\n      && dword_8E9480[95 * v9] == 2\n      && dword_863B80[v9] == 1\n      && !(unsigned int)sub_42F8F0((unsigned int)v9) )\n    {\n      v10 = 21LL;\n      do\n      {\n        if ( byte_98A1B0[v10] != 3 && (unsigned int)sub_456110((unsigned int)v10, (unsigned int)v9) )\n          dword_863B80[v10] = 10;\n        ++v10;\n      }\n      while ( v10 != 400 );\n    }\n    ++v9;\n  }\n  while ( v9 != 400 );\n  if ( dword_88C264 & 0x40000 )\n  {\n    sub_433F90((unsigned __int64)\"compute_aa_status() for %C\\n\");\n    sub_433F90((unsigned __int64)\"aa_status: (ALIVE worms not listed)\\n\");\n    v11 = 21LL;\n    do\n    {\n      if ( v4 == (unsigned __int8)byte_98A1B0[v11] && (unsigned int)sub_456110((unsigned int)v11, (unsigned int)v11) )\n      {\n        switch ( (unsigned __int64)(unsigned int)dword_863B80[v11] )\n        {\n          case 0uLL:\n          case 2uLL:\n          case 0xAuLL:\n            sub_433F90((unsigned __int64)\"%1M: %s\\n\");\n            break;\n          case 1uLL:\n            break;\n        }\n      }\n      ++v11;\n    }\n    while ( v11 != 400 );\n  }\n  result = v13;\n  qword_88C238 = v13;\n  dword_88C22C = v2;\n  dword_88C268 = v3;\n  return result;\n}\n", 
            "funcStartAddr": "0x40f970L", 
            "funcEndAddr": "0x40fbb8L", 
            "funcName": "sub_40F970"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40FBC0(int a1)\n{\n  int v1; // er13\n  signed __int64 v2; // rbx\n  char *v3; // r15\n  __int64 result; // rax\n  unsigned int v5; // ebp\n  int v6; // er12\n  __int64 v7; // r14\n  __int64 v8; // rsi\n  __int64 v9; // rsi\n  signed __int64 v10; // rbp\n  char v11; // al\n  signed __int64 v12; // rbp\n  char v13; // al\n  signed __int64 v14; // rbp\n  char v15; // al\n  signed __int64 v16; // rbp\n  int v17[400]; // [rsp+0h] [rbp-A38h]\n  char v18; // [rsp+640h] [rbp-3F8h]\n\n  v1 = 3 - a1;\n  v2 = 21LL;\n  v3 = &v18;\n  do\n  {\n    result = (unsigned __int8)byte_98A1B0[v2];\n    if ( v1 != (_DWORD)result\n      || (result = (unsigned int)sub_40AD00(v2), v2 != (unsigned int)result)\n      || dword_863B80[v2] != 1 )\n    {\n      dword_864810[v2] = 0;\n    }\n    else\n    {\n      memset(v17, 0, 0x640uLL);\n      v5 = sub_408410(v2, 241, (unsigned __int64)&v18);\n      result = sub_40A5F0(v2);\n      v6 = 2 * result;\n      if ( (signed int)v5 > 0 )\n      {\n        v7 = v5;\n        do\n        {\n          v8 = *(signed int *)v3;\n          if ( !v17[v8] )\n          {\n            if ( (unsigned int)sub_41A430(&unk_927B28) != v1\n              && (v9 = *(unsigned int *)v3, (unsigned int)sub_41A430(&unk_9333A0) != v1) )\n            {\n              LODWORD(v8) = *(_DWORD *)v3;\n            }\n            else\n            {\n              v8 = *(signed int *)v3;\n              v17[v8] = 1;\n              ++v6;\n            }\n          }\n          v10 = dword_5641B0[0] + (signed __int64)(signed int)v8;\n          if ( (unsigned int)v10 <= 0x1A4 )\n          {\n            v11 = byte_98A1B0[v10];\n            if ( v11 != 3 && !v17[v10] )\n            {\n              v17[v10] = 1;\n              if ( !v11 && ((unsigned int)sub_41A430(&unk_927B28) == v1 || (unsigned int)sub_41A430(&unk_9333A0) == v1) )\n                ++v6;\n            }\n          }\n          v12 = dword_5641B4 + (signed __int64)*(signed int *)v3;\n          if ( (unsigned int)v12 < 0x1A5 )\n          {\n            v13 = byte_98A1B0[v12];\n            if ( v13 != 3 && !v17[v12] )\n            {\n              v17[v12] = 1;\n              if ( !v13 && ((unsigned int)sub_41A430(&unk_927B28) == v1 || (unsigned int)sub_41A430(&unk_9333A0) == v1) )\n                ++v6;\n            }\n          }\n          v14 = dword_5641B8 + (signed __int64)*(signed int *)v3;\n          if ( (unsigned int)v14 <= 0x1A4 )\n          {\n            v15 = byte_98A1B0[v14];\n            if ( v15 != 3 && !v17[v14] )\n            {\n              v17[v14] = 1;\n              if ( !v15 && ((unsigned int)sub_41A430(&unk_927B28) == v1 || (unsigned int)sub_41A430(&unk_9333A0) == v1) )\n                ++v6;\n            }\n          }\n          result = dword_5641BC;\n          v16 = dword_5641BC + (signed __int64)*(signed int *)v3;\n          if ( (unsigned int)v16 <= 0x1A4 )\n          {\n            result = (unsigned __int8)byte_98A1B0[v16];\n            if ( (_BYTE)result != 3 && !v17[v16] )\n            {\n              v17[v16] = 1;\n              if ( !(_BYTE)result )\n              {\n                result = sub_41A430(&unk_927B28);\n                if ( (_DWORD)result == v1 || (result = sub_41A430(&unk_9333A0), (_DWORD)result == v1) )\n                  ++v6;\n              }\n            }\n          }\n          v3 += 4;\n          --v7;\n        }\n        while ( v7 );\n      }\n      dword_864810[v2] = v6;\n      v3 = &v18;\n      if ( dword_88C264 & 0x40000 )\n        result = sub_433F90((unsigned __int64)\"aa_value for %1m = %d\\n\");\n    }\n    ++v2;\n  }\n  while ( v2 != 400 );\n  return result;\n}\n", 
            "funcStartAddr": "0x40fbc0L", 
            "funcEndAddr": "0x40fe8eL", 
            "funcName": "sub_40FBC0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_40FE90(unsigned int a1, unsigned int *a2, void *src, __int64 a4, unsigned int a5, unsigned int a6, unsigned int a7, void *srca)\n{\n  unsigned int v8; // er14\n  void *v9; // r13\n  signed __int64 v10; // rbx\n  __int64 *v11; // rbx\n  int v12; // ebp\n  unsigned int v13; // eax\n  unsigned int v14; // er12\n  __int64 v15; // r14\n  int v16; // er15\n  unsigned __int64 v17; // rbx\n  char *v18; // rbp\n  signed __int64 v19; // rsi\n  char *v20; // rbx\n  unsigned __int64 v21; // rbp\n  unsigned int v22; // er14\n  __int64 v23; // rbp\n  unsigned int v24; // er15\n  signed __int64 v25; // rsi\n  int v26; // eax\n  int *v27; // r13\n  __int64 v28; // rbp\n  int v29; // ebx\n  int v30; // eax\n  __int64 v31; // rbp\n  __int64 v32; // rdi\n  int v33; // ebx\n  unsigned int *v34; // r13\n  unsigned int *v35; // rbx\n  __int64 v36; // rbx\n  int v37; // ebp\n  __int64 v38; // rdi\n  unsigned int v40; // [rsp+Ch] [rbp-23ECh]\n  unsigned int v41; // [rsp+10h] [rbp-23E8h]\n  unsigned int v42; // [rsp+14h] [rbp-23E4h]\n  __int64 v43; // [rsp+18h] [rbp-23E0h]\n  void *v44; // [rsp+28h] [rbp-23D0h]\n  int v45; // [rsp+30h] [rbp-23C8h]\n  unsigned int v46; // [rsp+34h] [rbp-23C4h]\n  unsigned int *v47; // [rsp+38h] [rbp-23C0h]\n  __int64 v48; // [rsp+40h] [rbp-23B8h]\n  __int64 v49; // [rsp+48h] [rbp-23B0h]\n  int s; // [rsp+50h] [rbp-23A8h]\n  int v51; // [rsp+54h] [rbp-23A4h]\n  int v52[364]; // [rsp+1E0h] [rbp-2218h]\n  unsigned int v53; // [rsp+790h] [rbp-1C68h]\n  int v54[3]; // [rsp+794h] [rbp-1C64h]\n  char v55; // [rsp+7A0h] [rbp-1C58h]\n\n  v40 = a6;\n  v8 = a5;\n  v43 = a4;\n  v9 = src;\n  v41 = a1;\n  if ( dword_88C264 & 0x40000 )\n  {\n    sub_433F90((unsigned __int64)\"%odo_atari_atari: \");\n    sub_407180();\n    sub_433F90((unsigned __int64)\"%oforbidden moves: \");\n    v10 = 21LL;\n    do\n    {\n      if ( byte_98A1B0[v10] != 3 && dword_863540[v10] )\n        sub_433F90((unsigned __int64)\"%o%1m \");\n      ++v10;\n    }\n    while ( v10 != 400 );\n    sub_433F90((unsigned __int64)\"\\n\");\n  }\n  if ( v8 )\n  {\n    v11 = (__int64 *)qword_88C238;\n    v12 = dword_88C22C;\n    qword_88C238 = 0LL;\n    dword_88C22C = 0;\n    v13 = sub_410760(a1, a2, v9, v8, v40, a7);\n    qword_88C238 = (__int64)v11;\n    v14 = v13;\n    dword_88C22C = v12;\n    if ( v13 )\n    {\n      if ( v11 )\n        sub_4018D0(v11);\n      return v14;\n    }\n  }\n  v14 = 0;\n  if ( dword_98A7F4 > dword_98A754 )\n    return v14;\n  v47 = a2;\n  v42 = 3 - a1;\n  v15 = qword_88C238;\n  v16 = dword_88C22C;\n  qword_88C238 = 0LL;\n  dword_88C22C = 0;\n  dword_8641C0 = a7;\n  v53 = 0;\n  qword_8641C8 = (__int64)&v53;\n  v17 = 0LL;\n  memset(&dword_8641D0, 0, 0x640uLL);\n  sub_41EFF0(sub_411330, a1, &unk_60C6B0, 0LL, srca);\n  v18 = &v55;\n  do\n  {\n    if ( !*((_DWORD *)v18 - 4) )\n      break;\n    if ( *((_DWORD *)v18 - 3) )\n    {\n      if ( *((_DWORD *)v18 - 2) )\n        v19 = *((_DWORD *)v18 - 1) ? 4LL - (*(_DWORD *)v18 < 1u) : 2LL;\n      else\n        v19 = 1LL;\n    }\n    else\n    {\n      v19 = 0LL;\n    }\n    sub_4938C0(v18 - 12, v19, 4LL, sub_4118C0);\n    ++v17;\n    v18 += 20;\n  }\n  while ( v17 < 0x169 );\n  sub_4938C0(&v53, (unsigned int)v17, 20LL, sub_411A30);\n  if ( dword_88C264 & 0x40000 )\n  {\n    sub_433F90((unsigned __int64)\"Attack moves:\");\n    v20 = &v55;\n    v21 = 0LL;\n    do\n    {\n      if ( !*((_DWORD *)v20 - 4) )\n        break;\n      sub_433F90((unsigned __int64)\"%o %1m(\");\n      if ( *((_DWORD *)v20 - 3) )\n      {\n        sub_433F90((unsigned __int64)\"%o%s%1m\");\n        if ( *((_DWORD *)v20 - 2) )\n        {\n          sub_433F90((unsigned __int64)\"%o%s%1m\");\n          if ( *((_DWORD *)v20 - 1) )\n          {\n            sub_433F90((unsigned __int64)\"%o%s%1m\");\n            if ( *(_DWORD *)v20 )\n              sub_433F90((unsigned __int64)\"%o%s%1m\");\n          }\n        }\n      }\n      sub_433F90((unsigned __int64)\"%o)\");\n      ++v21;\n      v20 += 20;\n    }\n    while ( v21 < 0x169 );\n    sub_433F90((unsigned __int64)\"%o\\n\");\n  }\n  qword_88C238 = v15;\n  dword_88C22C = v16;\n  v22 = v53;\n  if ( !v53 )\n    return 0;\n  v23 = 0LL;\n  v44 = v9;\n  while ( 1 )\n  {\n    v24 = v54[5 * v23];\n    v25 = v41;\n    if ( !(unsigned int)sub_406880(v22, v41, \"do_atari_atari-A\", v54[5 * v23], 0, 0) )\n      goto LABEL_55;\n    v48 = v23;\n    if ( v43 )\n    {\n      *(_BYTE *)(v43 + (signed int)v22) = 1;\n      if ( (signed int)sub_4083A0(v22) <= 2 )\n      {\n        v25 = 2LL;\n        v26 = sub_408410(v22, 2, (unsigned __int64)&s);\n        *(_BYTE *)(v43 + s) = 1;\n        if ( v26 == 2 )\n          *(_BYTE *)(v43 + v51) = 1;\n      }\n    }\n    if ( (unsigned __int8)(byte_98A1B0[v24] - 1) >= 2u )\n      break;\n    v27 = &v54[5 * v23];\n    v14 = sub_410BC0(v24, v25);\n    v28 = qword_88C238;\n    v29 = dword_88C22C;\n    qword_88C238 = 0LL;\n    dword_88C22C = 0;\n    v30 = sub_410C80(v27, v52);\n    qword_88C238 = v28;\n    dword_88C22C = v29;\n    v45 = v30;\n    if ( v30 > 0 )\n    {\n      v49 = v30;\n      v31 = 0LL;\n      v46 = v24;\n      while ( 1 )\n      {\n        v32 = v52[v31];\n        if ( v43 )\n          *(_BYTE *)(v43 + v32) = 1;\n        if ( (unsigned int)sub_406880(v32, v42, \"do_atari_atari-B\", v24, 0, 0) )\n        {\n          sub_44BFF0(2LL, v42);\n          sub_410F70(srca, &s);\n          v33 = sub_40FE90(v41, 0, v44);\n          sub_44BFF0(4294967294LL, 0LL);\n          if ( v33 <= (signed int)v14 )\n            v14 = v33;\n          sub_407030();\n        }\n        if ( !v14 )\n          break;\n        ++v31;\n        v24 = v46;\n        if ( v31 >= v49 )\n        {\n          sub_407030();\n          v34 = (unsigned int *)v44;\n          v35 = v47;\n          goto LABEL_57;\n        }\n      }\n      sub_407030();\n      v23 = v48;\n      goto LABEL_55;\n    }\n    sub_407030();\n    v34 = (unsigned int *)v44;\n    v35 = v47;\n    v23 = v48;\n    if ( v14 )\n    {\nLABEL_57:\n      if ( !v45 )\n      {\n        if ( v40 || dword_88C264 & 0x40000 )\n        {\n          sub_433F90((unsigned __int64)\"%oThe worm %1m can be attacked at %1m after \");\n          sub_407180();\n        }\n        if ( qword_88C238 )\n          sub_4018D0((__int64 *)qword_88C238);\n      }\n      if ( v35 )\n        *v35 = v22;\n      if ( v34 )\n      {\n        v36 = qword_88C238;\n        v37 = dword_88C22C;\n        qword_88C238 = 0LL;\n        dword_88C22C = 0;\n        if ( (unsigned int)sub_43B6F0(v24, v34) )\n        {\n          v38 = *v34;\n          if ( !(_DWORD)v38 || !(unsigned int)sub_43F100(v38, v42) )\n            goto LABEL_72;\n        }\n        else\n        {\n          *v34 = 0;\nLABEL_72:\n          if ( (unsigned int)sub_43F100(v22, v42) )\n            *v34 = v22;\n        }\n        qword_88C238 = v36;\n        dword_88C22C = v37;\n      }\n      if ( dword_88C264 & 0x40000 )\n        sub_433F90((unsigned __int64)\"%oreturn value:%d (%1m)\\n\");\n      return v14;\n    }\nLABEL_55:\n    v22 = *(&v53 + 5 * ++v23);\n    v14 = 0;\n    if ( !v22 )\n      return v14;\n  }\n  if ( v40 || dword_88C264 & 0x40000 )\n    sub_433F90((unsigned __int64)\"%oError condition found by atari_atari\\n\");\n  sub_407030();\n  return 0;\n}\n", 
            "funcStartAddr": "0x40fe90L", 
            "funcEndAddr": "0x410539L", 
            "funcName": "sub_40FE90"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_410540(__int64 a1, __int64 a2, __int64 a3, signed int a4, __int64 a5, __int64 a6)\n{\n  signed int v6; // er14\n  __int64 v7; // r15\n  __int64 v9; // [rsp+0h] [rbp-1B8h]\n\n  v6 = a4;\n  v7 = a3;\n  sub_4237B0(a1, a2, a5, a6, &v9);\n  return (signed int)sub_4105A0((unsigned int)a1, (unsigned int)a2, v7, &v9) >= v6;\n}\n", 
            "funcStartAddr": "0x410540L", 
            "funcEndAddr": "0x410593L", 
            "funcName": "sub_410540"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4105A0@<rax>(__int64 a1@<rax>, _DWORD *a2@<rdx>, __int64 a3@<rcx>, unsigned int a4@<edi>, unsigned int a5@<esi>)\n{\n  __int64 v5; // rbp\n  _DWORD *v6; // r14\n  unsigned int v7; // er15\n  unsigned int v8; // er13\n  int v9; // edx\n  signed int v10; // ebx\n  int v11; // ecx\n  signed int v12; // eax\n  int v13; // ebp\n  int v14; // eax\n  unsigned __int8 v15; // of\n  int v16; // ebx\n  __int64 v18; // [rsp+0h] [rbp-38h]\n\n  v18 = a1;\n  v5 = a3;\n  v6 = a2;\n  LODWORD(v18) = 0;\n  v7 = 0;\n  if ( dword_98A754 >= 2 )\n  {\n    v8 = 3 - a4;\n    memset(dword_863540, 0, 0x640uLL);\n    sub_40F970(3 - a4, v5);\n    sub_40FBC0(3 - a4);\n    if ( !(unsigned int)sub_406E60(a5, a4, 0LL, 0, 0) )\n    {\n      v9 = (1717986919LL * (signed int)a5 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)a5) >> 63);\n      sub_4340E0(\"engine/combination.c\", 387LL, \"trymove\", (unsigned int)(v9 - 1), a5 - 20 * v9 - 1);\n    }\n    sub_44B020(a5, a4);\n    v7 = 0;\n    v10 = sub_40FE90(v8, (unsigned int *)&v18 + 1, &v18, 0LL, 0, 0, 0, 0LL);\n    if ( v10 && (v11 = v18) != 0 )\n    {\n      v12 = v10;\n      do\n      {\n        v13 = v11;\n        dword_863540[SHIDWORD(v18)] = 1;\n        v12 = sub_40FE90(v8, (unsigned int *)&v18 + 1, &v18, 0LL, 0, 0, v12, 0LL);\n        if ( v12 < v10 )\n          break;\n        v11 = v18;\n      }\n      while ( (_DWORD)v18 );\n      sub_407030();\n      sub_44B060(v8, (char *)&v18 + 4);\n      v7 = 0;\n      sub_40F970(v8, 0LL);\n      sub_40FBC0(v8);\n      v14 = sub_40FE90(v8, 0LL, 0LL, 0LL, 0, 0, 0, 0LL);\n      v15 = __OFSUB__(v10, v14);\n      v16 = v10 - v14;\n      if ( !((unsigned __int8)((v16 < 0) ^ v15) | (v16 == 0)) )\n      {\n        if ( v6 )\n          *v6 = v13;\n        v7 = v16;\n      }\n    }\n    else\n    {\n      sub_407030();\n      sub_44B060(v8, (char *)&v18 + 4);\n    }\n  }\n  return v7;\n}\n", 
            "funcStartAddr": "0x4105a0L", 
            "funcEndAddr": "0x41075bL", 
            "funcName": "sub_4105A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_410760(int a1, unsigned int *a2, __int64 a3, int a4, int a5, int a6)\n{\n  int v6; // er13\n  int v7; // eax\n  unsigned int v8; // ebp\n  __int64 v9; // r14\n  __int64 v10; // r15\n  signed __int64 v11; // r12\n  signed __int64 v12; // rbx\n  unsigned int v13; // eax\n  __int64 v14; // rsi\n  unsigned __int64 v15; // rcx\n  __int64 v16; // rax\n  __int64 v17; // rdx\n  int v18; // ecx\n  __int64 v19; // rsi\n  int *v20; // rdx\n  __int64 v21; // rax\n  int v22; // edx\n  __int64 v23; // rax\n  __int64 v24; // rcx\n  __int64 result; // rax\n  unsigned int *v26; // r14\n  unsigned int v27; // eax\n  __int64 v28; // rdx\n  unsigned __int64 v29; // rcx\n  __int64 v30; // rax\n  __int64 v31; // rcx\n  int v32; // esi\n  __int64 v33; // rdx\n  int *v34; // rcx\n  __int64 v35; // rax\n  unsigned int v36; // eax\n  char v37; // si\n  __int64 v38; // rcx\n  __int64 v39; // rdx\n  __int64 v40; // rsi\n  int *v41; // rdx\n  __int64 v42; // rcx\n  unsigned int v43; // [rsp+Ch] [rbp-5FCh]\n  int v44; // [rsp+10h] [rbp-5F8h]\n  int v45; // [rsp+14h] [rbp-5F4h]\n  __int64 v46; // [rsp+18h] [rbp-5F0h]\n  unsigned int *v47; // [rsp+20h] [rbp-5E8h]\n  unsigned int *v48; // [rsp+28h] [rbp-5E0h]\n  int v49; // [rsp+30h] [rbp-5D8h]\n  int v50; // [rsp+34h] [rbp-5D4h]\n  int v51; // [rsp+38h] [rbp-5D0h]\n  int v52[371]; // [rsp+3Ch] [rbp-5CCh]\n\n  v6 = a6;\n  v7 = dword_565C68;\n  if ( dword_565C68 <= 0 )\n    return 0LL;\n  v45 = a5;\n  v47 = a2;\n  v48 = (unsigned int *)a3;\n  v8 = 3 - a1;\n  v44 = a4;\n  v46 = a4;\n  v9 = 0LL;\n  while ( v7 <= 0 )\n  {\nLABEL_36:\n    if ( ++v9 >= v7 )\n      return 0LL;\n  }\n  v10 = (20 * (_DWORD)v9 + 21) & 0xFFFFFFFD;\n  v11 = 0LL;\n  while ( 1 )\n  {\n    if ( v8 != (unsigned __int8)byte_98A1B0[v10 + v11] )\n      goto LABEL_35;\n    v12 = v10 + v11;\n    if ( v10 + v11 != (unsigned int)sub_40AD00((signed int)v10 + (signed int)v11) )\n      goto LABEL_35;\n    if ( v6 <= 0 )\n      goto LABEL_20;\n    v13 = sub_40A6C0(v12, 361, (__int64)&v49);\n    if ( (signed int)v13 <= 0 )\n    {\n      if ( v6 > 0 )\n        goto LABEL_35;\n      goto LABEL_20;\n    }\n    v14 = v13;\n    v15 = v13 - 1LL;\n    v16 = v13 & 3;\n    if ( v15 < 3 )\n    {\n      v17 = 0LL;\n      v18 = 0;\n      if ( !v16 )\n        goto LABEL_19;\nLABEL_17:\n      v20 = &v49 + v17;\n      v21 = -v16;\n      do\n      {\n        v18 += dword_864810[*v20];\n        ++v20;\n        ++v21;\n      }\n      while ( v21 );\n      goto LABEL_19;\n    }\n    v19 = v14 - v16;\n    v17 = 0LL;\n    v18 = 0;\n    do\n    {\n      v18 += dword_864810[v52[v17]]\n           + dword_864810[*(&v51 + v17)]\n           + dword_864810[*(&v50 + v17)]\n           + dword_864810[*(&v49 + v17)];\n      v17 += 4LL;\n    }\n    while ( v19 != v17 );\n    if ( v16 )\n      goto LABEL_17;\nLABEL_19:\n    if ( v18 < v6 )\n      goto LABEL_35;\nLABEL_20:\n    v22 = dword_863B80[v12];\n    if ( v22 == 3 )\n    {\n      LODWORD(v23) = sub_40A6C0(v12, 361, (__int64)&v49);\n      if ( (signed int)v23 <= 0 )\n        goto LABEL_35;\n      v23 = (signed int)v23;\n      v24 = 0LL;\n      while ( 1 )\n      {\n        v22 = dword_863B80[*(&v49 + v24)];\n        if ( v22 != 3 )\n          break;\n        if ( ++v24 >= v23 )\n          goto LABEL_35;\n      }\n    }\n    if ( v22 == 1 )\n    {\n      if ( !byte_98A1B0[v46] )\n        goto LABEL_30;\n      if ( (unsigned int)sub_40B720(v44, v12) )\n        break;\n    }\nLABEL_35:\n    ++v11;\n    v7 = dword_565C68;\n    if ( v11 >= dword_565C68 )\n      goto LABEL_36;\n  }\n  if ( byte_98A1B0[v46] )\n    goto LABEL_31;\nLABEL_30:\n  if ( !(unsigned int)sub_40B0A0(v44, v12) )\n    goto LABEL_35;\nLABEL_31:\n  if ( dword_88C264 & 0x40000 )\n    sub_433F90((unsigned __int64)\"Considering attack of %1m. depth = %d.\\n\");\n  if ( !(unsigned int)sub_43B050((unsigned int)v12, &v43) || dword_863540[v43] )\n    goto LABEL_35;\n  if ( v45 || dword_88C264 & 0x40000 )\n  {\n    sub_433F90((unsigned __int64)\"%oThe worm %1m can be attacked at %1m after \");\n    sub_407180();\n  }\n  v26 = v48;\n  if ( v47 )\n    *v47 = v43;\n  if ( !v26 || (unsigned int)sub_43B6F0((unsigned int)v12, v26) )\n    goto LABEL_50;\n  if ( !(unsigned int)sub_43F100(v43, v8) )\n  {\n    *v26 = 0;\nLABEL_50:\n    if ( !(dword_88C264 & 0x40000) )\n      goto LABEL_62;\nLABEL_51:\n    v27 = sub_40A6C0(v12, 361, (__int64)&v49);\n    if ( (signed int)v27 <= 0 )\n      goto LABEL_61;\n    v28 = v27;\n    v29 = v27 - 1LL;\n    v30 = v27 & 3;\n    if ( v29 >= 3 )\n    {\n      v33 = v28 - v30;\n      v31 = 0LL;\n      v32 = 0;\n      do\n      {\n        v32 += dword_864810[v52[v31]]\n             + dword_864810[*(&v51 + v31)]\n             + dword_864810[*(&v50 + v31)]\n             + dword_864810[*(&v49 + v31)];\n        v31 += 4LL;\n      }\n      while ( v33 != v31 );\n      if ( !v30 )\n        goto LABEL_61;\n    }\n    else\n    {\n      v31 = 0LL;\n      v32 = 0;\n      if ( !v30 )\n      {\nLABEL_61:\n        sub_433F90((unsigned __int64)\"%oreturn value:%d (%1m)\\n\");\n        goto LABEL_62;\n      }\n    }\n    v34 = &v49 + v31;\n    v35 = -v30;\n    do\n    {\n      v32 += dword_864810[*v34];\n      ++v34;\n      ++v35;\n    }\n    while ( v35 );\n    goto LABEL_61;\n  }\n  *v26 = v43;\n  if ( dword_88C264 & 0x40000 )\n    goto LABEL_51;\nLABEL_62:\n  v36 = sub_40A6C0(v12, 361, (__int64)&v49);\n  if ( (signed int)v36 <= 0 )\n    return 0LL;\n  v37 = v36;\n  v38 = v36 & 3;\n  if ( (unsigned __int64)v36 - 1 >= 3 )\n  {\n    v40 = v36 - v38;\n    v39 = 0LL;\n    LODWORD(result) = 0;\n    do\n    {\n      result = (unsigned int)(dword_864810[v52[v39]]\n                            + dword_864810[*(&v51 + v39)]\n                            + dword_864810[*(&v50 + v39)]\n                            + dword_864810[*(&v49 + v39)]\n                            + result);\n      v39 += 4LL;\n    }\n    while ( v40 != v39 );\n    if ( v38 )\n      goto LABEL_69;\n  }\n  else\n  {\n    v39 = 0LL;\n    result = 0LL;\n    if ( !(v37 & 3) )\n      return result;\nLABEL_69:\n    v41 = &v49 + v39;\n    v42 = -v38;\n    do\n    {\n      result = (unsigned int)(dword_864810[*v41] + result);\n      ++v41;\n      ++v42;\n    }\n    while ( v42 );\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x410760L", 
            "funcEndAddr": "0x410bb9L", 
            "funcName": "sub_410760"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_410BC0(signed int a1)\n{\n  unsigned int v1; // eax\n  char v2; // si\n  __int64 v3; // rcx\n  __int64 v4; // rdx\n  __int64 result; // rax\n  __int64 v6; // rsi\n  int *v7; // rdx\n  __int64 v8; // rcx\n  int v9; // [rsp+0h] [rbp-5A8h]\n  int v10; // [rsp+4h] [rbp-5A4h]\n  int v11; // [rsp+8h] [rbp-5A0h]\n  int v12[359]; // [rsp+Ch] [rbp-59Ch]\n\n  v1 = sub_40A6C0(a1, 361, (__int64)&v9);\n  if ( (signed int)v1 <= 0 )\n    return 0LL;\n  v2 = v1;\n  v3 = v1 & 3;\n  if ( (unsigned __int64)v1 - 1 < 3 )\n  {\n    v4 = 0LL;\n    result = 0LL;\n    if ( !(v2 & 3) )\n      return result;\n    goto LABEL_9;\n  }\n  v6 = v1 - v3;\n  v4 = 0LL;\n  LODWORD(result) = 0;\n  do\n  {\n    result = (unsigned int)(dword_864810[v12[v4]]\n                          + dword_864810[*(&v11 + v4)]\n                          + dword_864810[*(&v10 + v4)]\n                          + dword_864810[*(&v9 + v4)]\n                          + result);\n    v4 += 4LL;\n  }\n  while ( v6 != v4 );\n  if ( v3 )\n  {\nLABEL_9:\n    v7 = &v9 + v4;\n    v8 = -v3;\n    do\n    {\n      result = (unsigned int)(dword_864810[*v7] + result);\n      ++v7;\n      ++v8;\n    }\n    while ( v8 );\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x410bc0L", 
            "funcEndAddr": "0x410c7cL", 
            "funcName": "sub_410BC0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_410C80(__int64 a1, unsigned int *a2)\n{\n  __int64 v2; // r12\n  unsigned __int64 v3; // r14\n  unsigned int v4; // er13\n  __int64 v5; // r15\n  __int64 v6; // rax\n  __int64 v7; // rcx\n  int v8; // eax\n  __int64 v9; // rbx\n  __int64 v10; // rbp\n  __int64 v11; // rdi\n  __int64 v12; // rax\n  __int64 v13; // rcx\n  int v14; // eax\n  __int64 v15; // r12\n  __int64 v16; // rax\n  __int64 v17; // rdx\n  int v18; // eax\n  __int64 v19; // rbx\n  __int64 v20; // rbp\n  __int64 v21; // rdi\n  __int64 v22; // rax\n  __int64 v23; // rcx\n  __int64 v24; // rbx\n  unsigned int *v25; // rbp\n  __int64 v26; // rsi\n  unsigned int *v28; // [rsp+0h] [rbp-928h]\n  unsigned int v29; // [rsp+8h] [rbp-920h]\n  unsigned int v30; // [rsp+Ch] [rbp-91Ch]\n  int v31[4]; // [rsp+10h] [rbp-918h]\n  __int64 v32; // [rsp+20h] [rbp-908h]\n  __int64 v33; // [rsp+28h] [rbp-900h]\n  int s[400]; // [rsp+30h] [rbp-8F8h]\n  int v35[174]; // [rsp+670h] [rbp-2B8h]\n\n  v28 = a2;\n  v2 = a1;\n  memset(s, 0, 0x640uLL);\n  v3 = 0LL;\n  v4 = 0;\n  v32 = a1;\n  do\n  {\n    v5 = *(signed int *)(v2 + 4 * v3);\n    if ( !*(_DWORD *)(v2 + 4 * v3) )\n      break;\n    if ( byte_98A1B0[v5] && (unsigned int)sub_43B6F0((unsigned int)v5, &v30) )\n    {\n      v6 = (signed int)v30;\n      v7 = (signed int)v4++;\n      v28[v7] = v30;\n      if ( v4 == 361 )\n        return 361;\n      s[v6] = 1;\n      v8 = sub_408410(v5, 4, (unsigned __int64)v31);\n      if ( v8 > 0 )\n      {\n        v9 = v8;\n        v10 = 0LL;\n        do\n        {\n          v11 = v31[v10];\n          if ( !s[v11] && (unsigned int)sub_406880(v11, (unsigned __int8)byte_98A1B0[v5], \"aa_defend-A\", v5, 0, 0) )\n          {\n            if ( !(unsigned int)sub_43B050((unsigned int)v5, 0LL) )\n            {\n              v12 = v31[v10];\n              v13 = (signed int)v4++;\n              v28[v13] = v12;\n              s[v12] = 1;\n            }\n            sub_407030();\n            if ( v4 == 361 )\n              return 361;\n          }\n        }\n        while ( ++v10 < v9 );\n      }\n      v14 = sub_40A7D0(v5, (__int64)v35);\n      if ( v14 > 0 )\n      {\n        v33 = v14;\n        v15 = 0LL;\n        while ( 1 )\n        {\n          if ( (unsigned int)sub_43B050((unsigned int)v35[v15], &v29) == 5 )\n          {\n            v16 = (signed int)v29;\n            if ( !s[v29] )\n            {\n              v17 = (signed int)v4++;\n              v28[v17] = v29;\n              if ( v4 == 361 )\n                return 361;\n              s[v16] = 1;\n            }\n          }\n          v18 = sub_408410(v35[v15], 3, (unsigned __int64)v31);\n          if ( (unsigned int)(v18 - 1) <= 2 )\n            break;\nLABEL_29:\n          if ( ++v15 >= v33 )\n            goto LABEL_30;\n        }\n        v19 = v18;\n        v20 = 0LL;\n        while ( 1 )\n        {\n          v21 = v31[v20];\n          if ( !s[v21]\n            && !(unsigned int)sub_40AD70(v21, (unsigned __int8)byte_98A1B0[v5])\n            && (unsigned int)sub_406880(\n                               (unsigned int)v31[v20],\n                               (unsigned __int8)byte_98A1B0[v5],\n                               \"aa_defend-B\",\n                               v5,\n                               0,\n                               0) )\n          {\n            if ( !(unsigned int)sub_43B050((unsigned int)v5, 0LL) )\n            {\n              v22 = v31[v20];\n              v23 = (signed int)v4++;\n              v28[v23] = v22;\n              s[v22] = 1;\n            }\n            sub_407030();\n            if ( v4 == 361 )\n              return 361;\n          }\n          if ( ++v20 >= v19 )\n            goto LABEL_29;\n        }\n      }\nLABEL_30:\n      if ( dword_88C264 & 0x40000 )\n      {\n        sub_433F90((unsigned __int64)\"Defense moves for %1m:\");\n        if ( (signed int)v4 > 0 )\n        {\n          v24 = v4;\n          v25 = v28;\n          do\n          {\n            v26 = *v25;\n            sub_433F90((unsigned __int64)\"%o %1m\");\n            ++v25;\n            --v24;\n          }\n          while ( v24 );\n        }\n        sub_433F90((unsigned __int64)\"%o\\n\");\n      }\n      v2 = v32;\n    }\n    ++v3;\n  }\n  while ( v3 < 4 );\n  return v4;\n}\n", 
            "funcStartAddr": "0x410c80L", 
            "funcEndAddr": "0x410f65L", 
            "funcName": "sub_410C80"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_410F70(void *src, void *s, int a3, int a4)\n{\n  int v4; // er15\n  unsigned int v5; // ebx\n  int v6; // er8\n  int v7; // er13\n  signed int v8; // er14\n  char *v9; // r9\n  __int64 v10; // r15\n  signed __int64 v11; // r12\n  __int64 v12; // rcx\n  char v13; // si\n  int v14; // eax\n  signed __int64 v15; // rdx\n  int v16; // ebp\n  bool v17; // sf\n  unsigned __int8 v18; // of\n  int v19; // ebp\n  int v20; // ebx\n  bool v21; // sf\n  unsigned __int8 v22; // of\n  int v23; // ecx\n  int v24; // ebp\n  bool v25; // sf\n  unsigned __int8 v26; // of\n  int v27; // ebx\n  bool v28; // sf\n  unsigned __int8 v29; // of\n  signed __int64 v30; // rsi\n  int v31; // edi\n  bool v32; // sf\n  unsigned __int8 v33; // of\n  int v34; // eax\n  __int64 v35; // r15\n  __int64 v36; // r12\n  __int64 v37; // rbx\n  int v38; // ecx\n  int v39; // ecx\n  int v40; // eax\n  int v41; // edx\n  int v42; // er14\n  char *v43; // r13\n  unsigned int v44; // ebp\n  int v45; // eax\n  __int64 v46; // rcx\n  char *v47; // rdx\n  int v48; // esi\n  __int64 v49; // rdi\n  int v50; // ebp\n  __int64 v51; // rbp\n  __int64 v52; // rcx\n  __int64 v53; // rbx\n  int v54; // eax\n  int v56; // [rsp+0h] [rbp-11E8h]\n  signed int v57; // [rsp+4h] [rbp-11E4h]\n  _BYTE *v58; // [rsp+8h] [rbp-11E0h]\n  signed __int64 v59; // [rsp+10h] [rbp-11D8h]\n  __int64 v60; // [rsp+18h] [rbp-11D0h]\n  int sa[400]; // [rsp+20h] [rbp-11C8h]\n  int v62; // [rsp+660h] [rbp-B88h]\n  int v63; // [rsp+664h] [rbp-B84h]\n  int v64; // [rsp+668h] [rbp-B80h]\n  int v65[361]; // [rsp+66Ch] [rbp-B7Ch]\n  char v66; // [rsp+C10h] [rbp-5D8h]\n\n  v4 = a4;\n  v56 = a3;\n  if ( src )\n    memcpy(s, src, 0x190uLL);\n  else\n    memset(s, 0, 0x190uLL);\n  v5 = 0;\n  memset(sa, 0, 0x640uLL);\n  v6 = v56;\n  if ( v56 )\n  {\n    v58 = s;\n    v7 = 3 - v4;\n    sa[v56] = 1;\n    v62 = v56;\n    v8 = 1;\n    v9 = &v66;\n    v10 = 0LL;\n    v11 = 0LL;\n    while ( 1 )\n    {\n      if ( v8 >= 361 )\n        sub_4340E0(\"engine/combination.c\", 1229LL, \"queue_end < 19 * 19\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n      LODWORD(v12) = -1;\n      if ( v11 >= v8 )\n        goto LABEL_37;\n      v13 = v8 - v11;\n      if ( (unsigned __int64)(unsigned int)v8 + ~v11 >= 3 )\n        break;\n      v14 = 361;\n      LODWORD(v12) = -1;\n      v15 = v11;\n      if ( v13 & 3 )\n        goto LABEL_31;\nLABEL_37:\n      v60 = v10;\n      if ( v11 != (unsigned int)v12 )\n      {\n        v34 = *(&v62 + v11);\n        v12 = (signed int)v12;\n        *(&v62 + v11) = *(&v62 + (signed int)v12);\n        *(&v62 + v12) = v34;\n      }\n      v59 = v11;\n      v35 = *(&v62 + v11);\n      if ( v7 == (unsigned __int8)byte_98A1B0[v35] )\n        v58[v35] = 1;\n      v36 = 0LL;\n      do\n      {\n        v53 = dword_5641B0[v36];\n        v54 = (unsigned __int8)byte_98A1B0[v53 + v35];\n        if ( v54 != 3 )\n        {\n          v37 = v35 + v53;\n          v38 = (unsigned __int8)byte_98A1B0[v35];\n          if ( (_BYTE)v54 || v7 != v38 && (_DWORD)v35 != v6 )\n          {\n            if ( v7 == v54 && v7 != v38 )\n            {\n              v57 = v8;\n              v42 = v7;\n              v43 = v9;\n              v44 = sub_40A6C0(v37, 361, (__int64)v9);\n              v45 = (unsigned __int64)sub_4083A0(v37) - 3;\n              if ( v45 < 0 )\n                v45 = 0;\n              if ( (signed int)v44 <= 0 )\n              {\n                v6 = v56;\n                v9 = v43;\n                v7 = v42;\n                v8 = v57;\n                goto LABEL_65;\n              }\n              v46 = v44;\n              v47 = v43;\n              v6 = v56;\n              v9 = v43;\n              v7 = v42;\n              v8 = v57;\n              while ( 2 )\n              {\n                v48 = v45 + sa[v35];\n                if ( v48 <= 5 )\n                {\n                  v49 = *(signed int *)v47;\n                  v50 = sa[v49];\n                  if ( v50 )\n                  {\n                    if ( v50 >= v48 )\n                      goto LABEL_60;\n                  }\n                  else\n                  {\n                    v51 = v8++;\n                    *(&v62 + v51) = v49;\n                  }\n                  sa[v49] = v48;\n                }\nLABEL_60:\n                v47 += 4;\n                if ( !--v46 )\n                  break;\n                continue;\n              }\n            }\n          }\n          else\n          {\n            v39 = sa[v35];\n            if ( v39 <= 4 )\n            {\n              v40 = v39 + 1;\n              v41 = sa[v37];\n              if ( v41 )\n              {\n                if ( v41 <= v39 )\n                  sa[v37] = v40;\n              }\n              else\n              {\n                v52 = v8++;\n                *(&v62 + v52) = v37;\n                sa[v37] = v40;\n              }\n            }\n          }\n        }\nLABEL_65:\n        ++v36;\n      }\n      while ( v36 != 4 );\n      v11 = v59 + 1;\n      v10 = v60;\n      LOBYTE(v10) = v60 + 3;\n      if ( v59 + 1 >= v8 )\n        return 1;\n    }\n    v14 = 361;\n    LODWORD(v12) = -1;\n    v15 = v11;\n    do\n    {\n      v16 = sa[*(&v62 + v15)];\n      v18 = __OFSUB__(v16, v14);\n      v17 = v16 - v14 < 0;\n      if ( v16 <= v14 )\n        v14 = sa[*(&v62 + v15)];\n      if ( v17 ^ v18 )\n        LODWORD(v12) = v15;\n      v19 = sa[*(&v63 + v15)];\n      v20 = v15 + 1;\n      v22 = __OFSUB__(v19, v14);\n      v21 = v19 - v14 < 0;\n      if ( v19 <= v14 )\n        v14 = sa[*(&v63 + v15)];\n      if ( !(v21 ^ v22) )\n        v20 = v12;\n      v23 = sa[*(&v64 + v15)];\n      v24 = v15 + 2;\n      v26 = __OFSUB__(v23, v14);\n      v25 = v23 - v14 < 0;\n      if ( v23 <= v14 )\n        v14 = sa[*(&v64 + v15)];\n      if ( !(v25 ^ v26) )\n        v24 = v20;\n      v27 = sa[v65[v15]];\n      LODWORD(v12) = v15 + 3;\n      v29 = __OFSUB__(v27, v14);\n      v28 = v27 - v14 < 0;\n      if ( v27 <= v14 )\n        v14 = sa[v65[v15]];\n      if ( !(v28 ^ v29) )\n        LODWORD(v12) = v24;\n      v15 += 4LL;\n    }\n    while ( (unsigned int)v8 - (unsigned __int64)(((_BYTE)v8 + (_BYTE)v10) & 3) != v15 );\n    if ( !(v13 & 3) )\n      goto LABEL_37;\nLABEL_31:\n    v30 = -(signed __int64)(((_BYTE)v8 + (_BYTE)v10) & 3);\n    do\n    {\n      v31 = sa[*(&v62 + v15)];\n      v33 = __OFSUB__(v31, v14);\n      v32 = v31 - v14 < 0;\n      if ( v31 <= v14 )\n        v14 = sa[*(&v62 + v15)];\n      if ( v32 ^ v33 )\n        LODWORD(v12) = v15;\n      ++v15;\n      ++v30;\n    }\n    while ( v30 );\n    goto LABEL_37;\n  }\n  return v5;\n}\n", 
            "funcStartAddr": "0x410f70L", 
            "funcEndAddr": "0x41132bL", 
            "funcName": "sub_410F70"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_411330(int a1, unsigned int a2, __int64 a3, unsigned int a4)\n{\n  __int64 v4; // rbx\n  __int64 result; // rax\n  __int64 v6; // rbp\n  __int64 v7; // r15\n  __int64 v8; // rsi\n  int v9; // edx\n  signed int v10; // eax\n  unsigned int v11; // er13\n  unsigned int v12; // eax\n  __int64 v13; // rsi\n  unsigned __int64 v14; // rcx\n  __int64 v15; // rax\n  __int64 v16; // rdx\n  int v17; // ecx\n  __int64 v18; // rsi\n  int *v19; // rdx\n  __int64 v20; // rax\n  __int64 v21; // r14\n  _DWORD *v22; // rcx\n  __int64 v23; // rax\n  unsigned int v24; // edx\n  int v25; // esi\n  signed __int64 v26; // r12\n  int v27; // eax\n  int v28; // ecx\n  int v29; // edx\n  __int64 v30; // rax\n  __int64 v31; // rcx\n  int v32; // er14\n  _DWORD *v33; // rcx\n  __int64 v34; // rax\n  unsigned int v35; // edx\n  int v36; // esi\n  __int64 v37; // rsi\n  unsigned int v38; // [rsp+Ch] [rbp-5ECh]\n  unsigned int v39; // [rsp+10h] [rbp-5E8h]\n  __int64 v40; // [rsp+18h] [rbp-5E0h]\n  int v41; // [rsp+20h] [rbp-5D8h]\n  int v42; // [rsp+24h] [rbp-5D4h]\n  int v43; // [rsp+28h] [rbp-5D0h]\n  int v44[371]; // [rsp+2Ch] [rbp-5CCh]\n\n  v4 = a3;\n  v38 = a2;\n  v39 = a4;\n  v40 = (signed int)a4;\n  result = dword_94A490[8 * *(signed int *)(a3 + 52) + a4];\n  v6 = result + a1;\n  if ( !dword_863540[v6] )\n  {\n    if ( !(*(_BYTE *)(a3 + 152) & 1)\n      || (result = (*(__int64 (__fastcall **)(_QWORD, _QWORD, _QWORD, _QWORD))(a3 + 168))(a4, (unsigned int)v6, a2, 0LL),\n          (_DWORD)result) )\n    {\n      result = *(_QWORD *)(v4 + 160);\n      if ( !result\n        || (result = ((__int64 (__fastcall *)(__int64, _QWORD, _QWORD, _QWORD))result)(v4, v39, (unsigned int)v6, a2),\n            (_DWORD)result) )\n      {\n        if ( *(_DWORD *)(v4 + 8) > 0 )\n        {\n          v7 = 0LL;\n          do\n          {\n            if ( *(_DWORD *)(*(_QWORD *)v4 + 8 * v7 + 4) != 1 )\n              goto LABEL_82;\n            v10 = sub_40AD00(a1 + dword_94A490[8 * *(signed int *)(*(_QWORD *)v4 + 8 * v7) + v40]);\n            v11 = v10;\n            if ( dword_8641C0 > 0 )\n            {\n              v12 = sub_40A6C0(v10, 361, (__int64)&v41);\n              if ( (signed int)v12 > 0 )\n              {\n                v13 = v12;\n                v14 = v12 - 1LL;\n                v15 = v12 & 3;\n                if ( v14 >= 3 )\n                {\n                  v18 = v13 - v15;\n                  v16 = 0LL;\n                  v17 = 0;\n                  do\n                  {\n                    v17 += dword_864810[v44[v16]]\n                         + dword_864810[*(&v43 + v16)]\n                         + dword_864810[*(&v42 + v16)]\n                         + dword_864810[*(&v41 + v16)];\n                    v16 += 4LL;\n                  }\n                  while ( v18 != v16 );\n                  if ( v15 )\n                    goto LABEL_26;\n                }\n                else\n                {\n                  v16 = 0LL;\n                  v17 = 0;\n                  if ( !v15 )\n                    goto LABEL_28;\nLABEL_26:\n                  v19 = &v41 + v16;\n                  v20 = -v15;\n                  do\n                  {\n                    v17 += dword_864810[*v19];\n                    ++v19;\n                    ++v20;\n                  }\n                  while ( v20 );\n                }\nLABEL_28:\n                if ( v17 < dword_8641C0 )\n                  goto LABEL_82;\n                goto LABEL_29;\n              }\n              if ( dword_8641C0 > 0 )\n                goto LABEL_82;\n            }\nLABEL_29:\n            v21 = qword_8641C8;\n            v22 = (_DWORD *)qword_8641C8;\n            v23 = 0LL;\n            while ( 1 )\n            {\n              if ( *v22 == (_DWORD)v6 || !*v22 )\n              {\n                v24 = v23;\n                goto LABEL_40;\n              }\n              v24 = v23 + 1;\n              if ( (unsigned __int64)(v23 + 1) >= 0x169 )\n                break;\n              v25 = v22[5];\n              if ( v25 == (_DWORD)v6 || !v25 )\n                goto LABEL_40;\n              v23 += 2LL;\n              v22 += 10;\n            }\n            if ( (_DWORD)v23 == 360 )\n              goto LABEL_82;\n            v24 = 361;\nLABEL_40:\n            v26 = 5LL * v24;\n            if ( *(_DWORD *)(qword_8641C8 + 20LL * v24) )\n            {\n              if ( !v11 )\n                goto LABEL_82;\n              v27 = sub_40AD00(v11);\n              v28 = *(_DWORD *)(v21 + 4 * v26 + 4);\n              if ( v28 != v27 )\n              {\n                if ( v28 )\n                {\n                  v28 = *(_DWORD *)(v21 + 4 * v26 + 8);\n                  if ( v28 != v27 )\n                  {\n                    if ( v28 )\n                    {\n                      v28 = *(_DWORD *)(v21 + 4 * v26 + 12);\n                      if ( v28 != v27 )\n                      {\n                        if ( v28 )\n                        {\n                          v28 = *(_DWORD *)(v21 + 4 * v26 + 16);\n                          if ( v28 != v27 )\n                          {\n                            if ( v28 )\n                              goto LABEL_82;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              if ( v28 == v27 )\n                goto LABEL_82;\n            }\n            v29 = dword_863B80[v11];\n            if ( v29 == 3 )\n            {\n              LODWORD(v30) = sub_40A6C0(v11, 361, (__int64)&v41);\n              if ( (signed int)v30 <= 0 )\n                goto LABEL_82;\n              v30 = (signed int)v30;\n              v31 = 0LL;\n              while ( 1 )\n              {\n                v29 = dword_863B80[*(&v41 + v31)];\n                if ( v29 != 3 )\n                  break;\n                if ( ++v31 >= v30 )\n                  goto LABEL_82;\n              }\n            }\n            if ( v29 == 1\n              && (*(_BYTE *)(v4 + 120) & 0x10\n               || !(unsigned int)sub_40AD70(v6, v38)\n               || (signed int)sub_4083A0(v11) <= 2 && (unsigned int)sub_43F100((unsigned int)v6, v38))\n              && (unsigned int)sub_406880((unsigned int)v6, v38, \"attack_callback\", v11, 0, 0) )\n            {\n              v41 = 0;\n              if ( !byte_98A1B0[v11] )\n              {\n                sub_407030();\n                if ( !(*(_BYTE *)(v4 + 121) & 1) )\n                  goto LABEL_80;\nLABEL_67:\n                v33 = (_DWORD *)qword_8641C8;\n                v34 = 0LL;\n                while ( 1 )\n                {\n                  if ( *v33 == (_DWORD)v6 || !*v33 )\n                  {\n                    v35 = v34;\n                    goto LABEL_79;\n                  }\n                  v35 = v34 + 1;\n                  if ( (unsigned __int64)(v34 + 1) >= 0x169 )\n                    break;\n                  v36 = v33[5];\n                  if ( v36 == (_DWORD)v6 || !v36 )\n                    goto LABEL_79;\n                  v34 += 2LL;\n                  v33 += 10;\n                }\n                if ( (_DWORD)v34 == 360 )\n                  goto LABEL_80;\n                v35 = 361;\nLABEL_79:\n                if ( !*(_DWORD *)(qword_8641C8 + 20LL * v35) )\n                {\n                  if ( dword_88C264 & 0x40000 )\n                  {\n                    v8 = *(_QWORD *)(v4 + 16);\n                    sub_433F90((unsigned __int64)\"aa_attack pattern %s+%d (conditional) found threat on %1m at %1m with code %d\\n\");\n                  }\n                  v9 = dword_8641D0[v6];\n                  if ( v9 )\n                  {\n                    if ( v9 != v11 )\n                    {\n                      sub_4117B0(qword_8641C8, (unsigned int)v6);\n                      sub_4117B0(qword_8641C8, (unsigned int)v6);\n                    }\n                  }\n                  else\n                  {\n                    dword_8641D0[v6] = v11;\n                  }\n                }\n                else\n                {\nLABEL_80:\n                  sub_4117B0(qword_8641C8, (unsigned int)v6);\n                  if ( dword_88C264 & 0x40000 )\n                  {\n                    v37 = *(_QWORD *)(v4 + 16);\n                    sub_433F90((unsigned __int64)\"aa_attack pattern %s+%d found threat on %1m at %1m with code %d\\n\");\n                  }\n                }\n                goto LABEL_82;\n              }\n              v32 = sub_43B050(v11, &v41);\n              sub_407030();\n              if ( v32 )\n                goto LABEL_67;\n            }\nLABEL_82:\n            ++v7;\n            result = *(signed int *)(v4 + 8);\n          }\n          while ( v7 < result );\n        }\n      }\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x411330L", 
            "funcEndAddr": "0x4117a6L", 
            "funcName": "sub_411330"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4117B0(__int64 a1, int a2, int a3)\n{\n  unsigned __int64 v3; // rbx\n  __int64 result; // rax\n  int v5; // ecx\n  bool v6; // zf\n  _DWORD *v7; // rcx\n  int v8; // edx\n  unsigned int v9; // esi\n  __int64 v10; // rdx\n\n  v3 = 1LL;\n  for ( result = a1; ; result += 40LL )\n  {\n    if ( *(_DWORD *)result == a2 || !*(_DWORD *)result )\n    {\n      LODWORD(v3) = v3 - 1;\n      goto LABEL_11;\n    }\n    if ( v3 >= 0x169 )\n      break;\n    v5 = *(_DWORD *)(result + 20);\n    if ( v5 == a2 || !v5 )\n      goto LABEL_11;\n    v3 += 2LL;\n  }\n  v6 = (_DWORD)v3 == 361;\n  LODWORD(v3) = 361;\n  if ( v6 )\n    return result;\nLABEL_11:\n  result = sub_40AD00(a3);\n  v7 = (_DWORD *)(a1 + 20LL * (unsigned int)v3);\n  if ( *(_DWORD *)(a1 + 20LL * (unsigned int)v3) )\n  {\n    v8 = *(_DWORD *)(a1 + 20LL * (unsigned int)v3 + 4);\n    v9 = 0;\n    if ( v8 == (_DWORD)result\n      || !v8\n      || (v8 = *(_DWORD *)(a1 + 20LL * (unsigned int)v3 + 8), v9 = 1, v8 == (_DWORD)result)\n      || !v8\n      || (v8 = *(_DWORD *)(a1 + 20LL * (unsigned int)v3 + 12), v9 = 2, v8 == (_DWORD)result)\n      || !v8\n      || (v8 = *(_DWORD *)(a1 + 20LL * (unsigned int)v3 + 16), v9 = 3, v8 == (_DWORD)result)\n      || !v8 )\n    {\n      if ( v8 != (_DWORD)result )\n      {\n        v7[v9 + 1] = result;\n        if ( v9 != 3 )\n          v7[v9 + 2] = 0;\n      }\n    }\n  }\n  else\n  {\n    *v7 = a2;\n    *(_DWORD *)(a1 + 20LL * (unsigned int)v3 + 4) = result;\n    *(_DWORD *)(a1 + 20LL * (unsigned int)v3 + 8) = 0;\n    if ( (unsigned int)v3 <= 0x167 )\n    {\n      v10 = (unsigned int)(v3 + 1);\n      result = 5 * v10;\n      *(_DWORD *)(a1 + 20 * v10) = 0;\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4117b0L", 
            "funcEndAddr": "0x4118b1L", 
            "funcName": "sub_4117B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4118C0(signed int *a1, signed int *a2)\n{\n  unsigned int v2; // eax\n  int v3; // ebp\n  int v4; // ebx\n  __int64 v5; // rdx\n  unsigned __int64 v6; // rcx\n  __int64 v7; // rax\n  __int64 v8; // rcx\n  __int64 v9; // rdx\n  int *v10; // rcx\n  __int64 v11; // rax\n  unsigned int v12; // eax\n  __int64 v13; // rdx\n  unsigned __int64 v14; // rcx\n  __int64 v15; // rax\n  __int64 v16; // rcx\n  __int64 v17; // rdx\n  int *v18; // rcx\n  __int64 v19; // rax\n  int v21; // [rsp+0h] [rbp-5C8h]\n  int v22; // [rsp+4h] [rbp-5C4h]\n  int v23; // [rsp+8h] [rbp-5C0h]\n  int v24[367]; // [rsp+Ch] [rbp-5BCh]\n\n  v2 = sub_40A6C0(*a1, 361, (__int64)&v21);\n  v3 = 0;\n  v4 = 0;\n  if ( (signed int)v2 > 0 )\n  {\n    v5 = v2;\n    v6 = v2 - 1LL;\n    v7 = v2 & 3;\n    if ( v6 < 3 )\n    {\n      v8 = 0LL;\n      v4 = 0;\n      if ( !v7 )\n        goto LABEL_10;\n      goto LABEL_8;\n    }\n    v9 = v5 - v7;\n    v8 = 0LL;\n    v4 = 0;\n    do\n    {\n      v4 += dword_864810[v24[v8]] + dword_864810[*(&v23 + v8)] + dword_864810[*(&v22 + v8)] + dword_864810[*(&v21 + v8)];\n      v8 += 4LL;\n    }\n    while ( v9 != v8 );\n    if ( v7 )\n    {\nLABEL_8:\n      v10 = &v21 + v8;\n      v11 = -v7;\n      do\n      {\n        v4 += dword_864810[*v10];\n        ++v10;\n        ++v11;\n      }\n      while ( v11 );\n      goto LABEL_10;\n    }\n  }\nLABEL_10:\n  v12 = sub_40A6C0(*a2, 361, (__int64)&v21);\n  if ( (signed int)v12 <= 0 )\n    return (unsigned int)(v4 - v3);\n  v13 = v12;\n  v14 = v12 - 1LL;\n  v15 = v12 & 3;\n  if ( v14 < 3 )\n  {\n    v16 = 0LL;\n    v3 = 0;\n    if ( !v15 )\n      return (unsigned int)(v4 - v3);\n    goto LABEL_17;\n  }\n  v17 = v13 - v15;\n  v16 = 0LL;\n  v3 = 0;\n  do\n  {\n    v3 += dword_864810[v24[v16]]\n        + dword_864810[*(&v23 + v16)]\n        + dword_864810[*(&v22 + v16)]\n        + dword_864810[*(&v21 + v16)];\n    v16 += 4LL;\n  }\n  while ( v17 != v16 );\n  if ( v15 )\n  {\nLABEL_17:\n    v18 = &v21 + v16;\n    v19 = -v15;\n    do\n    {\n      v3 += dword_864810[*v18];\n      ++v18;\n      ++v19;\n    }\n    while ( v19 );\n  }\n  return (unsigned int)(v4 - v3);\n}\n", 
            "funcStartAddr": "0x4118c0L", 
            "funcEndAddr": "0x411a24L", 
            "funcName": "sub_4118C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_411A30(__int64 a1, __int64 a2)\n{\n  unsigned int v2; // eax\n  int v3; // ebp\n  int v4; // ebx\n  __int64 v5; // rdx\n  unsigned __int64 v6; // rcx\n  __int64 v7; // rax\n  __int64 v8; // rcx\n  __int64 v9; // rdx\n  int *v10; // rcx\n  __int64 v11; // rax\n  unsigned int v12; // eax\n  __int64 v13; // rdx\n  unsigned __int64 v14; // rcx\n  __int64 v15; // rax\n  __int64 v16; // rcx\n  __int64 v17; // rdx\n  int *v18; // rcx\n  __int64 v19; // rax\n  int v21; // [rsp+0h] [rbp-5C8h]\n  int v22; // [rsp+4h] [rbp-5C4h]\n  int v23; // [rsp+8h] [rbp-5C0h]\n  int v24[367]; // [rsp+Ch] [rbp-5BCh]\n\n  v2 = sub_40A6C0(*(_DWORD *)(a1 + 4), 361, (__int64)&v21);\n  v3 = 0;\n  v4 = 0;\n  if ( (signed int)v2 > 0 )\n  {\n    v5 = v2;\n    v6 = v2 - 1LL;\n    v7 = v2 & 3;\n    if ( v6 < 3 )\n    {\n      v8 = 0LL;\n      v4 = 0;\n      if ( !v7 )\n        goto LABEL_10;\n      goto LABEL_8;\n    }\n    v9 = v5 - v7;\n    v8 = 0LL;\n    v4 = 0;\n    do\n    {\n      v4 += dword_864810[v24[v8]] + dword_864810[*(&v23 + v8)] + dword_864810[*(&v22 + v8)] + dword_864810[*(&v21 + v8)];\n      v8 += 4LL;\n    }\n    while ( v9 != v8 );\n    if ( v7 )\n    {\nLABEL_8:\n      v10 = &v21 + v8;\n      v11 = -v7;\n      do\n      {\n        v4 += dword_864810[*v10];\n        ++v10;\n        ++v11;\n      }\n      while ( v11 );\n      goto LABEL_10;\n    }\n  }\nLABEL_10:\n  v12 = sub_40A6C0(*(_DWORD *)(a2 + 4), 361, (__int64)&v21);\n  if ( (signed int)v12 <= 0 )\n    return (unsigned int)(v4 - v3);\n  v13 = v12;\n  v14 = v12 - 1LL;\n  v15 = v12 & 3;\n  if ( v14 < 3 )\n  {\n    v16 = 0LL;\n    v3 = 0;\n    if ( !v15 )\n      return (unsigned int)(v4 - v3);\n    goto LABEL_17;\n  }\n  v17 = v13 - v15;\n  v16 = 0LL;\n  v3 = 0;\n  do\n  {\n    v3 += dword_864810[v24[v16]]\n        + dword_864810[*(&v23 + v16)]\n        + dword_864810[*(&v22 + v16)]\n        + dword_864810[*(&v21 + v16)];\n    v16 += 4LL;\n  }\n  while ( v17 != v16 );\n  if ( v15 )\n  {\nLABEL_17:\n    v18 = &v21 + v16;\n    v19 = -v15;\n    do\n    {\n      v3 += dword_864810[*v18];\n      ++v18;\n      ++v19;\n    }\n    while ( v19 );\n  }\n  return (unsigned int)(v4 - v3);\n}\n", 
            "funcStartAddr": "0x411a30L", 
            "funcEndAddr": "0x411b94L", 
            "funcName": "sub_411A30"
        }, 
        {
            "decompiledFuncCode": "char *__fastcall sub_411BA0(signed int a1)\n{\n  int v1; // edx\n  int v3; // eax\n\n  if ( (unsigned int)a1 > 0x1A4\n    || byte_98A1B0[a1] == 3\n    || (v3 = *((_DWORD *)&xmmword_954FB0 + 19 * a1 + 1), v3 < 0)\n    || v3 >= dword_98A7DC )\n  {\n    v1 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/dragon.c\",\n      86LL,\n      \"ON_BOARD1(pos) && dragon[pos].id >= 0 && dragon[pos].id < number_of_dragons\",\n      (unsigned int)(v1 - 1),\n      (unsigned int)(a1 - 20 * v1 - 1));\n  }\n  return (char *)ptr + 104 * v3;\n}\n", 
            "funcStartAddr": "0x411ba0L", 
            "funcEndAddr": "0x411c25L", 
            "funcName": "sub_411BA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_411C30(__int64 a1, int a2, int a3)\n{\n  int v3; // er14\n  signed __int64 v4; // rbp\n  signed __int64 v5; // rbx\n  signed __int64 v6; // rax\n  int *v7; // rcx\n  char v8; // dl\n  signed __int64 v9; // rsi\n  int v10; // edx\n  char *v11; // rax\n  signed __int64 v12; // rcx\n  signed __int64 v13; // rdx\n  signed __int64 v14; // rbx\n  signed __int64 i; // rbp\n  unsigned int v16; // er14\n  unsigned __int64 v17; // rbp\n  signed __int64 v18; // rbx\n  char v19; // al\n  __int64 v20; // rsi\n  unsigned __int64 v21; // r15\n  signed __int64 v22; // rcx\n  signed __int64 v23; // rsi\n  int v24; // edi\n  __int64 v25; // r8\n  signed __int64 v26; // rbx\n  signed __int64 v27; // rbp\n  signed __int64 v28; // rbp\n  signed int v29; // er12\n  int *v30; // r13\n  int v31; // eax\n  int v32; // ecx\n  int v33; // edx\n  int v34; // edx\n  int v35; // edx\n  unsigned __int64 j; // r15\n  int v37; // ebx\n  int v38; // eax\n  unsigned int v39; // ebx\n  signed __int64 v40; // rbx\n  __int64 v41; // rbp\n  __int64 v42; // rdi\n  unsigned __int64 v43; // rsi\n  signed int v44; // er12\n  char *v45; // rax\n  __int64 v46; // rcx\n  __int64 v47; // rdi\n  unsigned __int64 v48; // rsi\n  signed int v49; // er12\n  char *v50; // rax\n  __int64 v51; // rcx\n  signed __int64 v52; // rbx\n  signed __int64 v53; // rbp\n  signed __int64 v54; // rax\n  int (*v55)[]; // rcx\n  char v56; // dl\n  char *v57; // rcx\n  __int64 v58; // rax\n  __int64 v59; // rsi\n  __int64 v60; // rdx\n  _DWORD *v61; // rdi\n  int v62; // ebx\n  char *v63; // rcx\n  __int64 v64; // rax\n  unsigned __int64 v65; // rbp\n  signed __int64 v66; // rbx\n  char v67; // al\n  char *v68; // r15\n  int v69; // er14\n  signed int v70; // er15\n  __int64 v71; // r14\n  int v72; // eax\n  signed __int64 v73; // rcx\n  signed int v74; // esi\n  signed __int64 v75; // rax\n  int *v76; // rcx\n  signed __int64 v77; // rdx\n  signed __int64 v78; // rdx\n  signed __int64 v79; // rax\n  int *v80; // rcx\n  signed __int64 v81; // rdx\n  int v82; // esi\n  int v83; // edx\n  int v84; // esi\n  unsigned int v85; // er15\n  __int64 v86; // rcx\n  signed __int64 v87; // rbx\n  __int64 v88; // rax\n  int v89; // ecx\n  void *v90; // r14\n  signed __int64 v91; // r13\n  signed __int64 v92; // rbp\n  unsigned int v93; // er12\n  int v94; // eax\n  int v95; // eax\n  signed __int64 v96; // rbp\n  unsigned int v97; // ebx\n  signed __int64 v98; // rdx\n  __int64 v99; // rax\n  int v100; // edx\n  signed __int64 v101; // rdx\n  int v102; // edx\n  __int64 v103; // rsi\n  signed __int64 v104; // rdx\n  int v105; // edx\n  __int64 v106; // rsi\n  int v107; // er14\n  __int64 v108; // rdx\n  __int64 v109; // rcx\n  int v110; // er14\n  __int64 v111; // rdx\n  __int64 v112; // rcx\n  signed __int64 v113; // r12\n  char *v114; // r13\n  __int64 v115; // rax\n  signed __int64 v116; // rcx\n  int v117; // ebx\n  int *v118; // r15\n  signed __int64 v119; // r14\n  int v120; // ebp\n  __int64 v121; // rdx\n  __int64 v122; // rcx\n  __int64 result; // rax\n  signed __int64 v124; // rbx\n  float *v125; // r14\n  signed __int64 v126; // rcx\n  float v127; // xmm0_4\n  float v128; // xmm1_4\n  int v129; // ebp\n  int v130; // eax\n  int v131; // eax\n  int v132; // ecx\n  int v133; // eax\n  int v134; // eax\n  signed __int64 v135; // rax\n  __int128 *v136; // rcx\n  signed int v137; // edx\n  signed __int64 v138; // rax\n  int *v139; // rcx\n  signed __int64 v140; // rdx\n  signed __int64 v141; // rdx\n  int v142; // eax\n  signed __int64 v143; // rax\n  signed __int64 v144; // rbp\n  signed __int64 v145; // rbx\n  char v146; // al\n  signed __int64 v147; // rcx\n  float v148; // xmm0_4\n  float v149; // xmm1_4\n  int v150; // er13\n  int v151; // er14\n  signed __int64 v152; // rax\n  int *v153; // rcx\n  signed __int64 v154; // rdx\n  signed __int64 v155; // rdx\n  signed __int64 v156; // rbx\n  signed __int64 v157; // rbp\n  int v158; // eax\n  char *v159; // rcx\n  __int64 v160; // rsi\n  __int64 v161; // rsi\n  char *v162; // rax\n  __int64 v163; // r13\n  __int64 v164; // rsi\n  signed int v165; // ecx\n  signed __int64 v166; // rbp\n  __int64 v167; // r12\n  int v168; // er15\n  int v169; // er14\n  int v170; // eax\n  signed __int64 v171; // rbx\n  int v172; // ecx\n  int v173; // eax\n  int v174; // er14\n  _DWORD *v175; // rbp\n  unsigned __int64 v176; // rbx\n  char v177; // r14\n  int *v178; // rbp\n  int v179; // er15\n  signed __int64 v180; // rbx\n  __int64 v181; // rax\n  signed __int64 v182; // rax\n  __int64 v183; // rax\n  signed __int64 v184; // rax\n  __int64 v185; // rax\n  signed __int64 v186; // rax\n  __int64 v187; // rax\n  signed __int64 v188; // rax\n  signed __int64 v189; // rbp\n  signed int v190; // er15\n  signed __int64 v191; // rbx\n  signed __int64 v192; // rax\n  _DWORD *v193; // rcx\n  signed __int64 v194; // rbx\n  int v195; // eax\n  int *v196; // rbp\n  __int64 v197; // rcx\n  __int64 v198; // rdx\n  signed __int64 v199; // rsi\n  signed __int64 v200; // rbp\n  signed __int64 v201; // rbx\n  char v202; // al\n  __int64 v203; // rax\n  signed __int64 v204; // rcx\n  int v205; // ebx\n  signed int *v206; // rcx\n  int v207; // edx\n  signed __int64 v208; // rsi\n  int v209; // [rsp+4h] [rbp-E84h]\n  __int64 v210; // [rsp+8h] [rbp-E80h]\n  int v211; // [rsp+14h] [rbp-E74h]\n  __int64 v212; // [rsp+18h] [rbp-E70h]\n  __int64 v213; // [rsp+20h] [rbp-E68h]\n  __int64 v214; // [rsp+28h] [rbp-E60h]\n  __int64 v215; // [rsp+30h] [rbp-E58h]\n  int v216; // [rsp+38h] [rbp-E50h]\n  int v217; // [rsp+3Ch] [rbp-E4Ch]\n  int v218; // [rsp+40h] [rbp-E48h]\n  char v219; // [rsp+44h] [rbp-E44h]\n  int v220[20]; // [rsp+180h] [rbp-D08h]\n  int v221; // [rsp+1D0h] [rbp-CB8h]\n  int v222[398]; // [rsp+1D4h] [rbp-CB4h]\n  int v223; // [rsp+80Ch] [rbp-67Ch]\n  int s[100]; // [rsp+810h] [rbp-678h]\n  char v225[1196]; // [rsp+9A0h] [rbp-4E8h]\n  int v226; // [rsp+E4Ch] [rbp-3Ch]\n  int v227[14]; // [rsp+E50h] [rbp-38h]\n\n  v216 = a3;\n  v217 = a2;\n  v213 = a1;\n  sub_44E060(2LL);\n  byte_864E50 = 0;\n  sub_413F20();\n  v3 = 0;\n  sub_424410(dword_96CAB0, dword_977370, 0LL);\n  sub_44E0B0(2LL, \"  time to make domains\", 0LL);\n  sub_465A70();\n  sub_44E0B0(2LL, \"  time to find connections\", 0LL);\n  if ( !dword_565C84 )\n  {\n    v4 = 4611686018427384493LL;\n    v5 = 21LL;\n    do\n    {\n      if ( byte_98A1B0[v5] != 3 )\n      {\n        if ( dword_9702F0[v4] == 5 && v5 == dword_9702FC[v4] && (!(unsigned int)sub_40B8D0(v5) || dword_9702F4[v4] >= 2) )\n          sub_414030((unsigned int)v5, dword_96CAB0);\n        if ( dword_97ABB0[v4] == 4 && v5 == dword_97ABBC[v4] && (!(unsigned int)sub_40B8D0(v5) || dword_97ABB4[v4] >= 2) )\n          sub_414030((unsigned int)v5, dword_977370);\n      }\n      ++v5;\n      v4 += 9LL;\n    }\n    while ( v4 * 4 );\n    sub_44E0B0(2LL, \"  time to amalgamate dragons\", 0LL);\n  }\n  dword_98A7DC = 0;\n  v6 = -379LL;\n  v7 = &dword_9555F4;\n  do\n  {\n    v8 = byte_98A340[v6];\n    if ( v8 && v8 != 3 )\n    {\n      v9 = 76LL * *v7;\n      v10 = *(_DWORD *)((char *)&xmmword_954FB0 + v9 + 4);\n      if ( v10 == -1 )\n      {\n        *(_DWORD *)((char *)&xmmword_954FB0 + v9 + 4) = v3;\n        v10 = v3;\n        dword_98A7DC = v3++ + 1;\n      }\n      *(v7 - 1) = v10;\n    }\n    v7 += 19;\n    ++v6;\n  }\n  while ( v6 );\n  if ( ptr )\n  {\n    free(ptr);\n    v3 = dword_98A7DC;\n  }\n  v11 = (char *)malloc(104LL * v3);\n  ptr = v11;\n  if ( !v11 )\n    sub_4340E0(\"engine/dragon.c\", 773LL, \"dragon2 != ((void*)0)\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  v12 = 4611686018427380703LL;\n  v13 = 21LL;\n  do\n  {\n    if ( (unsigned __int8)(byte_98A1B0[v13] - 1) <= 1u && v13 == dword_95C678[v12] )\n      *(_DWORD *)&v11[104 * dword_95C674[v12]] = v13;\n    ++v13;\n    v12 += 19LL;\n  }\n  while ( v12 * 4 );\n  if ( dword_98A7DC > 0 )\n  {\n    v14 = 1LL;\n    for ( i = 76LL; ; i += 104LL )\n    {\n      *(_OWORD *)&v11[i - 32] = xmmword_4AE080;\n      *(_DWORD *)&v11[i - 16] = -1;\n      *(_DWORD *)&v11[i - 4] = 0;\n      *(_OWORD *)&v11[i + 4] = xmmword_4AE090;\n      *(_DWORD *)&v11[i + 20] = 0;\n      sub_425C00(&v11[i], 0LL, 0LL, 0LL, 0LL);\n      if ( v14 >= dword_98A7DC )\n        break;\n      v11 = (char *)ptr;\n      ++v14;\n    }\n  }\n  byte_864E50 = 1;\n  v16 = v213 - 1;\n  v17 = -28804LL;\n  v18 = 21LL;\n  do\n  {\n    v19 = byte_98A1B0[v18];\n    if ( v19 != 3 )\n    {\n      if ( v19 )\n      {\n        if ( v18 == dword_90E63C[5 * v17 / 4] )\n        {\n          v20 = dword_90E650[5 * v17 / 4];\n          if ( dword_90E650[5 * v17 / 4] )\n          {\n            v21 = 380 * v20;\n            if ( dword_8E9524[95 * v20] )\n            {\n              if ( v16 <= 1 )\n                sub_420250((unsigned int)v18, v20, v13);\n              v13 = dword_95C678[v17 / 4];\n              v22 = 104LL * *((signed int *)&xmmword_954FB0 + 19 * v13 + 1);\n              if ( !*(_DWORD *)((char *)ptr + v22 + 84)\n                || (v23 = 95LL * *(signed int *)((char *)ptr + v22 + 84),\n                    v24 = *(_DWORD *)((char *)&qword_8E9494 + v23 * 4),\n                    *(_DWORD *)((char *)&qword_8E9494 + v21) > v24)\n                || *(_DWORD *)((char *)&qword_8E9494 + v21) == v24 && dword_8E9480[v21 / 4] < dword_8E9480[v23] )\n              {\n                *(_DWORD *)((char *)ptr + v22 + 84) = dword_8E947C[v21 / 4];\n                if ( dword_88C268 )\n                {\n                  v25 = *(unsigned int *)((char *)&qword_8E9494 + v21);\n                  sub_433F90((unsigned __int64)\"at %1m setting %1m.lunch to %1m (cutstone=%d)\\n\");\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    ++v18;\n    v17 += 76LL;\n  }\n  while ( v17 );\n  sub_427710(2LL, dword_96CAB0, &unk_9634B0, 0LL);\n  sub_427710(1LL, dword_977370, &unk_9634B0, 0LL);\n  sub_465AA0();\n  v26 = 4611686018427384493LL;\n  v27 = 21LL;\n  do\n  {\n    if ( byte_98A1B0[v27] != 3 )\n    {\n      if ( dword_9702F0[v26] == 5 && v27 == dword_9702FC[v26] )\n      {\n        sub_425500(v27, (unsigned __int64)&v221, (unsigned __int64)s);\n        if ( dword_88C264 & 2 )\n        {\n          sub_426340(&v221, &v221);\n          sub_433F90((unsigned __int64)\"Black eyespace at %1m: %s\\n\");\n        }\n        dword_970300[v26] = v221;\n        dword_970304[v26] = s[0];\n        dword_970308[v26] = v218;\n        sub_425340((unsigned int)v27, dword_96CAB0);\n      }\n      if ( dword_97ABB0[v26] == 4 && v27 == dword_97ABBC[v26] )\n      {\n        sub_425500(v27, (unsigned __int64)&v221, (unsigned __int64)s);\n        if ( dword_88C264 & 2 )\n        {\n          sub_426340(&v221, &v221);\n          sub_433F90((unsigned __int64)\"White eyespace at %1m: %s\\n\");\n        }\n        dword_97ABC0[v26] = v221;\n        dword_97ABC4[v26] = s[0];\n        dword_97ABC8[v26] = v218;\n        sub_425340((unsigned int)v27, dword_977370);\n      }\n    }\n    ++v27;\n    v26 += 9LL;\n  }\n  while ( v26 * 4 );\n  v28 = 21LL;\n  do\n  {\n    if ( byte_98A1B0[v28] != 3 )\n    {\n      dword_986FA0[v28] = 0;\n      if ( byte_9634B4[48 * v28] )\n      {\n        if ( dword_977370[9 * v28] == 4 )\n        {\n          LODWORD(v210) = 4;\n          v29 = 1;\n          v30 = dword_977370;\n        }\n        else\n        {\n          if ( dword_96CAB0[9 * v28] != 5 )\n            goto LABEL_107;\n          LODWORD(v210) = 5;\n          v29 = 2;\n          v30 = dword_96CAB0;\n        }\n        v31 = dword_5641B0[0];\n        v32 = (unsigned __int8)byte_98A1B0[dword_5641B0[0] + (signed __int64)(signed int)v28];\n        if ( v32 == 3 || v29 == v32 || v30[9 * (dword_5641B0[0] + (signed __int64)(signed int)v28)] == (_DWORD)v210 )\n        {\n          v33 = (unsigned __int8)byte_98A1B0[dword_5641B4 + (signed __int64)(signed int)v28];\n          if ( v33 == 3 || v29 == v33 || v30[9 * ((signed int)v28 + (signed __int64)dword_5641B4)] == (_DWORD)v210 )\n          {\n            v34 = (unsigned __int8)byte_98A1B0[dword_5641B8 + (signed __int64)(signed int)v28];\n            if ( v34 == 3 || v29 == v34 || v30[9 * ((signed int)v28 + (signed __int64)dword_5641B8)] == (_DWORD)v210 )\n            {\n              v35 = (unsigned __int8)byte_98A1B0[dword_5641BC + (signed __int64)(signed int)v28];\n              if ( v35 == 3 || v29 == v35 || v30[9 * ((signed int)v28 + (signed __int64)dword_5641BC)] == (_DWORD)v210 )\n              {\n                for ( j = 1LL; ; ++j )\n                {\n                  v37 = v31;\n                  v38 = (unsigned __int8)byte_98A1B0[v31 + (signed __int64)(signed int)v28];\n                  if ( v38 != 3 && v29 == v38 )\n                  {\n                    memset(s, 0, 0x190uLL);\n                    memset(&v218, 0, 0x190uLL);\n                    *((_BYTE *)s + v28) = 1;\n                    if ( byte_98A1B0[dword_5641B0[0] + (signed __int64)(signed int)v28] != 3 )\n                      *((_BYTE *)s + (signed int)v28 + (signed __int64)dword_5641B0[0]) = 1;\n                    if ( byte_98A1B0[dword_5641B4 + (signed __int64)(signed int)v28] != 3 )\n                      *((_BYTE *)s + (signed int)v28 + (signed __int64)dword_5641B4) = 1;\n                    if ( byte_98A1B0[dword_5641B8 + (signed __int64)(signed int)v28] != 3 )\n                      *((_BYTE *)s + (signed int)v28 + (signed __int64)dword_5641B8) = 1;\n                    if ( byte_98A1B0[dword_5641BC + (signed __int64)(signed int)v28] != 3 )\n                      *((_BYTE *)s + (signed int)v28 + (signed __int64)dword_5641BC) = 1;\n                    if ( byte_98A1B0[dword_5641C0[0] + (signed __int64)(signed int)v28] != 3 )\n                      *((_BYTE *)s + (signed int)v28 + (signed __int64)dword_5641C0[0]) = 1;\n                    if ( byte_98A1B0[dword_5641C4 + (signed __int64)(signed int)v28] != 3 )\n                      *((_BYTE *)s + (signed int)v28 + (signed __int64)dword_5641C4) = 1;\n                    v39 = v28 + v37;\n                    if ( byte_98A1B0[dword_5641C8 + (signed __int64)(signed int)v28] != 3 )\n                      *((_BYTE *)s + (signed int)v28 + (signed __int64)dword_5641C8) = 1;\n                    if ( byte_98A1B0[dword_5641CC + (signed __int64)(signed int)v28] != 3 )\n                      *((_BYTE *)s + (signed int)v28 + (signed __int64)dword_5641CC) = 1;\n                    v221 = 0;\n                    sub_416750((unsigned int)v28, v39);\n                    if ( v221 < 2 )\n                      break;\n                  }\n                  if ( j > 3 )\n                  {\n                    if ( (_DWORD)j == 4 )\n                      dword_986FA0[v28] = 1;\n                    break;\n                  }\n                  v31 = dword_5641B0[j];\n                }\n              }\n            }\n          }\n        }\n      }\n    }\nLABEL_107:\n    ++v28;\n  }\n  while ( v28 != 400 );\n  v40 = 21LL;\n  v41 = 0LL;\n  do\n  {\n    if ( byte_98A1B0[v40] != 3 )\n    {\n      if ( dword_96CDA4[v41] == 5 )\n      {\n        v42 = (unsigned int)dword_96CDB0[v41];\n        if ( v40 == v42 )\n        {\n          v43 = (unsigned __int64)dword_96CAB0;\n          if ( (unsigned int)sub_4253A0(v42, dword_96CAB0, 2LL, &v209, 1LL) == 1 )\n          {\n            if ( byte_98A1B0[v209] != 2 )\n              sub_4340E0(\"engine/dragon.c\", 251LL, \"board[dr] == 2\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n            if ( dword_88C268 )\n            {\n              v43 = (unsigned int)v40;\n              sub_433F90((unsigned __int64)\"eye at %1m found for dragon at %1m--augmenting genus\\n\");\n            }\n            v44 = sub_426FA0((char *)&unk_96CDB4 + v41 * 4, v43);\n            if ( v44 <= (signed int)sub_426FA0(\n                                      (char *)ptr + 104 * *((signed int *)&xmmword_954FB0 + 19 * v209 + 1) + 76,\n                                      v43) )\n            {\n              v45 = (char *)ptr;\n              v46 = *((signed int *)&xmmword_954FB0 + 19 * v209 + 1);\n            }\n            else\n            {\n              v45 = (char *)ptr;\n              v46 = *((signed int *)&xmmword_954FB0 + 19 * v209 + 1);\n              *((_DWORD *)ptr + 26 * v46 + 20) = dword_96CDBC[v41];\n            }\n            sub_426E70(&v45[104 * v46 + 76], (char *)&unk_96CDB4 + v41 * 4, &v45[104 * v46 + 76]);\n          }\n        }\n      }\n      if ( dword_977664[v41] == 4 )\n      {\n        v47 = (unsigned int)dword_977670[v41];\n        if ( v40 == v47 )\n        {\n          v48 = (unsigned __int64)dword_977370;\n          if ( (unsigned int)sub_4253A0(v47, dword_977370, 1LL, &v209, 1LL) == 1 )\n          {\n            if ( byte_98A1B0[v209] != 1 )\n              sub_4340E0(\"engine/dragon.c\", 266LL, \"board[dr] == 1\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n            if ( dword_88C268 )\n            {\n              v48 = (unsigned int)v40;\n              sub_433F90((unsigned __int64)\"eye at %1m found for dragon at %1m--augmenting genus\\n\");\n            }\n            v49 = sub_426FA0((char *)&unk_977674 + v41 * 4, v48);\n            if ( v49 <= (signed int)sub_426FA0(\n                                      (char *)ptr + 104 * *((signed int *)&xmmword_954FB0 + 19 * v209 + 1) + 76,\n                                      v48) )\n            {\n              v50 = (char *)ptr;\n              v51 = *((signed int *)&xmmword_954FB0 + 19 * v209 + 1);\n            }\n            else\n            {\n              v50 = (char *)ptr;\n              v51 = *((signed int *)&xmmword_954FB0 + 19 * v209 + 1);\n              *((_DWORD *)ptr + 26 * v51 + 20) = dword_97767C[v41];\n            }\n            sub_426E70(&v50[104 * v51 + 76], (char *)&unk_977674 + v41 * 4, &v50[104 * v51 + 76]);\n          }\n        }\n      }\n    }\n    ++v40;\n    v41 += 9LL;\n  }\n  while ( v41 != 3411 );\n  v52 = 21LL;\n  do\n  {\n    if ( (unsigned __int8)(byte_98A1B0[v52] - 1) <= 1u && v52 == *((_DWORD *)&xmmword_954FB0 + 19 * v52 + 2) )\n    {\n      v53 = 21LL;\n      do\n      {\n        if ( byte_98A1B0[v53] != 3 )\n          *((_BYTE *)s + v53) = sub_414710((unsigned int)v53, (unsigned int)v52);\n        ++v53;\n      }\n      while ( v53 != 400 );\n      sub_456770(3 - (unsigned int)(unsigned __int8)byte_98A1B0[v52], &v221);\n      sub_41C6A0((unsigned __int8)byte_98A1B0[v52], &v221, 0LL, &v218);\n      v54 = -379LL;\n      v55 = dword_8EB400;\n      do\n      {\n        v56 = byte_98A340[v54];\n        if ( v56 != 3 && v56 == byte_98A1B0[v52] && !v225[v54] && !*(_DWORD *)v55 )\n          *((_BYTE *)&v221 + v54) = 2;\n        v55 = (int (*)[])((char *)v55 + 380);\n        ++v54;\n      }\n      while ( v54 );\n      *((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * v52 + 1) + 18) = sub_4155F0(\n                                                                                       s,\n                                                                                       (unsigned __int8)byte_98A1B0[v52],\n                                                                                       &v218,\n                                                                                       v55);\n    }\n    ++v52;\n  }\n  while ( v52 != 400 );\n  sub_41ABF0();\n  sub_4142A0();\n  if ( dword_98A7DC > 0LL )\n  {\n    v57 = (char *)ptr;\n    v58 = dword_98A7DC & 3;\n    if ( (unsigned __int64)(dword_98A7DC - 1LL) >= 3 )\n    {\n      v60 = dword_98A7DC - v58;\n      v61 = (char *)ptr + 380;\n      v59 = 0LL;\n      do\n      {\n        v62 = *(v61 - 53);\n        *(v61 - 78) = *(v61 - 79);\n        *(v61 - 52) = v62;\n        *(v61 - 26) = *(v61 - 27);\n        *v61 = *(v61 - 1);\n        v59 += 4LL;\n        v61 += 104;\n      }\n      while ( v60 != v59 );\n      if ( v58 )\n        goto LABEL_156;\n    }\n    else\n    {\n      v59 = 0LL;\n      if ( !(dword_98A7DC & 3) )\n        goto LABEL_158;\nLABEL_156:\n      v63 = &v57[104 * v59 + 68];\n      v64 = -v58;\n      do\n      {\n        *(_DWORD *)v63 = *((_DWORD *)v63 - 1);\n        v63 += 104;\n        ++v64;\n      }\n      while ( v64 );\n    }\n  }\nLABEL_158:\n  v65 = -28804LL;\n  v66 = 21LL;\n  while ( 2 )\n  {\n    v67 = byte_98A1B0[v66];\n    if ( v67 != 3 && v67 && v66 == dword_95C678[v65 / 4] )\n    {\n      v68 = (char *)ptr + 104 * dword_95C674[v65 / 4] + 76;\n      v69 = sub_4263B0(v68);\n      v70 = v69 + (unsigned __int64)sub_426330(v68);\n      v71 = *((signed int *)ptr + 26 * dword_95C674[v65 / 4] + 21);\n      if ( !byte_864E50 )\n        sub_4340E0(\"engine/dragon.c\", 1625LL, \"dragon2_initialized\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n      v72 = 1;\n      if ( v70 <= 3 )\n      {\n        if ( dword_95C67C[v65 / 4] != dword_90E634[5 * v65 / 4]\n          || !*(_DWORD *)((char *)&xmmword_90E68C + 5 * v65 + 8)\n          || v70 > 2\n          || (v72 = 0, *(_DWORD *)((char *)&xmmword_90E6DC + 5 * v65 + 8)) )\n        {\n          if ( v70 <= 2 && (_DWORD)v71 )\n          {\n            if ( dword_8E9524[95 * v71] )\n            {\n              if ( *((_DWORD *)ptr + 26 * dword_95C674[v65 / 4] + 18) <= 4 )\n              {\n                v72 = 2;\n                if ( v70 == 2 || dword_8E9474[95 * v71] > 2 )\n                  goto LABEL_186;\n              }\n            }\nLABEL_179:\n            if ( *((_DWORD *)&qword_8E9494 + 95 * v71) <= 1 )\n            {\nLABEL_180:\n              v73 = 104LL * dword_95C674[v65 / 4];\n              v74 = *(_DWORD *)((char *)ptr + v73 + 72);\n              if ( v70 > 2 )\n              {\n                v72 = 2;\n                if ( v74 < 5 )\n                  goto LABEL_186;\n              }\n              else if ( !v74 )\n              {\n                v72 = 0;\n                if ( *(_DWORD *)((char *)ptr + v73 + 52) < 5 )\n                  goto LABEL_186;\n              }\n            }\n            v72 = 3;\n            goto LABEL_186;\n          }\n          if ( v70 < 3 || (v72 = 1, !(_DWORD)v71) )\n          {\n            if ( (_DWORD)v71 )\n              goto LABEL_179;\n            goto LABEL_180;\n          }\n        }\n      }\nLABEL_186:\n      dword_95C684[v65 / 4] = v72;\n    }\n    ++v66;\n    v65 += 76LL;\n    if ( v65 )\n      continue;\n    break;\n  }\n  v75 = -378LL;\n  v76 = &dword_955640;\n  if ( byte_98A33F[-378] == 3 )\n    goto LABEL_192;\nLABEL_191:\n  v77 = 76LL * *(v76 - 19);\n  *(_OWORD *)(v76 - 17) = *(__int128 *)((char *)&xmmword_954FC0 + v77);\n  *(_OWORD *)(v76 - 13) = *(__int128 *)((char *)&xmmword_954FD0 + v77);\n  *(_OWORD *)(v76 - 9) = *(__int128 *)((char *)&xmmword_954FE0 + v77);\n  *(_OWORD *)(v76 - 6) = *(_OWORD *)(v77 + 9785324);\n  *(_OWORD *)(v76 - 21) = *(__int128 *)((char *)&xmmword_954FB0 + v77);\nLABEL_192:\n  while ( v75 )\n  {\n    if ( byte_98A340[v75] != 3 )\n    {\n      v78 = 76LL * *v76;\n      *(_OWORD *)(v76 + 2) = *(__int128 *)((char *)&xmmword_954FC0 + v78);\n      *(_OWORD *)(v76 + 6) = *(__int128 *)((char *)&xmmword_954FD0 + v78);\n      *(_OWORD *)(v76 + 10) = *(__int128 *)((char *)&xmmword_954FE0 + v78);\n      *(_OWORD *)(v76 + 13) = *(_OWORD *)(v78 + 9785324);\n      *(_OWORD *)(v76 - 2) = *(__int128 *)((char *)&xmmword_954FB0 + v78);\n    }\n    v76 += 38;\n    v75 += 2LL;\n    if ( byte_98A33F[v75] != 3 )\n      goto LABEL_191;\n  }\n  if ( !byte_864E50 )\n    sub_4340E0(\"engine/dragon.c\", 830LL, \"dragon2_initialized\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  v79 = -378LL;\n  v80 = (int *)&unk_95563C;\n  while ( 2 )\n  {\n    if ( (unsigned __int8)(byte_98A33F[v79] - 1) < 2u )\n    {\n      v81 = (unsigned int)*(v80 - 19);\n      v82 = 0;\n      goto LABEL_202;\n    }\n    v81 = 0xFFFFFFFFLL;\n    v82 = -1;\n    if ( byte_98A33F[v79] != 3 )\n    {\nLABEL_202:\n      *(&v223 + v79) = v81;\n      *(&v226 + v79) = v82;\n    }\n    if ( v79 )\n    {\n      if ( (unsigned __int8)(byte_98A340[v79] - 1) < 2u )\n      {\n        v83 = *v80;\n        v84 = 0;\n        goto LABEL_207;\n      }\n      v83 = -1;\n      v84 = -1;\n      if ( byte_98A340[v79] != 3 )\n      {\nLABEL_207:\n        s[v79] = v83;\n        v227[v79] = v84;\n      }\n      v79 += 2LL;\n      v80 += 38;\n      continue;\n    }\n    break;\n  }\n  v85 = 1;\n  while ( 2 )\n  {\n    v86 = v85 - 1;\n    LODWORD(v212) = 0;\n    v87 = 21LL;\n    LODWORD(v214) = v85 - 1;\n    while ( 1 )\n    {\n      if ( byte_98A1B0[v87] != 3 && s[v87] == (_DWORD)v86 )\n      {\n        v88 = *(&v221 + v87);\n        if ( v88 >= 0 )\n          break;\n      }\nLABEL_230:\n      if ( (unsigned __int64)++v87 >= 0x190 )\n        goto LABEL_231;\n    }\n    v89 = *((_DWORD *)&xmmword_954FB0 + 19 * *((signed int *)ptr + 26 * v88));\n    v90 = &unk_927B28;\n    if ( v89 == 1 )\n      v90 = &unk_9333A0;\n    LODWORD(v210) = *((_DWORD *)&xmmword_954FB0 + 19 * *((signed int *)ptr + 26 * v88));\n    LODWORD(v215) = 3 - v89;\n    v91 = 4611686018427387900LL;\n    while ( 2 )\n    {\n      while ( 2 )\n      {\n        while ( 2 )\n        {\n          v92 = dword_5641C0[v91] + (signed __int64)(signed int)v87;\n          if ( (unsigned int)v92 > 0x1A4\n            || byte_98A1B0[v92] == 3\n            || (v93 = s[v92], v93 < v85)\n            || v85 != 1\n            && ((v94 = sub_41A570(v90, (unsigned int)v87, v81), v94 != (_DWORD)v210)\n             || (v95 = sub_41A570(v90, (unsigned int)v92, v81), v95 == (_DWORD)v215)) )\n          {\nLABEL_226:\n            ++v91;\n            if ( !(v91 * 4) )\n              goto LABEL_229;\n            continue;\n          }\n          break;\n        }\n        if ( v93 == v85 )\n        {\n          if ( *(&v221 + v92) != *(&v221 + v87) )\n          {\n            *(&v221 + v92) = -2;\n            ++v91;\n            if ( !(v91 * 4) )\n              goto LABEL_229;\n            continue;\n          }\n          goto LABEL_226;\n        }\n        break;\n      }\n      *(&v221 + v92) = *(&v221 + v87);\n      s[v92] = v85;\n      LODWORD(v212) = 1;\n      ++v91;\n      if ( v91 * 4 )\n        continue;\n      break;\n    }\nLABEL_229:\n    v86 = (unsigned int)v214;\n    if ( (_DWORD)v212 )\n      goto LABEL_230;\nLABEL_231:\n    if ( ++v85 != 6 )\n      continue;\n    break;\n  }\n  v96 = 21LL;\n  while ( 2 )\n  {\n    if ( byte_98A1B0[v96] != 3 )\n    {\n      v97 = *(&v221 + v96);\n      if ( v97 == -2 )\n      {\n        v86 = (signed int)v96;\n        v98 = (signed int)v96 + (signed __int64)dword_5641B0[0];\n        LODWORD(v99) = 0;\n        if ( (unsigned int)v98 <= 0x1A4 && byte_98A1B0[v98] != 3 )\n        {\n          v100 = *(&v221 + v98);\n          if ( v100 >= 0 )\n          {\n            v218 = v100;\n            LODWORD(v99) = 1;\n          }\n        }\n        v101 = (signed int)v96 + (signed __int64)dword_5641B4;\n        if ( (unsigned int)v101 < 0x1A5 && byte_98A1B0[v101] != 3 )\n        {\n          v102 = *(&v221 + v101);\n          if ( v102 >= 0 )\n          {\n            v103 = (unsigned int)v99;\n            LODWORD(v99) = v99 + 1;\n            *(&v218 + v103) = v102;\n          }\n        }\n        v104 = (signed int)v96 + (signed __int64)dword_5641B8;\n        if ( (unsigned int)v104 <= 0x1A4 && byte_98A1B0[v104] != 3 )\n        {\n          v105 = *(&v221 + v104);\n          if ( v105 >= 0 )\n          {\n            v106 = (signed int)v99;\n            LODWORD(v99) = v99 + 1;\n            *(&v218 + v106) = v105;\n          }\n        }\n        v81 = (signed int)v96 + (signed __int64)dword_5641BC;\n        v214 = v96;\n        if ( (unsigned int)v81 > 0x1A4\n          || byte_98A1B0[v81] == 3\n          || (v86 = (unsigned int)*(&v221 + v81), (signed int)v86 < 0) )\n        {\n          if ( (signed int)v99 > 0 )\n            goto LABEL_267;\n        }\n        else\n        {\n          v81 = (signed int)v99;\n          LODWORD(v99) = v99 + 1;\n          *(&v218 + v81) = v86;\nLABEL_267:\n          v99 = (signed int)v99;\n          v212 = v99;\n          v99 = (unsigned int)v99;\n          v215 = v99;\n          v113 = (unsigned int)v99 - 1LL;\n          v114 = &v219;\n          v115 = 0LL;\n          do\n          {\n            v116 = v115 + 1;\n            v210 = v115 + 1;\n            if ( v115 + 1 < v212 )\n            {\n              v117 = *(&v218 + v115);\n              v118 = (int *)v114;\n              v119 = v113;\n              do\n              {\n                v120 = *v118;\n                if ( v117 < 0 || dword_98A7DC <= v120 || v120 < 0 || dword_98A7DC <= v117 )\n                  sub_4340E0(\n                    \"engine/dragon.c\",\n                    963LL,\n                    \"a >= 0 && a < number_of_dragons && b >= 0 && b < number_of_dragons\",\n                    0xFFFFFFFFLL,\n                    0xFFFFFFFFLL);\n                if ( v117 != v120 )\n                {\n                  sub_416680((unsigned int)v117, (unsigned int)v120, v81, v116);\n                  sub_416680((unsigned int)v120, (unsigned int)v117, v121, v122);\n                }\n                ++v118;\n                --v119;\n              }\n              while ( v119 );\n            }\n            --v113;\n            v114 += 4;\n            v86 = v210;\n            v115 = v210;\n          }\n          while ( v210 != v215 );\n        }\n        v96 = v214;\n      }\n      else if ( (v97 & 0x80000000) == 0 )\n      {\n        if ( byte_98A19C[v96] != 3 )\n        {\n          v107 = v220[v96];\n          if ( v107 >= 0 && v107 != v97 )\n          {\n            if ( dword_98A7DC <= v107 || dword_98A7DC <= (signed int)v97 )\n              sub_4340E0(\n                \"engine/dragon.c\",\n                963LL,\n                \"a >= 0 && a < number_of_dragons && b >= 0 && b < number_of_dragons\",\n                0xFFFFFFFFLL,\n                0xFFFFFFFFLL);\n            sub_416680(v97, (unsigned int)v107, v81, v86);\n            sub_416680((unsigned int)v107, v97, v108, v109);\n          }\n        }\n        if ( byte_98A1B1[v96] != 3 )\n        {\n          v110 = v222[v96];\n          if ( v110 >= 0 && v110 != v97 )\n          {\n            if ( dword_98A7DC <= v110 || dword_98A7DC <= (signed int)v97 )\n              sub_4340E0(\n                \"engine/dragon.c\",\n                963LL,\n                \"a >= 0 && a < number_of_dragons && b >= 0 && b < number_of_dragons\",\n                0xFFFFFFFFLL,\n                0xFFFFFFFFLL);\n            sub_416680(v97, (unsigned int)v110, v81, v86);\n            sub_416680((unsigned int)v110, v97, v111, v112);\n          }\n        }\n      }\n    }\n    if ( ++v96 != 400 )\n      continue;\n    break;\n  }\n  result = sub_44E0B0(2LL, \"  pre-owl dragon data\", 0LL);\n  if ( !v217 )\n  {\n    sub_458F10();\n    v124 = 21LL;\n    v125 = (float *)&unk_955634;\n    while ( 2 )\n    {\n      if ( byte_98A1B0[v124] != 3 )\n      {\n        v221 = 0;\n        s[0] = 0;\n        sub_425C00(&v218, 0LL, 0LL, 0LL, 0LL);\n        if ( byte_98A1B0[v124] )\n        {\n          if ( v124 == *((_DWORD *)v125 - 16) )\n          {\n            v126 = 104LL * *((signed int *)v125 - 17);\n            v127 = *(float *)((char *)ptr + v126 + 56);\n            v128 = (float)(*(_DWORD *)((char *)ptr + v126 + 72) - 10);\n            sub_414520(1LL, &v218, 0LL);\n            if ( fmax(*(v125 - 14) * -0.01 + 0.32, 0.12) + 0.00001 > v127 )\n            {\n              *(_QWORD *)(v125 - 11) = 4LL;\n              *(v125 - 6) = 0.0;\n              goto LABEL_302;\n            }\n            v211 = 0;\n            sub_44E060(3LL);\n            v129 = sub_42AA60((unsigned int)v124, &v221, v125 - 8, &v211);\n            if ( v129 )\n            {\n              v130 = v221;\n              *((_DWORD *)v125 - 10) = v221;\n              *((_DWORD *)v125 - 9) = v129;\n              *((_DWORD *)v125 - 1) = v211;\n              if ( !v130 )\n                goto LABEL_475;\n              v211 = 0;\n              v131 = sub_42CE50((unsigned int)v124, s, v125 - 4, &v211);\n              if ( !v131 )\n                goto LABEL_475;\n              v132 = s[0];\n              *((_DWORD *)v125 - 11) = 2 - (v129 == 3);\n              if ( v132 )\n              {\n                *((_DWORD *)v125 - 6) = v132;\n                *((_DWORD *)v125 - 5) = v131;\n                *(_DWORD *)v125 = v211;\n                goto LABEL_302;\n              }\n              if ( dword_88C264 & 0x1000 )\n                sub_433F90((unsigned __int64)\"Inconsistent owl attack and defense results for %1m.\\n\");\n              v134 = sub_42EAE0(*((unsigned int *)v125 - 10), (unsigned int)v124, 0LL);\n              if ( v134 )\n              {\n                *(v125 - 6) = *(v125 - 10);\n                *((_DWORD *)v125 - 5) = v134;\n              }\n              else\n              {\nLABEL_475:\n                *(v125 - 11) = 0.0;\n                *((_QWORD *)v125 - 3) = 0LL;\n              }\n            }\n            else\n            {\n              if ( !*((_DWORD *)v125 - 8) )\n              {\n                v211 = 0;\n                v133 = sub_42CE50((unsigned int)v124, s, v125 - 4, &v211);\n                if ( v133 )\n                {\n                  *(v125 - 6) = *(float *)s;\n                  *((_DWORD *)v125 - 5) = v133;\n                  *(_DWORD *)v125 = v211;\n                }\n              }\n              *(_QWORD *)(v125 - 11) = 1LL;\n              *(v125 - 9) = 0.0;\n              sub_44E0B0(3LL, \"    owl reading for dragon at \", (unsigned int)v124);\n            }\n          }\n        }\n      }\nLABEL_302:\n      ++v124;\n      v125 += 19;\n      if ( v124 != 400 )\n        continue;\n      break;\n    }\n    sub_44E0B0(2LL, \"  owl reading\", 0LL);\n    v135 = -379LL;\n    v136 = &xmmword_955600;\n    do\n    {\n      if ( (unsigned __int8)(byte_98A340[v135] - 1) <= 1u )\n      {\n        v137 = *((_DWORD *)v136 + 2);\n        if ( v137 == 4 )\n        {\n          v137 = 3;\n          if ( (*(_DWORD *)v136 | 2) != 2 )\n            v137 = 1;\n        }\n        *((_DWORD *)v136 + 11) = v137;\n      }\n      v136 = (__int128 *)((char *)v136 + 76);\n      ++v135;\n    }\n    while ( v135 );\n    sub_44E0B0(2LL, \"  compute status\", 0LL);\n    v138 = -378LL;\n    v139 = &dword_955640;\n    if ( byte_98A33F[-378] != 3 )\n    {\nLABEL_313:\n      v140 = 76LL * *(v139 - 19);\n      *(_OWORD *)(v139 - 17) = *(__int128 *)((char *)&xmmword_954FC0 + v140);\n      *(_OWORD *)(v139 - 13) = *(__int128 *)((char *)&xmmword_954FD0 + v140);\n      *(_OWORD *)(v139 - 9) = *(__int128 *)((char *)&xmmword_954FE0 + v140);\n      *(_OWORD *)(v139 - 6) = *(_OWORD *)(v140 + 9785324);\n      *(_OWORD *)(v139 - 21) = *(__int128 *)((char *)&xmmword_954FB0 + v140);\n    }\n    while ( v138 )\n    {\n      if ( byte_98A340[v138] != 3 )\n      {\n        v141 = 76LL * *v139;\n        *(_OWORD *)(v139 + 2) = *(__int128 *)((char *)&xmmword_954FC0 + v141);\n        *(_OWORD *)(v139 + 6) = *(__int128 *)((char *)&xmmword_954FD0 + v141);\n        *(_OWORD *)(v139 + 10) = *(__int128 *)((char *)&xmmword_954FE0 + v141);\n        *(_OWORD *)(v139 + 13) = *(_OWORD *)(v141 + 9785324);\n        *(_OWORD *)(v139 - 2) = *(__int128 *)((char *)&xmmword_954FB0 + v141);\n      }\n      v139 += 38;\n      v138 += 2LL;\n      if ( byte_98A33F[v138] != 3 )\n        goto LABEL_313;\n    }\n    v142 = sub_407AE0();\n    if ( v142 && (v143 = 19LL * v142, !dword_954FF0[v143]) )\n    {\n      dword_88C210 = *(_DWORD *)(v143 * 4 + 9785272);\n      if ( v216 )\n        sub_433F90((unsigned __int64)\"thrashing dragon found at %1m\\n\");\n    }\n    else\n    {\n      dword_88C210 = 0;\n    }\n    v144 = 4611686018427380703LL;\n    v145 = 21LL;\n    do\n    {\n      v146 = byte_98A1B0[v145];\n      if ( v146 && v146 != 3 && v145 == dword_95C678[v144] )\n      {\n        sub_425C00(&v221, 0LL, 0LL, 0LL, 0LL);\n        v147 = 104LL * dword_95C674[v144];\n        v148 = *(float *)((char *)ptr + v147 + 56);\n        v149 = (float)(*(_DWORD *)((char *)ptr + v147 + 72) - 10);\n        sub_414520(1LL, &v221, 0LL);\n        if ( fmax(*(float *)&dword_95C680[v144] * -0.01 + 0.32, 0.12) + 0.00001 <= v148 )\n        {\n          if ( dword_565C78 >= 8 && !dword_88C2F4 )\n          {\n            v150 = dword_95C694[v144];\n            v151 = dword_95C6A4[v144];\n            if ( dword_88C304\n              || dword_88C210 && (unsigned int)sub_414710((unsigned int)v145, (unsigned int)dword_88C210) )\n            {\n              if ( v150 && !v151 && dword_95C690[v144] )\n              {\n                if ( (unsigned int)sub_42DEE0((unsigned int)v145, s, &v218) )\n                {\n                  dword_95C688[v144] = 12;\n                  dword_95C6A0[v144] = s[0];\n                  dword_95C6AC[v144] = v218;\n                }\n                else\n                {\n                  dword_95C688[v144] = 0;\n                }\n              }\n              else if ( !v150 )\n              {\n                if ( (unsigned int)sub_42C0C0((unsigned int)v145, s, &v218) )\n                {\n                  dword_95C688[v144] = 11;\n                  dword_95C690[v144] = s[0];\n                  dword_95C69C[v144] = v218;\n                }\n                else\n                {\n                  dword_95C688[v144] = 1;\n                }\n              }\n            }\n          }\n          sub_44E0B0(3LL, \"    owl threats for dragon at \", (unsigned int)v145);\n        }\n        else\n        {\n          dword_95C688[v144] = 4;\n          dword_95C69C[v144] = 0;\n          dword_95C6AC[v144] = 0;\n        }\n      }\n      ++v145;\n      v144 += 19LL;\n    }\n    while ( v144 * 4 );\n    v152 = -378LL;\n    v153 = &dword_955640;\n    if ( byte_98A33F[-378] != 3 )\n    {\nLABEL_347:\n      v154 = 76LL * *(v153 - 19);\n      *(_OWORD *)(v153 - 17) = *(__int128 *)((char *)&xmmword_954FC0 + v154);\n      *(_OWORD *)(v153 - 13) = *(__int128 *)((char *)&xmmword_954FD0 + v154);\n      *(_OWORD *)(v153 - 9) = *(__int128 *)((char *)&xmmword_954FE0 + v154);\n      *(_OWORD *)(v153 - 6) = *(_OWORD *)(v154 + 9785324);\n      *(_OWORD *)(v153 - 21) = *(__int128 *)((char *)&xmmword_954FB0 + v154);\n    }\n    while ( v152 )\n    {\n      if ( byte_98A340[v152] != 3 )\n      {\n        v155 = 76LL * *v153;\n        *(_OWORD *)(v153 + 2) = *(__int128 *)((char *)&xmmword_954FC0 + v155);\n        *(_OWORD *)(v153 + 6) = *(__int128 *)((char *)&xmmword_954FD0 + v155);\n        *(_OWORD *)(v153 + 10) = *(__int128 *)((char *)&xmmword_954FE0 + v155);\n        *(_OWORD *)(v153 + 13) = *(_OWORD *)(v155 + 9785324);\n        *(_OWORD *)(v153 - 2) = *(__int128 *)((char *)&xmmword_954FB0 + v155);\n      }\n      v153 += 38;\n      v152 += 2LL;\n      if ( byte_98A33F[v152] != 3 )\n        goto LABEL_347;\n    }\n    sub_44E0B0(2LL, \"  owl threats \", 0LL);\n    if ( dword_98A7DC > 0 )\n    {\n      v156 = 100LL;\n      v157 = 0LL;\n      do\n      {\n        v158 = sub_45A8A0(*(unsigned int *)((char *)ptr + v156 - 100), 0LL, 0LL, (char *)ptr + v156);\n        v159 = (char *)ptr;\n        *(_DWORD *)((char *)ptr + v156 - 4) = v158;\n        if ( dword_88C264 & 0x20 )\n        {\n          if ( v158 == 1 )\n          {\n            v160 = *(unsigned int *)&v159[v156 - 100];\n            sub_433F90((unsigned __int64)\"surrounded dragon found at %1m\\n\");\n            v159 = (char *)ptr;\n            v158 = *(_DWORD *)((char *)ptr + v156 - 4);\n          }\n          if ( v158 == 2 )\n          {\n            v161 = *(unsigned int *)&v159[v156 - 100];\n            sub_433F90((unsigned __int64)\"weakly surrounded dragon found at %1m\\n\");\n          }\n        }\n        ++v157;\n        v156 += 104LL;\n      }\n      while ( v157 < dword_98A7DC );\n      if ( dword_98A7DC > 0 )\n      {\n        v162 = (char *)ptr;\n        v163 = 0LL;\n        while ( 1 )\n        {\n          v166 = (signed __int64)&v162[104 * v163 + 76];\n          v210 = 104 * v163;\n          v167 = *(signed int *)&v162[104 * v163];\n          v168 = sub_4263B0(v166);\n          v169 = sub_426330(v166);\n          v170 = *((_DWORD *)&xmmword_954FB0 + 19 * v167 + 3);\n          v171 = 95 * v167;\n          v172 = dword_8E9474[95 * v167];\n          if ( v170 == v172 )\n          {\n            if ( !(unsigned int)sub_42F8F0((unsigned int)v167) )\n            {\n              v165 = 5;\n              goto LABEL_420;\n            }\n            v170 = *((_DWORD *)&xmmword_954FB0 + 19 * v167 + 3);\n            v172 = dword_8E9474[v171];\n          }\n          if ( v170 == v172 && dword_8E94D4[v171] && !dword_8E9524[v171] )\n          {\n            v165 = 6;\n            goto LABEL_420;\n          }\n          v173 = *((_DWORD *)&xmmword_954FC0 + 19 * v167 + 3);\n          if ( v173 == 2 )\n            break;\n          if ( !v173 )\n          {\n            v165 = 0;\nLABEL_420:\n            v162 = (char *)ptr;\n            v164 = v210;\n            goto LABEL_421;\n          }\n          if ( (unsigned __int8)(byte_98A1B0[v167] - 1) >= 2u )\n            sub_4340E0(\"engine/dragon.c\", 1010LL, \"((board[dr]) == 1 || (board[dr]) == 2)\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n          v174 = v168 + v169;\n          v175 = &unk_8EB3D0;\n          v176 = 21LL;\n          do\n          {\n            if ( byte_98A1B0[v176] != 3 && (unsigned int)sub_414710((unsigned int)v176, (unsigned int)v167) && *v175 )\n            {\n              v164 = v210;\n              goto LABEL_362;\n            }\n            ++v176;\n            v175 += 95;\n          }\n          while ( v176 < 0x190 );\n          LODWORD(v212) = v174;\n          v177 = byte_98A1B0[v167];\n          v178 = dword_977370;\n          if ( v177 == 2 )\n            v178 = dword_96CAB0;\n          v179 = (v177 == 2) | 4;\n          memset(&v221, 0, 0x640uLL);\n          v180 = 21LL;\n          if ( byte_98A1B0[21] != v177 )\n            goto LABEL_405;\nLABEL_385:\n          if ( !(unsigned int)sub_414710((unsigned int)v180, (unsigned int)v167) )\n            goto LABEL_405;\n          v181 = (signed int)v180 + dword_5641B0[0];\n          if ( byte_98A1B0[v181] != 3 )\n          {\n            v182 = 9 * v181;\n            if ( v178[v182] == v179 && v178[v182 + 3] && !LOBYTE(v178[v182 + 7]) )\n              *(&v221 + v178[v182 + 3]) = 1;\n          }\n          v183 = (signed int)v180 + dword_5641B4;\n          if ( byte_98A1B0[v183] != 3 )\n          {\n            v184 = 9 * v183;\n            if ( v178[v184] == v179 && v178[v184 + 3] && !LOBYTE(v178[v184 + 7]) )\n              *(&v221 + v178[v184 + 3]) = 1;\n          }\n          v185 = (signed int)v180 + dword_5641B8;\n          if ( byte_98A1B0[v185] != 3 )\n          {\n            v186 = 9 * v185;\n            if ( v178[v186] == v179 && v178[v186 + 3] && !LOBYTE(v178[v186 + 7]) )\n              *(&v221 + v178[v186 + 3]) = 1;\n          }\n          v187 = (signed int)v180 + dword_5641BC;\n          if ( byte_98A1B0[v187] == 3 )\n            goto LABEL_405;\n          v188 = 9 * v187;\n          if ( v178[v188] != v179 || !v178[v188 + 3] || LOBYTE(v178[v188 + 7]) )\n            goto LABEL_405;\n          *(&v221 + v178[v188 + 3]) = 1;\n          while ( v180 != 399 )\n          {\n            if ( byte_98A1B0[++v180] == byte_98A1B0[v167] )\n              goto LABEL_385;\nLABEL_405:\n            ;\n          }\n          v189 = (signed __int64)(v178 + 193);\n          v190 = 0;\n          v191 = 4611686018427387525LL;\n          do\n          {\n            if ( s[v191] && !*(_DWORD *)(v189 - 8) )\n              v190 += (signed int)sub_426330(v189) > 0;\n            v189 += 36LL;\n            ++v191;\n          }\n          while ( v191 * 4 );\n          v164 = v210;\n          if ( v190 < 2 )\n          {\n            v165 = 8;\n            v162 = (char *)ptr;\n            if ( (signed int)v212 <= 5 )\n            {\n              v165 = 1;\n              if ( *(_DWORD *)((char *)ptr + v210 + 52) > 20 )\n                v165 = 8;\n            }\n            goto LABEL_421;\n          }\nLABEL_362:\n          v165 = 9;\n          v162 = (char *)ptr;\nLABEL_421:\n          *(_DWORD *)&v162[v164 + 60] = v165;\n          if ( ++v163 >= dword_98A7DC )\n            goto LABEL_422;\n        }\n        v165 = 2;\n        goto LABEL_420;\n      }\n    }\nLABEL_422:\n    sub_44E0B0(2LL, \"  post owl dragon data\", 0LL);\n    if ( dword_565C7C && dword_565C78 >= 8 )\n      sub_447620(v213);\n    else\n      sub_446520(v213);\n    sub_44E0B0(2LL, \"  semeai module\", 0LL);\n    v192 = -378LL;\n    v193 = &unk_955678;\n    if ( byte_98A33F[-378] != 3 )\nLABEL_429:\n      *(v193 - 19) = dword_954FF0[19 * *(v193 - 33)];\n    while ( v192 )\n    {\n      if ( byte_98A340[v192] != 3 )\n        *v193 = dword_954FF0[19 * *(v193 - 14)];\n      v192 += 2LL;\n      v193 += 38;\n      if ( byte_98A33F[v192] != 3 )\n        goto LABEL_429;\n    }\n    v194 = 21LL;\n    do\n    {\n      if ( byte_98A1B0[v194] != 3 )\n      {\n        if ( (unsigned int)sub_456110((unsigned int)v194, (unsigned int)v194) )\n        {\n          v200 = 95 * v194;\n          if ( dword_8E94D4[95 * v194] )\n          {\n            if ( dword_8E9524[v200] )\n            {\n              if ( !dword_8E94A0[v200] )\n              {\n                v195 = sub_40AA00(v194, (__int64)&v221, 0);\n                if ( v195 > 0 )\n                {\n                  v196 = &dword_8E94A0[v200];\n                  v197 = v195;\n                  v198 = 0LL;\n                  while ( 1 )\n                  {\n                    v199 = 76LL * *(&v221 + v198);\n                    if ( *(int *)((char *)dword_954FF0 + v199) )\n                      break;\n                    if ( ++v198 >= v195 )\n                    {\n                      if ( v195 > 0 )\n                      {\n                        if ( dword_88C264 & 0x400 )\n                        {\n                          v199 = (unsigned int)v194;\n                          sub_433F90((unsigned __int64)\"Worm %1m revised to be inessential.\\n\");\n                        }\n                        *v196 = 1;\n                        sub_456130((unsigned int)v194, v199, v198, v197);\n                      }\n                      break;\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      ++v194;\n    }\n    while ( v194 != 400 );\n    sub_44E0B0(2LL, \"  revise worm inessentiality\", 0LL);\n    v201 = 21LL;\n    do\n    {\n      v202 = byte_98A1B0[v201];\n      if ( v202 )\n      {\n        if ( v202 != 3 )\n        {\n          v203 = *((unsigned int *)&xmmword_954FB0 + 19 * v201 + 2);\n          if ( v201 == v203 && *((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * v201 + 1) + 15) == 2 )\n          {\n            while ( (_DWORD)v203 )\n            {\n              v204 = 95LL * (signed int)v203;\n              if ( !dword_8E94A0[v204] )\n                goto LABEL_462;\n              if ( dword_8E947C[v204] != (_DWORD)v203 )\n                sub_4340E0(\"engine/dragon.c\", 2201LL, \"worm[w].origin == w\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n              LODWORD(v203) = dword_864E60[(signed int)v203];\n            }\n            if ( dword_88C264 & 0x20 )\n              sub_433F90((unsigned __int64)\"Dragon %1m revised to be inessential.\\n\");\n            *((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * v201 + 1) + 15) = 5;\n          }\n        }\n      }\nLABEL_462:\n      ++v201;\n    }\n    while ( v201 != 400 );\n    v205 = 0;\n    sub_44E0B0(2LL, \"  revise dragon inessentiality\", 0LL);\n    dword_864E54 = 0;\n    dword_864E58 = 0;\n    result = dword_98A7DC;\n    if ( dword_98A7DC > 0LL )\n    {\n      v206 = (signed int *)ptr;\n      v207 = 0;\n      v208 = 0LL;\n      do\n      {\n        if ( *((_DWORD *)&xmmword_954FC0 + 19 * *v206 + 1) )\n        {\n          if ( *((_DWORD *)&xmmword_954FB0 + 19 * *v206) == 1 )\n            dword_864E54 = ++v205;\n          else\n            dword_864E58 = ++v207;\n        }\n        ++v208;\n        v206 += 26;\n      }\n      while ( v208 < dword_98A7DC );\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x411c30L", 
            "funcEndAddr": "0x413f20L", 
            "funcName": "sub_411C30"
        }, 
        {
            "decompiledFuncCode": "void *sub_413F20()\n{\n  signed __int64 v0; // r15\n  _BYTE *v1; // r14\n  __int128 v2; // xmm0\n  __int128 v3; // xmm1\n  __int128 v4; // xmm2\n  unsigned __int64 v5; // rbx\n  __int64 v6; // rcx\n  char v7; // al\n\n  v0 = 21LL;\n  v1 = &unk_9638A4;\n  v2 = xmmword_4AE0A0;\n  v3 = xmmword_4AE0B0;\n  v4 = xmmword_4AE0C0;\n  v5 = 0LL;\n  do\n  {\n    v7 = byte_98A1B0[v0];\n    if ( v7 != 3 )\n    {\n      dword_9555F0[v5 / 4] = -1;\n      dword_9555F8[v5 / 4] = dword_8EB3A0[5 * v5 / 4];\n      dword_9555FC[v5 / 4] = dword_8EB3A4[5 * v5 / 4];\n      dword_9555EC[v5 / 4] = dword_8EB39C[5 * v5 / 4];\n      v6 = (unsigned int)dword_8EB3A8[5 * v5 / 4];\n      dword_9555F4[v5 / 4] = v6;\n      *(_OWORD *)((char *)&unk_955620 + v5) = v2;\n      *(__int128 *)((char *)&xmmword_955600 + v5) = v3;\n      *(__int128 *)((char *)&xmmword_955610 + v5) = v4;\n      *v1 = 0;\n      *((_DWORD *)v1 - 1) = 1092616192;\n      if ( (unsigned __int8)(v7 - 1) <= 1u && v0 == v6 && dword_88C264 & 0x20 )\n      {\n        sub_433F90((unsigned __int64)\"Initializing dragon from worm at %1m, size %d\\n\");\n        v4 = xmmword_4AE0C0;\n        v3 = xmmword_4AE0B0;\n        v2 = xmmword_4AE0A0;\n      }\n    }\n    ++v0;\n    v5 += 76LL;\n    v1 += 48;\n  }\n  while ( v0 != 400 );\n  return memset(dword_864E60, 0, 0x640uLL);\n}\n", 
            "funcStartAddr": "0x413f20L", 
            "funcEndAddr": "0x41402bL", 
            "funcName": "sub_413F20"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_414030(int a1, __int64 a2)\n{\n  int v2; // ebp\n  __int64 result; // rax\n  int v4; // eax\n  signed int v5; // er12\n  signed __int64 v6; // rdx\n  unsigned int v7; // er14\n  int v8; // esi\n  _BYTE *v9; // rbx\n  unsigned int v10; // er13\n  signed __int64 v11; // r15\n  int v12; // edi\n  int v13; // edi\n  int v14; // edi\n  int v15; // edi\n  signed __int64 v16; // rcx\n  signed __int64 v17; // [rsp+8h] [rbp-40h]\n  signed __int64 v18; // [rsp+10h] [rbp-38h]\n\n  v2 = a1;\n  if ( *(_DWORD *)(a2 + 36LL * a1 + 4) != 3 || (result = a2, *(_DWORD *)(a2 + 36LL * a1 + 8) <= 1) )\n  {\n    if ( dword_88C264 & 0x20 )\n      sub_433F90((unsigned __int64)\"amalgamate dragons around %1m\\n\");\n    v4 = *(_DWORD *)(a2 + 36LL * a1);\n    if ( v4 == 4 )\n    {\n      v5 = 1;\n    }\n    else\n    {\n      v5 = 2;\n      if ( v4 != 5 )\n        sub_4340E0(\"engine/dragon.c\", 1516LL, \"eye[pos].color == 4\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n    }\n    result = (unsigned int)dword_565C68;\n    if ( dword_565C68 > 0 )\n    {\n      v17 = a2 + 29;\n      v6 = 0LL;\n      v7 = 21;\n      v8 = 0;\n      do\n      {\n        v18 = v6;\n        if ( (signed int)result <= 0 )\n        {\n          v16 = (signed int)result;\n        }\n        else\n        {\n          v9 = (_BYTE *)(v17 + 36LL * v7);\n          v10 = v7;\n          v11 = 0LL;\n          do\n          {\n            if ( *(_DWORD *)(v9 - 17) == v2 && !*(v9 - 1) && !(*v9 & 4) )\n            {\n              v12 = v10 + dword_5641B0[0];\n              if ( v5 == (unsigned __int8)byte_98A1B0[v10 + dword_5641B0[0]] )\n              {\n                if ( v8 )\n                {\n                  if ( *((_DWORD *)&xmmword_954FB0 + 19 * v12 + 2) != v8 )\n                  {\n                    sub_415400();\n                    v8 = *((_DWORD *)&xmmword_954FB0 + 19 * v12 + 2);\n                  }\n                }\n                else\n                {\n                  v8 = *((_DWORD *)&xmmword_954FB0 + 19 * v12 + 2);\n                }\n              }\n              v13 = v10 + dword_5641B4;\n              if ( v5 == (unsigned __int8)byte_98A1B0[v10 + dword_5641B4] )\n              {\n                if ( v8 )\n                {\n                  if ( *((_DWORD *)&xmmword_954FB0 + 19 * v13 + 2) != v8 )\n                  {\n                    sub_415400();\n                    v8 = *((_DWORD *)&xmmword_954FB0 + 19 * v13 + 2);\n                  }\n                }\n                else\n                {\n                  v8 = *((_DWORD *)&xmmword_954FB0 + 19 * v13 + 2);\n                }\n              }\n              v14 = v10 + dword_5641B8;\n              if ( v5 == (unsigned __int8)byte_98A1B0[v10 + dword_5641B8] )\n              {\n                if ( v8 )\n                {\n                  if ( *((_DWORD *)&xmmword_954FB0 + 19 * v14 + 2) != v8 )\n                  {\n                    sub_415400();\n                    v8 = *((_DWORD *)&xmmword_954FB0 + 19 * v14 + 2);\n                  }\n                }\n                else\n                {\n                  v8 = *((_DWORD *)&xmmword_954FB0 + 19 * v14 + 2);\n                }\n              }\n              v15 = v10 + dword_5641BC;\n              if ( v5 == (unsigned __int8)byte_98A1B0[v10 + dword_5641BC] )\n              {\n                if ( v8 )\n                {\n                  if ( *((_DWORD *)&xmmword_954FB0 + 19 * v15 + 2) != v8 )\n                  {\n                    sub_415400();\n                    v8 = *((_DWORD *)&xmmword_954FB0 + 19 * v15 + 2);\n                  }\n                }\n                else\n                {\n                  v8 = *((_DWORD *)&xmmword_954FB0 + 19 * v15 + 2);\n                }\n              }\n              result = (unsigned int)dword_565C68;\n            }\n            ++v11;\n            v16 = (signed int)result;\n            ++v10;\n            v9 += 36;\n          }\n          while ( v11 < (signed int)result );\n        }\n        v6 = v18 + 1;\n        v7 += 20;\n      }\n      while ( v18 + 1 < v16 );\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x414030L", 
            "funcEndAddr": "0x414298L", 
            "funcName": "sub_414030"
        }, 
        {
            "decompiledFuncCode": "char *sub_4142A0()\n{\n  char *v0; // rcx\n  __int64 v1; // rax\n  __int64 v2; // rsi\n  __int64 v3; // rdx\n  _DWORD *v4; // rdi\n  char *v5; // rcx\n  __int64 v6; // rax\n  char *result; // rax\n  signed __int64 v8; // rbx\n  signed __int64 v9; // r15\n  float v10; // xmm0_4\n  __int64 v11; // r14\n  float v12; // xmm1_4\n  float v13; // xmm0_4\n\n  if ( dword_98A7DC > 0LL )\n  {\n    v0 = (char *)ptr;\n    v1 = dword_98A7DC & 3;\n    if ( (unsigned __int64)(dword_98A7DC - 1LL) < 3 )\n    {\n      v2 = 0LL;\n      if ( !(dword_98A7DC & 3) )\n        goto LABEL_10;\n      goto LABEL_8;\n    }\n    v3 = dword_98A7DC - v1;\n    v4 = (char *)ptr + 364;\n    v2 = 0LL;\n    do\n    {\n      *(v4 - 78) = 800;\n      *(v4 - 52) = 800;\n      *(v4 - 26) = 800;\n      *v4 = 800;\n      v2 += 4LL;\n      v4 += 104;\n    }\n    while ( v3 != v2 );\n    if ( v1 )\n    {\nLABEL_8:\n      v5 = &v0[104 * v2 + 52];\n      v6 = -v1;\n      do\n      {\n        *(_DWORD *)v5 = 800;\n        v5 += 104;\n        ++v6;\n      }\n      while ( v6 );\n      goto LABEL_10;\n    }\n  }\nLABEL_10:\n  sub_415D50(&unk_927B28);\n  result = (char *)sub_415D50(&unk_9333A0);\n  if ( dword_98A7DC > 0 )\n  {\n    result = (char *)ptr;\n    v8 = 56LL;\n    v9 = 0LL;\n    do\n    {\n      v11 = *(signed int *)&result[v8 - 56];\n      if ( dword_88C264 & 0x20 )\n      {\n        sub_433F90((unsigned __int64)\"Computing weakness of dragon at %1m:\\n\");\n        result = (char *)ptr;\n      }\n      v10 = *(float *)&result[v8];\n      v12 = (float)*(signed int *)&result[v8 + 16];\n      sub_414520(*(unsigned int *)&result[v8 + 4], &result[v8 + 20], *(_DWORD *)&result[v8 + 28] != 0);\n      if ( *((_DWORD *)&xmmword_954FD0 + 19 * v11 + 2) )\n      {\n        if ( !*((_DWORD *)&xmmword_954FE0 + 19 * v11 + 2) )\n        {\nLABEL_13:\n          v10 = fmin((1.0 - v10) * 0.25, v10 * 0.25) + v10;\n          if ( *((_DWORD *)&xmmword_954FC0 + 19 * v11 + 2) != 11 )\n            goto LABEL_21;\nLABEL_20:\n          v10 = (1.0 - v10) * 0.15 + v10;\n          goto LABEL_21;\n        }\n      }\n      else\n      {\n        v10 = fmin((1.0 - v10) * 0.25, v10 * 0.25) + v10;\n        if ( !*((_DWORD *)&xmmword_954FE0 + 19 * v11 + 2) )\n          goto LABEL_13;\n      }\n      if ( *((_DWORD *)&xmmword_954FC0 + 19 * v11 + 2) == 11 )\n        goto LABEL_20;\nLABEL_21:\n      v13 = fminf(1.0, fmaxf(0.0, v10));\n      if ( dword_88C264 & 0x20 )\n        sub_433F90((unsigned __int64)\" result: %f.\\n\");\n      result = (char *)ptr;\n      *(float *)((char *)ptr + v8 + 8) = v13;\n      ++v9;\n      v8 += 104LL;\n    }\n    while ( v9 < dword_98A7DC );\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4142a0L", 
            "funcEndAddr": "0x414515L", 
            "funcName": "sub_4142A0"
        }, 
        {
            "decompiledFuncCode": "float __fastcall sub_414520(unsigned int a1, __int64 a2, unsigned int a3, float a4, float a5)\n{\n  unsigned int v5; // er14\n  int v6; // ebp\n  int v7; // eax\n  int v8; // ebp\n  signed int v9; // ecx\n  float v10; // xmm0_4\n  unsigned __int64 v11; // rax\n  float v12; // xmm0_4\n  float v13; // xmm1_4\n  float v14; // xmm0_4\n  __m128d v15; // xmm0\n  __m128 v16; // xmm1\n  float result; // xmm0_4\n  __m64 v18; // [rsp+8h] [rbp-40h]\n  float v19; // [rsp+10h] [rbp-38h]\n  float v20; // [rsp+18h] [rbp-30h]\n  float v21; // [rsp+1Ch] [rbp-2Ch]\n  float v22; // [rsp+20h] [rbp-28h]\n  float v23; // [rsp+24h] [rbp-24h]\n\n  v23 = a4;\n  v5 = a3;\n  v6 = sub_4263B0(a2);\n  v7 = sub_426330(a2);\n  v8 = v6 - ((v5 < 1) - 1);\n  if ( a1 < 0xA )\n  {\n    v9 = 613;\n    if ( _bittest(&v9, a1) )\n      return dword_4AE5B0[a1];\n  }\n  v10 = (double)(v7 + v8) * 0.5;\n  v20 = v10;\n  sub_493C10(&unk_5641D4);\n  v22 = v23;\n  *(float *)&v18.m64_u64 = v23;\n  sub_493C10(&unk_564234);\n  v21 = a5;\n  *((float *)&v18 + 1) = a5;\n  sub_493C10(&unk_564294);\n  v19 = v10;\n  if ( dword_88C264 & 0x20 )\n    sub_433F90((unsigned __int64)\"  moyo value %f -> %f, escape %f -> %f, eyes %f -> %f,\");\n  v11 = 1LL;\n  v12 = v22;\n  v13 = v21;\n  if ( v22 > v21 )\n  {\nLABEL_8:\n    *(float *)&v18.m64_u64 = v13;\n    *((float *)&v18 + v11) = v12;\n  }\n  while ( v11 <= 1 )\n  {\n    v13 = *((float *)&v18 + v11++ + 1);\n    v12 = v18.m64_f32[0];\n    if ( *(float *)&v18.m64_u64 > v13 )\n      goto LABEL_8;\n  }\n  v14 = *((float *)&v18 + 1);\n  if ( *((float *)&v18 + 1) > v19 )\n  {\n    *((float *)&v18 + 1) = v19;\n    v19 = v14;\n  }\n  v15 = _mm_cvtps_pd(v18);\n  v16 = (__m128)_mm_mul_pd((__m128d)xmmword_4AE0D0, v15);\n  result = fmin(COERCE_DOUBLE(_mm_movehl_ps(v16, v16)) + *(double *)v16.m128_u64, v15.m128d_f64[0] * 1.3);\n  if ( result < 0.0 || result > 1.0 )\n    sub_4340E0(\"engine/dragon.c\", 2071LL, \"weakness >= 0.0 && weakness <= 1.0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  return result;\n}\n", 
            "funcStartAddr": "0x414520L", 
            "funcEndAddr": "0x41470dL", 
            "funcName": "sub_414520"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_414710(signed int a1, signed int a2)\n{\n  int v2; // edx\n  int v3; // edx\n  bool v4; // zf\n\n  if ( a1 && a2 )\n  {\n    if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n    {\n      v2 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n      sub_4340E0(\"engine/dragon.c\", 2156LL, \"ON_BOARD1(d1)\", (unsigned int)(v2 - 1), (unsigned int)(a1 - 20 * v2 - 1));\n    }\n    if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n    {\n      v3 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n      sub_4340E0(\"engine/dragon.c\", 2157LL, \"ON_BOARD1(d2)\", (unsigned int)(v3 - 1), (unsigned int)(a2 - 20 * v3 - 1));\n    }\n    v4 = *((_DWORD *)&xmmword_954FB0 + 19 * a1 + 2) == *((_DWORD *)&xmmword_954FB0 + 19 * a2 + 2);\n  }\n  else\n  {\n    v4 = a1 == a2;\n  }\n  return v4;\n}\n", 
            "funcStartAddr": "0x414710L", 
            "funcEndAddr": "0x4147feL", 
            "funcName": "sub_414710"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_414800(int a1)\n{\n  return *((unsigned int *)&xmmword_954FB0 + 19 * a1 + 2);\n}\n", 
            "funcStartAddr": "0x414800L", 
            "funcEndAddr": "0x41480eL", 
            "funcName": "sub_414800"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_414810(int a1)\n{\n  if ( dword_8E947C[95 * a1] != a1 )\n    sub_4340E0(\"engine/dragon.c\", 2201LL, \"worm[w].origin == w\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  return (unsigned int)dword_864E60[a1];\n}\n", 
            "funcStartAddr": "0x414810L", 
            "funcEndAddr": "0x41484bL", 
            "funcName": "sub_414810"
        }, 
        {
            "decompiledFuncCode": "unsigned __int64 __fastcall sub_414850(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v3; // r15\n  __int64 v4; // r12\n  int v5; // eax\n  signed __int64 v6; // rbx\n  signed __int64 v7; // rdx\n  int v8; // esi\n  __int64 v9; // rcx\n  __int64 v10; // rbp\n  unsigned int v11; // er13\n  __int64 v12; // rbx\n  int *v13; // rbp\n  char v14; // al\n  float v15; // xmm0_4\n  unsigned __int64 result; // rax\n  signed __int64 v17; // rcx\n  int v18; // esi\n\n  v3 = a3;\n  v4 = a2;\n  if ( a1 >= 3 )\n    sub_4340E0(\"engine/dragon.c\", 1146LL, \"((color) == 1 || (color) == 2) || color == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  sub_456770(a1, a2);\n  v5 = dword_98A7DC;\n  if ( dword_98A7DC > 0 )\n  {\n    v6 = 0LL;\n    do\n    {\n      v7 = 104 * v6;\n      v8 = *((_DWORD *)ptr + 26 * v6 + 15);\n      if ( v8 == 2 )\n      {\n        v9 = *(signed int *)((char *)ptr + v7);\n        if ( 3 - a1 == (unsigned __int8)byte_98A1B0[v9] )\n          goto LABEL_9;\n      }\n      else if ( !v8 )\n      {\n        v9 = *(signed int *)((char *)ptr + v7);\nLABEL_9:\n        LODWORD(v10) = *((_DWORD *)&xmmword_954FB0 + 19 * v9 + 2);\n        if ( (_DWORD)v10 )\n        {\n          do\n          {\n            sub_40BAB0(v10, v4, 0);\n            v10 = (signed int)v10;\n            if ( dword_8E947C[95 * (signed int)v10] != (_DWORD)v10 )\n              sub_4340E0(\"engine/dragon.c\", 2201LL, \"worm[w].origin == w\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n            LODWORD(v10) = dword_864E60[v10];\n          }\n          while ( (_DWORD)v10 );\n          v5 = dword_98A7DC;\n        }\n        goto LABEL_14;\n      }\nLABEL_14:\n      ++v6;\n    }\n    while ( v6 < v5 );\n  }\n  v11 = 21;\n  v12 = 0LL;\n  v13 = dword_9555F0;\n  do\n  {\n    v14 = byte_98A1C5[v12];\n    if ( v14 != 3 )\n    {\n      if ( *(_BYTE *)(v4 + v12 + 21) )\n      {\n        if ( (unsigned __int8)(v14 - 1) >= 2u )\n          sub_4340E0(\n            \"engine/dragon.c\",\n            1111LL,\n            \"IS_STONE(board[ii])\",\n            ((signed int)v12 + 21) / 0x14u - 1,\n            (unsigned int)v12 + 20 - 20 * (v11 / 0x14));\n        v15 = (*((float *)ptr + 26 * *v13 + 17) * -0.3 + 1.0) * 100.0;\n      }\n      else\n      {\n        v15 = 0.0;\n      }\n      *(float *)(v3 + 4 * v12 + 84) = v15;\n    }\n    ++v12;\n    v13 += 19;\n    ++v11;\n  }\n  while ( v12 != 379 );\n  result = -28804LL;\n  v17 = 21LL;\n  do\n  {\n    if ( (unsigned __int8)(byte_98A1B0[v17] - 1) <= 1u )\n    {\n      v18 = *((_DWORD *)ptr + 26 * dword_95C674[result / 4] + 15);\n      if ( v18 == 5\n        || *(_DWORD *)((char *)&qword_90E660 + 5 * result)\n        && v18\n        && v18 != 6\n        && (v18 != 2 || (unsigned __int8)byte_98A1B0[v17] == a1) )\n      {\n        *(_BYTE *)(v4 + v17) = 1;\n      }\n    }\n    ++v17;\n    result += 76LL;\n  }\n  while ( result );\n  return result;\n}\n", 
            "funcStartAddr": "0x414850L", 
            "funcEndAddr": "0x414ad9L", 
            "funcName": "sub_414850"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_414AE0()\n{\n  __int64 v1; // [rsp+0h] [rbp-7E8h]\n  char v2; // [rsp+190h] [rbp-658h]\n\n  sub_414850(2u, (__int64)&v1, (__int64)&v2);\n  sub_419D50(2LL, &v1, &v2, &unk_927B28, 0LL, \"initial black influence, dragons known\");\n  sub_414850(1u, (__int64)&v1, (__int64)&v2);\n  return sub_419D50(1LL, &v1, &v2, &unk_9333A0, 0LL, \"initial white influence, dragons known\");\n}\n", 
            "funcStartAddr": "0x414ae0L", 
            "funcEndAddr": "0x414b5cL", 
            "funcName": "sub_414AE0"
        }, 
        {
            "decompiledFuncCode": "char __fastcall sub_414B60(__int64 a1, __int64 a2)\n{\n  unsigned __int64 v2; // rbx\n  signed __int64 v3; // r14\n  __int64 v4; // r15\n  __int64 v5; // r8\n  double v6; // xmm0_8\n  __int64 v7; // r9\n  __int64 v8; // r12\n  __int64 v9; // rbp\n  __int64 v10; // ST08_8\n  __int64 v11; // ST00_8\n  int v12; // eax\n  const char *v13; // rdi\n  __int64 v14; // rsi\n  __int64 v15; // rsi\n  __int64 v16; // rsi\n  __int64 v17; // rsi\n  __int64 v18; // rsi\n  __int64 v19; // rsi\n  __int64 v20; // rsi\n  __int64 v21; // rsi\n  __int64 v22; // rsi\n  __int64 v23; // rsi\n  __int64 v24; // rsi\n  __int64 v25; // rsi\n  __int64 v26; // rsi\n  __int64 v27; // rsi\n  __int64 v28; // rsi\n  __int64 v29; // rsi\n  __int64 v30; // rsi\n  __int64 v31; // rsi\n  __int64 v32; // rsi\n  __int64 v33; // rsi\n  __int64 v34; // rsi\n  __int64 v35; // rsi\n  __int64 v36; // rsi\n  __int64 v37; // rsi\n  __int64 v38; // rsi\n  __int64 v39; // rsi\n  __int64 v40; // rsi\n  __int64 v41; // rsi\n  __int64 v42; // rsi\n  __int64 v43; // rsi\n  __int64 v44; // rsi\n  __int64 v45; // rsi\n  __int64 v46; // rsi\n  __int64 v47; // rsi\n  __int64 v48; // rsi\n  __int64 v49; // rsi\n  __int64 v50; // rsi\n  __int64 v51; // rsi\n  __int64 v52; // rsi\n  __int64 v53; // rsi\n  signed __int64 v54; // r14\n  char result; // al\n  unsigned __int64 v56; // r15\n  char *v57; // r13\n  int v58; // ST24_4\n  double v59; // ST30_8\n  signed __int64 v60; // r12\n  __int64 v61; // r9\n  double v62; // xmm1_8\n  double v63; // xmm2_8\n  double v64; // xmm3_8\n  char *v65; // ST18_8\n  __int64 v66; // ST10_8\n  char *v67; // ST08_8\n  char *v68; // ST00_8\n  char *v69; // rsi\n  __int64 v70; // rsi\n  __int64 v71; // rdx\n  __int64 v72; // rsi\n  __int64 v73; // rdx\n  char *v74; // rbp\n  signed __int64 v75; // rbx\n  __int64 v76; // rsi\n\n  v2 = -28804LL;\n  v3 = 21LL;\n  do\n  {\n    if ( (unsigned __int8)(byte_98A1B0[v3] - 1) <= 1u && v3 == dword_90E63C[5 * v2 / 4] )\n    {\n      v4 = (unsigned int)dword_95C678[v2 / 4];\n      sub_4341A0();\n      v5 = (unsigned int)dword_90E634[5 * v2 / 4];\n      v6 = *(float *)&dword_90E638[5 * v2 / 4];\n      v7 = (unsigned int)dword_90E65C[5 * v2 / 4];\n      v8 = (unsigned int)dword_90E648[5 * v2 / 4];\n      v9 = (unsigned int)dword_90E64C[5 * v2 / 4];\n      v10 = (unsigned int)dword_90E644[5 * v2 / 4];\n      v11 = (unsigned int)dword_90E640[5 * v2 / 4];\n      sub_433F90((unsigned __int64)\"%1m : (dragon %1m) %s string of size %d (%f), genus %d: (%d,%d,%d,%d)\");\n      v12 = dword_90E654[5 * v2 / 4];\n      if ( v12 == 2 )\n      {\n        v13 = \"%o - is a cutting stone\\n\";\n      }\n      else if ( v12 == 1 )\n      {\n        v13 = \"%o - is a potential cutting stone\\n\";\n      }\n      else\n      {\n        v13 = \"%o\\n\";\n      }\n      sub_433F90((char)v13);\n      if ( dword_90E658[5 * v2 / 4] > 0 )\n        sub_433F90((unsigned __int64)\"- cutstone2 = %d\\n\");\n      if ( *(_DWORD *)((char *)&xmmword_90E68C + 5 * v2 + 8) )\n      {\n        v14 = *(unsigned int *)((char *)&xmmword_90E66C + 5 * v2);\n        sub_433F90((unsigned __int64)\"- attackable at %1m, attack code = %d\\n\");\n        if ( *(_DWORD *)((char *)&xmmword_90E68C + 5 * v2 + 12) )\n        {\n          v15 = *(unsigned int *)((char *)&xmmword_90E66C + 5 * v2 + 4);\n          sub_433F90((unsigned __int64)\"- attackable at %1m, attack code = %d\\n\");\n          if ( *(_DWORD *)((char *)&xmmword_90E69C + 5 * v2) )\n          {\n            v16 = *(unsigned int *)((char *)&xmmword_90E66C + 5 * v2 + 8);\n            sub_433F90((unsigned __int64)\"- attackable at %1m, attack code = %d\\n\");\n            if ( *(_DWORD *)((char *)&xmmword_90E69C + 5 * v2 + 4) )\n            {\n              v17 = *(unsigned int *)((char *)&xmmword_90E66C + 5 * v2 + 12);\n              sub_433F90((unsigned __int64)\"- attackable at %1m, attack code = %d\\n\");\n              if ( *(_DWORD *)((char *)&xmmword_90E69C + 5 * v2 + 8) )\n              {\n                v18 = *(unsigned int *)((char *)&xmmword_90E67C + 5 * v2);\n                sub_433F90((unsigned __int64)\"- attackable at %1m, attack code = %d\\n\");\n                if ( *(_DWORD *)((char *)&xmmword_90E69C + 5 * v2 + 12) )\n                {\n                  v19 = *(unsigned int *)((char *)&xmmword_90E67C + 5 * v2 + 4);\n                  sub_433F90((unsigned __int64)\"- attackable at %1m, attack code = %d\\n\");\n                  if ( *(_DWORD *)((char *)&xmmword_90E6AC + 5 * v2) )\n                  {\n                    v20 = *(unsigned int *)((char *)&xmmword_90E67C + 5 * v2 + 8);\n                    sub_433F90((unsigned __int64)\"- attackable at %1m, attack code = %d\\n\");\n                    if ( *(_DWORD *)((char *)&xmmword_90E6AC + 5 * v2 + 4) )\n                    {\n                      v21 = *(unsigned int *)((char *)&xmmword_90E67C + 5 * v2 + 12);\n                      sub_433F90((unsigned __int64)\"- attackable at %1m, attack code = %d\\n\");\n                      if ( *(_DWORD *)((char *)&xmmword_90E6AC + 5 * v2 + 8) )\n                      {\n                        v22 = *(unsigned int *)((char *)&xmmword_90E68C + 5 * v2);\n                        sub_433F90((unsigned __int64)\"- attackable at %1m, attack code = %d\\n\");\n                        if ( *(_DWORD *)((char *)&xmmword_90E6AC + 5 * v2 + 12) )\n                        {\n                          v23 = *(unsigned int *)((char *)&xmmword_90E68C + 5 * v2 + 4);\n                          sub_433F90((unsigned __int64)\"- attackable at %1m, attack code = %d\\n\");\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      if ( *(_DWORD *)((char *)&xmmword_90E6DC + 5 * v2 + 8) )\n      {\n        v24 = *(unsigned int *)((char *)&xmmword_90E6BC + 5 * v2);\n        sub_433F90((unsigned __int64)\"- defendable at %1m, defend code = %d\\n\");\n        if ( *(_DWORD *)((char *)&xmmword_90E6DC + 5 * v2 + 12) )\n        {\n          v25 = *(unsigned int *)((char *)&xmmword_90E6BC + 5 * v2 + 4);\n          sub_433F90((unsigned __int64)\"- defendable at %1m, defend code = %d\\n\");\n          if ( *(_DWORD *)((char *)&xmmword_90E6EC + 5 * v2) )\n          {\n            v26 = *(unsigned int *)((char *)&xmmword_90E6BC + 5 * v2 + 8);\n            sub_433F90((unsigned __int64)\"- defendable at %1m, defend code = %d\\n\");\n            if ( *(_DWORD *)((char *)&xmmword_90E6EC + 5 * v2 + 4) )\n            {\n              v27 = *(unsigned int *)((char *)&xmmword_90E6BC + 5 * v2 + 12);\n              sub_433F90((unsigned __int64)\"- defendable at %1m, defend code = %d\\n\");\n              if ( *(_DWORD *)((char *)&xmmword_90E6EC + 5 * v2 + 8) )\n              {\n                v28 = *(unsigned int *)((char *)&xmmword_90E6CC + 5 * v2);\n                sub_433F90((unsigned __int64)\"- defendable at %1m, defend code = %d\\n\");\n                if ( *(_DWORD *)((char *)&xmmword_90E6EC + 5 * v2 + 12) )\n                {\n                  v29 = *(unsigned int *)((char *)&xmmword_90E6CC + 5 * v2 + 4);\n                  sub_433F90((unsigned __int64)\"- defendable at %1m, defend code = %d\\n\");\n                  if ( *(_DWORD *)((char *)&xmmword_90E6FC + 5 * v2) )\n                  {\n                    v30 = *(unsigned int *)((char *)&xmmword_90E6CC + 5 * v2 + 8);\n                    sub_433F90((unsigned __int64)\"- defendable at %1m, defend code = %d\\n\");\n                    if ( *(_DWORD *)((char *)&xmmword_90E6FC + 5 * v2 + 4) )\n                    {\n                      v31 = *(unsigned int *)((char *)&xmmword_90E6CC + 5 * v2 + 12);\n                      sub_433F90((unsigned __int64)\"- defendable at %1m, defend code = %d\\n\");\n                      if ( *(_DWORD *)((char *)&xmmword_90E6FC + 5 * v2 + 8) )\n                      {\n                        v32 = *(unsigned int *)((char *)&xmmword_90E6DC + 5 * v2);\n                        sub_433F90((unsigned __int64)\"- defendable at %1m, defend code = %d\\n\");\n                        if ( *(_DWORD *)((char *)&xmmword_90E6FC + 5 * v2 + 12) )\n                        {\n                          v33 = *(unsigned int *)((char *)&xmmword_90E6DC + 5 * v2 + 4);\n                          sub_433F90((unsigned __int64)\"- defendable at %1m, defend code = %d\\n\");\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      if ( dword_90E734[5 * v2 / 4] )\n      {\n        v34 = (unsigned int)dword_90E70C[5 * v2 / 4];\n        sub_433F90((unsigned __int64)\"- attack threat at %1m, attack threat code = %d\\n\");\n        if ( dword_90E738[5 * v2 / 4] )\n        {\n          v35 = (unsigned int)dword_90E710[5 * v2 / 4];\n          sub_433F90((unsigned __int64)\"- attack threat at %1m, attack threat code = %d\\n\");\n          if ( dword_90E73C[5 * v2 / 4] )\n          {\n            v36 = (unsigned int)dword_90E714[5 * v2 / 4];\n            sub_433F90((unsigned __int64)\"- attack threat at %1m, attack threat code = %d\\n\");\n            if ( dword_90E740[5 * v2 / 4] )\n            {\n              v37 = (unsigned int)dword_90E718[5 * v2 / 4];\n              sub_433F90((unsigned __int64)\"- attack threat at %1m, attack threat code = %d\\n\");\n              if ( dword_90E744[5 * v2 / 4] )\n              {\n                v38 = (unsigned int)dword_90E71C[5 * v2 / 4];\n                sub_433F90((unsigned __int64)\"- attack threat at %1m, attack threat code = %d\\n\");\n                if ( dword_90E748[5 * v2 / 4] )\n                {\n                  v39 = (unsigned int)dword_90E720[5 * v2 / 4];\n                  sub_433F90((unsigned __int64)\"- attack threat at %1m, attack threat code = %d\\n\");\n                  if ( dword_90E74C[5 * v2 / 4] )\n                  {\n                    v40 = (unsigned int)dword_90E724[5 * v2 / 4];\n                    sub_433F90((unsigned __int64)\"- attack threat at %1m, attack threat code = %d\\n\");\n                    if ( dword_90E750[5 * v2 / 4] )\n                    {\n                      v41 = (unsigned int)dword_90E728[5 * v2 / 4];\n                      sub_433F90((unsigned __int64)\"- attack threat at %1m, attack threat code = %d\\n\");\n                      if ( dword_90E754[5 * v2 / 4] )\n                      {\n                        v42 = (unsigned int)dword_90E72C[5 * v2 / 4];\n                        sub_433F90((unsigned __int64)\"- attack threat at %1m, attack threat code = %d\\n\");\n                        if ( dword_90E758[5 * v2 / 4] )\n                        {\n                          v43 = (unsigned int)dword_90E730[5 * v2 / 4];\n                          sub_433F90((unsigned __int64)\"- attack threat at %1m, attack threat code = %d\\n\");\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      if ( dword_90E784[5 * v2 / 4] )\n      {\n        v44 = (unsigned int)dword_90E75C[5 * v2 / 4];\n        sub_433F90((unsigned __int64)\"- defense threat at %1m, defense threat code = %d\\n\");\n        if ( dword_90E788[5 * v2 / 4] )\n        {\n          v45 = (unsigned int)dword_90E760[5 * v2 / 4];\n          sub_433F90((unsigned __int64)\"- defense threat at %1m, defense threat code = %d\\n\");\n          if ( dword_90E78C[5 * v2 / 4] )\n          {\n            v46 = (unsigned int)dword_90E764[5 * v2 / 4];\n            sub_433F90((unsigned __int64)\"- defense threat at %1m, defense threat code = %d\\n\");\n            if ( dword_90E790[5 * v2 / 4] )\n            {\n              v47 = (unsigned int)dword_90E768[5 * v2 / 4];\n              sub_433F90((unsigned __int64)\"- defense threat at %1m, defense threat code = %d\\n\");\n              if ( dword_90E794[5 * v2 / 4] )\n              {\n                v48 = (unsigned int)dword_90E76C[5 * v2 / 4];\n                sub_433F90((unsigned __int64)\"- defense threat at %1m, defense threat code = %d\\n\");\n                if ( dword_90E798[5 * v2 / 4] )\n                {\n                  v49 = (unsigned int)dword_90E770[5 * v2 / 4];\n                  sub_433F90((unsigned __int64)\"- defense threat at %1m, defense threat code = %d\\n\");\n                  if ( dword_90E79C[5 * v2 / 4] )\n                  {\n                    v50 = (unsigned int)dword_90E774[5 * v2 / 4];\n                    sub_433F90((unsigned __int64)\"- defense threat at %1m, defense threat code = %d\\n\");\n                    if ( dword_90E7A0[5 * v2 / 4] )\n                    {\n                      v51 = (unsigned int)dword_90E778[5 * v2 / 4];\n                      sub_433F90((unsigned __int64)\"- defense threat at %1m, defense threat code = %d\\n\");\n                      if ( dword_90E7A4[5 * v2 / 4] )\n                      {\n                        v52 = (unsigned int)dword_90E77C[5 * v2 / 4];\n                        sub_433F90((unsigned __int64)\"- defense threat at %1m, defense threat code = %d\\n\");\n                        if ( *(_DWORD *)((char *)dword_90E7A8 + 5 * v2) )\n                        {\n                          v53 = (unsigned int)dword_90E780[5 * v2 / 4];\n                          sub_433F90((unsigned __int64)\"- defense threat at %1m, defense threat code = %d\\n\");\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      a2 = (unsigned int)dword_90E650[5 * v2 / 4];\n      if ( (_DWORD)a2 )\n        sub_433F90((unsigned __int64)\"... adjacent worm %1m is lunch\\n\");\n      if ( *(_DWORD *)((char *)&qword_90E660 + 5 * v2) )\n        sub_433F90((unsigned __int64)\"- is inessential\\n\");\n      if ( *(_DWORD *)((char *)&qword_90E660 + 5 * v2 + 4) )\n        sub_433F90((unsigned __int64)\"- is invincible\\n\");\n      if ( (unsigned int)sub_40B8D0(v3) )\n        sub_433F90((unsigned __int64)\"- is a ko stone\\n\");\n    }\n    ++v3;\n    v2 += 76LL;\n  }\n  while ( v2 );\n  sub_433F90((unsigned __int64)\"%o\\n\");\n  v54 = 21LL;\n  do\n  {\n    result = byte_98A1B0[v54];\n    if ( (unsigned __int8)(result - 1) <= 1u )\n    {\n      v56 = 76 * v54;\n      if ( v54 == *((_DWORD *)&xmmword_954FB0 + 19 * v54 + 2) )\n      {\n        v57 = (char *)ptr;\n        v58 = *((_DWORD *)&xmmword_954FB0 + 19 * v54 + 3);\n        v59 = *(float *)((char *)&xmmword_954FC0 + v56);\n        v60 = 104LL * *((signed int *)&xmmword_954FB0 + 19 * v54 + 1);\n        sub_426340((char *)ptr + v60 + 76, a2);\n        v61 = *(unsigned int *)&v57[v60 + 72];\n        v62 = *(float *)&v57[v60 + 56];\n        v63 = *(float *)&v57[v60 + 68];\n        v64 = *(float *)&v57[v60 + 64];\n        v65 = off_4AE560[*(signed int *)&v57[v60 + 60]];\n        v66 = *(unsigned int *)&v57[v60 + 52];\n        v67 = off_4AE530[dword_954FF0[v56 / 4]];\n        v68 = off_4AE530[*((signed int *)&xmmword_954FC0 + 19 * v54 + 1)];\n        sub_433F90((unsigned __int64)\"%1m : %s dragon size %d (%f), genus %s, escape factor %d, crude status %s, status %\"\n                                     \"s, moyo size %d, moyo territory value %f, safety %s, weakness pre owl %f, weakness %f\");\n        v69 = off_4AE530[*((signed int *)&xmmword_954FC0 + 19 * v54 + 3)];\n        sub_433F90((unsigned __int64)\", owl status %s\\n\");\n        if ( *((_DWORD *)&xmmword_954FC0 + 19 * v54 + 3) == 2 )\n        {\n          v70 = *(unsigned int *)((char *)&xmmword_954FD0 + v56);\n          v71 = *((unsigned int *)&xmmword_954FD0 + 19 * v54 + 1);\n          sub_433F90((unsigned __int64)\"... owl attackable at %1m, code %d\\n\");\n          v72 = *(unsigned int *)((char *)&xmmword_954FE0 + v56);\n          v73 = *((unsigned int *)&xmmword_954FE0 + 19 * v54 + 1);\n          sub_433F90((unsigned __int64)\"... owl defendable at %1m, code %d\\n\");\n        }\n        sub_433F90((unsigned __int64)\"... neighbors\");\n        if ( *(_DWORD *)&v57[v60 + 44] > 0 )\n        {\n          v74 = &v57[v60 + 44];\n          v75 = 0LL;\n          do\n          {\n            v76 = *((unsigned int *)ptr + 26 * *(signed int *)&v74[4 * v75 - 40]);\n            sub_433F90((unsigned __int64)\" %1m\");\n            ++v75;\n          }\n          while ( v75 < *(signed int *)v74 );\n        }\n        result = sub_433F90((unsigned __int64)\"\\n\");\n        a2 = *(unsigned int *)&v57[v60 + 84];\n        if ( (_DWORD)a2 )\n          result = sub_433F90((unsigned __int64)\"... adjacent worm %1m is lunch\\n\");\n      }\n    }\n    ++v54;\n  }\n  while ( v54 != 400 );\n  return result;\n}\n", 
            "funcStartAddr": "0x414b60L", 
            "funcEndAddr": "0x415400L", 
            "funcName": "sub_414B60"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_415400(int a1, int a2)\n{\n  int v2; // ebx\n  signed __int64 result; // rax\n  int v4; // ebp\n  int v5; // eax\n  int v6; // ecx\n  __int64 v7; // rcx\n  signed __int64 v8; // rcx\n  int v9; // edx\n  __int64 v10; // rcx\n  int v11; // edx\n  signed __int64 v12; // rcx\n  int *v13; // rdx\n  int v14; // esi\n\n  v2 = *((_DWORD *)&xmmword_954FB0 + 19 * a1 + 2);\n  result = 76LL * a2;\n  v4 = *((_DWORD *)&xmmword_954FB0 + 19 * a2 + 2);\n  if ( v2 != v4 )\n  {\n    if ( byte_98A1B0[v2] != byte_98A1B0[v4] )\n      sub_4340E0(\"engine/dragon.c\", 1563LL, \"board[d1] == board[d2]\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n    if ( byte_864E50 == 1 )\n      sub_4340E0(\"engine/dragon.c\", 1564LL, \"dragon2_initialized == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n    if ( (unsigned __int8)(byte_98A1B0[v2] - 1) >= 2u )\n      sub_4340E0(\"engine/dragon.c\", 1565LL, \"((board[d1]) == 1 || (board[d1]) == 2)\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n    v5 = dword_8E9474[95 * v2];\n    v6 = dword_8E9474[95 * v4];\n    if ( v5 <= v6 && (v2 >= v4 || v5 != v6) )\n    {\n      v7 = v4;\n      result = (unsigned int)v4;\n      if ( dword_88C264 & 0x20 )\n      {\n        sub_433F90((unsigned __int64)\"joining dragon at %1m to dragon at %1m\\n\");\n        v7 = v4;\n        result = (unsigned int)v4;\n      }\n    }\n    else\n    {\n      v7 = v2;\n      result = (unsigned int)v2;\n      if ( dword_88C264 & 0x20 )\n      {\n        sub_433F90((unsigned __int64)\"joining dragon at %1m to dragon at %1m\\n\");\n        v7 = v2;\n        result = (unsigned int)v2;\n      }\n    }\n    v8 = 76 * v7;\n    *(_DWORD *)(v8 + 9785276) = *((_DWORD *)&xmmword_954FB0 + 19 * v4 + 3) + *((_DWORD *)&xmmword_954FB0 + 19 * v2 + 3);\n    *(float *)((char *)&xmmword_954FC0 + v8) = *((float *)&xmmword_954FC0 + 19 * v4)\n                                             + *((float *)&xmmword_954FC0 + 19 * v2);\n    v9 = result;\n    do\n    {\n      v10 = v9;\n      v9 = dword_864E60[v9];\n    }\n    while ( v9 );\n    v11 = v2;\n    if ( (_DWORD)result == v2 )\n      v11 = v4;\n    dword_864E60[v10] = v11;\n    v12 = -378LL;\n    v13 = &dword_955640;\n    if ( byte_98A33F[-378] != 3 )\n    {\nLABEL_22:\n      v14 = *(v13 - 19);\n      if ( v14 == v2 || v14 == v4 )\n        *(v13 - 19) = result;\n    }\n    while ( v12 )\n    {\n      if ( byte_98A340[v12] != 3 && (*v13 == v2 || *v13 == v4) )\n        *v13 = result;\n      v12 += 2LL;\n      v13 += 38;\n      if ( byte_98A33F[v12] != 3 )\n        goto LABEL_22;\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x415400L", 
            "funcEndAddr": "0x4155e9L", 
            "funcName": "sub_415400"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4155F0(__int64 a1, int a2, __int64 a3)\n{\n  int v3; // ebx\n  int v4; // er9\n  signed int v5; // er12\n  signed __int64 v6; // rcx\n  __int64 v7; // rdx\n  int v8; // ecx\n  int v9; // ebp\n  int v10; // er8\n  __int64 v11; // r14\n  __int64 v12; // r15\n  int v13; // er10\n  int v14; // er10\n  int v15; // er10\n  int v16; // er11\n  int v17; // er11\n  int v18; // er11\n  int v19; // er15\n  int v20; // er15\n  int v21; // er15\n  int v22; // er15\n  int v23; // er15\n  int v24; // er15\n  int v25; // er15\n  __int64 v26; // r14\n  int v27; // er10\n  __int64 v28; // r10\n  int v29; // er11\n  __int64 v30; // r11\n  int v31; // er11\n  __int64 v32; // r11\n  int v33; // er11\n  int v34; // er11\n  int v35; // er11\n  int v36; // er11\n  int v37; // er15\n  int v38; // er15\n  int v39; // er10\n  int v40; // er10\n  __int64 v41; // rsi\n  __int64 v42; // rdx\n  __int64 v43; // r11\n  int v44; // er10\n  int v45; // er14\n  char v46; // r9\n  int v47; // er11\n  char v48; // r14\n  __int64 v49; // r13\n  int v50; // er13\n  __int64 v51; // rbx\n  int *v52; // rbp\n  __int64 v53; // r14\n  int v54; // edx\n  char v56; // [rsp+Ch] [rbp-5ECh]\n  char v57; // [rsp+Ch] [rbp-5ECh]\n  unsigned int v58; // [rsp+10h] [rbp-5E8h]\n  int v59; // [rsp+14h] [rbp-5E4h]\n  __int64 v60; // [rsp+18h] [rbp-5E0h]\n  int v61[374]; // [rsp+20h] [rbp-5D8h]\n\n  v60 = a3;\n  v3 = a2;\n  if ( (unsigned int)(a2 - 1) >= 2 )\n    sub_4340E0(\"engine/dragon.c\", 1721LL, \"((color) == 1 || (color) == 2)\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  if ( !byte_865AE0 )\n  {\n    memset(dword_8654A0, 0, 0x640uLL);\n    byte_865AE0 = 1;\n  }\n  v4 = 3 - a2;\n  v5 = 0;\n  v6 = 21LL;\n  do\n  {\n    if ( byte_98A1B0[v6] != 3 && *(_BYTE *)(a1 + v6) )\n    {\n      v7 = v5++;\n      v61[v7] = v6;\n      dword_8654A0[v6] = 1;\n    }\n    ++v6;\n  }\n  while ( v6 != 400 );\n  v58 = 0;\n  v8 = 0;\n  v9 = 0;\n  v59 = 3 - a2;\n  do\n  {\n    if ( v9 >= v5 )\n      goto LABEL_132;\n    v10 = v5;\n    do\n    {\nLABEL_97:\n      v41 = v9;\n      while ( 1 )\n      {\n        v42 = v61[v41];\n        if ( v3 == 2 )\n          break;\n        if ( v3 != 1 || !(byte_97738D[36 * v42] & 4) && byte_977390[36 * v42] != 1 )\n          goto LABEL_107;\nLABEL_105:\n        if ( ++v41 >= v5 )\n          goto LABEL_131;\n      }\n      if ( byte_96CACD[36 * v42] & 4 || byte_96CAD0[36 * v42] == 1 )\n        goto LABEL_105;\nLABEL_107:\n      v9 = v41 + 1;\n      if ( v8 == 4 )\n      {\n        v58 += *(char *)(v60 + v42);\n        if ( v5 <= v9 )\n          break;\n        goto LABEL_97;\n      }\n      LODWORD(v12) = (unsigned __int8)byte_98A1C4[v42];\n      if ( (_DWORD)v12 != 3 && !dword_8654F0[v42] )\n      {\n        if ( (_DWORD)v12 == v3\n          || !(_BYTE)v12\n          && (v13 = (unsigned __int8)byte_98A1C5[v42], v13 != 3)\n          && v4 != v13\n          && (v14 = (unsigned __int8)byte_98A1D8[v42], v14 != 3)\n          && v4 != v14\n          && (v15 = (unsigned __int8)byte_98A1C3[v42], v15 != 3)\n          && v4 != v15 )\n        {\n          v43 = v10++;\n          v61[v43] = v42 + 20;\n          dword_8654F0[v42] = 1;\n        }\n      }\n      v44 = (unsigned __int8)byte_98A1AF[v42];\n      if ( v44 != 3 && !dword_86549C[v42] )\n      {\n        if ( v44 == v3\n          || !(_BYTE)v44\n          && (v16 = (unsigned __int8)byte_98A1C3[v42], v16 != 3)\n          && v4 != v16\n          && (v17 = (unsigned __int8)byte_98A1AE[v42], v17 != 3)\n          && v4 != v17\n          && (v18 = (unsigned __int8)byte_98A19B[v42], v18 != 3)\n          && v4 != v18 )\n        {\n          v45 = v4;\n          v46 = v12;\n          v12 = v10++;\n          v61[v12] = v42 - 1;\n          LOBYTE(v12) = v46;\n          v4 = v45;\n          dword_86549C[v42] = 1;\n        }\n      }\n      v47 = (unsigned __int8)byte_98A19C[v42];\n      if ( v47 != 3 && !dword_865450[v42] )\n      {\n        v48 = v12;\n        if ( v47 == v3\n          || !(_BYTE)v47\n          && (v19 = (unsigned __int8)byte_98A19B[v42], v19 != 3)\n          && v4 != v19\n          && (v20 = (unsigned __int8)byte_98A188[v42], v20 != 3)\n          && v4 != v20\n          && (v21 = (unsigned __int8)byte_98A19D[v42], v21 != 3)\n          && v4 != v21 )\n        {\n          v49 = v10++;\n          v61[v49] = v42 - 20;\n          dword_865450[v42] = 1;\n        }\n        LOBYTE(v12) = v48;\n      }\n      v50 = (unsigned __int8)byte_98A1B1[v42];\n      if ( v50 != 3 && !dword_8654A4[v42] )\n      {\n        v56 = v12;\n        if ( v50 == v3\n          || !(_BYTE)v50\n          && (v22 = (unsigned __int8)byte_98A19D[v42], v22 != 3)\n          && v4 != v22\n          && (v23 = (unsigned __int8)byte_98A1B2[v42], v23 != 3)\n          && v4 != v23\n          && (v24 = (unsigned __int8)byte_98A1C5[v42], v24 != 3)\n          && v4 != v24 )\n        {\n          v11 = v10++;\n          v61[v11] = v42 + 1;\n          v4 = v59;\n          dword_8654A4[v42] = 1;\n        }\n        LOBYTE(v12) = v56;\n        if ( !v8 )\n          goto LABEL_17;\n        continue;\n      }\n      if ( v8 )\n        continue;\nLABEL_17:\n      if ( !(_BYTE)v12 )\n      {\n        if ( (_BYTE)v44 )\n        {\nLABEL_21:\n          if ( !(_BYTE)v47 )\n            goto LABEL_60;\n        }\n        else\n        {\n          if ( dword_8654EC[v42] )\n            goto LABEL_24;\n          v57 = v12;\n          v25 = (unsigned __int8)byte_98A1B0[v42 + 19];\n          if ( v25 == v3\n            || !(_BYTE)v25\n            && (v37 = (unsigned __int8)byte_98A1D7[v42], v37 != 3)\n            && v4 != v37\n            && (v38 = (unsigned __int8)byte_98A1C2[v42], v38 != 3)\n            && v4 != v38 )\n          {\n            v26 = v10++;\n            v61[v26] = v42 + 19;\n            dword_8654EC[v42] = 1;\n          }\n          LOBYTE(v12) = v57;\n          if ( !(_BYTE)v47 )\n            goto LABEL_59;\n        }\nLABEL_25:\n        if ( (_BYTE)v50 )\n          continue;\n        goto LABEL_62;\n      }\n      if ( (_BYTE)v44 )\n        goto LABEL_21;\nLABEL_24:\n      if ( (_BYTE)v47 )\n        goto LABEL_25;\nLABEL_59:\n      if ( dword_86544C[v42]\n        || (v29 = (unsigned __int8)byte_98A1B0[v42 - 21], v29 != v3)\n        && ((_BYTE)v29\n         || (v33 = (unsigned __int8)byte_98A19A[v42], v33 == 3)\n         || v4 == v33\n         || (v34 = (unsigned __int8)byte_98A187[v42], v34 == 3)\n         || v4 == v34) )\n      {\nLABEL_60:\n        if ( (_BYTE)v50 )\n          continue;\n      }\n      else\n      {\n        v30 = v10++;\n        v61[v30] = v42 - 21;\n        dword_86544C[v42] = 1;\n        if ( (_BYTE)v50 )\n          continue;\n      }\n      if ( dword_865454[v42]\n        || (v31 = (unsigned __int8)byte_98A1B0[v42 - 19], v31 != v3)\n        && ((_BYTE)v31\n         || (v35 = (unsigned __int8)byte_98A189[v42], v35 == 3)\n         || v4 == v35\n         || (v36 = (unsigned __int8)byte_98A19E[v42], v36 == 3)\n         || v4 == v36) )\n      {\nLABEL_62:\n        if ( (_BYTE)v12 )\n          continue;\n      }\n      else\n      {\n        v32 = v10++;\n        v61[v32] = v42 - 19;\n        dword_865454[v42] = 1;\n        if ( (_BYTE)v12 )\n          continue;\n      }\n      if ( !dword_8654F4[v42] )\n      {\n        v27 = (unsigned __int8)byte_98A1B0[v42 + 21];\n        if ( v27 == v3\n          || !(_BYTE)v27\n          && (v39 = (unsigned __int8)byte_98A1C6[v42], v39 != 3)\n          && v4 != v39\n          && (v40 = (unsigned __int8)byte_98A1D9[v42], v40 != 3)\n          && v4 != v40 )\n        {\n          v28 = v10++;\n          v61[v28] = v42 + 21;\n          dword_8654F4[v42] = 1;\n        }\n        if ( v5 <= v9 )\n          break;\n        goto LABEL_97;\n      }\n    }\n    while ( v5 > v9 );\n    LODWORD(v41) = v41 + 1;\nLABEL_131:\n    v5 = v10;\n    v9 = v41;\nLABEL_132:\n    ++v8;\n  }\n  while ( v8 != 5 );\n  if ( v5 > 0 )\n  {\n    v51 = (unsigned int)v5;\n    v52 = v61;\n    do\n    {\n      v53 = *v52;\n      if ( dword_8654A0[v53] != 1 )\n      {\n        v54 = (1717986919 * v53 >> 35) + ((unsigned __int64)(1717986919 * v53) >> 63);\n        sub_4340E0(\n          \"engine/dragon.c\",\n          1853LL,\n          \"mx[queue[k]] == 1\",\n          (unsigned int)(v54 - 1),\n          (unsigned int)(v53 - 20 * v54 - 1));\n      }\n      dword_8654A0[v53] = 0;\n      ++v52;\n      --v51;\n    }\n    while ( v51 );\n  }\n  return v58;\n}\n", 
            "funcStartAddr": "0x4155f0L", 
            "funcEndAddr": "0x415d4aL", 
            "funcName": "sub_4155F0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_415D50(__int64 a1)\n{\n  int *v1; // rax\n  int *v2; // rcx\n  signed __int64 v3; // rdx\n  int v4; // edi\n  int v5; // esi\n  __int64 v6; // rsi\n  float v7; // xmm2_4\n  signed int v8; // ebp\n  double v9; // xmm3_8\n  __int64 v10; // rdi\n  int v11; // xmm5_4\n  double v12; // xmm2_8\n  int v13; // xmm4_4\n  signed __int64 v14; // rdi\n  __int64 v15; // rbp\n  int v16; // xmm4_4\n  int v17; // xmm4_4\n  signed __int64 v18; // rbp\n  signed __int64 v19; // rdi\n  bool v20; // sf\n  unsigned __int8 v21; // of\n  __int64 v22; // rsi\n  float v23; // xmm2_4\n  signed int v24; // ebp\n  double v25; // xmm3_8\n  __int64 v26; // rdi\n  int v27; // xmm5_4\n  double v28; // xmm2_8\n  int v29; // xmm4_4\n  signed __int64 v30; // rdi\n  __int64 v31; // rbp\n  int v32; // xmm4_4\n  int v33; // xmm4_4\n  signed __int64 v34; // rbp\n  signed __int64 v35; // rdi\n  signed __int64 result; // rax\n  int *v37; // rcx\n  signed __int64 v38; // rdx\n  __int64 v39; // rsi\n  signed int v40; // edi\n  int v41; // esi\n  __int64 v42; // r8\n  signed int *v43; // r9\n  __int64 v44; // rdx\n  __int64 v45; // rdi\n  signed __int64 v46; // r10\n  float v47; // xmm0_4\n  signed __int64 v48; // rsi\n  int *v49; // rcx\n  signed int v50; // er11\n  __int64 v51; // rbx\n  int v52[21]; // [rsp+0h] [rbp-2A08h]\n  char v53; // [rsp+54h] [rbp-29B4h]\n  int v54[21]; // [rsp+640h] [rbp-23C8h]\n  char s; // [rsp+694h] [rbp-2374h]\n  int v56[400]; // [rsp+C80h] [rbp-1D88h]\n  int v57[401]; // [rsp+12C0h] [rbp-1748h]\n  int v58[361]; // [rsp+1904h] [rbp-1104h]\n  int v59[361]; // [rsp+1EA8h] [rbp-B60h]\n  int v60[367]; // [rsp+244Ch] [rbp-5BCh]\n\n  if ( dword_565C84 )\n  {\n    sub_41A9A0(a1, v57, v56);\n    memset(&s, 0, 0x5ECuLL);\n    memset(&v53, 0, 0x5ECuLL);\n    v1 = dword_97DA90;\n    v2 = dword_97F390;\n    v3 = 21LL;\n    do\n    {\n      v4 = (unsigned __int8)byte_98A1B0[v3];\n      if ( v4 != 3 )\n      {\n        v5 = v57[v3];\n        if ( v5 != v4 )\n        {\n          if ( v5 == 2 )\n          {\n            v22 = dword_9875E0[v3];\n            if ( v22 > 0 )\n            {\n              v23 = fminf(*(float *)&v56[v3], 1.0);\n              v24 = 5;\n              if ( (signed int)v22 < 6 )\n                v24 = dword_9875E0[v3];\n              v25 = 1.0 / (double)v24;\n              v26 = *((signed int *)&xmmword_954FB0 + 19 * dword_97DA90[4 * v3] + 2);\n              *(float *)&v27 = *(float *)&v54[v26] + v25;\n              v54[v26] = v27;\n              v28 = v23 / (double)v24;\n              *(float *)&v29 = *(float *)&v52[v26] + v28;\n              v52[v26] = v29;\n              if ( (_DWORD)v22 != 1 )\n              {\n                v30 = 85LL;\n                do\n                {\n                  v31 = *((signed int *)&xmmword_954FB0 + 19 * v1[v30] + 2);\n                  *(float *)&v32 = *(float *)&v54[v31] + v25;\n                  v54[v31] = v32;\n                  *(float *)&v33 = *(float *)&v52[v31] + v28;\n                  v52[v31] = v33;\n                  v34 = v30 + 1;\n                  v35 = v30 - 83;\n                  v21 = __OFSUB__(v35, v22);\n                  v20 = v35 - v22 < 0;\n                  v30 = v34;\n                }\n                while ( v20 ^ v21 );\n              }\n            }\n          }\n          else if ( v5 == 1 )\n          {\n            v6 = dword_987C20[v3];\n            if ( v6 > 0 )\n            {\n              v7 = fminf(*(float *)&v56[v3], 1.0);\n              v8 = 5;\n              if ( (signed int)v6 < 6 )\n                v8 = dword_987C20[v3];\n              v9 = 1.0 / (double)v8;\n              v10 = *((signed int *)&xmmword_954FB0 + 19 * dword_97F390[4 * v3] + 2);\n              *(float *)&v11 = *(float *)&v54[v10] + v9;\n              v54[v10] = v11;\n              v12 = v7 / (double)v8;\n              *(float *)&v13 = *(float *)&v52[v10] + v12;\n              v52[v10] = v13;\n              if ( (_DWORD)v6 != 1 )\n              {\n                v14 = 85LL;\n                do\n                {\n                  v15 = *((signed int *)&xmmword_954FB0 + 19 * v2[v14] + 2);\n                  *(float *)&v16 = *(float *)&v54[v15] + v9;\n                  v54[v15] = v16;\n                  *(float *)&v17 = *(float *)&v52[v15] + v12;\n                  v52[v15] = v17;\n                  v18 = v14 + 1;\n                  v19 = v14 - 83;\n                  v21 = __OFSUB__(v19, v6);\n                  v20 = v19 - v6 < 0;\n                  v14 = v18;\n                }\n                while ( v20 ^ v21 );\n              }\n            }\n          }\n        }\n      }\n      ++v3;\n      v1 += 4;\n      v2 += 4;\n    }\n    while ( v3 != 400 );\n    result = dword_98A7DC;\n    if ( dword_98A7DC > 0LL )\n    {\n      v37 = (int *)((char *)ptr + 56);\n      v38 = 0LL;\n      do\n      {\n        v39 = *(v37 - 14);\n        v40 = (signed int)(*(float *)&v54[v39] + 0.01);\n        if ( *(v37 - 1) > v40 )\n        {\n          v41 = v52[v39];\n          *(v37 - 1) = v40;\n          *v37 = v41;\n        }\n        ++v38;\n        v37 += 26;\n      }\n      while ( v38 < result );\n    }\n  }\n  else\n  {\n    sub_41A610(a1, v57);\n    result = (signed __int64)memset(v56, 0, 0x5A8uLL);\n    v42 = dword_98A7DC;\n    if ( dword_98A7DC > 0LL )\n    {\n      v43 = (signed int *)ptr;\n      v44 = 0LL;\n      do\n      {\n        v45 = v44;\n        v46 = 26 * v44;\n        result = *((unsigned int *)&xmmword_954FB0 + 19 * v43[26 * v44++]);\n        v47 = 0.0;\n        v48 = -379LL;\n        v49 = dword_9555F0;\n        v50 = 0;\n        do\n        {\n          v51 = v58[v48];\n          if ( v58[v48]\n            && (_DWORD)result == (unsigned __int8)byte_98A340[v48]\n            && v45 == *v49\n            && v59[v51] == (_DWORD)result\n            && v44 != v56[v51] )\n          {\n            v56[v51] = v44;\n            v50 += v58[v51];\n            v47 = v47 + *(float *)&v60[v51];\n          }\n          v49 += 19;\n          ++v48;\n        }\n        while ( v48 );\n        if ( v50 < v43[v46 + 13] )\n        {\n          result = (signed __int64)&v43[v46 + 13];\n          *(_DWORD *)result = v50;\n          *(float *)&v43[v46 + 14] = v47;\n        }\n      }\n      while ( v44 < v42 );\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x415d50L", 
            "funcEndAddr": "0x416156L", 
            "funcName": "sub_415D50"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_416160(int a1, int a2)\n{\n  __int64 v2; // r8\n  __int64 v3; // r9\n  signed __int64 v4; // rax\n  __int64 v5; // rsi\n  char *v6; // rdi\n  __int64 v7; // rax\n  signed __int64 v8; // rax\n  __int64 v9; // rdx\n  char *v10; // rax\n  __int64 v11; // rsi\n\n  v2 = *((signed int *)&xmmword_954FB0 + 19 * a1 + 2);\n  v3 = *((signed int *)&xmmword_954FB0 + 19 * a2 + 2);\n  v4 = 104LL * *((signed int *)&xmmword_954FB0 + 19 * v2 + 1);\n  v5 = *(signed int *)((char *)ptr + v4 + 44);\n  if ( v5 > 0 )\n  {\n    v6 = (char *)ptr + v4 + 4;\n    v7 = 0LL;\n    while ( *((_DWORD *)ptr + 26 * *(signed int *)&v6[4 * v7]) != (_DWORD)v3 )\n    {\n      if ( ++v7 >= v5 )\n        goto LABEL_5;\n    }\n    return 1LL;\n  }\nLABEL_5:\n  v8 = 104LL * *((signed int *)&xmmword_954FB0 + 19 * v3 + 1);\n  v9 = *(signed int *)((char *)ptr + v8 + 44);\n  if ( v9 > 0 )\n  {\n    v10 = (char *)ptr + v8 + 4;\n    v11 = 0LL;\n    while ( *((_DWORD *)ptr + 26 * *(signed int *)&v10[4 * v11]) != (_DWORD)v2 )\n    {\n      if ( ++v11 >= v9 )\n        return 0LL;\n    }\n    return 1LL;\n  }\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x416160L", 
            "funcEndAddr": "0x416213L", 
            "funcName": "sub_416160"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_416230(int a1)\n{\n  return (unsigned int)dword_954FF0[19 * a1];\n}\n", 
            "funcStartAddr": "0x416230L", 
            "funcEndAddr": "0x41623eL", 
            "funcName": "sub_416230"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_416240(int a1)\n{\n  int *v1; // rcx\n\n  v1 = &dword_864E58;\n  if ( a1 == 1 )\n    v1 = &dword_864E54;\n  return *v1 > 0;\n}\n", 
            "funcStartAddr": "0x416240L", 
            "funcEndAddr": "0x41625aL", 
            "funcName": "sub_416240"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4162A0(char a1, signed int a2)\n{\n  unsigned __int64 v2; // rbp\n  __int64 v3; // r12\n  char *v4; // r15\n  __int64 v5; // rdx\n  __int64 v6; // rdx\n  double v7; // xmm0_8\n  signed __int64 v8; // r12\n  __int64 v9; // rdx\n  __int64 v10; // rdx\n  __int64 v11; // rdx\n  __int64 v12; // rdx\n  __int64 v13; // rdx\n  __int64 v14; // rdx\n  __int64 v15; // rdx\n  __int64 v16; // rdx\n  __int64 v17; // rdx\n  char *v18; // rbx\n  signed __int64 v19; // rbp\n  __int64 v20; // rdx\n  __int64 v21; // rdx\n  __int64 v22; // rdx\n  double v23; // xmm0_8\n  double v24; // xmm0_8\n  signed __int64 v25; // rbx\n  signed __int64 v26; // rbp\n  const char *v28; // rdi\n\n  if ( !byte_98A1B0[a2] )\n  {\n    v28 = \"There is no dragon at %1m\\n\";\n    return sub_433F90((char)v28);\n  }\n  v2 = 76LL * a2;\n  v3 = *((signed int *)&xmmword_954FB0 + 19 * a2 + 1);\n  if ( (signed int)v3 < 0 )\n  {\n    v28 = \"Dragon data not available at %1m\\n\";\n    return sub_433F90((char)v28);\n  }\n  v4 = (char *)ptr;\n  sub_4341A0(*(unsigned int *)((char *)&xmmword_954FB0 + v2));\n  sub_433A80(a1);\n  v5 = *((unsigned int *)&xmmword_954FB0 + 19 * a2 + 2);\n  sub_433A80(a1);\n  v6 = *((unsigned int *)&xmmword_954FB0 + 19 * a2 + 3);\n  sub_433A80(a1);\n  v7 = *(float *)((char *)&xmmword_954FC0 + v2);\n  sub_433A80(a1);\n  v8 = 104 * v3;\n  sub_426340(&v4[v8 + 76], \"effective_size          %f\\n\");\n  sub_433A80(a1);\n  v9 = *(unsigned int *)&v4[v8 + 80];\n  sub_433A80(a1);\n  v10 = *(unsigned int *)&v4[v8 + 72];\n  sub_433A80(a1);\n  v11 = *(unsigned int *)&v4[v8 + 84];\n  sub_433A80(a1);\n  sub_4343D0(*((unsigned int *)&xmmword_954FC0 + 19 * a2 + 1), \"lunch                   %1m\\n\");\n  sub_433A80(a1);\n  sub_4343D0(*((unsigned int *)&xmmword_954FC0 + 19 * a2 + 3), \"crude status            %s\\n\");\n  sub_433A80(a1);\n  sub_4343D0((unsigned int)dword_954FF0[v2 / 4], \"owl_status              %s\\n\");\n  sub_433A80(a1);\n  sub_4343D0(*((unsigned int *)&xmmword_954FC0 + 19 * a2 + 2), \"status                  %s\\n\");\n  sub_433A80(a1);\n  v12 = *(unsigned int *)((char *)&xmmword_954FD0 + v2);\n  sub_433A80(a1);\n  *((_DWORD *)&xmmword_954FD0 + 19 * a2 + 2);\n  sub_433A80(a1);\n  v13 = *((unsigned int *)&xmmword_954FD0 + 19 * a2 + 3);\n  sub_433A80(a1);\n  v14 = *(unsigned int *)((char *)&xmmword_954FE0 + v2);\n  sub_433A80(a1);\n  *((_DWORD *)&xmmword_954FE0 + 19 * a2 + 2);\n  sub_433A80(a1);\n  v15 = *((unsigned int *)&xmmword_954FE0 + 19 * a2 + 3);\n  sub_433A80(a1);\n  v16 = *(unsigned int *)&v4[v8 + 88];\n  sub_433A80(a1);\n  v17 = *(unsigned int *)&v4[v8 + 92];\n  sub_433A80(a1);\n  sub_433A80(a1);\n  if ( *(_DWORD *)&v4[v8 + 44] > 0 )\n  {\n    v18 = &v4[v8 + 44];\n    v19 = 0LL;\n    do\n    {\n      v20 = *((unsigned int *)&xmmword_954FB0 + 19 * *((signed int *)ptr + 26 * *(signed int *)&v18[4 * v19 - 40]) + 2);\n      sub_433A80(a1);\n      ++v19;\n    }\n    while ( v19 < *(signed int *)v18 );\n  }\n  v21 = *(unsigned int *)&v4[v8 + 48];\n  sub_433A80(a1);\n  v22 = *(unsigned int *)&v4[v8 + 52];\n  sub_433A80(a1);\n  v23 = *(float *)&v4[v8 + 56];\n  sub_433A80(a1);\n  sub_4343F0(*(unsigned int *)&v4[v8 + 60], \"moyo territorial value  %f\\n\");\n  sub_433A80(a1);\n  v24 = *(float *)&v4[v8 + 64];\n  sub_433A80(a1);\n  sub_433A80(a1);\n  v25 = 4611686018427351899LL;\n  v26 = 21LL;\n  do\n  {\n    if ( byte_98A1B0[v26] != 3 && v26 == dword_90E63C[v25] )\n    {\n      if ( (unsigned int)sub_414710(v26, a2) )\n        sub_433A80(a1);\n    }\n    ++v26;\n    v25 += 95LL;\n  }\n  while ( v25 * 4 );\n  return sub_433A80(a1);\n}\n", 
            "funcStartAddr": "0x4162a0L", 
            "funcEndAddr": "0x41667bL", 
            "funcName": "sub_4162A0"
        }, 
        {
            "decompiledFuncCode": "char *__fastcall sub_416680(int a1, int a2)\n{\n  char *result; // rax\n  signed __int64 v3; // rcx\n  __int64 v4; // rdx\n  __int64 v5; // rdi\n\n  if ( a1 < 0 || dword_98A7DC <= a2 || a2 < 0 || dword_98A7DC <= a1 )\n    sub_4340E0(\n      \"engine/dragon.c\",\n      976LL,\n      \"a >= 0 && a < number_of_dragons && b >= 0 && b < number_of_dragons\",\n      0xFFFFFFFFLL,\n      0xFFFFFFFFLL);\n  result = (char *)ptr;\n  v3 = 104LL * a1;\n  v4 = *(signed int *)((char *)ptr + v3 + 44);\n  if ( v4 != 10 )\n  {\n    if ( (signed int)v4 <= 0 )\n    {\nLABEL_11:\n      *(_DWORD *)((char *)ptr + v3 + 44) = v4 + 1;\n      *(_DWORD *)&result[4 * v4 + 4 + v3] = a2;\n      if ( *((_DWORD *)&xmmword_954FB0 + 19 * *(signed int *)&result[v3]) == 3\n                                                                           - *((_DWORD *)&xmmword_954FB0\n                                                                             + 19 * *(signed int *)&result[104 * a2]) )\n        ++*(_DWORD *)&result[v3 + 48];\n    }\n    else\n    {\n      v5 = 0LL;\n      while ( *(_DWORD *)((char *)ptr + 4 * v5 + v3 + 4) != a2 )\n      {\n        if ( ++v5 >= v4 )\n          goto LABEL_11;\n      }\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x416680L", 
            "funcEndAddr": "0x416749L", 
            "funcName": "sub_416680"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_416750(unsigned int a1, int a2, int a3, int a4, __int64 a5, __int64 a6, __int64 a7, _DWORD *a8)\n{\n  __int64 v8; // rbx\n  int v9; // er13\n  int *v10; // r15\n  __int64 result; // rax\n  __int64 v12; // rdx\n  __int64 v13; // rbp\n  __int64 v14; // rax\n  signed __int64 v15; // rax\n  __int64 v16; // rcx\n  int v17; // er14\n  int v18; // eax\n  signed __int64 v19; // rbp\n  int v20; // ecx\n  __int64 v21; // rsi\n  int v22; // ecx\n  __int64 v23; // rsi\n  int v24; // ecx\n  __int64 v25; // rsi\n  int v26; // ecx\n  __int64 v27; // rsi\n  int v28; // [rsp+Ch] [rbp-40Ch]\n  __int64 v29; // [rsp+10h] [rbp-408h]\n  signed int v30; // [rsp+18h] [rbp-400h]\n  unsigned int v31; // [rsp+1Ch] [rbp-3FCh]\n  int v32[254]; // [rsp+20h] [rbp-3F8h]\n\n  v8 = a5;\n  v9 = a4;\n  v28 = a3;\n  v29 = a6;\n  sub_40BAB0(a2, a6, 1);\n  v10 = v32;\n  v30 = a2;\n  result = sub_408410(a2, 241, (unsigned __int64)v32);\n  if ( (signed int)result > 0 )\n  {\n    v12 = a7;\n    v31 = result;\n    v13 = (unsigned int)result;\n    do\n    {\n      v14 = *v10;\n      if ( (_DWORD)v14 != a1 )\n      {\n        v15 = 9 * v14;\n        if ( *(_DWORD *)(v8 + 4 * v15) == v9 )\n        {\n          v16 = *(signed int *)(v8 + 4 * v15 + 12);\n          if ( !*(_BYTE *)(v12 + v16) )\n          {\n            *(_BYTE *)(v12 + v16) = 1;\n            v17 = sub_426330(v8 + 4 * v15 + 16);\n            v18 = sub_4263B0(v8 + 36LL * *v10 + 16);\n            v12 = a7;\n            *a8 += v17 + v18;\n          }\n        }\n      }\n      ++v10;\n      --v13;\n    }\n    while ( v13 );\n    result = v31;\n    if ( *a8 <= 1 && (signed int)v31 > 0 )\n    {\n      v19 = 0LL;\n      do\n      {\n        result = v32[v19];\n        if ( !*(_BYTE *)(v29 + result) )\n        {\n          *(_BYTE *)(v29 + result) = 1;\n          v20 = (unsigned __int8)byte_98A1B0[dword_5641B0[0] + result];\n          if ( v20 != 3 && v20 == v28 )\n          {\n            result = sub_414710(v30, (signed int)result + dword_5641B0[0]);\n            if ( (_DWORD)result )\n            {\n              v21 = dword_5641B0[0] + (signed __int64)v32[v19];\n              result = v29;\n              if ( !*(_BYTE *)(v29 + v21) )\n                result = sub_416750(a1, v21);\n            }\n          }\n          if ( *a8 > 1 )\n            break;\n          result = v32[v19];\n          v22 = (unsigned __int8)byte_98A1B0[dword_5641B4 + result];\n          if ( v22 != 3 && v22 == v28 )\n          {\n            result = sub_414710(v30, (signed int)result + dword_5641B4);\n            if ( (_DWORD)result )\n            {\n              v23 = dword_5641B4 + (signed __int64)v32[v19];\n              result = v29;\n              if ( !*(_BYTE *)(v29 + v23) )\n                result = sub_416750(a1, v23);\n            }\n          }\n          if ( *a8 > 1 )\n            break;\n          result = v32[v19];\n          v24 = (unsigned __int8)byte_98A1B0[dword_5641B8 + result];\n          if ( v24 != 3 && v24 == v28 )\n          {\n            result = sub_414710(v30, (signed int)result + dword_5641B8);\n            if ( (_DWORD)result )\n            {\n              v25 = dword_5641B8 + (signed __int64)v32[v19];\n              result = v29;\n              if ( !*(_BYTE *)(v29 + v25) )\n                result = sub_416750(a1, v25);\n            }\n          }\n          if ( *a8 > 1 )\n            break;\n          result = v32[v19];\n          v26 = (unsigned __int8)byte_98A1B0[dword_5641BC + result];\n          if ( v26 != 3 && v26 == v28 )\n          {\n            result = sub_414710(v30, (signed int)result + dword_5641BC);\n            if ( (_DWORD)result )\n            {\n              v27 = dword_5641BC + (signed __int64)v32[v19];\n              result = v29;\n              if ( !*(_BYTE *)(v29 + v27) )\n                result = sub_416750(a1, v27);\n            }\n          }\n          if ( *a8 > 1 )\n            break;\n        }\n        ++v19;\n      }\n      while ( v19 < (signed int)v31 );\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x416750L", 
            "funcEndAddr": "0x416a85L", 
            "funcName": "sub_416750"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_416A90(unsigned int *a1, unsigned int a2)\n{\n  unsigned int v2; // er13\n  _DWORD *v3; // rax\n  __int64 v4; // r8\n  __int64 v5; // r9\n  __int64 v6; // r10\n  signed __int64 v7; // rdi\n  __int64 v8; // r11\n  int v9; // ebx\n  int v10; // ecx\n  int v11; // edx\n  unsigned int v12; // ecx\n  __int64 v13; // rdx\n  signed __int64 v14; // rbx\n  _BOOL8 v15; // r14\n  signed __int64 v16; // r15\n  _BOOL8 v17; // rcx\n  _BOOL4 v18; // er12\n  _BOOL4 v19; // eax\n  __int64 v20; // rcx\n  __int64 v21; // rbp\n  char v22; // cl\n  int v23; // esi\n  const char *v24; // rdi\n  __int64 v25; // rsi\n  signed __int64 v26; // rax\n  signed __int64 v27; // rcx\n  signed __int64 v28; // r14\n  signed __int64 v29; // rdi\n  signed __int64 v30; // rdi\n  signed __int64 v31; // rdi\n  signed __int64 v32; // rdi\n  unsigned int *v33; // rbp\n  unsigned int v34; // ebx\n  unsigned int *v36; // rax\n  int v37; // [rsp+4h] [rbp-694h]\n  unsigned int *v38; // [rsp+8h] [rbp-690h]\n  unsigned int v39; // [rsp+14h] [rbp-684h]\n  unsigned int v40; // [rsp+18h] [rbp-680h]\n  int v41; // [rsp+1Ch] [rbp-67Ch]\n  int s[414]; // [rsp+20h] [rbp-678h]\n\n  v2 = a2;\n  v38 = a1;\n  memset(s, 0, 0x640uLL);\n  v3 = ptr;\n  v4 = dword_5641B0[0];\n  v5 = dword_5641B4;\n  v6 = dword_5641B8;\n  v7 = 21LL;\n  v8 = dword_5641BC;\n  do\n  {\n    v9 = (unsigned __int8)byte_98A1B0[v7];\n    if ( (unsigned __int8)(byte_98A1B0[v7] - 1) > 1u\n      || dword_8E94A0[95 * v7]\n      || v3[26 * *((signed int *)&xmmword_954FB0 + 19 * v7 + 1) + 15] == 5 )\n    {\n      goto LABEL_23;\n    }\n    v10 = dword_954FF0[19 * v7];\n    if ( v10 == 1 )\n      goto LABEL_16;\n    v11 = 3 - v9;\n    if ( byte_98A1B0[v4 + (signed int)v7] )\n    {\n      if ( byte_98A1B0[v5 + (signed int)v7] )\n        goto LABEL_8;\n    }\n    else\n    {\n      s[v4 + (signed int)v7] |= v11;\n      if ( byte_98A1B0[v5 + (signed int)v7] )\n      {\nLABEL_8:\n        if ( byte_98A1B0[v6 + (signed int)v7] )\n          goto LABEL_9;\n        goto LABEL_14;\n      }\n    }\n    s[v5 + (signed int)v7] |= v11;\n    if ( byte_98A1B0[v6 + (signed int)v7] )\n    {\nLABEL_9:\n      if ( !byte_98A1B0[v8 + (signed int)v7] )\n        goto LABEL_15;\n      goto LABEL_10;\n    }\nLABEL_14:\n    s[v6 + (signed int)v7] |= v11;\n    if ( !byte_98A1B0[v8 + (signed int)v7] )\n    {\nLABEL_15:\n      s[v8 + (signed int)v7] |= v11;\n      if ( !v10 )\n        goto LABEL_23;\nLABEL_16:\n      v12 = 0;\n      while ( 1 )\n      {\n        LODWORD(v13) = dword_5641B0[v12 & 7];\n        if ( v12 < 8 )\n          goto LABEL_20;\n        if ( !byte_98A1B0[(signed int)v13 + (signed __int64)(signed int)v7] )\n          break;\nLABEL_22:\n        if ( ++v12 == 12 )\n          goto LABEL_23;\n      }\n      LODWORD(v13) = 2 * v13;\nLABEL_20:\n      v13 = (signed int)v13;\n      if ( !byte_98A1B0[(signed int)v13 + (signed __int64)(signed int)v7] )\n        s[(signed int)v7 + v13] |= v9;\n      goto LABEL_22;\n    }\nLABEL_10:\n    if ( v10 )\n      goto LABEL_16;\nLABEL_23:\n    ++v7;\n  }\n  while ( v7 != 400 );\n  v37 = 3 - a2;\n  v14 = 21LL;\n  while ( 2 )\n  {\n    if ( byte_98A1B0[v14] || s[v14] != 3 )\n      goto LABEL_144;\n    LODWORD(v15) = 0;\n    v16 = 4611686018427387900LL;\n    LODWORD(v17) = 0;\n    while ( 1 )\n    {\nLABEL_43:\n      while ( 1 )\n      {\n        v18 = v17;\n        v19 = v15;\n        v20 = dword_5641C0[v16];\n        v21 = v20 + (signed int)v14;\n        v22 = byte_98A1B0[v20 + (signed int)v14];\n        if ( v22 == 2 )\n          break;\n        if ( v22 == 1 )\n        {\n          if ( dword_8E94A0[95 * v21]\n            || *((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * v21 + 1) + 15) == 5 )\n          {\n            goto LABEL_66;\n          }\n          LODWORD(v17) = 1;\n          if ( (dword_954FF0[19 * v21] | 2) == 3 )\n            goto LABEL_67;\n          LODWORD(v15) = 1;\nLABEL_57:\n          LODWORD(v17) = v18;\n          ++v16;\n          if ( !(v16 * 4) )\n            goto LABEL_68;\n          continue;\n        }\n        if ( v22 )\n          goto LABEL_66;\n        if ( !(_DWORD)v15 )\n        {\n          if ( byte_98A1B0[dword_5641B0[0] + v21] == 2 && dword_954FF0[19 * (v21 + dword_5641B0[0])]\n            || byte_98A1B0[dword_5641B4 + v21] == 2 && dword_954FF0[19 * (v21 + dword_5641B4)]\n            || byte_98A1B0[dword_5641B8 + v21] == 2 && dword_954FF0[19 * (v21 + dword_5641B8)]\n            || (LODWORD(v15) = 0, byte_98A1B0[dword_5641BC + v21] == 2) && dword_954FF0[19 * (v21 + dword_5641BC)] )\n          {\n            v15 = (unsigned int)sub_43F100((unsigned int)v21, 1LL) != 5;\n          }\n        }\n        if ( v18 )\n          goto LABEL_57;\n        if ( (byte_98A1B0[dword_5641B0[0] + v21] != 1 || !dword_954FF0[19 * (v21 + dword_5641B0[0])])\n          && (byte_98A1B0[dword_5641B4 + v21] != 1 || !dword_954FF0[19 * (v21 + dword_5641B4)])\n          && (byte_98A1B0[dword_5641B8 + v21] != 1 || !dword_954FF0[19 * (v21 + dword_5641B8)]) )\n        {\n          LODWORD(v17) = 0;\n          if ( byte_98A1B0[dword_5641BC + v21] != 1 || !dword_954FF0[19 * (v21 + dword_5641BC)] )\n            goto LABEL_67;\n        }\n        v17 = (unsigned int)sub_43F100((unsigned int)v21, 2LL) != 5;\n        ++v16;\n        if ( !(v16 * 4) )\n          goto LABEL_68;\n      }\n      if ( dword_8E94A0[95 * v21] || *((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * v21 + 1) + 15) == 5 )\n        break;\n      LODWORD(v15) = 1;\n      LODWORD(v17) = v18;\n      if ( (dword_954FF0[19 * v21] | 2) == 3 )\n        goto LABEL_67;\n      LODWORD(v17) = 1;\n      LODWORD(v15) = v19;\n      ++v16;\n      if ( !(v16 * 4) )\n        goto LABEL_68;\n    }\nLABEL_66:\n    LODWORD(v17) = v18;\nLABEL_67:\n    ++v16;\n    if ( v16 * 4 )\n      goto LABEL_43;\nLABEL_68:\n    if ( !(_DWORD)v17 || !(_DWORD)v15 )\n      goto LABEL_144;\n    if ( dword_88C264 & 0x4000 )\n      sub_433F90((unsigned __int64)\"Filllib: Considering move at %1m.\\n\");\n    if ( (unsigned int)sub_43F100((unsigned int)v14, v2) != 5 )\n    {\n      if ( (unsigned int)sub_406880((unsigned int)v14, v2, \"fill_liberty\", 0, 0, 0) )\n      {\n        sub_407030();\n        if ( dword_88C264 & 0x4000 )\n          sub_433F90((unsigned __int64)\"Filllib: Legal but not safe, looking for backfilling move.\\n\");\n        if ( (unsigned int)sub_417810((unsigned int)v14, v2, v38) )\n        {\n          if ( dword_88C264 & 0x4000 )\n          {\n            v25 = *v38;\n            sub_433F90((unsigned __int64)\"Filllib: Backfilling move at %1m.\\n\");\n          }\n          if ( !(unsigned int)sub_407B30(*v38, v2) )\n          {\n            if ( dword_88C264 & 0x4000 )\n              sub_433F90((unsigned __int64)\"Filllib: Was illegal, discarded.\\n\");\n            *v38 = 0;\n            goto LABEL_144;\n          }\n          if ( (unsigned int)sub_417540(*v38, v2, &v41) )\n            return 1;\nLABEL_141:\n          if ( dword_88C264 & 0x4000 )\n          {\n            v24 = \"Filllib: Safety not confirmed, discarded.\\n\";\nLABEL_143:\n            sub_433F90((char)v24);\n          }\nLABEL_144:\n          if ( (unsigned __int64)++v14 >= 0x190 )\n          {\n            v34 = 0;\n            if ( dword_88C264 & 0x4000 )\n            {\n              v34 = 0;\n              sub_433F90((unsigned __int64)\"Filllib: No move found.\\n\");\n            }\n            return v34;\n          }\n          continue;\n        }\n        if ( !(unsigned int)sub_40B9B0(v14, v2) )\n          goto LABEL_144;\n        if ( dword_88C264 & 0x4000 )\n          sub_433F90((unsigned __int64)\"Filllib: Not tactically safe, but captures stones.\\n\");\n        if ( !(unsigned int)sub_417540((unsigned int)v14, v2, &v41) )\n          goto LABEL_141;\nLABEL_149:\n        *v38 = v14;\n        return 1;\n      }\n      if ( dword_88C264 & 0x4000 )\n        sub_433F90((unsigned __int64)\"Filllib: Illegal, looking for back-capture.\\n\");\n      v26 = (signed int)v14 + (signed __int64)dword_5641B0[0];\n      if ( v37 == (unsigned __int8)byte_98A1B0[v26] && dword_8E94D4[95 * v26] == 5 )\n      {\n        v27 = (signed int)v14 + (signed __int64)dword_5641B0[0];\n      }\n      else if ( v37 != (unsigned __int8)byte_98A1B0[dword_5641B4 + (signed __int64)(signed int)v14]\n             || (v27 = (signed int)v14 + (signed __int64)dword_5641B4, dword_8E94D4[95 * v27] != 5) )\n      {\n        if ( v37 != (unsigned __int8)byte_98A1B0[dword_5641B8 + (signed __int64)(signed int)v14]\n          || (v27 = (signed int)v14 + (signed __int64)dword_5641B8, dword_8E94D4[95 * v27] != 5) )\n        {\n          if ( v37 != (unsigned __int8)byte_98A1B0[dword_5641BC + (signed __int64)(signed int)v14]\n            || (v27 = (signed int)v14 + (signed __int64)dword_5641BC, dword_8E94D4[95 * v27] != 5) )\n          {\n            if ( dword_88C264 & 0x4000 )\n            {\n              sub_433F90((unsigned __int64)\"Filllib: Nothing found, looking for ko back-capture.\\n\");\n              v26 = (signed int)v14 + (signed __int64)dword_5641B0[0];\n            }\n            if ( v37 != (unsigned __int8)byte_98A1B0[v26]\n              || (v28 = 95 * v26, !dword_8E94D4[95 * v26])\n              || !(unsigned int)sub_407B30(dword_8E94AC[v28], v2) )\n            {\n              if ( v37 != (unsigned __int8)byte_98A1B0[dword_5641B4 + (signed __int64)(signed int)v14]\n                || (v28 = 95 * ((signed int)v14 + (signed __int64)dword_5641B4), !dword_8E94D4[v28])\n                || !(unsigned int)sub_407B30(dword_8E94AC[v28], v2) )\n              {\n                if ( v37 != (unsigned __int8)byte_98A1B0[dword_5641B8 + (signed __int64)(signed int)v14]\n                  || (v28 = 95 * ((signed int)v14 + (signed __int64)dword_5641B8), !dword_8E94D4[v28])\n                  || !(unsigned int)sub_407B30(dword_8E94AC[v28], v2) )\n                {\n                  if ( v37 != (unsigned __int8)byte_98A1B0[dword_5641BC + (signed __int64)(signed int)v14]\n                    || (v28 = 95 * ((signed int)v14 + (signed __int64)dword_5641BC), !dword_8E94D4[v28])\n                    || !(unsigned int)sub_407B30(dword_8E94AC[v28], v2) )\n                  {\n                    if ( dword_88C264 & 0x4000 )\n                      sub_433F90((unsigned __int64)\"Filllib: Nothing found, looking for threat to back-capture.\\n\");\n                    if ( v37 == (unsigned __int8)byte_98A1B0[dword_5641B0[0] + (signed __int64)(signed int)v14] )\n                    {\n                      v29 = (signed int)v14 + (signed __int64)dword_5641B0[0];\n                      if ( dword_8E94D4[95 * v29] )\n                      {\n                        if ( (signed int)sub_408410(v29, 2, (unsigned __int64)&v39) >= 2 )\n                        {\n                          if ( (unsigned int)sub_407B30(v39, v2) )\n                            goto LABEL_162;\n                          if ( (unsigned int)sub_407B30(v40, v2) )\n                            goto LABEL_156;\n                        }\n                      }\n                    }\n                    if ( v37 == (unsigned __int8)byte_98A1B0[dword_5641B4 + (signed __int64)(signed int)v14] )\n                    {\n                      v30 = (signed int)v14 + (signed __int64)dword_5641B4;\n                      if ( dword_8E94D4[95 * v30] )\n                      {\n                        if ( (signed int)sub_408410(v30, 2, (unsigned __int64)&v39) > 1 )\n                        {\n                          if ( (unsigned int)sub_407B30(v39, v2) )\n                            goto LABEL_162;\n                          if ( (unsigned int)sub_407B30(v40, v2) )\n                            goto LABEL_156;\n                        }\n                      }\n                    }\n                    if ( v37 != (unsigned __int8)byte_98A1B0[dword_5641B8 + (signed __int64)(signed int)v14]\n                      || (v31 = (signed int)v14 + (signed __int64)dword_5641B8, !dword_8E94D4[95 * v31])\n                      || (signed int)sub_408410(v31, 2, (unsigned __int64)&v39) <= 1 )\n                    {\nLABEL_131:\n                      if ( v37 != (unsigned __int8)byte_98A1B0[dword_5641BC + (signed __int64)(signed int)v14] )\n                        goto LABEL_144;\n                      v32 = (signed int)v14 + (signed __int64)dword_5641BC;\n                      if ( !dword_8E94D4[95 * v32] )\n                        goto LABEL_144;\n                      v33 = &v39;\n                      if ( (signed int)sub_408410(v32, 2, (unsigned __int64)&v39) <= 1 )\n                        goto LABEL_144;\n                      if ( (unsigned int)sub_407B30(v39, v2) )\n                        goto LABEL_157;\n                      if ( !(unsigned int)sub_407B30(v40, v2) )\n                        goto LABEL_144;\nLABEL_156:\n                      v33 = &v40;\nLABEL_157:\n                      v36 = v38;\n                      goto LABEL_163;\n                    }\n                    if ( !(unsigned int)sub_407B30(v39, v2) )\n                    {\n                      if ( (unsigned int)sub_407B30(v40, v2) )\n                        goto LABEL_156;\n                      goto LABEL_131;\n                    }\nLABEL_162:\n                    v36 = v38;\n                    v33 = &v39;\nLABEL_163:\n                    *v36 = *v33;\n                    if ( dword_88C264 & 0x4000 )\n                      sub_433F90((unsigned __int64)\"Filllib: Found at %1m.\\n\");\n                    return 1;\n                  }\n                }\n              }\n            }\n            *v38 = dword_8E94AC[v28];\nLABEL_160:\n            v34 = 1;\n            if ( dword_88C264 & 0x4000 )\n              sub_433F90((unsigned __int64)\"Filllib: Found at %1m.\\n\");\n            return v34;\n          }\n        }\n      }\n      *v38 = dword_8E94AC[95 * v27];\n      goto LABEL_160;\n    }\n    break;\n  }\n  if ( dword_88C264 & 0x4000 )\n    sub_433F90((unsigned __int64)\"Filllib: Tactically safe.\\n\");\n  if ( (unsigned int)sub_417540((unsigned int)v14, v2, &v41) )\n  {\n    if ( dword_88C264 & 0x4000 )\n      sub_433F90((unsigned __int64)\"Filllib: Safety confirmed.\\n\");\n    goto LABEL_149;\n  }\n  v23 = v41;\n  if ( !v41 )\n  {\n    if ( dword_88C264 & 0x4000 )\n      sub_433F90((unsigned __int64)\"Filllib: Safety not confirmed, discarded.\\n\");\n    if ( dword_88C268 )\n    {\n      v24 = \"Warning: Blunder detected in fill_liberty().\\n\";\n      goto LABEL_143;\n    }\n    goto LABEL_144;\n  }\n  if ( dword_88C264 & 0x4000 )\n  {\n    sub_433F90((unsigned __int64)\"Filllib: Safety not confirmed, but %1m defends.\\n\");\n    v23 = v41;\n  }\n  *v38 = v23;\n  return 1;\n}\n", 
            "funcStartAddr": "0x416a90L", 
            "funcEndAddr": "0x41753dL", 
            "funcName": "sub_416A90"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_417540(unsigned int a1, unsigned int a2, _DWORD *a3)\n{\n  _DWORD *v3; // r14\n  unsigned int v4; // er12\n  int v5; // eax\n  int v6; // ebx\n  signed __int64 v7; // rsi\n  __int64 v8; // rsi\n  int v9; // ebx\n  int v11; // er13\n  __int64 v12; // rsi\n  __int64 v13; // rax\n\n  v3 = a3;\n  v4 = a2;\n  if ( dword_98A7F4 )\n    sub_4340E0(\"engine/filllib.c\", 504LL, \"stackp == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  if ( !a3 )\n    sub_4340E0(\"engine/filllib.c\", 505LL, \"defense_point != ((void*)0)\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  *a3 = 0;\n  v5 = (unsigned __int8)byte_98A1B0[dword_5641B0[0] + (signed __int64)(signed int)a1];\n  v6 = a1 + dword_5641B0[0];\n  v7 = a1 + dword_5641B0[0];\n  if ( v5 == v4 )\n  {\nLABEL_10:\n    if ( (_DWORD)v7 )\n      goto LABEL_11;\n    goto LABEL_15;\n  }\n  v8 = dword_5641B4;\n  if ( (unsigned __int8)byte_98A1B0[dword_5641B4 + (signed __int64)(signed int)a1] == v4\n    || (v8 = dword_5641B8, (unsigned __int8)byte_98A1B0[dword_5641B8 + (signed __int64)(signed int)a1] == v4)\n    || (v8 = dword_5641BC, (unsigned __int8)byte_98A1B0[dword_5641BC + (signed __int64)(signed int)a1] == v4) )\n  {\n    v7 = (signed int)a1 + v8;\n    goto LABEL_10;\n  }\nLABEL_15:\n  v11 = 3 - v4;\n  if ( 3 - v4 != v5 || (unsigned int)sub_44B7B0(v4) )\n  {\n    if ( v11 != (unsigned __int8)byte_98A1B0[dword_5641B4 + (signed __int64)(signed int)a1]\n      || (v6 = a1 + dword_5641B4, (unsigned int)sub_44B7B0(v4)) )\n    {\n      if ( v11 != (unsigned __int8)byte_98A1B0[dword_5641B8 + (signed __int64)(signed int)a1]\n        || (v6 = a1 + dword_5641B8, (unsigned int)sub_44B7B0(v4)) )\n      {\n        if ( v11 != (unsigned __int8)byte_98A1B0[dword_5641BC + (signed __int64)(signed int)a1] )\n          goto LABEL_38;\n        v6 = a1 + dword_5641BC;\n        if ( (unsigned int)sub_44B7B0(v4) )\n          goto LABEL_38;\n      }\n    }\n  }\n  if ( !(unsigned int)sub_40A7D0(v6, (__int64)&dword_865EC0) )\n    return 0LL;\n  v7 = (unsigned int)dword_865EC0;\n  if ( !dword_865EC0 )\n  {\nLABEL_38:\n    v12 = dword_5641C0[0];\n    if ( (unsigned __int8)byte_98A1B0[dword_5641C0[0] + (signed __int64)(signed int)a1] != v4\n      && (v12 = dword_5641C4, (unsigned __int8)byte_98A1B0[dword_5641C4 + (signed __int64)(signed int)a1] != v4)\n      && (v12 = dword_5641C8, (unsigned __int8)byte_98A1B0[dword_5641C8 + (signed __int64)(signed int)a1] != v4)\n      && (v12 = dword_5641CC, (unsigned __int8)byte_98A1B0[dword_5641CC + (signed __int64)(signed int)a1] != v4)\n      || (v7 = (signed int)a1 + v12, !(_DWORD)v7) )\n    {\n      v13 = dword_5641B0[0];\n      if ( (unsigned __int8)byte_98A1B0[2 * dword_5641B0[0] + a1] != v4 )\n      {\n        v13 = dword_5641B4;\n        if ( (unsigned __int8)byte_98A1B0[2 * dword_5641B4 + a1] != v4 )\n        {\n          v13 = dword_5641B8;\n          if ( (unsigned __int8)byte_98A1B0[2 * dword_5641B8 + a1] != v4 )\n          {\n            v13 = dword_5641BC;\n            if ( (unsigned __int8)byte_98A1B0[2 * dword_5641BC + a1] != v4 )\n              return 0LL;\n          }\n        }\n      }\n      v7 = (signed int)a1 + 2 * v13;\n      if ( !(_DWORD)v7 )\n        return 0LL;\n    }\n  }\nLABEL_11:\n  v9 = dword_88C268;\n  if ( dword_88C268 > 0 )\n    --dword_88C268;\n  if ( (unsigned int)sub_42EAE0(a1, v7, 0LL) )\n  {\n    dword_88C268 = v9;\n    return sub_44C110(a1, v4, v3, 0LL);\n  }\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x417540L", 
            "funcEndAddr": "0x41780fL", 
            "funcName": "sub_417540"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_417810(__int64 a1, __int64 a2, int *a3)\n{\n  int *v3; // rbp\n  unsigned int v4; // er12\n  unsigned int v5; // ebx\n  int v6; // ebp\n  int v7; // er13\n  unsigned int v8; // er14\n  signed __int64 v9; // r15\n  _BOOL4 v10; // eax\n  int *v11; // r14\n  unsigned int v12; // ebx\n  __int64 v13; // rbp\n  __int64 v14; // rsi\n  signed __int64 v15; // rbp\n  __int64 v17; // rdi\n  unsigned int v18; // ebp\n  int v19; // er15\n  int v20; // [rsp+Ch] [rbp-4Ch]\n  unsigned int v21; // [rsp+10h] [rbp-48h]\n  int v22; // [rsp+14h] [rbp-44h]\n  int v23; // [rsp+18h] [rbp-40h]\n  unsigned int v24; // [rsp+1Ch] [rbp-3Ch]\n  int *v25; // [rsp+20h] [rbp-38h]\n\n  v3 = a3;\n  v4 = a1;\n  v24 = 0;\n  v20 = 0;\n  v5 = 0;\n  v21 = a2;\n  if ( !(unsigned int)sub_406880(a1, a2, \"find_backfilling_move\", a1, 0, 0) )\n    return v5;\n  v25 = v3;\n  if ( !(unsigned int)sub_43B050((unsigned int)a1, &v24) || (signed int)v24 <= 0 )\n    sub_4340E0(\"engine/filllib.c\", 378LL, \"acode != 0 && apos > 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  v22 = sub_408410(a1, 241, (unsigned __int64)dword_865AF0);\n  v6 = sub_40A7D0(a1, (__int64)dword_865EC0);\n  v23 = v6;\n  sub_407030();\n  v7 = 0;\n  v8 = 1;\n  do\n  {\n    if ( v6 > 0 )\n    {\n      v9 = 0LL;\n      while ( 1 )\n      {\n        if ( (v8 > 4 || (unsigned int)sub_4083A0(dword_865EC0[v9]) == v8)\n          && (unsigned int)sub_43B050((unsigned int)dword_865EC0[v9], &v20) == 5 )\n        {\n          v10 = sub_40B0A0(v20, dword_865EC0[v9]);\n          v7 = v20;\n          if ( v10 )\n            break;\n        }\n        ++v9;\n        v6 = v23;\n        if ( v9 >= v23 )\n          goto LABEL_13;\n      }\n      *v25 = v20;\n      return 1;\n    }\nLABEL_13:\n    ++v8;\n  }\n  while ( v8 < 6 );\n  v11 = v25;\n  v12 = v21;\n  if ( v22 <= 0 )\n  {\nLABEL_18:\n    v14 = v12;\n    v5 = 0;\n    sub_406880((unsigned int)a1, v14, \"find_backfilling_move\", a1, 0, 0);\n    sub_44DF90((unsigned int)a1, &v22, dword_865AF0, 0LL);\n    sub_407030();\n    if ( v22 > 0 )\n    {\n      v13 = 0LL;\n      while ( (unsigned int)sub_43F100((unsigned int)dword_865AF0[v13], v21) != 5 )\n      {\n        if ( ++v13 >= v22 )\n          goto LABEL_22;\n      }\n      goto LABEL_32;\n    }\nLABEL_22:\n    sub_406880((unsigned int)a1, v21, \"find_backfilling_move\", a1, 0, 0);\n    sub_44E000((unsigned int)a1, &v23, dword_865EC0, 4LL);\n    sub_407030();\n    if ( v23 > 0 )\n    {\n      v15 = 0LL;\n      do\n      {\n        if ( (unsigned int)sub_43B050((unsigned int)dword_865EC0[v15], &v20) == 5\n          && (unsigned int)sub_40B0A0(v20, dword_865EC0[v15]) )\n        {\n          *v11 = v20;\n          return 1;\n        }\n        ++v15;\n      }\n      while ( v15 < v23 );\n      v5 = 0;\n      if ( v7 )\n        goto LABEL_39;\n      return v5;\n    }\nLABEL_38:\n    if ( !v7 )\n      return v5;\nLABEL_39:\n    if ( v5 )\n      return v5;\n    *v11 = v7;\n    return 1;\n  }\n  v13 = 0LL;\n  while ( (unsigned int)sub_43F100((unsigned int)dword_865AF0[v13], v12) != 5 )\n  {\n    if ( ++v13 >= v22 )\n      goto LABEL_18;\n  }\nLABEL_32:\n  v17 = (unsigned int)dword_865AF0[(unsigned int)v13];\n  *v11 = v17;\n  v5 = 0;\n  if ( (unsigned int)sub_406880(v17, v21, \"find_backfilling_move\", v4, 0, 0) )\n  {\n    v18 = v21;\n    v19 = sub_406880(v24, 3 - v21, \"find_backfilling_move\", v4, 0, 0);\n    v5 = 1;\n    if ( (unsigned int)sub_43F100(v4, v18) != 5 )\n      v5 = sub_417810(v4, v18, v11);\n    if ( v19 )\n      sub_407030();\n    sub_407030();\n    goto LABEL_38;\n  }\n  return v5;\n}\n", 
            "funcStartAddr": "0x417810L", 
            "funcEndAddr": "0x417b4aL", 
            "funcName": "sub_417810"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_417B50(unsigned int a1)\n{\n  int v1; // edi\n  int v2; // er10\n  int v3; // er11\n  char v4; // r9\n  signed int v5; // er12\n  __int64 v6; // r13\n  char v7; // cl\n  char v8; // al\n  char *v9; // rdx\n  int v10; // esi\n  int v11; // ebp\n  __int64 v12; // r8\n  char v13; // r15\n  unsigned int v14; // er13\n  signed int v15; // eax\n  void **v16; // rdx\n  int v17; // ebx\n  int v18; // eax\n  int v19; // edx\n  int v20; // eax\n  __int64 v21; // rbx\n  int v22; // esi\n  unsigned int v23; // er15\n  int v24; // edx\n  int v25; // ebx\n  int v26; // esi\n  __int64 v27; // rdi\n  __int64 v28; // rbp\n  int v29; // esi\n  __int64 v30; // r8\n  signed __int64 v31; // rsi\n  signed __int64 v32; // r8\n  signed __int64 v33; // rbx\n  signed __int64 v34; // rdx\n  bool v35; // sf\n  unsigned __int8 v36; // of\n  signed int v37; // er14\n  int v38; // er12\n  signed __int64 v39; // rcx\n  signed int v40; // edx\n  __int64 v41; // rdi\n  signed int v42; // ebx\n  int v43; // eax\n  int v44; // ebp\n  int v45; // edx\n  int v46; // esi\n  __int64 v47; // r9\n  signed __int64 v48; // rsi\n  __int64 v49; // r8\n  signed __int64 v50; // r9\n  signed __int64 v51; // rbx\n  signed __int64 v52; // rdx\n  signed int v53; // edx\n  __int64 v54; // rdi\n  signed int v55; // ebx\n  int v56; // edx\n  int v57; // ebp\n  int v58; // esi\n  __int64 v59; // r9\n  signed __int64 v60; // rsi\n  __int64 v61; // r8\n  signed __int64 v62; // r9\n  signed __int64 v63; // rbx\n  signed __int64 v64; // rdx\n  int v65; // edi\n  __int64 v66; // rdx\n  __int64 v67; // rsi\n  signed int v68; // edi\n  signed __int64 v69; // rbx\n  signed __int64 v70; // rdi\n  signed __int64 v71; // rax\n  int v72; // eax\n  __int64 v73; // rdx\n  __int64 v74; // rsi\n  int v75; // eax\n  int v76; // ecx\n  __int64 v77; // rbp\n  signed __int64 v78; // rcx\n  signed __int64 v79; // rbp\n  signed __int64 v80; // rdi\n  signed __int64 v81; // rax\n  signed __int64 v82; // rbx\n  int v83; // [rsp+8h] [rbp-50h]\n  int v84; // [rsp+Ch] [rbp-4Ch]\n  __int64 v85; // [rsp+10h] [rbp-48h]\n  unsigned int v86; // [rsp+18h] [rbp-40h]\n  int v87; // [rsp+1Ch] [rbp-3Ch]\n  __int64 v88; // [rsp+20h] [rbp-38h]\n\n  v84 = -1;\n  v83 = -1;\n  if ( dword_88C248 )\n    return;\n  v86 = a1;\n  byte_866140 = 1;\n  byte_866144 = 1;\n  byte_866148 = 1;\n  v85 = dword_565C68;\n  if ( dword_565C68 > 0 )\n  {\n    v1 = v85 + 20;\n    v88 = -(signed __int64)(unsigned int)v85;\n    v2 = 20 * v85 | 1;\n    v3 = 21 * v85;\n    v4 = 1;\n    v5 = 21;\n    v6 = 0LL;\n    v7 = 1;\n    v8 = 1;\n    do\n    {\n      if ( !(v4 & 1) && !(v7 & 1) && !(v8 & 1) )\n        break;\n      v9 = &byte_98A1B0[v5];\n      v10 = v3;\n      v87 = v1;\n      v11 = v2;\n      v12 = v88;\n      do\n      {\n        v13 = *v9;\n        if ( *v9 != byte_98A1B0[v1] )\n        {\n          byte_866140 = 0;\n          v7 = 0;\n        }\n        if ( v13 != byte_98A1B0[v11] )\n        {\n          byte_866144 = 0;\n          v8 = 0;\n        }\n        if ( v13 != byte_98A1B0[v10] )\n        {\n          byte_866148 = 0;\n          v4 = 0;\n        }\n        ++v9;\n        ++v11;\n        --v1;\n        v10 -= 20;\n        ++v12;\n      }\n      while ( v12 );\n      ++v6;\n      v5 += 20;\n      v2 -= 20;\n      v1 = v87 + 20;\n      --v3;\n    }\n    while ( v6 < v85 );\n  }\n  v14 = v86;\n  if ( !dword_565C70 || (signed int)sub_40BBB0(3) > 19 )\n  {\nLABEL_31:\n    v15 = dword_565C68;\n    goto LABEL_32;\n  }\n  v15 = dword_565C68;\n  switch ( dword_565C68 )\n  {\n    case 9:\n      v16 = &off_6439F0;\n      goto LABEL_24;\n    case 19:\n      v16 = &off_693750;\nLABEL_24:\n      dword_86614C = 0;\n      dword_866150 = 0;\n      sub_41FF60(sub_418490, v86, v16);\n      if ( dword_86614C )\n      {\n        v17 = dword_866160[0];\n        v18 = sub_493F30();\n        if ( dword_86614C <= 0LL )\nLABEL_89:\n          sub_4340E0(\"engine/fuseki.c\", 314LL, \"k < num_fuseki_moves\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n        v19 = v18 % dword_866150;\n        v20 = ((unsigned __int64)(1717986919LL * v17) >> 63) + (1717986919LL * v17 >> 33);\n        v21 = 0LL;\n        while ( 1 )\n        {\n          v22 = dword_866160[v21];\n          if ( v22 < v20 )\n            break;\n          v19 -= v22;\n          if ( v19 < 0 )\n            break;\n          if ( ++v21 >= dword_86614C )\n            goto LABEL_89;\n        }\n        sub_4181C0((unsigned int)dword_866710[(unsigned int)v21], 75LL, v86);\n        if ( dword_86614C > 0 )\n        {\n          v82 = 0LL;\n          do\n            sub_422940((unsigned int)dword_866710[v82++]);\n          while ( v82 < dword_86614C );\n        }\n        return;\n      }\n      goto LABEL_31;\n    case 13:\n      v16 = &off_66D2F0;\n      goto LABEL_24;\n  }\nLABEL_32:\n  v23 = ((unsigned __int64)(45210182075LL * (_DWORD)v85) >> 63) + (45210182075LL * (unsigned int)v85 >> 35);\n  if ( v15 == 9 )\n  {\n    if ( (signed int)sub_40BBB0(v86) > 0 )\n      v23 = 5;\n    v15 = dword_565C68;\n  }\n  if ( v15 > 11 )\n    goto LABEL_95;\n  v24 = v15 / 2 - 2;\n  v25 = v15 / 2 + 2;\n  v26 = v15 / 2 - 2;\n  LODWORD(v27) = v15 / 2 + 2;\n  do\n  {\n    LODWORD(v28) = v27;\n    LODWORD(v27) = v26;\n    v26 = v28;\n  }\n  while ( (signed int)v27 > (signed int)v28 );\n  do\n  {\n    v29 = v24;\n    v24 = v25;\n    v25 = v29;\n  }\n  while ( v29 > v24 );\n  v30 = v29;\n  v31 = v24;\n  v27 = (signed int)v27;\n  v28 = (signed int)v28;\n  v32 = v30 - 1;\n  v33 = 20LL * (signed int)v27 + 21;\nLABEL_41:\n  v34 = v32;\n  while ( !byte_98A1B1[v33 + v34] )\n  {\n    if ( ++v34 >= v31 )\n    {\n      v33 += 20LL;\n      v36 = __OFSUB__(v27, v28);\n      v35 = v27++ - v28 < 0;\n      if ( v35 ^ v36 )\n        goto LABEL_41;\n      sub_4181C0((unsigned int)(21 * (v15 / 2) + 21), 45LL, v86);\n      v15 = dword_565C68;\n      break;\n    }\n  }\n  if ( v15 >= 9 )\n  {\nLABEL_95:\n    v37 = 8;\n    if ( v15 <= 17 )\n    {\n      v37 = 5;\n      if ( v15 != 9 )\n        v37 = (unsigned int)v15 >> 1;\n    }\n    v38 = v37 - 1;\n    LODWORD(v39) = v15 - v37;\n    v40 = 0;\n    LODWORD(v41) = v37 - 1;\n    do\n    {\n      v42 = v41;\n      LODWORD(v41) = v40;\n      v40 = v42;\n    }\n    while ( (signed int)v41 > v42 );\n    v43 = v15 - 1;\n    v44 = v43;\n    v45 = v39;\n    do\n    {\n      v46 = v45;\n      v45 = v44;\n      v44 = v46;\n    }\n    while ( v46 > v45 );\n    v47 = v46;\n    v48 = v45;\n    v41 = (signed int)v41;\n    v49 = v42;\n    v50 = v47 - 1;\n    v51 = 20LL * (signed int)v41 + 21;\nLABEL_55:\n    v52 = v50;\n    while ( !byte_98A1B1[v51 + v52] )\n    {\n      if ( ++v52 >= v48 )\n      {\n        v51 += 20LL;\n        v36 = __OFSUB__(v41, v49);\n        v35 = v41++ - v49 < 0;\n        if ( v35 ^ v36 )\n          goto LABEL_55;\n        sub_418320(1LL, &v84, &v83);\n        sub_4181C0((unsigned int)(v83 + 20 * v84 + 21), v23, v14);\n        LODWORD(v39) = dword_565C68 - v37;\n        v43 = dword_565C68 - 1;\n        break;\n      }\n    }\n    v53 = v39;\n    LODWORD(v54) = v43;\n    do\n    {\n      v55 = v54;\n      LODWORD(v54) = v53;\n      v53 = v55;\n    }\n    while ( (signed int)v54 > v55 );\n    v56 = 0;\n    v57 = v37 - 1;\n    do\n    {\n      v58 = v56;\n      v56 = v57;\n      v57 = v58;\n    }\n    while ( v58 > v56 );\n    v59 = v58;\n    v60 = v56;\n    v54 = (signed int)v54;\n    v61 = v55;\n    v62 = v59 - 1;\n    v63 = 20LL * (signed int)v54 + 21;\nLABEL_65:\n    v64 = v62;\n    while ( !byte_98A1B1[v63 + v64] )\n    {\n      if ( ++v64 >= v60 )\n      {\n        v63 += 20LL;\n        v36 = __OFSUB__(v54, v61);\n        v35 = v54++ - v61 < 0;\n        if ( v35 ^ v36 )\n          goto LABEL_65;\n        sub_418320(2LL, &v84, &v83);\n        sub_4181C0((unsigned int)(v83 + 20 * v84 + 21), v23, v14);\n        LODWORD(v39) = dword_565C68 - v37;\n        v43 = dword_565C68 - 1;\n        break;\n      }\n    }\n    v65 = v39;\n    LODWORD(v66) = v43;\n    do\n    {\n      LODWORD(v67) = v66;\n      LODWORD(v66) = v65;\n      v65 = v67;\n    }\n    while ( (signed int)v66 > (signed int)v67 );\n    do\n    {\n      v68 = v39;\n      LODWORD(v39) = v43;\n      v43 = v68;\n    }\n    while ( v68 > (signed int)v39 );\n    v39 = (signed int)v39;\n    v66 = (signed int)v66;\n    v67 = (signed int)v67;\n    v69 = v68 - 1LL;\n    v70 = 20LL * (signed int)v66 + 21;\nLABEL_74:\n    v71 = v69;\n    while ( !byte_98A1B1[v70 + v71] )\n    {\n      if ( ++v71 >= v39 )\n      {\n        v70 += 20LL;\n        v36 = __OFSUB__(v66, v67);\n        v35 = v66++ - v67 < 0;\n        if ( v35 ^ v36 )\n          goto LABEL_74;\n        sub_418320(3LL, &v84, &v83);\n        sub_4181C0((unsigned int)(v83 + 20 * v84 + 21), v23, v14);\n        break;\n      }\n    }\n    v72 = 0;\n    LODWORD(v73) = v37 - 1;\n    do\n    {\n      LODWORD(v74) = v73;\n      LODWORD(v73) = v72;\n      v72 = v74;\n    }\n    while ( (signed int)v73 > (signed int)v74 );\n    v75 = 0;\n    do\n    {\n      v76 = v75;\n      v75 = v38;\n      v38 = v76;\n    }\n    while ( v76 > v75 );\n    v77 = v76;\n    v78 = v75;\n    v73 = (signed int)v73;\n    v74 = (signed int)v74;\n    v79 = v77 - 1;\n    v80 = 20LL * (signed int)v73 + 21;\nLABEL_84:\n    v81 = v79;\n    while ( !byte_98A1B1[v80 + v81] )\n    {\n      if ( ++v81 >= v78 )\n      {\n        v80 += 20LL;\n        v36 = __OFSUB__(v73, v74);\n        v35 = v73++ - v74 < 0;\n        if ( v35 ^ v36 )\n          goto LABEL_84;\n        sub_418320(0LL, &v84, &v83);\n        sub_4181C0((unsigned int)(v83 + 20 * v84 + 21), v23, v14);\n        return;\n      }\n    }\n  }\n}\n", 
            "funcStartAddr": "0x417b50L", 
            "funcEndAddr": "0x4181b3L", 
            "funcName": "sub_417B50"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4181C0(int a1, __int64 a2, int a3)\n{\n  int v3; // ebx\n  __int64 result; // rax\n  int v5; // eax\n  int v6; // eax\n  int v7; // eax\n  int v8; // esi\n\n  v3 = a1;\n  result = a1;\n  if ( !byte_98A1B0[a1] )\n  {\n    if ( byte_866140 == 1 )\n    {\n      v5 = 2 * (a1 - 20 * (((unsigned __int64)(1717986919LL * a1) >> 63) + (1717986919LL * a1 >> 35)));\n      if ( (a3 == 1) != v5 <= dword_565C68 )\n        v3 = a1 + 2 - v5 + dword_565C68 - 1;\n    }\n    if ( byte_866144 == 1 )\n    {\n      v6 = ((unsigned __int64)(1717986919LL * v3) >> 63) + (1717986919LL * v3 >> 35);\n      if ( (a3 == 1) != 2 * v6 - 2 >= dword_565C68 )\n        v3 = v3 - 20 * v6 + 20 * (dword_565C68 + 1 - v6);\n    }\n    if ( byte_866148 == 1 )\n    {\n      v7 = ((unsigned __int64)(1717986919LL * v3) >> 63) + (1717986919LL * v3 >> 35);\n      v8 = 20 * v7 - v3 + dword_565C68;\n      if ( (a3 == 1) != v8 >= v7 )\n        v3 = dword_565C68 - 1 + 22 - v7 + 20 * v8;\n    }\n    result = sub_422940((unsigned int)v3);\n    if ( (_DWORD)result )\n    {\n      result = (unsigned int)dword_88C268;\n      if ( dword_88C268 )\n        result = sub_433F90((unsigned __int64)\"Fuseki Player suggests %1m with value %d\\n\");\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4181c0L", 
            "funcEndAddr": "0x418314L", 
            "funcName": "sub_4181C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_418320(unsigned int a1, _DWORD *a2, _DWORD *a3)\n{\n  int *v3; // rbp\n  int *v4; // rax\n  int v5; // ebx\n  int v6; // er13\n  int v7; // er12\n  int v8; // er14\n  int v9; // er15\n  int v10; // edx\n  int v11; // edx\n  int v12; // edx\n  int v13; // edx\n  int v14; // edx\n  int v15; // edx\n  int v16; // edx\n  signed __int64 v17; // rax\n  _DWORD *v18; // rdx\n  __int64 result; // rax\n  _DWORD *v20; // [rsp+8h] [rbp-50h]\n  int v21; // [rsp+1Ch] [rbp-3Ch]\n  int v22; // [rsp+20h] [rbp-38h]\n  int v23; // [rsp+24h] [rbp-34h]\n\n  v3 = (int *)&unk_4AE680;\n  if ( dword_565C68 < 16 )\n    v3 = (int *)&unk_4AE660;\n  v4 = (int *)&unk_4AE640;\n  if ( dword_565C68 >= 12 )\n    v4 = v3;\n  v20 = a3;\n  v5 = *v4;\n  v6 = v4[1];\n  v7 = v4[2];\n  v8 = v4[3];\n  v9 = v4[4];\n  v23 = v4[5];\n  v22 = v4[6];\n  v21 = v4[7];\n  v10 = (signed int)sub_493F30() % (v21 + v22 + v23 + v9 + v8 + v7 + v5 + v6) - v5;\n  if ( v10 < 0 )\n  {\n    v17 = 0LL;\nLABEL_19:\n    v18 = v20;\n    goto LABEL_20;\n  }\n  v11 = v10 - v6;\n  if ( v11 < 0 )\n  {\n    v17 = 1LL;\n    goto LABEL_19;\n  }\n  v12 = v11 - v7;\n  if ( v12 < 0 )\n  {\n    v17 = 2LL;\n    goto LABEL_19;\n  }\n  v13 = v12 - v8;\n  if ( v13 < 0 )\n  {\n    v17 = 3LL;\n    goto LABEL_19;\n  }\n  v14 = v13 - v9;\n  if ( v14 < 0 )\n  {\n    v17 = 4LL;\n    goto LABEL_19;\n  }\n  v15 = v14 - v23;\n  if ( v15 < 0 )\n  {\n    v17 = 5LL;\n    v18 = v20;\n  }\n  else\n  {\n    v16 = v15 - v22;\n    if ( v16 < 0 )\n      v17 = 6LL;\n    else\n      v17 = 8LL - (v16 < v21);\n    v18 = v20;\n  }\nLABEL_20:\n  *a2 = dword_4AE600[2 * v17];\n  *v18 = dword_4AE604[2 * v17];\n  result = a1;\n  switch ( a1 )\n  {\n    case 0u:\n      --*a2;\n      goto LABEL_24;\n    case 1u:\n      --*a2;\n      goto LABEL_26;\n    case 2u:\n      *a2 = dword_565C68 - *a2;\nLABEL_24:\n      result = (unsigned int)(*v18 - 1);\n      goto LABEL_27;\n    case 3u:\n      *a2 = dword_565C68 - *a2;\nLABEL_26:\n      result = (unsigned int)(dword_565C68 - *v18);\nLABEL_27:\n      *v18 = result;\n      break;\n    default:\n      return result;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x418320L", 
            "funcEndAddr": "0x418490L", 
            "funcName": "sub_418320"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_418490(int a1, __int64 a2)\n{\n  __int64 v2; // rdx\n  __int64 v3; // rcx\n  __int64 v4; // rax\n  float v5; // xmm0_4\n  __int64 result; // rax\n\n  if ( dword_88C268 )\n  {\n    v2 = (unsigned int)(signed int)*(float *)(a2 + 28);\n    v3 = *(_QWORD *)(a2 + 16);\n    sub_433F90((unsigned __int64)\"Fuseki database move at %1m with relative weight %d, pattern %s+%d\\n\");\n  }\n  v4 = dword_86614C;\n  dword_866710[v4] = a1;\n  v5 = *(float *)(a2 + 28);\n  dword_866160[v4] = (signed int)v5;\n  dword_866150 = (signed int)(float)((float)dword_866150 + v5);\n  result = (unsigned int)(v4 + 1);\n  dword_86614C = result;\n  return result;\n}\n", 
            "funcStartAddr": "0x418490L", 
            "funcEndAddr": "0x4184ffL", 
            "funcName": "sub_418490"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_418500()\n{\n  sub_493D80((unsigned int)dword_88C240);\n  sub_40E710();\n  sub_419C40(&qword_98A740, byte_98A1B0);\n  dword_5642F4 = -1;\n  dword_5642F8 = -1;\n  dword_5642FC = -1;\n  dword_564300 = -1;\n  dword_564304 = -1;\n  dword_564308 = -1;\n  sub_420160(&qword_98A740, byte_98A1B0);\n  return sub_44BD40((unsigned int)dword_565C78);\n}\n", 
            "funcStartAddr": "0x418500L", 
            "funcEndAddr": "0x418573L", 
            "funcName": "sub_418500"
        }, 
        {
            "decompiledFuncCode": "char __fastcall sub_418580(unsigned int a1, const char *a2)\n{\n  int v2; // ebx\n  unsigned int v3; // er14\n  int v4; // ebp\n  int v5; // eax\n  signed __int64 v6; // rsi\n  __int64 v7; // rdi\n  int v8; // eax\n\n  v2 = (signed int)a2;\n  v3 = a1;\n  v4 = dword_88C268;\n  sub_457C00();\n  if ( (unsigned int)(dword_88C268 - 1) <= 1 )\n    --dword_88C268;\n  if ( dword_5642F4 != dword_98A7F0 )\n  {\n    dword_5642F4 = dword_98A7F0;\n    sub_44E060(0LL);\n    sub_454520(0LL);\n    a2 = \"  make worms\";\n    sub_44E0B0(0LL, \"  make worms\", 0LL);\n  }\n  if ( v2 != 1 )\n  {\n    v7 = 3LL;\n    if ( (unsigned int)sub_40BBB0(3) )\n    {\n      if ( dword_5642F8 != dword_98A7F0 )\n      {\n        dword_5642F8 = dword_98A7F0;\n        sub_456870(3LL, a2);\n      }\n      if ( v2 == 3 )\n      {\n        if ( dword_5642FC != dword_98A7F0 )\n        {\n          dword_5642FC = dword_98A7F0;\n          sub_411C30(v3, 1, v4);\n        }\n        dword_88C268 = v4;\n        v5 = sub_406800();\n        if ( v5 < 0 )\n          return v5;\n        v6 = 147LL;\nLABEL_40:\n        sub_4340E0(\"engine/genmove.c\", v6, \"test_gray_border() < 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n      }\n      if ( v2 == 2 )\n      {\n        dword_88C268 = v4;\n        v5 = sub_406800();\n        if ( v5 < 0 )\n          return v5;\n        v6 = 139LL;\n        goto LABEL_40;\n      }\n      v8 = dword_564300;\n      if ( dword_564300 != dword_98A7F0 )\n      {\n        dword_564300 = dword_98A7F0;\n        a2 = 0LL;\n        v7 = v3;\n        sub_411C30(v3, 0, v4);\n        v8 = dword_98A7F0;\n        dword_5642FC = dword_98A7F0;\n      }\n      if ( v2 == 4 )\n      {\n        dword_88C268 = v4;\n        v5 = sub_406800();\n        if ( v5 < 0 )\n          return v5;\n        v6 = 158LL;\n        goto LABEL_40;\n      }\n    }\n    else\n    {\n      if ( v2 == 2 || v2 == 4 || v2 == 99 )\n      {\n        sub_413F20();\n        dword_88C268 = v4;\n        v5 = sub_406800();\n        if ( v5 < 0 )\n          return v5;\n        v6 = 167LL;\n        goto LABEL_40;\n      }\n      v8 = dword_98A7F0;\n    }\n    dword_88C268 = v4;\n    if ( dword_564304 != v8 )\n    {\n      dword_564304 = v8;\n      sub_414AE0();\n    }\n    if ( v2 == 6 )\n    {\n      v5 = sub_406800();\n      if ( v5 < 0 )\n        return v5;\n      v6 = 177LL;\n    }\n    else\n    {\n      LOBYTE(v5) = dword_98A7F0;\n      if ( dword_564308 != dword_98A7F0 )\n      {\n        dword_564308 = dword_98A7F0;\n        LOBYTE(v5) = (unsigned __int64)sub_4142A0();\n      }\n      if ( v2 != 7 )\n      {\n        if ( dword_88C220 )\n          LOBYTE(v5) = sub_414B60(v7, (__int64)a2);\n        return v5;\n      }\n      v5 = sub_406800();\n      if ( v5 < 0 )\n        return v5;\n      v6 = 185LL;\n    }\n    goto LABEL_40;\n  }\n  dword_88C268 = v4;\n  v5 = sub_406800();\n  if ( v5 >= 0 )\n  {\n    v6 = 130LL;\n    goto LABEL_40;\n  }\n  return v5;\n}\n", 
            "funcStartAddr": "0x418580L", 
            "funcEndAddr": "0x4187c7L", 
            "funcName": "sub_418580"
        }, 
        {
            "decompiledFuncCode": "char __fastcall sub_4187D0(unsigned int a1, const char *a2)\n{\n  int v2; // ebx\n  __int64 v3; // r14\n  int v4; // ebp\n  int v5; // er15\n  int v6; // er12\n  char result; // al\n\n  v2 = dword_88C268;\n  v3 = qword_88C238;\n  v4 = dword_88C22C;\n  v5 = dword_88C264;\n  v6 = dword_88C224;\n  dword_88C268 = 0;\n  qword_88C238 = 0LL;\n  dword_88C22C = 0;\n  dword_88C264 = 0;\n  dword_88C224 = 0;\n  result = sub_418580(a1, a2);\n  dword_88C268 = v2;\n  qword_88C238 = v3;\n  dword_88C22C = v4;\n  dword_88C264 = v5;\n  dword_88C224 = v6;\n  return result;\n}\n", 
            "funcStartAddr": "0x4187d0L", 
            "funcEndAddr": "0x41885bL", 
            "funcName": "sub_4187D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_418860(_DWORD *a1, _DWORD *a2, unsigned int a3)\n{\n  unsigned int v3; // ebp\n  int v5; // [rsp+Ch] [rbp-1Ch]\n\n  v3 = sub_418920(&v5, a3, 0LL);\n  if ( (v3 & 0x80000000) == 0 && ((unsigned __int64)v5 > 0x1A4 || byte_98A1B0[v5] == 3) )\n    sub_4340E0(\n      \"engine/genmove.c\",\n      235LL,\n      \"retval < 0 || (((unsigned) (move) < ((19 + 2) * (19 + 1) + 1)) && board[move] != 3)\",\n      0xFFFFFFFFLL,\n      0xFFFFFFFFLL);\n  if ( a1 )\n    *a1 = (1717986919LL * v5 >> 35) + ((unsigned __int64)(1717986919LL * v5) >> 63) - 1;\n  if ( a2 )\n    *a2 = v5 - 20 * (((unsigned __int64)(1717986919LL * v5) >> 63) + (1717986919LL * v5 >> 35)) - 1;\n  return v3;\n}\n", 
            "funcStartAddr": "0x418860L", 
            "funcEndAddr": "0x41891cL", 
            "funcName": "sub_418860"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_418920(unsigned int *a1, unsigned int a2, __int64 a3, float a4)\n{\n  __int64 v4; // r12\n  unsigned int v5; // er13\n  unsigned int *v6; // r15\n  FILE *v7; // rax\n  int v8; // er14\n  int v9; // eax\n  signed __int64 v10; // rbp\n  const char *v11; // rsi\n  __int64 v12; // rdi\n  int v13; // ebx\n  __int64 v14; // rsi\n  const char *v15; // rsi\n  float v16; // xmm0_4\n  __int64 v17; // rsi\n  __int64 v18; // rsi\n  signed __int64 v19; // r12\n  signed __int64 v20; // rbx\n  signed int v21; // er14\n  bool v22; // zf\n  __int64 v23; // rsi\n  __int64 v24; // rsi\n  __int64 v25; // rax\n  signed __int64 v26; // rcx\n  bool v27; // dl\n  bool v28; // bl\n  __int64 v29; // rax\n  signed __int64 v30; // rcx\n  bool v31; // dl\n  bool v32; // bl\n  unsigned int v33; // ebx\n  int v34; // eax\n  __int64 v35; // rax\n  int v36; // esi\n  __int64 v37; // rax\n  __int64 v38; // rdi\n  __int64 v39; // rsi\n  __int64 v40; // r8\n  int v41; // edx\n  __int64 v42; // rax\n  int v43; // esi\n  __int64 v44; // rax\n  __int64 v45; // rdi\n  __int64 v46; // r8\n  int v47; // edx\n  __int64 v48; // rsi\n  float v49; // xmm0_4\n  __int64 v50; // rax\n  int v51; // esi\n  __int64 v52; // rax\n  __int64 v53; // rsi\n  float v55; // [rsp+Ch] [rbp-CCh]\n  float v56; // [rsp+10h] [rbp-C8h]\n  int v57; // [rsp+14h] [rbp-C4h]\n  __int64 v58; // [rsp+18h] [rbp-C0h]\n  char s; // [rsp+20h] [rbp-B8h]\n\n  v4 = a3;\n  v56 = a4;\n  v5 = a2;\n  v6 = a1;\n  sub_44E060(0LL);\n  memset(&dword_988EE0, 0, 0x5A4uLL);\n  xmmword_98A720 = 0LL;\n  qword_98A730 = 0LL;\n  *a1 = 0;\n  v55 = -1.0;\n  v7 = fopen(\"level\", (const char *)&a4R[2]);\n  if ( v7 && fgets(&s, 128, v7) && (unsigned int)__isoc99_sscanf(&s, \"%d\", &dword_565C78) )\n    fprintf(stderr, \"level = %d\\n\", (unsigned int)dword_565C78);\n  sub_493D80((unsigned int)dword_88C240);\n  sub_40E710();\n  sub_419C40(&qword_98A740, byte_98A1B0);\n  dword_5642F4 = -1;\n  dword_5642F8 = -1;\n  dword_5642FC = -1;\n  dword_564300 = -1;\n  dword_564304 = -1;\n  dword_564308 = -1;\n  sub_420160(&qword_98A740, byte_98A1B0);\n  sub_44BD40((unsigned int)dword_565C78);\n  v8 = dword_98A76C;\n  if ( !dword_88C318 || dword_565C88 >= 0 && (signed int)sub_40BBB0(3) > dword_565C88 )\n    goto LABEL_10;\n  v9 = sub_407AE0();\n  if ( v9 )\n  {\n    LODWORD(v10) = dword_565C68\n                 + 21\n                 - (v9\n                  - 20 * (((unsigned __int64)(1717986919LL * v9) >> 63) + (1717986919LL * v9 >> 35)))\n                 + 20 * (dword_565C68 + ((unsigned __int64)(-1717986919LL * v9) >> 63) + (-1717986919LL * v9 >> 35));\n    if ( !byte_98A1B0[(signed int)v10] && (unsigned int)sub_406880((unsigned int)v10, a2, \"find_mirror_move\", 0, 0, 0) )\n    {\n      LODWORD(v29) = 21 * dword_565C68;\n      v30 = 21LL;\n      do\n      {\n        v29 = (signed int)v29;\n        if ( v30 > (signed int)v29 )\n          goto LABEL_92;\n        v31 = byte_98A1B0[v30] == 0;\n        v32 = byte_98A1B0[v29] == 0;\n        ++v30;\n        LODWORD(v29) = v29 - 1;\n      }\n      while ( v31 == v32 );\n      sub_407030();\n    }\nLABEL_10:\n    sub_44E060(1LL);\n    sub_418580(a2, (const char *)0x63);\n    v11 = \"examine position\";\n    sub_44E0B0(1LL, \"examine position\", 0LL);\n    if ( dword_565C78 < 8 )\n    {\n      dword_88C254 = 0;\n      if ( !dword_88C224 )\n        goto LABEL_16;\n    }\n    else\n    {\n      sub_445420(&dword_88C258, &dword_88C25C);\n      if ( dword_88C268 | dword_88C250 )\n      {\n        if ( *(float *)&dword_88C258 == *(float *)&dword_88C25C )\n          sub_433F90((unsigned __int64)\"\\nScore estimate: %s %f\\n\");\n        else\n          sub_433F90((unsigned __int64)\"\\nScore estimate: %s %f to %s %f\\n\");\n        fflush(stderr);\n      }\n      v11 = \"estimate score\";\n      sub_44E0B0(1LL, \"estimate score\", 0LL);\n      if ( v5 == 1 )\n        v34 = dword_88C258;\n      else\n        v34 = dword_88C25C;\n      dword_88C254 = v34;\n      if ( !dword_88C224 )\n      {\nLABEL_16:\n        v12 = (unsigned int)dword_88C228;\n        switch ( dword_88C228 )\n        {\n          case 0:\n            goto LABEL_20;\n          case 1:\n            v11 = (const char *)35;\n            fwrite(\"\\n          dragon_status display:\\n\\n\", 0x23uLL, 1uLL, stderr);\n            v12 = (unsigned int)dword_88C228;\n            if ( dword_88C228 != 2 )\n              goto LABEL_19;\n            break;\n          case 2:\n            break;\n          default:\n            goto LABEL_19;\n        }\n        v11 = (const char *)25;\n        fwrite(\"\\n          eye display:\\n\\n\", 0x19uLL, 1uLL, stderr);\n        v12 = (unsigned int)dword_88C228;\nLABEL_19:\n        sub_44A610(v12, v11);\n        if ( dword_88C228 == 1 )\n        {\n          fwrite(\"\\n           owl_status display:\\n\\n\", 0x21uLL, 1uLL, stderr);\n          sub_44A610(3LL, 33LL);\n          v11 = (const char *)37;\n          fwrite(\"\\n           matcher_status display:\\n\\n\", 0x25uLL, 1uLL, stderr);\n          sub_44A610(4LL, 37LL);\n          if ( dword_98A7F4 )\nLABEL_21:\n            sub_4340E0(\"engine/genmove.c\", 386LL, \"stackp == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\nLABEL_22:\n          sub_456640(v5);\n          v13 = dword_88C268;\n          if ( dword_88C268 > 0 )\n            --dword_88C268;\n          sub_42E540(v5);\n          dword_88C268 = v13;\n          sub_417B50(v5);\n          if ( dword_98A7F4 )\n            sub_4340E0(\"engine/genmove.c\", 404LL, \"stackp == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n          sub_44E060(1LL);\n          sub_4491B0(v5, v11);\n          sub_44E0B0(1LL, \"shapes\", 0LL);\n          if ( dword_98A7F4 )\n            sub_4340E0(\"engine/genmove.c\", 410LL, \"stackp == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n          sub_40F490(v5);\n          sub_44E0B0(1LL, \"combinations\", 0LL);\n          if ( dword_98A7F4 )\n            sub_4340E0(\"engine/genmove.c\", 415LL, \"stackp == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n          if ( (unsigned int)sub_44E830(v6, &v55, v5, v4) && dword_88C268 )\n          {\n            v14 = *v6;\n            sub_433F90((unsigned __int64)\"Move generation likes %1m with value %f\\n\");\n          }\n          if ( dword_98A7F4 )\n            sub_4340E0(\"engine/genmove.c\", 421LL, \"stackp == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n          v15 = \"review move reasons\";\n          sub_44E0B0(1LL, \"review move reasons\", 0LL);\n          v16 = v55;\n          if ( v55 < 10.0 && !dword_88C2FC )\n          {\n            if ( (unsigned int)sub_419A60(v5, \"review move reasons\") )\n            {\n              sub_4491B0(v5, \"review move reasons\");\n              if ( !dword_88C2F8 )\n                sub_44A280(v5);\n              if ( (unsigned int)sub_44E830(v6, &v55, v5, v4) && dword_88C268 )\n              {\n                v17 = *v6;\n                sub_433F90((unsigned __int64)\"Upon reconsideration move generation likes %1m with value %f\\n\");\n              }\n            }\n            v15 = \"move reasons with revised semeai status\";\n            sub_44E0B0(1LL, \"move reasons with revised semeai status\", 0LL);\n            v16 = v55;\n          }\n          if ( v16 <= 6.0 && !dword_88C2F8 )\n          {\n            sub_44A280(v5);\n            if ( dword_98A7F4 )\n              sub_4340E0(\"engine/genmove.c\", 445LL, \"stackp == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n            if ( (unsigned int)sub_44E830(v6, &v55, v5, v4) && dword_88C268 )\n            {\n              v18 = *v6;\n              sub_433F90((unsigned __int64)\"Move generation likes %1m with value %f\\n\");\n            }\n            if ( dword_98A7F4 )\n              sub_4340E0(\"engine/genmove.c\", 449LL, \"stackp == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n            v15 = \"endgame\";\n            sub_44E0B0(1LL, \"endgame\", 0LL);\n            v16 = v55;\n          }\n          if ( v16 < 0.0 )\n          {\n            if ( (unsigned int)sub_419A60(v5, v15) )\n              goto LABEL_166;\n            v58 = v4;\n            v57 = v8;\n            if ( !ptr )\n              sub_4340E0(\"engine/genmove.c\", 624LL, \"dragon2 != ((void*)0)\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n            v19 = 4611686018427380703LL;\n            v20 = 21LL;\n            v21 = 0;\n            do\n            {\n              if ( byte_98A1B0[v20] != 3 && dword_95C670[v19] == 3 - v5 )\n              {\n                if ( *((_DWORD *)ptr + 26 * dword_95C674[v19] + 22) )\n                {\n                  if ( !dword_95C6B0[v19] )\n                  {\n                    dword_95C6B0[v19] = 3;\n                    v21 = 1;\n                    if ( v20 == dword_95C678[v19] )\n                    {\n                      if ( dword_88C268 )\n                      {\n                        v15 = (const char *)(unsigned int)v20;\n                        sub_433F90((unsigned __int64)\"revise_semeai: changed status of dragon %1m from DEAD to UNKNOWN\\n\");\n                      }\n                    }\n                  }\n                }\n              }\n              ++v20;\n              v19 += 19LL;\n            }\n            while ( v19 * 4 );\n            v22 = v21 == 0;\n            v8 = v57;\n            v4 = v58;\n            if ( !v22 )\n            {\nLABEL_166:\n              sub_4491B0(v5, v15);\n              sub_44A280(v5);\n              if ( (unsigned int)sub_44E830(v6, &v55, v5, v4) && dword_88C268 )\n              {\n                v23 = *v6;\n                sub_433F90((unsigned __int64)\"Upon reconsideration move generation likes %1m with value %f\\n\");\n              }\n            }\n            sub_44E0B0(1LL, \"move reasons with revised semeai status\", 0LL);\n            v16 = v55;\n          }\n          if ( v16 < 0.0 )\n          {\n            v24 = v5;\n            if ( (unsigned int)sub_416A90(v6, v5) )\n            {\n              if ( !v4 || *(_DWORD *)(v4 + 4LL * (signed int)*v6) )\n              {\n                v55 = 1.0;\n                if ( dword_88C268 )\n                {\n                  v24 = *v6;\n                  sub_433F90((unsigned __int64)\"Filling a liberty at %1m\\n\");\n                }\n                sub_44E4B0(*v6, v24);\n                v35 = (signed int)*v6;\n                v36 = (1717986919 * v35 >> 35) + ((unsigned __int64)(1717986919 * v35) >> 63);\n                v37 = (signed int)v35 - 20 * v36;\n                if ( v55 > *(float *)&dword_988EDC[19 * (v36 - 1) + v37] )\n                  *(float *)&dword_988EDC[19 * (v36 - 1) + v37] = v55;\n                sub_44E0B0(1LL, \"fill liberty\", 0LL);\n              }\n            }\n          }\n          if ( v55 < 0.0\n            && !dword_88C2FC\n            && (qword_88C310\n             || dword_88C210\n             && (v5 == 2 && *(float *)&dword_88C254 < -15.0 || v5 == 1 && *(float *)&dword_88C254 > 15.0))\n            && (signed int)sub_403E50(v6, v5, 0LL, 0) > 0 )\n          {\n            v38 = (signed int)*v6;\n            if ( !v4 || *(_DWORD *)(v4 + 4 * v38) )\n            {\n              v39 = v5;\n              if ( !(unsigned int)sub_407B30(v38, v5) )\n              {\n                v40 = (signed int)*v6;\n                v41 = (1717986919 * v40 >> 35) + ((unsigned __int64)(1717986919 * v40) >> 63);\n                sub_4340E0(\n                  \"engine/genmove.c\",\n                  498LL,\n                  \"is_legal(*move, color)\",\n                  (unsigned int)(v41 - 1),\n                  (unsigned int)(v40 - 20 * v41 - 1));\n              }\n              v55 = 1.0;\n              if ( dword_88C268 )\n              {\n                v39 = *v6;\n                sub_433F90((unsigned __int64)\"Aftermath move at %1m\\n\");\n              }\n              sub_44E4B0(*v6, v39);\n              v42 = (signed int)*v6;\n              v43 = (1717986919 * v42 >> 35) + ((unsigned __int64)(1717986919 * v42) >> 63);\n              v44 = (signed int)v42 - 20 * v43;\n              if ( v55 > *(float *)&dword_988EDC[19 * (v43 - 1) + v44] )\n                *(float *)&dword_988EDC[19 * (v43 - 1) + v44] = v55;\n              sub_44E0B0(1LL, \"aftermath_genmove\", 0LL);\n            }\n          }\n          if ( v55 < 0.0 && !dword_88C2FC )\n          {\n            if ( (_DWORD)qword_88C310 )\n            {\n              if ( (signed int)sub_403E50(v6, v5, 0LL, 1) > 0 )\n              {\n                v45 = (signed int)*v6;\n                if ( !v4 || *(_DWORD *)(v4 + 4 * v45) )\n                {\n                  if ( !(unsigned int)sub_407B30(v45, v5) )\n                  {\n                    v46 = (signed int)*v6;\n                    v47 = (1717986919 * v46 >> 35) + ((unsigned __int64)(1717986919 * v46) >> 63);\n                    sub_4340E0(\n                      \"engine/genmove.c\",\n                      514LL,\n                      \"is_legal(*move, color)\",\n                      (unsigned int)(v47 - 1),\n                      (unsigned int)(v46 - 20 * v47 - 1));\n                  }\n                  v55 = 1.0;\n                  if ( dword_88C268 )\n                  {\n                    v48 = *v6;\n                    sub_433F90((unsigned __int64)\"Aftermath move at %1m\\n\");\n                    v49 = v55;\n                  }\n                  else\n                  {\n                    v49 = 1.0;\n                  }\n                  v50 = (signed int)*v6;\n                  v51 = (1717986919 * v50 >> 35) + ((unsigned __int64)(1717986919 * v50) >> 63);\n                  v52 = (signed int)v50 - 20 * v51;\n                  if ( v49 > *(float *)&dword_988EDC[19 * (v51 - 1) + v52] )\n                    *(float *)&dword_988EDC[19 * (v51 - 1) + v52] = v49;\n                  sub_44E0B0(1LL, \"aftermath_genmove\", 0LL);\n                }\n              }\n            }\n          }\n          if ( v55 >= 0.0 )\n          {\n            if ( dword_88C268 )\n            {\n              v53 = *v6;\n              sub_433F90((unsigned __int64)\"genmove() recommends %1m with value %f\\n\");\n            }\n            if ( !dword_88C218 )\n            {\nLABEL_146:\n              if ( !dword_88C24C )\n                goto LABEL_149;\n              sub_44E0B0(0LL, \"TIME to generate move at \", *v6);\n              *(double *)&qword_866CB8 = *(double *)&qword_866CB8 + 1.0;\n              if ( *(double *)&qword_866CC0 >= 1.0 )\n              {\n                if ( *v6 )\n                {\nLABEL_149:\n                  if ( dword_98A7F4 )\n                    goto LABEL_150;\nLABEL_151:\n                  if ( (signed int)sub_406800() >= 0 )\n                    sub_4340E0(\"engine/genmove.c\", 562LL, \"test_gray_border() < 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n                  if ( dword_98A76C != v8 )\n                    sub_4340E0(\"engine/genmove.c\", 563LL, \"depth == save_depth\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n                  return (unsigned int)(signed int)v55;\n                }\n              }\n              else\n              {\n                qword_866CC0 = 4607182418800017408LL;\n                dword_866CC8 = *v6;\n                dword_866CCC = dword_98A7C0 + 1;\n                if ( dword_866CC8 )\n                  goto LABEL_149;\n              }\n              sub_433F90((unsigned __int64)\"\\nSLOWEST MOVE: %d at %1m \");\n              fprintf(stderr, \"(%.2f seconds)\\n\", *(double *)&qword_866CC0);\n              fprintf(\n                stderr,\n                \"\\nAVERAGE TIME: %.2f seconds per move\\n\",\n                *(double *)&qword_866CB8 / (double)dword_98A7C0);\n              fprintf(stderr, \"\\nTOTAL TIME: %.2f seconds\\n\", *(double *)&qword_866CB8);\n              if ( dword_98A7F4 )\nLABEL_150:\n                sub_4340E0(\"engine/genmove.c\", 561LL, \"stackp == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n              goto LABEL_151;\n            }\n          }\n          else\n          {\n            if ( dword_88C268 )\n              sub_433F90((unsigned __int64)\"I pass.\\n\");\n            *v6 = 0;\n            if ( !dword_88C218 )\n              goto LABEL_146;\n          }\n          sub_433F90((unsigned __int64)\"Nodes:                %d\\n\");\n          sub_433F90((unsigned __int64)\"Positions entered:    %d\\n\");\n          sub_433F90((unsigned __int64)\"Position hits:        %d\\n\");\n          sub_433F90((unsigned __int64)\"Read results entered: %d\\n\");\n          sub_433F90((unsigned __int64)\"Read result hits:     %d\\n\");\n          sub_433F90((unsigned __int64)\"Hash collisions:      %d\\n\");\n          goto LABEL_146;\n        }\nLABEL_20:\n        if ( dword_98A7F4 )\n          goto LABEL_21;\n        goto LABEL_22;\n      }\n    }\n    sub_445360(1LL, v11);\n    goto LABEL_16;\n  }\n  v10 = 21LL;\n  while ( byte_98A1B0[v10] || !(unsigned int)sub_406880((unsigned int)v10, a2, \"find_mirror_move\", 0, 0, 0) )\n  {\nLABEL_85:\n    if ( (unsigned __int64)++v10 >= 0x190 )\n      goto LABEL_10;\n  }\n  LODWORD(v25) = 21 * dword_565C68;\n  v26 = 21LL;\n  while ( 1 )\n  {\n    v25 = (signed int)v25;\n    if ( v26 > (signed int)v25 )\n      break;\n    v27 = byte_98A1B0[v26] == 0;\n    v28 = byte_98A1B0[v25] == 0;\n    ++v26;\n    LODWORD(v25) = v25 - 1;\n    if ( v27 != v28 )\n    {\n      sub_407030();\n      goto LABEL_85;\n    }\n  }\nLABEL_92:\n  sub_407030();\n  *a1 = v10;\n  v33 = 1;\n  if ( dword_88C268 )\n    sub_433F90((unsigned __int64)\"genmove() recommends mirror move at %1m\\n\");\n  return v33;\n}\n", 
            "funcStartAddr": "0x418920L", 
            "funcEndAddr": "0x419902L", 
            "funcName": "sub_418920"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_419910@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, _DWORD *a3@<rdi>, _DWORD *a4@<rsi>)\n{\n  __int64 result; // rax\n  __int64 v5; // [rsp-4h] [rbp-18h]\n\n  v5 = a1;\n  result = sub_418920((unsigned int *)&v5 + 1, a2, 0LL, 0.0);\n  if ( a3 )\n    *a3 = (1717986919LL * SHIDWORD(v5) >> 35) + ((unsigned __int64)(1717986919LL * SHIDWORD(v5)) >> 63) - 1;\n  if ( a4 )\n    *a4 = HIDWORD(v5)\n        - 20 * (((unsigned __int64)(1717986919LL * SHIDWORD(v5)) >> 63) + (1717986919LL * SHIDWORD(v5) >> 35))\n        - 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x419910L", 
            "funcEndAddr": "0x419985L", 
            "funcName": "sub_419910"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_419990@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, __int64 a3@<rcx>, _DWORD *a4@<rdi>, _DWORD *a5@<rsi>)\n{\n  __int64 result; // rax\n  __int64 v6; // [rsp-4h] [rbp-18h]\n\n  v6 = a1;\n  result = sub_418920((unsigned int *)&v6 + 1, a2, a3, 0.0);\n  if ( a4 )\n    *a4 = (1717986919LL * SHIDWORD(v6) >> 35) + ((unsigned __int64)(1717986919LL * SHIDWORD(v6)) >> 63) - 1;\n  if ( a5 )\n    *a5 = HIDWORD(v6)\n        - 20 * (((unsigned __int64)(1717986919LL * SHIDWORD(v6)) >> 63) + (1717986919LL * SHIDWORD(v6) >> 35))\n        - 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x419990L", 
            "funcEndAddr": "0x419a04L", 
            "funcName": "sub_419990"
        }, 
        {
            "decompiledFuncCode": "float *__fastcall sub_419A10(int a1, float a2)\n{\n  int v2; // esi\n  float *result; // rax\n  signed __int64 v4; // rcx\n\n  v2 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n  result = (float *)(a1 - 20 * v2);\n  v4 = 19LL * (v2 - 1);\n  if ( a2 > *(float *)&dword_988EDC[(_QWORD)result + v4] )\n  {\n    result = (float *)(v4 * 4 + 4LL * (_QWORD)result + 9998044);\n    *result = a2;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x419a10L", 
            "funcEndAddr": "0x419a58L", 
            "funcName": "sub_419A10"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_419A60(int a1, float a2)\n{\n  signed __int64 result; // rax\n  signed __int64 v3; // rbp\n  signed __int64 v4; // rbx\n  void *v5; // rcx\n  __int64 v6; // [rsp+0h] [rbp-7E8h]\n  char v7; // [rsp+190h] [rbp-658h]\n\n  if ( a1 == 1 )\n  {\n    result = 0LL;\n    if ( a2 > *(float *)&dword_88C254 )\n      return result;\n  }\n  else if ( a1 == 2 )\n  {\n    result = 0LL;\n    if ( *(float *)&dword_88C254 > COERCE_FLOAT(LODWORD(a2) ^ xmmword_4AE070) )\n      return result;\n  }\n  result = 0LL;\n  if ( *((_DWORD *)&xmmword_954FC0 + 19 * dword_88C210 + 2) != 12\n    && dword_88C210\n    && !dword_88C2F4\n    && !dword_954FF0[19 * dword_88C210] )\n  {\n    v3 = 4611686018427380703LL;\n    v4 = 21LL;\n    do\n    {\n      if ( byte_98A1B0[v4] != 3 && (unsigned int)sub_414710(v4, dword_88C210) )\n        dword_95C6B0[v3] = 3;\n      ++v4;\n      v3 += 19LL;\n    }\n    while ( v3 * 4 );\n    *((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * dword_88C210 + 1) + 15) = 1;\n    sub_414850(3 - a1, (__int64)&v6, (__int64)&v7);\n    v5 = &unk_927B28;\n    if ( a1 == 2 )\n      v5 = &unk_9333A0;\n    sub_419D50((unsigned int)(3 - a1), &v6, &v7, v5, 0LL, \"revised thrashing dragon\");\n    sub_4142A0();\n    result = 1LL;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x419a60L", 
            "funcEndAddr": "0x419ba0L", 
            "funcName": "sub_419A60"
        }, 
        {
            "decompiledFuncCode": "char sub_419BA0()\n{\n  char result; // al\n  signed __int64 v1; // rbx\n  __int64 v2; // r14\n  __int64 v3; // r14\n  __int64 v4; // r14\n  __int64 v5; // [rsp-78h] [rbp-78h]\n\n  result = byte_866CD0;\n  if ( !byte_866CD0 )\n  {\n    sub_494200(&v5);\n    v1 = 2305843009213693573LL;\n    do\n    {\n      v2 = (unsigned int)sub_4941D0();\n      qword_867960[v1] = v2 | (sub_4941D0() << 32);\n      v3 = (unsigned int)sub_4941D0();\n      qword_8685E0[v1] = v3 | (sub_4941D0() << 32);\n      v4 = (unsigned int)sub_4941D0();\n      qword_869260[v1] = v4 | (sub_4941D0() << 32);\n      ++v1;\n    }\n    while ( v1 * 8 );\n    result = sub_494260(&v5);\n    byte_866CD0 = 1;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x419ba0L", 
            "funcEndAddr": "0x419c3eL", 
            "funcName": "sub_419BA0"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_419C40(__int64 *a1, __int64 a2, int a3)\n{\n  signed __int64 v3; // rcx\n  __int64 v4; // r8\n  char v5; // al\n\n  *a1 = 0LL;\n  v3 = -379LL;\n  v4 = 0LL;\n  do\n  {\n    if ( byte_98A340[v3] == 3 )\n      goto LABEL_8;\n    v5 = *(_BYTE *)(a2 + v3 + 400);\n    if ( v5 == 2 )\n    {\n      v4 ^= qword_867960[v3];\n    }\n    else\n    {\n      if ( v5 != 1 )\n        goto LABEL_8;\n      v4 ^= qword_8685E0[v3];\n    }\n    *a1 = v4;\nLABEL_8:\n    ++v3;\n  }\n  while ( v3 );\n  if ( a3 )\n    *a1 = qword_8685E0[a3] ^ v4;\n}\n", 
            "funcStartAddr": "0x419c40L", 
            "funcEndAddr": "0x419ca7L", 
            "funcName": "sub_419C40"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_419CB0(_QWORD *a1, int a2)\n{\n  __int64 result; // rax\n\n  result = qword_8685E0[a2];\n  *a1 ^= result;\n  return result;\n}\n", 
            "funcStartAddr": "0x419cb0L", 
            "funcEndAddr": "0x419cbfL", 
            "funcName": "sub_419CB0"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_419CC0(_QWORD *a1, int a2, int a3)\n{\n  __int64 *v3; // rax\n\n  if ( a3 == 2 )\n  {\n    v3 = (__int64 *)&unk_866CE0;\n  }\n  else\n  {\n    if ( a3 != 1 )\n      return;\n    v3 = qword_867960;\n  }\n  *a1 ^= v3[a2];\n}\n", 
            "funcStartAddr": "0x419cc0L", 
            "funcEndAddr": "0x419ce1L", 
            "funcName": "sub_419CC0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_419D10(int a1, int a2)\n{\n  __int64 result; // rax\n\n  if ( dword_88C264 & 1 )\n    sub_433F90((unsigned __int64)\"  non-territory for %C at %1m\\n\");\n  result = qword_869260[0];\n  *(_DWORD *)(result + 4LL * a1 + 32616) |= a2;\n  return result;\n}\n", 
            "funcStartAddr": "0x419d10L", 
            "funcEndAddr": "0x419d48L", 
            "funcName": "sub_419D10"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_419D50(int a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  *(_DWORD *)(a4 + 31012) = 1;\n  *(_DWORD *)(a4 + 34220) = a1;\n  return sub_419D70();\n}\n", 
            "funcStartAddr": "0x419d50L", 
            "funcEndAddr": "0x419d62L", 
            "funcName": "sub_419D50"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_419D70(unsigned int a1, const void *a2, __int64 a3, __int64 a4, int a5, __int64 a6)\n{\n  __int64 v6; // rbx\n  __int64 v7; // r13\n  unsigned int v8; // er12\n  int v9; // xmm0_4\n  __int64 v10; // rax\n  int v11; // xmm2_4\n  char v12; // cl\n  signed int v13; // xmm1_4\n  void *v14; // rdi\n  __int64 v15; // rsi\n  __int64 v16; // rsi\n  signed __int64 v17; // rax\n  signed __int64 v18; // r12\n  float v19; // xmm0_4\n  float v20; // xmm0_4\n  float v21; // xmm0_4\n  float v22; // xmm0_4\n  signed __int64 v23; // rax\n  signed __int64 v24; // rax\n  __int64 result; // rax\n  int v26[400]; // [rsp+0h] [rbp-33C8h]\n  int v27[1200]; // [rsp+640h] [rbp-2D88h]\n  __int128 v28; // [rsp+1900h] [rbp-1AC8h]\n  __int128 v29; // [rsp+1910h] [rbp-1AB8h]\n  char *v30; // [rsp+1A70h] [rbp-1958h]\n  int v31; // [rsp+1A80h] [rbp-1948h]\n  int v32; // [rsp+1A84h] [rbp-1944h]\n  __int64 v33; // [rsp+1A88h] [rbp-1940h]\n  char s; // [rsp+1A90h] [rbp-1938h]\n  __int128 v35; // [rsp+1F40h] [rbp-1488h]\n  __int128 v36; // [rsp+1F50h] [rbp-1478h]\n  int v37; // [rsp+20C4h] [rbp-1304h]\n  int v38; // [rsp+20C8h] [rbp-1300h]\n  int v39; // [rsp+20CCh] [rbp-12FCh]\n  char v40; // [rsp+20D0h] [rbp-12F8h]\n  int v41; // [rsp+2704h] [rbp-CC4h]\n  int v42; // [rsp+2708h] [rbp-CC0h]\n  int v43; // [rsp+270Ch] [rbp-CBCh]\n\n  v33 = a6;\n  v6 = a4;\n  v7 = a3;\n  v8 = a1;\n  v32 = a5;\n  if ( (_UNKNOWN *)a4 == &unk_869BD8 )\n  {\n    *(_DWORD *)(a4 + 34220) = 0;\n    v9 = dword_4AE290[dword_8714FC == 0];\n  }\n  else\n  {\n    *(_DWORD *)(a4 + 34220) = a1;\n    v9 = dword_4AE288[*(_DWORD *)(a4 + 31012) == 0];\n  }\n  v31 = v9;\n  *(_DWORD *)(a4 + 35668) = 0;\n  memcpy((void *)a4, a2, 0x190uLL);\n  *(_DWORD *)(v6 + 34216) = qword_98A760 - dword_98A800;\n  v10 = 0LL;\n  v11 = v31;\n  do\n  {\n    if ( byte_98A1C5[v10] == 3 )\n      goto LABEL_19;\n    *(_DWORD *)(v6 + 4 * v10 + 484) = 0;\n    *(_DWORD *)(v6 + 4 * v10 + 2084) = 0;\n    *(_DWORD *)(v6 + 4 * v10 + 6884) = v11;\n    *(_DWORD *)(v6 + 4 * v10 + 8484) = v11;\n    *(_DWORD *)(v6 + 4 * v10 + 10084) = 1065353216;\n    *(_DWORD *)(v6 + 4 * v10 + 11684) = 1065353216;\n    *(_DWORD *)(v6 + 4 * v10 + 3684) = 0;\n    *(_DWORD *)(v6 + 4 * v10 + 5284) = 0;\n    *(_DWORD *)(v6 + 4 * v10 + 32700) = 0;\n    v12 = byte_98A1C5[v10];\n    if ( (unsigned __int8)(byte_98A1C5[v10] - 1) > 1u )\n    {\n      *(_BYTE *)(v6 + v10 + 21) = 0;\n      goto LABEL_19;\n    }\n    if ( *((_BYTE *)a2 + v10 + 21) )\n    {\n      v13 = 1120403456;\n      if ( v12 == 1 )\n      {\n        if ( v7 )\n          v13 = *(_DWORD *)(v7 + 4 * v10 + 84);\n        *(_DWORD *)(v6 + 4 * v10 + 3684) = v13;\nLABEL_14:\n        *(_DWORD *)(v6 + 4 * v10 + 11684) = 0;\n        goto LABEL_19;\n      }\n      if ( v7 )\n        v13 = *(_DWORD *)(v7 + 4 * v10 + 84);\n      *(_DWORD *)(v6 + 4 * v10 + 5284) = v13;\n    }\n    else if ( v12 != 1 )\n    {\n      goto LABEL_14;\n    }\n    *(_DWORD *)(v6 + 4 * v10 + 10084) = 0;\nLABEL_19:\n    ++v10;\n  }\n  while ( v10 != 379 );\n  sub_44BFF0((unsigned int)(dword_98A7F4 - 1), a2);\n  if ( (_UNKNOWN *)v6 == &unk_869BD8 )\n  {\n    v14 = &unk_869BD8;\n    v15 = 0LL;\n  }\n  else\n  {\n    v14 = (void *)v6;\n    v15 = v8;\n  }\n  sub_41D180(v14, v15);\n  sub_44BFF0((unsigned int)(1 - dword_98A7F4), v15);\n  *(_DWORD *)(v6 + 31012);\n  memset(&s, 0, 0x640uLL);\n  v16 = 0LL;\n  memset(&v40, 0, 0x640uLL);\n  v17 = 2521LL;\n  do\n  {\n    v27[v17] = (signed int)((double)(signed int)(float)(*(float *)(v6 + 4 * v17) * 4096.0) + 0.5);\n    v26[v17] = (signed int)((double)(signed int)(float)(*(float *)(v6 + 4 * v17 + 1600) * 4096.0) + 0.5);\n    ++v17;\n  }\n  while ( v17 != 2900 );\n  v18 = -379LL;\n  do\n  {\n    if ( byte_98A340[v18] != 3 )\n    {\n      v19 = *(float *)(v6 + 4 * v18 + 5200);\n      if ( v19 > 0.0 )\n      {\n        v16 = (unsigned int)(signed int)((double)(signed int)(float)(v19 * 4096.0) + 0.5);\n        v20 = 4096.0 / *(float *)(v6 + 4 * v18 + 8400);\n        v30 = &s;\n        sub_41B6D0((unsigned int)(v18 + 400));\n      }\n      v21 = *(float *)(v6 + 4 * v18 + 6800);\n      if ( v21 > 0.0 )\n      {\n        v16 = (unsigned int)(signed int)((double)(signed int)(float)(v21 * 4096.0) + 0.5);\n        v22 = 4096.0 / *(float *)(v6 + 4 * v18 + 10000);\n        v30 = &v40;\n        sub_41B6D0((unsigned int)(v18 + 400));\n      }\n    }\n    ++v18;\n  }\n  while ( v18 );\n  v23 = 121LL;\n  do\n  {\n    *(__m128 *)(v6 + 4 * v23) = _mm_mul_ps(\n                                  _mm_cvtepi32_ps(*(__m128i *)((char *)&v28 + 4 * v23)),\n                                  (__m128)xmmword_4AE0E0);\n    *(__m128 *)(v6 + 4 * v23 + 1600) = _mm_mul_ps(\n                                         _mm_cvtepi32_ps(*(__m128i *)((char *)&v35 + 4 * v23)),\n                                         (__m128)xmmword_4AE0E0);\n    *(__m128 *)(v6 + 4 * v23 + 16) = _mm_mul_ps(\n                                       _mm_cvtepi32_ps(*(__m128i *)((char *)&v29 + 4 * v23)),\n                                       (__m128)xmmword_4AE0E0);\n    *(__m128 *)(v6 + 4 * v23 + 1616) = _mm_mul_ps(\n                                         _mm_cvtepi32_ps(*(__m128i *)((char *)&v36 + 4 * v23)),\n                                         (__m128)xmmword_4AE0E0);\n    v23 += 8LL;\n  }\n  while ( v23 != 497 );\n  *(float *)(v6 + 1988) = (float)v37 * 0.00024414062;\n  *(float *)(v6 + 3588) = (float)v41 * 0.00024414062;\n  *(float *)(v6 + 1992) = (float)v38 * 0.00024414062;\n  *(float *)(v6 + 3592) = (float)v42 * 0.00024414062;\n  *(float *)(v6 + 1996) = (float)v39 * 0.00024414062;\n  *(float *)(v6 + 3596) = (float)v43 * 0.00024414062;\n  sub_41BCE0(v6, v16);\n  *(_DWORD *)(v6 + 31008) = 0;\n  *(_DWORD *)(v6 + 18000) = 0;\n  *(_DWORD *)(v6 + 22336) = 0;\n  v24 = -378LL;\n  if ( byte_98A33F[-378] == 3 )\n    goto LABEL_38;\n  while ( 1 )\n  {\n    *(_DWORD *)(v6 + 4 * v24 + 14796) = 0;\n    *(_DWORD *)(v6 + 4 * v24 + 16396) = 0;\n    *(_DWORD *)(v6 + 4 * v24 + 17996) = 0;\n    if ( !v24 )\n      break;\n    while ( 1 )\n    {\n      if ( byte_98A340[v24] != 3 )\n      {\n        *(_DWORD *)(v6 + 4 * v24 + 14800) = 0;\n        *(_DWORD *)(v6 + 4 * v24 + 16400) = 0;\n        *(_DWORD *)(v6 + 4 * v24 + 18000) = 0;\n      }\n      v24 += 2LL;\n      if ( byte_98A33F[v24] != 3 )\n        break;\nLABEL_38:\n      if ( !v24 )\n        goto LABEL_41;\n    }\n  }\nLABEL_41:\n  sub_41DC60(v6, sub_41A340, 2LL, v6 + 13200);\n  sub_41DC60(v6, sub_41AA20, 4LL, v6 + 14800);\n  sub_41DC60(v6, sub_41A570, 8LL, v6 + 16400);\n  if ( !v32 && dword_88C224 & 8 || (result = (unsigned int)dword_869268, dword_869268) && dword_869268 == v32 )\n    result = sub_41C090(v6, v33);\n  return result;\n}\n", 
            "funcStartAddr": "0x419d70L", 
            "funcEndAddr": "0x41a337L", 
            "funcName": "sub_419D70"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_41A340(__int64 a1, signed int a2)\n{\n  float v2; // xmm3_4\n  float v3; // xmm4_4\n  int v4; // edx\n  double v5; // xmm0_8\n  signed __int64 result; // rax\n\n  v2 = *(float *)(a1 + 4LL * a2 + 2000);\n  v3 = *(float *)(a1 + 4LL * a2 + 400);\n  if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v4 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\"engine/influence.c\", 1017LL, \"ON_BOARD1(pos)\", (unsigned int)(v4 - 1), (unsigned int)(a2 - 20 * v4 - 1));\n  }\n  v5 = *(float *)(a1 + 4LL * a2 + 31016);\n  if ( v2 <= 0.0 || v3 != 0.0 || v5 >= -0.95 )\n    result = (v3 > 0.0 && v2 == 0.0) & (unsigned __int8)(v5 > 0.95);\n  else\n    result = 2LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x41a340L", 
            "funcEndAddr": "0x41a424L", 
            "funcName": "sub_41A340"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_41A430(__int64 a1, signed int a2)\n{\n  float v2; // xmm4_4\n  float v3; // xmm5_4\n  int v4; // edx\n  double v5; // xmm0_8\n  signed __int64 result; // rax\n  double v7; // xmm1_8\n  double v8; // xmm2_8\n\n  v2 = *(float *)(a1 + 4LL * a2 + 2000);\n  v3 = *(float *)(a1 + 4LL * a2 + 400);\n  if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v4 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\"engine/influence.c\", 1017LL, \"ON_BOARD1(pos)\", (unsigned int)(v4 - 1), (unsigned int)(a2 - 20 * v4 - 1));\n  }\n  v5 = *(float *)(a1 + 4LL * a2 + 31016);\n  result = 2LL;\n  if ( v2 <= 0.0 || v3 != 0.0 || v5 >= -0.95 )\n  {\n    if ( v2 != 0.0 || v3 <= 0.0 || (result = 1LL, v5 <= 0.95) )\n    {\n      v7 = v2;\n      v8 = v3;\n      if ( v3 >= 10.0 || v2 <= 5.0 || (result = 2LL, v7 <= 7.0 * v8) )\n        result = (v8 > v7 * 7.0) & (unsigned __int8)(v3 > 5.0 && v2 < 10.0);\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x41a430L", 
            "funcEndAddr": "0x41a570L", 
            "funcName": "sub_41A430"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_41A570(__int64 a1, signed int a2)\n{\n  signed __int64 result; // rax\n  double v3; // xmm1_8\n  double v4; // xmm2_8\n  float v5; // [rsp+0h] [rbp-8h]\n  float v6; // [rsp+4h] [rbp-4h]\n\n  v6 = *(float *)(a1 + 4LL * a2 + 2000);\n  v5 = *(float *)(a1 + 4LL * a2 + 400);\n  result = sub_41A430(a1, a2);\n  if ( !(_DWORD)result )\n  {\n    v3 = v6;\n    v4 = v5;\n    if ( v5 >= 40.0 || v6 <= 1.0 || (result = 2LL, v3 <= 3.0 * v4) )\n      result = (v4 > v3 * 3.0) & (unsigned __int8)(v5 > 1.0 && v6 < 40.0);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x41a570L", 
            "funcEndAddr": "0x41a609L", 
            "funcName": "sub_41A570"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_41A610(__int64 a1, _DWORD *a2, double a3, __m128i a4)\n{\n  signed int v4; // er9\n  __int64 v5; // rdx\n  signed __int64 v6; // rcx\n  signed int v7; // ebx\n  signed int v8; // ebx\n  int v9; // ecx\n  signed __int64 v10; // rbx\n  int v11; // eax\n  int v12; // ebp\n  int v13; // eax\n  int v14; // ebp\n  unsigned __int64 v15; // rcx\n  signed __int64 v16; // r11\n  __int64 v17; // r8\n  unsigned __int64 v18; // r8\n  signed __int64 v19; // rcx\n  int v20; // er9\n  __int64 v21; // rdx\n  unsigned __int64 v22; // rdx\n  signed __int64 v23; // rdx\n  signed __int64 v24; // rbp\n  unsigned __int64 v25; // rax\n  unsigned __int64 v26; // rdx\n  __int64 v27; // r10\n  signed __int64 v28; // r14\n  signed __int64 v29; // r15\n  __int64 v30; // rbx\n  __m128i v31; // xmm0\n  __int64 v32; // rdx\n  signed __int64 v33; // rbp\n  signed __int64 v34; // rbp\n  __int64 v35; // rbp\n  __int128 v36; // xmm0\n  signed __int64 v37; // rdx\n\n  v4 = 1084;\n  LODWORD(v5) = 0;\n  v6 = -378LL;\n  if ( byte_98A33F[-378] == 3 )\n    goto LABEL_9;\nLABEL_4:\n  v7 = *(_DWORD *)(a1 + 4 * v6 + 16396);\n  if ( v7 )\n  {\n    if ( v4 > v7 )\n      v4 = *(_DWORD *)(a1 + 4 * v6 + 16396);\n    if ( (signed int)v5 < v7 )\n      LODWORD(v5) = *(_DWORD *)(a1 + 4 * v6 + 16396);\n  }\nLABEL_9:\n  while ( v6 )\n  {\n    if ( byte_98A340[v6] != 3 )\n    {\n      v8 = *(_DWORD *)(a1 + 4 * v6 + 16400);\n      if ( v8 )\n      {\n        if ( v4 > v8 )\n          v4 = *(_DWORD *)(a1 + 4 * v6 + 16400);\n        if ( (signed int)v5 >= v8 )\n          v8 = v5;\n        LODWORD(v5) = v8;\n      }\n    }\n    v6 += 2LL;\n    if ( byte_98A33F[v6] != 3 )\n      goto LABEL_4;\n  }\n  v9 = 1 - v4;\n  *a2 = 1 - v4 + v5;\n  v10 = -378LL;\n  if ( byte_98A33F[-378] == 3 )\n    goto LABEL_23;\nLABEL_20:\n  v11 = *(_DWORD *)(a1 + 4 * v10 + 16396);\n  v12 = v9 + v11;\n  if ( !v11 )\n    v12 = 0;\n  a2[v10 + 400] = v12;\nLABEL_23:\n  while ( v10 )\n  {\n    if ( byte_98A340[v10] != 3 )\n    {\n      v13 = *(_DWORD *)(a1 + 4 * v10 + 16400);\n      v14 = v9 + v13;\n      if ( !v13 )\n        v14 = 0;\n      a2[v10 + 401] = v14;\n    }\n    v10 += 2LL;\n    if ( byte_98A33F[v10] != 3 )\n      goto LABEL_20;\n  }\n  if ( v4 <= (signed int)v5 )\n  {\n    v15 = v4;\n    v16 = (signed int)v5;\n    v17 = (signed int)v5;\n    if ( v4 >= (signed __int64)(signed int)v5 )\n      v17 = v4;\n    v18 = v17 + 1 - v4;\n    if ( v18 < 4 )\n      goto LABEL_32;\n    v5 = (signed int)v5;\n    if ( v4 >= (signed __int64)(signed int)v5 )\n      v5 = v4;\n    v22 = v5 - v4;\n    if ( (signed int)v22 + 1 <= 0 || v22 >> 32 )\n      goto LABEL_32;\n    v23 = 4LL * v4;\n    v24 = v16;\n    if ( v4 >= v16 )\n      v24 = v4;\n    if ( a1 + 4 * v24 + 22340 > (unsigned __int64)(a2 + 402)\n      && a1 + 4LL * v4 + 18000 < (unsigned __int64)a2 + 4 * v24 + 3056 - v23\n      || a1 + 4LL * v4 + 26672 < (unsigned __int64)a2 + 4 * v24 + 4500 - v23\n      && a1 + 4 * v24 + 26676 > (unsigned __int64)(a2 + 1124) )\n    {\nLABEL_32:\n      v19 = v15 - 1;\n      v20 = -v4;\n      do\n      {\n        v21 = v20 + (signed int)v19 + 2;\n        a2[v21 + 401] = *(_DWORD *)(a1 + 4 * v19 + 22340);\n        a2[v21 + 1123] = *(_DWORD *)(a1 + 4 * v19 + 26676);\n        a2[v21 + 762] = (*(_DWORD *)(a1 + 4 * v19++ + 18004) & 1) + 1;\n      }\n      while ( v19 < v16 );\n      return;\n    }\n    v25 = v18 & 0xFFFFFFFFFFFFFFFCLL;\n    v26 = ((v18 & 0xFFFFFFFFFFFFFFFCLL) - 4) >> 2;\n    v27 = ((_BYTE)v26 + 1) & 1;\n    if ( (v18 & 0xFFFFFFFFFFFFFFFCLL) == 4 )\n    {\n      v32 = 0LL;\n      if ( !v27 )\n        goto LABEL_48;\n    }\n    else\n    {\n      v28 = a1 + 4LL * v4 + 26688;\n      v29 = v27 - 1 - v26;\n      v30 = 0LL;\n      v31 = _mm_load_si128((const __m128i *)&xmmword_4AE0F0);\n      a4 = _mm_cmpeq_epi32(a4, a4);\n      v32 = 0LL;\n      do\n      {\n        v33 = (v30 >> 30) | 4;\n        *(_OWORD *)((char *)a2 + v33 + 1604) = *(_OWORD *)(v28 + 4 * v32 - 4352);\n        *(_OWORD *)((char *)a2 + v33 + 4492) = *(_OWORD *)(v28 + 4 * v32 - 16);\n        _mm_storeu_si128(\n          (__m128i *)((char *)a2 + v33 + 3048),\n          _mm_sub_epi32(_mm_and_si128(_mm_loadu_si128((const __m128i *)(v28 + 4 * v32 - 8688)), v31), a4));\n        v34 = ((v30 + 0x400000000LL) >> 30) | 4;\n        *(_OWORD *)((char *)a2 + v34 + 1604) = *(_OWORD *)(v28 + 4 * v32 - 4336);\n        *(_OWORD *)((char *)a2 + v34 + 4492) = *(_OWORD *)(v28 + 4 * v32);\n        _mm_storeu_si128(\n          (__m128i *)((char *)a2 + v34 + 3048),\n          _mm_sub_epi32(_mm_and_si128(_mm_loadu_si128((const __m128i *)(v28 + 4 * v32 - 8672)), v31), a4));\n        v32 += 8LL;\n        v30 += 0x800000000LL;\n        v29 += 2LL;\n      }\n      while ( v29 );\n      if ( !v27 )\n        goto LABEL_48;\n    }\n    v35 = v32 + v4;\n    v36 = *(_OWORD *)(a1 + 4 * (v32 + v4) + 22336);\n    v37 = 4LL * (signed int)v32 | 4;\n    *(_OWORD *)((char *)a2 + v37 + 1604) = v36;\n    *(_OWORD *)((char *)a2 + v37 + 4492) = *(_OWORD *)(a1 + 4 * v35 + 26672);\n    _mm_storeu_si128(\n      (__m128i *)((char *)a2 + v37 + 3048),\n      _mm_sub_epi32(\n        _mm_and_si128(_mm_loadu_si128((const __m128i *)(a1 + 4 * v35 + 18000)), (__m128i)xmmword_4AE0F0),\n        _mm_cmpeq_epi32(a4, a4)));\nLABEL_48:\n    if ( v18 == v25 )\n      return;\n    v15 = v25 + v4;\n    goto LABEL_32;\n  }\n}\n", 
            "funcStartAddr": "0x41a610L", 
            "funcEndAddr": "0x41a99bL", 
            "funcName": "sub_41A610"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_41A9A0(__int64 a1, __int64 a2, __int64 a3)\n{\n  __int64 v3; // r14\n  signed __int64 v4; // r12\n  __int64 v5; // rbx\n  __m128 v6; // xmm1\n  __m128 v7; // t1\n  __m128 v8; // xmm1\n\n  v3 = a3;\n  v4 = a1 + 31100;\n  v5 = 0LL;\n  do\n  {\n    if ( byte_98A1C5[v5] != 3 )\n    {\n      *(_DWORD *)(a2 + 4 * v5 + 84) = sub_41AA20(a1, (unsigned int)(v5 + 21));\n      v6.m128_i32[0] = *(_DWORD *)(v4 + 4 * v5);\n      v7.m128_i32[0] = 0;\n      v8 = _mm_cmplt_ss(v6, v7);\n      *(_DWORD *)(v3 + 4 * v5 + 84) = v8.m128_i32[0] & (*(_DWORD *)(v4 + 4 * v5) ^ xmmword_4AE070) | *(unsigned __int128 *)&_mm_andnot_ps(v8, (__m128)*(unsigned int *)(v4 + 4 * v5));\n    }\n    ++v5;\n  }\n  while ( v5 != 379 );\n}\n", 
            "funcStartAddr": "0x41a9a0L", 
            "funcEndAddr": "0x41aa1dL", 
            "funcName": "sub_41A9A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41AA20(__int64 a1, signed int a2)\n{\n  float v2; // xmm4_4\n  float v3; // xmm5_4\n  int v4; // edx\n  double v5; // xmm0_8\n  signed int v6; // ecx\n  __int64 result; // rax\n  unsigned int v8; // edx\n  double v9; // xmm1_8\n  double v10; // xmm2_8\n\n  v2 = *(float *)(a1 + 4LL * a2 + 2000);\n  v3 = *(float *)(a1 + 4LL * a2 + 400);\n  if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v4 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\"engine/influence.c\", 1017LL, \"ON_BOARD1(pos)\", (unsigned int)(v4 - 1), (unsigned int)(a2 - 20 * v4 - 1));\n  }\n  v5 = *(float *)(a1 + 4LL * a2 + 31016);\n  if ( v2 <= 0.0 || v3 != 0.0 || (v6 = 2, v5 >= -0.95) )\n    v6 = v3 > 0.0 && v2 == 0.0 && v5 > 0.95;\n  if ( !dword_8E94D4[95 * a2] || (result = 0LL, !dword_8E9524[95 * a2]) )\n  {\n    if ( v6 )\n    {\n      if ( v6 != 2 )\n        goto LABEL_12;\n    }\n    else\n    {\n      v9 = v2;\n      v10 = v3;\n      if ( v3 >= 10.0 || v2 <= 10.0 || v9 <= 10.0 * v10 )\n      {\n        v6 = v10 > v9 * 10.0 && v3 > 10.0 && v2 < 10.0;\n        if ( v6 != 2 )\n        {\nLABEL_12:\n          v8 = 0;\n          if ( v6 == 1 )\n          {\n            result = 0LL;\n            v8 = 1;\n            if ( byte_97738D[36 * a2] & 4 )\n              return result;\n          }\n          return v8;\n        }\n      }\n    }\n    result = 0LL;\n    v8 = 2;\n    if ( byte_96CACD[36 * a2] & 4 )\n      return result;\n    return v8;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x41aa20L", 
            "funcEndAddr": "0x41abc5L", 
            "funcName": "sub_41AA20"
        }, 
        {
            "decompiledFuncCode": "__m128 __fastcall sub_41ABD0(__int64 a1, int a2, int a3)\n{\n  __m128 result; // xmm0\n\n  result = (__m128)*(unsigned int *)(a1 + 4LL * a2 + 31016);\n  if ( a3 != 1 )\n    result = _mm_xor_ps(result, (__m128)xmmword_4AE070);\n  return result;\n}\n", 
            "funcStartAddr": "0x41abd0L", 
            "funcEndAddr": "0x41abe9L", 
            "funcName": "sub_41ABD0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_41ABF0()\n{\n  signed __int64 v0; // rax\n  signed __int64 v1; // rax\n\n  dword_92F448 = 0;\n  dword_92C178[0] = 0;\n  dword_92D268 = 0;\n  v0 = -378LL;\n  if ( byte_98A33F[-378] != 3 )\n  {\nLABEL_4:\n    dword_92B4F4[v0] = 0;\n    dword_92BB34[v0] = 0;\n    dword_92C174[v0] = 0;\n  }\n  while ( v0 )\n  {\n    if ( byte_98A340[v0] != 3 )\n    {\n      dword_92B4F8[v0] = 0;\n      dword_92BB38[v0] = 0;\n      dword_92C178[v0] = 0;\n    }\n    v0 += 2LL;\n    if ( byte_98A33F[v0] != 3 )\n      goto LABEL_4;\n  }\n  sub_41DC60(&unk_927B28, sub_41A340, 2LL, &unk_92AEB8);\n  sub_41DC60(&unk_927B28, sub_41AA20, 4LL, dword_92B4F8);\n  sub_41DC60(&unk_927B28, sub_41A570, 8LL, dword_92BB38);\n  dword_93ACC0 = 0;\n  dword_9379F0[0] = 0;\n  dword_938AE0 = 0;\n  v1 = -378LL;\n  if ( byte_98A33F[-378] == 3 )\n    goto LABEL_12;\nLABEL_11:\n  dword_936D6C[v1] = 0;\n  dword_9373AC[v1] = 0;\n  dword_9379EC[v1] = 0;\nLABEL_12:\n  while ( v1 )\n  {\n    if ( byte_98A340[v1] != 3 )\n    {\n      dword_936D70[v1] = 0;\n      dword_9373B0[v1] = 0;\n      dword_9379F0[v1] = 0;\n    }\n    v1 += 2LL;\n    if ( byte_98A33F[v1] != 3 )\n      goto LABEL_11;\n  }\n  sub_41DC60(&unk_9333A0, sub_41A340, 2LL, &unk_936730);\n  sub_41DC60(&unk_9333A0, sub_41AA20, 4LL, dword_936D70);\n  return sub_41DC60(&unk_9333A0, sub_41A570, 8LL, dword_9373B0);\n}\n", 
            "funcStartAddr": "0x41abf0L", 
            "funcEndAddr": "0x41adabL", 
            "funcName": "sub_41ABF0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41ADB0(void *src, void *dest, int a3, __int64 a4)\n{\n  char *v4; // r14\n  int v5; // ebp\n  signed __int64 v6; // rax\n  int v7; // er13\n  signed __int64 v8; // rbp\n  bool v9; // zf\n  float *v10; // rax\n  signed __int64 v11; // rcx\n  float *v12; // rdx\n  signed __int64 v13; // r15\n  float v14; // xmm0_4\n  float v15; // xmm0_4\n  signed __int64 v16; // rax\n  signed __int64 v17; // rcx\n  signed __int64 v18; // rdx\n  signed __int64 v19; // rsi\n  signed __int64 v20; // rdi\n  float *v21; // rbp\n  float *v22; // rbp\n  __int64 result; // rax\n  int v24; // [rsp+14h] [rbp-E54h]\n  __int64 v25; // [rsp+18h] [rbp-E50h]\n  char v26; // [rsp+20h] [rbp-E48h]\n  char v27; // [rsp+1AFh] [rbp-CB9h]\n  char s[1596]; // [rsp+1B0h] [rbp-CB8h]\n  int v29; // [rsp+7ECh] [rbp-67Ch]\n  int v30[400]; // [rsp+7F0h] [rbp-678h]\n  int v31[14]; // [rsp+E30h] [rbp-38h]\n\n  v25 = a4;\n  v24 = a3;\n  v4 = (char *)dest;\n  v5 = *((_DWORD *)src + 8555);\n  memcpy(dest, src, 0xB878uLL);\n  v6 = -378LL;\n  if ( byte_98A33F[-378] != 3 )\nLABEL_4:\n    *(&v27 + v6) = *((_BYTE *)dest + v6 + 399) == 2;\n  while ( v6 )\n  {\n    if ( byte_98A340[v6] != 3 )\n      s[v6] = *((_BYTE *)dest + v6 + 400) == 2;\n    v6 += 2LL;\n    if ( byte_98A33F[v6] != 3 )\n      goto LABEL_4;\n  }\n  v7 = 3 - v5;\n  *((_DWORD *)dest + 8917) = 0;\n  qword_869260[0] = (__int64)dest;\n  sub_41F000(sub_41B1E0, (unsigned int)(3 - v5), &unk_6025F8, dest, &v26, 1LL);\n  sub_41B3C0(dest, (unsigned int)(3 - v5));\n  v8 = -379LL;\n  do\n  {\n    if ( byte_98A340[v8] != 3 && !*((_BYTE *)dest + v8 + 400) )\n    {\n      if ( *((float *)dest + v8 + 1300) > 0.0 && *((float *)dest + v8 + 2900) != 1.0 )\n      {\n        if ( dword_88C264 & 1 )\n        {\n          sub_433F90((unsigned __int64)\"  black block removed from %1m\\n\");\n          v9 = *((_BYTE *)dest + v8 + 400) == 0;\n          *((_DWORD *)dest + v8 + 2900) = 1065353216;\n          if ( !v9 )\n            goto LABEL_21;\n        }\n        else\n        {\n          *((_DWORD *)dest + v8 + 2900) = 1065353216;\n        }\n      }\n      if ( *((float *)dest + v8 + 1700) > 0.0 && *((float *)dest + v8 + 3300) != 1.0 )\n      {\n        if ( dword_88C264 & 1 )\n          sub_433F90((unsigned __int64)\"  white block removed from %1m\\n\");\n        *((_DWORD *)dest + v8 + 3300) = 1065353216;\n      }\n    }\nLABEL_21:\n    ++v8;\n  }\n  while ( v8 );\n  memset(s, 0, 0x640uLL);\n  v10 = (float *)((char *)dest + 11684);\n  v11 = -379LL;\n  do\n  {\n    if ( byte_98A340[v11] != 3 )\n    {\n      v12 = v10 - 400;\n      if ( v7 != 1 )\n        v12 = v10;\n      v31[v11] = (signed int)((double)(signed int)(float)(*v12 * 4096.0) + 0.5);\n    }\n    ++v10;\n    ++v11;\n  }\n  while ( v11 );\n  v13 = 921LL;\n  while ( 2 )\n  {\n    if ( byte_989E2C[v13] != 3 )\n    {\n      if ( v7 == 1 )\n      {\n        if ( *((float *)dest + v13) > *((float *)src + v13) )\n        {\n          v15 = 4096.0 / *((float *)dest + v13 + 800);\nLABEL_36:\n          sub_41B6D0((unsigned int)(v13 - 900));\n        }\n      }\n      else if ( v7 == 2 && *((float *)dest + v13 + 400) > *((float *)src + v13 + 400) )\n      {\n        v14 = 4096.0 / *((float *)dest + v13 + 1200);\n        goto LABEL_36;\n      }\n    }\n    if ( ++v13 != 1300 )\n      continue;\n    break;\n  }\n  v16 = -378LL;\n  v17 = 2084LL;\n  v18 = 484LL;\n  v19 = 488LL;\n  v20 = 2088LL;\n  if ( byte_98A33F[-378] == 3 )\n    goto LABEL_44;\nLABEL_41:\n  v21 = (float *)&v4[v17];\n  if ( v7 == 1 )\n    v21 = (float *)&v4[v18];\n  *v21 = (float)((float)*(&v29 + v16) * 0.00024414062) + *v21;\nLABEL_44:\n  while ( v16 )\n  {\n    if ( byte_98A340[v16] != 3 )\n    {\n      v22 = (float *)&v4[v20];\n      if ( v7 == 1 )\n        v22 = (float *)&v4[v19];\n      *v22 = (float)((float)v30[v16] * 0.00024414062) + *v22;\n    }\n    v16 += 2LL;\n    v17 += 8LL;\n    v18 += 8LL;\n    v19 += 8LL;\n    v20 += 8LL;\n    if ( byte_98A33F[v16] != 3 )\n      goto LABEL_41;\n  }\n  sub_41BCE0(v4, v19);\n  result = (unsigned int)dword_869268;\n  if ( dword_869268 && dword_869268 == v24 )\n    result = sub_41C090(v4, v25);\n  return result;\n}\n", 
            "funcStartAddr": "0x41adb0L", 
            "funcEndAddr": "0x41b1dbL", 
            "funcName": "sub_41ADB0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_41B1E0@<rax>(__int64 result@<rax>, __int64 a2@<rdx>, unsigned int a3@<ecx>, int a4@<edi>, unsigned int a5@<esi>, __int64 a6@<r8>)\n{\n  __int64 v6; // r14\n  unsigned int v7; // ebx\n  __int64 v8; // r13\n  unsigned int v9; // er12\n  __int64 v10; // rsi\n  __int64 v11; // rbx\n  int v12; // ebp\n  signed __int64 v13; // rax\n  int v14; // ecx\n  signed __int64 v15; // rdx\n  __int64 v16; // rsi\n  __int64 v17; // [rsp+0h] [rbp-38h]\n\n  v6 = a6;\n  v7 = a3;\n  v8 = a2;\n  if ( *(_BYTE *)(a2 + 121) & 2 )\n  {\n    v17 = (signed int)a3;\n    v9 = a4 + dword_94A490[8 * *(signed int *)(a2 + 52) + a3];\n    if ( !(*(_BYTE *)(a2 + 152) & 1)\n      || (result = (*(__int64 (__fastcall **)(_QWORD, _QWORD, _QWORD, _QWORD))(a2 + 168))(a3, v9, a5, 0LL),\n          (_DWORD)result) )\n    {\n      result = *(_QWORD *)(v8 + 160);\n      if ( result\n        && (result = ((__int64 (__fastcall *)(__int64, _QWORD, _QWORD, _QWORD))result)(v8, v7, v9, a5), !(_DWORD)result) )\n      {\n        if ( dword_88C264 & 1 )\n        {\n          v16 = *(_QWORD *)(v8 + 16);\n          result = sub_433F90((unsigned __int64)\"Influence pattern %s+%d rejected by helper at %1m\\n\");\n        }\n      }\n      else if ( !(*(_BYTE *)(v8 + 152) & 2)\n             || (result = (*(__int64 (__fastcall **)(_QWORD, _QWORD, _QWORD, signed __int64))(v8 + 168))(\n                            v7,\n                            v9,\n                            a5,\n                            2LL),\n                 (_DWORD)result) )\n      {\n        if ( dword_88C264 & 1 )\n        {\n          v10 = *(_QWORD *)(v8 + 16);\n          result = sub_433F90((unsigned __int64)\"influence pattern '%s'+%d matched at %1m\\n\");\n        }\n        if ( *(_DWORD *)(v8 + 8) > 0 )\n        {\n          v11 = 0LL;\n          do\n          {\n            if ( *(_DWORD *)(*(_QWORD *)v8 + 8 * v11 + 4) == 7 )\n            {\n              v12 = a4 + dword_94A490[8 * *(signed int *)(*(_QWORD *)v8 + 8 * v11) + v17];\n              v13 = *(signed int *)(v6 + 35668);\n              if ( v13 < 722 )\n              {\n                v14 = *(_DWORD *)(v8 + 124);\n                v15 = 16 * v13;\n                *(_DWORD *)(v6 + v15 + 35672) = a4;\n                *(_DWORD *)(v6 + v15 + 35676) = v12;\n                *(_DWORD *)(v6 + v15 + 35680) = v14;\n                *(_DWORD *)(v6 + v15 + 35684) = 1075419546;\n                *(_DWORD *)(v6 + 35668) = v13 + 1;\n              }\n              else if ( dword_88C264 & 1 )\n              {\n                sub_433F90((unsigned __int64)\"intrusion list exhausted\\n\");\n                if ( !(dword_88C264 & 1) )\n                  goto LABEL_20;\nLABEL_19:\n                sub_433F90((unsigned __int64)\"  followup for %1m: intrusion at %1m\\n\");\n                goto LABEL_20;\n              }\n              if ( dword_88C264 & 1 )\n                goto LABEL_19;\n            }\nLABEL_20:\n            ++v11;\n            result = *(signed int *)(v8 + 8);\n          }\n          while ( v11 < result );\n        }\n      }\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x41b1e0L", 
            "funcEndAddr": "0x41b3b1L", 
            "funcName": "sub_41B1E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41B3C0(__int64 a1, int a2)\n{\n  int v2; // er15\n  __int64 result; // rax\n  signed __int64 v4; // r13\n  int v5; // ecx\n  signed __int64 v6; // r12\n  __int64 v7; // rbp\n  float *v8; // rdx\n  float v9; // xmm0_4\n  float v10; // xmm1_4\n  float *v11; // rdx\n  __int64 v12; // rsi\n  bool v13; // zf\n  float v14; // xmm2_4\n  int v15; // ebp\n  __int64 v16; // rdx\n  float v17; // xmm0_4\n  int v18; // ecx\n  double v19; // xmm0_8\n  float *v20; // r12\n  signed __int64 v21; // r14\n  int v22; // er13\n  __int64 v23; // rcx\n  float v24; // xmm0_4\n  int v25; // edx\n  double v26; // xmm0_8\n  int v27; // ecx\n  int v28; // [rsp+0h] [rbp-58h]\n  float v29; // [rsp+Ch] [rbp-4Ch]\n\n  v2 = a2;\n  sub_4938C0(a1 + 35672, *(signed int *)(a1 + 35668), 16LL, sub_41DF70);\n  result = *(unsigned int *)(a1 + 35668);\n  if ( (signed int)result > 0 )\n  {\n    v4 = a1 + 35688;\n    v5 = 0;\n    do\n    {\n      while ( 1 )\n      {\n        while ( 1 )\n        {\n          v6 = 16LL * v5;\n          v7 = *(signed int *)(a1 + v6 + 35672);\n          if ( *(_DWORD *)(a1 + v6 + 35672) )\n            break;\n          v15 = v5;\n          v16 = *(signed int *)(a1 + v6 + 35676);\n          v17 = *(float *)(a1 + v6 + 35680);\n          v18 = *(_DWORD *)(a1 + v6 + 35684);\n          if ( v2 & 1 && v17 > *(float *)(a1 + 4 * v16 + 3600) )\n          {\n            *(float *)(a1 + 4 * v16 + 3600) = v17;\n            *(_DWORD *)(a1 + 4 * v16 + 6800) = v18;\n          }\n          if ( v2 & 2 && v17 > *(float *)(a1 + 4 * v16 + 5200) )\n          {\n            *(float *)(a1 + 4 * v16 + 5200) = v17;\n            *(_DWORD *)(a1 + 4 * v16 + 8400) = v18;\n          }\n          if ( dword_88C264 & 1 )\n          {\n            v19 = *(float *)(a1 + v6 + 35680);\n            sub_433F90((unsigned __int64)\"Adding %s intrusion at %1m, value %f\\n\");\n            result = *(unsigned int *)(a1 + 35668);\n          }\n          v5 = v15 + 1;\n          if ( v15 + 1 >= (signed int)result )\n            return result;\n        }\n        v8 = (float *)(a1 + 4 * v7 + 3600);\n        if ( v2 == 2 )\n          v8 = (float *)(a1 + 4 * v7 + 5200);\n        v9 = *v8;\n        v10 = 0.0;\n        v28 = v5;\n        if ( v5 < (signed int)result )\n        {\n          v11 = (float *)(v6 + v4);\n          v10 = 0.0;\n          v12 = 0LL;\n          do\n          {\n            if ( !(_DWORD)v12 || *((_DWORD *)v11 - 3) != *((_DWORD *)v11 - 7) )\n              v10 = v10 + *(v11 - 2);\n            if ( v5 + v12 + 1 >= (signed int)result )\n              break;\n            ++v12;\n            v13 = *(_DWORD *)v11 == (_DWORD)v7;\n            v11 += 4;\n          }\n          while ( v13 );\n        }\n        if ( (_UNKNOWN *)a1 != &unk_91C2B0 )\n          v9 = v9 * 0.6;\n        v14 = 1.0;\n        if ( v10 <= v9 )\n          break;\n        v14 = v9 / v10;\n        if ( v5 >= (signed int)result )\n          goto LABEL_17;\nLABEL_30:\n        v20 = (float *)(v4 + v6);\n        v21 = v5 + 1LL;\n        v22 = 0;\n        v29 = v14;\n        while ( 1 )\n        {\n          v23 = *((signed int *)v20 - 3);\n          if ( !v22 || (_DWORD)v23 != *((_DWORD *)v20 - 7) )\n          {\n            v24 = *(v20 - 2) * v14;\n            v25 = *((_DWORD *)v20 - 1);\n            if ( v2 & 1 && v24 > *(float *)(a1 + 4 * v23 + 3600) )\n            {\n              *(float *)(a1 + 4 * v23 + 3600) = v24;\n              *(_DWORD *)(a1 + 4 * v23 + 6800) = v25;\n            }\n            if ( v2 & 2 && v24 > *(float *)(a1 + 4 * v23 + 5200) )\n            {\n              *(float *)(a1 + 4 * v23 + 5200) = v24;\n              *(_DWORD *)(a1 + 4 * v23 + 8400) = v25;\n            }\n            if ( dword_88C264 & 1 )\n            {\n              v26 = (float)(*(v20 - 2) * v14);\n              sub_433F90((unsigned __int64)\"Adding %s intrusion for %1m at %1m, value %f (correction %f)\\n\");\n              v14 = v29;\n              result = *(unsigned int *)(a1 + 35668);\n            }\n          }\n          if ( v21 >= (signed int)result )\n            break;\n          --v22;\n          ++v21;\n          v13 = *(_DWORD *)v20 == (_DWORD)v7;\n          v20 += 4;\n          if ( !v13 )\n          {\n            v27 = v28;\n            goto LABEL_45;\n          }\n        }\n        v27 = v28 + 1;\nLABEL_45:\n        v5 = v27 - v22;\n        v4 = a1 + 35688;\n        if ( v5 >= (signed int)result )\n          return result;\n      }\n      if ( v5 < (signed int)result )\n        goto LABEL_30;\nLABEL_17:\n      ;\n    }\n    while ( v5 < (signed int)result );\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x41b3c0L", 
            "funcEndAddr": "0x41b6cdL", 
            "funcName": "sub_41B3C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41B6D0(int a1, int a2, int a3, int a4, __int64 a5, __int64 a6, __int64 a7)\n{\n  __int64 v7; // r13\n  __int64 v8; // r14\n  __int64 result; // rax\n  signed __int64 v10; // rcx\n  signed __int64 v11; // r10\n  int v12; // ecx\n  int v13; // eax\n  __int64 v14; // r11\n  __int64 v15; // r15\n  int v16; // er12\n  bool v17; // sf\n  unsigned __int8 v18; // of\n  int v19; // eax\n  int v20; // er9\n  unsigned int v21; // eax\n  int v22; // edx\n  int v23; // er13\n  int v24; // eax\n  __int64 v25; // rsi\n  int v26; // edi\n  int v27; // ecx\n  int v28; // edi\n  __int64 v29; // rbx\n  __int64 v30; // rbp\n  __int64 v31; // rdi\n  int v32; // esi\n  int v33; // ecx\n  int v34; // esi\n  __int64 v35; // rsi\n  int v36; // edi\n  int v37; // ecx\n  int v38; // edi\n  __int64 v39; // rsi\n  int v40; // ecx\n  int v41; // er11\n  signed __int64 v42; // rdx\n  __int64 v43; // rdi\n  __int64 v44; // rdi\n  int v45; // esi\n  int v46; // ebx\n  int v47; // ebx\n  int v48; // ecx\n  int v49; // esi\n  __int64 v50; // rcx\n  __int64 v51; // rdx\n  int v52; // esi\n  int v53; // edi\n  int v54; // [rsp+Ch] [rbp-9Ch]\n  signed __int64 v55; // [rsp+10h] [rbp-98h]\n  __int64 v56; // [rsp+18h] [rbp-90h]\n  __int64 v57; // [rsp+20h] [rbp-88h]\n  __int64 v58; // [rsp+28h] [rbp-80h]\n  __int64 v59; // [rsp+30h] [rbp-78h]\n  unsigned int v60; // [rsp+38h] [rbp-70h]\n  unsigned int v61; // [rsp+38h] [rbp-70h]\n  int v62; // [rsp+3Ch] [rbp-6Ch]\n  int v63; // [rsp+40h] [rbp-68h]\n  int v64; // [rsp+44h] [rbp-64h]\n  int v65; // [rsp+48h] [rbp-60h]\n  int v66; // [rsp+4Ch] [rbp-5Ch]\n  int v67; // [rsp+50h] [rbp-58h]\n  int v68; // [rsp+54h] [rbp-54h]\n  int v69; // [rsp+58h] [rbp-50h]\n  int v70; // [rsp+5Ch] [rbp-4Ch]\n  int v71; // [rsp+60h] [rbp-48h]\n  int v72; // [rsp+64h] [rbp-44h]\n  __int64 v73; // [rsp+68h] [rbp-40h]\n  int v74; // [rsp+70h] [rbp-38h]\n\n  v7 = a6;\n  v8 = a5;\n  v72 = a4;\n  v71 = a3;\n  if ( !byte_876EE0 )\n  {\n    memset(dword_8768A0, 0, 0x640uLL);\n    byte_876EE0 = 1;\n  }\n  dword_876260[0] = a1;\n  v70 = a1 - 20 * (((unsigned __int64)(1717986919LL * a1) >> 63) + (1717986919LL * a1 >> 35));\n  dword_8768A0[a1] = a2;\n  v74 = ((unsigned __int64)(-1717986919LL * a1) >> 63) + (-1717986919LL * a1 >> 35);\n  result = dword_5641B0[0];\n  v59 = dword_5641B4;\n  v58 = dword_5641B8;\n  v69 = dword_564170;\n  v68 = dword_564190[0];\n  v57 = dword_5641BC;\n  v67 = dword_564174;\n  v66 = dword_564194;\n  v65 = dword_564178;\n  v64 = dword_564198;\n  v63 = dword_56417C;\n  v10 = 1LL;\n  LODWORD(v11) = 0;\n  v62 = dword_56419C;\n  do\n  {\n    v14 = (signed int)v10;\n    v11 = (signed int)v11 + 1LL;\n    while ( 1 )\n    {\n      v15 = dword_87625C[v11];\n      v16 = *(_DWORD *)(v8 + 4 * v15);\n      if ( v16 )\n        break;\n      v18 = __OFSUB__(v11, (signed int)v10);\n      v17 = v11++ - (signed int)v10 < 0;\n      if ( !(v17 ^ v18) )\n        goto LABEL_67;\n    }\n    v55 = v10;\n    v73 = result;\n    v56 = v7;\n    v19 = ((unsigned __int64)(1717986919 * v15) >> 63) + (1717986919 * v15 >> 35);\n    v54 = v19 + v74;\n    v20 = v15 - 20 * v19 - v70;\n    v21 = 4096;\n    if ( (_DWORD)v11 != 1 )\n      v21 = 0x1000u / (v54 * v54 + v20 * v20);\n    v22 = v71 * dword_8768A0[v15] / 4096;\n    v23 = v16 * v22 / 4096;\n    v60 = v21;\n    v24 = v21 * v23;\n    if ( byte_98A1B0[v73 + v15] != 3 )\n    {\n      v25 = v73 + v15;\n      if ( !*(_BYTE *)(v56 + v73 + v15) )\n      {\n        v26 = v54 * v69 + v20 * v68;\n        if ( (_DWORD)v11 == 1 || v26 > 0 )\n        {\n          v27 = v16 * (v71 * dword_8768A0[v15] / 4096) / 4096;\n          if ( (_DWORD)v11 != 1 )\n            v27 = v26 * v26 * v24 / 4096;\n          if ( v27 >= 82 )\n          {\n            v28 = dword_8768A0[v25];\n            if ( !v28 )\n            {\n              dword_876260[v14] = v25;\n              v55 = (unsigned int)(v14 + 1);\n            }\n            dword_8768A0[v25] = v27 + v28;\n          }\n        }\n      }\n    }\n    v29 = v58;\n    v30 = v57;\n    if ( byte_98A1B0[v59 + v15] != 3 )\n    {\n      v31 = v59 + v15;\n      if ( !*(_BYTE *)(v56 + v59 + v15) )\n      {\n        v32 = v54 * v67 + v20 * v66;\n        if ( (_DWORD)v11 == 1 || v32 > 0 )\n        {\n          v33 = v16 * v22 / 4096;\n          if ( (_DWORD)v11 != 1 )\n          {\n            v30 = v57;\n            v29 = v58;\n            v33 = v32 * v32 * v24 / 4096;\n          }\n          if ( v33 >= 82 )\n          {\n            v34 = dword_8768A0[v31];\n            if ( !v34 )\n            {\n              dword_876260[(signed int)v55] = v31;\n              v55 = (unsigned int)(v55 + 1);\n            }\n            dword_8768A0[v31] = v33 + v34;\n          }\n        }\n      }\n    }\n    if ( byte_98A1B0[v29 + v15] != 3 )\n    {\n      v35 = v29 + v15;\n      if ( !*(_BYTE *)(v56 + v29 + v15) )\n      {\n        v36 = v54 * v65 + v20 * v64;\n        if ( (_DWORD)v11 == 1 || v36 > 0 )\n        {\n          v37 = v16 * v22 / 4096;\n          if ( (_DWORD)v11 != 1 )\n          {\n            v30 = v57;\n            v37 = v36 * v36 * v24 / 4096;\n          }\n          if ( v37 >= 82 )\n          {\n            v38 = dword_8768A0[v35];\n            if ( !v38 )\n            {\n              dword_876260[(signed int)v55] = v35;\n              v55 = (unsigned int)(v55 + 1);\n            }\n            dword_8768A0[v35] = v37 + v38;\n          }\n        }\n      }\n    }\n    if ( byte_98A1B0[v30 + v15] == 3 )\n      goto LABEL_76;\n    v39 = v15 + v30;\n    if ( *(_BYTE *)(v56 + v15 + v30) )\n      goto LABEL_76;\n    v40 = v54 * v63 + v20 * v62;\n    if ( (_DWORD)v11 != 1 && v40 <= 0 )\n      goto LABEL_76;\n    if ( (_DWORD)v11 != 1 )\n      v23 = v40 * v40 * v24 / 4096;\n    if ( v23 < 82 )\n    {\nLABEL_76:\n      v7 = v56;\n      v13 = v54;\n    }\n    else\n    {\n      v12 = dword_8768A0[v39];\n      v13 = v54;\n      if ( !v12 )\n      {\n        dword_876260[(signed int)v55] = v39;\n        v55 = (unsigned int)(v55 + 1);\n        v13 = v54;\n      }\n      dword_8768A0[v39] = v23 + v12;\n      v7 = v56;\n    }\n    v61 = v60 >> 1;\n    v41 = v72 * v22 / 4096;\n    v42 = 4611686018427387900LL;\n    do\n    {\n      v43 = dword_5641D0[v42];\n      if ( byte_98A1B0[v43 + v15] != 3 )\n      {\n        v44 = v15 + v43;\n        if ( !*(_BYTE *)(v7 + v44) )\n        {\n          v45 = v13 * dword_564190[v42] + v20 * dword_5641B0[v42];\n          if ( (_DWORD)v11 == 1 || v45 > 0 )\n          {\n            v46 = *(_DWORD *)(v8 + 4LL * ((signed int)v15 + 20 * dword_564190[v42]));\n            if ( v46 < *(_DWORD *)(v8 + 4LL * ((signed int)v15 + dword_5641B0[v42])) )\n              v46 = *(_DWORD *)(v8 + 4LL * ((signed int)v15 + dword_5641B0[v42]));\n            v47 = v16 * v46;\n            if ( (unsigned int)(v47 + 4095) >= 0x1FFF )\n            {\n              v48 = v41 * (v47 / 4096) / 4096;\n              if ( (_DWORD)v11 != 1 )\n                v48 = (signed int)(v48 * v45 * v61 * v45) / 4096;\n              if ( v48 >= 82 )\n              {\n                v49 = dword_8768A0[v44];\n                if ( !v49 )\n                {\n                  dword_876260[(signed int)v55] = v44;\n                  v55 = (unsigned int)(v55 + 1);\n                  v13 = v54;\n                }\n                dword_8768A0[v44] = v48 + v49;\n              }\n            }\n          }\n        }\n      }\n      ++v42;\n    }\n    while ( v42 * 4 );\n    v10 = v55;\n    result = v73;\n  }\n  while ( (signed int)v55 > (signed int)v11 );\nLABEL_67:\n  if ( (signed int)v10 > 0 )\n  {\n    result = (unsigned int)v10;\n    v50 = 0LL;\n    while ( 1 )\n    {\n      v51 = dword_876260[v50];\n      v52 = dword_8768A0[v51];\n      v53 = *(_DWORD *)(a7 + 4 * v51);\n      if ( v52 > 81 )\n        goto LABEL_72;\n      if ( !v53 )\n        break;\nLABEL_73:\n      dword_8768A0[v51] = 0;\n      if ( result == ++v50 )\n        return result;\n    }\n    v53 = 0;\nLABEL_72:\n    *(_DWORD *)(a7 + 4 * v51) = v52 + v53;\n    goto LABEL_73;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x41b6d0L", 
            "funcEndAddr": "0x41bcd7L", 
            "funcName": "sub_41B6D0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_41BCE0(__int64 a1)\n{\n  __int64 v1; // r13\n  unsigned int v2; // er14\n  signed int v3; // er15\n  signed int v4; // er12\n  __int64 v5; // rbp\n  unsigned int v6; // er8\n  unsigned int v7; // ecx\n  int v8; // er9\n  int v9; // ecx\n  float v10; // xmm4_4\n  float v11; // xmm1_4\n  float v12; // xmm2_4\n  float v13; // xmm0_4\n  signed int v14; // edi\n  int v15; // edx\n  int v16; // ebx\n  signed int v17; // eax\n  signed int v18; // ecx\n  float v19; // xmm2_4\n  float v20; // xmm0_4\n  float v21; // ST08_4\n  __m128i v22; // xmm1\n  __m128i v23; // xmm0\n  char v24; // al\n  int v25; // eax\n  signed __int64 v26; // rax\n  signed __int64 v27; // rcx\n  __int64 v28; // rdx\n  __int64 v29; // rdx\n  float v30; // xmm3_4\n  char v31; // bl\n  float v32; // xmm4_4\n  float v33; // xmm3_4\n  signed __int64 result; // rax\n  float v35; // xmm3_4\n  char v36; // cl\n  float v37; // xmm3_4\n  float v38; // [rsp+Ch] [rbp-67Ch]\n  int v39[21]; // [rsp+10h] [rbp-678h]\n  int v40[393]; // [rsp+64h] [rbp-624h]\n\n  v1 = a1;\n  v2 = 21;\n  v3 = -20;\n  v4 = -21;\n  v5 = 0LL;\n  do\n  {\n    if ( byte_98A1C5[v5] != 3 )\n    {\n      v40[v5] = 0;\n      v25 = 0;\n      if ( !*(_BYTE *)(v1 + v5 + 21) )\n      {\n        v6 = -20 * (v2 / 0x14);\n        v7 = 20 * (v2 / 0x14);\n        v8 = v3 + v7;\n        v9 = v4 + v7;\n        v10 = *(float *)(v1 + 4 * v5 + 484);\n        v11 = *(float *)(v1 + 4 * v5 + 2084);\n        v12 = *(float *)(v1 + 4 * v5 + 484) + v11;\n        v13 = 0.0;\n        if ( v12 > 0.0 )\n          v13 = (float)(v10 - v11) / v12;\n        v14 = ((signed int)v5 + 21) / 0x14u;\n        v15 = dword_565C68 - v14;\n        if ( v14 < dword_565C68 - (v14 - 1) )\n          v15 = v14 - 1;\n        v16 = v9 + dword_565C68;\n        if ( (signed int)(v6 + v5 + 21) < dword_565C68 + v8 )\n          v16 = v6 + v5 + 20;\n        v17 = 4;\n        if ( v15 < 5 )\n          v17 = v15;\n        v18 = 4;\n        if ( v16 < 5 )\n          v18 = v16;\n        if ( v15 > v16 )\n          v18 = v16;\n        if ( v15 <= v16 )\n          v17 = v15;\n        v19 = (float)v18;\n        if ( v17 <= v18 )\n          v18 = v17;\n        v38 = (float)(v13 * v13) * v13;\n        v20 = (float)((float)v17 + (float)((float)v18 + (float)v18)) + v19;\n        v21 = fmaxf(v10, v11);\n        sub_493C10(&unk_564314);\n        v22 = (__m128i)LODWORD(v21);\n        *(float *)v22.m128i_i32 = v21 / v20;\n        v23 = v22;\n        sub_493C10(&unk_564374);\n        *(float *)&v40[v5] = *(float *)v22.m128i_i32 * v38;\n        v24 = byte_98A1C5[v5];\n        if ( v24 == 1 )\n        {\n          v40[v5] = -1082130432;\n          v25 = -1082130432;\n        }\n        else if ( v24 == 2 )\n        {\n          v40[v5] = 1065353216;\n          v25 = 1065353216;\n        }\n        else\n        {\n          *(float *)v23.m128i_i32 = *(float *)v22.m128i_i32 * v38;\n          v25 = _mm_cvtsi128_si32(v23);\n        }\n      }\n      *(_DWORD *)(v1 + 4 * v5 + 31100) = v25;\n    }\n    ++v5;\n    ++v2;\n    --v3;\n    --v4;\n  }\n  while ( v5 != 379 );\n  v26 = 21LL;\n  do\n  {\n    if ( byte_98A1B0[v26] != 3 && !*(_BYTE *)(v1 + v26) )\n    {\n      v27 = 4611686018427387900LL;\n      while ( 1 )\n      {\n        v28 = dword_5641C0[v27];\n        if ( byte_98A1B0[v28 + (signed int)v26] == 3 )\n          goto LABEL_36;\n        v29 = (signed int)v26 + v28;\n        v30 = *(float *)(v1 + 4 * v26 + 31016);\n        v31 = *(_BYTE *)(v1 + v29);\n        if ( v30 <= 0.0 )\n        {\n          if ( !v31 )\n          {\n            v33 = fminf(\n                    0.0,\n                    fmaxf(\n                      (float)((float)(1.0 - *(float *)(v1 + 4 * v29 + 10000)) * *(float *)&v39[v26])\n                    + (float)(*(float *)(v1 + 4 * v29 + 10000) * *(float *)&v39[v29]),\n                      v30));\n            goto LABEL_39;\n          }\nLABEL_36:\n          ++v27;\n          if ( !(v27 * 4) )\n            break;\n        }\n        else\n        {\n          if ( v31 )\n            goto LABEL_36;\n          v32 = *(float *)&v39[v26] * (1.0 - *(float *)(v1 + 4 * v29 + 11600))\n              + (float)(*(float *)(v1 + 4 * v29 + 11600) * *(float *)&v39[v29]);\n          v33 = fmaxf(fminf(v30, v32), 0.0);\nLABEL_39:\n          *(float *)(v1 + 4 * v26 + 31016) = v33;\n          ++v27;\n          if ( !(v27 * 4) )\n            break;\n        }\n      }\n    }\n    ++v26;\n  }\n  while ( v26 != 400 );\n  result = -379LL;\n  while ( 2 )\n  {\n    if ( byte_98A340[result] != 3 && !*(_BYTE *)(v1 + result + 400) )\n    {\n      v35 = *(float *)(v1 + 4 * result + 32616);\n      if ( v35 > 0.0 && *(_BYTE *)(v1 + 4 * result + 34216) & 1 || v35 < 0.0 && *(_BYTE *)(v1 + 4 * result + 34216) & 2 )\n      {\n        *(_DWORD *)(v1 + 4 * result + 32616) = 0;\n        v35 = 0.0;\n      }\n      v36 = byte_98A340[result];\n      if ( v36 == 1 )\n      {\n        v37 = v35 + -1.0;\nLABEL_53:\n        *(float *)(v1 + 4 * result + 32616) = v37;\n      }\n      else if ( v36 == 2 )\n      {\n        v37 = v35 + 1.0;\n        goto LABEL_53;\n      }\n    }\n    if ( ++result )\n      continue;\n    return result;\n  }\n}\n", 
            "funcStartAddr": "0x41bce0L", 
            "funcEndAddr": "0x41c08cL", 
            "funcName": "sub_41BCE0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41C090(__int64 a1, __int64 a2)\n{\n  char v2; // al\n  __int64 result; // rax\n  const char *v4; // rdx\n  signed __int64 v5; // rcx\n  signed __int64 v6; // r9\n  __int64 v7; // r13\n  unsigned int v8; // er14\n  int v9; // eax\n  double v10; // xmm0_8\n  double v11; // xmm1_8\n  unsigned int v12; // er12\n  unsigned int v13; // ebp\n  signed int v14; // eax\n  double v15; // xmm0_8\n  double v16; // xmm1_8\n  char v17; // al\n  float v18; // xmm2_4\n  float v19; // xmm1_4\n  double v20; // xmm0_8\n  const char *v21; // rdx\n  signed __int64 v22; // rcx\n  signed __int64 v23; // r9\n  const char *v24; // rdx\n  signed __int64 v25; // rcx\n  signed __int64 v26; // r9\n  const char *v27; // rdx\n  signed __int64 v28; // rcx\n  signed __int64 v29; // r9\n  __int64 v30; // [rsp+0h] [rbp-48h]\n  signed int v31; // [rsp+8h] [rbp-40h]\n\n  v2 = dword_88C224;\n  if ( dword_88C224 & 0x100 )\n  {\n    fprintf(stderr, \"white attenuation (%s):\\n\", a2);\n    sub_41CEE0(a1, a1 + 6800, \"%3.2f\", 3LL, 0LL, 0LL);\n    fprintf(stderr, \"black attenuation (%s):\\n\", a2);\n    sub_41CEE0(a1, a1 + 8400, \"%3.2f\", 3LL, 0LL, 0LL);\n    v2 = dword_88C224;\n    if ( !(dword_88C224 & 0x40) )\n    {\nLABEL_3:\n      if ( v2 >= 0 )\n        goto LABEL_4;\nLABEL_10:\n      fwrite(\"white strength:\\n\", 0x10uLL, 1uLL, stderr);\n      if ( *(_DWORD *)(a1 + 31012) )\n      {\n        v4 = \"%5.1f\";\n        v5 = 5LL;\n        v6 = 0LL;\n      }\n      else\n      {\n        v4 = \"%3.0f\";\n        v5 = 3LL;\n        v6 = 1LL;\n      }\n      sub_41CEE0(a1, a1 + 3600, v4, v5, 0LL, v6);\n      fwrite(\"black strength:\\n\", 0x10uLL, 1uLL, stderr);\n      if ( *(_DWORD *)(a1 + 31012) )\n      {\n        v21 = \"%5.1f\";\n        v22 = 5LL;\n        v23 = 0LL;\n      }\n      else\n      {\n        v21 = \"%3.0f\";\n        v22 = 3LL;\n        v23 = 1LL;\n      }\n      sub_41CEE0(a1, a1 + 5200, v21, v22, 0LL, v23);\n      if ( !(dword_88C224 & 0x20) )\n        goto LABEL_5;\n      goto LABEL_48;\n    }\n  }\n  else if ( !(dword_88C224 & 0x40) )\n  {\n    goto LABEL_3;\n  }\n  fwrite(\"white permeability:\\n\", 0x14uLL, 1uLL, stderr);\n  sub_41CEE0(a1, a1 + 10000, \"%3.1f\", 3LL, 0LL, 0LL);\n  fwrite(\"black permeability:\\n\", 0x14uLL, 1uLL, stderr);\n  sub_41CEE0(a1, a1 + 11600, \"%3.1f\", 3LL, 0LL, 0LL);\n  if ( (dword_88C224 & 0x80u) != 0 )\n    goto LABEL_10;\nLABEL_4:\n  if ( dword_88C224 & 0x20 )\n  {\nLABEL_48:\n    fprintf(stderr, \"white influence (%s):\\n\", a2);\n    if ( *(_DWORD *)(a1 + 31012) )\n    {\n      v24 = \"%5.1f\";\n      v25 = 5LL;\n      v26 = 0LL;\n    }\n    else\n    {\n      v24 = \"%3.0f\";\n      v25 = 3LL;\n      v26 = 1LL;\n    }\n    sub_41CEE0(a1, a1 + 400, v24, v25, 1LL, v26);\n    fprintf(stderr, \"black influence (%s):\\n\", a2);\n    if ( *(_DWORD *)(a1 + 31012) )\n    {\n      v27 = \"%5.1f\";\n      v28 = 5LL;\n      v29 = 0LL;\n    }\n    else\n    {\n      v27 = \"%3.0f\";\n      v28 = 3LL;\n      v29 = 1LL;\n    }\n    sub_41CEE0(a1, a1 + 2000, v27, v28, 1LL, v29);\n  }\nLABEL_5:\n  result = (unsigned int)dword_88C224;\n  if ( !(dword_88C224 & 0x10) )\n  {\n    if ( result & 0x200 )\n      goto LABEL_42;\n    return result;\n  }\n  v7 = 0LL;\n  fprintf(stderr, \"influence regions (%s):\\n\", a2);\n  sub_44A2C0();\n  v8 = 21;\n  do\n  {\n    v17 = byte_98A1C5[v7];\n    if ( v17 == 3 )\n      goto LABEL_40;\n    if ( *(_BYTE *)(a1 + v7 + 21) )\n    {\n      v13 = 9 * (v17 != 1) + 79;\n      v12 = 0;\n    }\n    else\n    {\n      v18 = *(float *)(a1 + 4 * v7 + 2084);\n      v19 = *(float *)(a1 + 4 * v7 + 484);\n      v20 = *(float *)(a1 + 4 * v7 + 31100);\n      v12 = 6;\n      v13 = 120;\n      if ( v18 <= 0.0 || v19 != 0.0 || v20 >= -0.95 )\n      {\n        if ( (v18 != 0.0 || v19 <= 0.0 || v20 <= 0.95)\n          && (v31 = v7 + 21, v12 = 3, (unsigned int)sub_41A430(a1, (signed int)v7 + 21) != 1) )\n        {\n          if ( (unsigned int)sub_41A430(a1, v31) != 2 )\n          {\n            HIDWORD(v30) = *(_DWORD *)(a1 + 4 * v7 + 2084);\n            LODWORD(v30) = *(_DWORD *)(a1 + 4 * v7 + 484);\n            v9 = sub_41A430(a1, v31);\n            if ( !v9 )\n            {\n              v10 = *((float *)&v30 + 1);\n              v11 = *(float *)&v30;\n              if ( *(float *)&v30 < 40.0 && *((float *)&v30 + 1) > 1.0 && v10 > v11 * 3.0 )\n              {\nLABEL_20:\n                HIDWORD(v30) = *(_DWORD *)(a1 + 4 * v7 + 2084);\n                LODWORD(v30) = *(_DWORD *)(a1 + 4 * v7 + 484);\n                v14 = sub_41A430(a1, v31);\n                if ( !v14 )\n                {\n                  v15 = *((float *)&v30 + 1);\n                  v16 = *(float *)&v30;\n                  if ( *(float *)&v30 >= 40.0 || *((float *)&v30 + 1) <= 1.0 || (v14 = 2, v15 <= v16 * 3.0) )\n                    v14 = v16 > v15 * 3.0 && *(float *)&v30 > 1.0 && *((float *)&v30 + 1) < 40.0;\n                }\n                v12 = v14 == 2;\n                v13 = 0;\n                if ( v14 == 2 )\n                  v13 = 120;\n                goto LABEL_39;\n              }\n              v9 = v11 > v10 * 3.0 && *(float *)&v30 > 1.0 && *((float *)&v30 + 1) < 40.0;\n            }\n            v12 = 1;\n            v13 = 111;\n            if ( v9 != 1 )\n              goto LABEL_20;\n          }\n        }\n        else\n        {\n          v13 = 111;\n        }\n      }\n    }\nLABEL_39:\n    sub_44A340(((signed int)v7 + 21) / 0x14u - 1, (unsigned int)v7 + 20 - 20 * (v8 / 0x14), v13, v12);\nLABEL_40:\n    ++v7;\n    ++v8;\n  }\n  while ( v7 != 379 );\n  sub_44A570();\n  result = (unsigned int)dword_88C224;\n  if ( result & 0x200 )\n  {\nLABEL_42:\n    fprintf(stderr, \"territory (%s)\", a2, v30);\n    result = sub_41CEE0(a1, a1 + 31016, \"%5.2f\", 5LL, 1LL, 0LL);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x41c090L", 
            "funcEndAddr": "0x41c69eL", 
            "funcName": "sub_41C090"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_41C6A0(int a1, const void *a2, __int64 a3, __int64 a4)\n{\n  __int64 v4; // r15\n  int v5; // er14\n  signed int v6; // ecx\n  signed __int64 i; // rax\n  int v8; // edi\n  int v9; // edi\n  _BOOL8 v10; // r12\n  signed __int64 result; // rax\n  __int64 v12; // rbx\n  signed __int64 v13; // r13\n  _BYTE *v14; // rax\n  signed int v15; // ebp\n  signed int v16; // eax\n  double v17; // xmm0_8\n  double v18; // xmm1_8\n  double v19; // xmm0_8\n  double v20; // xmm1_8\n  float v21; // [rsp+8h] [rbp-40h]\n  float v22; // [rsp+8h] [rbp-40h]\n  float v23; // [rsp+Ch] [rbp-3Ch]\n  float v24; // [rsp+Ch] [rbp-3Ch]\n  signed __int64 v25; // [rsp+10h] [rbp-38h]\n\n  v4 = a4;\n  v5 = a1;\n  v6 = 1;\n  for ( i = -378LL; ; i += 2LL )\n  {\n    v8 = (unsigned __int8)byte_98A33F[i];\n    if ( dword_8698AC[i] != v8 )\n    {\n      dword_8698AC[i] = v8;\n      v6 = 0;\n    }\n    if ( !i )\n      break;\n    v9 = (unsigned __int8)byte_98A340[i];\n    if ( dword_8698B0[i] != v9 )\n    {\n      dword_8698B0[i] = v9;\n      v6 = 0;\n    }\n  }\n  if ( !v6 )\n    qword_869BD0 = 0LL;\n  v10 = v5 == 1;\n  if ( *((_DWORD *)&qword_869BD0 + v10) )\n  {\n    result = -378LL;\n    if ( byte_98A33F[-378] == 3 )\n      goto LABEL_15;\nLABEL_14:\n    *(_BYTE *)(v4 + result + 399) = byte_869BCE[2 * result + v10];\nLABEL_15:\n    while ( result )\n    {\n      if ( byte_98A340[result] != 3 )\n        *(_BYTE *)(v4 + result + 400) = *((_BYTE *)&qword_869BD0 + 2 * result + v10);\n      result += 2LL;\n      if ( byte_98A33F[result] != 3 )\n        goto LABEL_14;\n    }\n    return result;\n  }\n  dword_8714FC = 0;\n  dword_872184 = 0;\n  v12 = 0LL;\n  sub_419D70(3 - v5, a2, a3, (__int64)&unk_869BD8, -1, 0LL);\n  v25 = v4 + 21;\n  v13 = 21LL;\n  do\n  {\n    if ( byte_98A1C5[v12] == 3 )\n      goto LABEL_39;\n    v15 = v12 + 21;\n    if ( (unsigned int)sub_41A430((__int64)&unk_869BD8, (signed int)v12 + 21) == v5 )\n    {\n      *(_BYTE *)(v25 + v12) = 4;\n      goto LABEL_39;\n    }\n    v23 = dword_86A3FC[v12];\n    v21 = dword_869DBC[v12];\n    v16 = sub_41A430((__int64)&unk_869BD8, v15);\n    if ( v16 || (v17 = v23, v18 = v21, v21 < 40.0) && v23 > 1.0 && (v16 = 2, v17 > v18 * 3.0) )\n    {\n      if ( v16 == v5 )\n        goto LABEL_31;\n    }\n    else if ( (v18 > v17 * 3.0 && v21 > 1.0 && v23 < 40.0) == v5 )\n    {\nLABEL_31:\n      *(_BYTE *)(v25 + v12) = 2;\n      goto LABEL_39;\n    }\n    v24 = dword_86A3FC[v12];\n    v22 = dword_869DBC[v12];\n    if ( (unsigned int)sub_41A430((__int64)&unk_869BD8, v15)\n      || (v19 = v24, v20 = v22, v22 < 40.0) && v24 > 1.0 && v19 > v20 * 3.0 )\n    {\n      v14 = (_BYTE *)(v4 + v13);\n    }\n    else\n    {\n      v14 = (_BYTE *)(v25 + v12);\n      if ( v24 >= 40.0 || v22 <= 1.0 || v20 <= v19 * 3.0 )\n      {\n        *v14 = 1;\n        goto LABEL_39;\n      }\n    }\n    *v14 = 0;\nLABEL_39:\n    ++v13;\n    ++v12;\n  }\n  while ( v12 != 379 );\n  result = -378LL;\n  if ( byte_98A33F[-378] == 3 )\n    goto LABEL_44;\nLABEL_43:\n  byte_869BCE[2 * result + v10] = *(_BYTE *)(v4 + result + 399);\nLABEL_44:\n  while ( result )\n  {\n    if ( byte_98A340[result] != 3 )\n      *((_BYTE *)&qword_869BD0 + 2 * result + v10) = *(_BYTE *)(v4 + result + 400);\n    result += 2LL;\n    if ( byte_98A33F[result] != 3 )\n      goto LABEL_43;\n  }\n  *((_DWORD *)&qword_869BD0 + v10) = 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x41c6a0L", 
            "funcEndAddr": "0x41ca29L", 
            "funcName": "sub_41C6A0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_41CA30(signed int a1, int a2, float *a3, _DWORD *a4)\n{\n  int v4; // edx\n  int v5; // edx\n  signed __int64 result; // rax\n  float v7; // xmm0_4\n\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v4 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/influence.c\", 1618LL, \"ON_BOARD1(pos)\", (unsigned int)(v4 - 1), (unsigned int)(a1 - 20 * v4 - 1));\n  }\n  if ( (unsigned int)(a2 - 1) >= 2 )\n  {\n    v5 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/influence.c\",\n      1619LL,\n      \"IS_STONE(color)\",\n      (unsigned int)(v5 - 1),\n      (unsigned int)(a1 - 20 * v5 - 1));\n  }\n  result = 0LL;\n  if ( dword_56430C == dword_98A7F0 && dword_564310 == a2 )\n  {\n    v7 = dword_875450[a1];\n    if ( v7 != -722.0 )\n    {\n      *a3 = v7;\n      *a4 = *((_DWORD *)&xmmword_875A84 + a1 + 3);\n      result = 1LL;\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x41ca30L", 
            "funcEndAddr": "0x41cb35L", 
            "funcName": "sub_41CA30"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41CB40(signed int a1, int a2, float a3, float a4)\n{\n  int v4; // edx\n  int v5; // edx\n  int v6; // eax\n  signed __int64 i; // rcx\n  __int64 result; // rax\n\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v4 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/influence.c\", 1638LL, \"ON_BOARD1(pos)\", (unsigned int)(v4 - 1), (unsigned int)(a1 - 20 * v4 - 1));\n  }\n  if ( (unsigned int)(a2 - 1) >= 2 )\n  {\n    v5 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/influence.c\",\n      1639LL,\n      \"IS_STONE(color)\",\n      (unsigned int)(v5 - 1),\n      (unsigned int)(a1 - 20 * v5 - 1));\n  }\n  v6 = dword_98A7F0;\n  if ( dword_56430C != dword_98A7F0 || dword_564310 != a2 )\n  {\n    for ( i = 1152921504606846888LL; ; i += 8LL )\n    {\n      xmmword_875A24[i] = xmmword_4AE100;\n      xmmword_875A34[i] = xmmword_4AE100;\n      xmmword_875A44[i] = xmmword_4AE100;\n      xmmword_875A54[i] = xmmword_4AE100;\n      xmmword_875A64[i] = xmmword_4AE100;\n      xmmword_875A74[i] = xmmword_4AE100;\n      if ( !(i * 16) )\n        break;\n      xmmword_875A84[i] = xmmword_4AE100;\n      xmmword_875A94[i] = xmmword_4AE100;\n    }\n    *(_QWORD *)&xmmword_875A84[0] = -4308678202706591744LL;\n    DWORD2(xmmword_875A84[0]) = -1003192320;\n    dword_56430C = v6;\n    dword_564310 = a2;\n  }\n  result = a1;\n  dword_875450[result] = a3;\n  *((float *)xmmword_875A84 + result + 3) = a4;\n  return result;\n}\n", 
            "funcStartAddr": "0x41cb40L", 
            "funcEndAddr": "0x41ccb1L", 
            "funcName": "sub_41CB40"
        }, 
        {
            "decompiledFuncCode": "__int128 __usercall sub_41CCC0@<xmm0>(__int64 a1@<rdi>, __int64 a2@<rsi>, int a3@<edx>, signed int a4@<ecx>)\n{\n  signed int v4; // er13\n  int v5; // er14\n  int v6; // edx\n  int v7; // edx\n  __int128 v8; // xmm4\n  signed __int64 v9; // rbx\n  int v10; // xmm5_4\n  float v11; // xmm7_4\n  unsigned int v12; // ST0C_4\n  float v13; // xmm1_4\n  unsigned int v14; // ST0C_4\n\n  v4 = a4;\n  v5 = a3;\n  if ( (unsigned int)a4 > 0x1A4 || byte_98A1B0[a4] == 3 )\n  {\n    v6 = (1717986919LL * a4 >> 35) + ((unsigned __int64)(1717986919LL * a4) >> 63);\n    sub_4340E0(\n      \"engine/influence.c\",\n      1669LL,\n      \"ON_BOARD1(move)\",\n      (unsigned int)(v6 - 1),\n      (unsigned int)(-20 * v6 + a4 - 1));\n  }\n  if ( (unsigned int)(a3 - 1) >= 2 )\n  {\n    v7 = (1717986919LL * a4 >> 35) + ((unsigned __int64)(1717986919LL * a4) >> 63);\n    sub_4340E0(\n      \"engine/influence.c\",\n      1670LL,\n      \"IS_STONE(color)\",\n      (unsigned int)(v7 - 1),\n      (unsigned int)(-20 * v7 + a4 - 1));\n  }\n  v8 = 0LL;\n  v9 = -379LL;\n  v10 = xmmword_4AE070;\n  do\n  {\n    if ( byte_98A340[v9] != 3 )\n    {\n      v11 = *(float *)(a2 + 4 * v9 + 32616) - *(float *)(a1 + 4 * v9 + 32616);\n      if ( v5 == 2 )\n        LODWORD(v11) ^= v10;\n      if ( v4 != -1 && (v11 > 0.02 || COERCE_FLOAT(LODWORD(v11) ^ v10) > 0.02) && dword_88C264 & 0x100000 )\n      {\n        v12 = v8;\n        sub_433F90((unsigned __int64)\"  %1m:   - %1m territory change %f (%f -> %f)\\n\");\n        v10 = xmmword_4AE070;\n        v8 = v12;\n      }\n      *(float *)&v8 = *(float *)&v8 + v11;\n    }\n    ++v9;\n  }\n  while ( v9 );\n  v13 = (float)(*(_DWORD *)(a2 + 34216) - *(_DWORD *)(a1 + 34216));\n  if ( v5 == 2 )\n    LODWORD(v13) ^= xmmword_4AE070;\n  if ( v4 != -1 && v13 != 0.0 && dword_88C264 & 0x100000 )\n  {\n    v14 = v8;\n    sub_433F90((unsigned __int64)\"  %1m:   - captured stones %f\\n\");\n    v8 = v14;\n  }\n  *(float *)&v8 = *(float *)&v8 + v13;\n  return v8;\n}\n", 
            "funcStartAddr": "0x41ccc0L", 
            "funcEndAddr": "0x41ced0L", 
            "funcName": "sub_41CCC0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41CED0(int a1, int a2)\n{\n  __int64 result; // rax\n\n  result = (unsigned int)(a2 + 20 * a1 + 21);\n  dword_869268 = a2 + 20 * a1 + 21;\n  return result;\n}\n", 
            "funcStartAddr": "0x41ced0L", 
            "funcEndAddr": "0x41cee0L", 
            "funcName": "sub_41CED0"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_41CEE0(__int64 a1, __int64 a2, char *a3, int a4, int a5, int a6)\n{\n  char v6; // bl\n  int v7; // ebp\n  unsigned int v8; // ebx\n  int v9; // ebx\n  __int64 v10; // r12\n  int v11; // er15\n  unsigned int v12; // ebx\n  __int64 v13; // r14\n  __int64 v14; // r13\n  signed __int64 v15; // rbp\n  float v16; // xmm0_4\n  signed __int64 v17; // rdx\n  char v19; // bl\n  int v20; // ebp\n  unsigned int v21; // ebx\n  int v22; // [rsp+8h] [rbp-70h]\n  int v23; // [rsp+Ch] [rbp-6Ch]\n  char format[16]; // [rsp+10h] [rbp-68h]\n  int v25; // [rsp+20h] [rbp-58h]\n  __int64 v26; // [rsp+30h] [rbp-48h]\n  __int64 v27; // [rsp+38h] [rbp-40h]\n  char *v28; // [rsp+40h] [rbp-38h]\n\n  v22 = a6;\n  v23 = a5;\n  v28 = a3;\n  v27 = a2;\n  v26 = a1;\n  *(_OWORD *)format = xmmword_4AE110;\n  v25 = 538976288;\n  format[(signed int)(a4 + ((unsigned int)(a4 + 1) >> 31) + 1) >> 1] = 37;\n  format[(signed int)(a4 + ((unsigned int)(a4 + 3) >> 31) + 3) >> 1] = 99;\n  format[a4 + 2] = 0;\n  fwrite(\"   \", 3uLL, 1uLL, stderr);\n  if ( dword_565C68 > 0 )\n  {\n    v6 = 65;\n    v7 = 0;\n    do\n    {\n      v8 = (char)(v6 + (v6 == 73));\n      fprintf(stderr, format, v8);\n      ++v7;\n      v6 = v8 + 1;\n    }\n    while ( v7 < dword_565C68 );\n  }\n  fputc(10, stderr);\n  v9 = dword_565C68;\n  if ( dword_565C68 > 0 )\n  {\n    LODWORD(v10) = 21;\n    v11 = 0;\n    do\n    {\n      v10 = (unsigned int)v10;\n      v12 = v9 - v11;\n      fprintf(stderr, \"%2d \", v12);\n      if ( dword_565C68 > 0 )\n      {\n        v13 = v27 + 4 * v10;\n        v14 = v26 + v10;\n        v15 = 0LL;\n        do\n        {\n          if ( v23 && *(_BYTE *)(v14 + v15) )\n          {\n            if ( byte_98A1B0[v10 + v15] == 1 )\n              v17 = 79LL;\n            else\n              v17 = 88LL;\n            fprintf(stderr, format, v17);\n          }\n          else\n          {\n            v16 = *(float *)(v13 + 4 * v15);\n            if ( v22 && v16 > 0.0 && v16 < 1.0 )\n              fwrite(&off_496AE8, 3uLL, 1uLL, stderr);\n            else\n              fprintf(stderr, v28, v16);\n            fputc(32, stderr);\n          }\n          ++v15;\n        }\n        while ( v15 < dword_565C68 );\n      }\n      fprintf(stderr, (const char *)&off_496AE8 + 4, v12);\n      ++v11;\n      v9 = dword_565C68;\n      LODWORD(v10) = v10 + 20;\n    }\n    while ( dword_565C68 > v11 );\n  }\n  fwrite(\"   \", 3uLL, 1uLL, stderr);\n  if ( dword_565C68 > 0 )\n  {\n    v19 = 65;\n    v20 = 0;\n    do\n    {\n      v21 = (char)(v19 + (v19 == 73));\n      fprintf(stderr, format, v21);\n      ++v20;\n      v19 = v21 + 1;\n    }\n    while ( v20 < dword_565C68 );\n  }\n  return fputc(10, stderr);\n}\n", 
            "funcStartAddr": "0x41cee0L", 
            "funcEndAddr": "0x41d175L", 
            "funcName": "sub_41CEE0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41D180(__int64 a1, unsigned int a2)\n{\n  __int64 result; // rax\n  unsigned __int64 v3; // rcx\n  __int64 v4; // rdx\n  __int64 v5; // rdx\n  float v6; // xmm0_4\n  signed __int64 v7; // rbp\n  bool v8; // zf\n\n  qword_869260[0] = a1;\n  sub_41EFF0(sub_41D380, 6LL, &unk_5F6548, a1, 0LL);\n  if ( a2 )\n    sub_41EFF0(sub_41D380, a2, &unk_6025F8, a1, 0LL);\n  if ( *(_DWORD *)(a1 + 31012) )\n    sub_41B3C0(a1, a2);\n  result = 21LL;\n  do\n  {\n    if ( byte_98A1B0[result] != 3 && *(_BYTE *)(a1 + result) )\n    {\n      v3 = 0LL;\n      do\n      {\n        v4 = dword_5641B0[v3];\n        if ( byte_98A1B0[v4 + (signed int)result] != 3 )\n        {\n          v5 = (signed int)result + v4;\n          if ( !*(_BYTE *)(a1 + v5) )\n          {\n            v6 = dword_4AE2D0[v3 < 4];\n            if ( byte_98A1B0[result] == 2 )\n              *(float *)(a1 + 4 * v5 + 10000) = v6 * *(float *)(a1 + 4 * v5 + 10000);\n            else\n              *(float *)(a1 + 4 * v5 + 11600) = v6 * *(float *)(a1 + 4 * v5 + 11600);\n          }\n        }\n        ++v3;\n      }\n      while ( v3 != 8 );\n    }\n    ++result;\n  }\n  while ( result != 400 );\n  v7 = -379LL;\n  do\n  {\n    if ( byte_98A340[v7] != 3 && !*(_BYTE *)(a1 + v7 + 400) )\n    {\n      if ( *(float *)(a1 + 4 * v7 + 5200) > 0.0 && *(float *)(a1 + 4 * v7 + 11600) != 1.0 )\n      {\n        if ( dword_88C264 & 1 )\n        {\n          result = sub_433F90((unsigned __int64)\"  black block removed from %1m\\n\");\n          v8 = *(_BYTE *)(a1 + v7 + 400) == 0;\n          *(_DWORD *)(a1 + 4 * v7 + 11600) = 1065353216;\n          if ( !v8 )\n            goto LABEL_29;\n        }\n        else\n        {\n          *(_DWORD *)(a1 + 4 * v7 + 11600) = 1065353216;\n        }\n      }\n      if ( *(float *)(a1 + 4 * v7 + 6800) > 0.0 && *(float *)(a1 + 4 * v7 + 13200) != 1.0 )\n      {\n        if ( dword_88C264 & 1 )\n          result = sub_433F90((unsigned __int64)\"  white block removed from %1m\\n\");\n        *(_DWORD *)(a1 + 4 * v7 + 13200) = 1065353216;\n      }\n    }\nLABEL_29:\n    ++v7;\n  }\n  while ( v7 );\n  return result;\n}\n", 
            "funcStartAddr": "0x41d180L", 
            "funcEndAddr": "0x41d371L", 
            "funcName": "sub_41D180"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_41D380(unsigned int a1, unsigned int a2, __int64 *a3, unsigned int a4, __int64 a5)\n{\n  __int64 v5; // r14\n  unsigned int v6; // er11\n  __int64 *v7; // rbx\n  __int64 v8; // r8\n  __int64 v9; // r9\n  __int64 v10; // r12\n  __int64 v11; // r10\n  signed __int64 result; // rax\n  __int64 v13; // r13\n  __int64 v14; // rcx\n  __int64 v15; // rdx\n  int v16; // esi\n  __int64 v17; // rdi\n  int v18; // ebp\n  signed __int64 v19; // rbp\n  float v20; // xmm1_4\n  signed __int64 v21; // rbp\n  int v22; // eax\n  __int64 v23; // r15\n  float v24; // xmm0_4\n  float v25; // xmm0_4\n  float v26; // xmm0_4\n  float v27; // xmm0_4\n  __int64 v28; // r10\n  __int64 v29; // rbp\n  __int64 (__fastcall *v30)(__int64 *, _QWORD, _QWORD, _QWORD, __int64, __int64); // rax\n  __int64 v31; // rbp\n  __int64 v32; // rsi\n  __int64 v33; // rbp\n  __int64 v34; // rbp\n  signed __int64 v35; // rbp\n  __int64 v36; // rcx\n  int v37; // edx\n  int v38; // er13\n  int v39; // er15\n  float v40; // xmm0_4\n  float v41; // xmm0_4\n  float v42; // xmm0_4\n  signed __int64 v43; // rax\n  signed __int64 v44; // rcx\n  int v45; // ecx\n  char v46; // dl\n  float v47; // xmm0_4\n  __int64 v48; // rsi\n  float v49; // xmm0_4\n  double v50; // xmm0_8\n  double v51; // xmm0_8\n  unsigned int v52; // [rsp+4h] [rbp-44h]\n  unsigned int v53; // [rsp+8h] [rbp-40h]\n  unsigned int v54; // [rsp+Ch] [rbp-3Ch]\n  int v55; // [rsp+Ch] [rbp-3Ch]\n  __int64 v56; // [rsp+10h] [rbp-38h]\n\n  v5 = a5;\n  v6 = a4;\n  v7 = a3;\n  v8 = a2;\n  v9 = a1;\n  v10 = (signed int)a4;\n  v11 = dword_94A490[8 * *((signed int *)a3 + 13) + a4];\n  result = *((unsigned int *)a3 + 30);\n  if ( result & 0x200000 && !*(_DWORD *)(v5 + 31012)\n    || result & 0x400000 && *(_DWORD *)(v5 + 31012)\n    || result & 0x2000 && *(_DWORD *)(v5 + 31012)\n    || result & 0x10000 && dword_88C2FC )\n  {\n    return result;\n  }\n  v13 = (signed int)a1;\n  if ( result & 0x440 )\n  {\n    v14 = *((signed int *)a3 + 2);\n    if ( v14 <= 0 )\n      return result;\n    v15 = *a3;\n    v16 = 3 - a2;\n    if ( result & 0x40 )\n      v16 = v8;\n    v17 = 0LL;\n    while ( 1 )\n    {\n      v18 = *(_DWORD *)(v15 + 8 * v17 + 4);\n      if ( v18 != 5 && (v18 != 7 || !*(_DWORD *)(v5 + 31012)) )\n        return result;\n      v19 = (signed int)v9 + (signed __int64)dword_94A490[8 * *(signed int *)(v15 + 8 * v17) + v10];\n      if ( v16 == 2 )\n        break;\n      if ( v16 == 1 )\n      {\n        v20 = *(float *)(v5 + 4 * v19 + 11600);\n        goto LABEL_22;\n      }\nLABEL_23:\n      if ( ++v17 >= v14 )\n        return result;\n    }\n    v20 = *(float *)(v5 + 4LL * (signed int)v19 + 10000);\nLABEL_22:\n    if ( v20 != 0.0 )\n      goto LABEL_25;\n    goto LABEL_23;\n  }\nLABEL_25:\n  v53 = v8;\n  v52 = v9;\n  v54 = v6;\n  if ( result & 0x82640 && !(result & 0x10) && *((_DWORD *)v7 + 2) > 0 )\n  {\n    v21 = 0LL;\n    v56 = v11;\n    do\n    {\n      v22 = *(_DWORD *)(*v7 + 8 * v21 + 4);\n      if ( v22 == 1 )\n      {\n        result = *((unsigned int *)v7 + 30);\n        if ( !(result & 0x80600) )\n          goto LABEL_68;\n      }\n      else\n      {\n        if ( v22 != 2 )\n          goto LABEL_68;\n        result = *((unsigned int *)v7 + 30);\n        if ( !(result & 0x82240) )\n          goto LABEL_68;\n      }\n      v23 = v13 + dword_94A490[8 * *(signed int *)(*v7 + 8 * v21) + v10];\n      if ( result & 0x2000 )\n      {\n        if ( (_DWORD)v8 == 2 )\n        {\n          v24 = *(float *)(v5 + 4LL * (signed int)v23 + 5200);\n        }\n        else\n        {\n          if ( (_DWORD)v8 != 1 )\n            goto LABEL_46;\n          v24 = *(float *)(v5 + 4 * v23 + 3600);\n        }\n        if ( v24 == 0.0 )\n          return result;\n      }\n      else if ( !(result & 0x80240) )\n      {\n        if ( !dword_98A7F4 )\n        {\n          result = 380LL * (signed int)v23;\n          if ( *(int *)((char *)dword_8E94D4 + result) )\n            return result;\n        }\n        result = sub_43B050((unsigned int)v23, 0LL);\n        v6 = v54;\n        v11 = v56;\n        v9 = v52;\n        v8 = v53;\n        if ( (_DWORD)result )\n          return result;\n        result = *((unsigned int *)v7 + 30);\n        if ( !(result & 0x80200) )\n          goto LABEL_53;\n        goto LABEL_47;\n      }\nLABEL_46:\n      if ( !(result & 0x80200) )\n        goto LABEL_53;\nLABEL_47:\n      if ( *(_DWORD *)(*v7 + 8 * v21 + 4) == 2 )\n      {\n        if ( (_DWORD)v8 == 2 )\n        {\n          v25 = *(float *)(v5 + 4LL * (signed int)v23 + 5200);\n        }\n        else\n        {\n          if ( (_DWORD)v8 != 1 )\n            goto LABEL_53;\n          v25 = *(float *)(v5 + 4LL * (signed int)v23 + 3600);\n        }\n        if ( v25 == 0.0 )\n          return result;\n      }\nLABEL_53:\n      if ( result & 0x80400 && *(_DWORD *)(*v7 + 8 * v21 + 4) == 1 )\n      {\n        if ( (_DWORD)v8 == 1 )\n        {\n          v26 = *(float *)(v5 + 4LL * (signed int)v23 + 5200);\n        }\n        else\n        {\n          if ( (_DWORD)v8 != 2 )\n            goto LABEL_60;\n          v26 = *(float *)(v5 + 4LL * (signed int)v23 + 3600);\n        }\n        if ( v26 == 0.0 )\n          return result;\n      }\nLABEL_60:\n      if ( result & 0x40 )\n      {\n        if ( *(_DWORD *)(*v7 + 8 * v21 + 4) != 2 )\n          sub_4340E0(\"engine/influence.c\", 661LL, \"pattern->patn[k].att == 2\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n        if ( (_DWORD)v8 == 2 )\n        {\n          result = (signed int)v23;\n          v27 = *(float *)(v5 + 4LL * (signed int)v23 + 5200);\nLABEL_67:\n          if ( v27 == 0.0 )\n            return result;\n          goto LABEL_68;\n        }\n        if ( (_DWORD)v8 == 1 )\n        {\n          result = (signed int)v23;\n          v27 = *(float *)(v5 + 4LL * (signed int)v23 + 3600);\n          goto LABEL_67;\n        }\n      }\nLABEL_68:\n      ++v21;\n    }\n    while ( v21 < *((signed int *)v7 + 2) );\n  }\n  v28 = v13 + v11;\n  if ( v7[19] & 1 )\n  {\n    v29 = v28;\n    result = ((__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD, _QWORD))v7[21])(\n               v6,\n               (unsigned int)v28,\n               (unsigned int)v8,\n               0LL);\n    v6 = v54;\n    v28 = v29;\n    v9 = v52;\n    v8 = v53;\n    if ( !(_DWORD)result )\n      return result;\n  }\n  v30 = (__int64 (__fastcall *)(__int64 *, _QWORD, _QWORD, _QWORD, __int64, __int64))v7[20];\n  if ( v30 )\n  {\n    v31 = v28;\n    result = v30(v7, v6, (unsigned int)v28, (unsigned int)v8, v8, v9);\n    v6 = v54;\n    v28 = v31;\n    v9 = v52;\n    v8 = v53;\n    if ( !(_DWORD)result )\n    {\n      if ( dword_88C264 & 1 )\n      {\n        v48 = v7[2];\n        result = sub_433F90((unsigned __int64)\"Influence pattern %s+%d rejected by helper at %1m\\n\");\n      }\n      return result;\n    }\n  }\n  if ( dword_88C264 & 1 )\n  {\n    v32 = v7[2];\n    v33 = v28;\n    sub_433F90((unsigned __int64)\"influence pattern '%s'+%d matched at %1m\\n\");\n    v6 = v54;\n    v28 = v33;\n    v9 = v52;\n    v8 = v53;\n  }\n  result = *((unsigned int *)v7 + 30);\n  if ( result & 0x80000 && v7[19] & 2 )\n  {\n    v34 = v28;\n    ((void (__fastcall *)(_QWORD, _QWORD, _QWORD, signed __int64, __int64, __int64))v7[21])(\n      v6,\n      (unsigned int)v28,\n      (unsigned int)v8,\n      1LL,\n      v8,\n      v9);\n    v28 = v34;\n    LODWORD(v9) = v52;\n    LODWORD(v8) = v53;\n    result = *((unsigned int *)v7 + 30);\n  }\n  if ( result & 0x10000 )\n  {\n    v45 = *(_DWORD *)(v5 + 34220);\n    v46 = 0;\n    if ( v45 != (_DWORD)v8 )\n      v46 = *(_DWORD *)(v5 + 34220);\n    if ( !v45 )\n      v46 = 3;\n    if ( result & 0x10 )\n      v46 = 3;\n    v47 = *((float *)v7 + 31);\n    if ( (_UNKNOWN *)v5 == &unk_869BD8 && (result &= 0x1000u, (_DWORD)result) )\n    {\n      v47 = v47 * 20.0;\n      if ( v46 & 1 && v47 > *(float *)(v5 + 4 * v28 + 3600) )\n      {\n        *(float *)(v5 + 4 * v28 + 3600) = v47;\n        *(_DWORD *)(v5 + 4 * v28 + 6800) = 1069547520;\n        if ( !(v46 & 2) )\n        {\nLABEL_151:\n          if ( dword_88C264 & 1 )\n          {\n            v51 = *((float *)v7 + 31);\n            result = sub_433F90((unsigned __int64)\"  low intensity influence source at %1m, strength %f, color %C\\n\");\n          }\n          return result;\n        }\nLABEL_149:\n        result = (signed int)v28;\n        if ( v47 > *(float *)(v5 + 4LL * (signed int)v28 + 5200) )\n        {\n          *(float *)(v5 + 4LL * (signed int)v28 + 5200) = v47;\n          *(_DWORD *)(v5 + 4LL * (signed int)v28 + 8400) = 1069547520;\n        }\n        goto LABEL_151;\n      }\n    }\n    else if ( v46 & 1 )\n    {\n      result = (signed int)v28;\n      if ( v47 > *(float *)(v5 + 4LL * (signed int)v28 + 3600) )\n      {\n        *(float *)(v5 + 4LL * (signed int)v28 + 3600) = v47;\n        *(_DWORD *)(v5 + 4LL * (signed int)v28 + 6800) = 1069547520;\n      }\n    }\n    if ( !(v46 & 2) )\n      goto LABEL_151;\n    goto LABEL_149;\n  }\n  if ( !(result & 0x2000) )\n  {\n    if ( *((_DWORD *)v7 + 2) <= 0 )\n      return result;\n    v55 = 3 - v8;\n    v35 = 1LL;\n    if ( !(result & 0x440) )\n      goto LABEL_88;\nLABEL_84:\n    v36 = *v7;\n    v37 = *(_DWORD *)(*v7 + 8 * v35 - 4);\n    if ( v37 == 5 || v37 == 7 && *(_DWORD *)(v5 + 31012) )\n    {\n      v38 = v9 + dword_94A490[8 * *(signed int *)(v36 + 8 * v35 - 8) + v10];\n      goto LABEL_91;\n    }\n    while ( 1 )\n    {\nLABEL_88:\n      if ( !(result & 0x200) )\n        goto LABEL_121;\n      v36 = *v7;\n      if ( *(_DWORD *)(*v7 + 8 * v35 - 4) != 7 )\n        goto LABEL_121;\n      v38 = v9 + dword_94A490[8 * *(signed int *)(v36 + 8 * v35 - 8) + v10];\n      if ( !(result & 0x440) )\n        goto LABEL_105;\nLABEL_91:\n      v39 = v8;\n      if ( !(result & 0x40) )\n        v39 = v55;\n      if ( dword_88C264 & 1 )\n      {\n        sub_4341A0((unsigned int)(3 - v39));\n        sub_433F90((unsigned __int64)\"  barrier for %s influence at %1m\\n\");\n        LODWORD(v9) = v52;\n        LODWORD(v8) = v53;\n        v36 = *v7;\n      }\n      if ( *(_DWORD *)(v36 + 8 * v35 - 4) == 5 )\n      {\n        if ( v39 == 1 )\n        {\n          *(_DWORD *)(v5 + 4LL * v38 + 11600) = 0;\n          if ( !(*((_BYTE *)v7 + 121) & 2) )\n            goto LABEL_121;\n        }\n        else\n        {\n          *(_DWORD *)(v5 + 4LL * v38 + 10000) = 0;\n          if ( !(*((_BYTE *)v7 + 121) & 2) )\n            goto LABEL_121;\n        }\n      }\n      else\n      {\n        if ( v39 != 1 )\n        {\n          v41 = *(float *)(v5 + 4LL * v38 + 10000) * 0.7;\n          *(float *)(v5 + 4LL * v38 + 10000) = v41;\nLABEL_105:\n          if ( !(*((_BYTE *)v7 + 121) & 2) )\n            goto LABEL_121;\n          goto LABEL_106;\n        }\n        v40 = *(float *)(v5 + 4LL * v38 + 11600) * 0.7;\n        *(float *)(v5 + 4LL * v38 + 11600) = v40;\n        if ( !(*((_BYTE *)v7 + 121) & 2) )\n          goto LABEL_121;\n      }\nLABEL_106:\n      v42 = *((float *)v7 + 31);\n      if ( *(_DWORD *)(v5 + 31012) )\n      {\n        v43 = *(signed int *)(v5 + 35668);\n        if ( v43 < 722 )\n        {\n          v44 = 16 * v43;\n          *(_DWORD *)(v5 + v44 + 35672) = v9;\n          *(_DWORD *)(v5 + v44 + 35676) = v38;\n          *(float *)(v5 + v44 + 35680) = v42;\n          *(_DWORD *)(v5 + v44 + 35684) = 1075419546;\n          *(_DWORD *)(v5 + 35668) = v43 + 1;\n        }\n        else if ( dword_88C264 & 1 )\n        {\n          sub_433F90((unsigned __int64)\"intrusion list exhausted\\n\");\n          LODWORD(v9) = v52;\n          LODWORD(v8) = v53;\n          if ( !(dword_88C264 & 1) )\n            goto LABEL_121;\n          goto LABEL_120;\n        }\n      }\n      else\n      {\n        if ( v8 & 1 && v42 > *(float *)(v5 + 4LL * v38 + 3600) )\n        {\n          *(float *)(v5 + 4LL * v38 + 3600) = v42;\n          *(_DWORD *)(v5 + 4LL * v38 + 6800) = 1077936128;\n        }\n        if ( v8 & 2 && v42 > *(float *)(v5 + 4LL * v38 + 5200) )\n        {\n          *(float *)(v5 + 4LL * v38 + 5200) = v42;\n          *(_DWORD *)(v5 + 4LL * v38 + 8400) = 1077936128;\n          if ( !(dword_88C264 & 1) )\n            goto LABEL_121;\nLABEL_120:\n          sub_433F90((unsigned __int64)\"  intrusion at %1m\\n\");\n          LODWORD(v9) = v52;\n          LODWORD(v8) = v53;\n          goto LABEL_121;\n        }\n      }\n      if ( dword_88C264 & 1 )\n        goto LABEL_120;\nLABEL_121:\n      result = *((signed int *)v7 + 2);\n      if ( v35 >= result )\n        return result;\n      LODWORD(result) = *((_DWORD *)v7 + 30);\n      ++v35;\n      if ( result & 0x440 )\n        goto LABEL_84;\n    }\n  }\n  v49 = *((float *)v7 + 31);\n  if ( v8 & 1 )\n  {\n    result = (signed int)v28;\n    if ( v49 > *(float *)(v5 + 4LL * (signed int)v28 + 3600) )\n    {\n      *(float *)(v5 + 4LL * (signed int)v28 + 3600) = v49;\n      *(_DWORD *)(v5 + 4LL * (signed int)v28 + 6800) = 1077936128;\n    }\n  }\n  if ( v8 & 2 )\n  {\n    result = (signed int)v28;\n    if ( v49 > *(float *)(v5 + 4LL * (signed int)v28 + 5200) )\n    {\n      *(float *)(v5 + 4LL * (signed int)v28 + 5200) = v49;\n      *(_DWORD *)(v5 + 4LL * (signed int)v28 + 8400) = 1077936128;\n    }\n  }\n  if ( dword_88C264 & 1 )\n  {\n    v50 = *((float *)v7 + 31);\n    result = sub_433F90((unsigned __int64)\"  extra %C source at %1m, strength %f\\n\");\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x41d380L", 
            "funcEndAddr": "0x41dc57L", 
            "funcName": "sub_41D380"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41DC60(_DWORD *a1, __int64 (__fastcall *a2)(_DWORD *, _QWORD), int a3, __int64 a4)\n{\n  __int64 result; // rax\n  signed __int64 v5; // rbx\n  int v6; // eax\n  signed __int64 v7; // rdx\n  signed __int64 v8; // r13\n  int i; // eax\n  __int64 v10; // r15\n  __m128 v11; // xmm1\n  __m128 v12; // t1\n  __m128 v13; // xmm1\n  signed __int64 v14; // r14\n  signed __int64 v15; // rbx\n  __int64 v16; // rbx\n  signed __int64 v17; // rbp\n  __int64 v18; // rbx\n  signed __int64 v19; // rbp\n  __int64 v20; // rbx\n  signed __int64 v21; // r14\n  int v22; // [rsp+0h] [rbp-58h]\n  float v23; // [rsp+4h] [rbp-54h]\n  int v24; // [rsp+10h] [rbp-48h]\n  int v25; // [rsp+14h] [rbp-44h]\n  signed __int64 v26; // [rsp+18h] [rbp-40h]\n  __int64 v27; // [rsp+20h] [rbp-38h]\n\n  v27 = a4;\n  v25 = a3;\n  result = (__int64)memset(byte_8760D0, 0, 0x190uLL);\n  v5 = 21LL;\n  do\n  {\n    if ( byte_98A1B0[v5] != 3 && !byte_8760D0[v5] )\n    {\n      result = a2(a1, (unsigned int)v5);\n      if ( (_DWORD)result )\n      {\n        v6 = a2(a1, (unsigned int)v5);\n        ++a1[7752];\n        byte_8760D0[v5] = 1;\n        v22 = v6;\n        a1[8556] = v5;\n        v7 = 1LL;\n        v23 = 0.0;\n        v24 = 0;\n        v8 = 8557LL;\n        v26 = v5;\n        for ( i = v5; ; i = a1[v8++] )\n        {\n          v10 = i;\n          if ( !*((_BYTE *)a1 + i) || v22 != (unsigned __int8)byte_98A1B0[i] )\n          {\n            ++v24;\n            if ( a1[7753] )\n            {\n              v11.m128_i32[0] = a1[i + 7754];\n              v12.m128_i32[0] = 0;\n              v13 = _mm_cmplt_ss(v11, v12);\n              v23 = v23\n                  + COERCE_FLOAT(v13.m128_i32[0] & (a1[i + 7754] ^ xmmword_4AE070) | *(unsigned __int128 *)&_mm_andnot_ps(v13, (__m128)(unsigned int)a1[i + 7754]));\n            }\n          }\n          *(_DWORD *)(v27 + 4LL * i) = a1[7752];\n          if ( byte_98A1B0[dword_5641B0[0] + (signed __int64)i] != 3 )\n          {\n            v14 = i + (signed __int64)dword_5641B0[0];\n            if ( !byte_8760D0[v14] )\n            {\n              v15 = v7;\n              if ( (unsigned int)a2(a1, (unsigned int)v14) == v22 )\n              {\n                a1[(signed int)v15 + 8556] = v14;\n                v7 = (unsigned int)(v15 + 1);\n                byte_8760D0[v14] = 1;\n              }\n              else\n              {\n                v7 = v15;\n              }\n            }\n          }\n          if ( byte_98A1B0[dword_5641B4 + v10] != 3 )\n          {\n            v16 = v10 + dword_5641B4;\n            if ( !byte_8760D0[v16] )\n            {\n              v17 = v7;\n              if ( (unsigned int)a2(a1, (unsigned int)v16) == v22 )\n              {\n                a1[(signed int)v17 + 8556] = v16;\n                v7 = (unsigned int)(v17 + 1);\n                byte_8760D0[v16] = 1;\n              }\n              else\n              {\n                v7 = v17;\n              }\n            }\n          }\n          if ( byte_98A1B0[dword_5641B8 + v10] != 3 )\n          {\n            v18 = v10 + dword_5641B8;\n            if ( !byte_8760D0[v18] )\n            {\n              v19 = v7;\n              if ( (unsigned int)a2(a1, (unsigned int)v18) == v22 )\n              {\n                a1[(signed int)v19 + 8556] = v18;\n                v7 = (unsigned int)(v19 + 1);\n                byte_8760D0[v18] = 1;\n              }\n              else\n              {\n                v7 = v19;\n              }\n            }\n          }\n          if ( byte_98A1B0[dword_5641BC + v10] != 3 )\n          {\n            v20 = v10 + dword_5641BC;\n            if ( !byte_8760D0[v20] )\n            {\n              v21 = v7;\n              if ( (unsigned int)a2(a1, (unsigned int)v20) == v22 )\n              {\n                a1[(signed int)v21 + 8556] = v20;\n                v7 = (unsigned int)(v21 + 1);\n                byte_8760D0[v20] = 1;\n              }\n              else\n              {\n                v7 = v21;\n              }\n            }\n          }\n          if ( v8 - 8556 >= (signed int)v7 )\n            break;\n        }\n        a1[a1[7752] + 4500] = v25 | (v22 != 1);\n        a1[a1[7752] + 5584] = v24;\n        result = (signed int)a1[7752];\n        *(float *)&a1[result + 6668] = v23;\n        v5 = v26;\n      }\n    }\n    ++v5;\n  }\n  while ( v5 != 400 );\n  return result;\n}\n", 
            "funcStartAddr": "0x41dc60L", 
            "funcEndAddr": "0x41df70L", 
            "funcName": "sub_41DC60"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41DF70(__int64 a1, __int64 a2)\n{\n  __int64 result; // rax\n\n  result = (unsigned int)(*(_DWORD *)a1 - *(_DWORD *)a2);\n  if ( *(_DWORD *)a1 == *(_DWORD *)a2 )\n  {\n    result = (unsigned int)(*(_DWORD *)(a1 + 4) - *(_DWORD *)(a2 + 4));\n    if ( *(_DWORD *)(a1 + 4) == *(_DWORD *)(a2 + 4) )\n      result = 2 * (unsigned int)(*(float *)(a1 + 8) > *(float *)(a2 + 8)) - 1;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x41df70L", 
            "funcEndAddr": "0x41df94L", 
            "funcName": "sub_41DF70"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41DFA0(__int64 a1)\n{\n  sub_40E550(a1);\n  sub_4066E0();\n  sub_46A2D0();\n  return sub_41EE80();\n}\n", 
            "funcStartAddr": "0x41dfa0L", 
            "funcEndAddr": "0x41dfb6L", 
            "funcName": "sub_41DFA0"
        }, 
        {
            "decompiledFuncCode": "char __fastcall sub_41DFC0(int a1)\n{\n  if ( (unsigned int)(a1 - 5) >= 0xF )\n    sub_4340E0(\"engine/interface.c\", 57LL, \"5 <= boardsize && boardsize <= 19\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  dword_565C68 = a1;\n  return sub_4066E0();\n}\n", 
            "funcStartAddr": "0x41dfc0L", 
            "funcEndAddr": "0x41dff6L", 
            "funcName": "sub_41DFC0"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_41E000(float a1)\n{\n  dword_98A788 = LODWORD(a1);\n}\n", 
            "funcStartAddr": "0x41e000L", 
            "funcEndAddr": "0x41e009L", 
            "funcName": "sub_41E000"
        }, 
        {
            "decompiledFuncCode": "char __fastcall sub_41E010(int a1, int a2, unsigned int a3)\n{\n  return sub_407220(a2 + 20 * a1 + 21, a3);\n}\n", 
            "funcStartAddr": "0x41e010L", 
            "funcEndAddr": "0x41e020L", 
            "funcName": "sub_41E010"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_41E030(int a1, int a2)\n{\n  return sub_407B20(a2 + 20 * a1 + 21);\n}\n", 
            "funcStartAddr": "0x41e030L", 
            "funcEndAddr": "0x41e03eL", 
            "funcName": "sub_41E030"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41E040(int a1, int a2, unsigned int a3)\n{\n  return sub_4074F0(a2 + 20 * a1 + 21, a3);\n}\n", 
            "funcStartAddr": "0x41e040L", 
            "funcEndAddr": "0x41e050L", 
            "funcName": "sub_41E040"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_41E050(int a1)\n{\n  return sub_4079D0(a1);\n}\n", 
            "funcStartAddr": "0x41e050L", 
            "funcEndAddr": "0x41e055L", 
            "funcName": "sub_41E050"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_41E060@<rax>(__int64 a1@<rax>, __int64 *a2@<rdi>, unsigned int a3@<esi>)\n{\n  unsigned int v3; // ebp\n  __int64 i; // rbx\n  __int16 v5; // cx\n  unsigned int v6; // ebp\n  __int64 v8; // [rsp+0h] [rbp-28h]\n\n  v8 = a1;\n  v3 = a3;\n  for ( i = *a2; i; i = *(_QWORD *)i )\n  {\n    v5 = *(_WORD *)(i + 8);\n    if ( v5 <= 16960 )\n    {\n      if ( v5 == 8258 || v5 == 8279 )\n      {\n        v6 = 2 - (v5 == 8279);\n        sub_401360(i, (signed int *)&v8 + 1, (signed int *)&v8, dword_565C68);\n        sub_4074F0(v8 + 20 * HIDWORD(v8) + 21, v6);\n        v3 = v6 ^ 3;\n      }\n    }\n    else\n    {\n      switch ( v5 )\n      {\n        case 22337:\n          sub_401360(i, (signed int *)&v8 + 1, (signed int *)&v8, dword_565C68);\n          sub_407220(v8 + 20 * HIDWORD(v8) + 21, 1u);\n          break;\n        case 19536:\n          v3 = 1;\n          if ( (**(_BYTE **)(i + 16) | 0x20) != 119 )\n            v3 = 2;\n          break;\n        case 16961:\n          sub_401360(i, (signed int *)&v8 + 1, (signed int *)&v8, dword_565C68);\n          sub_407220(v8 + 20 * HIDWORD(v8) + 21, 2u);\n          break;\n      }\n    }\n  }\n  return v3;\n}\n", 
            "funcStartAddr": "0x41e060L", 
            "funcEndAddr": "0x41e1a9L", 
            "funcName": "sub_41E060"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41E1B0(__int64 *a1, _DWORD *a2, _QWORD *a3)\n{\n  _QWORD *v3; // r14\n  __int64 *v4; // rbx\n  unsigned int v5; // ebp\n  int v6; // er15\n  __int64 v7; // r14\n  __int16 v8; // cx\n  int v10; // [rsp+0h] [rbp-48h]\n  int v11; // [rsp+4h] [rbp-44h]\n  _DWORD *v12; // [rsp+8h] [rbp-40h]\n  _QWORD *v13; // [rsp+10h] [rbp-38h]\n\n  v3 = a3;\n  v12 = a2;\n  v4 = a1;\n  if ( (unsigned int)(dword_565C68 - 5) >= 0xF )\n    sub_4340E0(\"engine/interface.c\", 57LL, \"5 <= boardsize && boardsize <= 19\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  sub_4066E0();\n  if ( !a1 )\n  {\n    v6 = 0;\n    v5 = 2;\nLABEL_26:\n    *v12 = v6;\n    return v5;\n  }\n  v13 = v3;\n  v5 = 2;\n  v6 = 0;\n  while ( 1 )\n  {\n    v7 = *v4;\n    if ( *v4 )\n      break;\nLABEL_22:\n    v4 = (__int64 *)v4[2];\n    if ( !v4 )\n      goto LABEL_26;\n  }\n  while ( 1 )\n  {\n    v8 = *(_WORD *)(v7 + 8);\n    if ( v8 <= 16960 )\n      break;\n    switch ( v8 )\n    {\n      case 22337:\n        sub_401360(v7, &v11, &v10, dword_565C68);\n        sub_407220(v10 + 20 * v11 + 21, 1u);\n        v7 = *(_QWORD *)v7;\n        if ( !v7 )\n          goto LABEL_22;\n        break;\n      case 19536:\n        v5 = 1;\n        if ( (**(_BYTE **)(v7 + 16) | 0x20) == 119 )\n          goto LABEL_7;\n        v5 = 2;\n        v7 = *(_QWORD *)v7;\n        if ( !v7 )\n          goto LABEL_22;\n        break;\n      case 16961:\n        sub_401360(v7, &v11, &v10, dword_565C68);\n        sub_407220(v10 + 20 * v11 + 21, 2u);\n        v7 = *(_QWORD *)v7;\n        if ( !v7 )\n          goto LABEL_22;\n        break;\n      default:\nLABEL_7:\n        v7 = *(_QWORD *)v7;\n        if ( !v7 )\n          goto LABEL_22;\n        break;\n    }\n  }\n  if ( v8 != 8258 && v8 != 8279 )\n    goto LABEL_7;\n  v5 = 2 - (v8 == 8279);\n  sub_401360(v7, &v11, &v10, dword_565C68);\n  if ( ++v6 != *v12 )\n  {\n    sub_4074F0(v10 + 20 * v11 + 21, v5);\n    v5 ^= 3u;\n    goto LABEL_7;\n  }\n  *v13 = v4[1];\n  return v5;\n}\n", 
            "funcStartAddr": "0x41e1b0L", 
            "funcEndAddr": "0x41e3beL", 
            "funcName": "sub_41E1B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41E3C0(int a1, int a2, unsigned int a3)\n{\n  return sub_407B30(a2 + 20 * a1 + 21, a3);\n}\n", 
            "funcStartAddr": "0x41e3c0L", 
            "funcEndAddr": "0x41e3d0L", 
            "funcName": "sub_41E3C0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_41E3E0()\n{\n  return sub_459F90();\n}\n", 
            "funcStartAddr": "0x41e3e0L", 
            "funcEndAddr": "0x41e3e5L", 
            "funcName": "sub_41E3E0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_41E3F0()\n{\n  return sub_449110();\n}\n", 
            "funcStartAddr": "0x41e3f0L", 
            "funcEndAddr": "0x41e3f5L", 
            "funcName": "sub_41E3F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41E400(__int64 a1, __int64 a2)\n{\n  unsigned int v2; // ebp\n\n  v2 = sub_459F90(a1);\n  sub_449110(a2);\n  return v2;\n}\n", 
            "funcStartAddr": "0x41e400L", 
            "funcEndAddr": "0x41e41eL", 
            "funcName": "sub_41E400"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41E420(_DWORD *a1, _DWORD *a2, unsigned int a3)\n{\n  return sub_418860(a1, a2, a3);\n}\n", 
            "funcStartAddr": "0x41e420L", 
            "funcEndAddr": "0x41e425L", 
            "funcName": "sub_41E420"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_41E430@<rax>(__int64 a1@<rax>, _DWORD *a2@<rdx>, _DWORD *a3@<rcx>, int a4@<edi>, int a5@<esi>)\n{\n  _DWORD *v5; // r14\n  _DWORD *v6; // rbx\n  __int64 result; // rax\n  __int64 v8; // [rsp-4h] [rbp-18h]\n\n  v8 = a1;\n  v5 = a3;\n  v6 = a2;\n  result = sub_43B050((unsigned int)(a5 + 20 * a4 + 21), (char *)&v8 + 4);\n  if ( v6 )\n    *v6 = (1717986919LL * SHIDWORD(v8) >> 35) + ((unsigned __int64)(1717986919LL * SHIDWORD(v8)) >> 63) - 1;\n  if ( v5 )\n    *v5 = HIDWORD(v8)\n        - 20 * (((unsigned __int64)(1717986919LL * SHIDWORD(v8)) >> 63) + (1717986919LL * SHIDWORD(v8) >> 35))\n        - 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x41e430L", 
            "funcEndAddr": "0x41e4a5L", 
            "funcName": "sub_41E430"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_41E4B0@<rax>(__int64 a1@<rax>, _DWORD *a2@<rdx>, _DWORD *a3@<rcx>, int a4@<edi>, int a5@<esi>)\n{\n  _DWORD *v5; // r14\n  _DWORD *v6; // rbx\n  __int64 result; // rax\n  __int64 v8; // [rsp-4h] [rbp-18h]\n\n  v8 = a1;\n  v5 = a3;\n  v6 = a2;\n  result = sub_43B6F0((unsigned int)(a5 + 20 * a4 + 21), (char *)&v8 + 4);\n  if ( v6 )\n    *v6 = (1717986919LL * SHIDWORD(v8) >> 35) + ((unsigned __int64)(1717986919LL * SHIDWORD(v8)) >> 63) - 1;\n  if ( v5 )\n    *v5 = HIDWORD(v8)\n        - 20 * (((unsigned __int64)(1717986919LL * SHIDWORD(v8)) >> 63) + (1717986919LL * SHIDWORD(v8) >> 35))\n        - 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x41e4b0L", 
            "funcEndAddr": "0x41e525L", 
            "funcName": "sub_41E4B0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_41E530()\n{\n  return sub_44D560();\n}\n", 
            "funcStartAddr": "0x41e530L", 
            "funcEndAddr": "0x41e535L", 
            "funcName": "sub_41E530"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41E540(__int64 a1, __int64 a2)\n{\n  return sub_445420(a2, a1);\n}\n", 
            "funcStartAddr": "0x41e540L", 
            "funcEndAddr": "0x41e54eL", 
            "funcName": "sub_41E540"
        }, 
        {
            "decompiledFuncCode": "float sub_41E560()\n{\n  return *(float *)&dword_98A788;\n}\n", 
            "funcStartAddr": "0x41e560L", 
            "funcEndAddr": "0x41e569L", 
            "funcName": "sub_41E560"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_41E5D0()\n{\n  return (unsigned int)dword_565C68;\n}\n", 
            "funcStartAddr": "0x41e5d0L", 
            "funcEndAddr": "0x41e5d7L", 
            "funcName": "sub_41E5D0"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_41E5F0(__int64 a1, int a2, float a3)\n{\n  *(_DWORD *)a1 = 0;\n  if ( (unsigned int)(a2 - 5) >= 0xF )\n    sub_4340E0(\"engine/interface.c\", 57LL, \"5 <= boardsize && boardsize <= 19\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  dword_565C68 = a2;\n  sub_4066E0();\n  dword_98A788 = LODWORD(a3);\n  *(_DWORD *)(a1 + 4) = 2;\n  sub_4016F0((_OWORD *)(a1 + 8));\n  *(_DWORD *)(a1 + 24) = 1;\n}\n", 
            "funcStartAddr": "0x41e5f0L", 
            "funcEndAddr": "0x41e667L", 
            "funcName": "sub_41E5F0"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_41E670(unsigned int *a1)\n{\n  __int64 v1; // rax\n  unsigned int v2; // eax\n\n  printf(\"Board Size:   %d\\n\", (unsigned int)dword_565C68);\n  printf(\"Handicap      %d\\n\", *a1);\n  printf(\"Komi:         %.1f\\n\", *(float *)&dword_98A788);\n  printf(\"Move Number:  %d\\n\", (unsigned int)dword_98A7C0);\n  v1 = sub_4341A0(a1[1]);\n  printf(\"To Move:      %s\\n\", v1);\n  printf(\"Computer player: \");\n  v2 = a1[6];\n  switch ( v2 )\n  {\n    case 0u:\n      return puts(\"Both (solo)\");\n    case 2u:\n      return puts(\"Black\");\n    case 1u:\n      return puts(\"White\");\n  }\n  return puts(\"Nobody\");\n}\n", 
            "funcStartAddr": "0x41e670L", 
            "funcEndAddr": "0x41e721L", 
            "funcName": "sub_41E670"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41E730(unsigned int *a1, __int64 **a2)\n{\n  unsigned int v2; // edx\n  __int64 result; // rax\n  int v4; // [rsp+4h] [rbp-24h]\n  int v5; // [rsp+8h] [rbp-20h]\n  int v6; // [rsp+Ch] [rbp-1Ch]\n\n  if ( !(unsigned int)sub_401E10(a2, \"SZ\", &v4) )\n    v4 = 19;\n  if ( !(unsigned int)sub_401E60(a2, \"KM\", (float *)&v5) )\n    v5 = 1085276160;\n  if ( (unsigned int)(v4 - 5) >= 0xF )\n    sub_4340E0(\"engine/interface.c\", 57LL, \"5 <= boardsize && boardsize <= 19\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  dword_565C68 = v4;\n  sub_4066E0();\n  dword_98A788 = v5;\n  if ( !(unsigned int)sub_401E10(a2, \"HA\", &v6) || (v2 = v6, v6 < 0) )\n  {\n    v6 = 0;\n    v2 = 0;\n  }\n  *a1 = v2;\n  result = (unsigned int)(v4 * v4);\n  if ( v2 >= (unsigned int)result )\n  {\n    fprintf(stderr, \" Handicap HA[%d] is unreasonable.\\n\");\n    fwrite(\" Modify SGF file.\\n\", 0x12uLL, 1uLL, stderr);\n    exit(1);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x41e730L", 
            "funcEndAddr": "0x41e833L", 
            "funcName": "sub_41E730"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41E840(__int64 a1, int a2, int a3, unsigned int a4)\n{\n  unsigned int v4; // ebx\n  __int64 result; // rax\n\n  v4 = a4;\n  sub_4074F0(a3 + 20 * a2 + 21, a4);\n  sub_401820((__int64 *)(a1 + 8));\n  result = 3 - v4;\n  *(_DWORD *)(a1 + 4) = result;\n  return result;\n}\n", 
            "funcStartAddr": "0x41e840L", 
            "funcEndAddr": "0x41e88fL", 
            "funcName": "sub_41E840"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41E890(unsigned int *a1, __int64 *a2, const char *a3, int a4)\n{\n  const char *v4; // r14\n  __int64 *v5; // rbx\n  signed int v6; // ebp\n  signed int v7; // ebp\n  signed int v8; // er15\n  int v9; // er12\n  int v10; // er15\n  unsigned int v11; // er13\n  signed int v12; // er12\n  __int64 v13; // r14\n  unsigned int v14; // ebx\n  signed int v15; // edi\n  __int64 v16; // rsi\n  __int64 v17; // rcx\n  __int16 v18; // cx\n  _BOOL4 v19; // ebp\n  int v20; // eax\n  unsigned int *v21; // rbx\n  unsigned int v22; // edx\n  int v23; // eax\n  unsigned int *v24; // rbp\n  char v25; // al\n  unsigned int v27; // [rsp+8h] [rbp-70h]\n  unsigned int v28; // [rsp+Ch] [rbp-6Ch]\n  unsigned int *v29; // [rsp+10h] [rbp-68h]\n  int v30; // [rsp+1Ch] [rbp-5Ch]\n  __int64 *v31; // [rsp+20h] [rbp-58h]\n  int v32; // [rsp+2Ch] [rbp-4Ch]\n  int v33; // [rsp+30h] [rbp-48h]\n  int v34; // [rsp+34h] [rbp-44h]\n  int v35; // [rsp+38h] [rbp-40h]\n  int v36; // [rsp+3Ch] [rbp-3Ch]\n  __int64 v37; // [rsp+40h] [rbp-38h]\n\n  v32 = a4;\n  v4 = a3;\n  v5 = a2;\n  v29 = a1;\n  if ( !(unsigned int)sub_401E60((__int64 **)*a2, \"KM\", (float *)&v30) )\n  {\n    if ( *v29 )\n      v30 = 1056964608;\n    else\n      v30 = 1085276160;\n  }\n  if ( (unsigned int)sub_401E10((__int64 **)*a2, \"SZ\", &v33) )\n  {\n    v6 = v33;\n    if ( (unsigned int)(v33 - 5) >= 0xF )\n      sub_4340E0(\"engine/interface.c\", 57LL, \"5 <= boardsize && boardsize <= 19\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  }\n  else\n  {\n    v33 = 19;\n    v6 = 19;\n  }\n  dword_565C68 = v6;\n  sub_4066E0();\n  dword_98A788 = v30;\n  v7 = 9999;\n  v8 = -1;\n  if ( !v4 )\n    goto LABEL_13;\n  if ( (unsigned __int8)(*v4 - 49) <= 8u )\n  {\n    v7 = strtol(v4, 0LL, 10);\n    if ( (dword_88C264 & 0x80u) != 0 )\n      sub_433F90((unsigned __int64)\"Loading until move %d\\n\");\nLABEL_13:\n    v9 = -1;\n    goto LABEL_16;\n  }\n  v9 = *v4 - (*v4 > 72) - 65;\n  v10 = dword_565C68;\n  v8 = v10 - (unsigned __int64)strtol(v4 + 1, 0LL, 10);\n  if ( (dword_88C264 & 0x80u) != 0 )\n    sub_433F90((unsigned __int64)\"Loading until move at %d,%d (%m)\\n\");\nLABEL_16:\n  v11 = 2;\n  if ( (unsigned int)sub_401E10((__int64 **)*a2, \"HA\", &v36) && v36 >= 2 )\n  {\n    *v29 = v36;\n    v11 = 1;\n  }\n  a2[1] = 0LL;\n  if ( (unsigned int)sub_4017A0(a2) )\n  {\n    v34 = v9;\n    v35 = v8;\n    v37 = (unsigned int)(v7 - 1);\n    v12 = 0;\n    v31 = a2;\n    do\n    {\n      v13 = *(_QWORD *)v5[1];\n      if ( v13 )\n      {\n        v14 = v32;\n        do\n        {\n          if ( (dword_88C264 & 0x80u) != 0 )\n          {\n            v16 = (unsigned __int8)*(_WORD *)(v13 + 8);\n            v17 = *(_QWORD *)(v13 + 16);\n            sub_433F90((unsigned __int64)\"%c%c[%s]\\n\");\n          }\n          v18 = *(_WORD *)(v13 + 8);\n          if ( v18 > 19528 )\n          {\n            switch ( v18 )\n            {\n              case 19529:\n                sub_401360(v13, (signed int *)&v27, (signed int *)&v28, dword_565C68);\n                sub_493CA0(v27, v28, &v27, &v28, (unsigned int)dword_565C68, v14);\n                if ( v27 < dword_565C68 && v28 < dword_565C68 )\n                {\n                  v23 = 20 * v27 + 41;\n                  if ( (signed int)v27 > 0 )\n                    v23 = 20 * v27 | 1;\n                  if ( (unsigned int)sub_408130(\n                                       v28 + 20 * v27 + 21,\n                                       3\n                                     - (unsigned int)(unsigned __int8)byte_98A1B0[(signed int)v28 + (signed __int64)v23],\n                                       0LL) )\n                    HIDWORD(qword_98A760) = v28 + 20 * v27 + 21;\n                }\n                break;\n              case 19536:\n                if ( !v12 && dword_98A7C0 )\n                {\n                  v24 = v29;\n                  sub_459F90(*v29);\n                  sub_449110(0LL);\n                  sub_401FC0((_QWORD *)*v31, \"HA\", *v24);\n                }\n                v25 = **(_BYTE **)(v13 + 16);\n                v11 = 1;\n                if ( v25 != 50 && v25 != 87 && v25 != 119 )\n                  v11 = 2;\n                break;\n              case 22337:\n                sub_401360(v13, (signed int *)&v27, (signed int *)&v28, dword_565C68);\n                sub_493CA0(v27, v28, &v27, &v28, (unsigned int)dword_565C68, v14);\n                v12 = 1;\n                sub_407220(v28 + 20 * v27 + 21, 1u);\n                break;\n            }\n          }\n          else if ( v18 == 8258 || v18 == 8279 )\n          {\n            v19 = v18 == 8279;\n            v20 = dword_98A7C0;\n            if ( !v12 && dword_98A7C0 )\n            {\n              v21 = v29;\n              sub_459F90(*v29);\n              sub_449110(0LL);\n              v22 = *v21;\n              v14 = v32;\n              sub_401FC0((_QWORD *)*v31, \"HA\", v22);\n              v20 = dword_98A7C0;\n            }\n            v11 = 2 - v19;\n            if ( v20 == (_DWORD)v37\n              || (unsigned int)sub_401360(v13, (signed int *)&v27, (signed int *)&v28, dword_565C68)\n              && v27 == v35\n              && v28 == v34 )\n            {\n              v29[1] = v11;\n              sub_401740(v31);\n              return v11;\n            }\n            sub_493CA0(v27, v28, &v27, &v28, (unsigned int)dword_565C68, v14);\n            if ( v27 >= dword_565C68 || v28 >= dword_565C68 || byte_98A1C5[20 * v27 + v28] )\n            {\n              if ( (v27 & v28) != -1 )\n              {\n                sub_433F90((unsigned __int64)\"WARNING: Move off board or on occupied position found in sgf-file.\\n\");\n                sub_433F90((unsigned __int64)\"Move at %m ignored, trying to proceed.\\n\");\n                return v11;\n              }\n              v15 = v28 + 20 * v27 + 21;\n            }\n            else\n            {\n              v15 = v28 + 20 * v27 + 21;\n            }\n            sub_4074F0(v15, v11);\n            v11 ^= 3u;\n          }\n          else if ( v18 == 16961 )\n          {\n            sub_401360(v13, (signed int *)&v27, (signed int *)&v28, dword_565C68);\n            sub_493CA0(v27, v28, &v27, &v28, (unsigned int)dword_565C68, v14);\n            sub_407220(v28 + 20 * v27 + 21, 2u);\n            v12 = 1;\n          }\n          v13 = *(_QWORD *)v13;\n        }\n        while ( v13 );\n      }\n      v5 = v31;\n    }\n    while ( (unsigned int)sub_4017A0(v31) );\n  }\n  v29[1] = v11;\n  return v11;\n}\n", 
            "funcStartAddr": "0x41e890L", 
            "funcEndAddr": "0x41ee23L", 
            "funcName": "sub_41E890"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41EE30(unsigned int *a1, __int64 *a2, const char *a3)\n{\n  return sub_41E890(a1, a2, a3, 0);\n}\n", 
            "funcStartAddr": "0x41ee30L", 
            "funcEndAddr": "0x41ee37L", 
            "funcName": "sub_41EE30"
        }, 
        {
            "decompiledFuncCode": "void __spoils<rdx,rcx,r8,r9,r10,r11,xmm4,xmm5> sub_41EE80()\n{\n  sub_466030(&dword_90E630);\n  if ( off_5DB240 && dword_88C264 & 0x10 )\n    sub_433F90((unsigned __int64)\"owl_vital_apat --> using dfa\\n\");\n  if ( off_574E68 && dword_88C264 & 0x10 )\n    sub_433F90((unsigned __int64)\"owl_attackpat --> using dfa\\n\");\n  if ( off_61FBF0 && dword_88C264 & 0x10 )\n    sub_433F90((unsigned __int64)\"owl_defendpat --> using dfa\\n\");\n  if ( qword_5B18B0 && dword_88C264 & 0x10 )\n    sub_433F90((unsigned __int64)\"pat --> using dfa\\n\");\n  if ( qword_5D64F0 && dword_88C264 & 0x10 )\n    sub_433F90((unsigned __int64)\"attpat --> using dfa\\n\");\n  if ( qword_5D8068 && dword_88C264 & 0x10 )\n    sub_433F90((unsigned __int64)\"defpat --> using dfa\\n\");\n  if ( qword_60A440 && dword_88C264 & 0x10 )\n    sub_433F90((unsigned __int64)\"endpat --> using dfa\\n\");\n  if ( qword_57BBD0 && dword_88C264 & 0x10 )\n    sub_433F90((unsigned __int64)\"conn --> using dfa\\n\");\n  if ( qword_5F6558 && dword_88C264 & 0x10 )\n    sub_433F90((unsigned __int64)\"influencepat --> using dfa\\n\");\n  if ( qword_602608 && dword_88C264 & 0x10 )\n    sub_433F90((unsigned __int64)\"barrierspat --> using dfa\\n\");\n  if ( qword_629ED8 && dword_88C264 & 0x10 )\n    sub_433F90((unsigned __int64)\"barrierspat --> using dfa\\n\");\n  dword_5643D4 = -1;\n}\n", 
            "funcStartAddr": "0x41ee80L", 
            "funcEndAddr": "0x41efecL", 
            "funcName": "sub_41EE80"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41EFF0(__int64 a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5)\n{\n  return sub_41F000(a1, a2, a3, a4, a5, *(unsigned int *)(a3 + 4));\n}\n", 
            "funcStartAddr": "0x41eff0L", 
            "funcEndAddr": "0x41eff6L", 
            "funcName": "sub_41EFF0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41F000(__int64 a1, unsigned int a2, __int64 a3, __int64 a4, __int64 a5, int a6)\n{\n  int *v6; // rbx\n  int v7; // er10\n  int *v8; // r11\n  _QWORD *v9; // rax\n  int v10; // edx\n  int v11; // ebx\n  signed __int64 v12; // rax\n  int v13; // edi\n  int v14; // ebp\n  int v15; // ebp\n  int v16; // ebp\n  int v17; // edi\n  bool v18; // zf\n  __int64 (__fastcall *v19)(int); // r14\n  __int64 (__fastcall *v20)(); // r15\n  __int64 v21; // r12\n  __int64 v22; // r13\n  int v23; // ebp\n  int v24; // ST14_4\n  __int64 v25; // ST00_8\n  __int64 result; // rax\n  __int64 v27; // r13\n  __int64 v28; // r12\n  int v29; // ebp\n  int v30; // ST14_4\n  __int64 v31; // ST00_8\n  __int64 v32; // rbp\n  __int64 v33; // ST20_8\n  int v34; // er12\n  __int64 v35; // ST00_8\n  __int64 v36; // [rsp+18h] [rbp-40h]\n\n  v6 = (int *)a3;\n  v36 = a1;\n  v7 = dword_565C68;\n  if ( *(_DWORD *)a3 != dword_565C68 )\n  {\n    v8 = (int *)a3;\n    v9 = *(_QWORD **)(a3 + 8);\n    if ( *v9 )\n    {\n      v10 = dword_565C68 - 1;\n      v11 = 1 - dword_565C68;\n      v12 = (signed __int64)(v9 + 3);\n      while ( 1 )\n      {\n        v13 = *(_DWORD *)(v12 + 24);\n        if ( v13 )\n          break;\nLABEL_26:\n        v18 = *(_QWORD *)(v12 + 160) == 0LL;\n        v12 += 184LL;\n        if ( v18 )\n          goto LABEL_27;\n      }\n      if ( v13 & 1 )\n      {\n        *(_DWORD *)(v12 + 8) = *(_DWORD *)v12 + *(_DWORD *)(v12 + 16);\n        if ( !(v13 & 2) )\n        {\nLABEL_7:\n          if ( !(v13 & 8) )\n            goto LABEL_8;\n          goto LABEL_13;\n        }\n      }\n      else if ( !(v13 & 2) )\n      {\n        goto LABEL_7;\n      }\n      *(_DWORD *)v12 = *(_DWORD *)(v12 + 8) - *(_DWORD *)(v12 + 16);\n      if ( !(v13 & 8) )\n      {\nLABEL_8:\n        if ( !(v13 & 4) )\n          goto LABEL_9;\n        goto LABEL_14;\n      }\nLABEL_13:\n      *(_DWORD *)(v12 + 12) = *(_DWORD *)(v12 + 4) + *(_DWORD *)(v12 + 20);\n      if ( !(v13 & 4) )\n      {\nLABEL_9:\n        if ( !(v13 & 1) )\n        {\nLABEL_17:\n          if ( v13 & 2 )\n          {\n            v15 = v11 + *(_DWORD *)(v12 + 8);\n            if ( *(_DWORD *)v12 > v15 )\n              *(_DWORD *)v12 = v15;\n          }\n          if ( v13 & 8 )\n          {\n            v16 = v10 + *(_DWORD *)(v12 + 4);\n            if ( *(_DWORD *)(v12 + 12) < v16 )\n              *(_DWORD *)(v12 + 12) = v16;\n          }\n          if ( v13 & 4 )\n          {\n            v17 = v11 + *(_DWORD *)(v12 + 12);\n            if ( *(_DWORD *)(v12 + 4) > v17 )\n              *(_DWORD *)(v12 + 4) = v17;\n          }\n          goto LABEL_26;\n        }\nLABEL_15:\n        v14 = v10 + *(_DWORD *)v12;\n        if ( *(_DWORD *)(v12 + 8) < v14 )\n          *(_DWORD *)(v12 + 8) = v14;\n        goto LABEL_17;\n      }\nLABEL_14:\n      *(_DWORD *)(v12 + 4) = *(_DWORD *)(v12 + 12) - *(_DWORD *)(v12 + 20);\n      if ( !(v13 & 1) )\n        goto LABEL_17;\n      goto LABEL_15;\n    }\nLABEL_27:\n    v6 = v8;\n    *v8 = v7;\n  }\n  v19 = sub_41F880;\n  if ( !*((_QWORD *)v6 + 2) )\n    v19 = sub_41F270;\n  v20 = sub_41FD50;\n  if ( !*((_QWORD *)v6 + 2) )\n    v20 = sub_41F800;\n  if ( a2 == 7 )\n  {\n    v27 = a5;\n    v28 = a4;\n    v29 = a6;\n    v30 = a6;\n    ((void (__fastcall *)(signed __int64))v20)(1LL);\n    ((void (__fastcall *)(__int64, signed __int64, signed __int64, int *, __int64, __int64, int))v19)(\n      v36,\n      1LL,\n      2LL,\n      v6,\n      v28,\n      v27,\n      v29);\n    ((void (__fastcall *)(signed __int64))v20)(2LL);\n    LODWORD(v31) = v30;\n    result = ((__int64 (__fastcall *)(__int64, signed __int64, signed __int64, int *, __int64, __int64, __int64))v19)(\n               v36,\n               2LL,\n               1LL,\n               v6,\n               v28,\n               v27,\n               v31);\n  }\n  else if ( a2 == 6 )\n  {\n    v21 = a5;\n    v22 = a4;\n    v23 = a6;\n    v24 = a6;\n    ((void (__fastcall *)(signed __int64))v20)(1LL);\n    ((void (__fastcall *)(__int64, signed __int64, signed __int64, int *, __int64, __int64, int))v19)(\n      v36,\n      1LL,\n      1LL,\n      v6,\n      v22,\n      v21,\n      v23);\n    ((void (__fastcall *)(signed __int64))v20)(2LL);\n    LODWORD(v25) = v24;\n    result = ((__int64 (__fastcall *)(__int64, signed __int64, signed __int64, int *, __int64, __int64, __int64))v19)(\n               v36,\n               2LL,\n               2LL,\n               v6,\n               v22,\n               v21,\n               v25);\n  }\n  else\n  {\n    v32 = a5;\n    v33 = a4;\n    v34 = a6;\n    ((void (__fastcall *)(_QWORD))v20)(a2);\n    ((void (__fastcall *)(__int64, _QWORD, signed __int64, int *, __int64, __int64, int))v19)(\n      v36,\n      a2,\n      1LL,\n      v6,\n      v33,\n      v32,\n      v34);\n    LODWORD(v35) = v34;\n    result = ((__int64 (__fastcall *)(__int64, _QWORD, signed __int64, int *, __int64, __int64, __int64))v19)(\n               v36,\n               a2,\n               2LL,\n               v6,\n               v33,\n               v32,\n               v35);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x41f000L", 
            "funcEndAddr": "0x41f26aL", 
            "funcName": "sub_41F000"
        }, 
        {
            "decompiledFuncCode": "char __fastcall sub_41F270(__int64 (__fastcall *a1)(_QWORD, __int64, __int64, _QWORD, __int64), __int64 a2, int a3, __int64 a4, __int64 a5, __int64 a6, int a7)\n{\n  __int64 v7; // rbp\n  signed __int64 v8; // r11\n  signed __int64 v9; // rax\n  unsigned __int64 v10; // r14\n  _BYTE *v11; // rbp\n  unsigned int v12; // er13\n  signed __int64 v13; // r14\n  char v14; // al\n  unsigned int v15; // ebx\n  int v16; // esi\n  int v17; // esi\n  int v18; // esi\n  int v19; // esi\n  __int64 v20; // rsi\n  unsigned int v21; // er15\n  signed int v22; // ecx\n  _BOOL8 v23; // r12\n  signed __int64 v24; // r12\n  int v25; // ecx\n  int v26; // edx\n  int v27; // er14\n  __int64 v28; // rdi\n  int v29; // ebx\n  int v30; // er13\n  int v31; // esi\n  int v32; // eax\n  int v33; // er14\n  int v34; // edx\n  int v35; // ebp\n  int v36; // ebx\n  int v37; // ebp\n  __int64 v38; // rsi\n  bool v39; // cf\n  signed __int64 v40; // rbx\n  signed int v41; // er13\n  __int64 v42; // r14\n  signed __int64 v43; // r15\n  unsigned __int8 v44; // cl\n  int v45; // edx\n  signed int v46; // edx\n  __int64 v47; // rsi\n  bool v48; // zf\n  int v50; // [rsp+8h] [rbp-90h]\n  signed int v51; // [rsp+Ch] [rbp-8Ch]\n  __int64 v52; // [rsp+10h] [rbp-88h]\n  unsigned int v53; // [rsp+18h] [rbp-80h]\n  unsigned int v54; // [rsp+1Ch] [rbp-7Ch]\n  __int64 v55; // [rsp+20h] [rbp-78h]\n  signed __int64 v56; // [rsp+28h] [rbp-70h]\n  int v57; // [rsp+34h] [rbp-64h]\n  int v58; // [rsp+38h] [rbp-60h]\n  signed int v59; // [rsp+3Ch] [rbp-5Ch]\n  __int64 v60; // [rsp+40h] [rbp-58h]\n  __int64 v61; // [rsp+48h] [rbp-50h]\n  __int64 (__fastcall *v62)(_QWORD, __int64, __int64, _QWORD, __int64); // [rsp+50h] [rbp-48h]\n  __int64 v63; // [rsp+58h] [rbp-40h]\n  signed __int64 v64; // [rsp+60h] [rbp-38h]\n\n  v7 = a6;\n  v63 = a5;\n  v61 = a4;\n  v62 = a1;\n  v57 = a3;\n  v55 = a2;\n  v58 = a2 ^ a3;\n  v8 = 21LL;\n  v64 = 8LL * ((signed int)a2 - 1);\n  v60 = a6;\n  do\n  {\n    LODWORD(v9) = (unsigned __int8)byte_98A1B0[v8];\n    if ( (_DWORD)v9 == v57 && (!a7 || *(_BYTE *)(v7 + v8)) )\n    {\n      v10 = (unsigned int)v8 / 0x14uLL;\n      v11 = (_BYTE *)((unsigned int)v8 % 0x14 + 20 * v10 + 10002846);\n      v53 = (unsigned int)v8 / 0x14 - 1;\n      v12 = (unsigned int)v8 % 0x14;\n      v54 = (unsigned int)v8 % 0x14 - 1;\n      v56 = v8;\n      if ( (_BYTE)v9 == 3 )\n        sub_4340E0(\"engine/matchpat.c\", 227LL, \"ON_BOARD1(anchor)\", v53, v54);\n      v13 = v10 - 3;\n      v50 = 0;\n      v14 = 24;\n      while ( 1 )\n      {\n        v15 = v13 + 1;\n        v16 = 3;\n        if ( dword_565C68 <= v12 - 2 || dword_565C68 <= v15 )\n          goto LABEL_13;\n        if ( *(v11 - 3) )\n          break;\nLABEL_14:\n        v17 = 3;\n        if ( dword_565C68 <= v12 - 1 || dword_565C68 <= v15 )\n          goto LABEL_19;\n        if ( *(v11 - 2) )\n        {\n          v17 = 3 - (unsigned __int8)*(v11 - 2);\n          if ( (_DWORD)v55 != 2 )\n            v17 = (unsigned __int8)*(v11 - 2);\nLABEL_19:\n          v50 |= v17 << (v14 + 4);\n        }\n        v18 = 3;\n        if ( v12 >= dword_565C68 || dword_565C68 <= v15 )\n          goto LABEL_25;\n        if ( *(v11 - 1) )\n        {\n          v18 = 3 - (unsigned __int8)*(v11 - 1);\n          if ( (_DWORD)v55 != 2 )\n            v18 = (unsigned __int8)*(v11 - 1);\nLABEL_25:\n          v50 |= v18 << (v14 + 2);\n        }\n        v19 = 3;\n        if ( dword_565C68 <= v12 + 1 || dword_565C68 <= v15 )\n          goto LABEL_31;\n        if ( *v11 )\n        {\n          v19 = 3 - (unsigned __int8)*v11;\n          if ( (_DWORD)v55 != 2 )\n            v19 = (unsigned __int8)*v11;\nLABEL_31:\n          v50 |= v19 << v14;\n        }\n        ++v13;\n        v11 += 20;\n        v14 -= 8;\n        if ( v13 > (unsigned int)v8 / 0x14 )\n        {\n          v20 = *(_QWORD *)(v61 + 8);\n          if ( !**(_QWORD **)(v61 + 8) )\n            sub_4340E0(\"engine/matchpat.c\", 252LL, \"pattern->patn\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n          v7 = v60;\n          v21 = (unsigned int)v8 / 0x14 - 1;\n          while ( 1 )\n          {\n            LOBYTE(v9) = v58;\n            if ( v58 == *(_DWORD *)(v20 + 176) )\n              break;\nLABEL_73:\n            v48 = *(_QWORD *)(v20 + 184) == 0LL;\n            v20 += 184LL;\n            if ( v48 )\n              goto LABEL_74;\n          }\n          v22 = *(_DWORD *)(v20 + 12);\n          v23 = v22 == 5;\n          if ( v22 == 5 )\n            v22 = 6;\n          v59 = v22;\n          v24 = 2 * v23;\n          v52 = v20;\n          while ( 2 )\n          {\n            LODWORD(v9) = v50 & *(_DWORD *)(v20 + 4 * v24 + 56);\n            if ( (_DWORD)v9 == *(_DWORD *)(v20 + 4 * v24 + 88) )\n            {\n              v25 = dword_4B2760[4 * v24];\n              v26 = *(_DWORD *)(v20 + 24);\n              v27 = *(_DWORD *)(v20 + 28);\n              v28 = v20;\n              v29 = dword_4B2764[4 * v24];\n              v30 = v25 * *(_DWORD *)(v20 + 24) + v29 * v27;\n              v31 = dword_4B2768[4 * v24];\n              v32 = dword_4B276C[4 * v24];\n              v33 = v31 * v26 + v32 * v27;\n              v34 = *(_DWORD *)(v28 + 32);\n              v35 = *(_DWORD *)(v28 + 36);\n              v36 = v34 * v25 + v35 * v29;\n              v37 = v31 * v34 + v32 * v35;\n              if ( dword_88C264 & 0x10 )\n              {\n                v38 = *(_QWORD *)(v52 + 16);\n                sub_433F90((unsigned __int64)\"---\\nconsidering pattern '%s', rotation %d at %1m. Range %d,%d -> %d,%d\\n\");\n                v8 = v56;\n              }\n              LOBYTE(v9) = dword_565C68;\n              v39 = v54 + v37 < dword_565C68;\n              v7 = v60;\n              v20 = v52;\n              if ( v39 && v21 + v36 < dword_565C68 && v21 + v30 < dword_565C68 && v54 + v33 < dword_565C68 )\n              {\n                if ( *(_DWORD *)(v52 + 8) <= 0 )\n                {\n                  v41 = 0;\n                  v51 = 0;\n                  if ( v60 )\n                  {\nLABEL_63:\n                    if ( !v41 )\n                      goto LABEL_70;\n                  }\nLABEL_66:\n                  if ( !v60 || v51 || (LOBYTE(v9) = *(_BYTE *)(v20 + 120), (v9 & 0x80u) == 0LL) )\n                  {\n                    LOBYTE(v9) = v62((unsigned int)v8, v55, v52, (unsigned int)v24, v63);\n                    v20 = v52;\n                    v8 = v56;\n                  }\n                }\n                else\n                {\n                  v40 = 0LL;\n                  v51 = 0;\n                  v41 = 0;\n                  while ( 1 )\n                  {\n                    v42 = *(signed int *)(*(_QWORD *)v20 + 8 * v40 + 4);\n                    v43 = dword_94A490[8 * *(signed int *)(*(_QWORD *)v20 + 8 * v40) + v24]\n                        + (signed __int64)(signed int)v8;\n                    if ( (unsigned int)v43 > 0x1A4 || (v44 = byte_98A1B0[v43], v44 == 3) )\n                    {\n                      v45 = (1717986919LL * (signed int)v43 >> 35)\n                          + ((unsigned __int64)(1717986919LL * (signed int)v43) >> 63);\n                      sub_4340E0(\n                        \"engine/matchpat.c\",\n                        351LL,\n                        \"ON_BOARD1(pos)\",\n                        (unsigned int)(v45 - 1),\n                        (unsigned int)(v43 - 20 * v45 - 1));\n                    }\n                    LOBYTE(v9) = byte_98A1B0[v43];\n                    v20 = v52;\n                    if ( (v44 & dword_4AE6B0[v42 + v64]) != dword_4AE6F0[v42 + v64] )\n                      break;\n                    if ( v60 && v44 )\n                    {\n                      if ( *(_BYTE *)(v60 + v43) )\n                      {\n                        v41 = 1;\n                      }\n                      else\n                      {\n                        v46 = v51;\n                        if ( v44 == (_DWORD)v55 )\n                          v46 = 1;\n                        v51 = v46;\n                      }\n                    }\n                    v9 = 4LL * v44;\n                    if ( *(_DWORD *)(v52 + 120) & *(int *)((char *)&dword_876EF0[3 * dword_954FF0[19 * v43]] + v9) )\n                      break;\n                    ++v40;\n                    v9 = *(signed int *)(v52 + 8);\n                    if ( v40 >= v9 )\n                    {\n                      if ( !v60 )\n                        goto LABEL_66;\n                      goto LABEL_63;\n                    }\n                  }\n                }\nLABEL_70:\n                v21 = v53;\n                if ( dword_88C264 & 0x10 )\n                {\n                  v47 = *(_QWORD *)(v52 + 16);\n                  LOBYTE(v9) = sub_433F90((unsigned __int64)\"end of pattern '%s', rotation %d at %1m\\n---\\n\");\n                  v20 = v52;\n                  v8 = v56;\n                }\n              }\n            }\n            if ( v59 <= (signed int)++v24 )\n              goto LABEL_73;\n            continue;\n          }\n        }\n      }\n      v16 = 3 - (unsigned __int8)*(v11 - 3);\n      if ( (_DWORD)v55 != 2 )\n        v16 = (unsigned __int8)*(v11 - 3);\nLABEL_13:\n      v50 |= v16 << (v14 + 6);\n      goto LABEL_14;\n    }\nLABEL_74:\n    ++v8;\n  }\n  while ( v8 != 400 );\n  return v9;\n}\n", 
            "funcStartAddr": "0x41f270L", 
            "funcEndAddr": "0x41f7f4L", 
            "funcName": "sub_41F270"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41F800(int a1)\n{\n  __int64 result; // rax\n  __int64 v2; // rcx\n\n  if ( !a1 )\n    sub_4340E0(\"engine/matchpat.c\", 179LL, \"color != 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  result = a1;\n  dword_876EF0[result] = 1;\n  v2 = 3 - a1;\n  dword_876EF0[v2] = 4;\n  dword_876F08[result] = 1;\n  dword_876F08[v2] = 0;\n  dword_876EFC[result] = 2;\n  dword_876EFC[v2] = 8;\n  return result;\n}\n", 
            "funcStartAddr": "0x41f800L", 
            "funcEndAddr": "0x41f87eL", 
            "funcName": "sub_41F800"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41F880(void (__fastcall *a1)(_QWORD, _QWORD, _QWORD *, __int64, __int64), unsigned int a2, int a3, __int64 a4, __int64 a5, __int64 a6, int a7)\n{\n  signed __int64 v7; // rbp\n  __int64 result; // rax\n  __int64 v9; // r14\n  signed int v10; // ebx\n  __int64 v11; // r12\n  unsigned __int64 v12; // rcx\n  signed __int64 v13; // rax\n  __int64 v14; // rbx\n  int v15; // er15\n  __int64 v16; // r9\n  int *v17; // r8\n  unsigned int v18; // esi\n  __int64 v19; // r11\n  int v20; // er13\n  __int64 v21; // rdi\n  __int64 v22; // rbp\n  int v23; // ecx\n  int *v24; // rax\n  int v25; // er15\n  int v26; // eax\n  __int64 v27; // rbx\n  __int64 v28; // r14\n  __int64 v29; // r12\n  int v30; // edx\n  int v31; // ecx\n  __int64 v32; // rdx\n  signed __int64 v33; // rcx\n  signed int *v34; // rbx\n  __int64 v35; // r14\n  signed __int64 v36; // r13\n  int v37; // edx\n  signed int v38; // ecx\n  int v39; // eax\n  __int64 v40; // rsi\n  bool v41; // [rsp+3h] [rbp-3F25h]\n  unsigned int v42; // [rsp+4h] [rbp-3F24h]\n  signed int v43; // [rsp+4h] [rbp-3F24h]\n  unsigned int v44; // [rsp+8h] [rbp-3F20h]\n  signed int v45; // [rsp+8h] [rbp-3F20h]\n  unsigned int v46; // [rsp+Ch] [rbp-3F1Ch]\n  unsigned int v47; // [rsp+10h] [rbp-3F18h]\n  unsigned int v48; // [rsp+14h] [rbp-3F14h]\n  __int64 v49; // [rsp+18h] [rbp-3F10h]\n  __int64 v50; // [rsp+20h] [rbp-3F08h]\n  int v51; // [rsp+28h] [rbp-3F00h]\n  _QWORD *v52; // [rsp+28h] [rbp-3F00h]\n  signed __int64 v53; // [rsp+30h] [rbp-3EF8h]\n  int v54; // [rsp+3Ch] [rbp-3EECh]\n  __int64 v55; // [rsp+40h] [rbp-3EE8h]\n  __int64 v56; // [rsp+50h] [rbp-3ED8h]\n  void (__fastcall *v57)(_QWORD, _QWORD, _QWORD *, __int64, __int64); // [rsp+58h] [rbp-3ED0h]\n  __int64 v58; // [rsp+60h] [rbp-3EC8h]\n  int v59[4014]; // [rsp+70h] [rbp-3EB8h]\n\n  v58 = a5;\n  v56 = a4;\n  v48 = a2;\n  v57 = a1;\n  v50 = a6;\n  v41 = a7 == 0 && a6 != 0;\n  v7 = 21LL;\n  v54 = a3;\n  do\n  {\n    result = (unsigned __int8)byte_98A1B0[v7];\n    if ( (_DWORD)result == a3 && (!a7 || *(_BYTE *)(v50 + v7)) )\n    {\n      v49 = *(_QWORD *)(v56 + 8);\n      v9 = *(_QWORD *)(v56 + 16);\n      v47 = (unsigned int)v7 / 0x14 - 1;\n      v53 = v7;\n      v46 = (unsigned int)v7 % 0x14 - 1;\n      v10 = 84 * v47 + (unsigned int)v7 % 0x14 + 1784;\n      if ( (_BYTE)result == 3 )\n        sub_4340E0(\"engine/matchpat.c\", 578LL, \"ON_BOARD1(anchor)\", v47, v46);\n      v11 = v10;\n      v12 = (unsigned __int64)(1717986919LL * v10) >> 63;\n      v13 = 1717986919LL * v10 >> 35;\n      v42 = v13 + v12 - 1;\n      v44 = v10 - 20 * (v13 + v12) - 1;\n      v14 = 0LL;\n      v15 = 0;\n      result = 0LL;\n      do\n      {\n        v51 = v15;\n        v16 = *(_QWORD *)(v9 + 88);\n        v17 = &v59[result];\n        v18 = 1;\n        v19 = 0LL;\n        v20 = 0;\n        do\n        {\n          LOWORD(v21) = *(_WORD *)(v16 + 10LL * v18);\n          if ( (_WORD)v21 )\n          {\n            v22 = *(_QWORD *)(v9 + 96);\n            v23 = *(_DWORD *)(v9 + 80);\n            v24 = &v17[v20];\n            do\n            {\n              v21 = (signed __int16)v21;\n              v25 = v14 + 8 * *(signed __int16 *)(v22 + 4LL * (signed __int16)v21);\n              if ( v23 )\n                v25 = *(signed __int16 *)(v22 + 4LL * (signed __int16)v21);\n              *v24 = v25;\n              LOWORD(v21) = *(_WORD *)(v22 + 4 * v21 + 2);\n              ++v20;\n              ++v24;\n            }\n            while ( (_WORD)v21 );\n          }\n          v26 = *(unsigned __int16 *)(v16 + 10LL * v18 + 2LL * dword_95C670[v11 + dword_90E630[8 * v19 + v14]] + 2);\n          v18 += v26;\n          ++v19;\n        }\n        while ( v26 );\n        if ( (unsigned int)v19 >= 0x6E4 )\n          sub_4340E0(\"engine/matchpat.c\", 556LL, \"row < MAX_ORDER\", v42, v44);\n        result = (unsigned int)(v20 + v51);\n        v15 = v20 + v51;\n        if ( *(_DWORD *)(v9 + 80) )\n          break;\n        ++v14;\n        result = v15;\n      }\n      while ( v14 != 8 );\n      if ( v15 >= 4000 )\n        sub_4340E0(\"engine/matchpat.c\", 591LL, \"maxr < DFA_MAX_MATCHED\", v47, v46);\n      v7 = v53;\n      v27 = v49;\n      if ( !v15 )\n      {\nLABEL_56:\n        a3 = v54;\n        goto LABEL_57;\n      }\n      v28 = (unsigned int)v15;\n      v29 = 0LL;\n      while ( 1 )\n      {\n        v30 = v59[v29];\n        v31 = v30 / 8;\n        v32 = (unsigned int)(v30 % 8);\n        v33 = 184LL * v31;\n        result = *(unsigned int *)(v27 + v33 + 12);\n        if ( (_DWORD)result == 5 )\n        {\n          result = (unsigned int)(v32 - 2);\n          if ( (unsigned int)result <= 3 )\n            goto LABEL_28;\n        }\n        else if ( (signed int)result > (signed int)v32 )\n        {\nLABEL_28:\n          v52 = (_QWORD *)(v27 + v33);\n          v55 = v33;\n          if ( *(_DWORD *)(v27 + v33 + 8) > 0 )\n          {\n            v34 = (signed int *)(v33 + v27 + 8);\n            v35 = 0LL;\n            v43 = 0;\n            v45 = 0;\n            while ( 1 )\n            {\n              v36 = dword_94A490[8 * *(signed int *)(*v52 + 8 * v35) + (signed int)v32] + (signed __int64)(signed int)v7;\n              if ( (unsigned int)v36 > 0x1A4 || byte_98A1B0[v36] == 3 )\n              {\n                v37 = (1717986919LL * (signed int)v36 >> 35)\n                    + ((unsigned __int64)(1717986919LL * (signed int)v36) >> 63);\n                sub_4340E0(\n                  \"engine/matchpat.c\",\n                  643LL,\n                  \"ON_BOARD1(pos)\",\n                  (unsigned int)(v37 - 1),\n                  (unsigned int)(-20 * v37 + v36 - 1));\n              }\n              if ( v41 && byte_98A1B0[v36] )\n              {\n                if ( *(_BYTE *)(v50 + v36) )\n                {\n                  v45 = 1;\n                }\n                else\n                {\n                  v38 = v43;\n                  if ( (unsigned __int8)byte_98A1B0[v36] == v48 )\n                    v38 = 1;\n                  v43 = v38;\n                }\n              }\n              v39 = dword_954FF0[19 * v36];\n              if ( v39 >= 4 )\n                sub_4340E0(\"engine/matchpat.c\", 656LL, \"dragon[pos].status < 4\", v47, v46);\n              v7 = v53;\n              if ( v34[28] & dword_876EF0[3 * v39 + (unsigned __int8)byte_98A1B0[v36]] )\n                goto LABEL_53;\n              if ( ++v35 >= *v34 )\n              {\n                if ( a7 )\n                  goto LABEL_52;\n                goto LABEL_45;\n              }\n            }\n          }\n          v45 = 0;\n          v43 = 0;\n          if ( a7 )\n          {\nLABEL_52:\n            v57((unsigned int)v7, v48, v52, v32, v58);\n          }\n          else\n          {\nLABEL_45:\n            if ( (!v50 || v45) && (!v50 || v43 || *(_BYTE *)(v49 + v55 + 120) >= 0) )\n              goto LABEL_52;\n          }\nLABEL_53:\n          v27 = v49;\n          v28 = (unsigned int)v15;\n          result = v55;\n          if ( dword_88C264 & 0x10 )\n          {\n            v40 = *(_QWORD *)(v49 + v55 + 16);\n            result = sub_433F90((unsigned __int64)\"end of pattern '%s', rotation %d at %1m\\n---\\n\");\n          }\n          goto LABEL_55;\n        }\nLABEL_55:\n        if ( ++v29 == v28 )\n          goto LABEL_56;\n      }\n    }\nLABEL_57:\n    ++v7;\n  }\n  while ( v7 != 400 );\n  return result;\n}\n", 
            "funcStartAddr": "0x41f880L", 
            "funcEndAddr": "0x41fd4cL", 
            "funcName": "sub_41F880"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41FD50(int a1)\n{\n  int v1; // er14\n  int v2; // er9\n  int v3; // eax\n  signed __int64 v4; // rcx\n  __int64 v5; // rbx\n  signed __int64 v6; // r11\n  signed int v7; // edx\n  signed int v8; // eax\n  __int64 v9; // rdi\n  __int64 result; // rax\n  __int64 v11; // rcx\n\n  v1 = a1;\n  v2 = dword_5643D4;\n  v3 = dword_565C68;\n  if ( dword_5643D4 != dword_565C68 )\n  {\n    dword_5643D4 = dword_565C68;\n    v4 = 1152921504606845212LL;\n    do\n    {\n      *(_OWORD *)((char *)&unk_9634B0 + v4 * 16) = xmmword_4AE120;\n      xmmword_9634C0[v4] = xmmword_4AE120;\n      xmmword_9634D0[v4] = xmmword_4AE120;\n      xmmword_9634E0[v4] = xmmword_4AE120;\n      xmmword_9634F0[v4] = xmmword_4AE120;\n      xmmword_963500[v4] = xmmword_4AE120;\n      xmmword_963510[v4] = xmmword_4AE120;\n      xmmword_963520[v4] = xmmword_4AE120;\n      xmmword_963530[v4] = xmmword_4AE120;\n      xmmword_963540[v4] = xmmword_4AE120;\n      xmmword_963550[v4] = xmmword_4AE120;\n      xmmword_963560[v4] = xmmword_4AE120;\n      xmmword_963570[v4] = xmmword_4AE120;\n      xmmword_963580[v4] = xmmword_4AE120;\n      v4 += 14LL;\n    }\n    while ( v4 * 16 );\n    v2 = v3;\n  }\n  if ( v2 > 0 )\n  {\n    LODWORD(v5) = 21;\n    v6 = 0LL;\n    v7 = 1786;\n    v8 = 1785;\n    do\n    {\n      v5 = (unsigned int)v5;\n      v9 = 0LL;\n      if ( v2 != 1 )\n      {\n        do\n        {\n          dword_95C670[(unsigned int)(v8 + v9)] = dword_4B2720[4 * v1 + (unsigned __int8)byte_98A1B0[v5 + v9]];\n          dword_95C670[(v7 + (_DWORD)v9) & 0xFFFFFFFE] = dword_4B2720[4 * v1 + (unsigned __int8)byte_98A1B1[v5 + v9]];\n          v9 += 2LL;\n        }\n        while ( (unsigned int)v2 - (unsigned __int64)(v2 & 1) != v9 );\n      }\n      if ( v2 & 1 )\n        dword_95C670[(unsigned int)(v9 + 84 * v6 + 1785)] = dword_4B2720[4 * v1\n                                                                       + (unsigned __int8)byte_98A1B0[((20 * (_DWORD)v6 + 21) & 0xFFFFFFFD) + v9]];\n      ++v6;\n      LODWORD(v5) = v5 + 20;\n      v7 += 84;\n      v8 += 84;\n    }\n    while ( v6 < v2 );\n  }\n  if ( !v1 )\n    sub_4340E0(\"engine/matchpat.c\", 179LL, \"color != 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  result = v1;\n  dword_876EF0[result] = 1;\n  v11 = 3 - v1;\n  dword_876EF0[v11] = 4;\n  dword_876F08[result] = 1;\n  dword_876F08[v11] = 0;\n  dword_876EFC[result] = 2;\n  dword_876EFC[v11] = 8;\n  return result;\n}\n", 
            "funcStartAddr": "0x41fd50L", 
            "funcEndAddr": "0x41ff57L", 
            "funcName": "sub_41FD50"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_41FF60(__int64 (__fastcall *a1)(_QWORD, __int64, _QWORD), int a2, __int64 a3)\n{\n  __int64 v3; // rbx\n  int v4; // er14\n  __int64 result; // rax\n  __int64 v6; // rbp\n  signed __int64 v7; // r15\n  int v8; // er12\n  signed __int64 v9; // r13\n  int v10; // edx\n  bool v11; // zf\n  unsigned int v12; // [rsp+4h] [rbp-44h]\n  int v13; // [rsp+Ch] [rbp-3Ch]\n\n  v3 = a3;\n  v4 = dword_565C68;\n  v12 = sub_40BBB0(3);\n  if ( !a2 )\n    sub_4340E0(\"engine/matchpat.c\", 796LL, \"color != 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  result = (unsigned int)(dword_565C68 % 2);\n  if ( (_DWORD)result != 1 )\n    sub_4340E0(\"engine/matchpat.c\", 797LL, \"board_size % 2 == 1\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  if ( !*(_QWORD *)v3 )\n    return result;\n  v13 = 21 * ((signed int)(v4 + ((unsigned int)(v4 - 1) >> 31) - 1) >> 1) + 21;\n  do\n  {\n    result = v12;\n    if ( *(_DWORD *)(v3 + 8) != v12 )\n      goto LABEL_24;\n    result = v12;\n    v6 = 0LL;\n    while ( 2 )\n    {\n      v7 = 0LL;\n      if ( (signed int)result <= 0 )\n        goto LABEL_21;\n      do\n      {\n        v8 = *(_DWORD *)(*(_QWORD *)v3 + 8 * v7 + 4);\n        v9 = v13 + (signed __int64)dword_94A490[8 * *(signed int *)(*(_QWORD *)v3 + 8 * v7) + v6];\n        if ( (unsigned int)v9 > 0x1A4 || byte_98A1B0[v9] == 3 )\n        {\n          v10 = (1717986919LL * (signed int)v9 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)v9) >> 63);\n          sub_4340E0(\n            \"engine/matchpat.c\",\n            818LL,\n            \"ON_BOARD1(pos)\",\n            (unsigned int)(v10 - 1),\n            (unsigned int)(-20 * v10 + v9 - 1));\n        }\n        if ( v8 == 1 )\n        {\n          if ( 3 - a2 != (unsigned __int8)byte_98A1B0[v9] )\n            break;\n          goto LABEL_19;\n        }\n        if ( v8 == 2 && (unsigned __int8)byte_98A1B0[v9] != a2 )\n          break;\nLABEL_19:\n        ++v7;\n      }\n      while ( v7 < *(signed int *)(v3 + 8) );\n      result = *(unsigned int *)(v3 + 8);\nLABEL_21:\n      if ( (_DWORD)v7 == (_DWORD)result )\n        result = a1((unsigned int)(v13 + dword_94A490[8 * *(signed int *)(v3 + 24) + v6]), v3, (unsigned int)v6);\n      if ( ++v6 != 8 )\n      {\n        result = *(unsigned int *)(v3 + 8);\n        continue;\n      }\n      break;\n    }\nLABEL_24:\n    v11 = *(_QWORD *)(v3 + 32) == 0LL;\n    v3 += 32LL;\n  }\n  while ( !v11 );\n  return result;\n}\n", 
            "funcStartAddr": "0x41ff60L", 
            "funcEndAddr": "0x42015eL", 
            "funcName": "sub_41FF60"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_420160()\n{\n  signed __int64 v0; // r14\n  float *v1; // rbx\n  __int64 result; // rax\n\n  dword_98A7D8 = 0;\n  dword_98A7C8 = 0;\n  dword_98A7CC = 0;\n  dword_98A7C4 = 0;\n  dword_98A7D0 = 0;\n  dword_98A7D4 = 0;\n  v0 = -379LL;\n  v1 = (float *)&unk_8B53A4;\n  do\n  {\n    if ( byte_98A340[v0] != 3 )\n    {\n      *((_OWORD *)v1 - 33) = 0LL;\n      *((_OWORD *)v1 - 34) = 0LL;\n      *((_OWORD *)v1 - 35) = 0LL;\n      *((_QWORD *)v1 - 64) = 0LL;\n      *((_QWORD *)v1 - 63) = 1164025856LL;\n      *(v1 - 124) = 3610.0;\n      memset(v1 - 122, 255, 0x1E0uLL);\n      *((_QWORD *)v1 - 1) = 0LL;\n      *(v1 - 123) = 1.0;\n      result = sub_4941E0(v1 - 122, 255LL);\n      *v1 = 0.0;\n      dword_988EE0[v0] = 0;\n    }\n    v1 += 141;\n    ++v0;\n  }\n  while ( v0 );\n  return result;\n}\n", 
            "funcStartAddr": "0x420160L", 
            "funcEndAddr": "0x42024cL", 
            "funcName": "sub_420160"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_420250(signed int a1, signed int a2)\n{\n  int v2; // ebp\n  int v3; // ebx\n  int v4; // edx\n  int v5; // edx\n  __int64 result; // rax\n  __int64 v7; // rcx\n\n  v2 = *((_DWORD *)&xmmword_954FB0 + 19 * a1 + 2);\n  v3 = dword_8E947C[95 * a2];\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v4 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      338LL,\n      \"ON_BOARD1(eater)\",\n      (unsigned int)(v4 - 1),\n      (unsigned int)(a1 - 20 * v4 - 1));\n  }\n  if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v5 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      339LL,\n      \"ON_BOARD1(food)\",\n      (unsigned int)(v5 - 1),\n      (unsigned int)(a2 - 20 * v5 - 1));\n  }\n  result = dword_98A7D4;\n  if ( dword_98A7D4 <= 0LL )\n  {\nLABEL_14:\n    result = (signed int)result;\n    dword_989490[result] = v2;\n    dword_989850[result] = v3;\n    result = (unsigned int)(result + 1);\n    dword_98A7D4 = result;\n  }\n  else\n  {\n    v7 = 0LL;\n    while ( dword_989490[v7] != v2 || dword_989850[v7] != v3 )\n    {\n      if ( ++v7 >= dword_98A7D4 )\n      {\n        if ( (signed int)result >= 240 )\n          sub_4340E0(\"engine/move_reasons.c\", 346LL, \"next_lunch < 2*19*19/3\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n        goto LABEL_14;\n      }\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x420250L", 
            "funcEndAddr": "0x42039bL", 
            "funcName": "sub_420250"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4203A0(signed int a1, signed int a2)\n{\n  int v2; // edx\n  int v3; // edx\n  __int64 result; // rax\n  signed __int64 i; // rcx\n  int v6; // edx\n\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v2 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      363LL,\n      \"ON_BOARD1(eater)\",\n      (unsigned int)(v2 - 1),\n      (unsigned int)(a1 - 20 * v2 - 1));\n  }\n  if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v3 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      364LL,\n      \"ON_BOARD1(food)\",\n      (unsigned int)(v3 - 1),\n      (unsigned int)(a2 - 20 * v3 - 1));\n  }\n  result = dword_98A7D4;\n  for ( i = 0LL; i < dword_98A7D4; ++i )\n  {\n    if ( dword_989490[i] == *((_DWORD *)&xmmword_954FB0 + 19 * a1 + 2) && dword_989850[i] == dword_8E947C[95 * a2] )\n      break;\n  }\n  if ( (_DWORD)i != (_DWORD)result )\n  {\n    v6 = dword_98A7D4 - 1;\n    i = (unsigned int)i;\n    dword_989490[i] = dword_98948C[dword_98A7D4];\n    result = (unsigned int)dword_98984C[result];\n    dword_989850[i] = result;\n    dword_98A7D4 = v6;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4203a0L", 
            "funcEndAddr": "0x4204d2L", 
            "funcName": "sub_4203A0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4204E0(signed int a1, int a2, int a3)\n{\n  int v3; // ebx\n  int v4; // ebp\n  int v5; // edx\n  unsigned __int64 v6; // rdx\n  __int64 v7; // rax\n  signed __int64 v8; // rsi\n  signed __int64 result; // rax\n\n  v3 = a3;\n  v4 = a2;\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v5 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      471LL,\n      \"ON_BOARD1(pos)\",\n      (unsigned int)(v5 - 1),\n      (unsigned int)(a1 - 20 * v5 - 1));\n  }\n  v6 = 0LL;\n  do\n  {\n    v7 = dword_8B2378[141 * a1 + v6];\n    if ( v7 < 0 )\n      break;\n    v8 = 3 * v7;\n    if ( dword_97ABB0[3 * v7] == v4 )\n    {\n      result = 1LL;\n      if ( v3 < 0 || dword_97ABB4[v8] == v3 )\n        return result;\n    }\n    ++v6;\n  }\n  while ( v6 < 0x78 );\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x4204e0L", 
            "funcEndAddr": "0x420589L", 
            "funcName": "sub_4204E0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_420590(signed int a1, int a2)\n{\n  int v2; // edx\n  int v3; // ebp\n  int v4; // edx\n  int *v5; // rbx\n  unsigned __int64 v6; // rcx\n  __int64 v7; // rax\n  signed __int64 v8; // rdx\n  signed __int64 result; // rax\n  int v10; // edx\n  unsigned __int64 v11; // rcx\n  __int64 v12; // rax\n  signed __int64 v13; // rdx\n  int v14; // edx\n  unsigned __int64 v15; // rcx\n  __int64 v16; // rax\n  signed __int64 v17; // rdx\n\n  if ( (unsigned __int8)(byte_98A1B0[a2] - 1) >= 2u )\n  {\n    v2 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      495LL,\n      \"IS_STONE(board[what])\",\n      (unsigned int)(v2 - 1),\n      (unsigned int)(a2 - 20 * v2 - 1));\n  }\n  v3 = dword_8E947C[95 * a2];\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v4 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      471LL,\n      \"ON_BOARD1(pos)\",\n      (unsigned int)(v4 - 1),\n      (unsigned int)(a1 - 20 * v4 - 1));\n  }\n  v5 = &dword_8B2378[141 * a1];\n  v6 = 0LL;\n  do\n  {\n    v7 = v5[v6];\n    if ( v7 < 0 )\n      break;\n    v8 = 3 * v7;\n    if ( dword_97ABB0[3 * v7] == 2 )\n    {\n      result = 5LL;\n      if ( v3 < 0 || dword_97ABB4[v8] == v3 )\n        return result;\n    }\n    ++v6;\n  }\n  while ( v6 < 0x78 );\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v10 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      471LL,\n      \"ON_BOARD1(pos)\",\n      (unsigned int)(v10 - 1),\n      (unsigned int)(a1 - 20 * v10 - 1));\n  }\n  v11 = 0LL;\n  do\n  {\n    v12 = v5[v11];\n    if ( v12 < 0 )\n      break;\n    v13 = 3 * v12;\n    if ( dword_97ABB0[3 * v12] == 4 )\n    {\n      result = 4LL;\n      if ( v3 < 0 || dword_97ABB4[v13] == v3 )\n        return result;\n    }\n    ++v11;\n  }\n  while ( v11 < 0x78 );\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v14 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      471LL,\n      \"ON_BOARD1(pos)\",\n      (unsigned int)(v14 - 1),\n      (unsigned int)(a1 - 20 * v14 - 1));\n  }\n  v15 = 0LL;\n  do\n  {\n    v16 = v5[v15];\n    if ( v16 < 0 )\n      break;\n    v17 = 3 * v16;\n    if ( dword_97ABB0[3 * v16] == 6 )\n    {\n      result = 1LL;\n      if ( v3 < 0 || dword_97ABB4[v17] == v3 )\n        return result;\n    }\n    ++v15;\n  }\n  while ( v15 < 0x78 );\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x420590L", 
            "funcEndAddr": "0x4207c0L", 
            "funcName": "sub_420590"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4207C0(signed int a1, int a2)\n{\n  int v2; // edx\n  int v3; // ebp\n  int v4; // edx\n  int *v5; // rbx\n  unsigned __int64 v6; // rcx\n  __int64 v7; // rax\n  signed __int64 v8; // rdx\n  signed __int64 result; // rax\n  int v10; // edx\n  unsigned __int64 v11; // rcx\n  __int64 v12; // rax\n  signed __int64 v13; // rdx\n  int v14; // edx\n  unsigned __int64 v15; // rcx\n  __int64 v16; // rax\n  signed __int64 v17; // rdx\n\n  if ( (unsigned __int8)(byte_98A1B0[a2] - 1) >= 2u )\n  {\n    v2 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      513LL,\n      \"IS_STONE(board[what])\",\n      (unsigned int)(v2 - 1),\n      (unsigned int)(a2 - 20 * v2 - 1));\n  }\n  v3 = dword_8E947C[95 * a2];\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v4 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      471LL,\n      \"ON_BOARD1(pos)\",\n      (unsigned int)(v4 - 1),\n      (unsigned int)(a1 - 20 * v4 - 1));\n  }\n  v5 = &dword_8B2378[141 * a1];\n  v6 = 0LL;\n  do\n  {\n    v7 = v5[v6];\n    if ( v7 < 0 )\n      break;\n    v8 = 3 * v7;\n    if ( dword_97ABB0[3 * v7] == 8 )\n    {\n      result = 5LL;\n      if ( v3 < 0 || dword_97ABB4[v8] == v3 )\n        return result;\n    }\n    ++v6;\n  }\n  while ( v6 < 0x78 );\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v10 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      471LL,\n      \"ON_BOARD1(pos)\",\n      (unsigned int)(v10 - 1),\n      (unsigned int)(a1 - 20 * v10 - 1));\n  }\n  v11 = 0LL;\n  do\n  {\n    v12 = v5[v11];\n    if ( v12 < 0 )\n      break;\n    v13 = 3 * v12;\n    if ( dword_97ABB0[3 * v12] == 10 )\n    {\n      result = 4LL;\n      if ( v3 < 0 || dword_97ABB4[v13] == v3 )\n        return result;\n    }\n    ++v11;\n  }\n  while ( v11 < 0x78 );\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v14 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      471LL,\n      \"ON_BOARD1(pos)\",\n      (unsigned int)(v14 - 1),\n      (unsigned int)(a1 - 20 * v14 - 1));\n  }\n  v15 = 0LL;\n  do\n  {\n    v16 = v5[v15];\n    if ( v16 < 0 )\n      break;\n    v17 = 3 * v16;\n    if ( dword_97ABB0[3 * v16] == 12 )\n    {\n      result = 1LL;\n      if ( v3 < 0 || dword_97ABB4[v17] == v3 )\n        return result;\n    }\n    ++v15;\n  }\n  while ( v15 < 0x78 );\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x4207c0L", 
            "funcEndAddr": "0x4209f0L", 
            "funcName": "sub_4207C0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4209F0(signed int a1, int a2)\n{\n  int v2; // edx\n  int *v3; // rbx\n  unsigned __int64 v4; // rcx\n  __int64 v5; // rax\n  signed __int64 v6; // rdx\n  signed __int64 result; // rax\n  int v8; // edx\n  unsigned __int64 v9; // rcx\n  __int64 v10; // rax\n  signed __int64 v11; // rdx\n  int v12; // edx\n  unsigned __int64 v13; // rcx\n  __int64 v14; // rax\n  signed __int64 v15; // rdx\n\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v2 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      471LL,\n      \"ON_BOARD1(pos)\",\n      (unsigned int)(v2 - 1),\n      (unsigned int)(a1 - 20 * v2 - 1));\n  }\n  v3 = &dword_8B2378[141 * a1];\n  v4 = 0LL;\n  do\n  {\n    v5 = v3[v4];\n    if ( v5 < 0 )\n      break;\n    v6 = 3 * v5;\n    if ( dword_97ABB0[3 * v5] == 26 )\n    {\n      result = 5LL;\n      if ( a2 < 0 || dword_97ABB4[v6] == a2 )\n        return result;\n    }\n    ++v4;\n  }\n  while ( v4 < 0x78 );\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v8 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      471LL,\n      \"ON_BOARD1(pos)\",\n      (unsigned int)(v8 - 1),\n      (unsigned int)(a1 - 20 * v8 - 1));\n  }\n  v9 = 0LL;\n  do\n  {\n    v10 = v3[v9];\n    if ( v10 < 0 )\n      break;\n    v11 = 3 * v10;\n    if ( dword_97ABB0[3 * v10] == 28 )\n    {\n      result = 4LL;\n      if ( a2 < 0 || dword_97ABB4[v11] == a2 )\n        return result;\n    }\n    ++v9;\n  }\n  while ( v9 < 0x78 );\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v12 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      471LL,\n      \"ON_BOARD1(pos)\",\n      (unsigned int)(v12 - 1),\n      (unsigned int)(a1 - 20 * v12 - 1));\n  }\n  v13 = 0LL;\n  do\n  {\n    v14 = v3[v13];\n    if ( v14 < 0 )\n      break;\n    v15 = 3 * v14;\n    if ( dword_97ABB0[3 * v14] == 30 )\n    {\n      result = 1LL;\n      if ( a2 < 0 || dword_97ABB4[v15] == a2 )\n        return result;\n    }\n    ++v13;\n  }\n  while ( v13 < 0x78 );\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x4209f0L", 
            "funcEndAddr": "0x420bd0L", 
            "funcName": "sub_4209F0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_420BD0(signed int a1, int a2)\n{\n  int v2; // edx\n  int *v3; // rbx\n  unsigned __int64 v4; // rcx\n  __int64 v5; // rax\n  signed __int64 v6; // rdx\n  signed __int64 result; // rax\n  int v8; // edx\n  unsigned __int64 v9; // rcx\n  __int64 v10; // rax\n  signed __int64 v11; // rdx\n  int v12; // edx\n  unsigned __int64 v13; // rcx\n  __int64 v14; // rax\n  signed __int64 v15; // rdx\n\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v2 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      471LL,\n      \"ON_BOARD1(pos)\",\n      (unsigned int)(v2 - 1),\n      (unsigned int)(a1 - 20 * v2 - 1));\n  }\n  v3 = &dword_8B2378[141 * a1];\n  v4 = 0LL;\n  do\n  {\n    v5 = v3[v4];\n    if ( v5 < 0 )\n      break;\n    v6 = 3 * v5;\n    if ( dword_97ABB0[3 * v5] == 32 )\n    {\n      result = 5LL;\n      if ( a2 < 0 || dword_97ABB4[v6] == a2 )\n        return result;\n    }\n    ++v4;\n  }\n  while ( v4 < 0x78 );\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v8 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      471LL,\n      \"ON_BOARD1(pos)\",\n      (unsigned int)(v8 - 1),\n      (unsigned int)(a1 - 20 * v8 - 1));\n  }\n  v9 = 0LL;\n  do\n  {\n    v10 = v3[v9];\n    if ( v10 < 0 )\n      break;\n    v11 = 3 * v10;\n    if ( dword_97ABB0[3 * v10] == 34 )\n    {\n      result = 4LL;\n      if ( a2 < 0 || dword_97ABB4[v11] == a2 )\n        return result;\n    }\n    ++v9;\n  }\n  while ( v9 < 0x78 );\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v12 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      471LL,\n      \"ON_BOARD1(pos)\",\n      (unsigned int)(v12 - 1),\n      (unsigned int)(a1 - 20 * v12 - 1));\n  }\n  v13 = 0LL;\n  do\n  {\n    v14 = v3[v13];\n    if ( v14 < 0 )\n      break;\n    v15 = 3 * v14;\n    if ( dword_97ABB0[3 * v14] == 36 )\n    {\n      result = 1LL;\n      if ( a2 < 0 || dword_97ABB4[v15] == a2 )\n        return result;\n    }\n    ++v13;\n  }\n  while ( v13 < 0x78 );\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x420bd0L", 
            "funcEndAddr": "0x420db0L", 
            "funcName": "sub_420BD0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_420DB0(signed int a1, int a2)\n{\n  int v2; // ecx\n  _BOOL8 result; // rax\n\n  v2 = sub_4209F0(a1, a2);\n  result = 1LL;\n  if ( !v2 )\n    result = (unsigned int)sub_420BD0(a1, a2) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x420db0L", 
            "funcEndAddr": "0x420de0L", 
            "funcName": "sub_420DB0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_420DE0(unsigned int a1, signed int a2, int a3)\n{\n  int v3; // ebp\n  int v4; // edx\n  signed __int64 result; // rax\n  __int64 v6; // rdx\n  signed __int64 v7; // rsi\n\n  v3 = a3;\n  if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v4 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      652LL,\n      \"ON_BOARD1(ww)\",\n      (unsigned int)(v4 - 1),\n      (unsigned int)(a2 - 20 * v4 - 1));\n  }\n  result = 380LL * a2;\n  v6 = (unsigned int)dword_8E947C[95 * a2];\n  switch ( v3 )\n  {\n    case 1:\n      v7 = 6LL;\n      break;\n    case 4:\n      v7 = 4LL;\n      break;\n    case 5:\n      v7 = 2LL;\n      break;\n    default:\n      return result;\n  }\n  return sub_420E80(a1, v7, v6);\n}\n", 
            "funcStartAddr": "0x420de0L", 
            "funcEndAddr": "0x420e79L", 
            "funcName": "sub_420DE0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_420E80(signed int a1, int a2, int a3)\n{\n  int v3; // ebx\n  int v4; // ebp\n  int v5; // edx\n  int v6; // edx\n  signed __int64 result; // rax\n  char *v8; // rdx\n  unsigned __int64 v9; // rcx\n  __int64 v10; // rsi\n  signed __int64 v11; // rsi\n  __int64 v12; // rsi\n  signed __int64 v13; // rsi\n  const char *v14; // rdi\n  __int64 v15; // rdx\n  signed __int64 v16; // rax\n\n  v3 = a3;\n  v4 = a2;\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v5 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      392LL,\n      \"ON_BOARD1(pos)\",\n      (unsigned int)(v5 - 1),\n      (unsigned int)(a1 - 20 * v5 - 1));\n  }\n  if ( !dword_98A7F4 && byte_98A1B0[a1] )\n  {\n    v6 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      394LL,\n      \"board[pos] == EMPTY\",\n      (unsigned int)(v6 - 1),\n      (unsigned int)(a1 - 20 * v6 - 1));\n  }\n  result = 564LL * a1;\n  v8 = (char *)&unk_8B237C + 564 * a1;\n  v9 = 0LL;\n  while ( 1 )\n  {\n    v10 = *(signed int *)&v8[4 * v9 - 4];\n    if ( v10 < 0 )\n      goto LABEL_18;\n    v11 = 3 * v10;\n    if ( dword_97ABB0[v11] == v4 && dword_97ABB4[v11] == v3 )\n      return result;\n    v12 = *(signed int *)&v8[4 * v9];\n    if ( v12 < 0 )\n      break;\n    v13 = 3 * v12;\n    if ( dword_97ABB0[v13] == v4 && dword_97ABB4[v13] == v3 )\n      return result;\n    v9 += 2LL;\n    if ( v9 >= 0x78 )\n    {\n      if ( !(dword_88C264 & 0x800) )\n        return result;\n      v14 = \"Move reason at %1m (type=%d, what=%d) dropped because list full.\\n\";\n      return sub_433F90((char)v14);\n    }\n  }\n  LODWORD(v9) = v9 + 1;\nLABEL_18:\n  v15 = dword_98A7D8;\n  if ( dword_98A7D8 >= 1000LL )\n  {\n    if ( !(dword_88C264 & 0x800) )\n      return result;\n    v14 = \"Move reason at %1m (type=%d, what=%d) dropped because global list full.\\n\";\n    return sub_433F90((char)v14);\n  }\n  *(int *)((char *)&dword_8B2378[(unsigned int)v9] + result) = dword_98A7D8;\n  v16 = 4 * v15;\n  dword_97ABB0[(unsigned __int64)(3 * v16) / 4] = v4;\n  dword_97ABB4[(unsigned __int64)(3 * v16) / 4] = v3;\n  dword_97ABB8[(unsigned __int64)(3 * v16) / 4] = 0;\n  result = (unsigned int)(v15 + 1);\n  dword_98A7D8 = v15 + 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x420e80L", 
            "funcEndAddr": "0x421028L", 
            "funcName": "sub_420E80"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_421030(signed int a1, signed int a2, int a3)\n{\n  int v3; // ebp\n  int v4; // edx\n  signed __int64 result; // rax\n  int v6; // edx\n  int v7; // esi\n\n  v3 = a3;\n  if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v4 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      670LL,\n      \"ON_BOARD1(ww)\",\n      (unsigned int)(v4 - 1),\n      (unsigned int)(a2 - 20 * v4 - 1));\n  }\n  result = 380LL * a2;\n  v6 = dword_8E947C[95 * a2];\n  switch ( v3 )\n  {\n    case 1:\n      v7 = 12;\n      break;\n    case 4:\n      v7 = 10;\n      break;\n    case 5:\n      v7 = 8;\n      break;\n    default:\n      return result;\n  }\n  return sub_420E80(a1, v7, v6);\n}\n", 
            "funcStartAddr": "0x421030L", 
            "funcEndAddr": "0x4210ccL", 
            "funcName": "sub_421030"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4210D0(signed int a1, signed int a2)\n{\n  int v2; // edx\n\n  if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v2 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      690LL,\n      \"ON_BOARD1(ww)\",\n      (unsigned int)(v2 - 1),\n      (unsigned int)(a2 - 20 * v2 - 1));\n  }\n  return sub_420E80(a1, 3, dword_8E947C[95 * a2]);\n}\n", 
            "funcStartAddr": "0x4210d0L", 
            "funcEndAddr": "0x421147L", 
            "funcName": "sub_4210D0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_421150(signed int a1, signed int a2)\n{\n  signed int v2; // er14\n  int v3; // edx\n  int v4; // edx\n  signed __int64 result; // rax\n  signed int v6; // ecx\n  unsigned __int64 v7; // rdx\n  __int64 v8; // rdi\n  signed __int64 v9; // rdi\n\n  v2 = a1;\n  if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v3 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      699LL,\n      \"ON_BOARD1(ww)\",\n      (unsigned int)(v3 - 1),\n      (unsigned int)(a2 - 20 * v3 - 1));\n  }\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v4 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      439LL,\n      \"ON_BOARD1(pos)\",\n      (unsigned int)(v4 - 1),\n      (unsigned int)(a1 - 20 * v4 - 1));\n  }\n  result = 141LL * a1;\n  v6 = -1;\n  v7 = 0LL;\n  do\n  {\n    v8 = dword_8B2378[141 * v2 + v7];\n    if ( v8 < 0 )\n      break;\n    v9 = 3 * v8;\n    if ( dword_97ABB0[v9] == 3 && dword_97ABB4[v9] == dword_8E947C[95 * a2] )\n      v6 = v7;\n    ++v7;\n  }\n  while ( v7 < 0x78 );\n  if ( v6 != -1 )\n  {\n    v7 = (signed int)v7;\n    dword_8B2378[v6 + result] = dword_8B2374[(signed int)v7 + result];\n    dword_8B2374[v7 + result] = -1;\n  }\n  return result * 4;\n}\n", 
            "funcStartAddr": "0x421150L", 
            "funcEndAddr": "0x421274L", 
            "funcName": "sub_421150"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_421280(signed int a1, signed int a2)\n{\n  int v2; // edx\n\n  if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v2 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      712LL,\n      \"ON_BOARD1(ww)\",\n      (unsigned int)(v2 - 1),\n      (unsigned int)(a2 - 20 * v2 - 1));\n  }\n  return sub_420E80(a1, 9, dword_8E947C[95 * a2]);\n}\n", 
            "funcStartAddr": "0x421280L", 
            "funcEndAddr": "0x4212f7L", 
            "funcName": "sub_421280"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_421300(int a1, int a2, __int64 a3)\n{\n  char *v3; // r8\n  __int64 result; // rax\n  signed __int64 v5; // rdi\n  __int64 v6; // rcx\n  signed __int64 v7; // rcx\n  int v8; // er9\n  __int64 v9; // rcx\n  unsigned __int64 v10; // rcx\n\n  v3 = (char *)&qword_8B2330 + 564 * a1;\n  result = 0LL;\n  v5 = 18LL;\n  do\n  {\n    v6 = *(signed int *)&v3[4 * v5];\n    if ( v6 < 0 )\n      break;\n    v7 = 3 * v6;\n    if ( dword_97ABB0[v7] == 3 )\n    {\n      v8 = dword_97ABB4[v7];\n      v9 = (signed int)result;\n      result = (unsigned int)(result + 1);\n      *(_DWORD *)(a3 + 4 * v9) = v8;\n    }\n    if ( (_DWORD)result == a2 )\n      break;\n    v10 = v5++ - 17;\n  }\n  while ( v10 < 0x78 );\n  return result;\n}\n", 
            "funcStartAddr": "0x421300L", 
            "funcEndAddr": "0x42135cL", 
            "funcName": "sub_421300"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4213C0(int a1)\n{\n  int *v1; // rcx\n  signed __int64 result; // rax\n  float v3; // xmm0_4\n  unsigned __int64 v4; // rdx\n  signed __int64 v5; // r8\n  __int64 v6; // rsi\n  signed __int64 v7; // rdi\n  unsigned __int64 v8; // rsi\n  __int64 v9; // rdi\n\n  v1 = &dword_8B2378[141 * a1];\n  result = 0xFFFFFFFFLL;\n  v3 = 0.0;\n  v4 = 0LL;\n  v5 = 375205658624LL;\n  do\n  {\n    v6 = v1[v4];\n    if ( v6 < 0 )\n      break;\n    v7 = 3 * v6;\n    v8 = (unsigned int)dword_97ABB0[3 * v6];\n    if ( v8 <= 0x26 && _bittest64(&v5, v8) )\n    {\n      v9 = dword_97ABB4[v7];\n      if ( *((float *)&xmmword_954FC0 + 19 * v9) > v3 )\n      {\n        result = (unsigned int)v9;\n        v3 = *((float *)&xmmword_954FC0 + 19 * v9);\n      }\n    }\n    ++v4;\n  }\n  while ( v4 < 0x78 );\n  return result;\n}\n", 
            "funcStartAddr": "0x4213c0L", 
            "funcEndAddr": "0x421439L", 
            "funcName": "sub_4213C0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_421440(signed int a1, signed int a2, signed int a3)\n{\n  signed int v3; // er15\n  int v4; // edx\n  int v5; // edx\n  signed __int64 v6; // rbx\n  signed __int64 v7; // rbp\n  signed __int64 result; // rax\n  signed int v9; // ebx\n  int v10; // ebp\n  int v11; // edx\n  signed __int64 v12; // rax\n  __int64 v13; // rax\n\n  v3 = a3;\n  if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v4 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      811LL,\n      \"ON_BOARD1(w1)\",\n      (unsigned int)(v4 - 1),\n      (unsigned int)(a2 - 20 * v4 - 1));\n  }\n  if ( (unsigned int)a3 > 0x1A4 || byte_98A1B0[a3] == 3 )\n  {\n    v5 = (1717986919LL * a3 >> 35) + ((unsigned __int64)(1717986919LL * a3) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      812LL,\n      \"ON_BOARD1(w2)\",\n      (unsigned int)(v5 - 1),\n      (unsigned int)(v3 - 20 * v5 - 1));\n  }\n  v6 = 95LL * a2;\n  v7 = 95LL * a3;\n  if ( dword_8E9470[v6] != dword_8E9470[v7] )\n    sub_4340E0(\"engine/move_reasons.c\", 813LL, \"worm[w1].color == worm[w2].color\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  result = (unsigned int)dword_8E947C[v6];\n  v9 = dword_8E947C[v7];\n  if ( (_DWORD)result != v9 )\n  {\n    v10 = result;\n    if ( (signed int)result > v9 )\n      v10 = v9;\n    if ( (signed int)result >= v9 )\n      v9 = result;\n    v11 = dword_98A7C8;\n    if ( dword_98A7C8 > 0LL )\n    {\n      v12 = 0LL;\n      do\n      {\n        if ( dword_983560[v12] == v10 && dword_984470[v12] == v9 )\n        {\n          v11 = v12;\n          goto LABEL_23;\n        }\n        ++v12;\n      }\n      while ( v12 < dword_98A7C8 );\n      if ( dword_98A7C8 >= 962 )\n        sub_4340E0(\"engine/move_reasons.c\", 150LL, \"next_connection < 4*2*19*19/3\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n    }\n    v13 = dword_98A7C8;\n    dword_983560[v13] = v10;\n    dword_984470[v13] = v9;\n    dword_98A7C8 = v11 + 1;\nLABEL_23:\n    result = sub_420E80(a1, 14, v11);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x421440L", 
            "funcEndAddr": "0x4215edL", 
            "funcName": "sub_421440"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4215F0(signed int a1, signed int a2, signed int a3)\n{\n  signed int v3; // er15\n  int v4; // edx\n  int v5; // edx\n  signed __int64 v6; // r12\n  signed __int64 v7; // r15\n  signed __int64 result; // rax\n  signed int v9; // ebx\n  int v10; // ebp\n  int v11; // edx\n  __int64 v12; // rax\n\n  v3 = a3;\n  if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v4 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      831LL,\n      \"ON_BOARD1(w1)\",\n      (unsigned int)(v4 - 1),\n      (unsigned int)(a2 - 20 * v4 - 1));\n  }\n  if ( (unsigned int)a3 > 0x1A4 || byte_98A1B0[a3] == 3 )\n  {\n    v5 = (1717986919LL * a3 >> 35) + ((unsigned __int64)(1717986919LL * a3) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      832LL,\n      \"ON_BOARD1(w2)\",\n      (unsigned int)(v5 - 1),\n      (unsigned int)(v3 - 20 * v5 - 1));\n  }\n  v6 = 95LL * a2;\n  v7 = 95LL * a3;\n  if ( dword_8E9470[v6] != dword_8E9470[95 * a3] )\n    sub_4340E0(\"engine/move_reasons.c\", 833LL, \"worm[w1].color == worm[w2].color\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  result = (unsigned int)dword_8E947C[v6];\n  v9 = dword_8E947C[v7];\n  if ( (_DWORD)result != v9 )\n  {\n    v10 = result;\n    if ( (signed int)result > v9 )\n      v10 = dword_8E947C[v7];\n    if ( (signed int)result >= v9 )\n      v9 = result;\n    v11 = dword_98A7C8;\n    if ( dword_98A7C8 <= 0LL )\n    {\nLABEL_21:\n      v12 = dword_98A7C8;\n      dword_983560[v12] = v10;\n      dword_984470[v12] = v9;\n      result = (unsigned int)(v11 + 1);\n      dword_98A7C8 = v11 + 1;\n      if ( dword_8E94D4[v6] )\n      {\nLABEL_22:\n        if ( !dword_8E9524[v6] )\n          return result;\n      }\n    }\n    else\n    {\n      result = 0LL;\n      while ( dword_983560[result] != v10 || dword_984470[result] != v9 )\n      {\n        if ( ++result >= dword_98A7C8 )\n        {\n          if ( dword_98A7C8 >= 962 )\n            sub_4340E0(\"engine/move_reasons.c\", 150LL, \"next_connection < 4*2*19*19/3\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n          goto LABEL_21;\n        }\n      }\n      v11 = result;\n      if ( dword_8E94D4[v6] )\n        goto LABEL_22;\n    }\n    if ( !dword_8E94D4[v7] || dword_8E9524[v7] )\n      result = sub_420E80(a1, 16, v11);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4215f0L", 
            "funcEndAddr": "0x4217ddL", 
            "funcName": "sub_4215F0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4217E0(signed int a1)\n{\n  return sub_420E80(a1, 70, 0);\n}\n", 
            "funcStartAddr": "0x4217e0L", 
            "funcEndAddr": "0x4217ecL", 
            "funcName": "sub_4217E0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4217F0(signed int a1, signed int a2)\n{\n  int v2; // edx\n\n  if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v2 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      873LL,\n      \"ON_BOARD1(dr)\",\n      (unsigned int)(v2 - 1),\n      (unsigned int)(a2 - 20 * v2 - 1));\n  }\n  return sub_420E80(a1, 18, *((_DWORD *)&xmmword_954FB0 + 19 * a2 + 2));\n}\n", 
            "funcStartAddr": "0x4217f0L", 
            "funcEndAddr": "0x421864L", 
            "funcName": "sub_4217F0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_421870(signed int a1, signed int a2)\n{\n  int v2; // edx\n\n  if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v2 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      887LL,\n      \"ON_BOARD1(dr)\",\n      (unsigned int)(v2 - 1),\n      (unsigned int)(a2 - 20 * v2 - 1));\n  }\n  return sub_420E80(a1, 19, *((_DWORD *)&xmmword_954FB0 + 19 * a2 + 2));\n}\n", 
            "funcStartAddr": "0x421870L", 
            "funcEndAddr": "0x4218e4L", 
            "funcName": "sub_421870"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4218F0(signed int a1, signed int a2, int a3)\n{\n  int v3; // ebp\n  int v4; // edx\n  unsigned __int64 v5; // rbx\n  int v6; // edx\n  int v7; // edx\n  __int64 v8; // rax\n  __int64 v9; // rax\n  unsigned __int64 v10; // rbx\n  int v11; // edx\n\n  v3 = a3;\n  if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v4 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      900LL,\n      \"ON_BOARD1(eyespace)\",\n      (unsigned int)(v4 - 1),\n      (unsigned int)(a2 - 20 * v4 - 1));\n  }\n  if ( a3 == 1 )\n  {\n    v5 = dword_97737C[9 * a2];\n    if ( v5 > 0x1A4 || byte_98A1B0[v5] == 3 )\n    {\n      v6 = (1717986919LL * (signed int)v5 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)v5) >> 63);\n      sub_4340E0(\n        \"engine/move_reasons.c\",\n        242LL,\n        \"ON_BOARD1(eye)\",\n        (unsigned int)(v6 - 1),\n        (unsigned int)(v5 - 20 * v6 - 1));\n    }\n    v7 = dword_98A7D0;\n    if ( dword_98A7D0 > 0LL )\n    {\n      v8 = 0LL;\n      while ( dword_989EE0[v8] != (_DWORD)v5 || dword_989C10[v8] != 1 )\n      {\n        if ( ++v8 >= dword_98A7D0 )\n        {\n          if ( dword_98A7D0 >= 180 )\n            sub_4340E0(\"engine/move_reasons.c\", 249LL, \"next_eye < 19*19/2\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n          goto LABEL_15;\n        }\n      }\nLABEL_28:\n      v7 = v8;\n      return sub_420E80(a1, 54, v7);\n    }\nLABEL_15:\n    v9 = dword_98A7D0;\n    dword_989EE0[v9] = v5;\n    dword_989C10[v9] = 1;\n  }\n  else\n  {\n    v10 = dword_96CABC[9 * a2];\n    if ( v10 > 0x1A4 || byte_98A1B0[v10] == 3 )\n    {\n      v11 = (1717986919LL * (signed int)v10 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)v10) >> 63);\n      sub_4340E0(\n        \"engine/move_reasons.c\",\n        242LL,\n        \"ON_BOARD1(eye)\",\n        (unsigned int)(v11 - 1),\n        (unsigned int)(v10 - 20 * v11 - 1));\n    }\n    v7 = dword_98A7D0;\n    if ( dword_98A7D0 > 0LL )\n    {\n      v8 = 0LL;\n      while ( dword_989EE0[v8] != (_DWORD)v10 || dword_989C10[v8] != v3 )\n      {\n        if ( ++v8 >= dword_98A7D0 )\n        {\n          if ( dword_98A7D0 >= 180 )\n            sub_4340E0(\"engine/move_reasons.c\", 249LL, \"next_eye < 19*19/2\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n          goto LABEL_26;\n        }\n      }\n      goto LABEL_28;\n    }\nLABEL_26:\n    v9 = dword_98A7D0;\n    dword_989EE0[v9] = v10;\n    dword_989C10[v9] = v3;\n  }\n  dword_98A7D0 = v9 + 1;\n  return sub_420E80(a1, 54, v7);\n}\n", 
            "funcStartAddr": "0x4218f0L", 
            "funcEndAddr": "0x421b27L", 
            "funcName": "sub_4218F0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_421B30(signed int a1, int a2, signed int a3, int a4, signed int a5)\n{\n  signed int v5; // ebp\n  int v6; // edx\n  signed __int64 result; // rax\n  int v8; // edx\n  signed __int64 v9; // rcx\n  signed __int64 v10; // rcx\n  signed int v11; // er13\n  int v12; // ebp\n  int v13; // edx\n  signed __int64 v14; // rax\n  int *v15; // rcx\n  signed __int64 v16; // rcx\n\n  v5 = a3;\n  if ( (unsigned int)a3 > 0x1A4 || byte_98A1B0[a3] == 3 )\n  {\n    v6 = (1717986919LL * a3 >> 35) + ((unsigned __int64)(1717986919LL * a3) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      931LL,\n      \"ON_BOARD1(target1)\",\n      (unsigned int)(v6 - 1),\n      (unsigned int)(-20 * v6 + v5 - 1));\n  }\n  if ( (unsigned int)a5 > 0x1A4 || (result = a5, byte_98A1B0[a5] == 3) )\n  {\n    v8 = (1717986919LL * a5 >> 35) + ((unsigned __int64)(1717986919LL * a5) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      932LL,\n      \"ON_BOARD1(target2)\",\n      (unsigned int)(v8 - 1),\n      (unsigned int)(a5 - 20 * v8 - 1));\n  }\n  if ( a2 != a4 || a3 != a5 )\n  {\n    if ( a2 != 1 )\n      sub_4340E0(\"engine/move_reasons.c\", 937LL, \"reason1 == 1\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n    if ( a4 != 1 )\n      sub_4340E0(\"engine/move_reasons.c\", 938LL, \"reason2 == 1\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n    v9 = 95LL * a3;\n    result = (unsigned int)dword_8E947C[v9];\n    if ( !dword_8E94D4[v9] || dword_8E9524[v9] )\n    {\n      v10 = 95LL * a5;\n      v11 = dword_8E947C[v10];\n      if ( !dword_8E94D4[v10] || dword_8E9524[v10] )\n      {\n        v12 = result;\n        if ( (signed int)result > v11 )\n          v12 = dword_8E947C[v10];\n        if ( (signed int)result >= v11 )\n          v11 = result;\n        v13 = dword_98A7CC;\n        if ( dword_98A7CC > 0LL )\n        {\n          v14 = 0LL;\n          v15 = dword_98696C;\n          do\n          {\n            if ( *(v15 - 3) == 1 && *(v15 - 2) == v12 && *(v15 - 1) == 1 && *v15 == v11 )\n            {\n              v13 = v14;\n              goto LABEL_32;\n            }\n            ++v14;\n            v15 += 4;\n          }\n          while ( v14 < dword_98A7CC );\n          if ( dword_98A7CC >= 100 )\n            sub_4340E0(\"engine/move_reasons.c\", 178LL, \"next_either < 100\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n        }\n        v16 = 4LL * dword_98A7CC;\n        dword_986960[v16] = 1;\n        dword_986964[v16] = v12;\n        dword_986968[v16] = 1;\n        dword_98696C[v16] = v11;\n        dword_98A7CC = v13 + 1;\nLABEL_32:\n        result = sub_420E80(a1, 100, v13);\n      }\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x421b30L", 
            "funcEndAddr": "0x421d83L", 
            "funcName": "sub_421B30"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_421D90(signed int a1, int a2, signed int a3, int a4, signed int a5)\n{\n  signed int v5; // er13\n  int v6; // edx\n  signed __int64 result; // rax\n  int v8; // edx\n  int v9; // eax\n  int v10; // er14\n  int v11; // ebp\n  int v12; // edx\n  signed __int64 v13; // rax\n  int *v14; // rcx\n  signed __int64 v15; // rcx\n\n  v5 = a3;\n  if ( (unsigned int)a3 > 0x1A4 || byte_98A1B0[a3] == 3 )\n  {\n    v6 = (1717986919LL * a3 >> 35) + ((unsigned __int64)(1717986919LL * a3) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1002LL,\n      \"ON_BOARD1(target1)\",\n      (unsigned int)(v6 - 1),\n      (unsigned int)(-20 * v6 + v5 - 1));\n  }\n  if ( (unsigned int)a5 > 0x1A4 || (result = a5, byte_98A1B0[a5] == 3) )\n  {\n    v8 = (1717986919LL * a5 >> 35) + ((unsigned __int64)(1717986919LL * a5) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1003LL,\n      \"ON_BOARD1(target2)\",\n      (unsigned int)(v8 - 1),\n      (unsigned int)(a5 - 20 * v8 - 1));\n  }\n  if ( a2 != a4 || a3 != a5 )\n  {\n    if ( a2 != 2 )\n      sub_4340E0(\"engine/move_reasons.c\", 1008LL, \"reason1 == 2\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n    if ( a4 != 2 )\n      sub_4340E0(\"engine/move_reasons.c\", 1009LL, \"reason2 == 2\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n    v9 = dword_8E947C[95 * a3];\n    v10 = dword_8E947C[95 * a5];\n    v11 = dword_8E947C[95 * a3];\n    if ( v9 > v10 )\n      v11 = dword_8E947C[95 * a5];\n    if ( v9 >= v10 )\n      v10 = dword_8E947C[95 * a3];\n    v12 = dword_98A7C4;\n    if ( dword_98A7C4 > 0LL )\n    {\n      v13 = 0LL;\n      v14 = dword_98632C;\n      do\n      {\n        if ( *(v14 - 3) == 2 && *(v14 - 2) == v11 && *(v14 - 1) == 2 && *v14 == v10 )\n        {\n          v12 = v13;\n          goto LABEL_27;\n        }\n        ++v13;\n        v14 += 4;\n      }\n      while ( v13 < dword_98A7C4 );\n      if ( dword_98A7C4 >= 100 )\n        sub_4340E0(\"engine/move_reasons.c\", 207LL, \"next_all < 100\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n    }\n    v15 = 4LL * dword_98A7C4;\n    dword_986320[v15] = 2;\n    dword_986324[v15] = v11;\n    dword_986328[v15] = 2;\n    dword_98632C[v15] = v10;\n    dword_98A7C4 = v12 + 1;\nLABEL_27:\n    result = sub_420E80(a1, 102, v12);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x421d90L", 
            "funcEndAddr": "0x421fb3L", 
            "funcName": "sub_421D90"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_421FC0(signed int a1, int a2, int a3)\n{\n  int v3; // ebp\n  int v4; // er12\n  int v5; // ebx\n  signed __int64 v6; // rax\n  int *v7; // rcx\n  signed __int64 v8; // rcx\n  int v9; // edx\n\n  v3 = *((_DWORD *)&xmmword_954FB0 + 19 * a2 + 2);\n  v4 = dword_8E947C[95 * a3];\n  v5 = dword_98A7CC;\n  if ( dword_98A7CC <= 0LL )\n    goto LABEL_8;\n  v6 = 0LL;\n  v7 = dword_98696C;\n  do\n  {\n    if ( *(v7 - 2) == v3 && *v7 == v4 )\n    {\n      v5 = v6;\n      if ( !a3 )\n        goto LABEL_9;\n      return sub_420E80(a1, 60, v5);\n    }\n    ++v6;\n    v7 += 4;\n  }\n  while ( v6 < dword_98A7CC );\n  if ( dword_98A7CC >= 100 )\n    sub_4340E0(\"engine/move_reasons.c\", 227LL, \"next_either < 100\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\nLABEL_8:\n  v8 = 4LL * dword_98A7CC;\n  dword_986964[v8] = v3;\n  dword_98696C[v8] = v4;\n  dword_98A7CC = v5 + 1;\n  if ( !a3 )\n  {\nLABEL_9:\n    v9 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1040LL,\n      \"target2 != NO_MOVE\",\n      (unsigned int)(v9 - 1),\n      (unsigned int)(a1 - 20 * v9 - 1));\n  }\n  return sub_420E80(a1, 60, v5);\n}\n", 
            "funcStartAddr": "0x421fc0L", 
            "funcEndAddr": "0x4220ccL", 
            "funcName": "sub_421FC0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4220D0(signed int a1, int a2, int a3)\n{\n  int v3; // ebp\n  int v4; // er12\n  int v5; // ebx\n  signed __int64 v6; // rax\n  int *v7; // rcx\n  signed __int64 v8; // rcx\n  int v9; // edx\n\n  v3 = *((_DWORD *)&xmmword_954FB0 + 19 * a2 + 2);\n  v4 = dword_8E947C[95 * a3];\n  v5 = dword_98A7CC;\n  if ( dword_98A7CC <= 0LL )\n    goto LABEL_8;\n  v6 = 0LL;\n  v7 = dword_98696C;\n  do\n  {\n    if ( *(v7 - 2) == v3 && *v7 == v4 )\n    {\n      v5 = v6;\n      if ( !a3 )\n        goto LABEL_9;\n      return sub_420E80(a1, 62, v5);\n    }\n    ++v6;\n    v7 += 4;\n  }\n  while ( v6 < dword_98A7CC );\n  if ( dword_98A7CC >= 100 )\n    sub_4340E0(\"engine/move_reasons.c\", 227LL, \"next_either < 100\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\nLABEL_8:\n  v8 = 4LL * dword_98A7CC;\n  dword_986964[v8] = v3;\n  dword_98696C[v8] = v4;\n  dword_98A7CC = v5 + 1;\n  if ( !a3 )\n  {\nLABEL_9:\n    v9 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1050LL,\n      \"target2 != NO_MOVE\",\n      (unsigned int)(v9 - 1),\n      (unsigned int)(a1 - 20 * v9 - 1));\n  }\n  return sub_420E80(a1, 62, v5);\n}\n", 
            "funcStartAddr": "0x4220d0L", 
            "funcEndAddr": "0x4221dcL", 
            "funcName": "sub_4220D0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4221E0(signed int a1)\n{\n  return sub_420E80(a1, 20, 0);\n}\n", 
            "funcStartAddr": "0x4221e0L", 
            "funcEndAddr": "0x4221ecL", 
            "funcName": "sub_4221E0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4221F0(signed int a1)\n{\n  return sub_420E80(a1, 22, 0);\n}\n", 
            "funcStartAddr": "0x4221f0L", 
            "funcEndAddr": "0x4221fcL", 
            "funcName": "sub_4221F0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_422200(signed int a1)\n{\n  return sub_420E80(a1, 24, 0);\n}\n", 
            "funcStartAddr": "0x422200L", 
            "funcEndAddr": "0x42220cL", 
            "funcName": "sub_422200"
        }, 
        {
            "decompiledFuncCode": "int *__fastcall sub_422210(signed int a1, float a2)\n{\n  int *result; // rax\n  int v3; // edx\n  signed __int64 v4; // rax\n  float v5; // xmm0_4\n  signed __int64 v6; // rax\n\n  if ( (unsigned int)a1 > 0x1A4 || (result = (int *)a1, byte_98A1B0[a1] == 3) )\n  {\n    v3 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1095LL,\n      \"ON_BOARD1(pos)\",\n      (unsigned int)(v3 - 1),\n      (unsigned int)(a1 - 20 * v3 - 1));\n  }\n  if ( a2 <= 0.0 )\n  {\n    if ( a2 >= 0.0 )\n      return result;\n    LODWORD(v5) = LODWORD(a2) ^ xmmword_4AE070;\n    v6 = 141LL * a1;\n    if ( v5 > *(float *)&dword_8B2348[v6] )\n      *(float *)&dword_8B2348[v6] = v5;\n    result = &dword_8B2350[v6];\n  }\n  else\n  {\n    v4 = 141LL * a1;\n    if ( a2 > *(float *)&dword_8B2344[v4] )\n      *(float *)&dword_8B2344[v4] = a2;\n    result = &dword_8B234C[v4];\n  }\n  ++*result;\n  return result;\n}\n", 
            "funcStartAddr": "0x422210L", 
            "funcEndAddr": "0x4222deL", 
            "funcName": "sub_422210"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4222E0(int a1)\n{\n  signed __int64 result; // rax\n\n  result = 141LL * a1;\n  dword_8B255C[result] = 1;\n  return result * 4;\n}\n", 
            "funcStartAddr": "0x4222e0L", 
            "funcEndAddr": "0x4222f5L", 
            "funcName": "sub_4222E0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_422300(signed int a1, int a2)\n{\n  unsigned __int64 v2; // rbx\n  int v3; // edx\n\n  v2 = *((signed int *)&xmmword_954FB0 + 19 * a2 + 2);\n  if ( v2 > 0x1A4 || byte_98A1B0[v2] == 3 )\n  {\n    v3 = ((signed __int64)(1717986919 * v2) >> 35) + (1717986919 * v2 >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1126LL,\n      \"ON_BOARD1(dr)\",\n      (unsigned int)(v3 - 1),\n      (unsigned int)(v2 - 20 * v3 - 1));\n  }\n  return sub_420E80(a1, 44, v2);\n}\n", 
            "funcStartAddr": "0x422300L", 
            "funcEndAddr": "0x422378L", 
            "funcName": "sub_422300"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_422380(signed int a1, int a2)\n{\n  unsigned __int64 v2; // rbx\n  int v3; // edx\n\n  v2 = *((signed int *)&xmmword_954FB0 + 19 * a2 + 2);\n  if ( v2 > 0x1A4 || byte_98A1B0[v2] == 3 )\n  {\n    v3 = ((signed __int64)(1717986919 * v2) >> 35) + (1717986919 * v2 >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1138LL,\n      \"ON_BOARD1(dr)\",\n      (unsigned int)(v3 - 1),\n      (unsigned int)(v2 - 20 * v3 - 1));\n  }\n  return sub_420E80(a1, 46, v2);\n}\n", 
            "funcStartAddr": "0x422380L", 
            "funcEndAddr": "0x4223f8L", 
            "funcName": "sub_422380"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_422400(signed int a1, int a2, int a3)\n{\n  signed __int64 result; // rax\n  unsigned __int64 v4; // rbx\n  int v5; // edx\n  int v6; // esi\n\n  result = 76LL * a2;\n  v4 = *((signed int *)&xmmword_954FB0 + 19 * a2 + 2);\n  if ( v4 > 0x1A4 || byte_98A1B0[v4] == 3 )\n  {\n    v5 = ((signed __int64)(1717986919 * v4) >> 35) + (1717986919 * v4 >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1151LL,\n      \"ON_BOARD1(dr)\",\n      (unsigned int)(v5 - 1),\n      (unsigned int)(v4 - 20 * v5 - 1));\n  }\n  switch ( a3 )\n  {\n    case 1:\n      v6 = 30;\n      break;\n    case 4:\n      v6 = 28;\n      break;\n    case 5:\n      v6 = 26;\n      break;\n    default:\n      return result;\n  }\n  return sub_420E80(a1, v6, v4);\n}\n", 
            "funcStartAddr": "0x422400L", 
            "funcEndAddr": "0x42249dL", 
            "funcName": "sub_422400"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4224A0(signed int a1, int a2, int a3)\n{\n  signed __int64 result; // rax\n  unsigned __int64 v4; // rbx\n  int v5; // edx\n  int v6; // esi\n\n  result = 76LL * a2;\n  v4 = *((signed int *)&xmmword_954FB0 + 19 * a2 + 2);\n  if ( v4 > 0x1A4 || byte_98A1B0[v4] == 3 )\n  {\n    v5 = ((signed __int64)(1717986919 * v4) >> 35) + (1717986919 * v4 >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1169LL,\n      \"ON_BOARD1(dr)\",\n      (unsigned int)(v5 - 1),\n      (unsigned int)(v4 - 20 * v5 - 1));\n  }\n  switch ( a3 )\n  {\n    case 1:\n      v6 = 36;\n      break;\n    case 4:\n      v6 = 34;\n      break;\n    case 5:\n      v6 = 32;\n      break;\n    default:\n      return result;\n  }\n  return sub_420E80(a1, v6, v4);\n}\n", 
            "funcStartAddr": "0x4224a0L", 
            "funcEndAddr": "0x42253dL", 
            "funcName": "sub_4224A0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_422540(signed int a1, int a2)\n{\n  unsigned __int64 v2; // rbx\n  int v3; // edx\n  signed __int64 result; // rax\n\n  v2 = *((signed int *)&xmmword_954FB0 + 19 * a2 + 2);\n  if ( v2 > 0x1A4 || byte_98A1B0[v2] == 3 )\n  {\n    v3 = ((signed __int64)(1717986919 * v2) >> 35) + (1717986919 * v2 >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1190LL,\n      \"ON_BOARD1(dr)\",\n      (unsigned int)(v3 - 1),\n      (unsigned int)(v2 - 20 * v3 - 1));\n  }\n  sub_420E80(a1, 27, *((_DWORD *)&xmmword_954FB0 + 19 * v2 + 2));\n  result = 141LL * a1;\n  dword_8B255C[result] = 1;\n  return result * 4;\n}\n", 
            "funcStartAddr": "0x422540L", 
            "funcEndAddr": "0x4225d5L", 
            "funcName": "sub_422540"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4225E0(signed int a1, int a2)\n{\n  unsigned __int64 v2; // rbx\n  int v3; // edx\n\n  v2 = *((signed int *)&xmmword_954FB0 + 19 * a2 + 2);\n  if ( v2 > 0x1A4 || byte_98A1B0[v2] == 3 )\n  {\n    v3 = ((signed __int64)(1717986919 * v2) >> 35) + (1717986919 * v2 >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1203LL,\n      \"ON_BOARD1(dr)\",\n      (unsigned int)(v3 - 1),\n      (unsigned int)(v2 - 20 * v3 - 1));\n  }\n  return sub_420E80(a1, 42, *((_DWORD *)&xmmword_954FB0 + 19 * v2 + 2));\n}\n", 
            "funcStartAddr": "0x4225e0L", 
            "funcEndAddr": "0x422660L", 
            "funcName": "sub_4225E0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_422660(signed int a1, int a2)\n{\n  unsigned __int64 v2; // rbx\n  int v3; // edx\n\n  v2 = *((signed int *)&xmmword_954FB0 + 19 * a2 + 2);\n  if ( v2 > 0x1A4 || byte_98A1B0[v2] == 3 )\n  {\n    v3 = ((signed __int64)(1717986919 * v2) >> 35) + (1717986919 * v2 >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1215LL,\n      \"ON_BOARD1(dr)\",\n      (unsigned int)(v3 - 1),\n      (unsigned int)(v2 - 20 * v3 - 1));\n  }\n  return sub_420E80(a1, 40, *((_DWORD *)&xmmword_954FB0 + 19 * v2 + 2));\n}\n", 
            "funcStartAddr": "0x422660L", 
            "funcEndAddr": "0x4226e0L", 
            "funcName": "sub_422660"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4226E0(signed int a1, int a2)\n{\n  unsigned __int64 v2; // rbx\n  int v3; // edx\n  signed __int64 result; // rax\n\n  v2 = *((signed int *)&xmmword_954FB0 + 19 * a2 + 2);\n  if ( v2 > 0x1A4 || byte_98A1B0[v2] == 3 )\n  {\n    v3 = ((signed __int64)(1717986919 * v2) >> 35) + (1717986919 * v2 >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1231LL,\n      \"ON_BOARD1(dr)\",\n      (unsigned int)(v3 - 1),\n      (unsigned int)(v2 - 20 * v3 - 1));\n  }\n  sub_420E80(a1, 33, *((_DWORD *)&xmmword_954FB0 + 19 * v2 + 2));\n  result = 141LL * a1;\n  dword_8B255C[result] = 1;\n  return result * 4;\n}\n", 
            "funcStartAddr": "0x4226e0L", 
            "funcEndAddr": "0x422775L", 
            "funcName": "sub_4226E0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_422780(signed int a1, int a2)\n{\n  return sub_420E80(a1, 50, a2);\n}\n", 
            "funcStartAddr": "0x422780L", 
            "funcEndAddr": "0x42278eL", 
            "funcName": "sub_422780"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_422790(signed int a1, int a2)\n{\n  return sub_420E80(a1, 52, a2);\n}\n", 
            "funcStartAddr": "0x422790L", 
            "funcEndAddr": "0x42279eL", 
            "funcName": "sub_422790"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4227A0(signed int a1, signed int a2)\n{\n  int v2; // edx\n\n  if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v2 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1268LL,\n      \"ON_BOARD1(dr)\",\n      (unsigned int)(v2 - 1),\n      (unsigned int)(a2 - 20 * v2 - 1));\n  }\n  return sub_420E80(a1, 38, *((_DWORD *)&xmmword_954FB0 + 19 * a2 + 2));\n}\n", 
            "funcStartAddr": "0x4227a0L", 
            "funcEndAddr": "0x422814L", 
            "funcName": "sub_4227A0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_422820(signed int a1, float a2)\n{\n  int v2; // edx\n  signed __int64 result; // rax\n\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v2 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1278LL,\n      \"ON_BOARD1(pos)\",\n      (unsigned int)(v2 - 1),\n      (unsigned int)(a1 - 20 * v2 - 1));\n  }\n  result = 564LL * a1;\n  if ( a2 > *(float *)&dword_8B2354[141 * a1] )\n  {\n    result += (signed __int64)dword_8B2354;\n    *(float *)result = a2;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x422820L", 
            "funcEndAddr": "0x4228a5L", 
            "funcName": "sub_422820"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4228B0(signed int a1, float a2)\n{\n  int v2; // edx\n  signed __int64 result; // rax\n\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v2 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1289LL,\n      \"ON_BOARD1(pos)\",\n      (unsigned int)(v2 - 1),\n      (unsigned int)(a1 - 20 * v2 - 1));\n  }\n  result = 564LL * a1;\n  if ( a2 > *(float *)&dword_8B235C[141 * a1] )\n  {\n    result += (signed __int64)dword_8B235C;\n    *(float *)result = a2;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4228b0L", 
            "funcEndAddr": "0x422935L", 
            "funcName": "sub_4228B0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_422940(signed int a1, float a2)\n{\n  int v2; // edx\n  signed __int64 result; // rax\n\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v2 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1300LL,\n      \"ON_BOARD1(pos)\",\n      (unsigned int)(v2 - 1),\n      (unsigned int)(a1 - 20 * v2 - 1));\n  }\n  result = 0LL;\n  if ( a2 > *(float *)&dword_8B2364[141 * a1] )\n  {\n    *(float *)&dword_8B2364[141 * a1] = a2;\n    result = 1LL;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x422940L", 
            "funcEndAddr": "0x4229ccL", 
            "funcName": "sub_422940"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4229D0(signed int a1, float a2)\n{\n  int v2; // edx\n  signed __int64 result; // rax\n\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v2 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1314LL,\n      \"ON_BOARD1(pos)\",\n      (unsigned int)(v2 - 1),\n      (unsigned int)(a1 - 20 * v2 - 1));\n  }\n  result = 564LL * a1;\n  if ( *(float *)&dword_8B2368[141 * a1] > a2 )\n  {\n    result += (signed __int64)dword_8B2368;\n    *(float *)result = a2;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4229d0L", 
            "funcEndAddr": "0x422a59L", 
            "funcName": "sub_4229D0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_422A60(signed int a1, float a2)\n{\n  int v2; // edx\n  signed __int64 result; // rax\n\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v2 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1325LL,\n      \"ON_BOARD1(pos)\",\n      (unsigned int)(v2 - 1),\n      (unsigned int)(a1 - 20 * v2 - 1));\n  }\n  result = 564LL * a1;\n  if ( a2 > *(float *)&dword_8B236C[141 * a1] )\n  {\n    result += (signed __int64)dword_8B236C;\n    *(float *)result = a2;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x422a60L", 
            "funcEndAddr": "0x422ae5L", 
            "funcName": "sub_422A60"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_422AF0(signed int a1, float a2)\n{\n  int v2; // edx\n  signed __int64 result; // rax\n\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v2 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1336LL,\n      \"ON_BOARD1(pos)\",\n      (unsigned int)(v2 - 1),\n      (unsigned int)(a1 - 20 * v2 - 1));\n  }\n  result = 564LL * a1;\n  if ( *(float *)&dword_8B2370[141 * a1] > a2 )\n  {\n    result += (signed __int64)dword_8B2370;\n    *(float *)result = a2;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x422af0L", 
            "funcEndAddr": "0x422b79L", 
            "funcName": "sub_422AF0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_422B80(signed int a1, signed int a2)\n{\n  int v2; // er14\n  int v3; // edx\n  signed __int64 result; // rax\n  int v5; // edx\n  int v6; // edx\n  int v7; // edx\n  int v8; // ebp\n  int v9; // edx\n\n  v2 = a2;\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v3 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1351LL,\n      \"ON_BOARD1(from)\",\n      (unsigned int)(v3 - 1),\n      (unsigned int)(a1 - 20 * v3 - 1));\n  }\n  if ( (unsigned int)a2 > 0x1A4 || (result = a2, byte_98A1B0[a2] == 3) )\n  {\n    v5 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1352LL,\n      \"ON_BOARD1(to)\",\n      (unsigned int)(v5 - 1),\n      (unsigned int)(a2 - 20 * v5 - 1));\n  }\n  if ( !byte_98A1B0[a1] )\n  {\n    if ( byte_98A1B0[a2] )\n    {\n      v6 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n      sub_4340E0(\n        \"engine/move_reasons.c\",\n        1356LL,\n        \"board[to] == EMPTY\",\n        (unsigned int)(v6 - 1),\n        (unsigned int)(a2 - 20 * v6 - 1));\n    }\n    result = dword_9888A0[a1];\n    if ( dword_9888A0[a1] )\n    {\n      if ( (_DWORD)result != a2 && dword_9888A0[result] != a2 )\n      {\n        v7 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n        sub_4340E0(\n          \"engine/move_reasons.c\",\n          1367LL,\n          \"dd == to || to == replacement_map[dd]\",\n          (unsigned int)(v7 - 1),\n          (unsigned int)(a1 - 20 * v7 - 1));\n      }\n    }\n    else\n    {\n      v8 = dword_9888A0[a2];\n      if ( dword_88C268 )\n        sub_433F90((unsigned __int64)\"Move at %1m is replaced by %1m.\\n\");\n      if ( v8 == a1 )\n      {\n        sub_433F90((unsigned __int64)\"Cyclic point redistribution detected.\\n\");\n        v9 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n        sub_4340E0(\"engine/move_reasons.c\", 1380LL, \"0\", (unsigned int)(v9 - 1), (unsigned int)(a1 - 20 * v9 - 1));\n      }\n      if ( v8 )\n        v2 = v8;\n      dword_9888A0[a1] = v2;\n      result = -378LL;\n      if ( byte_98A33F[-378] != 3 )\n      {\nLABEL_25:\n        if ( dword_988EDC[result] == a1 )\n          dword_988EDC[result] = dword_9888A0[a1];\n      }\n      while ( result )\n      {\n        if ( byte_98A340[result] != 3 && dword_988EE0[result] == a1 )\n          dword_988EE0[result] = dword_9888A0[a1];\n        result += 2LL;\n        if ( byte_98A33F[result] != 3 )\n          goto LABEL_25;\n      }\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x422b80L", 
            "funcEndAddr": "0x422df1L", 
            "funcName": "sub_422B80"
        }, 
        {
            "decompiledFuncCode": "char __fastcall sub_422E00(int a1, void *a2)\n{\n  unsigned __int64 v2; // r13\n  __int64 v3; // rax\n  __int64 v4; // rcx\n  signed __int64 v5; // rcx\n  int v6; // ecx\n  int v7; // ebx\n  int v8; // er12\n  unsigned __int64 v9; // rbp\n  char *v10; // r14\n  int v11; // edi\n  signed __int64 v13; // [rsp+0h] [rbp-38h]\n\n  v2 = 0LL;\n  memset(a2, 0, 0x190uLL);\n  v13 = 141LL * a1;\n  do\n  {\n    LOBYTE(v3) = v13 * 4;\n    v4 = dword_8B2378[v2 + v13];\n    if ( v4 < 0 )\n      break;\n    v5 = 4 * v4;\n    v3 = dword_97ABB4[(unsigned __int64)(3 * v5) / 4];\n    v6 = dword_97ABB0[(unsigned __int64)(3 * v5) / 4];\n    if ( v6 == 62 )\n    {\n      v7 = *((_DWORD *)&xmmword_954FB0 + 19 * v3 + 2);\n      v8 = dword_8E947C[95 * v3];\n      v9 = -28804LL;\n      v10 = byte_98A1C5;\n      do\n      {\n        LOBYTE(v3) = *v10 - 1;\n        if ( (unsigned __int8)v3 <= 1u && dword_95C678[v9 / 4] == v7 )\n        {\n          v11 = dword_90E63C[5 * v9 / 4];\n          if ( v11 != v8 )\n            LOBYTE(v3) = sub_40BAB0(v11, (__int64)a2, 1);\n        }\n        ++v10;\n        v9 += 76LL;\n      }\n      while ( v9 );\n    }\n    else if ( v6 == 8 )\n    {\n      LOBYTE(v3) = sub_40BAB0(dword_8E947C[95 * v3], (__int64)a2, 1);\n    }\n    ++v2;\n  }\n  while ( v2 < 0x78 );\n  return v3;\n}\n", 
            "funcStartAddr": "0x422e00L", 
            "funcEndAddr": "0x422f27L", 
            "funcName": "sub_422E00"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_422F30(signed int a1, unsigned int a2, int a3, signed int a4, int a5, __int64 a6, __int64 a7, int *a8)\n{\n  __int64 v8; // r14\n  int v9; // edx\n  int v10; // edx\n  int v11; // edx\n  int v12; // eax\n  char v13; // r13\n  int v14; // edx\n  __int64 v15; // rcx\n  __int64 v16; // r8\n  signed __int64 v17; // rsi\n  int v18; // edx\n  int v19; // edx\n  int v20; // edx\n  signed __int64 v21; // rbp\n  __int64 result; // rax\n  unsigned int v23; // ebp\n  signed __int64 v24; // rbx\n  signed __int64 v25; // rbx\n  signed int v26; // ebx\n  signed __int64 v27; // rbp\n  int v28; // edx\n  int v29; // edx\n  signed int v30; // [rsp+4h] [rbp-54h]\n  signed int v31; // [rsp+Ch] [rbp-4Ch]\n  signed int v32; // [rsp+18h] [rbp-40h]\n  signed __int64 v33; // [rsp+18h] [rbp-40h]\n  int v34; // [rsp+20h] [rbp-38h]\n\n  v8 = a6;\n  v31 = a4;\n  if ( byte_98A1B0[a1] )\n  {\n    v9 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1451LL,\n      \"board[pos] == EMPTY\",\n      (unsigned int)(v9 - 1),\n      (unsigned int)(-20 * v9 + a1 - 1));\n  }\n  if ( (unsigned __int8)(byte_98A1B0[a3] - 1) >= 2u )\n  {\n    v10 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1452LL,\n      \"IS_STONE(board[affected])\",\n      (unsigned int)(v10 - 1),\n      (unsigned int)(-20 * v10 + a1 - 1));\n  }\n  if ( a8 )\n    *a8 = 0;\n  v34 = a5;\n  switch ( __ROR4__(a5 - 26, 1) )\n  {\n    case 0:\n    case 1:\n    case 2:\n      if ( 3 - a2 != (unsigned __int8)byte_98A1B0[a3] )\n      {\n        v11 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n        sub_4340E0(\n          \"engine/move_reasons.c\",\n          1461LL,\n          \"board[affected] == OTHER_COLOR(color)\",\n          (unsigned int)(v11 - 1),\n          (unsigned int)(-20 * v11 + a1 - 1));\n      }\n      if ( !a8 )\n        goto LABEL_24;\n      v12 = *((_DWORD *)&xmmword_954FC0 + 19 * a3);\n      goto LABEL_23;\n    case 3:\n      v30 = 5;\n      v13 = 2;\n      if ( (unsigned __int8)byte_98A1B0[a3] == a2 )\n        break;\n      v14 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n      v15 = (unsigned int)(v14 - 1);\n      v16 = (unsigned int)(a1 - 20 * v14 - 1);\n      v17 = 1467LL;\n      goto LABEL_18;\n    case 4:\n      v30 = 4;\n      v13 = 2;\n      if ( (unsigned __int8)byte_98A1B0[a3] == a2 )\n        break;\n      v18 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n      v15 = (unsigned int)(v18 - 1);\n      v16 = (unsigned int)(a1 - 20 * v18 - 1);\n      v17 = 1471LL;\n      goto LABEL_18;\n    case 5:\n      v30 = 1;\n      v13 = 2;\n      if ( (unsigned __int8)byte_98A1B0[a3] != a2 )\n      {\n        v19 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n        v15 = (unsigned int)(v19 - 1);\n        v16 = (unsigned int)(a1 - 20 * v19 - 1);\n        v17 = 1475LL;\nLABEL_18:\n        sub_4340E0(\"engine/move_reasons.c\", v17, \"board[affected] == color\", v15, v16);\n      }\n      return result;\n    case 0x11:\n      if ( 3 - a2 != (unsigned __int8)byte_98A1B0[a3] )\n      {\n        v20 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n        sub_4340E0(\n          \"engine/move_reasons.c\",\n          1479LL,\n          \"board[affected] == OTHER_COLOR(color)\",\n          (unsigned int)(v20 - 1),\n          (unsigned int)(-20 * v20 + a1 - 1));\n      }\n      if ( a8 )\n      {\n        v12 = dword_8E9478[95 * a4];\nLABEL_23:\n        *a8 = v12;\n      }\nLABEL_24:\n      v13 = 0;\n      v30 = 0;\n      break;\n    case 0x12:\n      if ( (unsigned __int8)byte_98A1B0[a3] != a2 )\n      {\n        v28 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n        sub_4340E0(\n          \"engine/move_reasons.c\",\n          1485LL,\n          \"board[affected] == color\",\n          (unsigned int)(v28 - 1),\n          (unsigned int)(-20 * v28 + a1 - 1));\n      }\n      v30 = 5;\n      v13 = 2;\n      if ( a8 )\n        *(float *)a8 = *((float *)&xmmword_954FC0 + 19 * a3) - *(float *)&dword_8E9478[95 * a4];\n      break;\n    default:\n      v29 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n      sub_4340E0(\"engine/move_reasons.c\", 1493LL, \"0\", (unsigned int)(v29 - 1), (unsigned int)(-20 * v29 + a1 - 1));\n      return result;\n  }\n  if ( a5 == 60 )\n  {\n    if ( (unsigned __int8)(byte_98A1B0[a4] - 1) >= 2u )\n      sub_4340E0(\n        \"engine/move_reasons.c\",\n        1540LL,\n        \"((board[affected]) == 1 || (board[affected]) == 2)\",\n        0xFFFFFFFFLL,\n        0xFFFFFFFFLL);\n    v32 = 0;\n    if ( v13 )\n      v32 = 1120403456;\n    v21 = 21LL;\n    do\n    {\n      result = (unsigned __int8)byte_98A1B0[v21];\n      if ( (_BYTE)result == byte_98A1B0[v31] )\n      {\n        result = sub_40B5B0(v21, v31);\n        if ( (_DWORD)result )\n        {\n          *(_DWORD *)(a7 + 4 * v21) = v32;\n          *(_BYTE *)(v8 + v21) = v13;\n        }\n      }\n      ++v21;\n    }\n    while ( v21 != 400 );\n  }\n  else\n  {\n    for ( result = sub_414800(a3); ; result = sub_414810(v23) )\n    {\n      v23 = result;\n      if ( !(_DWORD)result )\n        break;\n      if ( v13 )\n      {\n        v33 = 95LL * (signed int)result;\n        if ( !dword_8E94D4[95 * (signed int)result]\n          || (unsigned int)sub_4207C0(a1, result)\n          || (unsigned int)sub_406880((unsigned int)a1, a2, \"mark-changed-dragon\", v23, 0, 0)\n          && (v26 = 5 - (unsigned __int64)sub_43B050(v23, 0LL), sub_407030(), v26 >= v30) )\n        {\n          if ( (unsigned __int8)(byte_98A1B0[v23] - 1) >= 2u )\n            sub_4340E0(\n              \"engine/move_reasons.c\",\n              1540LL,\n              \"((board[affected]) == 1 || (board[affected]) == 2)\",\n              0xFFFFFFFFLL,\n              0xFFFFFFFFLL);\n          if ( v13 != 2 )\n            sub_4340E0(\"engine/move_reasons.c\", 1545LL, \"new_status == 2\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n          v24 = 21LL;\n          do\n          {\n            if ( byte_98A1B0[v24] == byte_98A1B0[v23] && (unsigned int)sub_40B5B0(v24, v23) )\n            {\n              *(_DWORD *)(a7 + 4 * v24) = 1120403456;\n              *(_BYTE *)(v8 + v24) = 2;\n            }\n            ++v24;\n          }\n          while ( v24 != 400 );\n          if ( a8 )\n            *(float *)a8 = *(float *)&dword_8E9478[v33] + *(float *)a8;\n        }\n      }\n      else\n      {\n        if ( (unsigned __int8)(byte_98A1B0[(signed int)result] - 1) >= 2u )\n          sub_4340E0(\n            \"engine/move_reasons.c\",\n            1540LL,\n            \"((board[affected]) == 1 || (board[affected]) == 2)\",\n            0xFFFFFFFFLL,\n            0xFFFFFFFFLL);\n        v25 = 21LL;\n        do\n        {\n          if ( byte_98A1B0[v25] == byte_98A1B0[v23] && (unsigned int)sub_40B5B0(v25, v23) )\n          {\n            *(_DWORD *)(a7 + 4 * v25) = 0;\n            *(_BYTE *)(v8 + v25) = 0;\n          }\n          ++v25;\n        }\n        while ( v25 != 400 );\n      }\n    }\n    if ( v34 == 62 )\n    {\n      if ( (unsigned __int8)(byte_98A1B0[v31] - 1) >= 2u )\n        sub_4340E0(\n          \"engine/move_reasons.c\",\n          1540LL,\n          \"((board[affected]) == 1 || (board[affected]) == 2)\",\n          0xFFFFFFFFLL,\n          0xFFFFFFFFLL);\n      v27 = 21LL;\n      do\n      {\n        result = (unsigned __int8)byte_98A1B0[v27];\n        if ( (_BYTE)result == byte_98A1B0[v31] )\n        {\n          result = sub_40B5B0(v27, v31);\n          if ( (_DWORD)result )\n          {\n            *(_DWORD *)(a7 + 4 * v27) = 0;\n            *(_BYTE *)(v8 + v27) = 0;\n          }\n        }\n        ++v27;\n      }\n      while ( v27 != 400 );\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x422f30L", 
            "funcEndAddr": "0x423616L", 
            "funcName": "sub_422F30"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_423630(signed int a1, __int64 a2, __int64 a3, char a4)\n{\n  char v4; // r12\n  __int64 v5; // r14\n  signed int v6; // xmm0_4\n  signed __int64 v7; // rbx\n  __int64 result; // rax\n\n  v4 = a4;\n  v5 = a3;\n  if ( (unsigned __int8)(byte_98A1B0[a1] - 1) >= 2u )\n    sub_4340E0(\n      \"engine/move_reasons.c\",\n      1540LL,\n      \"((board[affected]) == 1 || (board[affected]) == 2)\",\n      0xFFFFFFFFLL,\n      0xFFFFFFFFLL);\n  if ( a4 )\n  {\n    if ( a4 != 2 )\n      sub_4340E0(\"engine/move_reasons.c\", 1545LL, \"new_status == 2\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n    v6 = 1120403456;\n  }\n  else\n  {\n    v6 = 0;\n  }\n  v7 = 21LL;\n  do\n  {\n    result = (unsigned __int8)byte_98A1B0[v7];\n    if ( (_BYTE)result == byte_98A1B0[a1] )\n    {\n      result = sub_40B5B0(v7, a1);\n      if ( (_DWORD)result )\n      {\n        *(_DWORD *)(v5 + 4 * v7) = v6;\n        *(_BYTE *)(a2 + v7) = v4;\n      }\n    }\n    ++v7;\n  }\n  while ( v7 != 400 );\n  return result;\n}\n", 
            "funcStartAddr": "0x423630L", 
            "funcEndAddr": "0x423709L", 
            "funcName": "sub_423630"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_423710(int a1, void *a2)\n{\n  unsigned __int64 v2; // r14\n  __int64 result; // rax\n  int v4; // ebp\n\n  v2 = 0LL;\n  memset(a2, 0, 0x190uLL);\n  do\n  {\n    result = dword_8B2378[141 * a1 + v2];\n    if ( result < 0 )\n      break;\n    result *= 3LL;\n    if ( dword_97ABB0[result] == 32 )\n    {\n      for ( result = sub_414800(dword_97ABB4[result]); ; result = sub_414810(v4) )\n      {\n        v4 = result;\n        if ( !(_DWORD)result )\n          break;\n        sub_40BAB0(result, (__int64)a2, 1);\n      }\n    }\n    ++v2;\n  }\n  while ( v2 < 0x78 );\n  return result;\n}\n", 
            "funcStartAddr": "0x423710L", 
            "funcEndAddr": "0x4237a1L", 
            "funcName": "sub_423710"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4237B0(int a1, int a2, __int64 a3, __int64 a4, __int64 a5)\n{\n  __int64 v5; // rax\n  signed __int64 v6; // r10\n  int v7; // er11\n  int v8; // er11\n  __int64 result; // rax\n\n  v5 = 0LL;\n  v6 = 1660LL;\n  do\n  {\n    v7 = (unsigned __int8)byte_98A1C5[v5];\n    if ( 3 - a1 == v7 )\n    {\n      if ( *(_DWORD *)((char *)&xmmword_954FB0 + v6)\n        && (!*(_DWORD *)((char *)dword_8E9394 + 5 * v6) || *(_DWORD *)((char *)dword_8E93E4 + 5 * v6)) )\n      {\nLABEL_6:\n        *(_BYTE *)(a5 + v5 + 21) = 1;\n        goto LABEL_16;\n      }\n    }\n    else if ( v7 == a1\n           && (!*(_DWORD *)((char *)dword_8E9394 + 5 * v6)\n            || *(_DWORD *)((char *)dword_8E93E4 + 5 * v6) && *(_BYTE *)(a4 + v5 + 21)) )\n    {\n      v8 = *(_DWORD *)((char *)&xmmword_954FB0 + v6);\n      if ( v8 )\n      {\n        if ( *(_BYTE *)(a3 + v5 + 21) )\n        {\n          *(_BYTE *)(a5 + v5 + 21) = 2;\n          goto LABEL_16;\n        }\n        if ( v8 != 2 )\n          goto LABEL_6;\n      }\n    }\n    *(_BYTE *)(a5 + v5 + 21) = 0;\nLABEL_16:\n    ++v5;\n    v6 += 76LL;\n  }\n  while ( v5 != 379 );\n  result = a2;\n  *(_BYTE *)(a5 + a2) = dword_8B2558[141 * a2];\n  return result;\n}\n", 
            "funcStartAddr": "0x4237b0L", 
            "funcEndAddr": "0x42388fL", 
            "funcName": "sub_4237B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_423890(int a1)\n{\n  __int64 result; // rax\n  signed __int64 v2; // r15\n  int v3; // er14\n  signed __int64 v4; // rbx\n  __int64 v5; // r13\n  const char *v6; // rdi\n  const char *v7; // rdi\n  __int64 v8; // rax\n  signed __int64 v9; // rax\n  int v10; // esi\n  __int64 v11; // rdx\n  __int64 v12; // rax\n  __int64 v13; // rdx\n  __int64 v14; // rcx\n  const char *v15; // rdi\n  __int64 v16; // rdx\n  __int64 v17; // rdx\n  __int64 v18; // rdx\n  __int64 v19; // rdx\n  __int64 v20; // rdx\n  __int64 v21; // rdx\n  const char *v22; // rdi\n  __int64 v23; // rdx\n  __int64 v24; // rdx\n  __int64 v25; // rdx\n  __int64 v26; // rdx\n  __int64 v27; // rdx\n  __int64 v28; // rdx\n  __int64 v29; // rdx\n  __int64 v30; // rdx\n  __int64 v31; // rdx\n  __int64 v32; // rdx\n  signed __int64 v33; // rax\n  __int64 v34; // rdx\n  __int64 v35; // rcx\n  signed __int64 v36; // rax\n  __int64 v37; // rdx\n  __int64 v38; // rcx\n  signed __int64 v39; // rdx\n  int v40; // eax\n  __int64 v41; // rcx\n  __int64 v42; // r9\n  const char *v43; // rdi\n  signed __int64 v44; // rdx\n  int v45; // eax\n  __int64 v46; // rcx\n  __int64 v47; // r9\n  int v48; // [rsp+0h] [rbp-58h]\n  signed int v49; // [rsp+8h] [rbp-50h]\n  int v50; // [rsp+14h] [rbp-44h]\n\n  v50 = a1;\n  sub_433F90((unsigned __int64)\"\\nMove reasons:\\n\");\n  result = (unsigned int)dword_565C68;\n  if ( dword_565C68 > 0 )\n  {\n    v49 = 1;\n    v48 = 0;\n    do\n    {\n      if ( (signed int)result > 0 )\n      {\n        v2 = (signed int)result;\n        v3 = v49 + 20 * result;\n        do\n        {\n          v4 = v2--;\n          v5 = 0LL;\n          while ( 1 )\n          {\n            v8 = dword_8B2378[141 * v3 + v5];\n            if ( v8 < 0 )\n              break;\n            v9 = 3 * v8;\n            v10 = dword_97ABB0[v9];\n            switch ( v10 )\n            {\n              case 2:\n                v6 = \"Move at %1m attacks %1m%s\\n\";\n                goto LABEL_8;\n              case 3:\n              case 9:\n                v11 = (unsigned int)dword_97ABB4[v9];\n                if ( v10 == 9 )\n                {\n                  v7 = \"Move at %1m threatens to defend %1m\\n\";\n                }\n                else\n                {\n                  if ( v10 != 3 )\n                    goto LABEL_55;\n                  v7 = \"Move at %1m threatens to attack %1m\\n\";\n                }\nLABEL_54:\n                sub_433F90((char)v7);\nLABEL_55:\n                if ( (unsigned __int64)++v5 >= 0x78 )\n                  goto LABEL_58;\n                break;\n              case 4:\n                dword_8E9524[95 * dword_97ABB4[v9]];\n                v6 = \"Move at %1m attacks %1m%s with good ko\\n\";\n                goto LABEL_8;\n              case 6:\n                v6 = \"Move at %1m attacks %1m%s with bad ko\\n\";\nLABEL_8:\n                sub_433F90((char)v6);\n                goto LABEL_55;\n              case 8:\n                v17 = (unsigned int)dword_97ABB4[v9];\n                v7 = \"Move at %1m defends %1m\\n\";\n                goto LABEL_54;\n              case 10:\n                v18 = (unsigned int)dword_97ABB4[v9];\n                v7 = \"Move at %1m defends %1m with good ko\\n\";\n                goto LABEL_54;\n              case 12:\n                v19 = (unsigned int)dword_97ABB4[v9];\n                v7 = \"Move at %1m defends %1m with bad ko\\n\";\n                goto LABEL_54;\n              case 14:\n              case 16:\n                v12 = dword_97ABB4[v9];\n                v13 = (unsigned int)dword_983560[v12];\n                v14 = (unsigned int)dword_984470[v12];\n                if ( v10 == 14 )\n                  v15 = \"Move at %1m connects %1m and %1m\\n\";\n                else\n                  v15 = \"Move at %1m cuts %1m and %1m\\n\";\n                goto LABEL_51;\n              case 18:\n                v20 = (unsigned int)dword_97ABB4[v9];\n                v7 = \"Move at %1m wins semeai for %1m\\n\";\n                goto LABEL_54;\n              case 19:\n                v21 = (unsigned int)dword_97ABB4[v9];\n                v7 = \"Move at %1m threatens to win semeai for %1m\\n\";\n                goto LABEL_54;\n              case 20:\n                v22 = \"Move at %1m expands territory\\n\";\n                goto LABEL_46;\n              case 22:\n                v22 = \"Move at %1m expands moyo\\n\";\n                goto LABEL_46;\n              case 24:\n                v22 = \"Move at %1m is an invasion\\n\";\n                goto LABEL_46;\n              case 26:\n                v23 = (unsigned int)dword_97ABB4[v9];\n                v7 = \"Move at %1m owl-attacks %1m\\n\";\n                goto LABEL_54;\n              case 27:\n                v24 = (unsigned int)dword_97ABB4[v9];\n                v7 = \"Move at %1m owl-threatens to attack %1m\\n\";\n                goto LABEL_54;\n              case 28:\n                v25 = (unsigned int)dword_97ABB4[v9];\n                v7 = \"Move at %1m owl-attacks %1m with good ko\\n\";\n                goto LABEL_54;\n              case 30:\n                v26 = (unsigned int)dword_97ABB4[v9];\n                v7 = \"Move at %1m owl-attacks %1m with bad ko\\n\";\n                goto LABEL_54;\n              case 32:\n                v27 = (unsigned int)dword_97ABB4[v9];\n                v7 = \"Move at %1m owl-defends %1m\\n\";\n                goto LABEL_54;\n              case 33:\n                v28 = (unsigned int)dword_97ABB4[v9];\n                v7 = \"Move at %1m owl-threatens to defend %1m\\n\";\n                goto LABEL_54;\n              case 34:\n                v29 = (unsigned int)dword_97ABB4[v9];\n                v7 = \"Move at %1m owl-defends %1m with good ko\\n\";\n                goto LABEL_54;\n              case 36:\n                v30 = (unsigned int)dword_97ABB4[v9];\n                v7 = \"Move at %1m owl-defends %1m with bad ko\\n\";\n                goto LABEL_54;\n              case 38:\n                v31 = (unsigned int)dword_97ABB4[v9];\n                v7 = \"Move at %1m owl-prevents a threat to attack or defend %1m\\n\";\n                goto LABEL_54;\n              case 42:\n                if ( (unsigned __int8)byte_98A1B0[dword_97ABB4[v9]] == v50 )\n                  v7 = \"%1m found alive but not certainly, %1m defends it again\\n\";\n                else\n                  v7 = \"%1m found dead but not certainly, %1m attacks it again\\n\";\n                goto LABEL_54;\n              case 44:\n              case 46:\n                v16 = (unsigned int)dword_97ABB4[v9];\n                if ( v10 == 44 )\n                  v7 = \"Move at %1m strategically attacks %1m\\n\";\n                else\n                  v7 = \"Move at %1m strategically defends %1m\\n\";\n                goto LABEL_54;\n              case 50:\n                sub_433F90((unsigned __int64)\"Move at %1m captures something\\n\");\n                goto LABEL_41;\n              case 52:\nLABEL_41:\n                v22 = \"Move at %1m defends against combination attack\\n\";\n                goto LABEL_46;\n              case 54:\n                v32 = (unsigned int)dword_989EE0[dword_97ABB4[v9]];\n                v7 = \"Move at %1m vital eye point for eye %1m\\n\";\n                goto LABEL_54;\n              case 60:\n                v33 = 4LL * dword_97ABB4[v9];\n                v34 = (unsigned int)dword_986964[v33];\n                v35 = (unsigned int)dword_98696C[v33];\n                v15 = \"Move at %1m owl-attacks %1m (captures %1m)\\n\";\n                goto LABEL_51;\n              case 62:\n                v36 = 4LL * dword_97ABB4[v9];\n                v37 = (unsigned int)dword_986964[v36];\n                v38 = (unsigned int)dword_98696C[v36];\n                v15 = \"Move at %1m owl-defends %1m (loses %1m)\\n\";\nLABEL_51:\n                sub_433F90((char)v15);\n                goto LABEL_55;\n              case 70:\n                v22 = \"Move at %1m is an antisuji\\n\";\nLABEL_46:\n                sub_433F90((char)v22);\n                goto LABEL_55;\n              case 100:\n                v39 = 4LL * dword_97ABB4[v9];\n                v40 = dword_986968[v39];\n                v41 = (unsigned int)dword_986964[v39];\n                v42 = (unsigned int)dword_98696C[v39];\n                dword_986960[v39];\n                v43 = \"Move at %1m either %s %1m or %s %1m\\n\";\n                goto LABEL_49;\n              case 102:\n                v44 = 4LL * dword_97ABB4[v9];\n                v45 = dword_986328[v44];\n                v46 = (unsigned int)dword_986324[v44];\n                v47 = (unsigned int)dword_98632C[v44];\n                dword_986320[v44];\n                v43 = \"Move at %1m both %s %1m and %s %1m\\n\";\nLABEL_49:\n                sub_433F90((char)v43);\n                goto LABEL_55;\n              default:\n                goto LABEL_55;\n            }\n          }\n          if ( (_DWORD)v5 )\n          {\nLABEL_58:\n            if ( !dword_8B2558[141 * (v48 + 21 + 20 * (signed int)v2)] )\n              sub_433F90((unsigned __int64)\"Move at %1m strategically or tactically unsafe\\n\");\n          }\n          v3 -= 20;\n        }\n        while ( v4 > 1 );\n      }\n      result = (unsigned int)dword_565C68;\n      ++v49;\n      ++v48;\n    }\n    while ( v48 < dword_565C68 );\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x423890L", 
            "funcEndAddr": "0x423d78L", 
            "funcName": "sub_423890"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_423D80(unsigned int a1)\n{\n  signed __int64 v1; // rcx\n  int *v2; // r12\n  signed __int64 v3; // rcx\n  int *v4; // rbp\n  unsigned __int64 v5; // r14\n  __int64 v6; // rax\n  signed __int64 v7; // r15\n  int v8; // edx\n  __int64 v9; // rdx\n  __int64 v10; // rdx\n  __int64 v11; // rdx\n  signed __int64 v12; // [rsp+8h] [rbp-50h]\n  signed __int64 v13; // [rsp+10h] [rbp-48h]\n  signed __int64 v14; // [rsp+18h] [rbp-40h]\n  char *v15; // [rsp+20h] [rbp-38h]\n\n  if ( dword_5643E0[0] != -1 )\n  {\n    v1 = 0LL;\n    do\n    {\n      v12 = v1;\n      v2 = &dword_5643E0[164 * v1];\n      v13 = 164 * v1;\n      v15 = &a1m00ThreatOfAt[656 * v1];\n      v3 = 0LL;\n      v4 = v2;\n      do\n      {\n        v14 = v3;\n        v5 = 0LL;\n        do\n        {\n          v6 = dword_8B2378[141 * (signed int)a1 + v5];\n          if ( v6 < 0 )\n            break;\n          v7 = 3 * v6;\n          if ( dword_97ABB0[3 * v6] == *v4\n            && (*((unsigned int (__fastcall **)(_QWORD, _QWORD))v2 + 60))(a1, (unsigned int)dword_97ABB4[3 * v6]) )\n          {\n            if ( dword_88C264 & 0x800 )\n            {\n              v8 = dword_97ABB4[v7];\n              switch ( dword_97ABB0[v7] )\n              {\n                case 2:\n                case 3:\n                case 4:\n                case 6:\n                case 8:\n                case 9:\n                case 10:\n                case 12:\n                case 18:\n                case 19:\n                case 20:\n                case 22:\n                case 24:\n                case 26:\n                case 27:\n                case 28:\n                case 30:\n                case 32:\n                case 33:\n                case 34:\n                case 36:\n                case 38:\n                case 40:\n                case 42:\n                case 44:\n                case 46:\n                case 50:\n                case 52:\n                case 54:\n                case 70:\n                  break;\n                case 14:\n                case 16:\n                  v10 = (unsigned int)dword_983560[v8];\n                  break;\n                case 60:\n                case 62:\n                case 100:\n                  v9 = (unsigned int)dword_986964[4 * v8];\n                  break;\n                case 102:\n                  v11 = (unsigned int)dword_986324[4 * v8];\n                  break;\n                default:\n                  sub_4340E0(\"engine/move_reasons.c\", 322LL, \"0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n                  return;\n              }\n              sub_433F90((char)v15);\n            }\n            dword_97ABB8[v7] |= v2[122];\n          }\n          ++v5;\n        }\n        while ( v5 < 0x78 );\n        v4 = (int *)(v13 * 4 + 4 * v14 + 5653476);\n        v3 = v14 + 1;\n      }\n      while ( dword_5643E4[v14 + v13] != -1 );\n      v1 = v12 + 1;\n    }\n    while ( dword_5643E0[164 * (v12 + 1)] != -1 );\n  }\n}\n", 
            "funcStartAddr": "0x423d80L", 
            "funcEndAddr": "0x423f30L", 
            "funcName": "sub_423D80"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_423F30(int a1)\n{\n  char *v1; // rcx\n  unsigned __int64 v2; // rdx\n  __int64 v3; // rax\n  signed __int64 v4; // rsi\n  signed __int64 result; // rax\n  __int64 v6; // rsi\n\n  v1 = (char *)&unk_8B237C + 564 * a1;\n  v2 = 0LL;\n  while ( 1 )\n  {\n    v3 = *(signed int *)&v1[4 * v2 - 4];\n    if ( v3 < 0 )\n      return 0LL;\n    v4 = 3 * v3;\n    result = 1LL;\n    if ( dword_97ABB0[v4] == 70 )\n      return result;\n    v6 = *(signed int *)&v1[4 * v2];\n    if ( v6 < 0 )\n      break;\n    if ( dword_97ABB0[3 * v6] == 70 )\n      return result;\n    v2 += 2LL;\n    if ( v2 >= 0x78 )\n      return 0LL;\n  }\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x423f30L", 
            "funcEndAddr": "0x423f98L", 
            "funcName": "sub_423F30"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_423FA0(int a1, float a2)\n{\n  signed __int64 result; // rax\n\n  result = 564LL * a1;\n  if ( a2 > *(float *)((char *)dword_8B2374 + result) )\n  {\n    result += (signed __int64)dword_8B2374;\n    *(float *)result = a2;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x423fa0L", 
            "funcEndAddr": "0x423fbfL", 
            "funcName": "sub_423FA0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_423FC0(signed int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = *((_DWORD *)&xmmword_954FB0 + 19 * a2 + 2);\n  v3 = sub_4209F0(a1, *((_DWORD *)&xmmword_954FB0 + 19 * a2 + 2));\n  result = 1LL;\n  if ( !v3 )\n    result = (unsigned int)sub_420BD0(a1, v2) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x423fc0L", 
            "funcEndAddr": "0x423ffdL", 
            "funcName": "sub_423FC0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_424000(signed int a1, int a2)\n{\n  _BOOL8 result; // rax\n  int v3; // ecx\n\n  result = 0LL;\n  if ( dword_8E9474[95 * a2] == *((_DWORD *)&xmmword_954FB0 + 19 * a2 + 3) )\n  {\n    v3 = sub_420590(a1, a2);\n    result = 1LL;\n    if ( !v3 )\n      result = (unsigned int)sub_4207C0(a1, a2) != 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x424000L", 
            "funcEndAddr": "0x424052L", 
            "funcName": "sub_424000"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4241B0(int a1, int a2, __int64 a3, __int64 a4)\n{\n  __int64 v4; // r8\n  __int64 v5; // rsi\n  __int64 result; // rax\n\n  if ( a2 <= 0 )\n    return 0LL;\n  v4 = a2;\n  v5 = 0LL;\n  while ( 1 )\n  {\n    result = *(unsigned int *)(a4 + 4 * v5);\n    if ( !(_DWORD)result )\n      break;\n    if ( *(_DWORD *)(a3 + 4 * v5) == a1 )\n      return result;\n    if ( ++v5 >= v4 )\n      return 0LL;\n  }\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x4241b0L", 
            "funcEndAddr": "0x4241dfL", 
            "funcName": "sub_4241B0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4241E0(int a1, int a2, signed int a3, __int64 a4, __int64 a5)\n{\n  signed __int64 result; // rax\n  int v6; // edx\n  int v7; // er11\n  __int64 v8; // rsi\n  int v9; // edi\n  int v10; // er14\n  signed __int64 v11; // rbp\n  int v12; // ebx\n  int v13; // ebx\n  int v14; // edx\n  int v15; // edi\n  signed __int64 v16; // r15\n  signed __int64 v17; // rbx\n  __int64 v18; // rbp\n  int v19; // esi\n  int v20; // edx\n  int v21; // edx\n  int v22; // er11\n  __int64 v23; // rsi\n  int v24; // ebp\n  int v25; // er14\n  signed __int64 v26; // rdi\n  int v27; // ebx\n  int v28; // ebx\n  int v29; // edx\n  int v30; // ebp\n  signed __int64 v31; // r15\n  signed __int64 v32; // rbx\n  __int64 v33; // rdi\n  int v34; // esi\n  int v35; // edx\n\n  if ( a3 <= 0 )\n  {\nLABEL_5:\n    result = a3;\n    if ( *(_DWORD *)(a5 + 4LL * a3 - 4) < a2 )\n    {\n      result = a3 - 1LL;\n      *(_DWORD *)(a4 + 4 * result) = a1;\n      *(_DWORD *)(a5 + 4 * result) = a2;\n      if ( a3 >= 2 )\n      {\n        v6 = a3 - 1;\n        v7 = 0;\n        do\n        {\n          if ( v6 <= v7 )\n            break;\n          v8 = v6;\n          result = v7;\n          v9 = *(_DWORD *)(a5 + 4LL * v6);\n          v10 = v6;\n          do\n          {\n            v11 = v8 - 1;\n            v12 = *(_DWORD *)(a5 + 4 * v8 - 4);\n            if ( v9 > v12 )\n            {\n              v13 = *(_DWORD *)(a4 + 4 * v8);\n              *(_DWORD *)(a4 + 4 * v8) = *(_DWORD *)(a4 + 4 * v8 - 4);\n              *(_DWORD *)(a4 + 4 * v8 - 4) = v13;\n              v12 = *(_DWORD *)(a5 + 4 * v8);\n              *(_DWORD *)(a5 + 4 * v8) = *(_DWORD *)(a5 + 4 * v8 - 4);\n              *(_DWORD *)(a5 + 4 * v8 - 4) = v12;\n              v10 = v8;\n            }\n            v9 = v12;\n            --v8;\n          }\n          while ( v11 > v7 );\n          v14 = v6 - 1;\n          if ( v10 >= v14 )\n            break;\n          v7 = v10;\n          v15 = *(_DWORD *)(a5 + 4LL * v10);\n          result = a4 + 4 + 4LL * v10;\n          v16 = v14 - (signed __int64)v10;\n          v17 = a5 + 4 + 4LL * v10;\n          v18 = 0LL;\n          v6 = v10;\n          do\n          {\n            v19 = *(_DWORD *)(v17 + 4 * v18);\n            if ( v15 < v19 )\n            {\n              v20 = *(_DWORD *)(a4 + 4LL * v10 + 4 * v18);\n              *(_DWORD *)(a4 + 4LL * v10 + 4 * v18) = *(_DWORD *)(a4 + 4 + 4LL * v10 + 4 * v18);\n              *(_DWORD *)(result + 4 * v18) = v20;\n              v19 = *(_DWORD *)(a5 + 4LL * v10 + 4 * v18);\n              *(_DWORD *)(a5 + 4LL * v10 + 4 * v18) = *(_DWORD *)(a5 + 4 + 4LL * v10 + 4 * v18);\n              *(_DWORD *)(v17 + 4 * v18) = v19;\n              v6 = v10 + v18;\n            }\n            ++v18;\n            v15 = v19;\n          }\n          while ( v16 != v18 );\n        }\n        while ( v10 < v6 );\n      }\n    }\n  }\n  else\n  {\n    result = 0LL;\n    while ( *(_DWORD *)(a4 + 4 * result) != a1 )\n    {\n      if ( ++result >= a3 )\n        goto LABEL_5;\n    }\n    if ( *(_DWORD *)(a5 + 4 * result) > a2 )\n    {\n      *(_DWORD *)(a5 + 4 * result) = a2;\n      if ( a3 >= 2 )\n      {\n        v21 = a3 - 1;\n        v22 = 0;\n        do\n        {\n          if ( v21 <= v22 )\n            break;\n          v23 = v21;\n          result = v22;\n          v24 = *(_DWORD *)(a5 + 4LL * v21);\n          v25 = v21;\n          do\n          {\n            v26 = v23 - 1;\n            v27 = *(_DWORD *)(a5 + 4 * v23 - 4);\n            if ( v24 > v27 )\n            {\n              v28 = *(_DWORD *)(a4 + 4 * v23);\n              *(_DWORD *)(a4 + 4 * v23) = *(_DWORD *)(a4 + 4 * v23 - 4);\n              *(_DWORD *)(a4 + 4 * v23 - 4) = v28;\n              v27 = *(_DWORD *)(a5 + 4 * v23);\n              *(_DWORD *)(a5 + 4 * v23) = *(_DWORD *)(a5 + 4 * v23 - 4);\n              *(_DWORD *)(a5 + 4 * v23 - 4) = v27;\n              v25 = v23;\n            }\n            v24 = v27;\n            --v23;\n          }\n          while ( v26 > v22 );\n          v29 = v21 - 1;\n          if ( v25 >= v29 )\n            break;\n          v22 = v25;\n          v30 = *(_DWORD *)(a5 + 4LL * v25);\n          result = a4 + 4 + 4LL * v25;\n          v31 = v29 - (signed __int64)v25;\n          v32 = a5 + 4 + 4LL * v25;\n          v33 = 0LL;\n          v21 = v25;\n          do\n          {\n            v34 = *(_DWORD *)(v32 + 4 * v33);\n            if ( v30 < v34 )\n            {\n              v35 = *(_DWORD *)(a4 + 4LL * v25 + 4 * v33);\n              *(_DWORD *)(a4 + 4LL * v25 + 4 * v33) = *(_DWORD *)(a4 + 4 + 4LL * v25 + 4 * v33);\n              *(_DWORD *)(result + 4 * v33) = v35;\n              v34 = *(_DWORD *)(a5 + 4LL * v25 + 4 * v33);\n              *(_DWORD *)(a5 + 4LL * v25 + 4 * v33) = *(_DWORD *)(a5 + 4 + 4LL * v25 + 4 * v33);\n              *(_DWORD *)(v32 + 4 * v33) = v34;\n              v21 = v25 + v33;\n            }\n            ++v33;\n            v30 = v34;\n          }\n          while ( v31 != v33 );\n        }\n        while ( v25 < v21 );\n      }\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4241e0L", 
            "funcEndAddr": "0x424402L", 
            "funcName": "sub_4241E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_424410(__int64 a1, __int64 a2, int a3)\n{\n  int v3; // er15\n  __int64 v4; // r14\n  __int64 v5; // r13\n  __int64 v6; // rbx\n  signed __int64 v7; // rbp\n  _DWORD *v8; // r12\n  __int128 v9; // xmm0\n  int v10; // eax\n  signed __int64 v11; // rdi\n  signed __int64 v12; // rsi\n  __int64 v13; // rdx\n  signed __int64 v14; // rcx\n  __int64 result; // rax\n  signed __int64 v16; // r8\n  signed __int64 v17; // rdi\n  signed __int64 v18; // rbp\n  signed __int64 v19; // rbx\n  int v20; // eax\n  int v21; // eax\n  __int64 v22; // rax\n  __int64 v23; // rax\n  __int64 v24; // rax\n  __int64 v25; // rax\n  int v26; // eax\n  __int64 v27; // rax\n  __int64 v28; // rax\n  __int64 v29; // rax\n  __int64 v30; // rax\n  __int64 v31; // rax\n  __int64 v32; // rax\n  __int64 v33; // rax\n  __int64 v34; // rax\n  signed int v35; // er10\n  __int64 v36; // rax\n  __int64 v37; // rax\n  __int64 v38; // rax\n  __int64 v39; // rax\n  signed __int64 v40; // rbx\n  signed __int64 v41; // rbp\n  signed __int64 v42; // rbx\n  signed __int64 v43; // rbp\n  unsigned int v44; // [rsp+8h] [rbp-CC0h]\n  int v45; // [rsp+Ch] [rbp-CBCh]\n  char v46[84]; // [rsp+10h] [rbp-CB8h]\n  int v47[379]; // [rsp+64h] [rbp-C64h]\n  char s; // [rsp+650h] [rbp-678h]\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a1;\n  v6 = 0LL;\n  memset(dword_876F20, 0, 0x640uLL);\n  memset(dword_877560, 0, 0x640uLL);\n  memset(&s, 0, 0x640uLL);\n  v7 = 756LL;\n  v8 = &unk_8EB3CC;\n  v9 = 0LL;\n  do\n  {\n    if ( byte_98A1C5[v6] != 3 )\n    {\n      if ( a1 )\n      {\n        *(_OWORD *)(a1 + v7 + 16) = v9;\n        *(_OWORD *)(a1 + v7) = v9;\n        *(_BYTE *)(a1 + v7 + 32) = 0;\n      }\n      if ( a2 )\n      {\n        *(_OWORD *)(a2 + v7 + 16) = v9;\n        *(_OWORD *)(a2 + v7) = v9;\n        *(_BYTE *)(a2 + v7 + 32) = 0;\n      }\n      v10 = 0;\n      if ( byte_98A1C5[v6] )\n      {\n        if ( v3 )\n        {\n          v10 = sub_42F6A0((unsigned int)(v6 + 21), 0LL);\n          v9 = 0LL;\n        }\n        else if ( !*v8 )\n        {\n          if ( v8[13] )\n            v10 = v8[33] != 0;\n          else\n            v10 = 1;\n        }\n      }\n      v47[v6] = v10;\n    }\n    ++v6;\n    v7 += 36LL;\n    v8 += 95;\n  }\n  while ( v6 != 379 );\n  sub_424AD0(2LL, dword_876F20, v46, &s, 1LL);\n  v11 = 1LL;\n  v12 = (signed __int64)dword_877560;\n  sub_424AD0(1LL, dword_877560, v46, &s, 0LL);\n  result = (unsigned int)dword_565C68;\n  if ( dword_565C68 > 0 )\n  {\n    v16 = 0LL;\n    v14 = 21LL;\n    do\n    {\n      if ( (signed int)result > 0 )\n      {\n        v12 = 4LL * (unsigned int)v14;\n        v17 = 36LL * (unsigned int)v14;\n        v18 = v17 + v5;\n        v11 = v4 + v17;\n        v19 = 0LL;\n        do\n        {\n          if ( !byte_98A1B0[(unsigned int)v14 + v19] || !*(_DWORD *)&v46[4 * (unsigned int)v14 + 4 * v19] )\n          {\n            v20 = *(int *)((char *)&dword_876F20[v19] + v12);\n            if ( v20 == 1 )\n            {\n              v26 = *(int *)((char *)&dword_877560[v19] + v12);\n              if ( !v5 || v26 )\n              {\n                if ( v26 == 1 )\n                {\n                  if ( v5 )\n                  {\n                    v31 = dword_5641B0[0] + (signed int)v14 + (signed int)v19;\n                    if ( byte_98A1B0[v31] != 3 && dword_876F20[v31] && !dword_877560[v31]\n                      || (v32 = dword_5641B4 + (signed int)v14 + (signed int)v19, byte_98A1B0[v32] != 3)\n                      && dword_876F20[v32]\n                      && !dword_877560[v32]\n                      || (v33 = dword_5641B8 + (signed int)v14 + (signed int)v19, byte_98A1B0[v33] != 3)\n                      && dword_876F20[v33]\n                      && !dword_877560[v33]\n                      || (v34 = dword_5641BC + (signed int)v14 + (signed int)v19, v35 = 3, byte_98A1B0[v34] != 3)\n                      && dword_876F20[v34]\n                      && !dword_877560[v34] )\n                    {\n                      *(_BYTE *)(v18 + 28) = 1;\n                      v35 = 5;\n                    }\n                    *(_DWORD *)v18 = v35;\n                  }\n                  if ( v4 )\n                  {\n                    v36 = dword_5641B0[0] + (signed int)v14 + (signed int)v19;\n                    if ( byte_98A1B0[v36] != 3 && dword_877560[v36] && !dword_876F20[v36]\n                      || (v37 = dword_5641B4 + (signed int)v14 + (signed int)v19, byte_98A1B0[v37] != 3)\n                      && dword_877560[v37]\n                      && !dword_876F20[v37]\n                      || (v38 = dword_5641B8 + (signed int)v14 + (signed int)v19, byte_98A1B0[v38] != 3)\n                      && dword_877560[v38]\n                      && !dword_876F20[v38]\n                      || (v39 = dword_5641BC + (signed int)v14 + (signed int)v19, byte_98A1B0[v39] != 3)\n                      && dword_877560[v39]\n                      && !dword_876F20[v39] )\n                    {\n                      *(_BYTE *)(v11 + 28) = 1;\n                      *(_DWORD *)v11 = 4;\n                    }\n                    else\n                    {\n                      *(_DWORD *)v11 = 3;\n                    }\n                  }\n                }\n              }\n              else\n              {\n                *(_DWORD *)v18 = 5;\n                v27 = dword_5641B0[0] + (signed int)v14 + (signed int)v19;\n                if ( byte_98A1B0[v27] != 3 && dword_877560[v27] && !dword_876F20[v27]\n                  || (v28 = dword_5641B4 + (signed int)v14 + (signed int)v19, byte_98A1B0[v28] != 3)\n                  && dword_877560[v28]\n                  && !dword_876F20[v28]\n                  || (v29 = dword_5641B8 + (signed int)v14 + (signed int)v19, byte_98A1B0[v29] != 3)\n                  && dword_877560[v29]\n                  && !dword_876F20[v29]\n                  || (v30 = dword_5641BC + (signed int)v14 + (signed int)v19, byte_98A1B0[v30] != 3)\n                  && dword_877560[v30]\n                  && !dword_876F20[v30] )\n                {\n                  *(_BYTE *)(v18 + 28) = 1;\n                }\n              }\n            }\n            else if ( !v20 )\n            {\n              v21 = *(int *)((char *)&dword_877560[v19] + v12);\n              if ( v21 )\n              {\n                if ( v4 && v21 == 1 )\n                {\n                  if ( (*(_DWORD *)v11 = 4,\n                        v22 = dword_5641B0[0] + (signed int)v14 + (signed int)v19,\n                        byte_98A1B0[v22] != 3)\n                    && dword_876F20[v22]\n                    && !dword_877560[v22]\n                    || (v23 = dword_5641B4 + (signed int)v14 + (signed int)v19, byte_98A1B0[v23] != 3)\n                    && dword_876F20[v23]\n                    && !dword_877560[v23]\n                    || (v24 = dword_5641B8 + (signed int)v14 + (signed int)v19, byte_98A1B0[v24] != 3)\n                    && dword_876F20[v24]\n                    && !dword_877560[v24]\n                    || (v25 = dword_5641BC + (signed int)v14 + (signed int)v19, byte_98A1B0[v25] != 3)\n                    && dword_876F20[v25]\n                    && !dword_877560[v25] )\n                  {\n                    *(_BYTE *)(v11 + 28) = 1;\n                  }\n                }\n              }\n              else\n              {\n                if ( v4 )\n                  *(_DWORD *)v11 = 3;\n                if ( v5 )\n                  *(_DWORD *)v18 = 3;\n              }\n            }\n          }\n          ++v19;\n          result = dword_565C68;\n          v18 += 36LL;\n          v11 += 36LL;\n        }\n        while ( v19 < dword_565C68 );\n      }\n      v13 = (signed int)result;\n      ++v16;\n      v14 += 20LL;\n    }\n    while ( v16 < (signed int)result );\n  }\n  if ( v3 )\n  {\n    if ( !v5 )\n      goto LABEL_102;\n  }\n  else\n  {\n    result = sub_465A40(v11, v12, v13, v14);\n    if ( !v5 )\n      goto LABEL_102;\n  }\n  v40 = -13644LL;\n  v41 = 21LL;\n  do\n  {\n    if ( byte_98A1B0[v41] != 3 && !*(_DWORD *)(v5 + v40 + 14412) && *(_DWORD *)(v5 + v40 + 14400) == 5 )\n    {\n      v45 = 0;\n      v44 = 0;\n      v12 = (unsigned int)v41;\n      sub_424F00((unsigned int)v41, (unsigned int)v41, &v45, &v44, v5);\n      *(_DWORD *)(v5 + v40 + 14404) = v45;\n      result = v44;\n      *(_DWORD *)(v5 + v40 + 14408) = v44;\n    }\n    ++v41;\n    v40 += 36LL;\n  }\n  while ( v40 );\nLABEL_102:\n  if ( v4 )\n  {\n    v42 = -13644LL;\n    v43 = 21LL;\n    do\n    {\n      if ( byte_98A1B0[v43] != 3 && !*(_DWORD *)(v4 + v42 + 14412) && *(_DWORD *)(v4 + v42 + 14400) == 4 )\n      {\n        v45 = 0;\n        v44 = 0;\n        v12 = (unsigned int)v43;\n        sub_424F00((unsigned int)v43, (unsigned int)v43, &v45, &v44, v4);\n        *(_DWORD *)(v4 + v42 + 14404) = v45;\n        result = v44;\n        *(_DWORD *)(v4 + v42 + 14408) = v44;\n      }\n      ++v43;\n      v42 += 36LL;\n    }\n    while ( v42 );\n  }\n  if ( v5 )\n    result = sub_4251D0(v5, v12, v13, v14);\n  if ( v4 )\n    result = sub_4251D0(v4, v12, v13, v14);\n  return result;\n}\n", 
            "funcStartAddr": "0x424410L", 
            "funcEndAddr": "0x424ac6L", 
            "funcName": "sub_424410"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_424AD0(unsigned int a1, __int64 a2, __int64 a3, __int64 a4, int a5)\n{\n  __int64 v5; // rbx\n  unsigned int v6; // er12\n  __int64 v7; // r15\n  signed __int64 v8; // rdi\n  int v9; // er13\n  __int64 result; // rax\n  __int64 v11; // rsi\n  int v12; // edx\n  _BOOL8 v13; // rcx\n  _BOOL4 v14; // ebp\n  __int64 v15; // rsi\n  int v16; // edx\n  __int64 v17; // rsi\n  int v18; // edx\n  unsigned int v19; // er14\n  __int64 v20; // rdx\n  int v21; // esi\n  signed int v22; // edx\n  int v23; // eax\n  __int64 v24; // rcx\n  int v25; // er8\n  int v26; // er9\n  int v27; // ecx\n  __int64 v28; // rsi\n  char v29; // bl\n  char v30; // bl\n  signed __int64 v31; // [rsp+8h] [rbp-9C0h]\n  __int64 v32; // [rsp+10h] [rbp-9B8h]\n  __int64 v33; // [rsp+18h] [rbp-9B0h]\n  unsigned int v34; // [rsp+20h] [rbp-9A8h]\n  int v35; // [rsp+24h] [rbp-9A4h]\n  __int64 v36; // [rsp+28h] [rbp-9A0h]\n  char v37; // [rsp+30h] [rbp-998h]\n  char v38[18]; // [rsp+31h] [rbp-997h]\n  char v39; // [rsp+43h] [rbp-985h]\n  char v40; // [rsp+44h] [rbp-984h]\n  char v41[379]; // [rsp+45h] [rbp-983h]\n  char s[21]; // [rsp+1C0h] [rbp-808h]\n  char v43[375]; // [rsp+1D5h] [rbp-7F3h]\n  int v44; // [rsp+34Ch] [rbp-67Ch]\n  int v45[414]; // [rsp+350h] [rbp-678h]\n\n  v35 = a5;\n  v36 = a4;\n  v5 = a3;\n  v33 = a2;\n  v6 = a1;\n  v34 = 3 - a1;\n  v7 = 0LL;\n  memset(s, 0, 0x190uLL);\n  memset(&v37, 0, 0x190uLL);\n  v8 = v5 + 84;\n  v9 = 0;\n  v32 = v5;\n  v31 = v5 + 84;\n  do\n  {\n    result = (unsigned __int8)byte_98A1C5[v7];\n    if ( (_DWORD)result == 3 )\n      goto LABEL_46;\n    if ( *(_DWORD *)(v8 + 4 * v7) )\n    {\n      if ( (_DWORD)result == v6 )\n      {\n        result = v33;\n        *(_DWORD *)(v33 + 4 * v7 + 84) = 1;\n        v41[v7] = 1;\n      }\n      else\n      {\n        v41[v7] = -1;\n      }\n      goto LABEL_46;\n    }\n    v11 = (signed int)v7 + dword_5641B0[0] + 21;\n    v12 = (unsigned __int8)byte_98A1B0[v11];\n    v13 = 0LL;\n    if ( v12 == 3 )\n    {\n      v14 = 0;\n    }\n    else\n    {\n      v14 = 0;\n      if ( *(_DWORD *)(v5 + 4 * v11) )\n      {\n        v14 = v12 != v6;\n        v13 = v12 == v6;\n      }\n    }\n    v15 = (signed int)v7 + dword_5641B4 + 21;\n    v16 = (unsigned __int8)byte_98A1B0[v15];\n    if ( v16 != 3 && *(_DWORD *)(v5 + 4 * v15) )\n    {\n      if ( v16 == v6 )\n        v13 = 1LL;\n      else\n        v14 = 1;\n    }\n    v17 = (signed int)v7 + dword_5641B8 + 21;\n    v18 = (unsigned __int8)byte_98A1B0[v17];\n    if ( v18 != 3 && *(_DWORD *)(v5 + 4 * v17) )\n    {\n      if ( v18 == v6 )\n        v13 = 1LL;\n      else\n        v14 = 1;\n    }\n    v19 = v7 + 21;\n    v20 = (signed int)v7 + dword_5641BC + 21;\n    v21 = (unsigned __int8)byte_98A1B0[v20];\n    if ( v21 == 3 )\n    {\n      v22 = v14;\n      if ( !(_DWORD)v13 )\n        goto LABEL_40;\n    }\n    else\n    {\n      if ( *(_DWORD *)(v5 + 4 * v20) )\n      {\n        v22 = 1;\n        if ( v21 == v6 )\n        {\n          if ( !v35 )\n            goto LABEL_37;\n          goto LABEL_29;\n        }\n      }\n      else\n      {\n        v22 = v14;\n      }\n      if ( !(_DWORD)v13 )\n      {\nLABEL_40:\n        result = v9++;\n        v45[result] = v19;\n        v14 = v22;\nLABEL_41:\n        if ( v14 )\n        {\nLABEL_42:\n          v43[v7] = 1;\n          --v41[v7];\n          goto LABEL_46;\n        }\n        goto LABEL_43;\n      }\n    }\n    v14 = v22;\n    if ( !v35 )\n    {\nLABEL_37:\n      if ( !(_BYTE)result )\n      {\n        result = v36;\n        if ( *(_DWORD *)(v36 + 4 * v7 + 84) )\n          goto LABEL_41;\n      }\nLABEL_38:\n      result = v33;\n      *(_DWORD *)(v33 + 4 * v7 + 84) = 1;\n      v41[v7] = 1;\n      if ( v14 )\n        goto LABEL_42;\n      goto LABEL_43;\n    }\nLABEL_29:\n    if ( (_BYTE)result )\n      goto LABEL_38;\n    v23 = sub_4279A0(v19, v6, v5, v13);\n    v8 = v31;\n    v5 = v32;\n    if ( !v23 )\n    {\n      v8 = v31;\n      v5 = v32;\n      if ( !(unsigned int)sub_4279A0(v19, v34, v32, v24) )\n        goto LABEL_38;\n    }\n    result = v36;\n    *(_DWORD *)(v36 + 4 * v7 + 84) = 1;\n    if ( v14 )\n      goto LABEL_42;\nLABEL_43:\n    result = sub_408320(v19);\n    if ( (_DWORD)result )\n      --v41[v7];\n    v5 = v32;\n    v8 = v31;\nLABEL_46:\n    ++v7;\n  }\n  while ( v7 != 379 );\n  if ( v9 )\n  {\n    v25 = 0;\n    v26 = v9;\n    while ( 1 )\n    {\n      while ( 1 )\n      {\n        v27 = v9;\n        if ( !v9 )\n          v27 = v26;\n        v9 = v27 - 1;\n        v28 = *(&v44 + v27);\n        v29 = byte_98A1C5[v28];\n        if ( v29 != 3 && s[v28] - *(&v40 + v28) < v41[v28] )\n          break;\n        result = (unsigned __int8)byte_98A1C3[v28];\n        if ( (_BYTE)result != 3 && s[v28] - *(&v40 + v28) < *(&v39 + v28) )\n          break;\n        if ( v29 != 3 && s[v28] - v38[v28] < v41[v28] )\n          break;\n        v30 = byte_98A19D[v28];\n        if ( v30 != 3 && s[v28] - v38[v28] < *((char *)&v33 + v28 + 5) )\n          break;\n        if ( (_BYTE)result != 3 )\n        {\n          result = (unsigned int)*(&v39 + v28);\n          if ( s[v28] - *((char *)&v36 + v28 + 7) < (signed int)result )\n            break;\n        }\n        if ( byte_98A19B[v28] != 3 )\n        {\n          result = (unsigned int)*((char *)&v33 + v28 + 3);\n          if ( s[v28] - *((char *)&v36 + v28 + 7) < (signed int)result\n            || s[v28] - *((char *)&v33 + v28 + 4) < (signed int)result )\n          {\n            break;\n          }\n        }\n        if ( v30 != 3 )\n        {\n          result = (unsigned int)*((char *)&v33 + v28 + 5);\n          if ( s[v28] - *((char *)&v33 + v28 + 4) < (signed int)result )\n            break;\n        }\n        if ( v9 == v25 )\n          return result;\n      }\n      *(_DWORD *)(v33 + 4 * v28) = 1;\n      ++*(&v37 + v28);\n      result = (unsigned int)(v26 - 1);\n      if ( v26 == 1 )\n        break;\n      if ( v27 < v26 )\n      {\n        v45[v27 - 1LL] = v45[(signed int)result];\n        --v26;\n        v25 = v27 - 1;\n      }\n      else\n      {\n        v9 = v27 - 2;\n        --v26;\n        v25 = v27 - 2;\n      }\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x424ad0L", 
            "funcEndAddr": "0x424ef4L", 
            "funcName": "sub_424AD0"
        }, 
        {
            "decompiledFuncCode": "char __fastcall sub_424F00(unsigned int a1, __int64 a2, _DWORD *a3, _DWORD *a4, __int64 a5)\n{\n  __int64 v5; // r13\n  _DWORD *v6; // r15\n  int v7; // edx\n  __int64 v8; // rbx\n  char result; // al\n  _DWORD *v10; // rbp\n  signed __int64 v11; // rsi\n  _BYTE *v12; // r14\n  __int64 v13; // rsi\n  __int64 v14; // rsi\n  int v15; // edx\n  _DWORD *v16; // [rsp+0h] [rbp-38h]\n\n  while ( 1 )\n  {\n    v5 = a5;\n    v6 = a3;\n    if ( a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n    {\n      v7 = (1717986919LL * (signed int)a1 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)a1) >> 63);\n      sub_4340E0(\"engine/optics.c\", 568LL, \"ON_BOARD1(origin)\", (unsigned int)(v7 - 1), a1 - 20 * v7 - 1);\n    }\n    if ( (unsigned int)a2 > 0x1A4 || byte_98A1B0[(signed int)a2] == 3 )\n    {\n      v15 = (1717986919LL * (signed int)a2 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)a2) >> 63);\n      sub_4340E0(\"engine/optics.c\", 569LL, \"ON_BOARD1(pos)\", (unsigned int)(v15 - 1), (unsigned int)(a2 - 20 * v15 - 1));\n    }\n    if ( !a3 )\n      sub_4340E0(\"engine/optics.c\", 570LL, \"esize != ((void*)0)\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n    if ( !a4 )\n      sub_4340E0(\"engine/optics.c\", 571LL, \"msize != ((void*)0)\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n    v8 = (signed int)a2;\n    *(_DWORD *)(a5 + 36LL * (signed int)a2 + 12) = a1;\n    ++*a3;\n    result = *(_BYTE *)(a5 + 36LL * (signed int)a2 + 28);\n    if ( result )\n      ++*a4;\n    v16 = a4;\n    if ( !dword_565C84 )\n    {\n      if ( *(_BYTE *)(a5 + 36LL * (signed int)a2 + 29) & 4 )\n        break;\n    }\n    v10 = (_DWORD *)(a5 + 36LL * (signed int)a2);\n    if ( byte_98A1B0[dword_5641B0[0] + (signed __int64)(signed int)a2] != 3 )\n    {\n      v11 = (signed int)a2 + (signed __int64)dword_5641B0[0];\n      if ( *(_DWORD *)(a5 + 36 * v11) == *v10\n        && !*(_DWORD *)(a5 + 36 * v11 + 12)\n        && (!*(_BYTE *)(a5 + 36 * v11 + 28) || !result) )\n      {\n        result = sub_424F00(a1, v11, a3, a4, a5);\n      }\n    }\n    v12 = (_BYTE *)(v5 + 36LL * (signed int)v8 + 28);\n    if ( byte_98A1B0[dword_5641B4 + v8] != 3 )\n    {\n      v13 = v8 + dword_5641B4;\n      result = 9 * v13;\n      if ( *(_DWORD *)(v5 + 36 * v13) == *v10\n        && !*(_DWORD *)(v5 + 36 * v13 + 12)\n        && (!*(_BYTE *)(v5 + 36 * v13 + 28) || !*v12) )\n      {\n        result = sub_424F00(a1, v13, v6, v16, v5);\n      }\n    }\n    if ( byte_98A1B0[dword_5641B8 + v8] != 3 )\n    {\n      v14 = v8 + dword_5641B8;\n      result = 9 * v14;\n      if ( *(_DWORD *)(v5 + 36 * v14) == *v10\n        && !*(_DWORD *)(v5 + 36 * v14 + 12)\n        && (!*(_BYTE *)(v5 + 36 * v14 + 28) || !*v12) )\n      {\n        result = sub_424F00(a1, v14, v6, v16, v5);\n      }\n    }\n    if ( byte_98A1B0[dword_5641BC + v8] == 3 )\n      break;\n    a2 = v8 + dword_5641BC;\n    result = 9 * a2;\n    if ( *(_DWORD *)(v5 + 36 * a2) != *v10 || *(_DWORD *)(v5 + 36 * a2 + 12) || *(_BYTE *)(v5 + 36 * a2 + 28) && *v12 )\n      break;\n    a3 = v6;\n    a4 = v16;\n    a5 = v5;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x424f00L", 
            "funcEndAddr": "0x4251ccL", 
            "funcName": "sub_424F00"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_4251D0(__int64 a1)\n{\n  _BYTE *v1; // rcx\n  int v2; // er8\n  __int64 v3; // rdx\n  char v4; // r10\n  char v5; // r9\n  __int64 v6; // r11\n  __int64 v7; // rax\n  signed __int64 v8; // rax\n  __int64 v9; // rax\n  signed __int64 v10; // rax\n  __int64 v11; // rax\n  signed __int64 v12; // rax\n  __int64 v13; // rax\n  signed __int64 v14; // rax\n\n  v1 = (_BYTE *)(a1 + 787);\n  v2 = dword_5641B0[0] + 21;\n  v3 = 0LL;\n  do\n  {\n    if ( byte_98A1C5[v3] != 3 )\n    {\n      v6 = *(signed int *)(v1 - 19);\n      if ( *(_DWORD *)(v1 - 19) )\n      {\n        *(_DWORD *)(v1 - 27) = *(_DWORD *)(a1 + 36 * v6 + 4);\n        *(_DWORD *)(v1 - 23) = *(_DWORD *)(a1 + 36 * v6 + 8);\n        *(_WORD *)(v1 - 1) = 0;\n        v7 = v2 + (signed int)v3;\n        if ( byte_98A1B0[v7] == 3 || (v8 = 9 * v7, *(_DWORD *)(a1 + 4 * v8 + 12) != (_DWORD)v6) )\n        {\n          v5 = 0;\n          v4 = 0;\n        }\n        else\n        {\n          *(v1 - 1) = 1;\n          if ( *(_BYTE *)(a1 + 4 * v8 + 28) )\n          {\n            *v1 = 1;\n            v5 = 1;\n            v4 = 1;\n          }\n          else\n          {\n            v4 = 1;\n            v5 = 0;\n          }\n        }\n        v9 = (signed int)v3 + dword_5641B4 + 21;\n        if ( byte_98A1B0[v9] != 3 )\n        {\n          v10 = 9 * v9;\n          if ( *(_DWORD *)(a1 + 4 * v10 + 12) == (_DWORD)v6 )\n          {\n            *(v1 - 1) = ++v4;\n            if ( *(_BYTE *)(a1 + 4 * v10 + 28) )\n              *v1 = ++v5;\n          }\n        }\n        v11 = (signed int)v3 + dword_5641B8 + 21;\n        if ( byte_98A1B0[v11] != 3 )\n        {\n          v12 = 9 * v11;\n          if ( *(_DWORD *)(a1 + 4 * v12 + 12) == (_DWORD)v6 )\n          {\n            *(v1 - 1) = ++v4;\n            if ( *(_BYTE *)(a1 + 4 * v12 + 28) )\n              *v1 = ++v5;\n          }\n        }\n        v13 = (signed int)v3 + dword_5641BC + 21;\n        if ( byte_98A1B0[v13] != 3 )\n        {\n          v14 = 9 * v13;\n          if ( *(_DWORD *)(a1 + 4 * v14 + 12) == (_DWORD)v6 )\n          {\n            *(v1 - 1) = v4 + 1;\n            if ( *(_BYTE *)(a1 + 4 * v14 + 28) )\n              *v1 = v5 + 1;\n          }\n        }\n      }\n    }\n    ++v3;\n    v1 += 36;\n  }\n  while ( v3 != 379 );\n}\n", 
            "funcStartAddr": "0x4251d0L", 
            "funcEndAddr": "0x425336L", 
            "funcName": "sub_4251D0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_425340(int a1, __int64 a2)\n{\n  signed __int64 result; // rax\n  _DWORD *v3; // rsi\n  signed __int64 v4; // rcx\n\n  result = a2 + 36LL * a1;\n  v3 = (_DWORD *)(a2 + 780);\n  v4 = -379LL;\n  do\n  {\n    if ( byte_98A340[v4] != 3 && *(v3 - 3) == a1 )\n    {\n      *(_OWORD *)(v3 - 6) = *(_OWORD *)result;\n      *(v3 - 2) = *(_DWORD *)(result + 16);\n      *(v3 - 1) = *(_DWORD *)(result + 20);\n      *v3 = *(_DWORD *)(result + 24);\n    }\n    v3 += 9;\n    ++v4;\n  }\n  while ( v4 );\n  return result;\n}\n", 
            "funcStartAddr": "0x425340L", 
            "funcEndAddr": "0x425391L", 
            "funcName": "sub_425340"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4253A0(int a1, __int64 a2, int a3, __int64 a4, int a5)\n{\n  int v5; // ebp\n  _BYTE *v6; // rbx\n  signed __int64 v7; // r14\n  int *v8; // r15\n  unsigned int v9; // er13\n  __int64 v10; // rdx\n  int v12; // [rsp+4h] [rbp-684h]\n  __int64 v13; // [rsp+8h] [rbp-680h]\n  int s[414]; // [rsp+10h] [rbp-678h]\n\n  v12 = a5;\n  v13 = a4;\n  v5 = a3;\n  memset(s, 0, 0x640uLL);\n  if ( (dword_88C264 & 0x800000) != 0 )\n    sub_433F90((unsigned __int64)\"find_eye_dragons: %1m %C\\n\");\n  v6 = (_BYTE *)(a2 + 1504);\n  v7 = -379LL;\n  v8 = dword_9555F4;\n  v9 = 0;\n  do\n  {\n    if ( (unsigned __int8)byte_98A340[v7] == v5 )\n    {\n      v10 = *v8;\n      if ( !s[v10]\n        && (byte_98A354[v7] != 3 && *((_DWORD *)v6 - 4) == a1 && !*v6\n         || byte_98A33F[v7] != 3 && *((_DWORD *)v6 - 193) == a1 && !*(v6 - 756)\n         || byte_98A32C[v7] != 3 && *((_DWORD *)v6 - 364) == a1 && !*(v6 - 1440)\n         || byte_98A341[v7] != 3 && *((_DWORD *)v6 - 175) == a1 && !*(v6 - 684)) )\n      {\n        if ( (dword_88C264 & 0x800000) != 0 )\n        {\n          sub_433F90((unsigned __int64)\"  dragon: %1m %1m\\n\");\n          v10 = *v8;\n        }\n        s[v10] = 1;\n        if ( v13 && (signed int)v9 < v12 )\n          *(_DWORD *)(v13 + 4LL * (signed int)v9) = v10;\n        ++v9;\n      }\n    }\n    v6 += 36;\n    v8 += 19;\n    ++v7;\n  }\n  while ( v7 );\n  return v9;\n}\n", 
            "funcStartAddr": "0x4253a0L", 
            "funcEndAddr": "0x4254fdL", 
            "funcName": "sub_4253A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_425500(unsigned int a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, __int64 a5, __int64 a6)\n{\n  __int64 v6; // r13\n  int v7; // er14\n  int v8; // ebp\n  __int64 result; // rax\n\n  v6 = a5;\n  v7 = (signed int)a4;\n  v8 = (signed int)a3;\n  if ( a3 )\n    *a3 = 0;\n  if ( a4 )\n    *a4 = 0;\n  if ( dword_88C264 & 2 )\n  {\n    sub_4255F0(a5, a6, a1);\n    if ( dword_88C264 & 2 )\n      sub_433F90((unsigned __int64)\"\\n\");\n  }\n  result = sub_425A00(a1, v8, v7);\n  if ( !(_DWORD)result )\n  {\n    result = (unsigned int)(*(_DWORD *)(v6 + 36LL * (signed int)a1 + 4) - 2\n                                                                        * *(_DWORD *)(v6 + 36LL * (signed int)a1 + 8));\n    if ( (signed int)result < 4 )\n    {\n      if ( (signed int)result <= 0 )\n        *a2 = 0;\n      else\n        *a2 = 16843009;\n    }\n    else\n    {\n      *a2 = 33686018;\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x425500L", 
            "funcEndAddr": "0x4255e5L", 
            "funcName": "sub_425500"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4255F0(__int64 a1, __int64 a2, int a3)\n{\n  int v3; // ebp\n  signed __int64 v4; // rax\n  int v5; // er12\n  __int64 v6; // rdx\n  __int64 v7; // rcx\n  __int64 v8; // r8\n  int v9; // eax\n  signed __int64 v10; // rdx\n  signed __int64 v11; // r13\n  _BYTE *v12; // r14\n  signed __int64 v13; // rbx\n  const char *v14; // rdi\n  const char *v15; // rdi\n  char v16; // si\n  char v17; // al\n  unsigned __int8 v18; // dl\n  int v19; // ebp\n  signed int v20; // ebx\n  unsigned int v21; // er9\n  signed __int64 v22; // rsi\n  signed int v23; // ecx\n  __int64 result; // rax\n  _DWORD *v25; // rdi\n  signed __int64 v26; // rdx\n  __int64 v27; // rsi\n  signed __int64 v28; // rax\n  _BYTE *v29; // r13\n  _BYTE *v30; // r14\n  signed __int64 v31; // r15\n  void *__ptr32 *v32; // rdi\n  unsigned int v33; // [rsp+0h] [rbp-68h]\n  __int64 v34; // [rsp+8h] [rbp-60h]\n  signed __int64 v35; // [rsp+8h] [rbp-60h]\n  signed __int64 v36; // [rsp+10h] [rbp-58h]\n  signed __int64 v37; // [rsp+10h] [rbp-58h]\n  __int64 v38; // [rsp+18h] [rbp-50h]\n  __int64 v39; // [rsp+18h] [rbp-50h]\n  signed __int64 v40; // [rsp+20h] [rbp-48h]\n  signed __int64 v41; // [rsp+20h] [rbp-48h]\n  __int64 v42; // [rsp+30h] [rbp-38h]\n\n  v3 = a3;\n  v38 = a2;\n  v4 = 9LL * a3;\n  v5 = *(_DWORD *)(a1 + 36LL * a3 + 12);\n  v6 = *(unsigned int *)(a1 + 36LL * a3);\n  v7 = *(unsigned int *)(a1 + 4 * v4 + 4);\n  v34 = a1;\n  v8 = *(unsigned int *)(a1 + 4 * v4 + 8);\n  sub_433F90((unsigned __int64)\"Eyespace at %1m: color=%C, esize=%d, msize=%d\\n\");\n  v9 = dword_565C68;\n  if ( dword_565C68 <= 0 )\n    goto LABEL_30;\n  v36 = a1 + 28;\n  v33 = 21;\n  v10 = 0LL;\n  do\n  {\n    if ( v9 <= 0 )\n      goto LABEL_29;\n    v40 = v10;\n    v11 = v38 + 48LL * v33;\n    v12 = (_BYTE *)(v36 + 36LL * v33);\n    v13 = 0LL;\n    do\n    {\n      if ( *((_DWORD *)v12 - 4) != v3 )\n        goto LABEL_27;\n      if ( *v12 && (unsigned __int8)(byte_98A1B0[v33 + v13] - 1) <= 1u )\n      {\n        v15 = \"%1m (X!)\\n\";\n      }\n      else\n      {\n        v16 = *(_BYTE *)(v11 + 4);\n        v17 = byte_98A1B0[v33 + v13];\n        v18 = byte_98A1B0[v33 + v13] - 1;\n        if ( v18 > 1u || v16 != 2 )\n        {\n          if ( *v12 )\n          {\n            if ( !v17 )\n            {\n              v15 = \"%1m (!)\\n\";\n              goto LABEL_26;\n            }\n          }\n          else if ( v18 <= 1u )\n          {\n            v15 = \"%1m (X)\\n\";\n            goto LABEL_26;\n          }\n          if ( v17 || v16 != 2 )\n          {\n            v15 = \"%1m\\n\";\n            goto LABEL_26;\n          }\n          if ( *(float *)v11 != 3.0 )\n          {\n            v14 = \"%1m (H) (topological eye value = %f)\\n\";\nLABEL_6:\n            sub_433F90((char)v14);\n            goto LABEL_27;\n          }\n          v15 = \"%1m (H)\\n\";\n        }\n        else\n        {\n          if ( *(float *)v11 != 3.0 )\n          {\n            v14 = \"%1m (XH) (topological eye value = %f)\\n\";\n            goto LABEL_6;\n          }\n          v15 = \"%1m (XH)\\n\";\n        }\n      }\nLABEL_26:\n      sub_433F90((char)v15);\nLABEL_27:\n      ++v13;\n      v9 = dword_565C68;\n      v11 += 48LL;\n      v12 += 36;\n    }\n    while ( v13 < dword_565C68 );\n    v10 = v40;\nLABEL_29:\n    ++v10;\n    v33 += 20;\n  }\n  while ( v10 < v9 );\nLABEL_30:\n  sub_433F90((unsigned __int64)\"\\n\");\n  v19 = dword_565C68;\n  if ( dword_565C68 <= 0 )\n  {\n    result = 0xFFFFFFFFLL;\n    v20 = -1;\n    v23 = dword_565C68;\n    if ( dword_565C68 > -1 )\n      return result;\n    goto LABEL_47;\n  }\n  v20 = -1;\n  v21 = 21;\n  v22 = 0LL;\n  v23 = dword_565C68;\n  result = 0xFFFFFFFFLL;\n  do\n  {\n    v25 = (_DWORD *)(v34 + 12 + 36LL * v21);\n    v26 = 0LL;\n    do\n    {\n      if ( *v25 == v5 )\n      {\n        if ( v22 < v23 )\n          v23 = v22;\n        result = (signed int)result;\n        if ( v22 > (signed int)result )\n          result = (unsigned int)v22;\n        if ( v26 < v19 )\n          v19 = v26;\n        if ( v26 > v20 )\n          v20 = v26;\n      }\n      ++v26;\n      v25 += 9;\n    }\n    while ( dword_565C68 != v26 );\n    ++v22;\n    v21 += 20;\n  }\n  while ( v22 != dword_565C68 );\n  if ( v23 <= (signed int)result )\n  {\nLABEL_47:\n    v27 = v23;\n    v42 = (signed int)result;\n    v41 = 20LL * v23 + 21;\n    v28 = v19 + 20LL * v23 + 21;\n    v37 = v34 + 36 * v28 + 28;\n    v35 = v38 + 48 * v28 + 4;\n    do\n    {\n      v39 = v27;\n      sub_433F90((unsigned __int64)&byte_494DEA);\n      if ( v19 <= v20 )\n      {\n        v29 = (_BYTE *)v35;\n        v30 = (_BYTE *)v37;\n        v31 = v19 - 1LL;\n        do\n        {\n          if ( *((_DWORD *)v30 - 4) == v5 )\n          {\n            if ( byte_98A1B1[v41 + v31] )\n            {\n              if ( *v29 == 2 )\n                v32 = &off_497BCD;\n              else\n                v32 = &off_497BD1;\n            }\n            else if ( *v30 )\n            {\n              v32 = (void *__ptr32 *)\"%o!\";\n            }\n            else if ( *v29 == 2 )\n            {\n              v32 = &off_497BC5;\n            }\n            else\n            {\n              v32 = (void *__ptr32 *)&unk_497BC9;\n            }\n          }\n          else\n          {\n            v32 = (void *__ptr32 *)&unk_497BD5;\n          }\n          sub_433F90((char)v32);\n          ++v31;\n          v30 += 36;\n          v29 += 48;\n        }\n        while ( v31 < v20 );\n      }\n      result = sub_433F90((unsigned __int64)\"\\n\");\n      v41 += 20LL;\n      v37 += 720LL;\n      v35 += 960LL;\n      ++v27;\n    }\n    while ( v39 < v42 );\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4255f0L", 
            "funcEndAddr": "0x425a00L", 
            "funcName": "sub_4255F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_425A00(__int64 a1, _DWORD *a2, _DWORD *a3, __int64 a4, __int64 a5, __int64 a6, int a7, int a8)\n{\n  __int64 v8; // r15\n  __int64 v9; // r12\n  _DWORD *v10; // rbp\n  unsigned int v11; // ebx\n  char *v12; // r14\n  int v13; // er13\n  int v14; // edi\n  _DWORD *v15; // rax\n  float *v16; // rcx\n  int v17; // edx\n  unsigned __int64 v18; // rsi\n  signed __int64 v19; // rbp\n  int v20; // eax\n  int v21; // er12\n  unsigned int v22; // er15\n  signed __int64 v23; // rbp\n  signed __int64 v24; // rbp\n  int v26; // [rsp+14h] [rbp-564h]\n  _DWORD *v27; // [rsp+20h] [rbp-558h]\n  _DWORD *v28; // [rsp+28h] [rbp-550h]\n  __int64 v29; // [rsp+30h] [rbp-548h]\n  char v30; // [rsp+38h] [rbp-540h]\n  char v31; // [rsp+2C0h] [rbp-2B8h]\n\n  v8 = a6;\n  v9 = a5;\n  v10 = a3;\n  v11 = a1;\n  v12 = &v31;\n  v28 = a2;\n  v29 = a4;\n  v13 = sub_427C90(a1);\n  if ( v13 )\n  {\n    v14 = a7;\n    v15 = (_DWORD *)(v9 + 768);\n    v16 = (float *)(v8 + 1012);\n    v17 = 0;\n    v18 = 21LL;\n    do\n    {\n      if ( byte_98A1B0[v18] != 3 && *v15 == v11 && *(_BYTE *)v16 == 2 && *(v16 - 1) < 3.0 )\n      {\n        if ( v17 )\n          goto LABEL_15;\n        v17 = v18;\n      }\n      ++v18;\n      v15 += 9;\n      v16 += 12;\n    }\n    while ( v18 < 0x190 );\n    if ( !v17 )\n    {\nLABEL_15:\n      v21 = a8;\n      goto LABEL_17;\n    }\n    v27 = v10;\n    v19 = 48LL * v17;\n    *(_BYTE *)(v8 + v19 + 4) = 0;\n    v20 = sub_427C90(v11);\n    *(_BYTE *)(v8 + v19 + 4) = 2;\n    if ( v20 )\n    {\n      v21 = a8;\n      v14 = a7;\n      if ( *(_BYTE *)(v29 + 2) < BYTE2(v26) )\n      {\n        *(_DWORD *)v29 = v26;\n        *v28 = 0;\n        *v27 = 0;\n        v12 = &v30;\n      }\n    }\n    else\n    {\n      v21 = a8;\n      v14 = a7;\n    }\nLABEL_17:\n    v22 = 1;\n    if ( v14 )\n    {\n      if ( v13 == v21 )\n      {\n        if ( *((_DWORD *)v12 + 161) > 0 )\n        {\n          v23 = 0LL;\n          do\n            sub_4218F0(*(_DWORD *)&v12[4 * v23++ + 320], v11, v21);\n          while ( v23 < *((signed int *)v12 + 161) );\n        }\n      }\n      else if ( *((_DWORD *)v12 + 160) > 0 )\n      {\n        v24 = 0LL;\n        do\n          sub_4218F0(*(_DWORD *)&v12[4 * v24++], v11, v13);\n        while ( v24 < *((signed int *)v12 + 160) );\n      }\n    }\n  }\n  else\n  {\n    v22 = 0;\n  }\n  return v22;\n}\n", 
            "funcStartAddr": "0x425a00L", 
            "funcEndAddr": "0x425bf3L", 
            "funcName": "sub_425A00"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_425C00(_BYTE *a1, char a2, char a3, char a4, char a5)\n{\n  *a1 = a2;\n  a1[1] = a3;\n  a1[2] = a4;\n  a1[3] = a5;\n}\n", 
            "funcStartAddr": "0x425c00L", 
            "funcEndAddr": "0x425c0eL", 
            "funcName": "sub_425C00"
        }, 
        {
            "decompiledFuncCode": "signed int *__fastcall sub_425C10(unsigned int a1, unsigned __int8 *a2, int *a3, signed int *a4, signed int *a5, __int64 a6, __int64 a7)\n{\n  unsigned int v7; // ebp\n  signed __int64 v8; // r10\n  signed __int64 v9; // rdx\n  unsigned int v10; // esi\n  signed int v11; // er9\n  int v12; // eax\n  int v13; // er15\n  int v14; // er12\n  char *v15; // rdi\n  char *v16; // rcx\n  _BYTE *v17; // r13\n  __int64 v18; // r8\n  char v19; // r14\n  int v20; // er15\n  const char *v21; // rdi\n  int v22; // eax\n  int *v23; // r12\n  signed int v24; // edx\n  signed int *v25; // rbx\n  __int64 v26; // rcx\n  const char *v27; // rdx\n  int v28; // eax\n  __int64 v29; // rcx\n  int v30; // ST00_4\n  __int64 v31; // rdx\n  const char *v32; // rdx\n  __int64 v33; // rdx\n  signed int v34; // eax\n  char *v35; // r14\n  signed int v36; // er12\n  float v37; // xmm1_4\n  signed __int64 v38; // r15\n  signed __int64 v39; // rbx\n  int v40; // edx\n  char v41; // al\n  float v42; // xmm0_4\n  int v43; // er14\n  int v44; // er13\n  int v45; // er12\n  int v46; // eax\n  bool v47; // zf\n  bool v48; // sf\n  unsigned __int8 v49; // of\n  signed int *result; // rax\n  __int64 v51; // r8\n  int v52; // edx\n  __int64 v53; // r8\n  int v54; // edx\n  signed int v55; // [rsp+10h] [rbp-78h]\n  float v56; // [rsp+10h] [rbp-78h]\n  int *v57; // [rsp+18h] [rbp-70h]\n  int v58; // [rsp+18h] [rbp-70h]\n  signed int *v59; // [rsp+20h] [rbp-68h]\n  __int64 v60; // [rsp+28h] [rbp-60h]\n  char *v61; // [rsp+28h] [rbp-60h]\n  unsigned __int8 *v62; // [rsp+30h] [rbp-58h]\n  float v63; // [rsp+30h] [rbp-58h]\n  _DWORD *v64; // [rsp+38h] [rbp-50h]\n  int v65; // [rsp+44h] [rbp-44h]\n  signed int *v66; // [rsp+50h] [rbp-38h]\n\n  v66 = a5;\n  v7 = a1;\n  v59 = a4;\n  v60 = a6;\n  v57 = a3;\n  v62 = a2;\n  if ( dword_565C68 <= 0LL )\n  {\n    v14 = 0;\n    v13 = 0;\n    v12 = 0;\n    v11 = 0;\n    goto LABEL_14;\n  }\n  v8 = a6 + 31;\n  v9 = 0LL;\n  v10 = 21;\n  v11 = 0;\n  v12 = 0;\n  v13 = 0;\n  v14 = 0;\n  do\n  {\n    v15 = (char *)(a7 + 4 + 48LL * v10);\n    v16 = &byte_98A1B0[v10];\n    v17 = (_BYTE *)(v8 + 36LL * v10);\n    v18 = (unsigned int)dword_565C68;\n    do\n    {\n      if ( *(_DWORD *)(v17 - 19) == v7 )\n      {\n        if ( *(v17 - 3) )\n        {\n          v12 += *v17 > 0;\n          v19 = *v15;\n        }\n        else\n        {\n          v19 = 2;\n          if ( *v15 != 2 )\n          {\n            v11 += (unsigned __int8)(*v16 - 1) < 2u;\n            goto LABEL_10;\n          }\n        }\n        ++v14;\n        v13 += v19 == 2;\n      }\nLABEL_10:\n      v15 += 48;\n      ++v16;\n      v17 += 36;\n      --v18;\n    }\n    while ( v18 );\n    ++v9;\n    v10 += 20;\n  }\n  while ( v9 < dword_565C68 );\nLABEL_14:\n  v20 = *(_DWORD *)(v60 + 36LL * (signed int)v7 + 4) + v13 - 2 * v14 - v12;\n  if ( v59 )\n    *v59 = 0;\n  v55 = v11;\n  if ( v66 )\n    *v66 = 0;\n  if ( dword_88C264 & 2 )\n  {\n    sub_4255F0(v60, a7, v7);\n    if ( dword_88C264 & 2 )\n      sub_433F90((unsigned __int64)\"\\n\");\n  }\n  v64 = (_DWORD *)(v60 + 36LL * (signed int)v7);\n  v21 = (const char *)v7;\n  if ( (unsigned int)sub_425A00(v7, v59, v66, (__int64)v62, v60, a7, 0, 0) )\n  {\n    v22 = v62[1] - v14;\n    v23 = v57;\n    *v57 = v22;\n    if ( v64[1] == 1 )\n    {\n      v21 = (const char *)v7;\n      if ( (unsigned int)sub_408130(v7, (unsigned int)(*v64 == 4) + 1, 0LL) )\n        *v57 = 0;\n    }\n    v24 = v55;\n    v25 = v59;\n    if ( dword_88C264 & 2 )\n    {\n      v26 = *v62;\n      if ( (unsigned int)v26 > 9 || v62[1] > 9u || v62[2] > 9u || v62[3] > 9u )\n      {\n        v30 = v62[3];\n        v27 = \"[%d,%d,%d,%d]\";\n      }\n      else\n      {\n        v27 = \"%d%d%d%d\";\n      }\n      sub_4937C0(&unk_877BA0, 29LL, v27, v26);\n      v31 = (unsigned int)*v57;\n      v21 = \"  graph matching - %s, pessimistic_min=%d\\n\";\n      goto LABEL_53;\n    }\n    goto LABEL_54;\n  }\n  if ( v20 >= 4 )\n  {\n    *(_DWORD *)v62 = 33686018;\n    if ( (v14 || v20 <= 7) && (v14 <= 0 || v20 < 10) )\n    {\n      v23 = v57;\n      *v57 = 1;\n      LOBYTE(v28) = 2;\n      LOBYTE(v29) = 2;\n    }\n    else\n    {\n      v28 = (v20 + -8 - 2 * (v14 > 0)) / 2 + 2;\n      v23 = v57;\n      *v57 = v28;\n      *(_DWORD *)v62 = 16843009 * (unsigned __int8)v28;\n      LOBYTE(v29) = v28;\n    }\n    goto LABEL_44;\n  }\n  if ( v20 <= 0 )\n  {\n    v28 = v64[1] - v14;\n    *(_WORD *)v62 = 0;\n    v62[2] = v28 > 2;\n    v62[3] = v28 > 2;\n    LOBYTE(v28) = v28 > 2;\n    v23 = v57;\n    *v57 = 0;\n    LOBYTE(v29) = 0;\nLABEL_44:\n    v24 = v55;\n    v25 = v59;\n    if ( !(dword_88C264 & 2) )\n      goto LABEL_54;\n  }\n  else\n  {\n    *(_DWORD *)v62 = 16843009;\n    v47 = v14 == 0;\n    v48 = v14 < 0;\n    v23 = v57;\n    v24 = v55;\n    v25 = v59;\n    if ( v48 || v47 )\n      *v57 = 1;\n    else\n      *v57 = 0;\n    LOBYTE(v28) = 1;\n    LOBYTE(v29) = 1;\n    if ( !(dword_88C264 & 2) )\n      goto LABEL_54;\n  }\n  v29 = (unsigned __int8)v29;\n  if ( (unsigned __int8)v29 > 9u || (unsigned __int8)v28 > 9u )\n    v32 = \"[%d,%d,%d,%d]\";\n  else\n    v32 = \"%d%d%d%d\";\n  sub_4937C0(&unk_877BA0, 29LL, v32, v29);\n  v33 = (unsigned int)*v23;\n  v21 = \"  guess_eye - %s, pessimistic_min=%d\\n\";\nLABEL_53:\n  sub_433F90((char)v21);\n  v24 = v55;\nLABEL_54:\n  v34 = *v23;\n  if ( *v23 < 0 )\n  {\n    *v23 = 0;\n    v34 = 0;\n    if ( dword_88C264 & 2 )\n    {\n      v21 = \"  pessimistic min revised to 0\\n\";\n      sub_433F90((unsigned __int64)\"  pessimistic min revised to 0\\n\");\n      v24 = v55;\n      v34 = *v23;\n    }\n  }\n  if ( v24 >= 2 && v34 <= 0 )\n  {\n    *v23 = 1;\n    if ( dword_88C264 & 2 )\n    {\n      v21 = \"  pessimistic min revised to 1 (interior stones)\\n\";\n      sub_433F90((unsigned __int64)\"  pessimistic min revised to 1 (interior stones)\\n\");\n    }\n  }\n  if ( v25 && !*v25 && *v23 != v62[2] )\n  {\n    v35 = (char *)(v60 + 786);\n    v36 = 0;\n    v37 = 0.0;\n    v38 = -18192LL;\n    v39 = 21LL;\n    v40 = 0;\n    while ( 1 )\n    {\n      v41 = byte_98A1B0[v39];\n      if ( v41 != 3 && *(_DWORD *)(v35 - 18) == v7 )\n      {\n        if ( !v41 && *(v35 - 2) )\n        {\n          v63 = v37;\n          v65 = v40;\n          v56 = (float)*v35;\n          if ( (unsigned int)sub_40AD70(v39, (unsigned int)(*v64 == 4) + 1) )\n            v56 = v56 + -0.5;\n          v21 = (const char *)(unsigned int)v39;\n          v61 = v35;\n          v58 = v36;\n          if ( (unsigned int)sub_408320(v39) )\n          {\n            v42 = v56 + -0.1;\n            v43 = v39;\n            v44 = v39;\n          }\n          else\n          {\n            v43 = v39;\n            v44 = v39;\n            v42 = v56;\n          }\n          goto LABEL_76;\n        }\n        if ( *(_BYTE *)(a7 + v38 + 19204) == 2 )\n        {\n          v63 = v37;\n          v65 = v40;\n          v58 = v36;\n          v61 = v35;\n          v43 = *(_DWORD *)(a7 + v38 + 19212);\n          v44 = *(_DWORD *)(a7 + v38 + 19232);\n          v42 = 0.75;\nLABEL_76:\n          v45 = sub_4938A0(v21);\n          v46 = sub_4938A0(v21);\n          v49 = __OFSUB__(v45, v46);\n          v47 = v45 == v46;\n          v48 = v45 - v46 < 0;\n          v40 = v65;\n          if ( v45 > v46 )\n            v40 = v43;\n          v36 = v58;\n          if ( !((unsigned __int8)(v48 ^ v49) | v47) )\n            v36 = v44;\n          if ( (unsigned __int8)(v48 ^ v49) | v47 )\n            v42 = v63;\n          v37 = v42;\n          v35 = v61;\n          goto LABEL_83;\n        }\n      }\nLABEL_83:\n      ++v39;\n      v35 += 36;\n      v38 += 48LL;\n      if ( !v38 )\n      {\n        v25 = v59;\n        if ( v37 > 0.0 )\n        {\n          if ( v66 )\n            *v66 = v36;\n          *v59 = v40;\n        }\n        break;\n      }\n    }\n  }\n  result = v66;\n  if ( v66 )\n  {\n    v51 = *v66;\n    if ( *v66 )\n    {\n      if ( (unsigned int)v51 > 0x1A4 || byte_98A1B0[v51] == 3 )\n      {\n        v52 = (1717986919 * v51 >> 35) + ((unsigned __int64)(1717986919 * v51) >> 63);\n        sub_4340E0(\n          \"engine/optics.c\",\n          953LL,\n          \"ON_BOARD1(*defense_point)\",\n          (unsigned int)(v52 - 1),\n          (unsigned int)(v51 - 20 * v52 - 1));\n      }\n    }\n  }\n  if ( v25 )\n  {\n    v53 = *v25;\n    if ( *v25 )\n    {\n      if ( (unsigned int)v53 > 0x1A4 || byte_98A1B0[v53] == 3 )\n      {\n        v54 = (1717986919 * v53 >> 35) + ((unsigned __int64)(1717986919 * v53) >> 63);\n        sub_4340E0(\n          \"engine/optics.c\",\n          956LL,\n          \"ON_BOARD1(*attack_point)\",\n          (unsigned int)(v54 - 1),\n          (unsigned int)(v53 - 20 * v54 - 1));\n      }\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x425c10L", 
            "funcEndAddr": "0x426308L", 
            "funcName": "sub_425C10"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_426310(__int64 a1, int a2)\n{\n  return *(_BYTE *)(a1 + 48LL * a2 + 4) == 2;\n}\n", 
            "funcStartAddr": "0x426310L", 
            "funcEndAddr": "0x426326L", 
            "funcName": "sub_426310"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_426330(__int64 a1)\n{\n  return *(unsigned __int8 *)(a1 + 1);\n}\n", 
            "funcStartAddr": "0x426330L", 
            "funcEndAddr": "0x426335L", 
            "funcName": "sub_426330"
        }, 
        {
            "decompiledFuncCode": "void *__fastcall sub_426340(unsigned __int8 *a1)\n{\n  __int64 v1; // rcx\n  const char *v2; // rdx\n  __int64 v3; // r9\n  int v4; // ST00_4\n\n  v1 = *a1;\n  if ( (unsigned int)v1 > 9 || a1[1] > 9u || a1[2] > 9u || a1[3] > 9u )\n  {\n    v3 = a1[2];\n    v4 = a1[3];\n    v2 = \"[%d,%d,%d,%d]\";\n  }\n  else\n  {\n    v2 = \"%d%d%d%d\";\n  }\n  sub_4937C0(&unk_877BA0, 29LL, v2, v1);\n  return &unk_877BA0;\n}\n", 
            "funcStartAddr": "0x426340L", 
            "funcEndAddr": "0x4263a5L", 
            "funcName": "sub_426340"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4263B0(__int64 a1)\n{\n  return *(unsigned __int8 *)(a1 + 2);\n}\n", 
            "funcStartAddr": "0x4263b0L", 
            "funcEndAddr": "0x4263b5L", 
            "funcName": "sub_4263B0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4263C0(int a1, __int64 a2, __int64 a3)\n{\n  int v3; // edx\n  signed __int64 result; // rax\n  signed __int64 v5; // rcx\n  _DWORD *v6; // rbx\n  signed __int64 v7; // rdx\n\n  if ( *(_BYTE *)(a3 + 48LL * a1 + 4) != 1 )\n  {\n    v3 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/optics.c\",\n      1401LL,\n      \"heye[pos].type == FALSE_EYE\",\n      (unsigned int)(v3 - 1),\n      (unsigned int)(a1 - 20 * v3 - 1));\n  }\n  if ( dword_88C264 & 2 )\n    sub_433F90((unsigned __int64)\"false eye found at %1m\\n\");\n  result = 9LL * a1;\n  if ( *(_DWORD *)(a2 + 36LL * a1) != 3 && !*(_BYTE *)(a2 + 36LL * a1 + 28) )\n  {\n    *(_BYTE *)(a2 + 36LL * a1 + 28) = 1;\n    result = *(signed int *)(a2 + 36LL * a1 + 12);\n    ++*(_DWORD *)(a2 + 36 * result + 8);\n    if ( byte_98A1B0[dword_5641B0[0] + (signed __int64)a1] != 3\n      && *(_DWORD *)(a2 + 36 * (a1 + (signed __int64)dword_5641B0[0]) + 12) == (_DWORD)result )\n    {\n      ++*(_BYTE *)(a2 + 36 * (a1 + (signed __int64)dword_5641B0[0]) + 31);\n    }\n    if ( byte_98A1B0[dword_5641B4 + (signed __int64)a1] != 3\n      && *(_DWORD *)(a2 + 36 * (a1 + (signed __int64)dword_5641B4) + 12) == (_DWORD)result )\n    {\n      ++*(_BYTE *)(a2 + 36 * (a1 + (signed __int64)dword_5641B4) + 31);\n    }\n    if ( byte_98A1B0[dword_5641B8 + (signed __int64)a1] != 3\n      && *(_DWORD *)(a2 + 36 * (a1 + (signed __int64)dword_5641B8) + 12) == (_DWORD)result )\n    {\n      ++*(_BYTE *)(a2 + 36 * (a1 + (signed __int64)dword_5641B8) + 31);\n    }\n    if ( byte_98A1B0[dword_5641BC + (signed __int64)a1] != 3\n      && *(_DWORD *)(a2 + 36 * (a1 + (signed __int64)dword_5641BC) + 12) == (_DWORD)result )\n    {\n      ++*(_BYTE *)(a2 + 36 * (a1 + (signed __int64)dword_5641BC) + 31);\n    }\n    v5 = a2 + 36 * result;\n    v6 = (_DWORD *)(a2 + 780);\n    v7 = -379LL;\n    do\n    {\n      if ( byte_98A340[v7] != 3 && *(v6 - 3) == (_DWORD)result )\n      {\n        *(_OWORD *)(v6 - 6) = *(_OWORD *)v5;\n        *(v6 - 2) = *(_DWORD *)(v5 + 16);\n        *(v6 - 1) = *(_DWORD *)(v5 + 20);\n        *v6 = *(_DWORD *)(v5 + 24);\n      }\n      v6 += 9;\n      ++v7;\n    }\n    while ( v7 );\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4263c0L", 
            "funcEndAddr": "0x426546L", 
            "funcName": "sub_4263C0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_426550(int a1)\n{\n  _BOOL8 result; // rax\n\n  result = 1LL;\n  if ( dword_977370[9 * a1] != 4 )\n    result = dword_96CAB0[9 * a1] == 5;\n  return result;\n}\n", 
            "funcStartAddr": "0x426550L", 
            "funcEndAddr": "0x426574L", 
            "funcName": "sub_426550"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_426580(int a1)\n{\n  _BOOL8 result; // rax\n\n  if ( dword_977370[9 * a1] == 4 && !byte_97738C[36 * a1] )\n    return 1LL;\n  result = 0LL;\n  if ( dword_96CAB0[9 * a1] == 5 )\n    result = byte_96CACC[36 * a1] == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x426580L", 
            "funcEndAddr": "0x4265bbL", 
            "funcName": "sub_426580"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4265C0(int a1)\n{\n  unsigned int v1; // ecx\n  __int64 result; // rax\n\n  v1 = 0;\n  result = 0LL;\n  if ( dword_977370[9 * a1] == 4 )\n    result = (unsigned __int8)byte_977382[36 * a1];\n  if ( dword_96CAB0[9 * a1] == 5 )\n    v1 = (unsigned __int8)byte_96CAC2[36 * a1];\n  if ( (unsigned int)result < v1 )\n    result = v1;\n  return result;\n}\n", 
            "funcStartAddr": "0x4265c0L", 
            "funcEndAddr": "0x4265f8L", 
            "funcName": "sub_4265C0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_426600(int a1)\n{\n  _BOOL8 result; // rax\n\n  result = 1LL;\n  if ( !byte_97738C[36 * a1] )\n    result = byte_96CACC[36 * a1] != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x426600L", 
            "funcEndAddr": "0x426625L", 
            "funcName": "sub_426600"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_426630(__int64 a1, int a2)\n{\n  return *(_BYTE *)(a1 + 48LL * a2 + 4) == 1;\n}\n", 
            "funcStartAddr": "0x426630L", 
            "funcEndAddr": "0x426646L", 
            "funcName": "sub_426630"
        }, 
        {
            "decompiledFuncCode": "__int128 __usercall sub_426650@<xmm0>(int a1@<edi>, __int64 a2@<rsi>, __int64 a3@<rdx>, __int64 a4@<rcx>)\n{\n  unsigned __int64 v4; // rbp\n  signed __int64 v5; // rdx\n  signed __int64 v6; // r15\n  __int128 v7; // xmm1\n  int v8; // er14\n  int v9; // er8\n  int v10; // ebp\n  int v11; // edx\n  int v12; // er12\n  int v13; // er10\n  int v14; // eax\n  signed int v15; // er13\n  float v16; // xmm2_4\n  int v17; // eax\n  int v18; // ecx\n  _BOOL4 v19; // edi\n  int v20; // edx\n  int v21; // edi\n  __int64 v22; // r11\n  int v23; // edx\n  int v24; // edx\n  int v25; // ecx\n  int v26; // edx\n  _BOOL4 v27; // ecx\n  int v28; // ebx\n  int v29; // edi\n  unsigned int v30; // esi\n  int v31; // er9\n  int v32; // er12\n  int v33; // ST08_4\n  int v34; // er13\n  int v35; // eax\n  int v36; // eax\n  __int64 v37; // rdi\n  int v38; // er12\n  int v39; // ebx\n  int v40; // er13\n  int v41; // ebx\n  int v42; // eax\n  int v43; // eax\n  __int64 v44; // rcx\n  int v45; // ecx\n  signed int v46; // esi\n  unsigned int v47; // esi\n  int v48; // er10\n  int v49; // er11\n  int v50; // esi\n  signed int v51; // edi\n  int v52; // edi\n  int v53; // ebx\n  unsigned int v54; // ebx\n  int v55; // ecx\n  signed int v56; // er8\n  int v57; // edx\n  int v58; // edx\n  __int64 v59; // rax\n  __int64 v60; // rcx\n  int v62; // [rsp+Ch] [rbp-9Ch]\n  int v63; // [rsp+10h] [rbp-98h]\n  int v64; // [rsp+14h] [rbp-94h]\n  __int64 v65; // [rsp+18h] [rbp-90h]\n  int v66; // [rsp+20h] [rbp-88h]\n  int v67; // [rsp+24h] [rbp-84h]\n  unsigned int *v68; // [rsp+28h] [rbp-80h]\n  unsigned int v69; // [rsp+30h] [rbp-78h]\n  int v70; // [rsp+34h] [rbp-74h]\n  int v71; // [rsp+38h] [rbp-70h]\n  int v72; // [rsp+3Ch] [rbp-6Ch]\n  int v73; // [rsp+40h] [rbp-68h]\n  int v74; // [rsp+44h] [rbp-64h]\n  __int64 v75; // [rsp+48h] [rbp-60h]\n  int v76; // [rsp+54h] [rbp-54h]\n  int v77; // [rsp+58h] [rbp-50h]\n  int v78; // [rsp+5Ch] [rbp-4Ch]\n  __int64 v79; // [rsp+60h] [rbp-48h]\n  __int64 v80; // [rsp+68h] [rbp-40h]\n  __int64 v81; // [rsp+70h] [rbp-38h]\n\n  v75 = a3;\n  v4 = (unsigned __int64)(1717986919LL * a1) >> 63;\n  v5 = 1717986919LL * a1 >> 35;\n  v78 = v5 + v4 - 1;\n  v77 = a1 - 20 * (v5 + v4) - 1;\n  v69 = 3 - a2;\n  v79 = a2;\n  v76 = a2 + 3;\n  v81 = a4;\n  v80 = 48LL * a1;\n  v68 = (unsigned int *)(a4 + v80 + 12);\n  v73 = 0;\n  v6 = 4611686018427387900LL;\n  v7 = 0LL;\n  v72 = 0;\n  v8 = 0;\n  v9 = 0;\n  v10 = 0;\n  v11 = 0;\n  v12 = 0;\n  v13 = 0;\n  v66 = 0;\n  v67 = 0;\n  do\n  {\n    LODWORD(v65) = v12;\n    v62 = v11;\n    v17 = v78 + dword_564190[v6];\n    v18 = v77 + dword_5641B0[v6];\n    v71 = 0;\n    v64 = 0;\n    v70 = 0;\n    v63 = 0;\n    v19 = dword_565C68 <= v17;\n    v20 = v19 | ((unsigned int)v17 >> 31);\n    v21 = (v19 || v17 < 0) + 1;\n    if ( dword_565C68 <= v18 )\n      v20 = v21;\n    if ( v18 < 0 )\n      v20 = v21;\n    if ( v20 )\n    {\n      v16 = (float)(v20 & 1);\n      v22 = 0LL;\n      v15 = 0;\nLABEL_11:\n      if ( v16 <= 0.0 )\n        goto LABEL_82;\n      goto LABEL_12;\n    }\n    v32 = v18 + 20 * v17 + 21;\n    if ( *(_DWORD *)(v75 + 36LL * v32) == v76\n      && !*(_BYTE *)(v75 + 36LL * v32 + 28)\n      && *(_BYTE *)(v75 + 36LL * v32 + 31) <= 1 )\n    {\n      v16 = 0.0;\n      v22 = 0LL;\n      if ( byte_98A1B0[v32] )\n        goto LABEL_81;\n      v33 = v9;\n      v34 = v13;\n      v35 = sub_40B9B0(v32, v69);\n      v22 = 0LL;\n      v16 = 0.0;\n      v13 = v34;\n      v9 = v33;\n      v7 = (unsigned int)v7;\n      v15 = 0;\n      if ( !v35 )\n        goto LABEL_11;\n    }\n    v36 = (unsigned __int8)byte_98A1B0[v32];\n    if ( byte_98A1B0[v32] )\n    {\n      v22 = 0LL;\n      v16 = 0.0;\n      if ( v36 == (_DWORD)v79 || v69 != v36 )\n      {\nLABEL_81:\n        v15 = 0;\n        if ( v16 <= 0.0 )\n          goto LABEL_82;\n        goto LABEL_12;\n      }\n      if ( dword_98A7F4 )\n      {\n        v37 = (unsigned int)v32;\n        v38 = v9;\n        v39 = v13;\n        sub_43E350(v37, &v71, &v64, &v70, &v63);\n        v22 = 0LL;\n        v16 = 0.0;\n        v13 = v39;\n        v9 = v38;\n        v7 = (unsigned int)v7;\n        v14 = v71;\n        if ( !v71 )\n        {\nLABEL_3:\n          v15 = 0;\n          v16 = 2.0;\n          if ( 2.0 <= 0.0 )\n            goto LABEL_82;\n          goto LABEL_12;\n        }\n      }\n      else\n      {\n        v14 = dword_8E94D4[95 * v32];\n        v71 = v14;\n        v64 = dword_8E94AC[95 * v32];\n        v70 = dword_8E9524[95 * v32];\n        v63 = dword_8E94FC[95 * v32];\n        if ( !v14 )\n          goto LABEL_3;\n      }\n      v15 = 0;\n      if ( !v70 )\n        goto LABEL_11;\n      if ( v14 != 5 || (v16 = 1.0, v70 != 5) )\n      {\n        if ( v14 != 5 || (v16 = 0.75, v70 == 5) )\n        {\n          if ( v14 == 5 || (v16 = 1.25, v70 != 5) )\n          {\n            v16 = 1.0;\n            if ( v70 == 5 )\n              v16 = 0.0;\n            if ( v14 == 5 )\n              v16 = 0.0;\n          }\n        }\n      }\n    }\n    else\n    {\n      v40 = v13;\n      v41 = v9;\n      v42 = sub_43F100((unsigned int)v32, v69);\n      if ( v42 )\n      {\n        if ( v42 == 5 )\n        {\n          v43 = sub_43F100((unsigned int)v32, v79);\n          v44 = 0LL;\n          v16 = 2.0;\n          if ( v43 )\n          {\n            LOBYTE(v44) = v43 == 5;\n            v16 = dword_4AE2E8[v44];\n          }\n        }\n        else\n        {\n          v16 = 0.75;\n        }\n      }\n      else\n      {\n        v16 = 0.0;\n      }\n      v7 = (unsigned int)v7;\n      v9 = v41;\n      v13 = v40;\n      v64 = v32;\n      v63 = v32;\n    }\n    v22 = 0LL;\n    if ( v16 <= 0.0 || v16 >= 2.0 )\n      goto LABEL_81;\n    if ( (unsigned __int64)v64 > 0x1A4 || byte_98A1B0[v64] == 3 )\n    {\n      v57 = (1717986919LL * v64 >> 35) + ((unsigned __int64)(1717986919LL * v64) >> 63);\n      sub_4340E0(\n        \"engine/optics.c\",\n        1758LL,\n        \"ON_BOARD1(apos)\",\n        (unsigned int)(v57 - 1),\n        (unsigned int)(v64 - 20 * v57 - 1));\n    }\n    v22 = v63;\n    if ( (unsigned __int64)v63 > 0x1A4 || byte_98A1B0[v63] == 3 )\n    {\n      v58 = (1717986919LL * v63 >> 35) + ((unsigned __int64)(1717986919LL * v63) >> 63);\n      sub_4340E0(\n        \"engine/optics.c\",\n        1759LL,\n        \"ON_BOARD1(dpos)\",\n        (unsigned int)(v58 - 1),\n        (unsigned int)(v63 - 20 * v58 - 1));\n    }\n    v15 = v64;\n    if ( v16 <= 0.0 )\n    {\nLABEL_82:\n      v53 = v8;\n      v52 = v9;\n      v50 = v10;\n      v11 = v62;\n      v12 = v65;\n      v31 = v13;\n      goto LABEL_83;\n    }\nLABEL_12:\n    if ( v16 >= 2.0 || !(_DWORD)v22 || !v15 )\n      goto LABEL_82;\n    v74 = v10;\n    if ( (unsigned int)v22 > 0x1A4 || byte_98A1B0[(signed int)v22] == 3 )\n    {\n      v23 = (1717986919LL * (signed int)v22 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)v22) >> 63);\n      sub_4340E0(\n        \"engine/optics.c\",\n        1520LL,\n        \"ON_BOARD1(attack_point)\",\n        (unsigned int)(v23 - 1),\n        (unsigned int)(v22 - 20 * v23 - 1));\n    }\n    if ( (unsigned int)v15 > 0x1A4 || byte_98A1B0[v15] == 3 )\n    {\n      v24 = (1717986919LL * v15 >> 35) + ((unsigned __int64)(1717986919LL * v15) >> 63);\n      sub_4340E0(\n        \"engine/optics.c\",\n        1521LL,\n        \"ON_BOARD1(defense_point)\",\n        (unsigned int)(v24 - 1),\n        (unsigned int)(-20 * v24 + v15 - 1));\n    }\n    v25 = 3;\n    v26 = 3;\n    if ( v16 != 1.0 )\n    {\n      v27 = v16 < 1.0;\n      v26 = 2 - v27;\n      v25 = v27 + 1;\n    }\n    v28 = v62;\n    v29 = v65;\n    if ( v13 >= v25 )\n    {\n      v31 = v13;\n      v13 = v25;\n    }\n    else\n    {\n      v30 = *v68;\n      *v68 = v22;\n      v31 = v25;\n      v22 = v30;\n    }\n    v45 = v74;\n    if ( v29 >= v26 )\n    {\n      v12 = v29;\n      v29 = v26;\n      if ( v62 >= v13 )\n      {\nLABEL_53:\n        v65 = v22;\n        v11 = v62;\n        v28 = v13;\n        goto LABEL_56;\n      }\n    }\n    else\n    {\n      v46 = v68[5];\n      v68[5] = v15;\n      v12 = v26;\n      v15 = v46;\n      if ( v62 >= v13 )\n        goto LABEL_53;\n    }\n    v47 = v68[1];\n    v68[1] = v22;\n    v11 = v13;\n    v65 = v47;\nLABEL_56:\n    v48 = v67;\n    v49 = v66;\n    if ( v45 >= v29 )\n    {\n      v50 = v45;\n      v45 = v29;\n      if ( v9 >= v28 )\n      {\nLABEL_58:\n        v52 = v9;\n        v9 = v28;\n        if ( v8 >= v45 )\n          goto LABEL_59;\n        goto LABEL_63;\n      }\n    }\n    else\n    {\n      v50 = v29;\n      v51 = v68[6];\n      v68[6] = v15;\n      v15 = v51;\n      if ( v9 >= v28 )\n        goto LABEL_58;\n    }\n    v52 = v28;\n    v54 = v68[2];\n    v68[2] = v65;\n    v65 = v54;\n    if ( v8 >= v45 )\n    {\nLABEL_59:\n      v53 = v8;\n      v8 = v45;\n      if ( v72 >= v9 )\n        goto LABEL_65;\nLABEL_64:\n      v68[3] = v65;\n      v72 = v9;\n      goto LABEL_65;\n    }\nLABEL_63:\n    v53 = v45;\n    v55 = v9;\n    v56 = v68[7];\n    v68[7] = v15;\n    v15 = v56;\n    v9 = v55;\n    if ( v72 < v55 )\n      goto LABEL_64;\nLABEL_65:\n    if ( v73 < v8 )\n    {\n      v68[8] = v15;\n      v73 = v8;\n    }\n    v66 = v49 + 1;\n    v67 = v48 + 1;\nLABEL_83:\n    *(float *)&v7 = *(float *)&v7 + v16;\n    v8 = v53;\n    v9 = v52;\n    v10 = v50;\n    v13 = v31;\n    ++v6;\n  }\n  while ( v6 * 4 );\n  v59 = v81;\n  v60 = v80;\n  *(_DWORD *)(v81 + v80 + 8) = v66;\n  *(_DWORD *)(v59 + v60 + 28) = v67;\n  *(_DWORD *)(v59 + v60) = v7;\n  return v7;\n}\n", 
            "funcStartAddr": "0x426650L", 
            "funcEndAddr": "0x426e4eL", 
            "funcName": "sub_426650"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_426E60(__int64 a1)\n{\n  return *(unsigned __int8 *)(a1 + 3);\n}\n", 
            "funcStartAddr": "0x426e60L", 
            "funcEndAddr": "0x426e65L", 
            "funcName": "sub_426E60"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_426E70(unsigned __int8 *a1, unsigned __int8 *a2, _BYTE *a3)\n{\n  int v3; // eax\n  int v4; // er8\n  int v5; // er14\n  int v6; // ecx\n  int v7; // ebx\n  int v8; // er15\n  int v9; // er11\n  int v10; // er12\n  int v11; // ebx\n  unsigned int v12; // eax\n  int v13; // er9\n  int v14; // esi\n  int v15; // er13\n  unsigned int v16; // ecx\n  int v17; // edi\n  int v18; // er10\n  int v19; // edi\n  int v20; // ebp\n  unsigned int v21; // ecx\n  __int64 result; // rax\n  unsigned int v23; // er12\n  unsigned int v24; // er8\n  unsigned int v25; // ebx\n  int v26; // [rsp+0h] [rbp-40h]\n  int v27; // [rsp+8h] [rbp-38h]\n\n  v3 = *a1;\n  v4 = a2[2];\n  v5 = a1[2];\n  v6 = *a2;\n  v7 = v6 + v5;\n  if ( v4 + v3 < (unsigned int)(v6 + v5) )\n    v7 = v4 + v3;\n  v8 = a2[1];\n  v9 = v8 + v3;\n  v10 = a1[1];\n  if ( v8 + v3 < (unsigned int)(v10 + v6) )\n    v9 = v10 + v6;\n  if ( v7 < v9 )\n    LOBYTE(v9) = v7;\n  v11 = a2[3];\n  v12 = v11 + v3;\n  v13 = v10 + v4;\n  v14 = v10 + v4;\n  if ( v12 < v10 + v4 )\n    v14 = v12;\n  if ( v12 >= v13 )\n    v13 = v12;\n  if ( v10 + v8 >= v14 )\n    v14 = v10 + v8;\n  v15 = a1[3];\n  v16 = v15 + v6;\n  v17 = v8 + v5;\n  v18 = v8 + v5;\n  if ( v16 < v8 + v5 )\n    v18 = v16;\n  if ( v16 >= v17 )\n    v17 = v16;\n  if ( v10 + v8 >= v18 )\n    v18 = v10 + v8;\n  if ( v14 < v18 )\n    LOBYTE(v18) = v14;\n  if ( v5 + v4 <= v17 )\n    v17 = v5 + v4;\n  if ( v5 + v4 <= v13 )\n    v13 = v5 + v4;\n  if ( v17 >= v13 )\n    LOBYTE(v13) = v17;\n  v19 = v4;\n  v20 = v8 + v15;\n  v27 = v10;\n  v21 = v11 + v10;\n  result = (unsigned int)(v8 + v15);\n  if ( v8 + v15 < (unsigned int)(v11 + v10) )\n    result = v21;\n  v23 = v4 + v15;\n  v26 = v11;\n  v25 = v11 + v5;\n  v24 = v25;\n  if ( v23 < v25 )\n    v25 = v23;\n  if ( v19 - v8 == 1 && v15 - v5 == 2 )\n    goto LABEL_47;\n  if ( (signed int)result < (signed int)v25 )\n    result = v25;\n  if ( v5 - v27 == 1 && v26 - v19 == 2 )\n  {\nLABEL_47:\n    if ( v24 < v20 )\n      v20 = v24;\n    if ( v23 < v21 )\n      v21 = v23;\n    if ( v20 >= (signed int)v21 )\n      v21 = v20;\n    result = v21;\n  }\n  *a3 = v9;\n  a3[1] = v18;\n  a3[2] = v13;\n  a3[3] = result;\n  return result;\n}\n", 
            "funcStartAddr": "0x426e70L", 
            "funcEndAddr": "0x426f9fL", 
            "funcName": "sub_426E70"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_426FA0(char *a1)\n{\n  char v1; // si\n  char v2; // cl\n  char v3; // dl\n  __int64 result; // rax\n  char v5; // al\n\n  v1 = *a1;\n  v2 = a1[1];\n  if ( (unsigned __int8)v2 >= 2u )\n    v2 = 2;\n  v3 = a1[2];\n  if ( (unsigned __int8)v3 >= 2u )\n    v3 = 2;\n  result = 0LL;\n  if ( v2 != v3 )\n  {\n    v5 = a1[3];\n    if ( (unsigned __int8)v5 >= 2u )\n      v5 = 2;\n    if ( (unsigned __int8)v1 >= 2u )\n      v1 = 2;\n    result = (unsigned __int8)(v3 + v5) - (unsigned int)(unsigned __int8)(v1 + v2);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x426fa0L", 
            "funcEndAddr": "0x426fddL", 
            "funcName": "sub_426FA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_426FE0(unsigned int a1, signed int *a2)\n{\n  signed int *v2; // r13\n  unsigned __int64 v3; // rsi\n  __int64 v4; // rbp\n  signed int *v5; // rbx\n  unsigned __int64 v6; // r8\n  int v7; // edx\n  __int64 v8; // rbp\n  signed __int64 v9; // rbx\n  __int64 v10; // rax\n  __int64 v11; // rax\n  __int64 v12; // rax\n  __int64 v13; // rax\n  __int64 v14; // rax\n  __int64 v15; // rax\n  __int64 v16; // rax\n  __int64 v17; // rax\n  __int64 v18; // rbp\n  signed __int64 v19; // rdi\n  signed __int64 v20; // rdi\n  signed __int64 v21; // rdi\n  signed __int64 v22; // rdi\n  signed __int64 v23; // rdi\n  signed __int64 v24; // rdi\n  signed __int64 v25; // rdi\n  signed __int64 v26; // rdi\n  int v27; // er15\n  const char *v28; // rdi\n  int v29; // er14\n  signed __int64 v30; // rbx\n  unsigned int v31; // ecx\n  const char *v32; // rdi\n  __int64 v33; // rsi\n  unsigned int v34; // ecx\n  __int64 v35; // rbx\n  unsigned int *v36; // rbp\n  __int64 v37; // rdx\n  __int64 v38; // rdi\n  __int64 v39; // rbx\n  signed int *v40; // rbp\n  __int64 v41; // rdi\n  __int64 v42; // rbx\n  unsigned int *v43; // rbp\n  __int64 v44; // rdx\n  __int64 v45; // rdi\n  int v46; // eax\n  int v47; // eax\n  __int64 result; // rax\n  signed int v49; // [rsp+0h] [rbp-19B8h]\n  unsigned int *v50; // [rsp+8h] [rbp-19B0h]\n  signed int v51; // [rsp+14h] [rbp-19A4h]\n  unsigned int v52; // [rsp+18h] [rbp-19A0h]\n  unsigned int v53; // [rsp+1Ch] [rbp-199Ch]\n  __int64 v54; // [rsp+20h] [rbp-1998h]\n  int v55; // [rsp+28h] [rbp-1990h]\n  int v56; // [rsp+2Ch] [rbp-198Ch]\n  int s[21]; // [rsp+30h] [rbp-1988h]\n  int v58[379]; // [rsp+84h] [rbp-1934h]\n  int v59[1234]; // [rsp+670h] [rbp-1348h]\n\n  v2 = a2;\n  sub_4066E0();\n  sub_418500();\n  v3 = 0LL;\n  memset(s, 0, 0x640uLL);\n  v49 = a1;\n  if ( (signed int)a1 > 0 )\n  {\n    v4 = a1;\n    v5 = v2;\n    do\n    {\n      v6 = *v5;\n      if ( v6 > 0x1A4 || byte_98A1B0[v6] == 3 )\n      {\n        v7 = ((signed __int64)(1717986919 * v6) >> 35) + (1717986919 * v6 >> 63);\n        sub_4340E0(\n          \"engine/optics.c\",\n          1909LL,\n          \"ON_BOARD1(eye_vertices[k])\",\n          (unsigned int)(v7 - 1),\n          (unsigned int)(v6 - 20 * v7 - 1));\n      }\n      s[v6] = 1;\n      ++v5;\n      --v4;\n    }\n    while ( v4 );\n  }\n  v8 = 0LL;\n  v9 = 0LL;\n  do\n  {\n    if ( byte_98A1C5[v8] != 3 && v58[v8] != 1 )\n    {\n      v10 = dword_5641B0[0] + (signed int)v8 + 21;\n      if ( byte_98A1B0[v10] != 3 && s[v10] == 1 )\n        goto LABEL_104;\n      if ( (v11 = dword_5641B4 + (signed int)v8 + 21, byte_98A1B0[v11] != 3) && s[v11] == 1\n        || (v12 = dword_5641B8 + (signed int)v8 + 21, byte_98A1B0[v12] != 3) && s[v12] == 1\n        || (v13 = dword_5641BC + (signed int)v8 + 21, byte_98A1B0[v13] != 3) && s[v13] == 1\n        || (v14 = dword_5641C0[0] + (signed int)v8 + 21, byte_98A1B0[v14] != 3) && s[v14] == 1\n        || (v15 = dword_5641C4 + (signed int)v8 + 21, byte_98A1B0[v15] != 3) && s[v15] == 1\n        || (v16 = dword_5641C8 + (signed int)v8 + 21, byte_98A1B0[v16] != 3) && s[v16] == 1\n        || (v17 = dword_5641CC + (signed int)v8 + 21, byte_98A1B0[v17] != 3) && s[v17] == 1 )\n      {\nLABEL_104:\n        v9 = v8 + 21;\n        v3 = 1LL;\n        sub_4074F0(v8 + 21, 1u);\n      }\n    }\n    ++v8;\n  }\n  while ( v8 != 379 );\n  v18 = 0LL;\n  do\n  {\n    if ( v58[v18] != 1 && !byte_98A1C5[v18] )\n    {\n      v3 = (unsigned int)v9;\n      if ( !(unsigned int)sub_40B0A0((signed int)v18 + 21, v9) )\n      {\n        v19 = (unsigned int)dword_5641B0[0] + v18 + 21;\n        if ( byte_98A1B0[(signed int)v19] != 3 )\n        {\n          v3 = (unsigned int)v9;\n          if ( (unsigned int)sub_40B0A0(v19, v9) )\n            goto LABEL_105;\n        }\n        v20 = (unsigned int)dword_5641B4 + v18 + 21;\n        if ( byte_98A1B0[(signed int)v20] != 3 )\n        {\n          v3 = (unsigned int)v9;\n          if ( (unsigned int)sub_40B0A0(v20, v9) )\n            goto LABEL_105;\n        }\n        v21 = (unsigned int)dword_5641B8 + v18 + 21;\n        if ( byte_98A1B0[(signed int)v21] != 3 )\n        {\n          v3 = (unsigned int)v9;\n          if ( (unsigned int)sub_40B0A0(v21, v9) )\n            goto LABEL_105;\n        }\n        v22 = (unsigned int)dword_5641BC + v18 + 21;\n        if ( byte_98A1B0[(signed int)v22] != 3 )\n        {\n          v3 = (unsigned int)v9;\n          if ( (unsigned int)sub_40B0A0(v22, v9) )\n            goto LABEL_105;\n        }\n        v23 = (unsigned int)dword_5641C0[0] + v18 + 21;\n        if ( byte_98A1B0[(signed int)v23] != 3 )\n        {\n          v3 = (unsigned int)v9;\n          if ( (unsigned int)sub_40B0A0(v23, v9) )\n            goto LABEL_105;\n        }\n        if ( (v24 = (unsigned int)dword_5641C4 + v18 + 21, byte_98A1B0[(signed int)v24] != 3)\n          && (v3 = (unsigned int)v9, (unsigned int)sub_40B0A0(v24, v9))\n          || (v25 = (unsigned int)dword_5641C8 + v18 + 21, byte_98A1B0[(signed int)v25] != 3)\n          && (v3 = (unsigned int)v9, (unsigned int)sub_40B0A0(v25, v9))\n          || (v26 = (unsigned int)dword_5641CC + v18 + 21, byte_98A1B0[(signed int)v26] != 3)\n          && (v3 = (unsigned int)v9, (unsigned int)sub_40B0A0(v26, v9)) )\n        {\nLABEL_105:\n          v3 = 2LL;\n          sub_4074F0(v18 + 21, 2u);\n        }\n      }\n    }\n    ++v18;\n  }\n  while ( v18 != 379 );\n  v50 = (unsigned int *)v9;\n  if ( dword_88C268 )\n  {\n    sub_44A610(0LL, v3);\n    v51 = dword_88C268;\n  }\n  else\n  {\n    v51 = 0;\n  }\n  dword_88C268 = 0;\n  sub_405D30(v59);\n  v56 = 1 << v49;\n  if ( v49 != 31 )\n  {\n    v55 = v49 - 1;\n    v54 = (unsigned int)v49;\n    v27 = 0;\n    do\n    {\n      sub_405FF0(v59);\n      v29 = 0;\n      if ( v49 > 0 )\n      {\n        v30 = 0LL;\n        v29 = 0;\n        do\n        {\n          if ( _bittest(&v27, v30) )\n          {\n            v3 = 2LL;\n            if ( !(unsigned int)sub_407B30(v2[v30], 2u) )\n              goto LABEL_100;\n            v3 = 2LL;\n            sub_4074F0(v2[v30], 2u);\n            ++v29;\n          }\n          ++v30;\n        }\n        while ( v30 < v49 );\n      }\n      if ( v51 >= 2 )\n        sub_44A610(0LL, v3);\n      sub_418580(1u, (const char *)3);\n      v3 = (unsigned __int64)&v53;\n      if ( !(unsigned int)sub_42AA60((unsigned int)v50, &v53, 0LL, 0LL) )\n      {\n        if ( v49 > 0 )\n        {\n          v35 = v54;\n          v36 = (unsigned int *)v2;\n          do\n          {\n            v38 = (signed int)*v36;\n            if ( !byte_98A1B0[v38] )\n            {\n              v3 = 2LL;\n              if ( (unsigned int)sub_407B30(v38, 2u) )\n              {\n                v3 = (unsigned __int64)v50;\n                if ( (unsigned int)sub_42F0B0(*v36, v50, 0LL) )\n                {\n                  v37 = *v36;\n                  v3 = (unsigned __int64)v50;\n                  sub_433F90((unsigned __int64)\"%1m alive, but %1m attacks:\\n\");\n                  sub_44A610(0LL, v50);\n                  sub_433F90((unsigned __int64)\"\\n\");\n                }\n              }\n            }\n            ++v36;\n            --v35;\n          }\n          while ( v35 );\n        }\n        if ( v29 == v55 && v49 > 0 )\n        {\n          v39 = v54;\n          v40 = v2;\n          do\n          {\n            v41 = *v40;\n            if ( !byte_98A1B0[v41] )\n            {\n              v3 = (unsigned __int64)v50;\n              if ( !(unsigned int)sub_42EAE0(v41, v50, 0LL) )\n              {\n                v3 = (unsigned __int64)v50;\n                sub_433F90((unsigned __int64)\"%1m alive, but almost filled with nakade:\\n\");\n                sub_44A610(0LL, v50);\n              }\n            }\n            ++v40;\n            --v39;\n          }\n          while ( v39 );\n        }\n        goto LABEL_100;\n      }\n      v3 = (unsigned __int64)&v52;\n      if ( !(unsigned int)sub_42CE50((unsigned int)v50, &v52, 0LL, 0LL) )\n      {\n        if ( v49 > 0 )\n        {\n          v42 = v54;\n          v43 = (unsigned int *)v2;\n          do\n          {\n            v45 = (signed int)*v43;\n            if ( !byte_98A1B0[v45] )\n            {\n              v3 = 1LL;\n              if ( (unsigned int)sub_407B30(v45, 1u) )\n              {\n                v3 = (unsigned __int64)v50;\n                if ( (unsigned int)sub_42EAE0(*v43, v50, 0LL) )\n                {\n                  v44 = *v43;\n                  v3 = (unsigned __int64)v50;\n                  sub_433F90((unsigned __int64)\"%1m dead, but %1m defends:\\n\");\n                  sub_44A610(0LL, v50);\n                  sub_433F90((unsigned __int64)\"\\n\");\n                }\n              }\n            }\n            ++v43;\n            --v42;\n          }\n          while ( v42 );\n        }\n        goto LABEL_100;\n      }\n      v31 = v53;\n      if ( byte_98A1B0[v53] || (v46 = sub_407B30(v53, 2u), v31 = v53, !v46) )\n      {\n        v32 = \"Bad attack point %1m:\\n\";\n        v33 = v31;\n      }\n      else\n      {\n        if ( (unsigned int)sub_42F0B0(v53, (unsigned int)v50, 0LL) )\n          goto LABEL_69;\n        v33 = v53;\n        v32 = \"Attack point %1m failed:\\n\";\n      }\n      sub_433F90((char)v32);\n      sub_44A610(0LL, v33);\nLABEL_69:\n      v34 = v52;\n      if ( byte_98A1B0[v52] || (v47 = sub_407B30(v52, 1u), v34 = v52, !v47) )\n      {\n        v28 = \"Bad defense point %1m:\\n\";\n        v3 = v34;\n      }\n      else\n      {\n        v3 = (unsigned int)v50;\n        if ( (unsigned int)sub_42EAE0(v52, (unsigned int)v50, 0LL) )\n          goto LABEL_100;\n        v3 = v52;\n        v28 = \"Defense point %1m failed:\\n\";\n      }\n      sub_433F90((char)v28);\n      sub_44A610(0LL, v3);\nLABEL_100:\n      ++v27;\n    }\n    while ( v27 < v56 );\n  }\n  result = (unsigned int)v51;\n  dword_88C268 = v51;\n  return result;\n}\n", 
            "funcStartAddr": "0x426fe0L", 
            "funcEndAddr": "0x42770bL", 
            "funcName": "sub_426FE0"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_427710(unsigned int a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  __int64 v4; // rbx\n  _BYTE *v5; // r14\n  signed __int64 v6; // r15\n  unsigned int v7; // er13\n  __int64 v8; // rbp\n  float v9; // xmm0_4\n  unsigned __int64 v10; // r8\n  int v11; // edx\n  unsigned __int64 v12; // r8\n  int v13; // edx\n  unsigned int v14; // [rsp+Ch] [rbp-5Ch]\n  unsigned int v15; // [rsp+10h] [rbp-58h]\n  unsigned int v16; // [rsp+20h] [rbp-48h]\n  __int64 v17; // [rsp+30h] [rbp-38h]\n\n  v4 = a4;\n  v14 = 3 - a1;\n  v5 = (_BYTE *)(a2 + 786);\n  v17 = a3;\n  v6 = a3 + 1012;\n  v7 = 21;\n  v8 = 0LL;\n  do\n  {\n    if ( byte_98A1C5[v8] != 3\n      && (!v4 || *(_BYTE *)(v4 + *(signed int *)(v5 - 18)) >= 2)\n      && *(_DWORD *)(v5 - 30) == 5 - (a1 == 1)\n      && !*(v5 - 2)\n      && *v5 <= 1 )\n    {\n      v15 = v8 + 21;\n      LODWORD(v9) = sub_426650((signed int)v8 + 21, a1, a2, v17);\n      if ( v9 >= 4.0 )\n      {\n        *(_BYTE *)v6 = 1;\n        if ( *(_DWORD *)(v5 - 26) == 1 || (unsigned int)sub_407B30(v15, v14) || v14 == (unsigned __int8)byte_98A1C5[v8] )\n          sub_4263C0(v15, a2, v17);\n      }\n      else if ( v9 > 2.0 )\n      {\n        *(_BYTE *)v6 = 2;\n        v16 = 20 - 20 * (v7 / 0x14);\n        if ( *(_DWORD *)(v6 + 4) <= 0 )\n          sub_4340E0(\"engine/optics.c\", 2099LL, \"heye[pos].num_attacks > 0\", v15 / 0x14 - 1, v16 + (unsigned int)v8);\n        v10 = *(signed int *)(v6 + 8);\n        if ( v10 > 0x1A4 || byte_98A1B0[v10] == 3 )\n        {\n          v11 = ((signed __int64)(1717986919 * v10) >> 35) + (1717986919 * v10 >> 63);\n          sub_4340E0(\n            \"engine/optics.c\",\n            2100LL,\n            \"ON_BOARD1(heye[pos].attack_point[0])\",\n            (unsigned int)(v11 - 1),\n            (unsigned int)(v10 - 20 * v11 - 1));\n        }\n        if ( *(_DWORD *)(v6 + 24) <= 0 )\n          sub_4340E0(\"engine/optics.c\", 2101LL, \"heye[pos].num_defends > 0\", v15 / 0x14 - 1, (unsigned int)v8 + v16);\n        v12 = *(signed int *)(v6 + 28);\n        if ( v12 > 0x1A4 || byte_98A1B0[v12] == 3 )\n        {\n          v13 = ((signed __int64)(1717986919 * v12) >> 35) + (1717986919 * v12 >> 63);\n          sub_4340E0(\n            \"engine/optics.c\",\n            2102LL,\n            \"ON_BOARD1(heye[pos].defense_point[0])\",\n            (unsigned int)(v13 - 1),\n            (unsigned int)(v12 - 20 * v13 - 1));\n        }\n      }\n    }\n    ++v7;\n    ++v8;\n    v5 += 36;\n    v6 += 48LL;\n  }\n  while ( v8 != 379 );\n}\n", 
            "funcStartAddr": "0x427710L", 
            "funcEndAddr": "0x42799cL", 
            "funcName": "sub_427710"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4279A0(unsigned int a1, int a2, __int64 a3)\n{\n  __int64 v3; // r14\n  int v4; // er11\n  int v5; // ecx\n  int v6; // er15\n  int v7; // eax\n  int v8; // eax\n  int v9; // edi\n  int v10; // ecx\n  int v11; // er12\n  int v12; // ebp\n  __int64 v13; // r9\n  unsigned int v14; // er10\n  _BOOL4 v15; // ecx\n  __int64 v16; // r15\n  unsigned int v17; // er8\n  unsigned int v18; // ebp\n  __int64 v19; // rbp\n  int v20; // eax\n  bool v21; // bp\n  signed int v22; // er13\n  __int64 v23; // rdi\n  __int64 v24; // r13\n  unsigned int v25; // er15\n  unsigned int v26; // ebx\n  int v27; // eax\n  bool v28; // zf\n  __int64 v29; // rdi\n  __int64 v30; // rbp\n  unsigned int v31; // er15\n  unsigned int v32; // ebx\n  int v33; // eax\n  bool v34; // zf\n  __int64 v35; // rdi\n  unsigned int v36; // er15\n  unsigned int v37; // ebx\n  int v38; // eax\n  unsigned int v40; // [rsp+Ch] [rbp-3Ch]\n\n  v40 = a1;\n  v3 = (signed int)a1;\n  v4 = (unsigned __int8)byte_98A1B0[dword_5641B0[0] + (signed __int64)(signed int)a1];\n  v5 = (unsigned __int8)byte_98A1B0[dword_5641B0[0] + (signed __int64)(signed int)a1];\n  if ( v4 == 3 )\n    v5 = 0;\n  v6 = (unsigned __int8)byte_98A1B0[dword_5641B4 + (signed __int64)(signed int)a1];\n  v7 = (unsigned __int8)byte_98A1B0[dword_5641B4 + (signed __int64)(signed int)a1];\n  if ( v6 == 3 )\n    v7 = 0;\n  v8 = v5 | v7;\n  v9 = (unsigned __int8)byte_98A1B0[dword_5641B8 + (signed __int64)(signed int)a1];\n  v10 = (unsigned __int8)byte_98A1B0[dword_5641B8 + v3];\n  if ( v9 == 3 )\n    v10 = 0;\n  v11 = (unsigned __int8)byte_98A1B0[dword_5641BC + v3];\n  v12 = (unsigned __int8)byte_98A1B0[dword_5641BC + v3];\n  if ( v11 == 3 )\n    v12 = 0;\n  if ( (v8 | v10 | v12) != 3 )\n    goto LABEL_55;\n  v13 = v3 + dword_5641B0[0];\n  v14 = 3 - a2;\n  v15 = 1;\n  if ( 3 - a2 == v4 )\n    v15 = *(_DWORD *)(a3 + 4 * v13) != 0;\n  if ( v14 == v6 )\n  {\n    v16 = v3 + dword_5641B4;\n    if ( !*(_DWORD *)(a3 + 4 * (v3 + dword_5641B4)) )\n      v15 = 0;\n  }\n  else\n  {\n    v16 = v3 + dword_5641B4;\n  }\n  v17 = v40;\n  if ( v14 == v9 && !*(_DWORD *)(a3 + 4 * (v3 + dword_5641B8)) )\n    v15 = 0;\n  v18 = 0;\n  if ( v14 == v11 && !*(_DWORD *)(a3 + 4 * (v3 + dword_5641BC)) || !v15 )\n  {\n    if ( v14 != v4 || !*(_DWORD *)(a3 + 4 * v13) )\n      goto LABEL_63;\n    if ( !dword_98A7F4 )\n    {\n      v21 = dword_8E94D4[95 * v13] == 0;\n      goto LABEL_29;\n    }\n    if ( dword_98A7F4 > 0 )\n    {\n      v19 = a3;\n      v20 = sub_43B050((unsigned int)v13, 0LL);\n      v14 = 3 - a2;\n      v17 = v40;\n      a3 = v19;\n      v21 = v20 == 0;\n      v16 = v3 + dword_5641B4;\n    }\n    else\n    {\nLABEL_63:\n      v21 = 0;\n    }\nLABEL_29:\n    v22 = v21;\n    if ( v14 == (unsigned __int8)byte_98A1B0[v16] && *(_DWORD *)(a3 + 4 * v16) )\n    {\n      if ( !dword_98A7F4 )\n      {\n        v28 = dword_8E94D4[95 * v16] == 0;\n        goto LABEL_36;\n      }\n      if ( dword_98A7F4 > 0 )\n      {\n        v23 = (unsigned int)v16;\n        v24 = a3;\n        v25 = v17;\n        v26 = v14;\n        v27 = sub_43B050(v23, 0LL);\n        v14 = v26;\n        v17 = v25;\n        a3 = v24;\n        v28 = v27 == 0;\nLABEL_36:\n        v22 = v21 || v28;\n        goto LABEL_37;\n      }\n    }\nLABEL_37:\n    if ( v14 == (unsigned __int8)byte_98A1B0[dword_5641B8 + v3] )\n    {\n      v29 = v3 + dword_5641B8;\n      if ( *(_DWORD *)(a3 + 4 * v29) )\n      {\n        if ( !dword_98A7F4 )\n        {\n          v34 = dword_8E94D4[95 * v29] == 0;\nLABEL_43:\n          if ( v34 )\n            v22 = 1;\n          goto LABEL_45;\n        }\n        if ( dword_98A7F4 > 0 )\n        {\n          v30 = a3;\n          v31 = v17;\n          v32 = v14;\n          v33 = sub_43B050(v29, 0LL);\n          v14 = v32;\n          v17 = v31;\n          a3 = v30;\n          v34 = v33 == 0;\n          goto LABEL_43;\n        }\n      }\n    }\nLABEL_45:\n    if ( v14 == (unsigned __int8)byte_98A1B0[dword_5641BC + v3] )\n    {\n      v35 = v3 + dword_5641BC;\n      if ( *(_DWORD *)(a3 + 4 * v35) )\n      {\n        if ( !dword_98A7F4 )\n        {\n          if ( dword_8E94D4[95 * v35] )\n          {\n            v18 = 0;\n            goto LABEL_59;\n          }\nLABEL_52:\n          v18 = 0;\n          if ( !(unsigned int)sub_43F100(v17, v14) )\n          {\n            v18 = 1;\n            if ( dword_88C264 & 2 )\n              sub_433F90((unsigned __int64)\"False margin for %C at %1m.\\n\");\n          }\n          return v18;\n        }\n        if ( dword_98A7F4 > 0 )\n        {\n          v18 = 0;\n          v36 = v17;\n          v37 = v14;\n          v38 = sub_43B050(v35, 0LL);\n          v14 = v37;\n          v17 = v36;\n          if ( !v38 )\n            goto LABEL_52;\nLABEL_59:\n          if ( !v22 )\n            return v18;\n          goto LABEL_52;\n        }\n      }\n    }\n    if ( v22 )\n      goto LABEL_52;\nLABEL_55:\n    v18 = 0;\n  }\n  return v18;\n}\n", 
            "funcStartAddr": "0x4279a0L", 
            "funcEndAddr": "0x427c88L", 
            "funcName": "sub_4279A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_427C90(int a1, _DWORD *a2, _DWORD *a3, unsigned int *a4, __int64 a5, __int64 a6, __int64 a7)\n{\n  unsigned int *v7; // r15\n  _DWORD *v8; // r12\n  _DWORD *v9; // rbp\n  signed int v10; // edx\n  signed int v11; // esi\n  signed int v12; // ecx\n  __int64 result; // rax\n  int v14; // er14\n  int v15; // er12\n  __int64 v16; // rsi\n  signed __int64 v17; // rbx\n  __int64 v18; // r11\n  unsigned int v19; // edi\n  _BYTE *v20; // rcx\n  char *v21; // rbx\n  bool v22; // r10\n  __int64 v23; // r13\n  __int64 v24; // r8\n  char v25; // al\n  char v26; // al\n  char v27; // dl\n  char v28; // r9\n  char *v29; // r15\n  void **v30; // rcx\n  __int64 v31; // rdx\n  signed __int64 v32; // rcx\n  bool v33; // zf\n  char *v34; // r9\n  signed int i; // esi\n  __int64 v36; // rdx\n  __int64 v37; // rdi\n  __int64 v38; // r15\n  char v39; // r8\n  __int64 v40; // rbp\n  __int64 v41; // rbx\n  __int64 v42; // r10\n  __int64 v43; // r8\n  signed __int64 v44; // rax\n  __int64 v45; // rax\n  unsigned int v46; // eax\n  unsigned int v47; // ecx\n  unsigned int v48; // edx\n  unsigned int v49; // esi\n  _BYTE *v50; // r11\n  __int64 v51; // r10\n  __int64 v52; // rdi\n  _BYTE *v53; // r14\n  char v54; // r15\n  int v55; // ecx\n  __int64 v56; // rbx\n  __int64 v57; // rcx\n  signed __int64 v58; // rdx\n  signed int *v59; // r12\n  signed __int64 v60; // rdx\n  signed __int64 v61; // rcx\n  int v62; // eax\n  __int64 v63; // rbp\n  int v64; // eax\n  __int64 v65; // rcx\n  int v66; // ecx\n  __int64 v67; // rbx\n  __int64 v68; // rcx\n  signed __int64 v69; // rdx\n  signed int *v70; // r14\n  signed __int64 v71; // rdx\n  signed __int64 v72; // rcx\n  int v73; // eax\n  __int64 v74; // rbx\n  int v75; // eax\n  __int64 v76; // rcx\n  __int64 v77; // rbx\n  __int64 v78; // rsi\n  __int64 v79; // rdx\n  __int64 v80; // rsi\n  __int64 v81; // rdx\n  __int64 v82; // [rsp+0h] [rbp-198h]\n  __int64 v83; // [rsp+8h] [rbp-190h]\n  char *v84; // [rsp+8h] [rbp-190h]\n  int v85; // [rsp+14h] [rbp-184h]\n  signed __int64 v86; // [rsp+18h] [rbp-180h]\n  signed __int64 v87; // [rsp+18h] [rbp-180h]\n  signed __int64 v88; // [rsp+20h] [rbp-178h]\n  __int64 v89; // [rsp+20h] [rbp-178h]\n  unsigned int v90; // [rsp+2Ch] [rbp-16Ch]\n  _DWORD *v91; // [rsp+30h] [rbp-168h]\n  _DWORD *v92; // [rsp+38h] [rbp-160h]\n  unsigned int *v93; // [rsp+40h] [rbp-158h]\n  void **v94; // [rsp+48h] [rbp-150h]\n  signed __int64 v95; // [rsp+50h] [rbp-148h]\n  char v96; // [rsp+60h] [rbp-138h]\n  char v97[31]; // [rsp+61h] [rbp-137h]\n  char v98; // [rsp+80h] [rbp-118h]\n  char v99[31]; // [rsp+81h] [rbp-117h]\n  char v100; // [rsp+A0h] [rbp-F8h]\n  char v101[27]; // [rsp+A1h] [rbp-F7h]\n  int v102; // [rsp+BCh] [rbp-DCh]\n  int v103[19]; // [rsp+C0h] [rbp-D8h]\n  int v104; // [rsp+10Ch] [rbp-8Ch]\n  int v105; // [rsp+110h] [rbp-88h]\n  int v106[33]; // [rsp+114h] [rbp-84h]\n\n  v7 = a4;\n  v8 = a3;\n  v9 = a2;\n  v85 = a1;\n  if ( !a2 )\n    sub_4340E0(\"engine/optics.c\", 1107LL, \"attack_point != ((void*)0)\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  if ( !a3 )\n    sub_4340E0(\"engine/optics.c\", 1108LL, \"defense_point != ((void*)0)\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  v10 = 2;\n  if ( *(_DWORD *)(a5 + 36LL * a1) != 5 )\n    v10 = *(_DWORD *)(a5 + 36LL * a1);\n  v11 = 1;\n  if ( v10 != 4 )\n    v11 = v10;\n  v12 = *(_DWORD *)(a5 + 36LL * a1 + 8);\n  result = 0LL;\n  if ( v12 <= 20 )\n  {\n    v93 = v7;\n    v90 = v11;\n    v91 = v9;\n    v92 = v8;\n    if ( *(_DWORD *)(a5 + 36LL * a1 + 4) - v12 <= 7 )\n    {\n      v82 = a6;\n      v14 = 0;\n      v15 = 0;\n      v83 = dword_565C68;\n      if ( dword_565C68 > 0LL )\n      {\n        v16 = (unsigned int)(dword_565C68 - 1);\n        v88 = a6 + 4;\n        v17 = a5 + 30;\n        v18 = 0LL;\n        v19 = 21;\n        v15 = 0;\n        v14 = 0;\n        v86 = a5 + 30;\n        do\n        {\n          v20 = (_BYTE *)(v88 + 48LL * v19);\n          v21 = (char *)(v17 + 36LL * v19);\n          v22 = v18 == 0 || v18 == v16;\n          v23 = 0LL;\n          do\n          {\n            if ( *(_DWORD *)(v21 - 18) == v85 )\n            {\n              v24 = v15;\n              *(&v105 + v24) = v19 + v23;\n              v25 = *(v21 - 2);\n              *(&v100 + v24) = v25;\n              v14 -= ((unsigned __int8)v25 < 1u) - 1;\n              v26 = *v21;\n              *(&v96 + v24) = *v21;\n              v27 = v22 + 1;\n              if ( v16 != v23 )\n                v27 = v18 == 0 || v18 == v16;\n              v28 = v22 + 1;\n              if ( v23 )\n                v28 = v27;\n              *(&v98 + v15) = v28;\n              if ( *v20 == 2 )\n              {\n                *(&v96 + v15++) = v26 + 1;\n                v101[v24] = 1;\n                v106[v24] = 0;\n                v99[v24] = 0;\n                ++v14;\n                v97[v24] = 1;\n              }\n              ++v15;\n            }\n            ++v23;\n            v20 += 48;\n            v21 += 36;\n          }\n          while ( (unsigned int)v83 != v23 );\n          ++v18;\n          v19 += 20;\n          v17 = v86;\n        }\n        while ( v18 < v83 );\n      }\n      v29 = (char *)off_5EE0D0;\n      result = 0LL;\n      if ( off_5EE0D0 )\n      {\n        v30 = &off_5EE0D0;\n        v31 = 0LL;\n        do\n        {\n          if ( dword_5EE0DC[10 * v31] == v15 && dword_5EE0E0[10 * v31] == v14 )\n          {\n            v84 = v29;\n            v89 = v31;\n            v94 = v30;\n            v87 = 5 * v31;\n            memset(byte_877BC0, 0, v15);\n            v32 = -1LL;\n            do\n              v33 = byte_877BC1[v32++] == 0;\n            while ( !v33 );\n            byte_877BC0[(unsigned int)v32] = 1;\n            v103[0] = v32;\n            v34 = v29;\n            v95 = (signed __int64)(v29 + 4);\nLABEL_30:\n            for ( i = 0; ; v103[i] = v32 )\n            {\n              v36 = i;\n              v37 = *(&v96 + (signed int)v32);\n              if ( (_BYTE)v37 != v34[20 * i + 3]\n                || *(&v100 + (signed int)v32) != v34[20 * i]\n                || *(&v98 + (signed int)v32) < v34[20 * i + 1] )\n              {\n                break;\n              }\n              v38 = *(&v105 + (signed int)v32);\n              v39 = v34[20 * i + 2];\n              if ( (unsigned __int8)(byte_98A1B0[v38] - 1) > 1u )\n              {\n                if ( !(v39 & 1) )\n                  goto LABEL_57;\n              }\n              else if ( !(v39 & 2) )\n              {\n                goto LABEL_57;\n              }\n              if ( (char)v37 > 0 )\n              {\n                v40 = 0LL;\n                do\n                {\n                  v41 = *(signed int *)(v95 + 20LL * i + 4 * v40);\n                  if ( (signed int)v41 < i )\n                  {\n                    v42 = v103[v41];\n                    v43 = *(&v105 + v42);\n                    if ( (_DWORD)v38 != (_DWORD)v43 + 1\n                      && (_DWORD)v38 != (_DWORD)v43 - 20\n                      && (_DWORD)v38 != (_DWORD)v43 + 20\n                      && (_DWORD)v38 != (_DWORD)v43 - 1\n                      && ((_DWORD)v32 != (_DWORD)v42 - 1 || !(_DWORD)v38 || *(_BYTE *)(48 * v38 + v82 + 4) != 2)\n                      && ((_DWORD)v42 != (_DWORD)v32 - 1 || !(_DWORD)v43 || *(_BYTE *)(v82 + 48 * v43 + 4) != 2) )\n                    {\n                      v34 = v84;\n                      goto LABEL_57;\n                    }\n                  }\n                  ++v40;\n                }\n                while ( v40 < v37 );\n              }\n              ++i;\n              v44 = v87;\n              v34 = v84;\n              if ( i == v15 )\n              {\nLABEL_67:\n                v46 = dword_5EE0F0[2 * v44];\n                *v93 = v46;\n                *(_QWORD *)(a7 + 640) = 0LL;\n                v47 = v46 >> 8;\n                if ( BYTE1(v46) >= 2u )\n                  LOBYTE(v47) = 2;\n                v48 = v46 >> 16;\n                if ( BYTE2(v46) >= 2u )\n                  LOBYTE(v48) = 2;\n                if ( (_BYTE)v47 != (_BYTE)v48 )\n                {\n                  v49 = v46 >> 24;\n                  if ( HIBYTE(v46) >= 2u )\n                    LOBYTE(v49) = 2;\n                  if ( (unsigned __int8)v46 >= 2u )\n                    LOBYTE(v46) = 2;\n                  if ( (unsigned __int8)(v48 + v49) > (unsigned __int8)(v46 + v47) )\n                  {\n                    if ( v15 <= 0 )\n                      goto LABEL_117;\n                    v50 = *v94;\n                    v51 = (unsigned int)v15;\n                    v52 = 0LL;\n                    do\n                    {\n                      v53 = &v50[20 * v52];\n                      v54 = v50[20 * v52 + 2];\n                      if ( v54 & 8 )\n                      {\n                        v55 = v103[v52];\n                        v56 = v55;\n                        if ( *v53\n                          && v55 > 0\n                          && (v57 = *(&v104 + v55), *(&v104 + v56))\n                          && (v58 = 48 * v57, *(_BYTE *)(v82 + 48 * v57 + 4) == 2) )\n                        {\n                          if ( *(_DWORD *)(v82 + v58 + 8) > 0 )\n                          {\n                            v59 = (signed int *)(v82 + v58 + 8);\n                            v60 = v82 + 12 + v58;\n                            v61 = 0LL;\n                            do\n                            {\n                              v62 = *(_DWORD *)(v60 + 4 * v61);\n                              v63 = *(signed int *)(a7 + 640);\n                              *(_DWORD *)(a7 + 640) = v63 + 1;\n                              *(_DWORD *)(a7 + 4 * v63) = v62;\n                              ++v61;\n                            }\n                            while ( v61 < *v59 );\n                          }\n                        }\n                        else\n                        {\n                          v64 = *(&v105 + v56);\n                          v65 = *(signed int *)(a7 + 640);\n                          *(_DWORD *)(a7 + 640) = v65 + 1;\n                          *(_DWORD *)(a7 + 4 * v65) = v64;\n                        }\n                      }\n                      if ( v54 & 4 )\n                      {\n                        v66 = v103[v52];\n                        v67 = v66;\n                        if ( *v53\n                          && v66 > 0\n                          && (v68 = *(&v104 + v66), *(&v104 + v67))\n                          && (v69 = 48 * v68, *(_BYTE *)(v82 + 48 * v68 + 4) == 2) )\n                        {\n                          if ( *(_DWORD *)(v82 + v69 + 28) > 0 )\n                          {\n                            v70 = (signed int *)(v82 + v69 + 28);\n                            v71 = v82 + 32 + v69;\n                            v72 = 0LL;\n                            do\n                            {\n                              v73 = *(_DWORD *)(v71 + 4 * v72);\n                              v74 = *(signed int *)(a7 + 644);\n                              *(_DWORD *)(a7 + 644) = v74 + 1;\n                              *(_DWORD *)(a7 + 4 * v74 + 320) = v73;\n                              ++v72;\n                            }\n                            while ( v72 < *v70 );\n                          }\n                        }\n                        else\n                        {\n                          v75 = *(&v105 + v67);\n                          v76 = *(signed int *)(a7 + 644);\n                          *(_DWORD *)(a7 + 644) = v76 + 1;\n                          *(_DWORD *)(a7 + 4 * v76 + 320) = v75;\n                        }\n                      }\n                      ++v52;\n                    }\n                    while ( v52 != v51 );\n                    if ( *(_DWORD *)(a7 + 640) <= 0 || *(_DWORD *)(a7 + 644) <= 0 )\nLABEL_117:\n                      sub_4340E0(\n                        \"engine/optics.c\",\n                        1305LL,\n                        \"vp->num_attacks > 0 && vp->num_defenses > 0\",\n                        0xFFFFFFFFLL,\n                        0xFFFFFFFFLL);\n                    *v91 = *(_DWORD *)a7;\n                    *v92 = *(_DWORD *)(a7 + 320);\n                    if ( *(_DWORD *)(a7 + 644) > 0 )\n                    {\n                      v77 = 0LL;\n                      while ( (unsigned int)sub_43F100(*(unsigned int *)(a7 + 4 * v77 + 320), v90) != 5 )\n                      {\n                        if ( ++v77 >= *(signed int *)(a7 + 644) )\n                          goto LABEL_109;\n                      }\n                      *v92 = *(_DWORD *)(a7 + 4 * v77 + 320);\n                    }\nLABEL_109:\n                    if ( dword_88C264 & 2 )\n                    {\n                      v78 = (unsigned int)*v91;\n                      v79 = (unsigned int)*v92;\n                      sub_433F90((unsigned __int64)\"  vital points: %1m (attack) %1m (defense)\\n\");\n                      if ( dword_88C264 & 2 )\n                      {\n                        v80 = (unsigned int)dword_5EE0D8[2 * v87];\n                        sub_433F90((unsigned __int64)\"  pattern matched:  %d\\n\");\n                      }\n                    }\n                  }\n                }\n                if ( dword_88C268 )\n                {\n                  v81 = (unsigned int)dword_5EE0D8[2 * v87];\n                  sub_433F90((unsigned __int64)\"eye space at %1m of type %d\\n\");\n                }\n                return v90;\n              }\n              v32 = -1LL;\n              do\n                v33 = byte_877BC1[v32++] == 0;\n              while ( !v33 );\n              byte_877BC0[(unsigned int)v32] = 1;\n            }\n            while ( 1 )\n            {\nLABEL_57:\n              byte_877BC0[(signed int)v32] = 0;\n              LODWORD(v45) = v32 + 1;\n              if ( (signed int)v32 + 1 < v15 )\n              {\n                v45 = (signed int)v45;\n                while ( byte_877BC0[v45] )\n                {\n                  if ( ++v45 >= v15 )\n                    goto LABEL_61;\n                }\n                byte_877BC0[v45] = 1;\n                v103[v36] = v45;\n                LODWORD(v32) = v103[(signed int)v36];\n                i = v36;\n                goto LABEL_30;\n              }\nLABEL_61:\n              if ( v36 <= 0 )\n                break;\n              LODWORD(v32) = *(&v102 + v36--);\n            }\n            v33 = v15 == (_DWORD)v36 - 1;\n            v44 = v87;\n            v31 = v89;\n            if ( v33 )\n              goto LABEL_67;\n          }\n          v30 = &off_5EE0D0 + 5 * ++v31;\n          v29 = (char *)*(&off_5EE0D0 + 5 * v31);\n        }\n        while ( v29 );\n        result = 0LL;\n      }\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x427c90L", 
            "funcEndAddr": "0x42848eL", 
            "funcName": "sub_427C90"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_428490(unsigned int a1, unsigned int a2, __int64 a3, __int64 a4, __int64 a5, unsigned int a6)\n{\n  __int64 v6; // rbx\n  __int64 v7; // r14\n  __int64 v8; // rbp\n  int v9; // eax\n  int v10; // ebp\n  int v11; // ebx\n  _DWORD *v12; // rax\n  _DWORD *v13; // r14\n  int v14; // ebp\n  int v15; // eax\n  signed __int64 v16; // rbx\n  int v17; // ebp\n  signed __int64 v18; // r12\n  int v19; // eax\n  bool v20; // cl\n  int v21; // er14\n  signed __int64 v22; // rbp\n  int v23; // eax\n  bool v24; // cl\n  void *v26; // [rsp+0h] [rbp-78h]\n  _DWORD *v27; // [rsp+8h] [rbp-70h]\n  __int64 v28; // [rsp+10h] [rbp-68h]\n  unsigned __int64 v29; // [rsp+18h] [rbp-60h]\n  _DWORD *v30; // [rsp+20h] [rbp-58h]\n  __int64 v31; // [rsp+28h] [rbp-50h]\n  __int64 v32; // [rsp+30h] [rbp-48h]\n  __int64 v33; // [rsp+38h] [rbp-40h]\n  __int64 v34; // [rsp+40h] [rbp-38h]\n\n  v6 = a6;\n  v7 = a5;\n  v8 = a4;\n  v28 = a3;\n  v9 = (unsigned __int8)byte_98A1B0[a1];\n  v32 = (signed int)a2;\n  if ( 3 - (unsigned __int8)byte_98A1B0[a2] != v9 )\n    sub_4340E0(\"engine/owl.c\", 258LL, \"board[apos] == (1+2-(board[bpos]))\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  dword_88C22C = 1;\n  if ( dword_88C268 )\n    sub_433F90((unsigned __int64)\"owl_analyze_semeai: %1m vs. %1m\\n\");\n  v34 = v6;\n  v33 = v8;\n  if ( (_DWORD)v6 )\n  {\n    sub_4287E0(&v26, a1, 0LL, 0LL, 1LL);\n    sub_4287E0(&v27, a2, 0LL, 0LL, 0LL);\n    v10 = (signed int)v26;\n    v11 = (signed int)v27;\n    sub_428A70(v26, v27);\n  }\n  else\n  {\n    v31 = v7;\n    if ( dword_877DE4 )\n    {\n      dword_877DE0 = 0;\n      v12 = qword_877DE8;\n      v26 = qword_877DE8;\n      *((_DWORD *)qword_877DE8 + 8953) = 0;\n      v13 = v12;\n    }\n    else\n    {\n      v14 = 28;\n      if ( dword_98A7EC > 26 )\n        v14 = dword_98A7EC + 2;\n      if ( !dword_565C7C )\n        v14 = dword_98A7EC + 2;\n      dword_877DE4 = v14;\n      v12 = malloc(35816LL * v14);\n      v13 = v12;\n      qword_877DE8 = v12;\n      if ( !v12 )\n        sub_4340E0(\"engine/owl.c\", 4991LL, \"owl_stack != ((void*)0)\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n      v26 = v12;\n      dword_877DE0 = 0;\n      v12[8953] = 0;\n      if ( !v14 )\n      {\n        v15 = 28;\n        if ( dword_98A7EC > 26 )\n          v15 = dword_98A7EC + 2;\n        if ( !dword_565C7C )\n          v15 = dword_98A7EC + 2;\n        dword_877DE4 = v15;\n        v12 = malloc(35816LL * v15);\n        qword_877DE8 = v12;\n        if ( !v12 )\n          sub_4340E0(\"engine/owl.c\", 4991LL, \"owl_stack != ((void*)0)\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n      }\n    }\n    dword_877DE0 = 1;\n    v16 = (signed __int64)(v12 + 8954);\n    v27 = v12 + 8954;\n    v29 = 35816LL;\n    v30 = v12;\n    v12[17907] = 1;\n    dword_877BE0 = 0;\n    v17 = (unsigned __int8)byte_98A1B0[a1];\n    v18 = 21LL;\n    do\n    {\n      if ( byte_98A1B0[v18] != 3 )\n      {\n        v19 = sub_456290((unsigned int)v18, a1);\n        v20 = 1;\n        if ( !v19 )\n          v20 = (unsigned int)sub_456290((unsigned int)v18, 0LL) != 0;\n        *((_BYTE *)v13 + v18) = v20;\n      }\n      ++v18;\n    }\n    while ( v18 != 400 );\n    v13[300] = v17;\n    v21 = (unsigned __int8)byte_98A1B0[v32];\n    v22 = 21LL;\n    do\n    {\n      if ( byte_98A1B0[v22] != 3 )\n      {\n        v23 = sub_456290((unsigned int)v22, a2);\n        v24 = 1;\n        if ( !v23 )\n          v24 = (unsigned int)sub_456290((unsigned int)v22, 0LL) != 0;\n        *(_BYTE *)(v16 + v22) = v24;\n      }\n      ++v22;\n    }\n    while ( v22 != 400 );\n    v30[v29 / 4 + 300] = v21;\n    v10 = (signed int)v26;\n    v11 = (signed int)v27;\n  }\n  return sub_428B30(a1, a2, v10, v11);\n}\n", 
            "funcStartAddr": "0x428490L", 
            "funcEndAddr": "0x4287dbL", 
            "funcName": "sub_428490"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4287E0(__int64 *a1, signed int a2, signed int a3, unsigned int a4, int a5)\n{\n  int v5; // ebp\n  signed int v6; // er12\n  int v7; // eax\n  signed __int64 v8; // rax\n  _DWORD *v9; // rcx\n  char *v10; // rbp\n  int v11; // er14\n  int v12; // edx\n  signed __int64 v13; // rbx\n  _BOOL4 v14; // eax\n  bool v15; // cl\n  __int64 v16; // rbx\n  __int64 v17; // rbp\n  int v18; // er14\n  __int64 v19; // rcx\n  __int64 v20; // rcx\n  __int64 v21; // rdx\n  __int64 v22; // rax\n  __int64 v23; // rsi\n  __int64 v24; // rsi\n  __int64 v25; // rax\n  unsigned int v27; // [rsp+8h] [rbp-5E0h]\n  int v28; // [rsp+Ch] [rbp-5DCh]\n  int v29; // [rsp+10h] [rbp-5D8h]\n  int v30[373]; // [rsp+14h] [rbp-5D4h]\n\n  v5 = a5;\n  v27 = a4;\n  v6 = a3;\n  if ( !dword_877DE4 )\n  {\n    v7 = 28;\n    if ( dword_98A7EC > 26 )\n      v7 = dword_98A7EC + 2;\n    if ( !dword_565C7C )\n      v7 = dword_98A7EC + 2;\n    dword_877DE4 = v7;\n    qword_877DE8 = malloc(35816LL * v7);\n    if ( !qword_877DE8 )\n      sub_4340E0(\"engine/owl.c\", 4991LL, \"owl_stack != ((void*)0)\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  }\n  if ( v5 )\n  {\n    dword_877DE0 = 0;\n    LODWORD(v8) = 0;\n    v9 = qword_877DE8;\n    v10 = (char *)qword_877DE8;\n  }\n  else\n  {\n    v8 = dword_877DE0++ + 1LL;\n    v9 = qword_877DE8;\n    v10 = (char *)qword_877DE8 + 35816 * v8;\n  }\n  *a1 = (__int64)v10;\n  v9[8954 * (signed int)v8 + 8953] = v8;\n  dword_877BE0 = 0;\n  *((_DWORD *)v10 + 8851) = 0;\n  v11 = (unsigned __int8)byte_98A1B0[a2];\n  if ( v6 && byte_98A1B0[v6] != (_BYTE)v11 )\n  {\n    v12 = (1717986919LL * v6 >> 35) + ((unsigned __int64)(1717986919LL * v6) >> 63);\n    sub_4340E0(\n      \"engine/owl.c\",\n      3330LL,\n      \"bpos == NO_MOVE || board[bpos] == color\",\n      (unsigned int)(v12 - 1),\n      (unsigned int)(v6 - 20 * v12 - 1));\n  }\n  v13 = 21LL;\n  do\n  {\n    if ( byte_98A1B0[v13] != 3 )\n    {\n      v14 = sub_414710(v13, a2);\n      v15 = 1;\n      if ( !v14 )\n        v15 = (unsigned int)sub_414710(v13, v6) != 0;\n      v10[v13] = v15;\n    }\n    ++v13;\n  }\n  while ( v13 != 400 );\n  *((_DWORD *)v10 + 300) = v11;\n  sub_42FED0(v10);\n  if ( v27 )\n  {\n    v16 = *a1;\n    v17 = qword_88C238;\n    v18 = dword_88C22C;\n    qword_88C238 = 0LL;\n    dword_88C22C = 0;\n    sub_44D5D0(v27, &v28, &v29);\n    qword_88C238 = v17;\n    dword_88C22C = v18;\n    if ( v28 > 0LL )\n    {\n      v19 = 0LL;\n      while ( !*(_BYTE *)(v16 + *(&v29 + v19)) )\n      {\n        if ( ++v19 >= v28 )\n          return sub_42FD50(*a1);\n      }\n      v20 = v28 & 1;\n      if ( v28 == 1 )\n      {\n        v21 = 0LL;\n        if ( !(v28 & 1) )\n          return sub_42FD50(*a1);\n        goto LABEL_36;\n      }\n      v22 = v28 - v20;\n      v21 = 0LL;\n      do\n      {\n        v23 = *(&v29 + v21);\n        if ( !*(_BYTE *)(v16 + v23) )\n          *(_BYTE *)(v16 + v23) = 2;\n        v24 = v30[v21];\n        if ( !*(_BYTE *)(v16 + v24) )\n          *(_BYTE *)(v16 + v24) = 2;\n        v21 += 2LL;\n      }\n      while ( v22 != v21 );\n      if ( v20 )\n      {\nLABEL_36:\n        v25 = *(&v29 + v21);\n        if ( !*(_BYTE *)(v16 + v25) )\n          *(_BYTE *)(v16 + v25) = 2;\n        return sub_42FD50(*a1);\n      }\n    }\n  }\n  return sub_42FD50(*a1);\n}\n", 
            "funcStartAddr": "0x4287e0L", 
            "funcEndAddr": "0x428a65L", 
            "funcName": "sub_4287E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_428A70(__int64 a1, __int64 a2)\n{\n  int v2; // eax\n  __int64 v3; // rbx\n  __int64 v4; // r15\n\n  qword_877C30 = a1;\n  qword_877C40 = a2;\n  if ( !*(_DWORD *)(a1 + 35404) )\n    ((void (*)(void))sub_4310E0)();\n  v2 = *(_DWORD *)(a1 + 1200);\n  v3 = a1 + 1204;\n  v4 = 0LL;\n  if ( v2 == 2 )\n    v4 = a1 + 1204;\n  if ( v2 == 2 )\n    v3 = 0LL;\n  if ( a2 )\n  {\n    if ( v2 != 3 - *(_DWORD *)(a2 + 1200) )\n      sub_4340E0(\"engine/owl.c\", 4368LL, \"owla->color == (1+2-(owlb->color))\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n    if ( !*(_DWORD *)(a2 + 35404) )\n      sub_4310E0(a2);\n    if ( *(_DWORD *)(a2 + 1200) == 2 )\n      v4 = a2 + 1204;\n    if ( *(_DWORD *)(a2 + 1200) != 2 )\n      v3 = a2 + 1204;\n  }\n  return sub_424410(v4, v3, 1);\n}\n", 
            "funcStartAddr": "0x428a70L", 
            "funcEndAddr": "0x428b2cL", 
            "funcName": "sub_428A70"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_428B30(unsigned int a1, unsigned int a2, _DWORD *a3, char *a4, _DWORD *a5, unsigned int *a6, char *a7, int a8, int a9)\n{\n  char *v9; // rbx\n  unsigned int v10; // edi\n  char *v11; // rcx\n  __int64 v12; // rcx\n  unsigned int v13; // eax\n  const char *v14; // rdi\n  char *v15; // rax\n  int v16; // eax\n  int v17; // ecx\n  int v18; // eax\n  _DWORD *v19; // rdi\n  char v20; // al\n  const char *v21; // r9\n  unsigned int v22; // eax\n  int v23; // ecx\n  const char *v24; // r9\n  __int64 result; // rax\n  int v26; // ecx\n  char v27; // cl\n  const char *v28; // rdi\n  __int64 v29; // rax\n  int v30; // ecx\n  signed __int64 v31; // rbp\n  signed __int64 v32; // rbx\n  __int64 v33; // rdi\n  unsigned int *v34; // r12\n  char v35; // dl\n  _BYTE *v36; // rax\n  signed __int64 v37; // rcx\n  signed int v38; // eax\n  __int64 v39; // rdi\n  __int64 v40; // rsi\n  __int64 v41; // r8\n  __int64 v42; // r9\n  bool v43; // cf\n  signed int v44; // eax\n  signed __int64 v45; // rbx\n  unsigned __int64 v46; // rbp\n  __int64 v47; // rdi\n  unsigned int *v48; // r13\n  char v49; // dl\n  _BYTE *v50; // rax\n  signed __int64 v51; // rcx\n  signed int v52; // eax\n  __int64 v53; // rdi\n  __int64 v54; // rsi\n  __int64 v55; // rcx\n  __int64 v56; // r9\n  signed int v57; // eax\n  signed __int64 v58; // r12\n  unsigned __int64 v59; // rbx\n  __int64 v60; // rbp\n  char v61; // dl\n  _BYTE *v62; // rax\n  signed __int64 v63; // rcx\n  signed int v64; // eax\n  __int64 v65; // rcx\n  __int64 v66; // r8\n  __int64 v67; // r9\n  signed int v68; // eax\n  signed __int64 v69; // r13\n  unsigned __int64 v70; // rbx\n  __int64 v71; // rbp\n  char v72; // dl\n  _BYTE *v73; // rax\n  signed __int64 v74; // rcx\n  signed int v75; // eax\n  __int64 v76; // rcx\n  __int64 v77; // r9\n  signed int v78; // eax\n  int v79; // ebx\n  signed __int64 v80; // rcx\n  __int64 v81; // r13\n  unsigned __int64 v82; // r15\n  signed __int64 v83; // rbp\n  signed __int64 v84; // r15\n  char *v85; // rdi\n  signed __int64 v86; // r12\n  char v87; // dl\n  _BYTE *v88; // rax\n  signed __int64 v89; // rcx\n  unsigned int v90; // ebx\n  bool v91; // zf\n  signed int v92; // eax\n  unsigned int v93; // eax\n  char *v94; // r12\n  signed __int64 v95; // rsi\n  signed __int64 v96; // r13\n  signed __int64 v97; // r14\n  signed __int64 v98; // r15\n  unsigned int v99; // ebx\n  unsigned int v100; // ebx\n  int v101; // ecx\n  int v102; // eax\n  unsigned __int64 v103; // r15\n  unsigned __int64 v104; // r14\n  unsigned int v105; // ebp\n  __int64 v106; // r12\n  int v107; // ST00_4\n  void *v108; // rbx\n  int v109; // ebx\n  signed __int64 v110; // rdx\n  bool v111; // bl\n  signed int v112; // edx\n  int v113; // ecx\n  __int64 v114; // rax\n  unsigned int v115; // eax\n  unsigned int v116; // er13\n  char v117; // r14\n  int v118; // ebx\n  unsigned int v119; // [rsp+1Ch] [rbp-B3Ch]\n  void *src; // [rsp+20h] [rbp-B38h]\n  int v121; // [rsp+28h] [rbp-B30h]\n  int v122; // [rsp+2Ch] [rbp-B2Ch]\n  __int64 v123; // [rsp+30h] [rbp-B28h]\n  int v124; // [rsp+3Ch] [rbp-B1Ch]\n  unsigned int v125; // [rsp+40h] [rbp-B18h]\n  _DWORD *v126; // [rsp+48h] [rbp-B10h]\n  unsigned int v127; // [rsp+50h] [rbp-B08h]\n  unsigned int v128; // [rsp+54h] [rbp-B04h]\n  __int64 v129; // [rsp+58h] [rbp-B00h]\n  __int64 v130; // [rsp+60h] [rbp-AF8h]\n  __int64 v131; // [rsp+68h] [rbp-AF0h]\n  int v132; // [rsp+74h] [rbp-AE4h]\n  unsigned int v133; // [rsp+78h] [rbp-AE0h]\n  unsigned int v134; // [rsp+7Ch] [rbp-ADCh]\n  _DWORD *v135; // [rsp+80h] [rbp-AD8h]\n  unsigned int *v136; // [rsp+88h] [rbp-AD0h]\n  unsigned int v137; // [rsp+94h] [rbp-AC4h]\n  __int64 v138; // [rsp+98h] [rbp-AC0h]\n  _BOOL4 v139; // [rsp+A4h] [rbp-AB4h]\n  __int64 v140; // [rsp+A8h] [rbp-AB0h]\n  __int64 v141; // [rsp+B0h] [rbp-AA8h]\n  char *v142; // [rsp+B8h] [rbp-AA0h]\n  __int64 v143; // [rsp+C0h] [rbp-A98h]\n  char v144; // [rsp+CCh] [rbp-A8Ch]\n  int v145; // [rsp+D0h] [rbp-A88h]\n  int v146; // [rsp+F0h] [rbp-A68h]\n  __int64 v147; // [rsp+110h] [rbp-A48h]\n  __int64 v148; // [rsp+118h] [rbp-A40h]\n  int v149; // [rsp+120h] [rbp-A38h]\n  __int64 v150; // [rsp+130h] [rbp-A28h]\n  __int64 v151; // [rsp+138h] [rbp-A20h]\n  int v152; // [rsp+140h] [rbp-A18h]\n  __int64 v153; // [rsp+150h] [rbp-A08h]\n  __int64 v154; // [rsp+158h] [rbp-A00h]\n  int v155[4]; // [rsp+160h] [rbp-9F8h]\n  __int64 v156; // [rsp+170h] [rbp-9E8h]\n  __int64 v157; // [rsp+178h] [rbp-9E0h]\n  int v158; // [rsp+180h] [rbp-9D8h]\n  __int64 v159; // [rsp+190h] [rbp-9C8h]\n  __int64 v160; // [rsp+198h] [rbp-9C0h]\n  int v161; // [rsp+1A0h] [rbp-9B8h]\n  __int64 v162; // [rsp+1B0h] [rbp-9A8h]\n  __int64 v163; // [rsp+1B8h] [rbp-9A0h]\n  int v164; // [rsp+1C0h] [rbp-998h]\n  unsigned int v165; // [rsp+1D0h] [rbp-988h]\n  int v166; // [rsp+1D4h] [rbp-984h]\n  __int64 v167; // [rsp+1D8h] [rbp-980h]\n  int v168[19]; // [rsp+1E4h] [rbp-974h]\n  int v169; // [rsp+230h] [rbp-928h]\n  int v170[3]; // [rsp+234h] [rbp-924h]\n  int v171; // [rsp+240h] [rbp-918h]\n  int v172[19]; // [rsp+244h] [rbp-914h]\n  int v173; // [rsp+290h] [rbp-8C8h]\n  int v174; // [rsp+294h] [rbp-8C4h]\n  __int64 v175; // [rsp+298h] [rbp-8C0h]\n  int v176; // [rsp+2A0h] [rbp-8B8h]\n  int v177[19]; // [rsp+2A4h] [rbp-8B4h]\n  int v178; // [rsp+2F0h] [rbp-868h]\n  int v179; // [rsp+2F4h] [rbp-864h]\n  __int64 v180; // [rsp+2F8h] [rbp-860h]\n  int v181[19]; // [rsp+304h] [rbp-854h]\n  char s[400]; // [rsp+350h] [rbp-808h]\n  int dest[414]; // [rsp+4E0h] [rbp-678h]\n\n  v136 = a6;\n  v135 = a5;\n  v9 = a4;\n  v134 = a1;\n  v128 = a2;\n  src = a3;\n  v123 = (__int64)a4;\n  v122 = a1;\n  v10 = (unsigned __int8)byte_98A1B0[a1];\n  v140 = qword_88C238;\n  v124 = dword_88C22C;\n  v141 = 12884901891LL;\n  v11 = &v144;\n  if ( a7 )\n    v11 = a7;\n  v126 = v11;\n  ++dword_877C48;\n  ++dword_877BE0;\n  v146 = 0;\n  v145 = 0;\n  v119 = v10;\n  v91 = a3[300] == v10;\n  v121 = a2;\n  if ( !v91 )\n    sub_4340E0(\"engine/owl.c\", 356LL, \"board[apos] == owla->color\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  if ( *((_DWORD *)v9 + 300) != (unsigned __int8)byte_98A1B0[a2] )\n    sub_4340E0(\"engine/owl.c\", 357LL, \"board[bpos] == owlb->color\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  if ( dword_98A7F4 <= dword_98A7E0 && a9 && !a8 && dword_565C6C & 0x400 )\n  {\n    if ( (unsigned int)sub_40EFF0(2, 0, 0, (int *)&v134, (int *)&v128, &v130) )\n    {\n      v12 = v130;\n      v13 = *(_DWORD *)(v130 + 4);\n      if ( v13 & 0xF000000 )\n      {\n        *v126 = (v13 >> 10) & 0x3FF;\n        v13 = *(_DWORD *)(v12 + 4);\n      }\n      if ( v13 & 0xF000000 )\n      {\n        if ( (HIBYTE(v13) & 0xF) == 1 )\n        {\n          if ( !dword_88C268 )\n            goto LABEL_96;\n          v14 = \"%oVariation %d: %1m ALIVE (cached)\\n\";\n        }\n        else\n        {\n          if ( (v13 & 0xF000000) != 117440512 || !dword_88C268 )\n          {\nLABEL_96:\n            v27 = (*(_DWORD *)(v130 + 4) >> 20) & 0xF;\n            if ( v27 )\n            {\n              if ( v27 == 1 )\n              {\n                if ( dword_88C268 )\n                {\n                  v28 = \"%oVariation %d: %1m ALIVE (cached)\\n\";\nLABEL_105:\n                  sub_433F90((char)v28);\n                  goto LABEL_106;\n                }\n              }\n              else if ( (*(_DWORD *)(v130 + 4) & 0xF00000) == (_DWORD)&unk_700000 && dword_88C268 )\n              {\n                v28 = \"%oVariation %d: %1m ALIVE_IN_SEKI (cached)\\n\";\n                goto LABEL_105;\n              }\n            }\n            else if ( dword_88C268 )\n            {\n              v28 = \"%oVariation %d: %1m DEAD (cached)\\n\";\n              goto LABEL_105;\n            }\nLABEL_106:\n            if ( qword_88C238 )\n              sub_40F260(\n                (__int64)\"do_owl_analyze_semeai\",\n                v122,\n                v121,\n                (*(_DWORD *)(v130 + 4) >> 10) & 0x3FF,\n                (*(_DWORD *)(v130 + 4) >> 24) & 0xF,\n                (__int64)\"cached\");\n            v29 = v130;\n            *v135 = *(_BYTE *)(v130 + 7) & 0xF;\n            result = (*(_DWORD *)(v29 + 4) >> 20) & 0xF;\n            *v136 = result;\n            return result;\n          }\n          v14 = \"%oVariation %d: %1m ALIVE_IN_SEKI (cached)\\n\";\n        }\n      }\n      else\n      {\n        if ( !dword_88C268 )\n          goto LABEL_96;\n        v14 = \"%oVariation %d: %1m DEAD (cached)\\n\";\n      }\n      sub_433F90((char)v14);\n      goto LABEL_96;\n    }\n    v15 = &byte_98A1B0[v128];\n  }\n  else\n  {\n    v15 = &byte_98A1B0[a2];\n    v130 = 0LL;\n  }\n  qword_88C238 = 0LL;\n  dword_88C22C = 0;\n  v147 = -4294967296LL;\n  v148 = 0LL;\n  v149 = 2;\n  v150 = -4294967296LL;\n  v151 = 0LL;\n  v152 = 2;\n  v153 = -4294967296LL;\n  v154 = 0LL;\n  v155[0] = 2;\n  v156 = -4294967296LL;\n  v157 = 0LL;\n  v158 = 2;\n  v159 = -4294967296LL;\n  v160 = 0LL;\n  v161 = 2;\n  v162 = -4294967296LL;\n  v163 = 0LL;\n  v164 = 2;\n  v16 = (unsigned __int8)*v15;\n  v133 = 3 - v10;\n  if ( 3 - v10 != v16 )\n    sub_4340E0(\"engine/owl.c\", 412LL, \"other == board[bpos]\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  v139 = 0;\n  memset(s, 0, 0x190uLL);\n  v17 = 0;\n  v18 = 0;\n  if ( !a9 )\n    goto LABEL_262;\n  sub_4310E0(src);\n  sub_4310E0(v123);\n  v19 = src;\n  if ( *((_DWORD *)src + 8701) && *(_BYTE *)(v123 + *((signed int *)src + 8701)) )\n    *((_DWORD *)src + 8701) = 0;\n  if ( v19[8702] && *(_BYTE *)(v123 + (signed int)v19[8702]) )\n    v19[8702] = 0;\n  if ( v19[8703] && *(_BYTE *)(v123 + (signed int)v19[8703]) )\n    v19[8703] = 0;\n  if ( v19[8704] && *(_BYTE *)(v123 + (signed int)v19[8704]) )\n    v19[8704] = 0;\n  if ( v19[8705] && *(_BYTE *)(v123 + (signed int)v19[8705]) )\n    v19[8705] = 0;\n  if ( v19[8706] && *(_BYTE *)(v123 + (signed int)v19[8706]) )\n    v19[8706] = 0;\n  if ( v19[8707] && *(_BYTE *)(v123 + (signed int)v19[8707]) )\n    v19[8707] = 0;\n  if ( v19[8708] && *(_BYTE *)(v123 + (signed int)v19[8708]) )\n    v19[8708] = 0;\n  if ( v19[8709] && *(_BYTE *)(v123 + (signed int)v19[8709]) )\n    v19[8709] = 0;\n  if ( v19[8710] && *(_BYTE *)(v123 + (signed int)v19[8710]) )\n    v19[8710] = 0;\n  sub_431930((__int64)v19);\n  if ( dword_565C78 > 8 )\n  {\n    qword_877C30 = (__int64)src;\n    dword_877C4C = 0;\n    memset(&byte_877C50, 0, 0x190uLL);\n    sub_41EFF0((__int64)sub_432860, v133, (__int64)&unk_5DB230, (__int64)&v169, (__int64)src);\n    if ( dword_877C4C < BYTE1(dest[0]) )\n      BYTE1(dest[0]) -= dword_877C4C;\n  }\n  sub_431930(v123);\n  if ( dword_565C78 >= 9 )\n  {\n    qword_877C30 = v123;\n    dword_877C4C = 0;\n    memset(&byte_877C50, 0, 0x190uLL);\n    sub_41EFF0((__int64)sub_432860, v133, (__int64)&unk_5DB230, (__int64)&v165, (__int64)src);\n    if ( dword_877C4C < BYTE1(v125) )\n      v20 = BYTE1(v125) - dword_877C4C;\n    else\n      v20 = 0;\n    BYTE1(v125) = v20;\n  }\n  if ( (signed int)sub_426330((__int64)dest) >= 2 && (signed int)sub_4263B0((__int64)&v125) <= 1 )\n  {\n    *v135 = 1;\n    *v136 = 0;\n    *v126 = 0;\n    qword_88C238 = v140;\n    dword_88C22C = v124;\n    if ( (unsigned int)sub_4263B0((__int64)&v125) )\n    {\n      if ( qword_88C238 )\n      {\n        v21 = \"Two eyes versus one\";\nLABEL_113:\n        sub_40F260((__int64)\"do_owl_analyze_semeai\", v122, v121, 0, 1u, (__int64)v21);\n        goto LABEL_114;\n      }\n    }\n    else if ( qword_88C238 )\n    {\n      v21 = \"Two eyes versus none\";\n      goto LABEL_113;\n    }\n    goto LABEL_114;\n  }\n  if ( (signed int)sub_426330((__int64)dest) > 1\n    || dword_98A7F4 >= 3 && (signed int)sub_4155F0((__int64)src, *((_DWORD *)src + 300), (__int64)src + 800) >= 5 )\n  {\n    if ( (signed int)sub_4263B0((__int64)&v125) <= 1 )\n    {\n      *v135 = 1;\n      *v136 = 0;\n      *v126 = 0;\n      qword_88C238 = v140;\n      dword_88C22C = v124;\n      if ( (unsigned int)sub_4263B0((__int64)&v125) )\n      {\n        if ( qword_88C238 )\n        {\n          v21 = \"Two eyes or escape versus one\";\n          goto LABEL_113;\n        }\n      }\n      else if ( qword_88C238 )\n      {\n        v21 = \"Two eyes or escape versus none\";\n        goto LABEL_113;\n      }\nLABEL_114:\n      *v126 = 0;\n      result = v130;\n      if ( !v130 )\n        return result;\n      v26 = *(_DWORD *)(v130 + 4) & 0x3FF | 0x21000000;\n      goto LABEL_396;\n    }\n    if ( (signed int)sub_426330((__int64)&v125) >= 2 )\n    {\nLABEL_86:\n      *v135 = 1;\n      *v136 = 1;\n      *v126 = 0;\n      qword_88C238 = v140;\n      dword_88C22C = v124;\n      if ( v140 )\n        sub_40F260((__int64)\"do_owl_analyze_semeai\", v122, v121, 0, 1u, (__int64)\"Both live\");\n      *v126 = 0;\n      result = v130;\n      if ( !v130 )\n        return result;\n      v26 = *(_DWORD *)(v130 + 4) & 0x3FF | 0x21100000;\n      goto LABEL_396;\n    }\n    v22 = v165;\n    if ( v165 )\n    {\n      *v135 = 1;\n      *v136 = 0;\n      *v126 = v22;\n      qword_88C238 = v140;\n      dword_88C22C = v124;\n      if ( (unsigned int)sub_426330((__int64)&v125) )\n      {\n        if ( qword_88C238 )\n        {\n          v23 = v165;\n          v24 = \"Two eyes or escape versus one\";\nLABEL_401:\n          sub_40F260((__int64)\"do_owl_analyze_semeai\", v122, v121, v23, 1u, (__int64)v24);\n          goto LABEL_402;\n        }\n      }\n      else if ( qword_88C238 )\n      {\n        v23 = v165;\n        v24 = \"Two eyes or escape versus none\";\n        goto LABEL_401;\n      }\nLABEL_402:\n      result = v165;\nLABEL_403:\n      *v126 = result;\n      if ( v130 )\n      {\n        result = (*(_DWORD *)(v130 + 4) & 0x3FF) + (((_DWORD)result << 10) & 0xFFC00u) + 553648128;\n        *(_DWORD *)(v130 + 4) = result;\n      }\n      return result;\n    }\n  }\n  if ( (signed int)sub_426330((__int64)&v125) > 1\n    || (signed int)sub_4155F0(v123, *(_DWORD *)(v123 + 1200), v123 + 800) >= 5 )\n  {\n    if ( (signed int)sub_4263B0((__int64)dest) <= 1 )\n    {\n      *v135 = 0;\n      *v136 = 1;\n      *v126 = 0;\n      qword_88C238 = v140;\n      dword_88C22C = v124;\n      if ( v140 )\n        sub_40F260((__int64)\"do_owl_analyze_semeai\", v122, v121, 0, 0, (__int64)\"You live, I die\");\n      result = v130;\n      if ( !v130 )\n        return result;\n      v26 = *(_DWORD *)(v130 + 4) & 0x3FF | 0x20100000;\n      goto LABEL_396;\n    }\n    if ( (signed int)sub_426330((__int64)dest) >= 2 )\n      goto LABEL_86;\n    v30 = v169;\n    if ( v169 )\n    {\n      *v135 = 1;\n      *v136 = 1;\n      *v126 = v30;\n      qword_88C238 = v140;\n      dword_88C22C = v124;\n      if ( v140 )\n      {\n        sub_40F260((__int64)\"do_owl_analyze_semeai\", v122, v121, v30, 1u, (__int64)\"Both live\");\n        v30 = v169;\n      }\n      *v126 = v30;\n      result = v130;\n      if ( !v130 )\n        return result;\n      v26 = (*(_DWORD *)(v130 + 4) & 0x3FF) + ((v30 << 10) & 0xFFC00) + 554696704;\nLABEL_396:\n      *(_DWORD *)(result + 4) = v26;\n      return result;\n    }\n  }\n  sub_42C530(&v145, &v173, v119, src, &unk_61FBE0);\n  if ( (unsigned int)sub_42C670(&v145, v119, &v173, 1LL) )\n    sub_42C670(&v145, v119, &v173, 1LL);\n  sub_42C530(&v146, &v178, v119, v123, &unk_574E58);\n  if ( (unsigned int)sub_42C670(&v146, v119, &v178, 1LL) )\n    sub_42C670(&v146, v119, &v178, 1LL);\n  v31 = 0LL;\n  LODWORD(v131) = 0;\n  LODWORD(v129) = 0;\n  do\n  {\n    v32 = 8 * v31;\n    v33 = *(&v169 + 8 * v31);\n    if ( !*(&v169 + 8 * v31) )\n      break;\n    v34 = (unsigned int *)((char *)&v169 + v32 * 4);\n    v35 = byte_98A1C4[v33];\n    if ( v35 != 3 && *(_BYTE *)(v123 + v33 + 20) )\n    {\n      v36 = src;\n      if ( *((_BYTE *)src + v33 + 20) )\n        goto LABEL_146;\nLABEL_139:\n      v37 = v33 - 1;\n      goto LABEL_140;\n    }\n    v37 = v33 - 1;\n    if ( byte_98A1AF[v33] != 3 && *(_BYTE *)(v123 + v37)\n      || byte_98A19C[v33] != 3 && *(_BYTE *)(v123 + v33 - 20)\n      || byte_98A1B1[v33] != 3 && *(_BYTE *)(v123 + v33 + 1) )\n    {\n      v36 = src;\n      if ( v35 != 3 )\n      {\n        if ( !*((_BYTE *)src + v33 + 20) )\n          goto LABEL_139;\nLABEL_146:\n        v91 = (unsigned int)sub_43F100(v33, v119) == 0;\n        v38 = v129;\n        if ( !v91 )\n          v38 = 1;\n        LODWORD(v129) = v38;\n        goto LABEL_149;\n      }\nLABEL_140:\n      if ( (byte_98A1B0[v37] == 3 || !v36[v37])\n        && (byte_98A19C[v33] == 3 || !v36[v33 - 20])\n        && (byte_98A1B1[v33] == 3 || !v36[v33 + 1]) )\n      {\n        v91 = (unsigned int)sub_43F100(v33, v119) == 0;\n        v44 = v131;\n        if ( !v91 )\n          v44 = 1;\n        LODWORD(v131) = v44;\n        goto LABEL_149;\n      }\n      goto LABEL_146;\n    }\nLABEL_149:\n    v39 = (signed int)*v34;\n    s[v39] = 1;\n    sub_432AD0(v39, src, v123, (unsigned int)v170[v32]);\n    v40 = *v34;\n    v41 = *(unsigned int *)((char *)&v171 + v32 * 4);\n    v42 = (unsigned int)v172[v32];\n    sub_432D00((unsigned __int64)&v147);\n    v43 = (unsigned __int64)(v31 + 1) < 2;\n    v31 = 1LL;\n  }\n  while ( v43 );\n  v45 = 0LL;\n  do\n  {\n    v46 = 32 * v45;\n    v47 = (signed int)*(&v165 + 8 * v45);\n    if ( !*(&v165 + 8 * v45) )\n      break;\n    v48 = (unsigned int *)((char *)&v165 + v46);\n    v49 = byte_98A1C4[v47];\n    if ( v49 != 3 && *(_BYTE *)(v123 + v47 + 20) )\n    {\n      v50 = src;\n      if ( *((_BYTE *)src + v47 + 20) )\n        goto LABEL_175;\nLABEL_168:\n      v51 = v47 - 1;\n      goto LABEL_169;\n    }\n    v51 = v47 - 1;\n    if ( byte_98A1AF[v47] != 3 && *(_BYTE *)(v123 + v51)\n      || byte_98A19C[v47] != 3 && *(_BYTE *)(v123 + v47 - 20)\n      || byte_98A1B1[v47] != 3 && *(_BYTE *)(v123 + v47 + 1) )\n    {\n      v50 = src;\n      if ( v49 != 3 )\n      {\n        if ( !*((_BYTE *)src + v47 + 20) )\n          goto LABEL_168;\nLABEL_175:\n        v91 = (unsigned int)sub_43F100(v47, v119) == 0;\n        v52 = v129;\n        if ( !v91 )\n          v52 = 1;\n        LODWORD(v129) = v52;\n        goto LABEL_178;\n      }\nLABEL_169:\n      if ( (byte_98A1B0[v51] == 3 || !v50[v51])\n        && (byte_98A19C[v47] == 3 || !v50[v47 - 20])\n        && (byte_98A1B1[v47] == 3 || !v50[v47 + 1]) )\n      {\n        v91 = (unsigned int)sub_43F100(v47, v119) == 0;\n        v57 = v131;\n        if ( !v91 )\n          v57 = 1;\n        LODWORD(v131) = v57;\n        goto LABEL_178;\n      }\n      goto LABEL_175;\n    }\nLABEL_178:\n    v53 = (signed int)*v48;\n    s[v53] = 1;\n    if ( (byte_98A1C4[v53] == 3 || !*((_BYTE *)src + v53 + 20))\n      && (byte_98A1AF[v53] == 3 || !*((char *)src + v53 - 1))\n      && (byte_98A19C[v53] == 3 || !*((char *)src + v53 - 20))\n      && byte_98A1B1[v53] != 3 )\n    {\n      *((_BYTE *)src + v53 + 1);\n    }\n    sub_432AD0(v53, src, v123, *(unsigned int *)((char *)&v166 + v46));\n    v54 = *v48;\n    v55 = *(__int64 *)((char *)&v167 + v46);\n    v56 = (unsigned int)v168[v46 / 4];\n    sub_432D00((unsigned __int64)&v147);\n    v43 = (unsigned __int64)(v45 + 1) < 2;\n    v45 = 1LL;\n  }\n  while ( v43 );\n  v58 = 0LL;\n  do\n  {\n    v59 = 32 * v58;\n    v60 = *(&v173 + 8 * v58);\n    if ( !*(&v173 + 8 * v58) )\n      break;\n    v61 = byte_98A1C4[v60];\n    if ( v61 != 3 && *(_BYTE *)(v123 + v60 + 20) )\n    {\n      v62 = src;\n      if ( *((_BYTE *)src + v60 + 20) )\n        goto LABEL_212;\nLABEL_205:\n      v63 = v60 - 1;\n      goto LABEL_206;\n    }\n    v63 = v60 - 1;\n    if ( byte_98A1AF[v60] != 3 && *(_BYTE *)(v123 + v63)\n      || byte_98A19C[v60] != 3 && *(_BYTE *)(v123 + v60 - 20)\n      || byte_98A1B1[v60] != 3 && *(_BYTE *)(v123 + v60 + 1) )\n    {\n      v62 = src;\n      if ( v61 != 3 )\n      {\n        if ( !*((_BYTE *)src + v60 + 20) )\n          goto LABEL_205;\nLABEL_212:\n        v91 = (unsigned int)sub_43F100((unsigned int)v60, v119) == 0;\n        v64 = v129;\n        if ( !v91 )\n          v64 = 1;\n        LODWORD(v129) = v64;\n        goto LABEL_215;\n      }\nLABEL_206:\n      if ( (byte_98A1B0[v63] == 3 || !v62[v63])\n        && (byte_98A19C[v60] == 3 || !v62[v60 - 20])\n        && (byte_98A1B1[v60] == 3 || !v62[v60 + 1]) )\n      {\n        v91 = (unsigned int)sub_43F100((unsigned int)v60, v119) == 0;\n        v68 = v131;\n        if ( !v91 )\n          v68 = 1;\n        LODWORD(v131) = v68;\n        goto LABEL_215;\n      }\n      goto LABEL_212;\n    }\nLABEL_215:\n    s[v60] = 1;\n    sub_432AD0((unsigned int)v60, src, v123, *(unsigned int *)((char *)&v174 + v59));\n    v65 = *(__int64 *)((char *)&v175 + v59);\n    v66 = *(unsigned int *)((char *)&v176 + v59);\n    v67 = (unsigned int)v177[v59 / 4];\n    sub_432D00((unsigned __int64)&v147);\n    v43 = (unsigned __int64)(v58 + 1) < 2;\n    v58 = 1LL;\n  }\n  while ( v43 );\n  v69 = 0LL;\n  do\n  {\n    v70 = 32 * v69;\n    v71 = *(&v178 + 8 * v69);\n    if ( !*(&v178 + 8 * v69) )\n      break;\n    v72 = byte_98A1C4[v71];\n    if ( v72 != 3 && *(_BYTE *)(v123 + v71 + 20) )\n    {\n      v73 = src;\n      if ( *((_BYTE *)src + v71 + 20) )\n        goto LABEL_241;\nLABEL_234:\n      v74 = v71 - 1;\n      goto LABEL_235;\n    }\n    v74 = v71 - 1;\n    if ( byte_98A1AF[v71] != 3 && *(_BYTE *)(v123 + v74)\n      || byte_98A19C[v71] != 3 && *(_BYTE *)(v123 + v71 - 20)\n      || byte_98A1B1[v71] != 3 && *(_BYTE *)(v123 + v71 + 1) )\n    {\n      v73 = src;\n      if ( v72 != 3 )\n      {\n        if ( !*((_BYTE *)src + v71 + 20) )\n          goto LABEL_234;\nLABEL_241:\n        v91 = (unsigned int)sub_43F100((unsigned int)v71, v119) == 0;\n        v75 = v129;\n        if ( !v91 )\n          v75 = 1;\n        LODWORD(v129) = v75;\n        goto LABEL_244;\n      }\nLABEL_235:\n      if ( (byte_98A1B0[v74] == 3 || !v73[v74])\n        && (byte_98A19C[v71] == 3 || !v73[v71 - 20])\n        && (byte_98A1B1[v71] == 3 || !v73[v71 + 1]) )\n      {\n        v91 = (unsigned int)sub_43F100((unsigned int)v71, v119) == 0;\n        v78 = v131;\n        if ( !v91 )\n          v78 = 1;\n        LODWORD(v131) = v78;\n        goto LABEL_244;\n      }\n      goto LABEL_241;\n    }\nLABEL_244:\n    s[v71] = 1;\n    if ( (byte_98A1C4[v71] == 3 || !*((_BYTE *)src + v71 + 20))\n      && (byte_98A1AF[v71] == 3 || !*((char *)src + v71 - 1))\n      && (byte_98A19C[v71] == 3 || !*((char *)src + v71 - 20))\n      && byte_98A1B1[v71] != 3 )\n    {\n      *((_BYTE *)src + v71 + 1);\n    }\n    sub_432AD0((unsigned int)v71, src, v123, *(unsigned int *)((char *)&v179 + v70));\n    v76 = *(__int64 *)((char *)&v180 + v70);\n    v77 = (unsigned int)v181[v70 / 4];\n    sub_432D00((unsigned __int64)&v147);\n    v43 = (unsigned __int64)(v69 + 1) < 2;\n    v69 = 1LL;\n  }\n  while ( v43 );\n  v17 = a9;\n  if ( !(_DWORD)v147 )\n    v17 = 0;\n  if ( (_DWORD)v131 )\n  {\n    v132 = v17;\n    v139 = 0;\n    v79 = dword_565C68;\nLABEL_302:\n    v137 = 0;\n    v127 = 0;\n    goto LABEL_303;\n  }\n  v18 = v129;\nLABEL_262:\n  LODWORD(v129) = v18;\n  v79 = dword_565C68;\n  if ( SHIDWORD(v147) > 99 || dword_565C68 <= 0 )\n  {\n    v132 = v17;\n    LODWORD(v131) = 0;\n    goto LABEL_302;\n  }\n  v132 = v17;\n  v80 = 0LL;\n  v138 = 21LL;\n  v127 = 0;\n  v137 = 0;\n  v139 = 0;\n  while ( v79 <= 0 )\n  {\nLABEL_299:\n    ++v80;\n    v138 += 20LL;\n    if ( v80 >= v79 )\n    {\n      LODWORD(v131) = 0;\nLABEL_303:\n      v138 = 0LL;\n      goto LABEL_304;\n    }\n  }\n  v81 = (unsigned int)v138;\n  v82 = (unsigned __int64)(unsigned int)v138 << 32;\n  v83 = v82 - 85899345920LL;\n  v84 = v82 - 0x100000000LL;\n  v85 = &s[(unsigned int)v138];\n  v131 = v80;\n  v143 = (20 * (_DWORD)v80 + 21) & 0xFFFFFFFD;\n  v86 = 0LL;\n  v142 = &s[(unsigned int)v138];\n  while ( 2 )\n  {\n    if ( byte_98A1B0[v81 + v86] || v85[v86] )\n      goto LABEL_297;\n    v87 = byte_98A1C4[v81 + v86];\n    if ( v87 != 3 && *(_BYTE *)(v86 + v123 + v81 + 20) )\n    {\n      v88 = src;\n      goto LABEL_282;\n    }\n    v89 = v84 >> 32;\n    if ( (byte_98A1B0[v84 >> 32] == 3 || !*(_BYTE *)(v123 + v89))\n      && (byte_98A1B0[v83 >> 32] == 3 || !*(_BYTE *)(v123 + (v83 >> 32)))\n      && (byte_98A1B1[v81 + v86] == 3 || !*(_BYTE *)(v86 + v81 + v123 + 1)) )\n    {\n      goto LABEL_297;\n    }\n    v88 = src;\n    if ( v87 != 3 )\n    {\nLABEL_282:\n      if ( v88[v81 + 20 + v86] )\n      {\n        v90 = v143 + v86;\n        goto LABEL_291;\n      }\n      v89 = v84 >> 32;\n    }\n    v90 = v138 + v86;\n    if ( byte_98A1B0[v89] != 3 && v88[v89]\n      || byte_98A1B0[v83 >> 32] != 3 && v88[v83 >> 32]\n      || byte_98A1B1[v81 + v86] != 3 && v88[v81 + 1 + v86] )\n    {\nLABEL_291:\n      v91 = (unsigned int)sub_43F100(v90, v119) == 0;\n      v92 = v129;\n      if ( !v91 )\n        v92 = 1;\n      LODWORD(v129) = v92;\n      v93 = v127;\n      if ( !v91 )\n        v93 = v90;\n      v127 = v93;\n      goto LABEL_296;\n    }\n    if ( !(unsigned int)sub_43F100(v90, v119) )\n    {\n      if ( !v139 )\n      {\n        v137 = sub_432EE0(v128, v90);\n        v139 = v137 != 0;\n      }\nLABEL_296:\n      v85 = v142;\nLABEL_297:\n      ++v86;\n      v79 = dword_565C68;\n      v83 += 0x100000000LL;\n      v84 += 0x100000000LL;\n      if ( v86 >= dword_565C68 )\n      {\n        v80 = v131;\n        goto LABEL_299;\n      }\n      continue;\n    }\n    break;\n  }\n  v138 = (unsigned int)(v86 + v138);\n  v79 = dword_565C68;\n  LODWORD(v131) = 1;\nLABEL_304:\n  memset(dest, 0, 0x640uLL);\n  if ( v79 > 0 )\n  {\n    LODWORD(v94) = 21;\n    v95 = 0LL;\n    do\n    {\n      v94 = (char *)(unsigned int)v94;\n      if ( v79 > 0 )\n      {\n        v143 = v95;\n        v96 = ((_QWORD)v94 << 32) - 85899345920LL;\n        v97 = ((_QWORD)v94 << 32) - 0x100000000LL;\n        v142 = v94;\n        v98 = 0LL;\n        do\n        {\n          if ( v94[v123] )\n          {\n            if ( v133 == (unsigned __int8)byte_98A1B0[(_QWORD)v94] )\n            {\n              v99 = sub_40AD00((int)v94);\n              if ( !dest[v99]\n                && (byte_98A1C4[(_QWORD)v94] != 3 && v94[(_QWORD)src + 20]\n                 || byte_98A1B0[v97 >> 32] != 3 && *((_BYTE *)src + (v97 >> 32))\n                 || byte_98A1B0[v96 >> 32] != 3 && *((_BYTE *)src + (v96 >> 32))\n                 || byte_98A1B1[(_QWORD)v94] != 3 && v94[(_QWORD)src + 1]) )\n              {\n                if ( (signed int)sub_4083A0(v99) <= 2 && (unsigned int)sub_43B050(v99, &v125) )\n                {\n                  *v135 = 1;\n                  *v136 = 0;\n                  v101 = v125;\n                  *v126 = v125;\n                  qword_88C238 = v140;\n                  dword_88C22C = v124;\n                  if ( v140 )\n                    sub_40F260((__int64)\"do_owl_analyze_semeai\", v122, v121, v101, 1u, (__int64)\"tactical win found\");\n                  sub_42CD10(v119, &v145);\n                  sub_42CD10(v119, &v146);\n                  result = v125;\n                  goto LABEL_403;\n                }\n                dest[v99] = 1;\n              }\n            }\n          }\n          ++v98;\n          v79 = dword_565C68;\n          v96 += 0x100000000LL;\n          v97 += 0x100000000LL;\n          ++v94;\n        }\n        while ( v98 < dword_565C68 );\n        LODWORD(v94) = (_DWORD)v142;\n        v95 = v143;\n      }\n      ++v95;\n      LODWORD(v94) = (_DWORD)v94 + 20;\n    }\n    while ( v95 < v79 );\n  }\n  if ( (_DWORD)v131 && (_DWORD)v138 )\n  {\n    sub_432AD0((unsigned int)v138, src, v123, 50LL);\n    sub_432D00((unsigned __int64)&v147);\n    v100 = v119;\n    goto LABEL_338;\n  }\n  v100 = v119;\n  if ( v139 && v137 )\n  {\n    sub_432AD0(v137, src, v123, 50LL);\nLABEL_337:\n    sub_432D00((unsigned __int64)&v147);\nLABEL_338:\n    v102 = v124;\n  }\n  else\n  {\n    v102 = v124;\n    if ( (_DWORD)v129 && v127 )\n    {\n      sub_432AD0(v127, src, v123, 10LL);\n      goto LABEL_337;\n    }\n  }\n  qword_88C238 = v140;\n  dword_88C22C = v102;\n  v133 = 3;\n  v127 = -1;\n  v103 = -64LL;\n  v104 = 0LL;\n  v129 = 0LL;\n  v105 = 3;\n  while ( 2 )\n  {\n    if ( v104 > 2\n      || (v116 = *(_DWORD *)((char *)&v153 + v103), !v103) && dword_98A7F4 > 6\n      || !v116\n      || dword_98A7F4 > 12 && v104 != 0\n      || dword_98A7F4 > 99\n      || dword_88C22C >= dword_565C80\n      || (v106 = *(__int64 *)((char *)&v154 + v103),\n          v107 = *(_DWORD *)((char *)&v153 + v103 + 4),\n          !(unsigned int)sub_406D00(v116, v100, *(const char **)((char *)&v154 + v103), v134, v128, v132)) )\n    {\nLABEL_376:\n      ++v104;\n      v103 += 32LL;\n      if ( v104 >= 6 )\n      {\n        sub_42CD10(v100, &v145);\n        sub_42CD10(v100, &v146);\n        if ( a8 != 1 || v105 != 3 )\n        {\n          if ( v105 == 3 )\n          {\n            sub_428B30(v128, v134, v123, (_DWORD)src);\n            if ( qword_88C238 )\n              sub_40F260((__int64)\"do_owl_analyze_semeai\", v122, v121, 0, 3u, (__int64)\"No move found\");\n            *v126 = 0;\n            result = v130;\n            if ( v130 )\n            {\n              v26 = ((*v136 & 0xF) << 20) + (*(_DWORD *)(v130 + 4) & 0x3FF | ((*v135 & 0xF) << 24)) + 0x20000000;\n              goto LABEL_396;\n            }\n          }\n          else\n          {\n            *v135 = v105;\n            v117 = v133;\n            *v136 = v133;\n            v118 = v129;\n            if ( !v105 )\n              v118 = 0;\n            *v126 = v118;\n            if ( qword_88C238 )\n              sub_40F260((__int64)\"do_owl_analyze_semeai\", v122, v121, v118, v105, *(&v148 + 4 * (signed int)v127));\n            if ( v105 )\n              *v126 = v118;\n            result = v130;\n            if ( v130 )\n            {\n              v26 = (*(_DWORD *)(v130 + 4) & 0x3FF)\n                  + (((v105 & 0xF) << 24) | ((v117 & 0xF) << 20) | (v118 << 10) & 0xFFC00)\n                  + 0x20000000;\n              goto LABEL_396;\n            }\n          }\n        }\n        else\n        {\n          *v135 = 7;\n          *v136 = 7;\n          *v126 = 0;\n          if ( qword_88C238 )\n            sub_40F260((__int64)\"do_owl_analyze_semeai\", v122, v121, 0, 7u, (__int64)\"Seki\");\n          *v126 = 0;\n          result = v130;\n          if ( v130 )\n          {\n            v26 = *(_DWORD *)(v130 + 4) & 0x3FF | 0x27700000;\n            goto LABEL_396;\n          }\n        }\n        return result;\n      }\n      continue;\n    }\n    break;\n  }\n  if ( dword_88C264 & 0x40 && dword_88C268 )\n    sub_407180();\n  if ( byte_98A1B0[v128] )\n  {\n    if ( v132 && dword_98A7F4 <= 13 )\n    {\n      sub_432FC0(&src, &v123);\n      v108 = src;\n    }\n    else\n    {\n      v108 = src;\n      memcpy(dest, src, 0x190uLL);\n    }\n    sub_42E360(v116, (unsigned int)v155[v103 / 4], v108, 1LL);\n    *((_DWORD *)src + 8851) = 0;\n    sub_42CAD0(v116);\n    v109 = v132;\n    sub_428B30(v128, v134, v123, (_DWORD)src);\n    if ( v109 && dword_98A7F4 <= 13 )\n    {\n      v110 = 35816LL * dword_877DE0;\n      v123 = (__int64)qword_877DE8 + 35816 * *(signed int *)((char *)qword_877DE8 + v110 + 35808);\n      src = (char *)qword_877DE8 + 35816 * *(signed int *)((char *)qword_877DE8 + v110 - 8);\n      dword_877DE0 -= 2;\n    }\n    else\n    {\n      memcpy(src, dest, 0x190uLL);\n    }\n  }\n  else\n  {\n    v141 = 0x100000000LL;\n  }\n  sub_407030();\n  if ( (_DWORD)v141 || HIDWORD(v141) != 1 )\n  {\n    v111 = v141 == 30064771079LL && v105 != 1;\n    if ( v111 )\n      v105 = 7;\n    v112 = v133;\n    if ( v111 )\n      v112 = 7;\n    v113 = HIDWORD(v141) | v141 ^ 1 | v105 ^ 3;\n    if ( !v113 )\n      v105 = 0;\n    if ( !v113 )\n      v112 = 1;\n    v133 = v112;\n    v114 = v129;\n    if ( v111 || v113 == 0 )\n      v114 = v116;\n    v129 = v114;\n    v115 = v127;\n    if ( v111 || v113 == 0 )\n      v115 = v104;\n    v127 = v115;\n    v100 = v119;\n    goto LABEL_376;\n  }\n  *v135 = 1;\n  *v136 = 0;\n  *v126 = v116;\n  if ( qword_88C238 )\n    sub_40F260((__int64)\"do_owl_analyze_semeai\", v122, v121, v116, 1u, v106);\n  sub_42CD10(v119, &v145);\n  sub_42CD10(v119, &v146);\n  *v126 = v116;\n  result = v130;\n  if ( v130 )\n  {\n    v26 = (*(_DWORD *)(v130 + 4) & 0x3FF) + ((v116 << 10) & 0xFFC00) + 553648128;\n    goto LABEL_396;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x428b30L", 
            "funcEndAddr": "0x42aa58L", 
            "funcName": "sub_428B30"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_42AA60(__int64 a1, _DWORD *a2, _DWORD *a3, _DWORD *a4)\n{\n  _DWORD *v4; // r13\n  _DWORD *v5; // rbx\n  _DWORD *v6; // r15\n  unsigned int v7; // ebp\n  int v8; // er12\n  __int64 v9; // r12\n  __int64 v10; // rbx\n  __int64 v11; // rdi\n  __int64 v12; // rsi\n  int v13; // er12\n  __int64 v14; // ST20_8\n  int v15; // ebx\n  _DWORD *v16; // rcx\n  signed __int64 result; // rax\n  unsigned int v18; // [rsp+0h] [rbp-68h]\n  int v19; // [rsp+4h] [rbp-64h]\n  unsigned int v20; // [rsp+8h] [rbp-60h]\n  int v21; // [rsp+Ch] [rbp-5Ch]\n  int v22; // [rsp+10h] [rbp-58h]\n  int v23; // [rsp+14h] [rbp-54h]\n  __int64 v24; // [rsp+18h] [rbp-50h]\n  __int64 v25; // [rsp+20h] [rbp-48h]\n  _DWORD *v26; // [rsp+28h] [rbp-40h]\n  __int64 v27; // [rsp+30h] [rbp-38h]\n\n  v4 = a4;\n  v5 = a3;\n  v6 = a2;\n  v7 = a1;\n  v8 = sub_43F970(a1);\n  v19 = 0;\n  v21 = 15;\n  byte_877BE4 = 1;\n  if ( dword_8E94A8[95 * (signed int)a1] )\n  {\n    if ( !(unsigned int)sub_459050(0LL, (unsigned int)a1) )\n    {\n      if ( dword_88C264 & 0x1000 )\n        sub_493870(0LL, (unsigned int)a1);\n      v24 = 0LL;\n      v20 = v8;\n      v26 = v5;\n      if ( dword_88C268 )\n        sub_433F90((unsigned __int64)\"owl_attack %1m\\n\");\n      v9 = 0LL;\n      sub_4287E0(&v27, a1, 0, 0, 1);\n      v10 = v27;\n      qword_877C30 = v27;\n      qword_877C40 = 0LL;\n      if ( !*(_DWORD *)(v27 + 35404) )\n        sub_4310E0(v27);\n      v11 = 0LL;\n      if ( *(_DWORD *)(v10 + 1200) == 2 )\n        v11 = v10 + 1204;\n      v12 = 0LL;\n      if ( *(_DWORD *)(v10 + 1200) != 2 )\n        v12 = v10 + 1204;\n      sub_424410(v11, v12, 1);\n      sub_42ACD0(v7, v10, v4, 1LL);\n      v18 = sub_42AF00(v7);\n      dword_877C2C = 0;\n      if ( v21 != 15LL )\n        v9 = *((unsigned int *)&xmmword_877BF0 + v21);\n      v25 = v9;\n      v13 = (unsigned __int64)sub_43F970(v7) - v20;\n      if ( dword_88C264 & 0x1000 )\n      {\n        v20 = v18;\n        v23 = v19;\n        v22 = dword_877BE0;\n        sub_493870(v7, &v19);\n        sub_433F90((unsigned __int64)\"owl_attack %1m, result %d %1m (%d, %d nodes, %f seconds)\\n\");\n      }\n      v14 = (unsigned __int8)byte_98A1B0[v7];\n      v15 = v25;\n      sub_459230(0, v7, 0, 0, v18, v19, v25, (unsigned __int8)byte_877BE4);\n      if ( v6 )\n        *v6 = v19;\n      v16 = v26;\n      if ( v4 )\n        *v4 = v15;\n      if ( v16 )\n        *v16 = (unsigned __int8)byte_877BE4;\n    }\n    result = v18;\n  }\n  else\n  {\n    if ( a2 )\n      *a2 = 0;\n    if ( v4 )\n      *v4 = 0;\n    result = 1LL;\n    if ( v5 )\n      *v5 = 1;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x42aa60L", 
            "funcEndAddr": "0x42acc7L", 
            "funcName": "sub_42AA60"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_42ACD0(int a1, __int64 a2, __int64 a3, int a4)\n{\n  __int64 v4; // r15\n  int v5; // er14\n  signed int v6; // ebx\n  unsigned __int64 v7; // rbp\n  char v8; // al\n  int v9; // eax\n  signed __int64 v10; // rcx\n  __int64 v11; // rax\n  signed __int64 v12; // rax\n  signed int *v13; // r9\n  int v14; // edx\n  int *v15; // r8\n  signed __int64 v16; // rsi\n  char *v17; // rax\n  __int64 v18; // rdi\n  unsigned __int64 v19; // rbp\n  signed __int64 v20; // rdx\n  char v21; // cl\n  __int64 v22; // rcx\n  signed __int64 v23; // rax\n  signed __int64 result; // rax\n\n  v4 = a2;\n  v5 = a1;\n  if ( !a3 )\n  {\n    result = 0LL;\n    goto LABEL_38;\n  }\n  if ( !a4 )\n    goto LABEL_36;\n  *(__int128 *)((char *)&xmmword_877C10 + 12) = 0LL;\n  xmmword_877C10 = 0LL;\n  xmmword_877C00 = 0LL;\n  xmmword_877BF0 = 0LL;\n  v6 = 0;\n  v7 = 21LL;\n  do\n  {\n    v8 = byte_98A1B0[v7];\n    if ( v8 && v8 != 3 && *(_BYTE *)(a2 + v7) == 1 )\n    {\n      v9 = sub_40AD00(v7);\n      if ( v6 <= 0 )\n      {\n        if ( v6 )\n          goto LABEL_13;\nLABEL_12:\n        v11 = v6++;\n        *((_DWORD *)&xmmword_877BF0 + v11) = v7;\n        goto LABEL_13;\n      }\n      v10 = 0LL;\n      do\n      {\n        if ( *((_DWORD *)&xmmword_877BF0 + v10) == v9 )\n          break;\n        ++v10;\n      }\n      while ( v10 < v6 );\n      if ( (_DWORD)v10 == v6 )\n        goto LABEL_12;\n    }\nLABEL_13:\n    ++v7;\n  }\n  while ( v7 <= 0x18F && v6 < 15 );\n  if ( (unsigned int)(v6 - 1) <= 0xD && v6 <= 14 )\n  {\n    v12 = 104LL * *((signed int *)&xmmword_954FB0 + 19 * (signed int)xmmword_877BF0 + 1);\n    v13 = (signed int *)ptr;\n    v14 = *(_DWORD *)((char *)ptr + v12 + 44);\n    if ( v14 > 0 )\n    {\n      v15 = (int *)((char *)ptr + v12 + 44);\n      v16 = 0LL;\n      v17 = (char *)ptr + v12;\n      do\n      {\n        if ( v6 <= 14 )\n        {\n          v18 = *(signed int *)&v17[4 * v16 + 4];\n          if ( *((_DWORD *)&xmmword_954FB0 + 19 * v13[26 * v18]) == *(_DWORD *)(v4 + 1200) )\n          {\n            v19 = 0LL;\n            v20 = 21LL;\n            do\n            {\n              v21 = byte_98A1B0[v20];\n              if ( v21\n                && v21 != 3\n                && v20 == dword_8EB3A8[5 * v19 / 4]\n                && dword_8EB3A0[5 * v19 / 4] >= 3\n                && dword_9555F0[v19 / 4] == (_DWORD)v18 )\n              {\n                v22 = v6++;\n                *((_DWORD *)&xmmword_877BF0 + v22) = v20;\n              }\n              if ( (unsigned __int64)++v20 > 0x18F )\n                break;\n              v19 += 76LL;\n            }\n            while ( v6 < 15 );\n            v14 = *v15;\n          }\n        }\n        if ( v6 > 14 )\n          break;\n        ++v16;\n      }\n      while ( v16 < v14 );\n    }\n  }\nLABEL_36:\n  v23 = 60LL * *((signed int *)&xmmword_954FB0 + 19 * v5 + 1);\n  *(__int128 *)((char *)&xmmword_877E10 + v23 + 12) = *(__int128 *)((char *)&xmmword_877C10 + 12);\n  *(__int128 *)((char *)&xmmword_877E10 + v23) = xmmword_877C10;\n  *(__int128 *)((char *)&xmmword_877E00 + v23) = xmmword_877C00;\n  *(__int128 *)((char *)&xmmword_877DF0 + v23) = xmmword_877BF0;\n  result = 1LL;\nLABEL_38:\n  dword_877C2C = result;\n  return result;\n}\n", 
            "funcStartAddr": "0x42acd0L", 
            "funcEndAddr": "0x42aef2L", 
            "funcName": "sub_42ACD0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_42AF00(unsigned int a1, int *a2, signed int *a3, char *a4, unsigned int a5, unsigned int a6)\n{\n  __int64 v6; // r13\n  unsigned int v7; // er14\n  unsigned int v8; // ebp\n  unsigned int *v9; // r15\n  int v10; // ecx\n  int v11; // eax\n  int v12; // ebx\n  __int64 v13; // rax\n  unsigned int v14; // ecx\n  int v15; // ecx\n  signed int v16; // edx\n  const char *v17; // rdi\n  char *v18; // r8\n  int v19; // ebx\n  unsigned int v20; // er12\n  char *v21; // rbp\n  signed int v22; // er14\n  unsigned __int64 v23; // rbx\n  int v24; // ebp\n  __int64 v25; // rdi\n  int v26; // eax\n  signed __int64 result; // rax\n  __int64 v28; // rdx\n  int v29; // ecx\n  unsigned int v30; // er12\n  unsigned int v31; // er13\n  char *v32; // r14\n  const char *v33; // rax\n  unsigned int *v34; // rcx\n  signed int v35; // ecx\n  signed int v36; // edx\n  signed int v37; // esi\n  char *v38; // rbp\n  __int64 v39; // r14\n  int v40; // er15\n  int v41; // eax\n  signed int v42; // eax\n  __int64 v43; // rax\n  __int64 v44; // r15\n  signed int v45; // esi\n  int v46; // eax\n  unsigned __int64 v47; // r13\n  int v48; // edx\n  int v49; // ebx\n  unsigned int v50; // esi\n  int v51; // er12\n  __int64 *v52; // rax\n  int v53; // ebp\n  char *v54; // rbx\n  unsigned int v55; // edi\n  unsigned __int64 i; // rdi\n  signed int v57; // eax\n  const char *v58; // rbx\n  unsigned int v59; // ebp\n  const char *v60; // r8\n  int v61; // esi\n  int v62; // edx\n  signed int v63; // er8\n  unsigned __int64 v64; // rsi\n  int v65; // edx\n  __int64 v66; // rdi\n  int v67; // edi\n  signed int v68; // ecx\n  int v69; // ecx\n  unsigned int v70; // eax\n  bool v71; // zf\n  bool v72; // sf\n  unsigned __int8 v73; // of\n  unsigned int v74; // eax\n  __int64 v75; // rdx\n  unsigned int v76; // ebx\n  int *v77; // rbp\n  unsigned int v78; // ebx\n  int v79; // [rsp+8h] [rbp-3F0h]\n  unsigned int v80; // [rsp+Ch] [rbp-3ECh]\n  signed int v81; // [rsp+10h] [rbp-3E8h]\n  int v82; // [rsp+14h] [rbp-3E4h]\n  __int64 v83; // [rsp+18h] [rbp-3E0h]\n  int v84; // [rsp+24h] [rbp-3D4h]\n  unsigned int v85; // [rsp+28h] [rbp-3D0h]\n  unsigned int v86; // [rsp+2Ch] [rbp-3CCh]\n  __int64 v87; // [rsp+30h] [rbp-3C8h]\n  int v88; // [rsp+38h] [rbp-3C0h]\n  unsigned int v89; // [rsp+3Ch] [rbp-3BCh]\n  unsigned int v90; // [rsp+40h] [rbp-3B8h]\n  unsigned int v91; // [rsp+44h] [rbp-3B4h]\n  signed int *v92; // [rsp+48h] [rbp-3B0h]\n  unsigned __int64 v93; // [rsp+50h] [rbp-3A8h]\n  unsigned int *v94; // [rsp+58h] [rbp-3A0h]\n  int v95; // [rsp+60h] [rbp-398h]\n  int v96; // [rsp+64h] [rbp-394h]\n  char *v97; // [rsp+68h] [rbp-390h]\n  char *v98; // [rsp+70h] [rbp-388h]\n  char v99; // [rsp+78h] [rbp-380h]\n  int v100; // [rsp+7Ch] [rbp-37Ch]\n  int v101; // [rsp+80h] [rbp-378h]\n  int v102; // [rsp+84h] [rbp-374h]\n  int *v103; // [rsp+88h] [rbp-370h]\n  unsigned int v104; // [rsp+90h] [rbp-368h]\n  int v105; // [rsp+94h] [rbp-364h]\n  const char *v106; // [rsp+98h] [rbp-360h]\n  __int64 v107; // [rsp+A0h] [rbp-358h]\n  int v108; // [rsp+B4h] [rbp-344h]\n  int v109; // [rsp+F0h] [rbp-308h]\n  signed int v110[48]; // [rsp+110h] [rbp-2E8h]\n  char v111; // [rsp+1D0h] [rbp-228h]\n  char s[456]; // [rsp+230h] [rbp-1C8h]\n\n  v85 = a1;\n  v6 = (__int64)a4;\n  v97 = a4;\n  v7 = a6;\n  v8 = a5;\n  v92 = a3;\n  v9 = (unsigned int *)a2;\n  v79 = a1;\n  v88 = (unsigned __int8)byte_98A1B0[a1];\n  v102 = -1;\n  v96 = -1;\n  v83 = 0LL;\n  v10 = dword_88C22C - 1;\n  v109 = 0;\n  v11 = dword_98A7F4;\n  if ( dword_98A7F4 <= dword_98A7E0 && dword_565C6C & 0x100 )\n  {\n    v12 = dword_88C22C - 1;\n    if ( (unsigned int)sub_40E8D0(0, a5, a6, (int *)&v85, &v83) )\n    {\n      v13 = v83;\n      v14 = *(_DWORD *)(v83 + 4);\n      if ( a2 && v14 & 0xF000000 )\n      {\n        *a2 = (v14 >> 10) & 0x3FF;\n        v14 = *(_DWORD *)(v13 + 4);\n      }\n      if ( v92 && (v14 & 0xF000000) == 50331648 )\n      {\n        v15 = (v14 >> 20) & 0xF;\n        v16 = 15;\n        if ( dword_877C2C )\n          v16 = v15;\n        *v92 = v16;\n      }\n      if ( (*(_DWORD *)(v13 + 4) & 0xF000000) == 83886080 )\n      {\n        if ( dword_88C268 )\n        {\n          v17 = \"%oVariation %d: DEAD (cached)\\n\";\nLABEL_58:\n          sub_433F90((char)v17);\n          goto LABEL_59;\n        }\n      }\n      else if ( dword_88C268 )\n      {\n        v17 = \"%oVariation %d: ALIVE (cached)\\n\";\n        goto LABEL_58;\n      }\nLABEL_59:\n      if ( qword_88C238 )\n        sub_40F0A0(\n          (__int64)\"owl_attack\",\n          v79,\n          (*(_DWORD *)(v83 + 4) >> 10) & 0x3FF,\n          (*(_DWORD *)(v83 + 4) >> 24) & 0xF,\n          (__int64)\"cached\");\n      return *(_BYTE *)(v83 + 7) & 0xF;\n    }\n    v11 = dword_98A7F4;\n    v10 = v12;\n  }\n  if ( v11 > dword_98A7EC )\n  {\n    if ( dword_88C268 )\n      sub_433F90((unsigned __int64)\"%oVariation %d: ALIVE (maximum reading depth reached)\\n\");\n    v18 = \"max reading depth reached\";\n    goto LABEL_50;\n  }\n  v19 = dword_877BE0;\n  if ( dword_877BE0 >= dword_98A7E8 )\n  {\n    byte_877BE4 = 0;\n    if ( dword_88C268 )\n      sub_433F90((unsigned __int64)\"%oVariation %d: ALIVE (owl node limit reached)\\n\");\n    v18 = \"owl node limit reached\";\nLABEL_50:\n    v98 = v18;\n    if ( qword_88C238 )\n    {\nLABEL_51:\n      sub_40F0A0((__int64)\"owl_attack\", v79, 0, 0, (__int64)v18);\n      goto LABEL_52;\n    }\n    goto LABEL_52;\n  }\n  v90 = v8;\n  v84 = v10;\n  v20 = 0;\n  memset(s, 0, 0x190uLL);\n  ++dword_877C48;\n  dword_877BE0 = v19 + 1;\n  v21 = (char *)v6;\n  qword_877C30 = v6;\n  memset((void *)(v6 + 35408), 0, 0x190uLL);\n  if ( (unsigned int)sub_433700(v6) )\n  {\n    v110[0] = 0;\n    v22 = 15;\n    if ( dword_88C308 && dword_877C2C )\n    {\n      v22 = 15;\n      v23 = 0LL;\n      v24 = 0;\n      do\n      {\n        v25 = *((signed int *)&xmmword_877BF0 + v23);\n        if ( !*((_DWORD *)&xmmword_877BF0 + v23) )\n          break;\n        if ( byte_98A1B0[v25] && (signed int)sub_4083A0(v25) <= 1 )\n        {\n          v26 = dword_8E9474[95 * *((signed int *)&xmmword_877BF0 + v23)];\n          if ( v26 > v24 )\n            v22 = v23;\n          if ( v26 >= v24 )\n            v24 = dword_8E9474[95 * *((signed int *)&xmmword_877BF0 + v23)];\n        }\n        ++v23;\n      }\n      while ( v23 < 0xF );\n      v20 = 0;\n      if ( v22 != 15 && v24 >= 3 )\n      {\n        sub_408410(dword_8E947C[95 * *((signed int *)&xmmword_877BF0 + v22)], 1, (unsigned __int64)v110);\n        v20 = 3;\n      }\n    }\n    if ( qword_88C238 )\n      sub_40F0A0((__int64)\"owl_attack\", v79, 0, v20, (__int64)v98);\n    if ( dword_88C268 )\n      sub_433F90((unsigned __int64)\"%oVariation %d: ALIVE (%s)\\n\");\n    if ( v20 )\n    {\n      if ( v92 )\n        *v92 = v22;\n      if ( a2 )\n        *a2 = v110[0];\n      if ( !v83 )\n        return v20;\n      result = v20;\n      *(_DWORD *)(v83 + 4) = *(_DWORD *)(v83 + 4) & 0x3FF | (v20 << 24) | ((v22 & 0xF) << 20) | (v110[0] << 10) & 0xFFC00 | 0x20000000;\n      return result;\n    }\n    goto LABEL_52;\n  }\n  v89 = v7;\n  v30 = 3 - v88;\n  v81 = 15;\n  v87 = 0LL;\n  v31 = 0;\n  v93 = 0LL;\n  v80 = 0;\n  v103 = a2;\n  v32 = v21;\n  while ( 2 )\n  {\n    qword_877C30 = (__int64)v32;\n    switch ( v31 & 0x7FFFFFFF )\n    {\n      case 0u:\n      case 2u:\n        if ( (signed int)v87 > 0 && dword_98A7F4 > dword_98A7E0 )\n          goto LABEL_194;\n        v35 = 45;\n        if ( !dword_98A7F4 )\n          v35 = 70;\n        v36 = 1;\n        if ( dword_98A7F4 > dword_98A7E4 )\n          v36 = v35;\n        if ( !v31 )\n          v36 = v35;\n        v37 = v36;\n        if ( v96 < 2 )\n          v37 = 99;\n        if ( dword_98A7F4 <= 2 )\n          v37 = v36;\n        v86 = v37;\n        v34 = (unsigned int *)&v111;\n        goto LABEL_111;\n      case 1u:\n        if ( (signed int)v87 > 0 && dword_98A7F4 > dword_98A7E0 )\n          goto LABEL_194;\n        sub_42C530(&v109, &v104, v30, v32, &unk_574E58);\n        if ( !(unsigned int)sub_42C670(&v109, v30, &v104, 100LL) )\n        {\n          v86 = 1;\n          v34 = &v104;\n          goto LABEL_111;\n        }\n        if ( (unsigned int)sub_406880(v104, v30, v106, v85, v90, v89) )\n          sub_407030();\n        if ( dword_88C268 )\n          sub_433F90((unsigned __int64)\"%oVariation %d: DEAD (Winning owl_attackpat)\\n\");\n        if ( qword_88C238 )\n          sub_40F0A0((__int64)\"owl_attack\", v79, v104, 5u, (__int64)\"winning attack pattern\");\n        sub_42CD10(v30, &v109);\n        if ( v9 )\n          *v9 = v104;\n        result = 5LL;\n        if ( v83 )\n          *(_DWORD *)(v83 + 4) = (*(_DWORD *)(v83 + 4) & 0x3FF) + ((v104 << 10) & 0xFFC00) + 620756992;\n        return result;\n      case 3u:\n      case 5u:\n        v38 = v32;\n        v39 = qword_88C238;\n        v40 = dword_88C22C;\n        qword_88C238 = 0LL;\n        dword_88C22C = 0;\n        v41 = sub_43B050(v85, v110);\n        if ( v41 )\n        {\n          if ( v41 == 5 || (v42 = sub_426330((__int64)&v99), v31 == 5) || v42 >= 2 )\n          {\n            v104 = v110[0];\n            v105 = 25;\n            v106 = \"tactical attack\";\n            v107 = 1LL;\n            v108 = 0;\n            v34 = &v104;\n          }\n          else\n          {\n            v34 = 0LL;\n          }\n        }\n        else\n        {\n          v34 = 0LL;\n        }\n        qword_88C238 = v39;\n        dword_88C22C = v40;\n        v32 = v38;\n        goto LABEL_110;\n      case 4u:\n        if ( (_DWORD)v87 )\n          goto LABEL_194;\n        if ( !(unsigned int)sub_42D0B0(v85) )\n        {\n          if ( dword_88C268 )\n            sub_433F90((unsigned __int64)\"%oVariation %d: DEAD (no defense)\\n\");\n          if ( qword_88C238 )\n            sub_40F0A0((__int64)\"owl_attack\", v79, 0, 5u, (__int64)\"no defense\");\n          sub_42CD10(v30, &v109);\n          if ( v9 )\n            *v9 = 0;\n          if ( v83 )\n            *(_DWORD *)(v83 + 4) = *(_DWORD *)(v83 + 4) & 0x3FF | 0x25000000;\n          return 5LL;\n        }\n        if ( !v110[0] )\n          goto LABEL_67;\n        if ( !(unsigned int)sub_407C30(v110[0], v30) )\n          goto LABEL_64;\n        LODWORD(v43) = v110[0];\n        if ( v30 != (unsigned __int8)byte_98A1B0[dword_5641B0[0] + (signed __int64)v110[0]] )\n          goto LABEL_98;\n        if ( (unsigned int)sub_43B6F0(v110[0] + (signed __int64)dword_5641B0[0], &v82) )\n          goto LABEL_106;\n        LODWORD(v43) = v110[0];\nLABEL_98:\n        if ( v30 != (unsigned __int8)byte_98A1B0[dword_5641B4 + (signed __int64)(signed int)v43] )\n          goto LABEL_101;\n        if ( (unsigned int)sub_43B6F0((signed int)v43 + (signed __int64)dword_5641B4, &v82) )\n          goto LABEL_106;\n        LODWORD(v43) = v110[0];\nLABEL_101:\n        if ( v30 != (unsigned __int8)byte_98A1B0[dword_5641B8 + (signed __int64)(signed int)v43] )\n          goto LABEL_104;\n        if ( (unsigned int)sub_43B6F0((signed int)v43 + (signed __int64)dword_5641B8, &v82) )\n          goto LABEL_106;\n        LODWORD(v43) = v110[0];\nLABEL_104:\n        v43 = (signed int)v43;\n        if ( v30 != (unsigned __int8)byte_98A1B0[dword_5641BC + (signed __int64)(signed int)v43] )\n          goto LABEL_64;\n        if ( (unsigned int)sub_43B6F0(v43 + dword_5641BC, &v82) )\n        {\nLABEL_106:\n          v110[0] = v82;\n          v33 = \"defense move (backfill)\";\n        }\n        else\n        {\nLABEL_64:\n          v33 = \"defense move\";\n        }\n        if ( v110[0] )\n        {\n          v104 = v110[0];\n          v105 = 25;\n          v106 = v33;\n          v107 = 1LL;\n          v108 = 0;\n          v34 = &v104;\n        }\n        else\n        {\nLABEL_67:\n          v34 = 0LL;\n        }\nLABEL_110:\n        v86 = 1;\n        if ( !v34 )\n        {\nLABEL_194:\n          ++v31;\n          v9 = (unsigned int *)v103;\n          if ( v31 >= 6 )\n          {\n            sub_42CD10(v30, &v109);\n            if ( v80 )\n            {\n              if ( v80 != 3 )\n              {\n                v78 = v93;\n                if ( qword_88C238 )\n                  sub_40F0A0((__int64)\"owl_attack\", v79, v93, v80, (__int64)\"attack effective (ko) - E\");\n                if ( v9 )\n                  *v9 = v78;\n                if ( !v83 )\n                  return v80;\n                result = v80;\n                *(_DWORD *)(v83 + 4) = (*(_DWORD *)(v83 + 4) & 0x3FF)\n                                     + (((v80 & 0xF) << 24) | (v78 << 10) & 0xFFC00)\n                                     + 0x20000000;\n                return result;\n              }\n              v76 = v93;\n              if ( qword_88C238 )\n                sub_40F0A0((__int64)\"owl_attack\", v79, v93, 3u, (__int64)\"attack effective (gain) - E\");\n              if ( v92 )\n                *v92 = v81;\n              if ( v9 )\n                *v9 = v76;\n              v28 = v83;\n              result = 3LL;\n              if ( !v83 )\n                return result;\n              v29 = (*(_DWORD *)(v83 + 4) & 0x3FF) + (((v81 & 0xF) << 20) | (v76 << 10) & 0xFFC00) + 587202560;\nLABEL_54:\n              *(_DWORD *)(v28 + 4) = v29;\n              return result;\n            }\n            if ( qword_88C238 )\n            {\n              sprintf((char *)v110, \"attack failed)\\n  (%d variations\", (unsigned int)(dword_88C22C - v84));\n              if ( qword_88C238 )\n              {\n                v18 = (char *)v110;\n                goto LABEL_51;\n              }\n            }\nLABEL_52:\n            v28 = v83;\n            result = 0LL;\n            if ( !v83 )\n              return result;\n            v29 = *(_DWORD *)(v83 + 4) & 0x3FF | 0x20000000;\n            goto LABEL_54;\n          }\n          continue;\n        }\nLABEL_111:\n        v44 = 0LL;\n        v94 = v34;\n        v91 = v31;\n        while ( 1 )\n        {\n          v82 = -1;\n          v95 = 15;\n          if ( v44 && dword_98A7F4 > dword_98A7E0 )\n            goto LABEL_194;\n          qword_877C30 = (__int64)v32;\n          if ( v31 == 1 )\n          {\n            if ( !(unsigned int)sub_42C670(&v109, v30, &v104, v86) )\n              goto LABEL_194;\n            v34 = v94;\n            if ( v94[8 * v44 + 1] == 99 )\n            {\n              if ( v44 )\n                sub_4340E0(\"engine/owl.c\", 1450LL, \"k == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n              v86 = 99;\n              v46 = sub_42C670(&v109, v30, &v104, 99LL);\n              v34 = v94;\n              if ( v46 )\n              {\n                if ( dword_88C268 )\n                  sub_433F90((unsigned __int64)\"%oVariation %d: ALIVE (multiple forced moves)\\n\");\n                if ( qword_88C238 )\n                  sub_40F0A0((__int64)\"owl_attack\", v79, 0, 0, (__int64)\"multiple forced moves\");\n                sub_42CD10(v30, &v109);\n                goto LABEL_52;\n              }\n            }\n          }\n          else if ( (signed int)v34[8 * v44 + 1] < (signed int)v86 )\n          {\n            goto LABEL_194;\n          }\n          v47 = (signed int)v34[8 * v44];\n          if ( v47 > 0x1A4 || byte_98A1B0[v47] == 3 )\n          {\n            v48 = (1717986919LL * (signed int)v47 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)v47) >> 63);\n            sub_4340E0(\n              \"engine/owl.c\",\n              1467LL,\n              \"ON_BOARD1(mpos)\",\n              (unsigned int)(v48 - 1),\n              (unsigned int)(-20 * v48 + v47 - 1));\n          }\n          if ( !s[v47] )\n            break;\n          v31 = v91;\nLABEL_193:\n          if ( (unsigned __int64)++v44 >= 3 )\n            goto LABEL_194;\n        }\n        v49 = dword_98A800;\n        v50 = v30;\n        v51 = qword_98A760;\n        if ( !(unsigned int)sub_407EA0(\n                              v47,\n                              v50,\n                              *(const char **)&v34[8 * v44 + 2],\n                              v85,\n                              v90,\n                              v89,\n                              (unsigned int *)&v101,\n                              &v100,\n                              &v82,\n                              v80 == 0) )\n        {\n          v30 = v50;\n          v31 = v91;\n          goto LABEL_192;\n        }\n        if ( (_BYTE)v88 == 1 )\n          v51 = v49;\n        v52 = &qword_98A760;\n        if ( (_BYTE)v88 == 1 )\n          v52 = (__int64 *)&dword_98A800;\n        v53 = *(_DWORD *)v52;\n        if ( dword_88C268 )\n        {\n          sub_433F90((unsigned __int64)\"Trying %C %1m. Escape = %d. Current stack: \");\n          if ( dword_88C268 )\n            sub_407180();\n        }\n        sub_432FC0(&v97, 0LL);\n        s[v47] = 1;\n        v54 = v97;\n        *((_DWORD *)v97 + 8851) = 0;\n        sub_42CAD0((unsigned int)v47);\n        v55 = v85;\n        if ( (unsigned __int8)(byte_98A1B0[v85] - 1) >= 2u )\n        {\n          for ( i = 22LL; byte_98A1AF[i] != (_BYTE)v88 || v54[i - 1] != 1; i += 2LL )\n          {\n            if ( i >= 0x190 )\n              goto LABEL_153;\n            if ( byte_98A1B0[i] == (_BYTE)v88 && v54[i] == 1 )\n              goto LABEL_150;\n          }\n          LODWORD(i) = i - 1;\nLABEL_150:\n          v55 = sub_40AD00(i);\n        }\n        if ( v55 )\n        {\n          v57 = sub_42D0B0(v55);\n          v58 = \"attack effective\";\n        }\n        else\n        {\nLABEL_153:\n          v57 = 0;\n          v58 = \"all original stones captured\";\n        }\n        if ( v82 )\n        {\n          if ( v57 == 5 )\n          {\n            v47 = v93;\n            v30 = v50;\n            v59 = v87 + 1;\n            goto LABEL_191;\n          }\n          if ( (_DWORD)v47 )\n          {\n            v30 = v50;\n            if ( qword_88C238 )\n            {\n              v80 = 1;\n              v60 = \"attack effective - ko\";\n              v61 = v79;\n              v62 = v47;\n              goto LABEL_181;\n            }\nLABEL_189:\n            v80 = 1;\n          }\n          else\n          {\n            v30 = v50;\n            if ( !qword_88C238 )\n            {\n              v47 = 0LL;\n              goto LABEL_189;\n            }\n            v47 = 0LL;\n            v80 = 1;\n            v62 = 0;\n            v60 = \"all original stones captured with ko\";\n            v61 = v79;\nLABEL_181:\n            sub_40F0A0((__int64)\"owl_attack\", v61, v62, 1u, (__int64)v60);\n          }\n          v59 = v87;\nLABEL_191:\n          v75 = *((signed int *)qword_877DE8 + 8954 * dword_877DE0 + 8952);\n          v32 = (char *)qword_877DE8 + 35816 * v75;\n          v97 = (char *)qword_877DE8 + 35816 * v75;\n          --dword_877DE0;\n          sub_407030();\n          v93 = v47;\n          v87 = v59;\n          v31 = v91;\nLABEL_192:\n          v34 = v94;\n          goto LABEL_193;\n        }\n        if ( v57 )\n        {\n          if ( v57 == 2 && dword_88C308 )\n          {\n            v30 = v50;\n            v59 = v87 + 1;\n            if ( v81 == 15\n              || (v57 = 2,\n                  dword_8E9474[95 * *((signed int *)&xmmword_877BF0 + v95)] > dword_8E9474[95\n                                                                                         * *((signed int *)&xmmword_877BF0\n                                                                                           + v81)]) )\n            {\n              v57 = 2;\n              v81 = v95;\n            }\n          }\n          else if ( v53 - v51 >= 3 && dword_88C308 )\n          {\n            v30 = v50;\n            v59 = v87 + 1;\n            if ( dword_877C2C )\n            {\n              v63 = 15;\n              v64 = 0LL;\n              v65 = 0;\n              do\n              {\n                v66 = *((signed int *)&xmmword_877BF0 + v64);\n                if ( !*((_DWORD *)&xmmword_877BF0 + v64) )\n                  break;\n                if ( !byte_98A1B0[v66] )\n                {\n                  v67 = dword_8E9474[95 * v66];\n                  v68 = v64;\n                  if ( v65 != 0 && v67 <= v65 )\n                  {\n                    v68 = v63;\n                    v67 = v65;\n                  }\n                  v63 = v68;\n                  v65 = v67;\n                }\n                ++v64;\n              }\n              while ( v64 < 0xF );\n              if ( v63 != 15 )\n              {\n                if ( (signed int)v80 >= 3 )\n                {\n                  if ( v80 == 3 )\n                  {\n                    v45 = v81;\n                    if ( v65 > dword_8E9474[95 * *((signed int *)&xmmword_877BF0 + v81)] )\n                      v45 = v63;\n                    v81 = v45;\n                  }\n                }\n                else\n                {\n                  v57 = 2;\n                  v81 = v63;\n                }\n              }\n            }\n          }\n          else\n          {\n            v30 = v50;\n            v59 = v87 + 1;\n          }\n          v69 = 5 - v57;\n          v70 = v80;\n          v73 = __OFSUB__(v69, v80);\n          v71 = v69 == v80;\n          v72 = (signed int)(v69 - v80) < 0;\n          if ( v69 >= (signed int)v80 )\n            v70 = v69;\n          v80 = v70;\n          v74 = v93;\n          if ( !((unsigned __int8)(v72 ^ v73) | v71) )\n            v74 = v47;\n          v47 = v74;\n          goto LABEL_191;\n        }\n        v97 = (char *)qword_877DE8 + 35816 * *((signed int *)qword_877DE8 + 8954 * dword_877DE0-- + 8952);\n        sub_407030();\n        v77 = v103;\n        if ( qword_88C238 )\n        {\n          sprintf((char *)v110, \"%s)\\n  (%d variations\", v58, (unsigned int)(dword_88C22C - v84));\n          if ( qword_88C238 )\n            sub_40F0A0((__int64)\"owl_attack\", v79, v47, 5u, (__int64)v110);\n        }\n        sub_42CD10(v50, &v109);\n        if ( v77 )\n          *v77 = v47;\n        v28 = v83;\n        result = 5LL;\n        if ( v83 )\n        {\n          v29 = (*(_DWORD *)(v83 + 4) & 0x3FF) + (((_DWORD)v47 << 10) & 0xFFC00) + 620756992;\n          goto LABEL_54;\n        }\n        return result;\n      default:\n        goto LABEL_194;\n    }\n  }\n}\n", 
            "funcStartAddr": "0x42af00L", 
            "funcEndAddr": "0x42c0b9L", 
            "funcName": "sub_42AF00"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_42C0C0(__int64 a1, _DWORD *a2, unsigned int *a3)\n{\n  unsigned int *v3; // r13\n  unsigned int v4; // er15\n  int v5; // er12\n  int v6; // er14\n  unsigned int v7; // er14\n  __int64 v8; // r13\n  __int64 v9; // rsi\n  bool v10; // zf\n  __int64 v11; // rdi\n  unsigned __int64 v12; // rbp\n  unsigned __int64 i; // rdi\n  char *v14; // rsi\n  signed __int64 v15; // rax\n  unsigned int v16; // er12\n  unsigned int v17; // eax\n  int v18; // ebp\n  __int64 v19; // ST20_8\n  unsigned int v21; // [rsp+8h] [rbp-290h]\n  unsigned int v22; // [rsp+Ch] [rbp-28Ch]\n  __int64 v23; // [rsp+10h] [rbp-288h]\n  void *v24; // [rsp+18h] [rbp-280h]\n  int v25; // [rsp+24h] [rbp-274h]\n  __int64 v26; // [rsp+28h] [rbp-270h]\n  __int64 v27; // [rsp+30h] [rbp-268h]\n  _DWORD *v28; // [rsp+38h] [rbp-260h]\n  unsigned int *v29; // [rsp+40h] [rbp-258h]\n  __int64 v30; // [rsp+48h] [rbp-250h]\n  int v31; // [rsp+50h] [rbp-248h]\n  int v32; // [rsp+70h] [rbp-228h]\n  int v33; // [rsp+74h] [rbp-224h]\n  __int64 v34[11]; // [rsp+78h] [rbp-220h]\n  char dest; // [rsp+D0h] [rbp-1C8h]\n\n  v3 = a3;\n  v4 = a1;\n  v5 = (unsigned __int8)byte_98A1B0[(signed int)a1];\n  v21 = 0;\n  v6 = sub_43F970(a1);\n  v22 = 0;\n  v31 = 0;\n  byte_877BE4 = 1;\n  if ( !(unsigned int)sub_459050(2LL, (unsigned int)a1) )\n  {\n    if ( dword_88C264 & 0x1000 )\n      sub_493870(2LL, (unsigned int)a1);\n    v27 = 0LL;\n    v25 = v6;\n    v26 = (signed int)a1;\n    if ( dword_98A7F4 )\n      sub_4340E0(\"engine/owl.c\", 1658LL, \"stackp == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n    v28 = a2;\n    if ( dword_88C268 )\n      sub_433F90((unsigned __int64)\"owl_threaten_attack %1m\\n\");\n    v29 = v3;\n    v7 = 3 - v5;\n    sub_4287E0(&v30, a1, 0, 0, 1);\n    v8 = v30;\n    v24 = (void *)(v30 + 400);\n    memcpy(&dest, (const void *)(v30 + 400), 0x190uLL);\n    qword_877C30 = v8;\n    qword_877C40 = 0LL;\n    if ( !*(_DWORD *)(v8 + 35404) )\n      sub_4310E0(v8);\n    v9 = v8 + 1204;\n    v10 = *(_DWORD *)(v8 + 1200) == 2;\n    v11 = 0LL;\n    if ( *(_DWORD *)(v8 + 1200) == 2 )\n      v11 = v8 + 1204;\n    v23 = 0LL;\n    if ( v10 )\n      v9 = 0LL;\n    sub_424410(v11, v9, 1);\n    sub_42C530(&v31, &v32, v7, v8, &unk_574E58);\n    v12 = 0LL;\n    do\n    {\n      qword_877C30 = v8;\n      i = (unsigned __int64)&v31;\n      v14 = (char *)v7;\n      if ( !(unsigned int)sub_42C670(&v31, v7, &v32, 1LL) )\n        break;\n      v15 = 4 * v12;\n      v16 = *(&v32 + 8 * v12);\n      if ( v16 )\n      {\n        if ( *(int *)((char *)&v33 + v15 * 8) > 0 )\n        {\n          i = v16;\n          v14 = (char *)v7;\n          if ( (unsigned int)sub_406880(v16, v7, (const char *)v34[v15], v4, 0, 0) )\n          {\n            *(_DWORD *)(v8 + 35404) = 0;\n            v14 = (char *)v8;\n            sub_42CAD0(v16);\n            if ( !byte_98A1B0[v26] )\n            {\n              for ( i = 22LL; (unsigned __int8)(byte_98A1AF[i] - 1) > 1u || *(_BYTE *)(v8 + i - 1) != 1; i += 2LL )\n              {\n                if ( i >= 0x190 )\n                  goto LABEL_36;\n                if ( (unsigned __int8)(byte_98A1B0[i] - 1) <= 1u && *(_BYTE *)(v8 + i) == 1 )\n                  goto LABEL_31;\n              }\n              --i;\nLABEL_31:\n              v17 = sub_40AD00(i);\n              if ( v17 )\n              {\n                v14 = 0LL;\n                i = v17;\n                if ( !(unsigned int)sub_42AF00(v17, 0LL, 0LL, (char *)v8, 0, 0) )\n                  goto LABEL_33;\n              }\nLABEL_36:\n              sub_407030();\n              if ( dword_98A7F4 )\n                sub_4340E0(\"engine/owl.c\", 1696LL, \"stackp == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n              v21 = 1;\n              break;\n            }\n            i = v4;\n            v14 = (char *)&v22;\n            if ( (unsigned int)sub_42AF00(v4, (int *)&v22, 0LL, (char *)v8, 0, 0) == 5 )\n            {\n              sub_407030();\n              if ( dword_98A7F4 )\n                sub_4340E0(\"engine/owl.c\", 1705LL, \"stackp == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n              v21 = 1;\n              v23 = v16;\n              break;\n            }\nLABEL_33:\n            sub_407030();\n            i = (unsigned __int64)v24;\n            v14 = &dest;\n            memcpy(v24, &dest, 0x190uLL);\n          }\n        }\n      }\n      ++v12;\n    }\n    while ( v12 < 3 );\n    sub_43F970(i);\n    if ( dword_98A7F4 )\n      sub_4340E0(\"engine/owl.c\", 1715LL, \"stackp == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n    if ( dword_88C264 & 0x1000 )\n    {\n      LODWORD(v24) = v22;\n      sub_493870(i, v14);\n      sub_433F90((unsigned __int64)\"owl_threaten_attack %1m %1m %1m, result %d (%d, %d nodes, %f seconds)\\n\");\n    }\n    v18 = v23;\n    v19 = (unsigned __int8)byte_98A1B0[v26];\n    sub_459230(2, v4, 0, 0, v21, v23, v22, 0);\n    if ( v28 )\n      *v28 = v18;\n    if ( v29 )\n      *v29 = v22;\n    sub_42CD10(v7, &v31);\n  }\n  return v21;\n}\n", 
            "funcStartAddr": "0x42c0c0L", 
            "funcEndAddr": "0x42c52bL", 
            "funcName": "sub_42C0C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_42C530(__int64 a1, _QWORD *a2, unsigned int a3, __int64 a4, __int64 a5)\n{\n  __int64 v5; // r14\n  __int64 v6; // r12\n  int v7; // er13\n  __int64 v8; // r15\n  unsigned int v9; // ebp\n  void *v10; // rax\n  __int64 result; // rax\n\n  v5 = a4;\n  v6 = qword_88C238;\n  v7 = dword_88C22C;\n  qword_88C238 = 0LL;\n  qword_877C30 = a4;\n  dword_88C22C = 0;\n  *a2 = -4294967296LL;\n  a2[1] = 0LL;\n  a2[2] = 2LL;\n  a2[4] = -4294967296LL;\n  a2[5] = 0LL;\n  a2[6] = 2LL;\n  a2[8] = -4294967296LL;\n  v8 = a5;\n  v9 = a3;\n  a2[9] = 0LL;\n  a2[10] = 2LL;\n  memset((void *)(a4 + 35408), 0, 0x190uLL);\n  *(_QWORD *)(a1 + 4) = 0LL;\n  *(_DWORD *)(a1 + 12) = 0;\n  if ( *(_DWORD *)a1 )\n    sub_4340E0(\"engine/owl.c\", 2910LL, \"!list->initialized\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  v10 = malloc(0xC80uLL);\n  *(_QWORD *)(a1 + 24) = v10;\n  if ( !v10 )\n    sub_4340E0(\"engine/owl.c\", 2914LL, \"list->pattern_list != ((void*)0)\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  *(_DWORD *)(a1 + 16) = 200;\n  *(_DWORD *)a1 = 1;\n  result = sub_41EFF0((__int64)sub_433A00, v9, v8, a1, v5);\n  qword_88C238 = v6;\n  dword_88C22C = v7;\n  return result;\n}\n", 
            "funcStartAddr": "0x42c530L", 
            "funcEndAddr": "0x42c66cL", 
            "funcName": "sub_42C530"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_42C670(__int64 a1, unsigned int a2, signed __int64 a3, signed int a4)\n{\n  _DWORD *v4; // r10\n  __int64 v5; // r14\n  __int64 v6; // rdi\n  int v7; // esi\n  signed __int64 v8; // r15\n  int v9; // er11\n  __int64 v10; // rcx\n  signed __int64 v11; // r9\n  unsigned __int64 v12; // r13\n  float v13; // xmm1_4\n  signed __int64 v14; // rsi\n  signed __int64 v15; // rdx\n  int v16; // er8\n  signed __int64 i; // rsi\n  __int64 v18; // rbp\n  float v19; // xmm0_4\n  unsigned __int64 v20; // rbx\n  int v21; // edi\n  bool v22; // zf\n  __int64 v23; // rax\n  __int64 v24; // rcx\n  unsigned int v25; // er12\n  unsigned int v26; // ebp\n  int v27; // edx\n  char v28; // al\n  int v29; // ecx\n  int v30; // ecx\n  signed __int64 v31; // rbx\n  int v32; // eax\n  signed __int64 result; // rax\n  int v34; // er15\n  signed __int64 v35; // rbp\n  unsigned int v36; // eax\n  int v37; // eax\n  int v38; // edx\n  signed __int64 v39; // rbp\n  signed __int64 v40; // rbx\n  __int64 v41; // rcx\n  __int64 v42; // rdx\n  __int64 v43; // rsi\n  int v44; // [rsp+Ch] [rbp-5Ch]\n  signed __int64 v45; // [rsp+10h] [rbp-58h]\n  _DWORD *v46; // [rsp+18h] [rbp-50h]\n  unsigned int v47; // [rsp+20h] [rbp-48h]\n  int v48; // [rsp+24h] [rbp-44h]\n  __int64 v49; // [rsp+28h] [rbp-40h]\n  float v50; // [rsp+34h] [rbp-34h]\n\n  v4 = (_DWORD *)a3;\n  v47 = a2;\n  v5 = a1;\n  v6 = qword_88C238;\n  v7 = dword_88C22C;\n  qword_88C238 = 0LL;\n  dword_88C22C = 0;\n  LODWORD(a3) = *(_DWORD *)(v5 + 4);\n  LODWORD(v8) = *(_DWORD *)(v5 + 8);\n  if ( (signed int)v8 >= (signed int)a3 )\n  {\n    result = 0LL;\n    goto LABEL_44;\n  }\n  v49 = v6;\n  v44 = v7;\n  v50 = (float)a4;\n  v9 = v8 + 1;\n  v8 = (signed int)v8;\n  v46 = v4;\n  while ( 2 )\n  {\n    v10 = *(_QWORD *)(v5 + 24);\n    v11 = 16 * v8;\n    v12 = *(_QWORD *)(v10 + 16 * v8 + 8);\n    v13 = *(float *)(v12 + 124);\n    v14 = *(signed int *)(v5 + 12);\n    if ( v8 < v14 )\n      goto LABEL_20;\n    v15 = (signed int)a3 - 1;\n    if ( v8 >= v15 )\n      goto LABEL_19;\n    v16 = *(_DWORD *)(v10 + v11);\n    for ( i = 16 * v15; ; i -= 16LL )\n    {\n      --v15;\n      v18 = *(_QWORD *)(v10 + i + 8);\n      v19 = *(float *)(v18 + 124);\n      if ( v19 >= v13 )\n      {\n        v21 = *(_DWORD *)(v10 + i);\n        v20 = *(_QWORD *)(v10 + i + 8);\n        v22 = v19 == v13;\n        if ( v19 > v13 )\n          break;\n      }\n      else\n      {\n        v20 = 0LL;\n        v21 = 0;\n        v22 = v19 == v13;\n        if ( v19 > v13 )\n          break;\n      }\n      if ( v22 && v20 < v12 || v19 == v13 && v20 == v12 && v21 < v16 )\n        break;\n      if ( v15 <= v8 )\n        goto LABEL_18;\nLABEL_6:\n      v10 = *(_QWORD *)(v5 + 24);\n    }\n    v23 = *(_QWORD *)(v10 + i);\n    *(_OWORD *)(v10 + i) = *(_OWORD *)(v10 + v11);\n    v24 = *(_QWORD *)(v5 + 24);\n    *(_QWORD *)(v24 + v11) = v23;\n    *(_QWORD *)(v24 + v11 + 8) = v18;\n    v13 = v19;\n    v12 = v20;\n    v16 = v21;\n    if ( v15 > v8 )\n      goto LABEL_6;\nLABEL_18:\n    LODWORD(v14) = *(_DWORD *)(v5 + 12);\n    v10 = *(_QWORD *)(v5 + 24);\nLABEL_19:\n    *(_DWORD *)(v5 + 12) = v14 + 1;\n    v12 = *(_QWORD *)(v10 + v11 + 8);\nLABEL_20:\n    if ( v50 > v13 )\n    {\n      *(_DWORD *)(v5 + 12) = v8 + 1;\n      *(_DWORD *)(v5 + 8) = v8;\n      qword_88C238 = v49;\n      dword_88C22C = v44;\n      return 0LL;\n    }\n    v25 = *(_DWORD *)(v10 + v11);\n    v26 = *(_DWORD *)(v10 + v11 + 4);\n    if ( v25 > 0x1A4 || byte_98A1B0[v25] == 3 )\n    {\n      v27 = (1717986919LL * (signed int)v25 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)v25) >> 63);\n      sub_4340E0(\"engine/owl.c\", 3098LL, \"ON_BOARD1(move)\", (unsigned int)(v27 - 1), v25 - 20 * v27 - 1);\n    }\n    if ( *v4 == v25 )\n    {\nLABEL_40:\n      ++v8;\n      a3 = *(signed int *)(v5 + 4);\n      ++v9;\n      if ( v8 >= a3 )\n      {\n        result = 0LL;\n        goto LABEL_42;\n      }\n      continue;\n    }\n    break;\n  }\n  v28 = 1;\n  if ( v4[1] <= 0 )\n  {\n    v31 = 0LL;\n    if ( *v4 == v25 )\n      goto LABEL_40;\n  }\n  else\n  {\n    v29 = v4[8];\n    if ( v29 == v25 )\n      goto LABEL_40;\n    if ( v4[9] <= 0 )\n    {\n      v31 = 1LL;\n      if ( v29 == v25 )\n        goto LABEL_40;\n    }\n    else\n    {\n      v30 = v4[16];\n      if ( v30 == v25 )\n        goto LABEL_40;\n      if ( v4[17] <= 0 )\n      {\n        v31 = 2LL;\n        if ( v30 == v25 )\n          goto LABEL_40;\n      }\n      else\n      {\n        v28 = 0;\n        v31 = 3LL;\n        if ( v4[24] == v25 )\n          goto LABEL_40;\n      }\n    }\n  }\n  v48 = v9;\n  if ( !v28 )\n    sub_4340E0(\"engine/owl.c\", 3105LL, \"k < 3\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  v32 = sub_433550(v25, v47, v12, v26);\n  v4 = v46;\n  v9 = v48;\n  if ( !v32 )\n    goto LABEL_40;\n  v35 = 32 * v31;\n  *(_DWORD *)((char *)v46 + v35) = v25;\n  *(_DWORD *)((char *)v46 + v35 + 4) = (signed int)v13;\n  *(_QWORD *)((char *)v46 + v35 + 8) = *(_QWORD *)(v12 + 16);\n  if ( dword_88C268 )\n  {\n    sub_433F90((unsigned __int64)\"Pattern %s found at %1m with value %d\\n\");\n    v4 = v46;\n  }\n  v36 = *(_DWORD *)(v12 + 120);\n  if ( v36 & 0x200 )\n  {\n    *(_DWORD *)((char *)v4 + v35 + 16) = 0;\n    goto LABEL_62;\n  }\n  if ( !(v36 & 0x800) )\n  {\n    *(_DWORD *)((char *)v4 + v35 + 16) = 2;\n    goto LABEL_62;\n  }\n  v37 = *(_DWORD *)(v5 + 4);\n  v38 = 1;\n  if ( (signed int)v8 + 1 >= v37 )\n    goto LABEL_61;\n  v45 = 32 * v31;\n  v39 = (signed int)v8 + 1;\n  v40 = 16LL * v48 | 8;\n  while ( 2 )\n  {\n    v41 = *(_QWORD *)(v5 + 24);\n    if ( *(_DWORD *)(v41 + v40 - 8) != v25 || (v42 = *(_QWORD *)(v41 + v40), (*(_DWORD *)(v42 + 120) & 0xA00) == 2048) )\n    {\nLABEL_59:\n      ++v39;\n      v40 += 16LL;\n      if ( v39 >= v37 )\n      {\n        v35 = v45;\n        v38 = 1;\n        goto LABEL_61;\n      }\n      continue;\n    }\n    break;\n  }\n  if ( !(unsigned int)sub_433550(v25, v47, v42, *(unsigned int *)(v41 + v40 - 4)) )\n  {\n    v37 = *(_DWORD *)(v5 + 4);\n    v4 = v46;\n    goto LABEL_59;\n  }\n  if ( dword_88C268 )\n  {\n    v43 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 24) + v40) + 16LL);\n    sub_433F90((unsigned __int64)\"Additionally pattern %s found at %1m\\n\");\n  }\n  v38 = ~(*(_WORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 24) + v40) + 120LL) >> 8) & 2;\n  v4 = v46;\n  v35 = v45;\nLABEL_61:\n  *(_DWORD *)((char *)v4 + v35 + 16) = v38;\n  v36 = *(_DWORD *)(v12 + 120);\nLABEL_62:\n  *(_DWORD *)((char *)v4 + v35 + 20) = (v36 >> 13) & 1;\n  result = 1LL;\nLABEL_42:\n  v7 = v44;\n  v6 = v49;\nLABEL_44:\n  qword_88C238 = v6;\n  dword_88C22C = v7;\n  v34 = v8 + 1;\n  *(_DWORD *)(v5 + 12) = v34;\n  *(_DWORD *)(v5 + 8) = v34;\n  return result;\n}\n", 
            "funcStartAddr": "0x42c670L", 
            "funcEndAddr": "0x42caccL", 
            "funcName": "sub_42C670"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_42CAD0(int a1, __int64 a2)\n{\n  __int64 v2; // r15\n  int v3; // er8\n  __int64 v4; // rbx\n  int v5; // eax\n  signed __int64 v6; // rdi\n  char v7; // bp\n  char v8; // al\n  int v9; // edx\n  __int64 result; // rax\n  char v11; // cl\n  char v12; // cl\n  int v13; // esi\n  __int64 v14; // rdx\n  char v15; // cl\n  char v16; // cl\n  int v17; // esi\n  __int64 v18; // rdx\n  char v19; // cl\n  char v20; // cl\n  char v21; // cl\n  __int64 v22; // rdi\n  __int64 v23; // rdi\n\n  v2 = a2;\n  v3 = *(_DWORD *)(a2 + 1200);\n  v4 = a1;\n  v5 = (unsigned __int8)byte_98A1B0[dword_5641B0[0] + (signed __int64)a1];\n  v6 = a1 + (signed __int64)dword_5641B0[0];\n  if ( v5 == 3 || (v7 = *(_BYTE *)(a2 + v6 + 400), v7 < 0) )\n    v7 = 0;\n  if ( v3 == v5 && *((_DWORD *)&xmmword_954FB0 + 19 * v6) == v3 && dword_954FF0[19 * v6] == 1 )\n  {\n    v8 = 2;\n    if ( *(_BYTE *)(a2 + v6) )\n      v8 = v7;\n    v7 = v8;\n  }\n  v9 = (unsigned __int8)byte_98A1B0[dword_5641B4 + v4];\n  result = v4 + dword_5641B4;\n  if ( v9 != 3 )\n  {\n    v11 = *(_BYTE *)(a2 + result + 400);\n    if ( v11 < v7 )\n      v11 = v7;\n    v7 = v11;\n  }\n  if ( v3 == v9 && *((_DWORD *)&xmmword_954FB0 + 19 * result) == v3 && dword_954FF0[19 * result] == 1 )\n  {\n    v12 = 2;\n    if ( *(_BYTE *)(a2 + result) )\n      v12 = v7;\n    v7 = v12;\n  }\n  v13 = (unsigned __int8)byte_98A1B0[dword_5641B8 + v4];\n  v14 = v4 + dword_5641B8;\n  if ( v13 != 3 )\n  {\n    v15 = *(_BYTE *)(v2 + v14 + 400);\n    if ( v15 < v7 )\n      v15 = v7;\n    v7 = v15;\n  }\n  if ( v3 == v13 && *((_DWORD *)&xmmword_954FB0 + 19 * v14) == v3 && dword_954FF0[19 * v14] == 1 )\n  {\n    v16 = 2;\n    if ( *(_BYTE *)(v2 + v14) )\n      v16 = v7;\n    v7 = v16;\n  }\n  v17 = (unsigned __int8)byte_98A1B0[dword_5641BC + v4];\n  v18 = v4 + dword_5641BC;\n  if ( v17 != 3 )\n  {\n    v19 = *(_BYTE *)(v2 + v18 + 400);\n    if ( v19 < v7 )\n      v19 = v7;\n    v7 = v19;\n  }\n  if ( v3 == v17 && *((_DWORD *)&xmmword_954FB0 + 19 * v18) == v3 && dword_954FF0[19 * v18] == 1 )\n  {\n    v20 = 2;\n    if ( *(_BYTE *)(v2 + v18) )\n      v20 = v7;\n    v7 = v20;\n  }\n  *(_BYTE *)(v2 + v4 + 400) = v7;\n  v21 = byte_98A1B0[v6];\n  if ( v21 != byte_98A1B0[v4] )\n  {\n    v21 = byte_98A1B0[v4];\nLABEL_45:\n    if ( byte_98A1B0[result] != v21 )\n      goto LABEL_48;\n    goto LABEL_46;\n  }\n  if ( *(_BYTE *)(v2 + v6 + 400) >= v7 )\n    goto LABEL_45;\n  sub_40BAB0(v6, v2 + 400, v7);\n  v21 = byte_98A1B0[v4];\n  result = v4 + dword_5641B4;\n  if ( byte_98A1B0[result] != v21 )\n    goto LABEL_48;\nLABEL_46:\n  if ( *(_BYTE *)(v2 + result + 400) < v7 )\n  {\n    result = sub_40BAB0(result, v2 + 400, v7);\n    v21 = byte_98A1B0[v4];\n  }\nLABEL_48:\n  if ( byte_98A1B0[dword_5641B8 + v4] == v21 )\n  {\n    v22 = v4 + dword_5641B8;\n    if ( *(_BYTE *)(v2 + v22 + 400) < v7 )\n    {\n      result = sub_40BAB0(v22, v2 + 400, v7);\n      v21 = byte_98A1B0[v4];\n    }\n  }\n  if ( byte_98A1B0[dword_5641BC + v4] == v21 )\n  {\n    v23 = v4 + dword_5641BC;\n    if ( *(_BYTE *)(v2 + v23 + 400) < v7 )\n      result = sub_40BAB0(v23, v2 + 400, v7);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x42cad0L", 
            "funcEndAddr": "0x42cd08L", 
            "funcName": "sub_42CAD0"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_42CD10(unsigned int a1, _DWORD *a2)\n{\n  _DWORD *v2; // r13\n  int v3; // er15\n  signed __int64 v4; // rbx\n  signed __int64 v5; // rbp\n  signed int v6; // er14\n  __int64 v7; // rax\n  __int64 v8; // rcx\n  __int64 v9; // rsi\n  __int64 v10; // rdx\n  __int64 v11; // rcx\n  __int64 v12; // [rsp+0h] [rbp-38h]\n\n  v2 = a2;\n  if ( *a2 )\n  {\n    if ( dword_88C21C && dword_88C268 )\n    {\n      v12 = qword_88C238;\n      v3 = dword_88C22C;\n      qword_88C238 = 0LL;\n      dword_88C22C = 0;\n      v4 = (signed int)a2[2];\n      if ( (signed int)v4 < a2[1] )\n      {\n        v5 = 16 * v4 | 8;\n        v6 = 0;\n        do\n        {\n          if ( (unsigned int)sub_433550(\n                               *(unsigned int *)(*((_QWORD *)v2 + 3) + v5 - 8),\n                               a1,\n                               *(_QWORD *)(*((_QWORD *)v2 + 3) + v5),\n                               *(unsigned int *)(*((_QWORD *)v2 + 3) + v5 - 4)) )\n          {\n            if ( !v6 )\n            {\n              if ( dword_88C268 )\n                sub_433F90((unsigned __int64)\"Remaining valid (but unused) patterns at stack: \");\n              sub_407180();\n              v6 = 1;\n              if ( !dword_88C268 )\n                goto LABEL_14;\nLABEL_13:\n              v7 = *((_QWORD *)v2 + 3);\n              v8 = *(_QWORD *)(v7 + v5);\n              v9 = *(_QWORD *)(v8 + 16);\n              v10 = *(unsigned int *)(v7 + v5 - 8);\n              v11 = (unsigned int)(signed int)*(float *)(v8 + 124);\n              sub_433F90((unsigned __int64)\"Pattern %s found at %1m with value %d\\n\");\n              goto LABEL_14;\n            }\n            if ( dword_88C268 )\n              goto LABEL_13;\n          }\nLABEL_14:\n          ++v4;\n          v5 += 16LL;\n        }\n        while ( v4 < (signed int)v2[1] );\n      }\n      qword_88C238 = v12;\n      dword_88C22C = v3;\n    }\n    free(*((void **)v2 + 3));\n  }\n  v2[1] = -1;\n}\n", 
            "funcStartAddr": "0x42cd10L", 
            "funcEndAddr": "0x42ce4eL", 
            "funcName": "sub_42CD10"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_42CE50(__int64 a1, _DWORD *a2, _DWORD *a3, _DWORD *a4)\n{\n  _DWORD *v4; // r13\n  _DWORD *v5; // r14\n  _DWORD *v6; // r15\n  unsigned int v7; // ebp\n  int v8; // ebx\n  __int64 v9; // rbx\n  __int64 v10; // rdi\n  __int64 v11; // rsi\n  int v12; // ebx\n  __int64 v13; // ST20_8\n  int v14; // ebx\n  unsigned int v16; // [rsp+0h] [rbp-58h]\n  int v17; // [rsp+4h] [rbp-54h]\n  unsigned int v18; // [rsp+8h] [rbp-50h]\n  int v19; // [rsp+Ch] [rbp-4Ch]\n  int v20; // [rsp+10h] [rbp-48h]\n  int v21; // [rsp+14h] [rbp-44h]\n  __int64 v22; // [rsp+18h] [rbp-40h]\n  __int64 v23; // [rsp+20h] [rbp-38h]\n\n  v4 = a4;\n  v5 = a3;\n  v6 = a2;\n  v7 = a1;\n  v8 = sub_43F970(a1);\n  v17 = 0;\n  v19 = 15;\n  byte_877BE4 = 1;\n  if ( !dword_8E94A8[95 * (signed int)a1] )\n    return 0LL;\n  if ( !(unsigned int)sub_459050(1LL, (unsigned int)a1) )\n  {\n    if ( dword_88C264 & 0x1000 )\n      sub_493870(1LL, (unsigned int)a1);\n    v23 = 0LL;\n    v18 = v8;\n    if ( dword_88C268 )\n      sub_433F90((unsigned __int64)\"owl_defend %1m\\n\");\n    v22 = 0LL;\n    sub_4287E0(&qword_877C38, a1, 0, 0, 1);\n    v9 = qword_877C38;\n    qword_877C30 = qword_877C38;\n    qword_877C40 = 0LL;\n    if ( !*(_DWORD *)(qword_877C38 + 35404) )\n      sub_4310E0(qword_877C38);\n    v10 = 0LL;\n    if ( *(_DWORD *)(v9 + 1200) == 2 )\n      v10 = v9 + 1204;\n    v11 = 0LL;\n    if ( *(_DWORD *)(v9 + 1200) != 2 )\n      v11 = v9 + 1204;\n    sub_424410(v10, v11, 1);\n    sub_42ACD0(v7, qword_877C38, (__int64)v4, 1);\n    v16 = sub_42D0B0(v7);\n    dword_877C2C = 0;\n    if ( v19 != 15LL )\n      v22 = *((unsigned int *)&xmmword_877BF0 + v19);\n    v12 = (unsigned __int64)sub_43F970(v7) - v18;\n    if ( dword_88C264 & 0x1000 )\n    {\n      v18 = v16;\n      v21 = v17;\n      v20 = dword_877BE0;\n      sub_493870(v7, &v17);\n      sub_433F90((unsigned __int64)\"owl_defend %1m, result %d %1m (%d, %d nodes, %f seconds)\\n\");\n    }\n    v13 = (unsigned __int8)byte_98A1B0[v7];\n    v14 = v22;\n    sub_459230(1, v7, 0, 0, v16, v17, v22, (unsigned __int8)byte_877BE4);\n    if ( v6 )\n      *v6 = v17;\n    if ( v4 )\n      *v4 = v14;\n    if ( v5 )\n      *v5 = (unsigned __int8)byte_877BE4;\n  }\n  return v16;\n}\n", 
            "funcStartAddr": "0x42ce50L", 
            "funcEndAddr": "0x42d0a2L", 
            "funcName": "sub_42CE50"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_42D0B0(int a1, int *a2, signed int *a3, char *a4, unsigned int a5, unsigned int a6, signed int a7)\n{\n  char *v7; // rbx\n  __int64 v8; // rax\n  unsigned int v9; // ecx\n  int v10; // ecx\n  signed int v11; // edx\n  char v12; // al\n  const char *v13; // rdi\n  const char *v14; // r8\n  int v15; // ebp\n  __int64 v16; // rax\n  unsigned int v17; // er13\n  int v18; // ecx\n  unsigned int v19; // ebp\n  signed int v20; // ecx\n  int v21; // er15\n  int v22; // eax\n  int v23; // er15\n  int v24; // eax\n  int *v25; // rax\n  int v26; // eax\n  signed int v27; // eax\n  signed __int64 v28; // rcx\n  __int64 v29; // r12\n  int v30; // er14\n  signed int v31; // edx\n  __int64 v32; // r14\n  int v33; // eax\n  int *v34; // rdx\n  signed __int64 v35; // r15\n  unsigned __int64 v36; // r12\n  int *v37; // rbp\n  int v38; // edx\n  __int64 v39; // r13\n  char *v40; // rbx\n  int v41; // ebp\n  __int64 v42; // r13\n  __int64 v43; // rcx\n  __int64 v44; // rcx\n  __int64 v45; // rdx\n  __int64 v46; // rax\n  __int64 v47; // rsi\n  __int64 v48; // rsi\n  __int64 v49; // rax\n  int v50; // eax\n  bool v51; // zf\n  __int64 v52; // rax\n  int v53; // eax\n  bool v54; // zf\n  bool v55; // sf\n  unsigned __int8 v56; // of\n  __int64 v57; // rdx\n  int v58; // ebx\n  char v59; // dl\n  int v61; // ebx\n  int v62; // ebx\n  int v63; // eax\n  int v64; // [rsp+Ch] [rbp-8ECh]\n  unsigned int v65; // [rsp+10h] [rbp-8E8h]\n  char v66[12]; // [rsp+14h] [rbp-8E4h]\n  unsigned int v67; // [rsp+20h] [rbp-8D8h]\n  int v68; // [rsp+24h] [rbp-8D4h]\n  int *v69; // [rsp+28h] [rbp-8D0h]\n  char v70; // [rsp+30h] [rbp-8C8h]\n  int v71; // [rsp+34h] [rbp-8C4h]\n  int v72; // [rsp+38h] [rbp-8C0h]\n  unsigned int v73; // [rsp+3Ch] [rbp-8BCh]\n  unsigned int v74; // [rsp+40h] [rbp-8B8h]\n  unsigned int v75; // [rsp+44h] [rbp-8B4h]\n  __int64 v76; // [rsp+48h] [rbp-8B0h]\n  int *v77; // [rsp+50h] [rbp-8A8h]\n  int v78; // [rsp+5Ch] [rbp-89Ch]\n  int v79; // [rsp+60h] [rbp-898h]\n  int v80; // [rsp+64h] [rbp-894h]\n  int v81; // [rsp+68h] [rbp-890h]\n  int v82; // [rsp+6Ch] [rbp-88Ch]\n  signed int *v83; // [rsp+70h] [rbp-888h]\n  char *v84; // [rsp+78h] [rbp-880h]\n  const char *v85; // [rsp+80h] [rbp-878h]\n  int v86; // [rsp+88h] [rbp-870h]\n  unsigned int v87; // [rsp+8Ch] [rbp-86Ch]\n  unsigned int v88; // [rsp+90h] [rbp-868h]\n  int v89; // [rsp+94h] [rbp-864h]\n  __int64 *v90; // [rsp+98h] [rbp-860h]\n  int v91; // [rsp+A0h] [rbp-858h]\n  unsigned int v92; // [rsp+C0h] [rbp-838h]\n  int v93; // [rsp+C4h] [rbp-834h]\n  const char *v94; // [rsp+C8h] [rbp-830h]\n  __int64 v95; // [rsp+D0h] [rbp-828h]\n  int v96; // [rsp+E4h] [rbp-814h]\n  __int64 v97; // [rsp+120h] [rbp-7D8h]\n  char v98[4]; // [rsp+180h] [rbp-778h]\n  int v99[363]; // [rsp+184h] [rbp-774h]\n  char s[456]; // [rsp+730h] [rbp-1C8h]\n\n  v7 = a4;\n  v67 = a1;\n  v84 = a4;\n  v74 = a6;\n  v73 = a5;\n  v83 = a3;\n  v69 = a2;\n  v64 = a1;\n  v65 = (unsigned __int8)byte_98A1B0[a1];\n  v72 = -1;\n  v82 = -1;\n  *(_QWORD *)&v66[4] = 0LL;\n  *(_QWORD *)v66 = (unsigned int)(dword_88C22C - 1);\n  v91 = 0;\n  if ( dword_98A7F4 <= dword_98A7E0\n    && dword_565C6C & 0x200\n    && (unsigned int)sub_40E8D0(1u, v73, v74, (int *)&v67, &v66[4]) )\n  {\n    v8 = *(_QWORD *)&v66[4];\n    v9 = *(_DWORD *)(*(_QWORD *)&v66[4] + 4LL);\n    if ( v69 && v9 & 0xF000000 )\n    {\n      *v69 = (v9 >> 10) & 0x3FF;\n      v9 = *(_DWORD *)(v8 + 4);\n    }\n    if ( v83 && (v9 & 0xF000000) == 0x2000000 )\n    {\n      v10 = (v9 >> 20) & 0xF;\n      v11 = 15;\n      if ( dword_877C2C )\n        v11 = v10;\n      *v83 = v11;\n    }\n    v12 = *(_BYTE *)(v8 + 7) & 0xF;\n    if ( v12 != 5 && v12 != 2 )\n    {\n      if ( dword_88C268 )\n      {\n        v13 = \"%oVariation %d: DEAD (cached)\\n\";\n        goto LABEL_146;\n      }\n    }\n    else if ( dword_88C268 )\n    {\n      v13 = \"%oVariation %d: ALIVE (cached)\\n\";\nLABEL_146:\n      sub_433F90((char)v13);\n      goto LABEL_147;\n    }\nLABEL_147:\n    if ( qword_88C238 )\n      sub_40F0A0(\n        (__int64)\"owl_defend\",\n        v64,\n        (*(_DWORD *)(*(_QWORD *)&v66[4] + 4LL) >> 10) & 0x3FF,\n        (*(_DWORD *)(*(_QWORD *)&v66[4] + 4LL) >> 24) & 0xF,\n        (__int64)\"cached\");\n    return *(_BYTE *)(*(_QWORD *)&v66[4] + 7LL) & 0xF;\n  }\n  if ( (signed int)sub_4155F0((__int64)v7, *((_DWORD *)v7 + 300), (__int64)(v7 + 800)) >= 5 && dword_98A7F4 >= 3 )\n  {\n    if ( dword_88C268 )\n      sub_433F90((unsigned __int64)\"%oVariation %d: ALIVE (escaped)\\n\");\n    if ( qword_88C238 )\n    {\n      v14 = \"escaped\";\nLABEL_37:\n      sub_40F0A0((__int64)\"owl_defend\", a1, 0, 5u, (__int64)v14);\n    }\nLABEL_38:\n    if ( v69 )\n      *v69 = 0;\n    v16 = *(_QWORD *)&v66[4];\n    v17 = 5;\n    if ( *(_QWORD *)&v66[4] )\n    {\n      v18 = *(_DWORD *)(*(_QWORD *)&v66[4] + 4LL) & 0x3FF | 0x25000000;\nLABEL_42:\n      *(_DWORD *)(v16 + 4) = v18;\n      return v17;\n    }\n    return v17;\n  }\n  if ( dword_98A7F4 > dword_98A7EC )\n  {\n    if ( dword_88C268 )\n      sub_433F90((unsigned __int64)\"%oVariation %d: ALIVE (maximum reading depth reached)\\n\");\n    v14 = \"max reading depth reached\";\n    goto LABEL_36;\n  }\n  v15 = dword_877BE0;\n  if ( dword_877BE0 >= dword_98A7E8 )\n  {\n    byte_877BE4 = 0;\n    if ( dword_88C268 )\n      sub_433F90((unsigned __int64)\"%oVariation %d: ALIVE (owl node limit reached)\\n\");\n    v14 = \"owl node limit reached\";\nLABEL_36:\n    v85 = v14;\n    if ( !qword_88C238 )\n      goto LABEL_38;\n    goto LABEL_37;\n  }\n  memset(s, 0, 0x190uLL);\n  dword_877BE0 = v15 + 1;\n  ++dword_877C48;\n  qword_877C30 = (__int64)v7;\n  memset(v7 + 35408, 0, 0x190uLL);\n  if ( a7 > 2 )\n  {\n    v97 = -4294967296LL;\n    sub_425C00(&v70, 0, 0, 0, 0);\n    v90 = &v97;\n  }\n  else\n  {\n    v90 = &v97;\n    if ( (unsigned int)sub_433700((__int64)v7) )\n    {\n      if ( qword_88C238 )\n        sub_40F0A0((__int64)\"owl_defend\", a1, 0, 5u, (__int64)v85);\n      if ( dword_88C268 )\n        sub_433F90((unsigned __int64)\"%oVariation %d: ALIVE (%s)\\n\");\n      goto LABEL_38;\n    }\n  }\n  v78 = 15;\n  v71 = 0;\n  v19 = 0;\n  v76 = 0LL;\n  v17 = 0;\n  do\n  {\n    qword_877C30 = (__int64)v7;\n    switch ( v19 & 0x7FFFFFFF )\n    {\n      case 0u:\n      case 2u:\n        if ( v71 > 0 && dword_98A7F4 > dword_98A7E0 )\n          goto LABEL_133;\n        if ( !v19 || (v20 = 1, dword_98A7F4 > dword_98A7E4) )\n        {\n          if ( dword_98A7F4 )\n          {\n            v21 = v72;\n            v22 = sub_426330((__int64)&v70);\n            v20 = 25;\n            if ( v21 + v22 <= 3 )\n            {\n              v23 = v72;\n              v24 = sub_426330((__int64)&v70);\n              v20 = 45;\n              if ( v23 + v24 > 2 )\n                v20 = 35;\n            }\n          }\n          else\n          {\n            v20 = 70;\n          }\n        }\n        v31 = v20;\n        if ( dword_98A7F4 > 2 )\n          v31 = 99;\n        if ( v82 >= 2 )\n          v31 = v20;\n        v68 = v31;\n        v25 = (int *)v90;\n        goto LABEL_81;\n      case 1u:\n        if ( v71 > 0 && dword_98A7F4 > dword_98A7E0 )\n          goto LABEL_133;\n        sub_42C530((__int64)&v91, &v92, v65, (__int64)v7, (__int64)&unk_61FBE0);\n        v26 = sub_42C670((__int64)&v91, v65, (signed __int64)&v92, 100);\n        v68 = 1;\n        v77 = (int *)&v92;\n        if ( !v26 )\n          goto LABEL_82;\n        v62 = v92;\n        v63 = sub_406880(v92, v65, v94, v67, v73, v74);\n        if ( v63 )\n          sub_407030();\n        if ( dword_88C268 )\n          sub_433F90((unsigned __int64)\"%oVariation %d: ALIVE (Winning owl_defendpat)\\n\");\n        if ( qword_88C238 )\n          sub_40F0A0((__int64)\"owl_defend\", a1, v62, 5u, (__int64)\"winning defense pattern\");\n        sub_42CD10(v65, &v91);\n        if ( v69 )\n          *v69 = v62;\n        v16 = *(_QWORD *)&v66[4];\n        v17 = 5;\n        if ( !*(_QWORD *)&v66[4] )\n          return v17;\n        v18 = (*(_DWORD *)(*(_QWORD *)&v66[4] + 4LL) & 0x3FF) + ((v62 << 10) & 0xFFC00) + 620756992;\n        goto LABEL_42;\n      case 3u:\n        v27 = 0;\n        v28 = -378LL;\n        if ( byte_98A33F[-378] != 3 )\n          goto LABEL_61;\n        break;\n      default:\n        v68 = 1;\n        v25 = 0LL;\n        goto LABEL_81;\n    }\n    while ( v28 )\n    {\n      while ( 1 )\n      {\n        if ( byte_98A340[v28] != 3 )\n          v27 += v7[v28 + 400];\n        v28 += 2LL;\n        if ( byte_98A33F[v28] == 3 )\n          break;\nLABEL_61:\n        v27 += v7[v28 + 399];\n        if ( !v28 )\n          goto LABEL_67;\n      }\n    }\nLABEL_67:\n    if ( v27 <= 4 )\n    {\n      v29 = qword_88C238;\n      v30 = dword_88C22C;\n      qword_88C238 = 0LL;\n      dword_88C22C = 0;\n      if ( (unsigned int)sub_43E350(v67, 0LL, 0LL, 0LL, v98)\n        && ((signed int)sub_4093D0(*(int *)v98, v65, 2, 0LL) > 1 || (unsigned int)sub_40B9B0(*(int *)v98, v65)) )\n      {\n        if ( dword_88C268 )\n          sub_433F90((unsigned __int64)\"Found tactical defense for %1m at %1m.\\n\");\n        v92 = *(_DWORD *)v98;\n        v93 = 25;\n        v94 = \"tactical_defense\";\n        v95 = 1LL;\n        qword_88C238 = v29;\n        v96 = 0;\n        dword_88C22C = v30;\n        v68 = 1;\n        v25 = (int *)&v92;\nLABEL_81:\n        v77 = v25;\nLABEL_82:\n        v32 = 0LL;\n        v75 = v19;\n        while ( 1 )\n        {\n          v81 = -1;\n          v80 = 15;\n          if ( v32 && dword_98A7F4 > dword_98A7E0 )\n            goto LABEL_133;\n          qword_877C30 = (__int64)v7;\n          if ( v19 == 1 )\n          {\n            v33 = sub_42C670((__int64)&v91, v65, (signed __int64)&v92, v68);\n            v34 = v77;\n            if ( !v33 )\n              goto LABEL_133;\n          }\n          else\n          {\n            v34 = v77;\n            if ( v77[8 * v32 + 1] < v68 )\n              goto LABEL_133;\n          }\n          v35 = 8 * v32;\n          v36 = v34[8 * v32];\n          v37 = v34;\n          if ( v36 > 0x1A4 || byte_98A1B0[v36] == 3 )\n          {\n            v38 = (1717986919LL * (signed int)v36 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)v36) >> 63);\n            sub_4340E0(\n              \"engine/owl.c\",\n              2044LL,\n              \"ON_BOARD1(mpos)\",\n              (unsigned int)(v38 - 1),\n              (unsigned int)(v36 - 20 * v38 - 1));\n          }\n          if ( !s[v36]\n            && (unsigned int)sub_407EA0(\n                               v36,\n                               v65,\n                               *(const char **)&v34[v35 + 2],\n                               v67,\n                               v73,\n                               v74,\n                               &v88,\n                               &v87,\n                               &v81,\n                               v17 == 0) )\n          {\n            break;\n          }\nLABEL_132:\n          v19 = v75;\n          if ( (unsigned __int64)++v32 >= 3 )\n            goto LABEL_133;\n        }\n        v79 = v17;\n        v39 = a7 - ((unsigned int)((unsigned int)v37[v35 + 5] < 1) - 1);\n        if ( dword_88C268 )\n        {\n          sub_433F90((unsigned __int64)\"Trying %C %1m. Escape = %d. Current stack: \");\n          if ( dword_88C268 )\n            sub_407180();\n        }\n        sub_432FC0(&v84, 0LL);\n        s[v36] = 1;\n        v40 = v84;\n        *((_DWORD *)v84 + 8851) = 0;\n        v41 = v37[v35 + 4];\n        if ( v41 )\n        {\n          v86 = dword_88C22C;\n          v42 = qword_88C238;\n          qword_88C238 = 0LL;\n          dword_88C22C = 0;\n          sub_44D5D0((unsigned int)v36, &v89, v98);\n          qword_88C238 = v42;\n          dword_88C22C = v86;\n          if ( v41 != 1 )\n            goto LABEL_104;\n          if ( v89 > 0 )\n          {\n            v43 = 0LL;\n            while ( !v40[*(signed int *)&v98[4 * v43]] )\n            {\n              if ( ++v43 >= v89 )\n                goto LABEL_117;\n            }\nLABEL_104:\n            if ( v89 > 0 )\n            {\n              v44 = v89 & 1;\n              if ( v89 == 1 )\n              {\n                v45 = 0LL;\n                if ( !(v89 & 1) )\n                  goto LABEL_117;\n              }\n              else\n              {\n                v46 = v89 - v44;\n                v45 = 0LL;\n                do\n                {\n                  v47 = *(signed int *)&v98[4 * v45];\n                  if ( !v40[v47] )\n                    v40[v47] = 2;\n                  v48 = v99[v45];\n                  if ( !v40[v48] )\n                    v40[v48] = 2;\n                  v45 += 2LL;\n                }\n                while ( v46 != v45 );\n                if ( !v44 )\n                  goto LABEL_117;\n              }\n              v49 = *(signed int *)&v98[4 * v45];\n              if ( !v40[v49] )\n                v40[v49] = 2;\n              goto LABEL_117;\n            }\n          }\n        }\nLABEL_117:\n        if ( v81 )\n        {\n          v50 = sub_42AF00(v67, 0LL, 0LL, v40, v88, v87);\n          v51 = v50 == 5;\n          v17 = v79;\n          if ( v50 != 5 )\n            v17 = 1;\n          v52 = v76;\n          if ( !v51 )\n            v52 = (unsigned int)v36;\n        }\n        else\n        {\n          v53 = sub_42AF00(v67, 0LL, &v80, v40, v88, v87);\n          if ( v53 == 3 )\n          {\n            v78 = v80;\n          }\n          else if ( !v53 )\n          {\n            v84 = (char *)qword_877DE8 + 35816 * *((signed int *)qword_877DE8 + 8954 * dword_877DE0-- + 8952);\n            sub_407030();\n            if ( qword_88C238 )\n            {\n              sprintf(v98, \"defense effective)\\n  (%d variations\", (unsigned int)(dword_88C22C - *(_DWORD *)v66));\n              if ( qword_88C238 )\n                sub_40F0A0((__int64)\"owl_defend\", a1, v36, 5u, (__int64)v98);\n            }\n            sub_42CD10(v65, &v91);\n            if ( v69 )\n              *v69 = v36;\n            if ( *(_QWORD *)&v66[4] )\n              *(_DWORD *)(*(_QWORD *)&v66[4] + 4LL) = (((_DWORD)v36 << 10) & 0xFFC00)\n                                                    + (*(_DWORD *)(*(_QWORD *)&v66[4] + 4LL) & 0x3FF)\n                                                    + 620756992;\n            return 5;\n          }\n          v17 = 5 - v53;\n          v56 = __OFSUB__(5 - v53, v79);\n          v54 = 5 - v53 == v79;\n          v55 = 5 - v53 - v79 < 0;\n          if ( 5 - v53 < v79 )\n            v17 = v79;\n          v52 = v76;\n          if ( !((unsigned __int8)(v55 ^ v56) | v54) )\n            v52 = (unsigned int)v36;\n        }\n        v76 = v52;\n        v57 = *((signed int *)qword_877DE8 + 8954 * dword_877DE0 + 8952);\n        v7 = (char *)qword_877DE8 + 35816 * v57;\n        v84 = (char *)qword_877DE8 + 35816 * v57;\n        ++v71;\n        --dword_877DE0;\n        sub_407030();\n        goto LABEL_132;\n      }\n      qword_88C238 = v29;\n      dword_88C22C = v30;\n    }\nLABEL_133:\n    ++v19;\n  }\n  while ( v19 < 4 );\n  sub_42CD10(v65, &v91);\n  if ( !v17 )\n  {\n    if ( v71 || (signed int)sub_426330((__int64)&v70) < 2 )\n    {\n      if ( qword_88C238 )\n      {\n        sprintf(\n          v98,\n          \"defense failed - genus %d)\\n  (%d variations\",\n          v72 == 1,\n          (unsigned int)(dword_88C22C - *(_DWORD *)v66));\n        if ( qword_88C238 )\n          sub_40F0A0((__int64)\"owl_defend\", a1, 0, 0, (__int64)v98);\n      }\n      v16 = *(_QWORD *)&v66[4];\n      v17 = 0;\n      if ( *(_QWORD *)&v66[4] )\n      {\n        v18 = *(_DWORD *)(*(_QWORD *)&v66[4] + 4LL) & 0x3FF | 0x20000000;\n        goto LABEL_42;\n      }\n      return v17;\n    }\n    if ( !qword_88C238 )\n      goto LABEL_38;\n    v14 = \"genus probably >= 2\";\n    goto LABEL_37;\n  }\n  if ( v17 == 2 )\n  {\n    v58 = v76;\n    if ( qword_88C238 )\n      sub_40F0A0((__int64)\"owl_defend\", a1, v76, 2u, (__int64)\"defense effective (loss) - B\");\n    v59 = v78;\n    if ( v83 )\n      *v83 = v78;\n    if ( v69 )\n      *v69 = v58;\n    v16 = *(_QWORD *)&v66[4];\n    v17 = 2;\n    if ( *(_QWORD *)&v66[4] )\n    {\n      v18 = (*(_DWORD *)(*(_QWORD *)&v66[4] + 4LL) & 0x3FF) + (((v59 & 0xF) << 20) | (v58 << 10) & 0xFFC00) + 570425344;\n      goto LABEL_42;\n    }\n  }\n  else\n  {\n    v61 = v76;\n    if ( qword_88C238 )\n      sub_40F0A0((__int64)\"owl_defend\", a1, v76, v17, (__int64)\"defense effective (ko) - B\");\n    if ( v69 )\n      *v69 = v61;\n    v16 = *(_QWORD *)&v66[4];\n    if ( *(_QWORD *)&v66[4] )\n    {\n      v18 = (*(_DWORD *)(*(_QWORD *)&v66[4] + 4LL) & 0x3FF) + (((v17 & 0xF) << 24) | (v61 << 10) & 0xFFC00) + 0x20000000;\n      goto LABEL_42;\n    }\n  }\n  return v17;\n}\n", 
            "funcStartAddr": "0x42d0b0L", 
            "funcEndAddr": "0x42ded6L", 
            "funcName": "sub_42D0B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_42DEE0(__int64 a1, unsigned int *a2, unsigned int *a3)\n{\n  unsigned int *v3; // r15\n  unsigned int v4; // er14\n  unsigned int v5; // er13\n  int v6; // er12\n  _DWORD *v7; // rbp\n  __int64 v8; // rsi\n  __int64 v9; // r15\n  __int64 v10; // rdi\n  unsigned __int64 v11; // rdi\n  unsigned int *v12; // rsi\n  unsigned __int64 v13; // rbx\n  unsigned int v14; // er12\n  int v15; // ebx\n  unsigned int v16; // er14\n  __int64 v17; // r13\n  __int64 v18; // rcx\n  __int64 v19; // rcx\n  __int64 v20; // rdx\n  __int64 v21; // rax\n  __int64 v22; // rsi\n  __int64 v23; // rsi\n  __int64 v24; // rax\n  int v25; // er14\n  __int64 v26; // ST20_8\n  unsigned int v28; // [rsp+0h] [rbp-828h]\n  unsigned int v29; // [rsp+4h] [rbp-824h]\n  unsigned int v30; // [rsp+8h] [rbp-820h]\n  int v31; // [rsp+Ch] [rbp-81Ch]\n  int v32; // [rsp+10h] [rbp-818h]\n  int v33; // [rsp+14h] [rbp-814h]\n  __int64 v34; // [rsp+18h] [rbp-810h]\n  __int64 v35; // [rsp+20h] [rbp-808h]\n  unsigned int *v36; // [rsp+28h] [rbp-800h]\n  unsigned int *v37; // [rsp+30h] [rbp-7F8h]\n  void *src; // [rsp+38h] [rbp-7F0h]\n  int v39; // [rsp+40h] [rbp-7E8h]\n  int v40; // [rsp+60h] [rbp-7C8h]\n  int v41; // [rsp+64h] [rbp-7C4h]\n  __int64 v42; // [rsp+68h] [rbp-7C0h]\n  int v43[20]; // [rsp+70h] [rbp-7B8h]\n  char dest; // [rsp+C0h] [rbp-768h]\n  int v45; // [rsp+250h] [rbp-5D8h]\n  int v46[373]; // [rsp+254h] [rbp-5D4h]\n\n  v3 = a3;\n  v4 = a1;\n  v5 = (unsigned __int8)byte_98A1B0[(signed int)a1];\n  v29 = 0;\n  v6 = sub_43F970(a1);\n  v28 = 0;\n  byte_877BE4 = 1;\n  v39 = 0;\n  if ( !dword_8E94A8[95 * (signed int)a1] )\n    return 0LL;\n  if ( (unsigned int)sub_459050(3LL, (unsigned int)a1) )\n    return v29;\n  if ( dword_88C264 & 0x1000 )\n    sub_493870(3LL, (unsigned int)a1);\n  v34 = 0LL;\n  v36 = a2;\n  if ( dword_88C268 )\n    sub_433F90((unsigned __int64)\"owl_threaten_defense %1m\\n\");\n  v32 = v6;\n  v35 = (signed int)a1;\n  v37 = v3;\n  sub_4287E0((__int64 *)&src, a1, 0, 0, 1);\n  v7 = src;\n  memcpy(&dest, src, 0x190uLL);\n  qword_877C30 = (__int64)v7;\n  qword_877C40 = 0LL;\n  if ( !v7[8851] )\n    sub_4310E0(v7);\n  v8 = (__int64)(v7 + 301);\n  v9 = 0LL;\n  v10 = 0LL;\n  if ( v7[300] == 2 )\n    v10 = (__int64)(v7 + 301);\n  if ( v7[300] == 2 )\n    v8 = 0LL;\n  sub_424410(v10, v8, 1);\n  sub_42C530((__int64)&v39, &v40, v5, (__int64)v7, (__int64)&unk_61FBE0);\n  v30 = v4;\n  while ( 1 )\n  {\n    qword_877C30 = (__int64)v7;\n    v11 = (unsigned __int64)&v39;\n    v12 = (unsigned int *)v5;\n    if ( !(unsigned int)sub_42C670((__int64)&v39, v5, (signed __int64)&v40, 1) )\n    {\nLABEL_41:\n      v14 = 0;\n      goto LABEL_42;\n    }\n    v13 = 32 * v9;\n    v14 = *(&v40 + 8 * v9);\n    if ( v14 )\n    {\n      if ( *(int *)((char *)&v41 + v13) > 0 )\n      {\n        v11 = v14;\n        v12 = (unsigned int *)v5;\n        if ( (unsigned int)sub_406880(v14, v5, *(const char **)((char *)&v42 + v13), v4, 0, 0) )\n          break;\n      }\n    }\nLABEL_40:\n    if ( (unsigned __int64)++v9 >= 3 )\n      goto LABEL_41;\n  }\n  v7[8851] = 0;\n  v15 = v43[v13 / 4];\n  if ( v15 )\n  {\n    v31 = dword_88C22C;\n    v16 = v5;\n    v17 = qword_88C238;\n    qword_88C238 = 0LL;\n    dword_88C22C = 0;\n    sub_44D5D0(v14, &v33, &v45);\n    qword_88C238 = v17;\n    v5 = v16;\n    v4 = v30;\n    dword_88C22C = v31;\n    if ( v15 == 1 )\n    {\n      if ( v33 <= 0 )\n        goto LABEL_38;\n      v18 = 0LL;\n      while ( !*((_BYTE *)v7 + *(&v45 + v18)) )\n      {\n        if ( ++v18 >= v33 )\n          goto LABEL_38;\n      }\n    }\n    if ( v33 > 0 )\n    {\n      v19 = v33 & 1;\n      if ( v33 == 1 )\n      {\n        v20 = 0LL;\n        if ( !(v33 & 1) )\n          goto LABEL_38;\n        goto LABEL_36;\n      }\n      v21 = v33 - v19;\n      v20 = 0LL;\n      do\n      {\n        v22 = *(&v45 + v20);\n        if ( !*((_BYTE *)v7 + v22) )\n          *((_BYTE *)v7 + v22) = 2;\n        v23 = v46[v20];\n        if ( !*((_BYTE *)v7 + v23) )\n          *((_BYTE *)v7 + v23) = 2;\n        v20 += 2LL;\n      }\n      while ( v21 != v20 );\n      if ( v19 )\n      {\nLABEL_36:\n        v24 = *(&v45 + v20);\n        if ( !*((_BYTE *)v7 + v24) )\n          *((_BYTE *)v7 + v24) = 2;\n        goto LABEL_38;\n      }\n    }\n  }\nLABEL_38:\n  v11 = v4;\n  v12 = &v28;\n  v25 = sub_42D0B0(v4, (int *)&v28, 0LL, (char *)v7, 0, 0, 0);\n  sub_407030();\n  if ( v25 != 5 )\n  {\n    v11 = (unsigned __int64)v7;\n    v12 = (unsigned int *)&dest;\n    memcpy(v7, &dest, 0x190uLL);\n    v4 = v30;\n    goto LABEL_40;\n  }\n  if ( v28 && (unsigned __int8)(byte_98A1B0[v28] - 1) <= 1u )\n    v28 = 0;\n  v29 = 5;\nLABEL_42:\n  sub_43F970(v11);\n  if ( dword_98A7F4 )\n    sub_4340E0(\"engine/owl.c\", 2206LL, \"stackp == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  if ( dword_88C264 & 0x1000 )\n  {\n    v31 = dword_877BE0;\n    sub_493870(v11, v12);\n    sub_433F90((unsigned __int64)\"owl_threaten_defense %1m %1m %1m, result %d (%d, %d nodes, %f seconds)\\n\");\n  }\n  v26 = (unsigned __int8)byte_98A1B0[v35];\n  sub_459230(3, v30, 0, 0, v29, v14, v28, 0);\n  if ( v36 )\n    *v36 = v14;\n  if ( v37 )\n    *v37 = v28;\n  sub_42CD10(v5, &v39);\n  return v29;\n}\n", 
            "funcStartAddr": "0x42dee0L", 
            "funcEndAddr": "0x42e355L", 
            "funcName": "sub_42DEE0"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_42E360(__int64 a1, int a2, __int64 a3, int a4)\n{\n  __int64 v4; // rbx\n  __int64 v5; // r14\n  int v6; // er15\n  __int64 v7; // rcx\n  __int64 v8; // rcx\n  __int64 v9; // rdx\n  __int64 v10; // rax\n  __int64 v11; // rsi\n  __int64 v12; // rsi\n  __int64 v13; // rax\n  int v14; // [rsp+Ch] [rbp-5CCh]\n  int v15; // [rsp+10h] [rbp-5C8h]\n  int v16[369]; // [rsp+14h] [rbp-5C4h]\n\n  v4 = a3;\n  if ( a2 )\n  {\n    v5 = qword_88C238;\n    v6 = dword_88C22C;\n    qword_88C238 = 0LL;\n    dword_88C22C = 0;\n    if ( a4 )\n      sub_44DF10(a1, &v14, &v15);\n    else\n      sub_44D5D0(a1, &v14, &v15);\n    qword_88C238 = v5;\n    dword_88C22C = v6;\n    if ( a2 == 1 )\n    {\n      if ( v14 <= 0 )\n        return;\n      v7 = 0LL;\n      while ( !*(_BYTE *)(v4 + *(&v15 + v7)) )\n      {\n        if ( ++v7 >= v14 )\n          return;\n      }\n    }\n    if ( v14 > 0 )\n    {\n      v8 = v14 & 1;\n      if ( v14 == 1 )\n      {\n        v9 = 0LL;\n        if ( !(v14 & 1) )\n          return;\n        goto LABEL_22;\n      }\n      v10 = v14 - v8;\n      v9 = 0LL;\n      do\n      {\n        v11 = *(&v15 + v9);\n        if ( !*(_BYTE *)(v4 + v11) )\n          *(_BYTE *)(v4 + v11) = 2;\n        v12 = v16[v9];\n        if ( !*(_BYTE *)(v4 + v12) )\n          *(_BYTE *)(v4 + v12) = 2;\n        v9 += 2LL;\n      }\n      while ( v10 != v9 );\n      if ( v8 )\n      {\nLABEL_22:\n        v13 = *(&v15 + v9);\n        if ( !*(_BYTE *)(v4 + v13) )\n          *(_BYTE *)(v4 + v13) = 2;\n        return;\n      }\n    }\n  }\n}\n", 
            "funcStartAddr": "0x42e360L", 
            "funcEndAddr": "0x42e469L", 
            "funcName": "sub_42E360"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __usercall sub_42E540@<rax>(__int64 a1@<rax>, unsigned int a2@<edi>)\n{\n  unsigned int v2; // er15\n  int v3; // er12\n  signed __int64 v4; // rbx\n  signed __int64 result; // rax\n  __int64 v6; // rsi\n  const char *v7; // rdi\n  unsigned __int64 v8; // rbp\n  unsigned int v9; // er13\n  __int64 v10; // rdi\n  unsigned int *v11; // r14\n  int v12; // edx\n  int v13; // edx\n  int v14; // ecx\n  signed int v15; // edi\n  __int64 v16; // rsi\n  unsigned int v17; // edi\n  __int64 v18; // rsi\n  signed int v19; // edi\n  __int64 v20; // rsi\n  unsigned int *v21; // r14\n  signed int v22; // edi\n  __int64 v23; // rsi\n  unsigned int v24; // edi\n  signed int *v25; // rbp\n  __int64 v26; // rsi\n  signed __int64 v27; // rax\n  __int64 v28; // r8\n  char *v29; // r9\n  __int64 v30; // rdi\n  __int64 v31; // rsi\n  int v32; // ecx\n  __int64 v33; // rdx\n  int v34; // eax\n  bool v35; // zf\n  bool v36; // sf\n  unsigned __int8 v37; // of\n  int v38; // edx\n  __int64 v39; // rdi\n  __int64 v40; // rsi\n  __int64 v41; // rsi\n  __int64 v42; // rsi\n  __int64 v43; // rsi\n  __int64 v44; // rsi\n  __int64 v45; // [rsp-4h] [rbp-38h]\n\n  v45 = a1;\n  v2 = a2;\n  v3 = 3 - a2;\n  v4 = 21LL;\n  do\n  {\n    result = (unsigned __int8)byte_98A1B0[v4];\n    if ( !byte_98A1B0[v4] )\n      goto LABEL_87;\n    if ( (_BYTE)result == 3 )\n      goto LABEL_87;\n    v8 = 76 * v4;\n    if ( v4 != *((_DWORD *)&xmmword_954FB0 + 19 * v4 + 2) )\n      goto LABEL_87;\n    if ( dword_954FF0[v8 / 4] == 2 && (v9 = *(_DWORD *)((char *)&xmmword_954FD0 + v8)) != 0 )\n    {\n      if ( (_DWORD)result == v2 )\n      {\n        LODWORD(v10) = *(_DWORD *)((char *)&xmmword_954FE0 + v8);\n        if ( !(_DWORD)v10 )\n          goto LABEL_87;\n        v11 = (unsigned int *)((char *)&xmmword_954FE0 + v8);\n        v12 = *((_DWORD *)&xmmword_954FE0 + 19 * v4 + 1);\n        if ( v12 == 2 )\n        {\n          v13 = dword_954FF8[v8 / 4];\n          goto LABEL_76;\n        }\n        result = sub_4224A0(v10, v4, v12);\n        if ( !(dword_88C264 & 4) )\n          goto LABEL_87;\n        v44 = *v11;\n        v7 = \"owl: %1m defends %1m at move %d\\n\";\nLABEL_86:\n        result = sub_433F90((char)v7);\n        goto LABEL_87;\n      }\n      if ( *(float *)((char *)&xmmword_954FC0 + v8) >= 8.0 )\n        goto LABEL_57;\n      HIDWORD(v45) = 0;\n      v27 = 104LL * *((signed int *)&xmmword_954FB0 + 19 * v4 + 1);\n      v28 = *(signed int *)((char *)ptr + v27 + 44);\n      if ( v28 <= 0 )\n        goto LABEL_57;\n      v29 = (char *)ptr + v27 + 4;\n      v30 = 0LL;\n      v31 = 0LL;\n      v32 = 0;\n      do\n      {\n        v33 = *((signed int *)ptr + 26 * *(signed int *)&v29[4 * v30]);\n        if ( *((_DWORD *)&xmmword_954FB0 + 19 * v33) == v2 )\n        {\n          if ( dword_954FF0[19 * v33] == 1 )\n            goto LABEL_57;\n          v34 = *((_DWORD *)&xmmword_954FB0 + 19 * v33 + 3);\n          v37 = __OFSUB__(v34, v32);\n          v35 = v34 == v32;\n          v36 = v34 - v32 < 0;\n          if ( v34 >= v32 )\n            v32 = *((_DWORD *)&xmmword_954FB0 + 19 * v33 + 3);\n          if ( !((unsigned __int8)(v36 ^ v37) | v35) )\n            v31 = (unsigned int)v33;\n        }\n        ++v30;\n      }\n      while ( v30 < v28 );\n      if ( !(_DWORD)v31 || (unsigned int)sub_42EAE0(v9, v31, (char *)&v45 + 4) == 5 )\n      {\nLABEL_57:\n        v38 = *((_DWORD *)&xmmword_954FD0 + 19 * v4 + 1);\n        if ( v38 == 3 )\n        {\n          result = sub_421FC0(v9, v4, dword_954FF4[v8 / 4]);\n          if ( !(dword_88C264 & 4) )\n            goto LABEL_87;\n          v7 = \"owl: %1m attacks %1m with gain at move %d\\n\";\n        }\n        else\n        {\n          result = sub_422400(v9, v4, v38);\n          if ( !(dword_88C264 & 4) )\n            goto LABEL_87;\n          v7 = \"owl: %1m attacks %1m at move %d\\n\";\n        }\n        goto LABEL_86;\n      }\n      if ( dword_88C264 & 4 )\n        sub_433F90((unsigned __int64)\"owl: %1m attacks %1m at move %d, but the attacker dies.\\n\");\n      result = (signed __int64)ptr;\n      *((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * v4 + 1) + 15) = 5;\n    }\n    else\n    {\n      v14 = *((_DWORD *)&xmmword_954FC0 + 19 * v4 + 3);\n      if ( v14 == 1 )\n      {\n        if ( v3 == (_DWORD)result )\n        {\n          v21 = (unsigned int *)((char *)&xmmword_954FD0 + v8);\n          v22 = *(_DWORD *)((char *)&xmmword_954FD0 + v8);\n          if ( *((_DWORD *)&xmmword_954FC0 + 19 * v4 + 2) == 11 )\n          {\n            if ( v22 )\n            {\n              result = sub_422540(v22, v4);\n              if ( dword_88C264 & 4 )\n              {\n                v23 = *v21;\n                result = sub_433F90((unsigned __int64)\"owl: %1m threatens %1m at move %d\\n\");\n              }\n            }\n            v24 = *((_DWORD *)&xmmword_954FD0 + 19 * v4 + 3);\n            if ( v24 )\n            {\n              result = sub_407B30(v24, v2);\n              if ( (_DWORD)result )\n              {\n                v25 = (signed int *)(v8 + 9785308);\n                result = sub_422540(*v25, v4);\n                if ( dword_88C264 & 4 )\n                {\n                  v26 = (unsigned int)*v25;\n                  v7 = \"owl: %1m threatens %1m at move %d\\n\";\n                  goto LABEL_86;\n                }\n              }\n            }\n            goto LABEL_87;\n          }\n          if ( v22 && *((_DWORD *)&xmmword_954FD0 + 19 * v4 + 1) == 3 )\n          {\n            result = sub_421FC0(v22, v4, dword_954FF4[v8 / 4]);\n            if ( !(dword_88C264 & 4) )\n              goto LABEL_87;\n            v41 = *v21;\n            v7 = \"owl: %1m attacks %1m with gain at move %d\\n\";\n            goto LABEL_86;\n          }\n        }\n        if ( (_DWORD)result != v2 )\n          goto LABEL_87;\n        v11 = (unsigned int *)((char *)&xmmword_954FE0 + v8);\n        v10 = *(signed int *)((char *)&xmmword_954FE0 + v8);\n        if ( *(_DWORD *)((char *)&xmmword_954FE0 + v8) && *((_DWORD *)&xmmword_954FE0 + 19 * v4 + 1) == 2 )\n        {\n          v13 = dword_954FF8[v8 / 4];\nLABEL_76:\n          result = sub_4220D0(v10, v4, v13);\n          if ( !(dword_88C264 & 4) )\n            goto LABEL_87;\n          v42 = *v11;\n          v7 = \"owl: %1m defends %1m with loss at move %d\\n\";\n          goto LABEL_86;\n        }\n        if ( *(_DWORD *)((char *)&xmmword_954FD0 + v8)\n          && *((_DWORD *)&xmmword_954FD0 + 19 * v4 + 1) == 3\n          && *((_DWORD *)&xmmword_954FE0 + 19 * v4 + 1) == 5\n          && (_DWORD)v10 )\n        {\n          result = sub_4224A0(v10, v4, 5);\n          if ( !(dword_88C264 & 4) )\n            goto LABEL_87;\n          v43 = *v11;\n          v7 = \"owl: %1m defends %1m against possible loss at move %d\\n\";\n          goto LABEL_86;\n        }\n        if ( !*((_DWORD *)&xmmword_954FD0 + 19 * v4 + 2) )\n        {\n          if ( *((_DWORD *)&xmmword_954FE0 + 19 * v4 + 2) )\n          {\n            if ( byte_98A1B0[v10] != 3 )\n            {\n              result = sub_4225E0(v10, v4);\n              if ( dword_88C264 & 4 )\n              {\n                v6 = *v11;\n                v7 = \"owl: %1m defends the uncertain dragon at %1m at move %d\\n\";\n                goto LABEL_86;\n              }\n            }\n          }\n        }\n      }\n      else\n      {\n        if ( v14 )\n          goto LABEL_87;\n        if ( *((_DWORD *)&xmmword_954FC0 + 19 * v4 + 2) == 12 )\n        {\n          if ( (_DWORD)result == v2 )\n          {\n            v15 = *(_DWORD *)((char *)&xmmword_954FE0 + v8);\n            if ( v15 )\n            {\n              sub_4226E0(v15, v4);\n              if ( dword_88C264 & 4 )\n              {\n                v16 = *(unsigned int *)((char *)&xmmword_954FE0 + v8);\n                sub_433F90((unsigned __int64)\"owl: %1m threatens to defend %1m at move %d\\n\");\n              }\n            }\n          }\n          if ( (unsigned __int8)byte_98A1B0[v4] == v2 )\n          {\n            v17 = *((_DWORD *)&xmmword_954FE0 + 19 * v4 + 3);\n            if ( v17 )\n            {\n              if ( (unsigned int)sub_407B30(v17, v2) )\n              {\n                sub_4226E0(*((_DWORD *)&xmmword_954FE0 + 19 * v4 + 3), v4);\n                if ( dword_88C264 & 4 )\n                {\n                  v18 = *((unsigned int *)&xmmword_954FE0 + 19 * v4 + 3);\n                  sub_433F90((unsigned __int64)\"owl: %1m threatens to defend %1m at move %d\\n\");\n                }\n              }\n            }\n          }\n          result = (unsigned __int8)byte_98A1B0[v4];\n          if ( v3 == (_DWORD)result )\n          {\n            result = v8 + 9785288;\n            if ( *((_DWORD *)&xmmword_954FC0 + 19 * v4 + 2) == 12 )\n            {\n              v19 = *(_DWORD *)((char *)&xmmword_954FD0 + v8);\n              if ( v19 )\n              {\n                result = sub_4227A0(v19, v4);\n                if ( dword_88C264 & 4 )\n                {\n                  v20 = *(unsigned int *)((char *)&xmmword_954FD0 + v8);\n                  v7 = \"owl: %1m prevents a threat against %1m at move %d\\n\";\n                  goto LABEL_86;\n                }\n              }\n            }\n          }\n        }\n        else if ( v3 == (_DWORD)result && !*((_DWORD *)&xmmword_954FD0 + 19 * v4 + 2) )\n        {\n          v39 = *(signed int *)((char *)&xmmword_954FD0 + v8);\n          if ( byte_98A1B0[v39] != 3 )\n          {\n            result = sub_4225E0(v39, v4);\n            if ( dword_88C264 & 4 )\n            {\n              v40 = *(unsigned int *)((char *)&xmmword_954FD0 + v8);\n              v7 = \"owl: %1m might defend the uncertain dragon at %1m at move %d\\n\";\n              goto LABEL_86;\n            }\n          }\n        }\n      }\n    }\nLABEL_87:\n    ++v4;\n  }\n  while ( v4 != 400 );\n  return result;\n}\n", 
            "funcStartAddr": "0x42e540L", 
            "funcEndAddr": "0x42eae0L", 
            "funcName": "sub_42E540"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_42EAE0(__int64 a1, __int64 a2, __int64 a3)\n{\n  __int64 v3; // rbx\n  unsigned int v4; // er13\n  int v5; // ebp\n  unsigned int v6; // ebx\n  unsigned int v7; // er12\n  signed int v9; // er13\n  _DWORD *v10; // r12\n  signed __int64 v11; // rax\n  int v12; // er13\n  int v13; // eax\n  int v14; // ebp\n  __int64 v15; // ST20_8\n  int v16; // [rsp+14h] [rbp-64h]\n  int v17; // [rsp+24h] [rbp-54h]\n  _DWORD *v18; // [rsp+28h] [rbp-50h]\n  __int64 v19; // [rsp+30h] [rbp-48h]\n  __int64 v20; // [rsp+38h] [rbp-40h]\n  char *v21; // [rsp+40h] [rbp-38h]\n\n  v3 = a3;\n  v4 = (unsigned __int8)byte_98A1B0[(signed int)a2];\n  v16 = 0;\n  v5 = sub_43F970(a1);\n  v17 = 15;\n  if ( dword_88C264 & 0x1000 )\n    sub_493870(a1, a2);\n  if ( dword_8E94A8[95 * (signed int)a2] )\n  {\n    v19 = 0LL;\n    v18 = (_DWORD *)v3;\n    v20 = 76LL * (signed int)a2;\n    v6 = *((_DWORD *)&xmmword_954FB0 + 19 * (signed int)a2 + 2);\n    if ( dword_88C268 )\n      sub_433F90((unsigned __int64)\"owl_does_defend %1m %1m(%1m)\\n\");\n    v7 = 0;\n    if ( !(unsigned int)sub_459050(4LL, (unsigned int)a1) )\n    {\n      if ( !(unsigned int)sub_406880((unsigned int)a1, v4, \"owl_does_defend\", a2, 0, 0) )\n        return v7;\n      v9 = 0;\n      v10 = v18;\n      if ( (unsigned int)sub_459050(0LL, v6) )\n      {\n        sub_407030();\n        return 5;\n      }\n      sub_4287E0((__int64 *)&v21, a2, 0, a1, 1);\n      if ( v18 )\n      {\n        v11 = 60LL * *(signed int *)(v20 + 9785268);\n        *(_OWORD *)(v11 + 8879644) = *(__int128 *)((char *)&xmmword_877C10 + 12);\n        *(__int128 *)((char *)&xmmword_877E10 + v11) = xmmword_877C10;\n        *(__int128 *)((char *)&xmmword_877E00 + v11) = xmmword_877C00;\n        *(__int128 *)((char *)&xmmword_877DF0 + v11) = xmmword_877BF0;\n        v9 = 1;\n      }\n      dword_877C2C = v9;\n      v12 = 0;\n      v13 = sub_42AF00(a2, 0LL, &v17, v21, 0, 0);\n      dword_877C2C = 0;\n      if ( v17 != 15LL )\n        v12 = *((_DWORD *)&xmmword_877BF0 + v17);\n      v16 = 5 - v13;\n      sub_407030();\n      v14 = (unsigned __int64)sub_43F970((unsigned int)a2) - v5;\n      if ( dword_88C264 & 0x1000 )\n      {\n        sub_493870((unsigned int)a2, 0LL);\n        v10 = v18;\n        sub_433F90((unsigned __int64)\"owl_does_defend %1m %1m(%1m), result %d (%d, %d nodes, %f seconds)\\n\");\n      }\n      v15 = (unsigned __int8)byte_98A1B0[(signed int)a2];\n      sub_459230(4, a1, a2, 0, v16, v12, 0LL, 0);\n      if ( v10 )\n        *v10 = v12;\n    }\n    v7 = v16;\n  }\n  else\n  {\n    v7 = 0;\n  }\n  return v7;\n}\n", 
            "funcStartAddr": "0x42eae0L", 
            "funcEndAddr": "0x42ed97L", 
            "funcName": "sub_42EAE0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_42EDA0(__int64 a1, __int64 a2, _DWORD *a3, __int64 a4)\n{\n  __int64 v4; // rbx\n  _DWORD *v5; // rbp\n  unsigned int v6; // er13\n  unsigned int v7; // ebp\n  unsigned int v8; // er12\n  signed int v10; // er12\n  signed __int64 v12; // rax\n  __int64 v13; // rbp\n  int v14; // eax\n  _DWORD *v15; // r12\n  int v16; // er13\n  __int64 v17; // ST20_8\n  int v18; // ebx\n  signed int v19; // [rsp+4h] [rbp-74h]\n  int v20; // [rsp+8h] [rbp-70h]\n  unsigned int v21; // [rsp+Ch] [rbp-6Ch]\n  int v22; // [rsp+10h] [rbp-68h]\n  int v23; // [rsp+14h] [rbp-64h]\n  _DWORD *v24; // [rsp+18h] [rbp-60h]\n  __int64 v25; // [rsp+20h] [rbp-58h]\n  _DWORD *v26; // [rsp+28h] [rbp-50h]\n  char *v27; // [rsp+30h] [rbp-48h]\n  __int64 v28; // [rsp+38h] [rbp-40h]\n  char *v29; // [rsp+40h] [rbp-38h]\n\n  v4 = a4;\n  v5 = a3;\n  v6 = (unsigned __int8)byte_98A1B0[(signed int)a2];\n  v19 = 0;\n  v22 = sub_43F970(a1);\n  v20 = 0;\n  v23 = 15;\n  if ( dword_88C264 & 0x1000 )\n    sub_493870(a1, a2);\n  if ( dword_8E94A8[95 * (signed int)a2] )\n  {\n    v28 = 0LL;\n    v26 = v5;\n    v24 = (_DWORD *)v4;\n    v25 = 76LL * (signed int)a2;\n    v7 = *((_DWORD *)&xmmword_954FB0 + 19 * (signed int)a2 + 2);\n    if ( dword_88C268 )\n      sub_433F90((unsigned __int64)\"owl_confirm_safety %1m %1m(%1m)\\n\");\n    v8 = 0;\n    if ( !(unsigned int)sub_459050(8LL, (unsigned int)a1) )\n    {\n      v21 = a1;\n      if ( !(unsigned int)sub_406880((unsigned int)a1, v6, \"owl_confirm_safety\", a2, 0, 0) )\n        return v8;\n      v10 = 0;\n      if ( (unsigned int)sub_459050(0LL, v7) )\n      {\n        sub_407030();\n        return 5;\n      }\n      sub_4287E0((__int64 *)&v29, a2, 0, v21, 1);\n      if ( v24 )\n      {\n        v12 = 60LL * *(signed int *)(v25 + 9785268);\n        *(_OWORD *)(v12 + 8879644) = *(__int128 *)((char *)&xmmword_877C10 + 12);\n        *(__int128 *)((char *)&xmmword_877E10 + v12) = xmmword_877C10;\n        *(__int128 *)((char *)&xmmword_877E00 + v12) = xmmword_877C00;\n        *(__int128 *)((char *)&xmmword_877DF0 + v12) = xmmword_877BF0;\n        v10 = 1;\n      }\n      dword_877C2C = v10;\n      v13 = 0LL;\n      v27 = v29;\n      v14 = sub_42AF00(a2, &v20, &v23, v29, 0, 0);\n      dword_877C2C = 0;\n      if ( v23 != 15LL )\n        v13 = *((unsigned int *)&xmmword_877BF0 + v23);\n      v15 = v24;\n      v25 = v13;\n      if ( v14 == 3 )\n      {\n        v19 = 2;\n      }\n      else if ( !v14 )\n      {\n        v19 = 5;\n      }\n      sub_407030();\n      v16 = (unsigned __int64)sub_43F970((unsigned int)a2) - v22;\n      if ( dword_88C264 & 0x1000 )\n      {\n        v22 = v19;\n        sub_493870((unsigned int)a2, &v20);\n        v15 = v24;\n        sub_433F90((unsigned __int64)\"owl_confirm_safety %1m %1m(%1m), result %d %1m (%d, %d nodes, %f seconds)\\n\");\n      }\n      v17 = (unsigned __int8)byte_98A1B0[(signed int)a2];\n      v18 = v25;\n      sub_459230(8, v21, a2, 0, v19, v20, v25, 0);\n      if ( v26 )\n        *v26 = v20;\n      if ( v15 )\n        *v15 = v18;\n    }\n    v8 = v19;\n  }\n  else\n  {\n    v8 = 0;\n  }\n  return v8;\n}\n", 
            "funcStartAddr": "0x42eda0L", 
            "funcEndAddr": "0x42f0aaL", 
            "funcName": "sub_42EDA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_42F0B0(__int64 a1, __int64 a2, _DWORD *a3)\n{\n  _DWORD *v3; // r15\n  unsigned int v4; // er13\n  int v5; // ebp\n  __int64 v6; // r12\n  int v7; // er14\n  unsigned int v8; // ebx\n  unsigned int v9; // ebx\n  __int64 v11; // rsi\n  int v12; // er14\n  __int64 v13; // rbx\n  __int64 v14; // rsi\n  signed int v15; // eax\n  signed __int64 v16; // rax\n  int v17; // eax\n  __int64 v18; // rdx\n  int v19; // ecx\n  int v20; // ebp\n  __int64 v21; // ST20_8\n  int v22; // [rsp+1Ch] [rbp-6Ch]\n  unsigned int v23; // [rsp+20h] [rbp-68h]\n  int v24; // [rsp+24h] [rbp-64h]\n  __int64 v25; // [rsp+28h] [rbp-60h]\n  __int64 v26; // [rsp+30h] [rbp-58h]\n  int v27; // [rsp+3Ch] [rbp-4Ch]\n  _DWORD *v28; // [rsp+40h] [rbp-48h]\n  __int64 v29; // [rsp+48h] [rbp-40h]\n  __int64 v30; // [rsp+50h] [rbp-38h]\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a1;\n  v6 = (signed int)a2;\n  v7 = (unsigned __int8)byte_98A1B0[(signed int)a2];\n  v22 = 0;\n  LODWORD(v26) = sub_43F970(a1);\n  v24 = 15;\n  if ( dword_88C264 & 0x1000 )\n    sub_493870(a1, a2);\n  v8 = 0;\n  if ( dword_8E94A8[95 * (signed int)a2] != 1 )\n  {\n    v29 = 0LL;\n    v25 = 76LL * (signed int)a2;\n    v9 = *((_DWORD *)&xmmword_954FB0 + 19 * (signed int)a2 + 2);\n    if ( dword_88C268 )\n      sub_433F90((unsigned __int64)\"owl_does_attack %1m %1m(%1m)\\n\");\n    v23 = v9;\n    v8 = 0;\n    if ( !(unsigned int)sub_459050(5LL, (unsigned int)a1) )\n    {\n      v28 = v3;\n      sub_4287E0(&v30, a2, 0, 0, 1);\n      v11 = (unsigned int)(3 - v7);\n      v12 = a1;\n      if ( !(unsigned int)sub_406880((unsigned int)a1, v11, \"owl_does_attack\", v4, 0, 0) )\n        return v8;\n      if ( (unsigned int)sub_459050(1LL, v23) )\n      {\n        sub_407030();\n        return 5;\n      }\n      v13 = v30;\n      a1 = (unsigned int)a1;\n      v14 = v30;\n      sub_42CAD0(a1, v30);\n      if ( byte_98A1B0[v6] )\n      {\n        v15 = 0;\n        if ( v3 )\n        {\n          v16 = 60LL * *(signed int *)(v25 + 9785268);\n          *(_OWORD *)(v16 + 8879644) = *(__int128 *)((char *)&xmmword_877C10 + 12);\n          *(__int128 *)((char *)&xmmword_877E10 + v16) = xmmword_877C10;\n          *(__int128 *)((char *)&xmmword_877E00 + v16) = xmmword_877C00;\n          *(__int128 *)((char *)&xmmword_877DF0 + v16) = xmmword_877BF0;\n          v15 = 1;\n        }\n        dword_877C2C = v15;\n        v14 = 0LL;\n        a1 = v4;\n        v17 = sub_42D0B0(v4, 0LL, &v24, (char *)v13, 0, 0, 0);\n        dword_877C2C = 0;\n        v18 = 0LL;\n        if ( v24 != 15LL )\n          v18 = *((unsigned int *)&xmmword_877BF0 + v24);\n        v25 = v18;\n        v19 = 5 - v17;\n      }\n      else\n      {\n        v25 = 0LL;\n        v19 = 5;\n      }\n      v22 = v19;\n      *(_DWORD *)(v13 + 35404) = 0;\n      sub_407030();\n      sub_43F970(a1);\n      if ( dword_88C264 & 0x1000 )\n      {\n        v27 = dword_877BE0;\n        v26 = v13;\n        sub_493870(a1, v14);\n        v12 = v5;\n        v3 = v28;\n        sub_433F90((unsigned __int64)\"owl_does_attack %1m %1m(%1m), result %d (%d, %d nodes, %f seconds)\\n\");\n      }\n      v20 = v25;\n      v21 = (unsigned __int8)byte_98A1B0[v6];\n      sub_459230(5, v12, v4, 0, v22, v25, 0LL, 0);\n      if ( v3 )\n        *v3 = v20;\n    }\n    v8 = v22;\n  }\n  return v8;\n}\n", 
            "funcStartAddr": "0x42f0b0L", 
            "funcEndAddr": "0x42f3b7L", 
            "funcName": "sub_42F0B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_42F3C0(__int64 a1, __int64 a2, signed int a3)\n{\n  signed int v3; // er13\n  unsigned int v4; // ebp\n  unsigned int v5; // er15\n  __int64 result; // rax\n  __int64 v7; // rsi\n  __int64 v8; // rbx\n  __int64 v9; // r12\n  int v10; // ST38_4\n  __int64 v11; // rcx\n  __int64 v12; // rcx\n  __int64 v13; // rdx\n  __int64 v14; // rax\n  __int64 v15; // rsi\n  __int64 v16; // rsi\n  __int64 v17; // rax\n  int v18; // ebx\n  unsigned int v19; // [rsp+30h] [rbp-5F8h]\n  int v20; // [rsp+34h] [rbp-5F4h]\n  int v21; // [rsp+3Ch] [rbp-5ECh]\n  __int64 v22; // [rsp+40h] [rbp-5E8h]\n  __int64 v23; // [rsp+48h] [rbp-5E0h]\n  int v24; // [rsp+50h] [rbp-5D8h]\n  int v25[373]; // [rsp+54h] [rbp-5D4h]\n\n  v3 = a3;\n  v4 = a2;\n  v5 = (unsigned __int8)byte_98A1B0[(signed int)a2];\n  v19 = 0;\n  v20 = sub_43F970(a1);\n  v22 = 0LL;\n  if ( dword_88C264 & 0x1000 )\n  {\n    sub_493870(a1, a2);\n    v22 = 0LL;\n  }\n  if ( byte_98A1B0[v3] != (_BYTE)v5 )\n    sub_4340E0(\"engine/owl.c\", 4006LL, \"board[target2] == color\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  if ( dword_88C268 )\n    sub_433F90((unsigned __int64)\"owl_connection_defends %1m %1m %1m\\n\");\n  result = 0LL;\n  if ( dword_8E94A8[95 * (signed int)a2] && dword_8E94A8[95 * v3] )\n  {\n    if ( (unsigned int)sub_459050(6LL, (unsigned int)a1) )\n      return v19;\n    sub_4287E0(&v23, a2, v3, 0, 1);\n    a1 = (unsigned int)a1;\n    v7 = v5;\n    if ( !(unsigned int)sub_406880((unsigned int)a1, v5, \"owl_connection_defends\", v4, 0, 0) )\n    {\nLABEL_31:\n      v18 = (unsigned __int64)sub_43F970(a1) - v20;\n      if ( dword_88C264 & 0x1000 )\n      {\n        sub_493870(a1, v7);\n        sub_433F90((unsigned __int64)\"owl_conn_defends %1m %1m %1m, result %d (%d, %d nodes, %f seconds)\\n\");\n      }\n      sub_459230(6, a1, v4, v3, v19, 0, 0LL, 0);\n      return v19;\n    }\n    v8 = v23;\n    v9 = qword_88C238;\n    v10 = dword_88C22C;\n    qword_88C238 = 0LL;\n    dword_88C22C = 0;\n    sub_44D5D0((unsigned int)a1, &v21, &v24);\n    qword_88C238 = v9;\n    dword_88C22C = v10;\n    if ( v21 > 0LL )\n    {\n      v11 = 0LL;\n      while ( !*(_BYTE *)(v8 + *(&v24 + v11)) )\n      {\n        if ( ++v11 >= v21 )\n          goto LABEL_28;\n      }\n      v12 = v21 & 1;\n      if ( v21 == 1 )\n      {\n        v13 = 0LL;\n        if ( !(v21 & 1) )\n          goto LABEL_28;\n      }\n      else\n      {\n        v14 = v21 - v12;\n        v13 = 0LL;\n        do\n        {\n          v15 = *(&v24 + v13);\n          if ( !*(_BYTE *)(v8 + v15) )\n            *(_BYTE *)(v8 + v15) = 2;\n          v16 = v25[v13];\n          if ( !*(_BYTE *)(v8 + v16) )\n            *(_BYTE *)(v8 + v16) = 2;\n          v13 += 2LL;\n        }\n        while ( v14 != v13 );\n        if ( !v12 )\n          goto LABEL_28;\n      }\n      v17 = *(&v24 + v13);\n      if ( !*(_BYTE *)(v8 + v17) )\n        *(_BYTE *)(v8 + v17) = 2;\n    }\nLABEL_28:\n    v7 = 0LL;\n    a1 = (unsigned int)a1;\n    if ( !(unsigned int)sub_42AF00(a1, 0LL, 0LL, (char *)v8, 0, 0) )\n      v19 = 5;\n    *(_DWORD *)(v8 + 35404) = 0;\n    sub_407030();\n    goto LABEL_31;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x42f3c0L", 
            "funcEndAddr": "0x42f691L", 
            "funcName": "sub_42F3C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_42F6A0(int a1)\n{\n  char v1; // al\n  int v2; // edx\n  int v3; // eax\n  _BOOL4 v4; // ecx\n\n  if ( (unsigned int)a1 > 0x1A4 || (v1 = byte_98A1B0[a1], v1 == 3) )\n  {\n    v2 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/owl.c\", 4390LL, \"ON_BOARD1(pos)\", (unsigned int)(v2 - 1), (unsigned int)(a1 - 20 * v2 - 1));\n  }\n  if ( !v1 )\n    goto LABEL_52;\n  v3 = sub_40AD00(a1);\n  if ( qword_877C40 )\n  {\n    v4 = 1;\n    if ( *(_BYTE *)(qword_877C40 + a1) )\n      return (unsigned int)v4;\n    if ( *(_DWORD *)(qword_877C40 + 34804) == v3 && !*(_DWORD *)(qword_877C40 + 34964)\n      || *(_DWORD *)(qword_877C40 + 34808) == v3 && !*(_DWORD *)(qword_877C40 + 34968)\n      || *(_DWORD *)(qword_877C40 + 34812) == v3 && !*(_DWORD *)(qword_877C40 + 34972)\n      || *(_DWORD *)(qword_877C40 + 34816) == v3 && !*(_DWORD *)(qword_877C40 + 34976)\n      || *(_DWORD *)(qword_877C40 + 34820) == v3 && !*(_DWORD *)(qword_877C40 + 34980)\n      || *(_DWORD *)(qword_877C40 + 34824) == v3 && !*(_DWORD *)(qword_877C40 + 34984)\n      || *(_DWORD *)(qword_877C40 + 34828) == v3 && !*(_DWORD *)(qword_877C40 + 34988)\n      || *(_DWORD *)(qword_877C40 + 34832) == v3 && !*(_DWORD *)(qword_877C40 + 34992)\n      || *(_DWORD *)(qword_877C40 + 34836) == v3 && !*(_DWORD *)(qword_877C40 + 34996)\n      || *(_DWORD *)(qword_877C40 + 34840) == v3 && !*(_DWORD *)(qword_877C40 + 35000) )\n    {\n      goto LABEL_52;\n    }\n  }\n  if ( *(_DWORD *)(qword_877C30 + 34804) == v3 && !*(_DWORD *)(qword_877C30 + 34964)\n    || *(_DWORD *)(qword_877C30 + 34808) == v3 && !*(_DWORD *)(qword_877C30 + 34968)\n    || *(_DWORD *)(qword_877C30 + 34812) == v3 && !*(_DWORD *)(qword_877C30 + 34972)\n    || *(_DWORD *)(qword_877C30 + 34816) == v3 && !*(_DWORD *)(qword_877C30 + 34976)\n    || *(_DWORD *)(qword_877C30 + 34820) == v3 && !*(_DWORD *)(qword_877C30 + 34980)\n    || *(_DWORD *)(qword_877C30 + 34824) == v3 && !*(_DWORD *)(qword_877C30 + 34984)\n    || *(_DWORD *)(qword_877C30 + 34828) == v3 && !*(_DWORD *)(qword_877C30 + 34988)\n    || *(_DWORD *)(qword_877C30 + 34832) == v3 && !*(_DWORD *)(qword_877C30 + 34992)\n    || *(_DWORD *)(qword_877C30 + 34836) == v3 && !*(_DWORD *)(qword_877C30 + 34996) )\n  {\nLABEL_52:\n    return 0;\n  }\n  if ( *(_DWORD *)(qword_877C30 + 34840) != v3 || (v4 = 0, *(_DWORD *)(qword_877C30 + 35000)) )\n    v4 = *(_BYTE *)(qword_877C30 + v3 + 35004) == 0;\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x42f6a0L", 
            "funcEndAddr": "0x42f8e2L", 
            "funcName": "sub_42F6A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_42F8F0(__int64 a1)\n{\n  int v1; // eax\n  _DWORD *v2; // rbp\n  unsigned int v3; // ebx\n  int v4; // edx\n  unsigned int v5; // eax\n  signed __int64 v6; // rcx\n  signed __int64 v7; // rbx\n  int v8; // eax\n  __int64 v9; // rbx\n  int v10; // eax\n  unsigned int v11; // er14\n  signed __int64 v12; // r15\n  signed __int64 v13; // r13\n  signed __int64 v14; // rbx\n  __int64 v15; // rdi\n  __int64 v16; // rsi\n  __int64 v17; // rdi\n  int v18; // ebx\n  int v19; // er15\n  __int64 v20; // ST20_8\n  int v22; // [rsp+10h] [rbp-308h]\n  int v23; // [rsp+14h] [rbp-304h]\n  signed int v24; // [rsp+18h] [rbp-300h]\n  __int64 v25; // [rsp+28h] [rbp-2F0h]\n  unsigned int v26; // [rsp+30h] [rbp-2E8h]\n  int v27[11]; // [rsp+34h] [rbp-2E4h]\n  int v28[174]; // [rsp+60h] [rbp-2B8h]\n\n  v24 = sub_408410(a1, 11, (unsigned __int64)&v26);\n  v23 = sub_43F970(a1);\n  if ( dword_88C264 & 0x1000 )\n    sub_493870(a1, 11LL);\n  if ( !dword_877DE4 )\n  {\n    v1 = 28;\n    if ( dword_98A7EC > 26 )\n      v1 = dword_98A7EC + 2;\n    if ( !dword_565C7C )\n      v1 = dword_98A7EC + 2;\n    dword_877DE4 = v1;\n    qword_877DE8 = malloc(35816LL * v1);\n    if ( !qword_877DE8 )\n      sub_4340E0(\"engine/owl.c\", 4991LL, \"owl_stack != ((void*)0)\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  }\n  dword_877DE0 = 0;\n  v2 = qword_877DE8;\n  *((_DWORD *)qword_877DE8 + 8953) = 0;\n  v2[300] = 3 - (unsigned __int8)byte_98A1B0[(signed int)a1];\n  dword_877BE0 = 0;\n  if ( dword_98A7F4 )\n    sub_4340E0(\"engine/owl.c\", 4484LL, \"stackp == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  v3 = 1;\n  if ( (signed int)sub_40A5F0(a1) <= 6 )\n  {\n    v22 = a1;\n    v3 = 0;\n    if ( v24 <= 10 )\n    {\n      v4 = dword_565C68;\n      if ( dword_565C68 > 0 )\n      {\n        v5 = 21;\n        v6 = 0LL;\n        do\n        {\n          if ( v4 > 0 )\n          {\n            v7 = 0LL;\n            do\n            {\n              *((_BYTE *)v2 + v5 + v7++) = 0;\n              v4 = dword_565C68;\n            }\n            while ( v7 < dword_565C68 );\n          }\n          ++v6;\n          v5 += 20;\n        }\n        while ( v6 < v4 );\n      }\n      v8 = sub_40A7D0(a1, (__int64)v28);\n      if ( v8 <= 0 )\n      {\nLABEL_32:\n        if ( (unsigned int)sub_459050(7LL, (unsigned int)a1) )\n        {\n          v3 = v28[0];\n        }\n        else if ( v24 <= 0 )\n        {\nLABEL_47:\n          sub_42FD50(v2);\n          sub_42FED0(v2);\n          v2[8851] = 0;\n          v17 = v26;\n          v28[0] = (unsigned __int64)sub_42AF00(v26, 0LL, 0LL, (char *)v2, 0, 0) == 0;\n          v18 = v22;\n          while ( dword_98A7F4 > 0 )\n          {\n            if ( dword_565C78 >= 10 )\n              sub_44B060(v17, 0LL);\n            sub_407030();\n          }\n          v19 = (unsigned __int64)sub_43F970(v17) - v23;\n          if ( dword_88C264 & 0x1000 )\n          {\n            sub_493870(v17, 0LL);\n            v18 = v22;\n            sub_433F90((unsigned __int64)\"owl_substantial %1m, result %d (%d, %d nodes, %f seconds)\\n\");\n          }\n          v20 = (unsigned int)v2[300];\n          sub_459230(7, v18, 0, 0, v28[0], 0, 0LL, 0);\n          v3 = v28[0];\n        }\n        else\n        {\n          v14 = 0LL;\n          while ( 1 )\n          {\n            while ( 1 )\n            {\n              v15 = *(&v26 + v14);\n              v16 = (unsigned int)v2[300];\n              if ( !(unsigned int)sub_406880(v15, v16, 0LL, 0, 0, 0) )\n                break;\n              if ( dword_565C78 >= 10 )\n                sub_44B020(v15, v16);\n              *((_BYTE *)v2 + (signed int)*(&v26 + v14++)) = 1;\n              if ( v14 >= v24 )\n                goto LABEL_47;\n            }\n            if ( v14 >= v24 - 1 )\n              break;\n            v15 = (unsigned int)v27[v14];\n            v16 = (unsigned int)v2[300];\n            if ( !(unsigned int)sub_406880(v15, v16, 0LL, 0, 0, 0) )\n              break;\n            if ( dword_565C78 >= 10 )\n              sub_44B020(v15, v16);\n            *((_BYTE *)v2 + (signed int)*(&v26 + v14)) = 1;\n            v27[v14] = *(&v26 + v14);\n            if ( ++v14 >= v24 )\n              goto LABEL_47;\n          }\n          v3 = 0;\n          while ( dword_98A7F4 > 0 )\n          {\n            if ( dword_565C78 >= 10 )\n              sub_44B060(v15, v16);\n            sub_407030();\n          }\n        }\n      }\n      else\n      {\n        v25 = v8;\n        v9 = 0LL;\n        while ( dword_954FF0[19 * v28[v9]] != 1 )\n        {\n          v10 = dword_565C68;\n          if ( dword_565C68 > 0 )\n          {\n            v11 = 21;\n            v12 = 0LL;\n            do\n            {\n              if ( v10 > 0 )\n              {\n                v13 = 0LL;\n                do\n                {\n                  if ( (unsigned int)sub_414710(v11 + (unsigned int)v13, v28[v9]) )\n                    *((_BYTE *)v2 + v11 + v13) = 1;\n                  ++v13;\n                  v10 = dword_565C68;\n                }\n                while ( v13 < dword_565C68 );\n              }\n              ++v12;\n              v11 += 20;\n            }\n            while ( v12 < v10 );\n          }\n          if ( ++v9 >= v25 )\n            goto LABEL_32;\n        }\n        v3 = 1;\n      }\n    }\n  }\n  return v3;\n}\n", 
            "funcStartAddr": "0x42f8f0L", 
            "funcEndAddr": "0x42fd42L", 
            "funcName": "sub_42F8F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_42FD50(__int64 a1)\n{\n  __int64 result; // rax\n  unsigned int v2; // er15\n  signed __int64 v3; // r12\n  signed __int64 v4; // rbp\n  _DWORD *v5; // rbx\n  signed __int64 v6; // r14\n  int v7; // ecx\n  signed __int64 v8; // rdx\n  __int64 v9; // rsi\n  char v10; // [rsp+10h] [rbp-1C8h]\n\n  sub_456770((unsigned int)(3 - *(_DWORD *)(a1 + 1200)), &v10);\n  sub_41C6A0(*(_DWORD *)(a1 + 1200), &v10, 0LL, a1 + 800);\n  if ( dword_88C264 & 8 )\n    sub_433F90((unsigned __int64)\"Owl escape values:\\n\");\n  result = (unsigned int)dword_565C68;\n  if ( dword_565C68 > 0 )\n  {\n    v2 = 21;\n    v3 = 0LL;\n    while ( (signed int)result <= 0 )\n    {\nLABEL_18:\n      if ( dword_88C264 & 8 )\n      {\n        sub_433F90((unsigned __int64)\"%o\\n\");\n        result = (unsigned int)dword_565C68;\n      }\n      ++v3;\n      v2 += 20;\n      if ( v3 >= (signed int)result )\n        return result;\n    }\n    v4 = a1 + 800 + v2;\n    v5 = (_DWORD *)((char *)&xmmword_954FB0 + 76 * v2);\n    v6 = 0LL;\n    while ( 1 )\n    {\n      if ( *v5 == *(_DWORD *)(a1 + 1200) )\n      {\n        v7 = v5[5];\n        if ( v7 == 3 )\n        {\n          v8 = 104LL * (signed int)v5[1];\n          if ( *(_DWORD *)((char *)ptr + v8 + 72) > 5 || *(_DWORD *)((char *)ptr + v8 + 52) >= 6 )\n            *(_BYTE *)(v4 + v6) = 4;\n        }\n        else if ( v7 == 1 )\n        {\n          *(_BYTE *)(v4 + v6) = 6;\n          if ( !(dword_88C264 & 8) )\n            goto LABEL_17;\nLABEL_16:\n          v9 = (unsigned int)*(char *)(v4 + v6);\n          sub_433F90((unsigned __int64)\"%o%d\");\n          result = (unsigned int)dword_565C68;\n          goto LABEL_17;\n        }\n      }\n      if ( dword_88C264 & 8 )\n        goto LABEL_16;\nLABEL_17:\n      ++v6;\n      v5 += 19;\n      if ( v6 >= (signed int)result )\n        goto LABEL_18;\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x42fd50L", 
            "funcEndAddr": "0x42fec6L", 
            "funcName": "sub_42FD50"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_42FED0(__int64 a1)\n{\n  __int64 v1; // r13\n  int v2; // er15\n  __int64 v3; // r14\n  __int64 v4; // rbp\n  __int64 v5; // rax\n  __int64 v6; // rax\n  __int64 v7; // rax\n  __int64 v8; // rax\n  __int64 v9; // rax\n  __int64 v10; // rax\n  __int64 v11; // rax\n  __int64 v12; // rax\n  __int64 v13; // rbp\n  int v14; // eax\n  signed __int64 v15; // rdi\n  signed __int64 v16; // rdi\n  signed __int64 v17; // rdi\n  signed __int64 v18; // rdi\n  signed __int64 result; // rax\n  __int64 v20; // rdx\n  __int64 v21; // r8\n  __int64 v22; // rbp\n  __int64 v23; // rbx\n\n  v1 = a1;\n  v2 = 3 - *(_DWORD *)(a1 + 1200);\n  v3 = a1 + 400;\n  v4 = 0LL;\n  memset((void *)(a1 + 400), 0, 0x190uLL);\n  do\n  {\n    if ( v2 == (unsigned __int8)byte_98A1C5[v4] && !*(_BYTE *)(a1 + v4 + 421) )\n    {\n      v5 = dword_5641B0[0] + (signed int)v4 + 21;\n      if ( byte_98A1B0[v5] != 3 )\n      {\n        if ( *(_BYTE *)(a1 + v5) )\n          goto LABEL_68;\n      }\n      if ( (v6 = dword_5641B4 + (signed int)v4 + 21, byte_98A1B0[v6] != 3) && *(_BYTE *)(a1 + v6)\n        || (v7 = dword_5641B8 + (signed int)v4 + 21, byte_98A1B0[v7] != 3) && *(_BYTE *)(a1 + v7)\n        || (v8 = dword_5641BC + (signed int)v4 + 21, byte_98A1B0[v8] != 3) && *(_BYTE *)(a1 + v8)\n        || (v9 = dword_5641C0[0] + (signed int)v4 + 21, byte_98A1B0[v9] != 3) && *(_BYTE *)(a1 + v9)\n        || (v10 = dword_5641C4 + (signed int)v4 + 21, byte_98A1B0[v10] != 3) && *(_BYTE *)(a1 + v10)\n        || (v11 = dword_5641C8 + (signed int)v4 + 21, byte_98A1B0[v11] != 3) && *(_BYTE *)(a1 + v11)\n        || (v12 = dword_5641CC + (signed int)v4 + 21, byte_98A1B0[v12] != 3) && *(_BYTE *)(a1 + v12) )\n      {\nLABEL_68:\n        sub_40BAB0(v4 + 21, v3, 1);\n      }\n    }\n    ++v4;\n  }\n  while ( v4 != 379 );\n  v13 = 0LL;\n  do\n  {\n    if ( v2 == (unsigned __int8)byte_98A1C5[v13] && *(_BYTE *)(v1 + v13 + 421) == 1 )\n    {\n      v15 = (unsigned int)dword_5641B0[0] + v13 + 21;\n      v14 = *(_DWORD *)(v1 + 1200);\n      if ( v14 == (unsigned __int8)byte_98A1B0[(signed int)v15] )\n      {\n        if ( *(_BYTE *)(v1 + (signed int)v15) )\n        {\n          v14 = (unsigned __int8)byte_98A1B0[(signed int)v15];\n        }\n        else\n        {\n          v14 = (unsigned __int8)byte_98A1B0[(signed int)v15];\n          if ( *((_DWORD *)&xmmword_954FC0 + 19 * (signed int)v15 + 1) )\n          {\n            if ( (signed int)sub_40A5F0(v15) > 2 || *((_DWORD *)&xmmword_954FC0 + 19 * (signed int)v15 + 1) == 1 )\n            {\nLABEL_50:\n              sub_40BAB0(v13 + 21, v3, 2);\n              goto LABEL_51;\n            }\n            v14 = *(_DWORD *)(v1 + 1200);\n          }\n        }\n      }\n      v16 = (unsigned int)dword_5641B4 + v13 + 21;\n      if ( v14 == (unsigned __int8)byte_98A1B0[(signed int)v16]\n        && !*(_BYTE *)(v1 + (signed int)v16)\n        && *((_DWORD *)&xmmword_954FC0 + 19 * (signed int)v16 + 1) )\n      {\n        if ( (signed int)sub_40A5F0(v16) > 2 || *((_DWORD *)&xmmword_954FC0 + 19 * (signed int)v16 + 1) == 1 )\n          goto LABEL_50;\n        v14 = *(_DWORD *)(v1 + 1200);\n      }\n      v17 = (unsigned int)dword_5641B8 + v13 + 21;\n      if ( v14 == (unsigned __int8)byte_98A1B0[(signed int)v17]\n        && !*(_BYTE *)(v1 + (signed int)v17)\n        && *((_DWORD *)&xmmword_954FC0 + 19 * (signed int)v17 + 1) )\n      {\n        if ( (signed int)sub_40A5F0(v17) > 2 || *((_DWORD *)&xmmword_954FC0 + 19 * (signed int)v17 + 1) == 1 )\n          goto LABEL_50;\n        v14 = *(_DWORD *)(v1 + 1200);\n      }\n      v18 = (unsigned int)dword_5641BC + v13 + 21;\n      if ( v14 == (unsigned __int8)byte_98A1B0[(signed int)v18]\n        && !*(_BYTE *)(v1 + (signed int)v18)\n        && *((_DWORD *)&xmmword_954FC0 + 19 * (signed int)v18 + 1)\n        && ((signed int)sub_40A5F0(v18) > 2 || *((_DWORD *)&xmmword_954FC0 + 19 * (signed int)v18 + 1) == 1) )\n      {\n        goto LABEL_50;\n      }\n    }\nLABEL_51:\n    ++v13;\n  }\n  while ( v13 != 379 );\n  result = 21LL;\n  do\n  {\n    if ( v2 == (unsigned __int8)byte_98A1B0[result]\n      && !*(_BYTE *)(v1 + result + 400)\n      && (!dword_8E94D4[95 * result] || dword_8E9474[95 * result] == *((_DWORD *)&xmmword_954FB0 + 19 * result + 3)) )\n    {\n      v20 = *((signed int *)&xmmword_954FB0 + 19 * result + 1);\n      if ( v20 != -1 )\n      {\n        v21 = *((signed int *)ptr + 26 * v20 + 11);\n        if ( v21 > 0 )\n        {\n          v22 = 0LL;\n          while ( 1 )\n          {\n            v23 = *((signed int *)ptr + 26 * *((signed int *)ptr + 26 * v20 + v22 + 1));\n            if ( *(_DWORD *)(v1 + 1200) == (unsigned __int8)byte_98A1B0[v23] && !*(_BYTE *)(v1 + v23) )\n              break;\n            if ( ++v22 >= v21 )\n              goto LABEL_65;\n          }\n          *(_BYTE *)(v1 + result + 400) = 2;\n        }\n      }\n    }\nLABEL_65:\n    ++result;\n  }\n  while ( result != 400 );\n  return result;\n}\n", 
            "funcStartAddr": "0x42fed0L", 
            "funcEndAddr": "0x430326L", 
            "funcName": "sub_42FED0"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_430330(int a1, int a2)\n{\n  __int64 v2; // rax\n  unsigned int v3; // er15\n  unsigned int v4; // er13\n  signed __int64 v5; // rdx\n  unsigned int v6; // eax\n  int v7; // ebp\n  int v8; // er14\n  int v9; // ecx\n  signed __int64 v10; // rdx\n  signed __int64 v11; // rcx\n  int v12; // edx\n  signed __int64 v13; // rcx\n  signed __int64 v14; // rcx\n  int v15; // edx\n  signed __int64 v16; // rcx\n  signed __int64 v17; // rcx\n  int v18; // edx\n\n  v2 = (signed int)(((unsigned __int64)(1717986919LL * a1) >> 63) + (1717986919LL * a1 >> 35));\n  v3 = v2 - 1;\n  v4 = a1 - 20 * v2 - 1;\n  v5 = v2 + dword_564180 - 1;\n  v6 = dword_565C68;\n  if ( (unsigned int)v5 >= dword_565C68 || (v7 = 0, v4 >= dword_565C68) )\n    v7 = -(v3 >= dword_565C68 || dword_5641A0 + v4 >= dword_565C68);\n  v8 = 3 - a2;\n  if ( (unsigned int)v5 >= dword_565C68 || (v9 = v4 + dword_5641A0, v4 + dword_5641A0 >= dword_565C68) )\n  {\n    ++v7;\n  }\n  else\n  {\n    v10 = 5 * v5;\n    if ( v8 == (unsigned __int8)byte_98A1C5[4 * v10 + v9] )\n    {\n      if ( !(unsigned int)sub_43B050((unsigned int)(v9 + 4 * v10 + 21), 0LL) )\n        v7 += 2;\n      v6 = dword_565C68;\n    }\n  }\n  v11 = (signed int)v3 + (signed __int64)dword_564184;\n  if ( (unsigned int)v11 >= v6 || v4 >= v6 )\n  {\n    v7 -= v3 >= v6 || dword_5641A4 + v4 >= v6;\n    if ( (unsigned int)v11 >= v6 )\n    {\nLABEL_21:\n      ++v7;\n      goto LABEL_22;\n    }\n  }\n  else if ( (unsigned int)v11 >= v6 )\n  {\n    goto LABEL_21;\n  }\n  v12 = v4 + dword_5641A4;\n  if ( v4 + dword_5641A4 >= v6 )\n    goto LABEL_21;\n  v13 = 5 * v11;\n  if ( v8 == (unsigned __int8)byte_98A1C5[4 * v13 + v12] )\n  {\n    if ( !(unsigned int)sub_43B050((unsigned int)(v12 + 4 * v13 + 21), 0LL) )\n      v7 += 2;\n    v6 = dword_565C68;\n  }\nLABEL_22:\n  v14 = (signed int)v3 + (signed __int64)dword_564188;\n  if ( (unsigned int)v14 >= v6 || v4 >= v6 )\n  {\n    v7 -= v3 >= v6 || dword_5641A8 + v4 >= v6;\n    if ( (unsigned int)v14 >= v6 )\n    {\nLABEL_32:\n      ++v7;\n      goto LABEL_33;\n    }\n  }\n  else if ( (unsigned int)v14 >= v6 )\n  {\n    goto LABEL_32;\n  }\n  v15 = v4 + dword_5641A8;\n  if ( v4 + dword_5641A8 >= v6 )\n    goto LABEL_32;\n  v16 = 5 * v14;\n  if ( v8 == (unsigned __int8)byte_98A1C5[4 * v16 + v15] )\n  {\n    if ( !(unsigned int)sub_43B050((unsigned int)(v15 + 4 * v16 + 21), 0LL) )\n      v7 += 2;\n    v6 = dword_565C68;\n  }\nLABEL_33:\n  v17 = (signed int)v3 + (signed __int64)dword_56418C;\n  if ( (unsigned int)v17 >= v6 || v4 >= v6 )\n  {\n    v7 -= v3 >= v6 || dword_5641AC[0] + v4 >= v6;\n    if ( (unsigned int)v17 >= v6 )\n    {\nLABEL_43:\n      ++v7;\n      return v7 > 3;\n    }\n  }\n  else if ( (unsigned int)v17 >= v6 )\n  {\n    goto LABEL_43;\n  }\n  v18 = v4 + dword_5641AC[0];\n  if ( v4 + dword_5641AC[0] >= v6 )\n    goto LABEL_43;\n  if ( v8 == (unsigned __int8)byte_98A1C5[20 * v17 + v18]\n    && !(unsigned int)sub_43B050((unsigned int)(v18 + 20 * v17 + 21), 0LL) )\n  {\n    v7 += 2;\n  }\n  return v7 > 3;\n}\n", 
            "funcStartAddr": "0x430330L", 
            "funcEndAddr": "0x43056bL", 
            "funcName": "sub_430330"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_430570(int a1)\n{\n  float v1; // xmm0_4\n  signed __int64 result; // rax\n\n  v1 = *(float *)(qword_877C30 + 48LL * a1 + 15604);\n  if ( v1 <= 2.0 || (result = 3LL, v1 >= 4.0) )\n  {\n    if ( v1 <= 2.0 )\n      result = (unsigned int)(signed int)(v1 + 0.99);\n    else\n      result = (unsigned int)(signed int)v1;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x430570L", 
            "funcEndAddr": "0x4305caL", 
            "funcName": "sub_430570"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4305D0(__int64 a1)\n{\n  unsigned int v2; // [rsp+Ch] [rbp-Ch]\n  char v3; // [rsp+10h] [rbp-8h]\n  char v4; // [rsp+14h] [rbp-4h]\n\n  sub_430600(a1, &v4, &v3, &v2, qword_877C30);\n  return v2;\n}\n", 
            "funcStartAddr": "0x4305d0L", 
            "funcEndAddr": "0x4305f8L", 
            "funcName": "sub_4305D0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_430600(int a1, _DWORD *a2, signed int *a3, signed int *a4, int *a5)\n{\n  int *v5; // r12\n  signed int v6; // er13\n  int v7; // edx\n  signed __int64 result; // rax\n  int v9; // ebp\n  int v10; // eax\n  __int64 v11; // r14\n  __int64 v12; // r15\n  __int64 v13; // rdi\n  __int64 v14; // rax\n  signed int v15; // eax\n  signed int v16; // er14\n  int v17; // eax\n  int v18; // eax\n  int v19; // ecx\n  int v20; // edx\n  bool v21; // zf\n  int v22; // ecx\n  _DWORD *v23; // rbp\n  signed int v24; // esi\n  int v25; // ecx\n  int v26; // edx\n  int v27; // ecx\n  int v28; // eax\n  int *v29; // rbp\n  __int64 v30; // r13\n  unsigned __int64 v31; // rcx\n  __int64 v32; // rdx\n  int v33; // ecx\n  int *v34; // rdx\n  int v35; // er14\n  __int64 v36; // rdi\n  _DWORD *v37; // [rsp+8h] [rbp-820h]\n  signed int *v38; // [rsp+10h] [rbp-818h]\n  signed int *v39; // [rsp+18h] [rbp-810h]\n  int v40; // [rsp+20h] [rbp-808h]\n  int v41; // [rsp+24h] [rbp-804h]\n  int v42; // [rsp+28h] [rbp-800h]\n  int v43[157]; // [rsp+2Ch] [rbp-7FCh]\n  char dest; // [rsp+2A0h] [rbp-588h]\n  int v45[254]; // [rsp+430h] [rbp-3F8h]\n\n  v5 = a5;\n  v37 = a2;\n  v6 = a1;\n  if ( (unsigned __int8)(byte_98A1B0[a1] - 1) >= 2u )\n  {\n    v7 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      \"engine/owl.c\",\n      4615LL,\n      \"IS_STONE(board[lunch])\",\n      (unsigned int)(v7 - 1),\n      (unsigned int)(-20 * v7 + a1 - 1));\n  }\n  if ( *((_BYTE *)a5 + a1 + 400) == 2 )\n  {\n    result = (signed __int64)a2;\n    *a2 = 2;\n    *a3 = 2;\n    *a4 = 2;\n    return result;\n  }\n  v38 = a3;\n  v39 = a4;\n  v9 = 3 - (unsigned __int8)byte_98A1B0[a1];\n  v10 = sub_408410(a1, 241, (unsigned __int64)v45);\n  if ( v10 > 0 )\n  {\n    v11 = v10;\n    v12 = 0LL;\n    do\n    {\n      v13 = v45[v12];\n      if ( *((_BYTE *)v5 + v13 + 800) > 0 && !(unsigned int)sub_40AD70(v13, v9) )\n      {\n        v14 = v45[v12];\n        if ( (byte_98A1B0[dword_5641B0[0] + v14] == 3 || !*((_BYTE *)v5 + v14 + dword_5641B0[0]))\n          && (byte_98A1B0[dword_5641B4 + v14] == 3 || !*((_BYTE *)v5 + v14 + dword_5641B4))\n          && (byte_98A1B0[dword_5641B8 + v14] == 3 || !*((_BYTE *)v5 + v14 + dword_5641B8))\n          && (byte_98A1B0[dword_5641BC + v14] == 3 || !*((_BYTE *)v5 + v14 + dword_5641BC))\n          && (byte_98A1B0[dword_5641C0[0] + v14] == 3 || !*((_BYTE *)v5 + v14 + dword_5641C0[0]))\n          && (byte_98A1B0[dword_5641C4 + v14] == 3 || !*((_BYTE *)v5 + v14 + dword_5641C4))\n          && (byte_98A1B0[dword_5641C8 + v14] == 3 || !*((_BYTE *)v5 + v14 + dword_5641C8))\n          && (byte_98A1B0[dword_5641CC + v14] == 3 || !*((_BYTE *)v5 + v14 + dword_5641CC)) )\n        {\n          goto LABEL_29;\n        }\n      }\n    }\n    while ( ++v12 < v11 );\n  }\n  v15 = sub_40A5F0(v6);\n  if ( v15 >= 7 )\n  {\nLABEL_29:\n    *a2 = 2;\n    *v38 = 2;\n    result = (signed __int64)v39;\n    *v39 = 2;\n    return result;\n  }\n  if ( v15 >= 5 )\n  {\n    *a2 = 1;\nLABEL_32:\n    result = (signed __int64)v38;\n    *v38 = 2;\n    *v39 = 2;\n    return result;\n  }\n  if ( v15 >= 3 )\n  {\n    *a2 = 0;\n    *v38 = 1;\n    *v39 = 2;\n    goto LABEL_61;\n  }\n  if ( v15 != 1 )\n  {\n    if ( v15 != 2 )\n      goto LABEL_61;\n    v16 = 2;\n    sub_40A6C0(v6, 2, (__int64)&v40);\n    LOBYTE(v17) = sub_430330(v40, v9);\n    if ( !v17 )\n    {\n      LOBYTE(v18) = sub_430330(v41, v9);\n      if ( !v18 )\n      {\n        v24 = 1;\n        v23 = v37;\n        goto LABEL_60;\n      }\n    }\n    v19 = ((unsigned __int64)(1717986919LL * v40) >> 63) + (1717986919LL * v40 >> 35);\n    v20 = v40 - 20 * v19 - 1;\n    v21 = v19 == 1;\n    v22 = v19 - 1;\n    v23 = a2;\n    if ( !v21 )\n    {\n      if ( v20 != dword_565C68 - 1 && v20 && v22 != dword_565C68 - 1 )\n        goto LABEL_47;\n      if ( v22 == 1 )\n        goto LABEL_55;\n    }\n    v16 = 2;\n    v24 = 1;\n    if ( v20 == dword_565C68 - 2 || v20 == 1 || v22 == dword_565C68 - 2 )\n      goto LABEL_60;\nLABEL_47:\n    v25 = ((unsigned __int64)(1717986919LL * v41) >> 63) + (1717986919LL * v41 >> 35);\n    v26 = v41 - 20 * v25 - 1;\n    v27 = v25 - 1;\n    if ( !v27 )\n      goto LABEL_86;\n    if ( v26 != dword_565C68 - 1 )\n    {\n      if ( v26 )\n      {\n        v24 = 0;\n        v16 = 0;\n        if ( v27 != dword_565C68 - 1 )\n          goto LABEL_60;\n      }\n    }\n    if ( v27 != 1 )\n    {\nLABEL_86:\n      if ( v26 != dword_565C68 - 2 && v26 != 1 )\n      {\n        v24 = 0;\n        v16 = 0;\n        if ( v27 != dword_565C68 - 2 )\n        {\nLABEL_60:\n          *v23 = 0;\n          *v38 = v24;\n          *v39 = v16;\n          goto LABEL_61;\n        }\n      }\n    }\nLABEL_55:\n    v16 = 2;\n    v24 = 1;\n    goto LABEL_60;\n  }\n  LOBYTE(v28) = sub_430330(v6, v9);\n  *a2 = 0;\n  if ( v28 )\n  {\n    *v38 = 0;\n    *v39 = 0;\n  }\n  else\n  {\n    *v38 = 1;\n    *v39 = 1;\n  }\nLABEL_61:\n  result = sub_40B8D0(v6);\n  if ( (_DWORD)result )\n    return result;\n  v29 = &v40;\n  result = sub_40A7D0(v6, (__int64)&v40);\n  if ( (signed int)result <= 0 )\n    return result;\n  v30 = (unsigned int)result;\n  v31 = (unsigned int)result - 1LL;\n  result &= 3u;\n  if ( v31 >= 3 )\n  {\n    v32 = 0LL;\n    v33 = 0;\n    do\n    {\n      v33 |= *((_BYTE *)v5 + *(&v40 + v32)) == 0\n          || *((_BYTE *)v5 + *(&v41 + v32)) == 0\n          || *((_BYTE *)v5 + *(&v42 + v32)) == 0\n          || *((_BYTE *)v5 + v43[v32]) == 0;\n      v32 += 4LL;\n    }\n    while ( v30 - result != v32 );\n    if ( !result )\n      goto LABEL_72;\n    goto LABEL_70;\n  }\n  v32 = 0LL;\n  v33 = 0;\n  if ( result )\n  {\nLABEL_70:\n    v34 = &v40 + v32;\n    result = -result;\n    do\n    {\n      v33 |= *((_BYTE *)v5 + *v34) == 0;\n      ++v34;\n      ++result;\n    }\n    while ( result );\n  }\nLABEL_72:\n  if ( v33 )\n  {\n    result = sub_4155F0((__int64)v5, v5[300], (__int64)(v5 + 200));\n    v35 = result;\n    if ( (signed int)result <= 4 )\n    {\n      memcpy(&dest, v5, 0x190uLL);\n      do\n      {\n        v36 = *v29;\n        if ( !*((_BYTE *)v5 + v36) )\n          sub_40BAB0(v36, (__int64)&dest, 2);\n        ++v29;\n        --v30;\n      }\n      while ( v30 );\n      result = sub_4155F0((__int64)&dest, v5[300], (__int64)(v5 + 200));\n      if ( (signed int)result - v35 >= 3 )\n      {\n        if ( (signed int)result > 7 || !v35 && (signed int)result >= 5 )\n          goto LABEL_32;\n        result = (unsigned int)*v39;\n        if ( (signed int)result <= 1 )\n        {\n          result = (unsigned int)(result + 1);\n          *v39 = result;\n        }\n      }\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x430600L", 
            "funcEndAddr": "0x430bb8L", 
            "funcName": "sub_430600"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_430BC0(signed int a1)\n{\n  int v1; // edx\n  signed __int64 result; // rax\n\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v1 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/owl.c\", 4858LL, \"ON_BOARD1(pos)\", (unsigned int)(v1 - 1), (unsigned int)(a1 - 20 * v1 - 1));\n  }\n  result = 4294967286LL;\n  if ( !*(_BYTE *)(qword_877C30 + a1)\n    && (byte_98A1B0[a1]\n     || (byte_98A1B0[dword_5641B0[0] + (signed __int64)a1] == 3\n      || !*(_BYTE *)(qword_877C30 + a1 + (signed __int64)dword_5641B0[0]))\n     && (byte_98A1B0[dword_5641B4 + (signed __int64)a1] == 3\n      || !*(_BYTE *)(qword_877C30 + a1 + (signed __int64)dword_5641B4))\n     && (byte_98A1B0[dword_5641B8 + (signed __int64)a1] == 3\n      || !*(_BYTE *)(qword_877C30 + a1 + (signed __int64)dword_5641B8))\n     && (byte_98A1B0[dword_5641BC + (signed __int64)a1] == 3\n      || !*(_BYTE *)(qword_877C30 + a1 + (signed __int64)dword_5641BC))\n     && (byte_98A1B0[dword_5641C0[0] + (signed __int64)a1] == 3\n      || !*(_BYTE *)(qword_877C30 + a1 + (signed __int64)dword_5641C0[0]))\n     && (byte_98A1B0[dword_5641C4 + (signed __int64)a1] == 3\n      || !*(_BYTE *)(qword_877C30 + a1 + (signed __int64)dword_5641C4))\n     && (byte_98A1B0[dword_5641C8 + (signed __int64)a1] == 3\n      || !*(_BYTE *)(qword_877C30 + a1 + (signed __int64)dword_5641C8))\n     && (byte_98A1B0[dword_5641CC + (signed __int64)a1] == 3\n      || !*(_BYTE *)(qword_877C30 + a1 + (signed __int64)dword_5641CC))) )\n  {\n    result = (unsigned int)*(char *)(qword_877C30 + a1 + 800);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x430bc0L", 
            "funcEndAddr": "0x430d22L", 
            "funcName": "sub_430BC0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_430D30(int a1)\n{\n  return *(_BYTE *)(qword_877C30 + a1) != 0;\n}\n", 
            "funcStartAddr": "0x430d30L", 
            "funcEndAddr": "0x430d44L", 
            "funcName": "sub_430D30"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_430D50(signed int a1)\n{\n  int v1; // edx\n  __int64 v2; // rdx\n  bool result; // al\n  signed __int64 v4; // rdx\n\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v1 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/owl.c\", 4886LL, \"ON_BOARD1(pos)\", (unsigned int)(v1 - 1), (unsigned int)(a1 - 20 * v1 - 1));\n  }\n  v2 = *(signed int *)(qword_877C30 + 36LL * a1 + 1216);\n  result = 0;\n  if ( byte_98A1B0[v2] != 3 )\n  {\n    v4 = 9 * v2;\n    if ( *(_DWORD *)(qword_877C30 + 4 * v4 + 1204) == *(_DWORD *)(qword_877C30 + 1200) + 3 )\n      result = (signed int)sub_4263B0(qword_877C30 + 4 * v4 + 1220) > 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x430d50L", 
            "funcEndAddr": "0x430df3L", 
            "funcName": "sub_430D50"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_430E00(signed int a1)\n{\n  int v1; // edx\n  __int64 v2; // rdx\n  bool result; // al\n  signed __int64 v4; // rdx\n\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v1 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/owl.c\", 4904LL, \"ON_BOARD1(pos)\", (unsigned int)(v1 - 1), (unsigned int)(a1 - 20 * v1 - 1));\n  }\n  v2 = *(signed int *)(qword_877C30 + 36LL * a1 + 1216);\n  result = 0;\n  if ( byte_98A1B0[v2] != 3 )\n  {\n    v4 = 9 * v2;\n    if ( *(_DWORD *)(qword_877C30 + 4 * v4 + 1204) == *(_DWORD *)(qword_877C30 + 1200) + 3 )\n      result = (signed int)sub_4263B0(qword_877C30 + 4 * v4 + 1220) > 1;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x430e00L", 
            "funcEndAddr": "0x430ea4L", 
            "funcName": "sub_430E00"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_430EB0(signed int a1)\n{\n  int v1; // edx\n  _BOOL8 result; // rax\n\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v1 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/owl.c\", 4921LL, \"ON_BOARD1(pos)\", (unsigned int)(v1 - 1), (unsigned int)(a1 - 20 * v1 - 1));\n  }\n  result = 0LL;\n  if ( *(_DWORD *)(qword_877C30 + 36LL * a1 + 1204) == *(_DWORD *)(qword_877C30 + 1200) + 3 )\n    result = *(_BYTE *)(qword_877C30 + 36LL * a1 + 1232) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x430eb0L", 
            "funcEndAddr": "0x430f32L", 
            "funcName": "sub_430EB0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_430F40(signed int a1)\n{\n  int v1; // edx\n\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v1 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\"engine/owl.c\", 4936LL, \"ON_BOARD1(pos)\", (unsigned int)(v1 - 1), (unsigned int)(a1 - 20 * v1 - 1));\n  }\n  return (unsigned int)(*(_DWORD *)(qword_877C30 + 36LL * *(signed int *)(qword_877C30 + 36LL * a1 + 1216) + 1208)\n                      - *(_DWORD *)(qword_877C30 + 36LL * *(signed int *)(qword_877C30 + 36LL * a1 + 1216) + 1212));\n}\n", 
            "funcStartAddr": "0x430f40L", 
            "funcEndAddr": "0x430fbbL", 
            "funcName": "sub_430F40"
        }, 
        {
            "decompiledFuncCode": "void sub_4310C0()\n{\n  dword_877C48 = 0;\n}\n", 
            "funcStartAddr": "0x4310c0L", 
            "funcEndAddr": "0x4310cbL", 
            "funcName": "sub_4310C0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_4310D0()\n{\n  return (unsigned int)dword_877C48;\n}\n", 
            "funcStartAddr": "0x4310d0L", 
            "funcEndAddr": "0x4310d7L", 
            "funcName": "sub_4310D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4310E0(__int64 a1)\n{\n  __int64 v1; // rbx\n  int v2; // eax\n  int v3; // ebp\n  __int64 v4; // rdi\n  signed __int64 v5; // rsi\n  __int64 v6; // rdx\n  unsigned __int64 v7; // r15\n  int v8; // eax\n  __int64 v9; // r14\n  __int64 v10; // rbp\n  __int64 v11; // rdi\n  __int64 v12; // rax\n  __int64 v13; // rdx\n  __int64 v14; // rcx\n  int *v15; // rcx\n  __int64 v16; // rax\n  __int64 v17; // rcx\n  signed int v18; // er8\n  signed int v19; // ebp\n  signed int v20; // er14\n  __int64 v21; // r13\n  int v22; // eax\n  int v23; // eax\n  int v24; // eax\n  int v25; // eax\n  __int64 v26; // rbx\n  int v27; // eax\n  __int64 v28; // r14\n  __int64 v29; // rbx\n  int v30; // eax\n  __int64 v31; // rbx\n  int v32; // eax\n  __int64 v33; // rbx\n  int v34; // eax\n  int v35; // eax\n  signed int v36; // edx\n  __int64 v37; // rdi\n  __int64 v38; // rax\n  __int64 v39; // rdx\n  __int64 v40; // rcx\n  int *v41; // rcx\n  __int64 v42; // rax\n  int v43; // eax\n  unsigned int v44; // eax\n  __int64 v45; // r12\n  int v46; // eax\n  __int64 v47; // rdx\n  int v48; // eax\n  __int64 v49; // rcx\n  __int64 result; // rax\n  int v51; // [rsp+8h] [rbp-1460h]\n  int v52; // [rsp+Ch] [rbp-145Ch]\n  __int64 v53; // [rsp+10h] [rbp-1458h]\n  __int64 v54; // [rsp+18h] [rbp-1450h]\n  unsigned int v55; // [rsp+24h] [rbp-1444h]\n  int v56; // [rsp+28h] [rbp-1440h]\n  int v57; // [rsp+2Ch] [rbp-143Ch]\n  int v58; // [rsp+30h] [rbp-1438h]\n  int v59; // [rsp+34h] [rbp-1434h]\n  __int64 v60; // [rsp+38h] [rbp-1430h]\n  __int64 v61; // [rsp+40h] [rbp-1428h]\n  int v62; // [rsp+48h] [rbp-1420h]\n  int v63; // [rsp+4Ch] [rbp-141Ch]\n  __int64 v64; // [rsp+50h] [rbp-1418h]\n  __int64 v65; // [rsp+58h] [rbp-1410h]\n  __int64 v66; // [rsp+60h] [rbp-1408h]\n  __int64 v67; // [rsp+68h] [rbp-1400h]\n  int v68; // [rsp+70h] [rbp-13F8h]\n  int v69; // [rsp+74h] [rbp-13F4h]\n  int v70; // [rsp+78h] [rbp-13F0h]\n  int v71[361]; // [rsp+7Ch] [rbp-13ECh]\n  char s[400]; // [rsp+620h] [rbp-E48h]\n  int v73[400]; // [rsp+7B0h] [rbp-CB8h]\n  int v74[160]; // [rsp+DF0h] [rbp-678h]\n  int v75[254]; // [rsp+1070h] [rbp-3F8h]\n\n  v1 = a1;\n  v51 = *(_DWORD *)(a1 + 1200);\n  v64 = qword_88C238;\n  v55 = dword_88C22C;\n  qword_88C238 = 0LL;\n  dword_88C22C = 0;\n  *(_OWORD *)(a1 + 34820) = 0LL;\n  *(_OWORD *)(a1 + 34804) = 0LL;\n  *(_QWORD *)(a1 + 34836) = 0LL;\n  memset((void *)(a1 + 35004), 0, 0x190uLL);\n  memset(s, 0, 0x190uLL);\n  v2 = dword_565C68;\n  if ( dword_565C68 <= 0 )\n  {\nLABEL_107:\n    *(_DWORD *)(v1 + 35404) = 1;\n    qword_88C238 = v64;\n    result = v55;\n    dword_88C22C = v55;\n    return result;\n  }\n  v3 = 3 - v51;\n  v61 = 0LL;\n  v65 = 0LL;\n  v53 = a1;\n  v52 = 3 - v51;\n  while ( v2 <= 0 )\n  {\n    v49 = v2;\nLABEL_106:\n    if ( ++v61 >= v49 )\n      goto LABEL_107;\n  }\n  v4 = (20 * (_DWORD)v61 + 21) & 0xFFFFFFFD;\n  v5 = 0LL;\n  v66 = (20 * (_DWORD)v61 + 21) & 0xFFFFFFFD;\nLABEL_5:\n  if ( v51 != (unsigned __int8)byte_98A1B0[v4 + v5] )\n    goto LABEL_103;\n  v6 = v4 + v5;\n  if ( !*(_BYTE *)(v1 + v4 + v5) )\n    goto LABEL_103;\n  v67 = v5;\n  v7 = 0LL;\n  while ( 1 )\n  {\n    v43 = dword_5641B0[v7];\n    if ( v7 <= 3 )\n      v43 <<= byte_98A1B0[v43 + (signed __int64)(signed int)v6] == 0;\n    if ( v3 == (unsigned __int8)byte_98A1B0[v43 + (signed __int64)(signed int)v6] )\n      break;\nLABEL_101:\n    if ( ++v7 >= 8 )\n    {\n      v2 = dword_565C68;\n      v4 = v66;\n      v5 = v67;\nLABEL_103:\n      ++v5;\n      v49 = v2;\n      if ( v5 >= v2 )\n        goto LABEL_106;\n      goto LABEL_5;\n    }\n  }\n  v60 = v6;\n  v44 = sub_40AD00((signed int)v6 + v43);\n  v45 = (signed int)v44;\n  if ( s[v44] )\n    goto LABEL_96;\n  s[v44] = 1;\n  sub_43E350(v44, &v59, &v58, &v63, &v62);\n  v46 = v59;\n  if ( !v59 )\n  {\n    if ( !*(_BYTE *)(v1 + v45 + 35004) )\n    {\n      v8 = sub_40A7D0(v45, (__int64)v74);\n      if ( v8 > 0 )\n      {\n        v9 = v8;\n        v10 = 0LL;\n        do\n        {\n          v11 = v74[v10];\n          if ( !*(_BYTE *)(v1 + v11) || (unsigned int)sub_43B050(v11, 0LL) )\n            goto LABEL_91;\n          ++v10;\n          v1 = v53;\n        }\n        while ( v10 < v9 );\n      }\n      sub_44DFD0((unsigned int)v45, &v57, &v68, &v56, v75, 0LL);\n      memset(v73, 0, 0x640uLL);\n      if ( v57 > 0LL )\n      {\n        v12 = v57 & 3;\n        if ( (unsigned __int64)(v57 - 1LL) >= 3 )\n        {\n          v14 = v57 - v12;\n          v13 = 0LL;\n          do\n          {\n            v73[*(&v68 + v13)] = 1;\n            v73[*(&v69 + v13)] = 1;\n            v73[*(&v70 + v13)] = 1;\n            v73[v71[v13]] = 1;\n            v13 += 4LL;\n          }\n          while ( v14 != v13 );\n          if ( v12 )\n            goto LABEL_21;\n        }\n        else\n        {\n          v13 = 0LL;\n          if ( !(v57 & 3) )\n            goto LABEL_23;\nLABEL_21:\n          v15 = &v68 + v13;\n          v16 = -v12;\n          do\n          {\n            v73[*v15] = 1;\n            ++v15;\n            ++v16;\n          }\n          while ( v16 );\n        }\n      }\nLABEL_23:\n      if ( v56 > 0 )\n      {\n        v17 = 0LL;\n        while ( 1 )\n        {\n          v21 = v75[v17];\n          v22 = (unsigned __int8)byte_98A1B0[dword_5641B0[0] + v21];\n          v19 = 0;\n          if ( v22 != 3 )\n          {\n            v28 = v21 + dword_5641B0[0];\n            if ( v51 == v22 )\n            {\n              v29 = v17;\n              v30 = sub_43B050((unsigned int)v28, 0LL);\n              v17 = v29;\n              v18 = 1;\n              if ( v30 )\n                goto LABEL_65;\n              v19 = 1;\n              v18 = 1;\n              if ( !*(_BYTE *)(v53 + v28) )\n                goto LABEL_65;\n            }\n            else if ( v52 == v22 && !v73[v28] )\n            {\n              v18 = 1;\nLABEL_65:\n              if ( byte_98A1B0[dword_5641C0[0] + v21] == 3 )\n              {\n                v35 = 0;\n                v36 = 1;\n                v37 = v53;\n              }\n              else\n              {\n                v37 = v53;\n                v35 = *(_BYTE *)(v53 + v21 + dword_5641C0[0]) != 0;\n                v36 = 0;\n              }\n              if ( byte_98A1B0[dword_5641C4 + v21] == 3 )\n                ++v36;\n              else\n                v35 -= (*(_BYTE *)(v37 + v21 + dword_5641C4) < 1u) - 1;\n              if ( byte_98A1B0[dword_5641C8 + v21] == 3 )\n                ++v36;\n              else\n                v35 -= (*(_BYTE *)(v37 + v21 + dword_5641C8) < 1u) - 1;\n              if ( byte_98A1B0[dword_5641CC + v21] == 3 )\n                ++v36;\n              else\n                v35 -= (*(_BYTE *)(v37 + v21 + dword_5641CC) < 1u) - 1;\n              if ( v35 + (v36 > 1) < 2 )\n                goto LABEL_91;\n              goto LABEL_78;\n            }\n          }\n          v23 = (unsigned __int8)byte_98A1B0[dword_5641B4 + v21];\n          if ( v23 == 3 )\n            goto LABEL_31;\n          v31 = v21 + dword_5641B4;\n          if ( v51 != v23 )\n            break;\n          v54 = v17;\n          v32 = sub_43B050((unsigned int)v31, 0LL);\n          v18 = 1;\n          if ( v32 )\n            goto LABEL_49;\n          v18 = 1;\n          v20 = 1;\n          v17 = v54;\n          if ( !*(_BYTE *)(v53 + v31) )\n            goto LABEL_64;\nLABEL_32:\n          v24 = (unsigned __int8)byte_98A1B0[dword_5641B8 + v21];\n          if ( v24 != 3 )\n          {\n            v33 = v21 + dword_5641B8;\n            if ( v51 == v24 )\n            {\n              v54 = v17;\n              v34 = sub_43B050((unsigned int)v33, 0LL);\n              v18 = 1;\n              if ( v34 )\n              {\nLABEL_48:\n                v19 = v20;\nLABEL_49:\n                v17 = v54;\n                if ( !v19 )\n                  goto LABEL_65;\n                goto LABEL_78;\n              }\n              v18 = 1;\n              v19 = v20;\n              v20 = 1;\n              v17 = v54;\n              if ( !*(_BYTE *)(v53 + v33) )\n                goto LABEL_64;\n            }\n            else if ( v52 == v24 && !v73[v33] )\n            {\nLABEL_27:\n              v18 = 1;\n              if ( !v20 )\n                goto LABEL_65;\n              goto LABEL_78;\n            }\n          }\n          v25 = (unsigned __int8)byte_98A1B0[dword_5641BC + v21];\n          if ( v25 != 3 )\n          {\n            v26 = v21 + dword_5641BC;\n            if ( v51 == v25 )\n            {\n              v54 = v17;\n              v27 = sub_43B050((unsigned int)v26, 0LL);\n              v18 = 1;\n              if ( v27 )\n                goto LABEL_48;\n              v18 = 1;\n              v19 = v20;\n              v20 = 1;\n              v17 = v54;\n              if ( !*(_BYTE *)(v53 + v26) )\n                goto LABEL_64;\n            }\n            else if ( v52 == v25 && !v73[v26] )\n            {\n              goto LABEL_27;\n            }\n          }\n          v18 = 0;\n          v19 = v20;\nLABEL_64:\n          if ( !v19 )\n            goto LABEL_65;\nLABEL_78:\n          if ( v18 )\n            goto LABEL_91;\n          if ( ++v17 >= v56 )\n            goto LABEL_80;\n        }\n        if ( v52 == v23 && !v73[v31] )\n        {\n          v18 = 1;\n          if ( !v19 )\n            goto LABEL_65;\n          goto LABEL_78;\n        }\nLABEL_31:\n        v20 = v19;\n        goto LABEL_32;\n      }\nLABEL_80:\n      if ( dword_88C268 )\n        sub_433F90((unsigned __int64)\"Inessential string found at %1m.\\n\");\n      if ( v57 > 0LL )\n      {\n        v38 = v57 & 3;\n        if ( (unsigned __int64)(v57 - 1LL) >= 3 )\n        {\n          v40 = v57 - v38;\n          v39 = 0LL;\n          do\n          {\n            *(_BYTE *)(v53 + *(&v68 + v39) + 35004) = 1;\n            *(_BYTE *)(v53 + *(&v69 + v39) + 35004) = 1;\n            *(_BYTE *)(v53 + *(&v70 + v39) + 35004) = 1;\n            *(_BYTE *)(v53 + v71[v39] + 35004) = 1;\n            v39 += 4LL;\n          }\n          while ( v40 != v39 );\n          if ( !v38 )\n            goto LABEL_91;\n        }\n        else\n        {\n          v39 = 0LL;\n          if ( !(v57 & 3) )\n            goto LABEL_91;\n        }\n        v41 = &v68 + v39;\n        v42 = -v38;\n        do\n        {\n          *(_BYTE *)(v53 + *v41 + 35004) = 1;\n          ++v41;\n          ++v42;\n        }\n        while ( v42 );\n      }\nLABEL_91:\n      v1 = v53;\n      v3 = 3 - v51;\n    }\nLABEL_96:\n    v6 = v60;\n    goto LABEL_101;\n  }\n  v47 = (signed int)v65;\n  *(_DWORD *)(v1 + 4 * v47 + 34804) = v45;\n  *(_DWORD *)(v1 + 4 * v47 + 34844) = v46;\n  *(_DWORD *)(v1 + 4 * v47 + 34884) = v58;\n  v48 = v63;\n  *(_DWORD *)(v1 + 4 * v47 + 34924) = v63;\n  if ( v48 )\n    v48 = v62;\n  *(_DWORD *)(v1 + 4 * v47 + 34964) = v48;\n  v65 = (unsigned int)(v47 + 1);\n  v6 = v60;\n  if ( (_DWORD)v65 != 10 )\n    goto LABEL_101;\n  qword_88C238 = v64;\n  result = v55;\n  dword_88C22C = v55;\n  *(_DWORD *)(v1 + 35404) = 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x4310e0L", 
            "funcEndAddr": "0x431924L", 
            "funcName": "sub_4310E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_431930(__int64 a1, __int64 a2, int a3, _QWORD *a4, unsigned __int8 *a5, int *a6, int *a7)\n{\n  int *v7; // r15\n  unsigned __int8 *v8; // r13\n  int *v9; // r14\n  int *v10; // rcx\n  int *v11; // rax\n  _QWORD *v12; // rcx\n  int v13; // eax\n  unsigned int v14; // edi\n  __int64 v15; // r8\n  int v16; // edx\n  __int64 v17; // r9\n  __int64 v18; // r11\n  __int64 v19; // rbp\n  __int64 v20; // rcx\n  signed __int64 v21; // rsi\n  __int64 v22; // rax\n  __int64 v23; // rax\n  __int64 v24; // rbx\n  unsigned int v25; // ecx\n  __int64 v26; // rbp\n  __int64 v27; // rbx\n  int *v28; // rsi\n  __int64 v29; // rax\n  int v30; // eax\n  __int64 v31; // rdx\n  __int64 v32; // rsi\n  signed __int64 v33; // r13\n  __int64 v34; // r12\n  unsigned int v35; // er9\n  signed __int64 v36; // rsi\n  int *v37; // rbx\n  __int64 v38; // rcx\n  unsigned int v39; // er8\n  __int64 v40; // r9\n  char *v41; // rsi\n  char *v42; // rdi\n  int *v43; // rbp\n  __int64 v44; // rbx\n  int v45; // edx\n  __int64 v46; // rcx\n  int v47; // eax\n  int v48; // er15\n  int v49; // ebp\n  signed int v50; // ebp\n  int v51; // ebx\n  int v52; // eax\n  int v53; // eax\n  __int64 v54; // rax\n  int v55; // ecx\n  int v56; // ecx\n  int v57; // ebp\n  __int64 v58; // rax\n  __int64 v59; // r15\n  int v60; // eax\n  int v61; // eax\n  int v62; // ebp\n  __int64 v63; // rcx\n  __int64 v64; // rbp\n  signed int v65; // er15\n  __int64 v66; // r12\n  int v67; // edi\n  int v68; // ebp\n  int v69; // ebx\n  int v70; // eax\n  int v71; // er12\n  int v72; // eax\n  int v73; // ecx\n  int v74; // eax\n  int v75; // ebx\n  bool v76; // zf\n  int *v77; // r12\n  int v78; // ebx\n  __int64 v79; // r15\n  int v80; // er13\n  __int64 v81; // r12\n  __int64 v82; // rbp\n  int v83; // ebp\n  unsigned int v84; // er13\n  int v85; // ebp\n  signed int v86; // er15\n  int v87; // esi\n  unsigned int v88; // ebp\n  __int64 v89; // rax\n  __int64 v90; // rbx\n  int v91; // er15\n  __int64 v92; // rbx\n  __int64 v93; // rsi\n  unsigned int v94; // ebp\n  unsigned int v95; // ebp\n  unsigned int v96; // ebp\n  unsigned int v97; // ebp\n  int v98; // eax\n  __int64 v99; // rsi\n  __int64 v100; // rax\n  signed int v101; // er14\n  int v102; // er15\n  __int64 v103; // rbp\n  unsigned __int8 *v104; // rbx\n  int v105; // er15\n  int v106; // eax\n  unsigned __int8 *v107; // rbx\n  int v108; // er12\n  __int64 result; // rax\n  unsigned int v110; // [rsp+14h] [rbp-1094h]\n  __int64 v111; // [rsp+18h] [rbp-1090h]\n  __int64 v112; // [rsp+20h] [rbp-1088h]\n  int v113; // [rsp+2Ch] [rbp-107Ch]\n  int v114; // [rsp+30h] [rbp-1078h]\n  unsigned int v115; // [rsp+34h] [rbp-1074h]\n  unsigned int v116; // [rsp+38h] [rbp-1070h]\n  int v117; // [rsp+3Ch] [rbp-106Ch]\n  int *v118; // [rsp+40h] [rbp-1068h]\n  unsigned int v119; // [rsp+48h] [rbp-1060h]\n  int v120; // [rsp+4Ch] [rbp-105Ch]\n  __int64 v121; // [rsp+50h] [rbp-1058h]\n  const char *v122; // [rsp+58h] [rbp-1050h]\n  int v123; // [rsp+64h] [rbp-1044h]\n  _QWORD *v124; // [rsp+68h] [rbp-1040h]\n  int *v125; // [rsp+70h] [rbp-1038h]\n  int *v126; // [rsp+78h] [rbp-1030h]\n  __int64 v127; // [rsp+80h] [rbp-1028h]\n  int *v128; // [rsp+88h] [rbp-1020h]\n  unsigned __int8 *v129; // [rsp+90h] [rbp-1018h]\n  __int64 v130; // [rsp+98h] [rbp-1010h]\n  __int64 v131; // [rsp+A0h] [rbp-1008h]\n  unsigned int v132; // [rsp+ACh] [rbp-FFCh]\n  int v133; // [rsp+B0h] [rbp-FF8h]\n  int v134; // [rsp+B4h] [rbp-FF4h]\n  int v135; // [rsp+B8h] [rbp-FF0h]\n  int v136; // [rsp+BCh] [rbp-FECh]\n  int *v137; // [rsp+C0h] [rbp-FE8h]\n  char v138; // [rsp+CCh] [rbp-FDCh]\n  char s[400]; // [rsp+D0h] [rbp-FD8h]\n  int v140[200]; // [rsp+260h] [rbp-E48h]\n  char v141[400]; // [rsp+580h] [rbp-B28h]\n  int v142[200]; // [rsp+710h] [rbp-998h]\n  int v143[414]; // [rsp+A30h] [rbp-678h]\n\n  v7 = a6;\n  v8 = a5;\n  v124 = a4;\n  v123 = a3;\n  v9 = (int *)a1;\n  v119 = *(_DWORD *)(a1 + 1200);\n  v136 = 0;\n  v135 = 0;\n  v132 = dword_88C264;\n  memset(s, 0, 0x190uLL);\n  memset(v141, 0, 0x190uLL);\n  memset(v143, 0, 0x640uLL);\n  v10 = &v136;\n  if ( v7 )\n    v10 = v7;\n  v11 = &v135;\n  if ( a7 )\n    v11 = a7;\n  v118 = v10;\n  *v10 = 0;\n  v128 = v11;\n  *v11 = 0;\n  if ( !(dword_88C264 & 4) )\n    dword_88C264 &= 0xFFFFFFFD;\n  v12 = v124;\n  *v124 = -4294967296LL;\n  v12[1] = 0LL;\n  v12[2] = 2LL;\n  v12[4] = -4294967296LL;\n  v12[5] = 0LL;\n  v12[6] = 2LL;\n  v12[8] = -4294967296LL;\n  v12[9] = 0LL;\n  v12[10] = 2LL;\n  if ( !*(_DWORD *)(a1 + 35404) )\n    sub_4310E0(a1);\n  v112 = a1 + 1204;\n  sub_428A70(a1, a2);\n  v13 = 0;\n  v14 = v119;\n  v15 = dword_565C68;\n  if ( dword_565C68 > 0LL )\n  {\n    LOBYTE(v13) = v119 == 1;\n    v16 = 5 - v13;\n    v17 = 0LL;\n    do\n    {\n      v18 = (20 * (_DWORD)v17 + 21) & 0xFFFFFFFD;\n      v19 = 0LL;\n      do\n      {\n        if ( v14 == (unsigned __int8)byte_98A1B0[v18 + v19] )\n        {\n          v20 = v18 + v19;\n          v21 = 4611686018427387896LL;\n          do\n          {\n            while ( 1 )\n            {\n              while ( 1 )\n              {\n                v22 = dword_5641D0[v21];\n                if ( byte_98A1B0[v22 + (signed int)v20] != 3 )\n                {\n                  v23 = 9 * ((signed int)v20 + v22);\n                  if ( v9[v23 + 301] == v16 )\n                  {\n                    v24 = v9[v23 + 304];\n                    if ( v9[v23 + 304] )\n                    {\n                      if ( !LOBYTE(v9[v23 + 308]) )\n                        break;\n                    }\n                  }\n                }\n                ++v21;\n                if ( !(v21 * 4) )\n                  goto LABEL_24;\n              }\n              if ( !*((_BYTE *)v9 + v20) )\n                break;\n              ++s[v24];\n              ++v21;\n              if ( !(v21 * 4) )\n                goto LABEL_24;\n            }\n            ++v141[v24];\n            ++v21;\n          }\n          while ( v21 * 4 );\n        }\nLABEL_24:\n        ++v19;\n      }\n      while ( v19 != (unsigned int)v15 );\n      ++v17;\n    }\n    while ( v17 < v15 );\n    if ( (signed int)v15 > 0 )\n    {\n      v25 = 21;\n      v26 = 0LL;\n      do\n      {\n        if ( (_DWORD)v15 == 1 )\n        {\n          v27 = 0LL;\n        }\n        else\n        {\n          v28 = &v9[12 * v25 + 3914];\n          v27 = 0LL;\n          do\n          {\n            *((_BYTE *)v28 - 48) = 0;\n            *(v28 - 13) = 1092616192;\n            *(_BYTE *)v28 = 0;\n            *(v28 - 1) = 1092616192;\n            v27 += 2LL;\n            v28 += 24;\n          }\n          while ( (unsigned int)v15 - (unsigned __int64)(v15 & 1) != v27 );\n          if ( !(v15 & 1) )\n            goto LABEL_34;\n        }\n        v29 = 12 * (v27 + ((20 * (_DWORD)v26 + 21) & 0xFFFFFFFD));\n        LOBYTE(v9[v29 + 3902]) = 0;\n        v9[v29 + 3901] = 1092616192;\nLABEL_34:\n        ++v26;\n        v25 += 20;\n      }\n      while ( v26 != (unsigned int)v15 );\n    }\n  }\n  v126 = v9 + 3901;\n  sub_427710(v14, v112, (__int64)(v9 + 3901), (__int64)s);\n  sub_425C00(v8, 0, 0, 0, 0);\n  v30 = dword_565C68;\n  v31 = 0LL;\n  v129 = v8;\n  if ( dword_565C68 > 0 )\n  {\n    v130 = 0LL;\n    v31 = 0LL;\n    v125 = v9 + 304;\n    v137 = v9 + 8751;\n    while ( v30 <= 0 )\n    {\n      v63 = v30;\nLABEL_114:\n      ++v130;\n      v8 = v129;\n      if ( v130 >= v63 )\n        goto LABEL_115;\n    }\n    v32 = (20 * (_DWORD)v130 + 21) & 0xFFFFFFFD;\n    v33 = 0LL;\n    v131 = (20 * (_DWORD)v130 + 21) & 0xFFFFFFFD;\n    while ( 1 )\n    {\n      v34 = v32 + v33;\n      if ( s[v32 + v33] < 2 || v34 != v9[9 * v34 + 304] )\n        goto LABEL_111;\n      v111 = v31;\n      sub_425C10(v34, (unsigned __int8 *)&v117, &v114, &v113, (signed int *)&v110, v112, (__int64)v126);\n      if ( dword_565C68 > 0LL )\n      {\n        v35 = 21;\n        v36 = 0LL;\n        do\n        {\n          v37 = &v125[9 * v35];\n          v38 = 0LL;\n          do\n          {\n            if ( s[v35 + v38] >= 2 && v34 == *v37 && *((_BYTE *)v137 + v35 + v38) )\n              v114 = 0;\n            ++v38;\n            v37 += 9;\n          }\n          while ( dword_565C68 != v38 );\n          ++v36;\n          v35 += 20;\n        }\n        while ( v36 < dword_565C68 );\n        if ( dword_565C68 > 0 )\n        {\n          v39 = 21;\n          v40 = 0LL;\n          do\n          {\n            v41 = &v141[v39];\n            v42 = &s[v39];\n            v43 = &v125[9 * v39];\n            v44 = 0LL;\n            do\n            {\n              if ( v34 == *v43 )\n              {\n                v45 = v41[v44];\n                if ( v42[v44] < v41[v44] || (char)v45 >= 6 && 3 * v45 > v42[v44] )\n                  v114 = 0;\n              }\n              ++v44;\n              v43 += 9;\n            }\n            while ( dword_565C68 != v44 );\n            ++v40;\n            v39 += 20;\n          }\n          while ( v40 != dword_565C68 );\n        }\n      }\n      v46 = (signed int)v111;\n      v142[v46] = 0;\n      v47 = v117;\n      v127 = v46;\n      v140[v46] = v117;\n      *v118 += v114;\n      v9[9 * v34 + 305] = v47;\n      v48 = sub_426FA0((char *)&v117);\n      v49 = sub_4263B0((__int64)&v117);\n      if ( v48 )\n      {\n        if ( v49 - (unsigned int)sub_426330((__int64)&v117) == 2 )\n        {\n          v50 = 70;\n        }\n        else\n        {\n          v53 = sub_4263B0((__int64)&v117);\n          v50 = 50;\n          if ( v53 - v114 == 2 )\n            v50 = 60;\n        }\n        v122 = \"vital move\";\n        v51 = v111;\n        if ( !v123 )\n          goto LABEL_84;\n        goto LABEL_73;\n      }\n      v51 = v111;\n      if ( v49 != v114 )\n        break;\nLABEL_110:\n      v31 = (unsigned int)(v51 + 1);\n      v30 = dword_565C68;\n      v32 = v131;\nLABEL_111:\n      ++v33;\n      v63 = v30;\n      if ( v33 >= v30 )\n        goto LABEL_114;\n    }\n    v52 = sub_4263B0((__int64)&v117);\n    v50 = 30;\n    if ( v52 - v114 == 2 )\n      v50 = 40;\n    v122 = \"marginal eye space\";\n    if ( !v123 )\n    {\nLABEL_84:\n      if ( !v123\n        && v110\n        && !byte_98A1B0[v110]\n        && ((byte_98A1C4[v110] == 3 || !*((_BYTE *)v9 + (signed int)v110 + 20))\n         && (byte_98A1AF[v110] == 3 || !*((_BYTE *)v9 + (signed int)v110 - 1))\n         && (byte_98A19C[v110] == 3 || !*((_BYTE *)v9 + (signed int)v110 - 20))\n         && (byte_98A1B1[v110] == 3 || !*((_BYTE *)v9 + (signed int)v110 + 1))\n         || !(unsigned int)sub_40AD70(v110, v119)\n         || (unsigned int)sub_408130(v110, v119, 0LL)\n         || (unsigned int)sub_43F100(v110, v119)) )\n      {\n        v59 = (signed int)v110;\n        v60 = v143[v110];\n        if ( v60 > 0 )\n        {\n          v61 = v50 + v60;\n          if ( v61 >= 99 )\n            v61 = 98;\n          v50 = v61;\n        }\n        LODWORD(v121) = v50;\n        if ( dword_88C268 )\n        {\n          sub_426340((unsigned __int8 *)&v117);\n          sub_433F90((unsigned __int64)\"%s at %1m, score %d (eye at %1m, value %s, pessimistic_min %d)\\n\");\n          v59 = (signed int)v110;\n        }\n        if ( (LOBYTE(v9[9 * v59 + 308]) || v34 != v9[9 * v59 + 304])\n          && (unsigned int)sub_433230(v9, &v110, 0LL)\n          && dword_88C268 )\n        {\n          sub_433F90((unsigned __int64)\"vital point looked stupid, moved it to %1m\\n\");\n        }\n        v62 = v121;\n        sub_432D00((_DWORD)v124);\n        v143[v110] = v62;\n      }\n      goto LABEL_110;\n    }\nLABEL_73:\n    if ( !v113 )\n      goto LABEL_84;\n    v54 = v113;\n    v55 = v143[v113];\n    if ( v55 <= 0 )\n    {\n      LODWORD(v121) = v50;\n      if ( !dword_88C268 )\n      {\nLABEL_79:\n        if ( LOBYTE(v9[9 * v54 + 308]) && (unsigned int)sub_433230(v9, &v113, 1LL) && dword_88C268 )\n          sub_433F90((unsigned __int64)\"vital point looked stupid, moved it to %1m\\n\");\n        v57 = v121;\n        sub_432D00((_DWORD)v124);\n        v58 = v113;\n        v143[v58] = v57;\n        v142[v127] = v58;\n        goto LABEL_110;\n      }\n    }\n    else\n    {\n      v56 = v50 + v55;\n      if ( v56 >= 99 )\n        v56 = 98;\n      LODWORD(v121) = v56;\n      if ( !dword_88C268 )\n        goto LABEL_79;\n    }\n    sub_426340((unsigned __int8 *)&v117);\n    sub_433F90((unsigned __int64)\"%s at %1m, score %d (eye at %1m, value %s, pessimistic_min %d)\\n\");\n    v54 = v113;\n    goto LABEL_79;\n  }\nLABEL_115:\n  v64 = 0LL;\n  v65 = 0;\n  v66 = v31;\n  do\n  {\n    v67 = v9[v64 + 8701];\n    if ( !v67 || !v9[v64 + 8741] )\n      goto LABEL_188;\n    v112 = v64;\n    v111 = v66;\n    sub_430600(v67, &v138, &v134, &v133, v9);\n    v68 = v134;\n    sub_425C00(&v120, 0, 0, v134, v134);\n    v69 = v133;\n    *v128 += v133;\n    if ( !v68 )\n    {\n      v70 = 20;\nLABEL_129:\n      v71 = v111;\n      v64 = v112;\n      goto LABEL_130;\n    }\n    if ( v68 != 1 || v69 != 1 )\n    {\n      v72 = sub_40A5F0(v9[v112 + 8701]);\n      if ( v68 != 1 || v69 != 2 )\n        v70 = v72 + 75;\n      else\n        v70 = v72 + 70;\n      goto LABEL_129;\n    }\n    v64 = v112;\n    v70 = (unsigned __int64)sub_40A5F0(v9[v112 + 8701]) + 60;\n    v71 = v111;\nLABEL_130:\n    v73 = v70 - 10;\n    if ( v9[v64 + 8711] == 5 )\n      v73 = v70;\n    v74 = v73;\n    if ( v73 <= 20 )\n    {\n      v75 = v73;\n      v76 = (unsigned int)sub_40A5F0(v9[v64 + 8701]) == 1;\n      v74 = v75;\n      if ( v76 )\n        goto LABEL_187;\n    }\n    v77 = (int *)v9[v64 + 8701];\n    LODWORD(v126) = v65;\n    LODWORD(v125) = v74;\n    if ( !v123 )\n    {\n      v91 = v9[v64 + 8721];\n      v92 = 3 - (unsigned int)(unsigned __int8)byte_98A1B0[(_QWORD)v77];\n      if ( (unsigned int)sub_43F100((unsigned int)v9[v64 + 8721], v92) )\n      {\n        v71 = v111;\nLABEL_184:\n        v113 = v91;\n        if ( dword_88C268 )\n        {\n          v99 = (unsigned int)v9[v64 + 8701];\n          sub_433F90((unsigned __int64)\"eat lunch at %1m with %1m, score %d\\n\");\n        }\n        sub_432D00((_DWORD)v124);\n        v65 = (signed int)v126;\nLABEL_187:\n        ++v65;\n        v100 = v71;\n        v66 = (unsigned int)(v71 + 1);\n        v140[v100] = v120;\n        goto LABEL_188;\n      }\n      v118 = v77;\n      if ( (_DWORD)v92 != (unsigned __int8)byte_98A1B0[dword_5641B0[0] + (signed __int64)v91]\n        || (v94 = v91 + dword_5641B0[0], !(unsigned int)sub_43B050((unsigned int)(v91 + dword_5641B0[0]), 0LL))\n        || !(unsigned int)sub_43B6F0(v94, &v115)\n        || !v115\n        || !(unsigned int)sub_44AE70(v115, v118) )\n      {\n        if ( (_DWORD)v92 != (unsigned __int8)byte_98A1B0[dword_5641B4 + (signed __int64)v91]\n          || (v95 = v91 + dword_5641B4, !(unsigned int)sub_43B050((unsigned int)(v91 + dword_5641B4), 0LL))\n          || !(unsigned int)sub_43B6F0(v95, &v115)\n          || !v115\n          || !(unsigned int)sub_44AE70(v115, v118) )\n        {\n          if ( (_DWORD)v92 != (unsigned __int8)byte_98A1B0[dword_5641B8 + (signed __int64)v91]\n            || (v96 = v91 + dword_5641B8, !(unsigned int)sub_43B050((unsigned int)(v91 + dword_5641B8), 0LL))\n            || !(unsigned int)sub_43B6F0(v96, &v115)\n            || !v115\n            || !(unsigned int)sub_44AE70(v115, v118) )\n          {\n            if ( (_DWORD)v92 != (unsigned __int8)byte_98A1B0[dword_5641BC + (signed __int64)v91] )\n              goto LABEL_182;\n            v97 = v91 + dword_5641BC;\n            v98 = sub_43B050((unsigned int)(v91 + dword_5641BC), 0LL);\n            v71 = v111;\n            if ( v98 && (unsigned int)sub_43B6F0(v97, &v115) && v115 )\n            {\n              if ( (unsigned int)sub_44AE70(v115, v118) )\n                goto LABEL_179;\nLABEL_182:\n              v71 = v111;\n            }\n            v64 = v112;\n            goto LABEL_184;\n          }\n        }\n      }\nLABEL_179:\n      if ( dword_88C268 )\n        sub_433F90((unsigned __int64)\"Moved attack of lunch %1m from %1m to %1m.\\n\");\n      v91 = v115;\n      goto LABEL_182;\n    }\n    v78 = v9[v64 + 8741];\n    v79 = v78;\n    v118 = v77;\n    LODWORD(v122) = (unsigned __int8)byte_98A1B0[(_QWORD)v77];\n    v80 = 3 - (_DWORD)v122;\n    v81 = 0LL;\n    LODWORD(v127) = v78;\n    v121 = v78;\n    LODWORD(v131) = 3 - (_DWORD)v122;\n    while ( 1 )\n    {\n      v82 = dword_5641B0[v81];\n      if ( v80 != (unsigned __int8)byte_98A1B0[v82 + v79] )\n        goto LABEL_143;\n      v83 = v79 + v82;\n      if ( (unsigned int)sub_4083A0(v83) != 2 )\n        goto LABEL_143;\n      sub_408410(v83, 2, (unsigned __int64)&v115);\n      v84 = v115;\n      if ( v115 == v78 )\n        v84 = v116;\n      v85 = (signed int)v122;\n      v86 = sub_4099C0(v84, (int)v122, 241, 0LL);\n      v87 = v85;\n      v88 = v84;\n      if ( v86 > (signed int)sub_4099C0(v78, v87, 241, 0LL) )\n      {\n        if ( (unsigned int)sub_44B0A0(v84, v118) )\n          break;\n      }\n      v78 = v127;\n      v79 = v121;\n      v80 = v131;\nLABEL_143:\n      if ( (unsigned __int64)++v81 >= 4 )\n      {\n        v88 = v78;\n        goto LABEL_145;\n      }\n    }\n    if ( dword_88C268 )\n      sub_433F90((unsigned __int64)\"Moved defense of lunch %1m from %1m to %1m.\\n\");\nLABEL_145:\n    v8 = v129;\n    v65 = (signed int)v126;\n    v110 = v88;\n    if ( v143[v88] )\n    {\n      LODWORD(v89) = v111 - (_DWORD)v126;\n      if ( (signed int)v111 <= (signed int)v126 )\nLABEL_154:\n        sub_4340E0(\"engine/owl.c\", 2659LL, \"ne < num_eyes - num_lunch\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n      v89 = (signed int)v89;\n      v90 = 0LL;\n      while ( v142[v90] != v88 )\n      {\n        if ( ++v90 >= v89 )\n          goto LABEL_154;\n      }\n      v64 = v112;\n      v90 = (unsigned int)v90;\n      sub_426E70((unsigned __int8 *)&v140[(unsigned int)v90], (unsigned __int8 *)&v120, &v140[(unsigned int)v90]);\n      LOWORD(v140[v90]) = 0;\n      v66 = v111;\n    }\n    else\n    {\n      v65 = (_DWORD)v126 + 1;\n      v66 = (unsigned int)(v111 + 1);\n      v140[(signed int)v111] = v120;\n      v64 = v112;\n    }\n    if ( dword_88C268 )\n    {\n      v93 = (unsigned int)v9[v64 + 8701];\n      sub_433F90((unsigned __int64)\"save lunch at %1m with %1m, score %d\\n\");\n    }\n    sub_432D00((_DWORD)v124);\nLABEL_188:\n    ++v64;\n  }\n  while ( v64 != 10 );\n  v101 = v66 - v65;\n  if ( (signed int)v66 <= v65 )\n  {\n    v105 = 0;\n  }\n  else\n  {\n    v111 = v66;\n    v102 = v66 - 1 - v65;\n    v103 = (unsigned int)v101;\n    v104 = (unsigned __int8 *)v140;\n    do\n    {\n      sub_426E70(v8, v104, v8);\n      v104 += 4;\n      --v103;\n    }\n    while ( v103 );\n    v105 = v102 + 1;\n    LODWORD(v66) = v111;\n  }\n  v106 = sub_4263B0((__int64)v8);\n  *v128 += v106;\n  if ( v101 >= 2 && (signed int)sub_426E60((__int64)v8) >= 2 )\n    ++*v128;\n  if ( v105 < (signed int)v66 )\n  {\n    v107 = (unsigned __int8 *)&v140[v105];\n    v108 = v66 - v105;\n    do\n    {\n      sub_426E70(v8, v107, v8);\n      v107 += 4;\n      --v108;\n    }\n    while ( v108 );\n  }\n  result = v132;\n  dword_88C264 = v132;\n  return result;\n}\n", 
            "funcStartAddr": "0x431930L", 
            "funcEndAddr": "0x432857L", 
            "funcName": "sub_431930"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_432860(int a1, unsigned int a2, float *a3, unsigned int a4, _DWORD *a5)\n{\n  float *v5; // r13\n  int v6; // ebp\n  __int64 v7; // r14\n  unsigned int v8; // er15\n  __int64 result; // rax\n  bool v10; // cf\n  __int64 v11; // r12\n  __int64 v12; // rsi\n  int v13; // er9\n  __int64 v14; // rsi\n  __int64 v15; // rax\n  __int64 v16; // rdx\n  __int64 v17; // rcx\n  __int64 v18; // rsi\n  int v19; // edi\n  int v20; // edi\n  int v21; // edi\n  __int64 v22; // rcx\n  int v23; // [rsp+10h] [rbp-38h]\n\n  v5 = a3;\n  v6 = a1;\n  v7 = (signed int)a4;\n  v8 = a1 + dword_94A490[8 * *((signed int *)a3 + 13) + a4];\n  if ( dword_88C21C )\n    goto LABEL_2;\n  result = (unsigned int)a5[1];\n  if ( (_DWORD)result == -1 )\n    goto LABEL_2;\n  if ( *a5 != v8 )\n  {\n    result = (unsigned int)a5[9];\n    if ( (_DWORD)result == -1 )\n      goto LABEL_2;\n    if ( a5[8] != v8 )\n    {\n      result = (unsigned int)a5[17];\n      if ( (_DWORD)result == -1 )\n        goto LABEL_2;\n      v10 = a5[16] < v8;\n    }\n  }\n  if ( (float)(signed int)result < a3[31] )\n  {\nLABEL_2:\n    v23 = (signed int)a5;\n    result = sub_433550(v8, a2, a3, a4);\n    if ( !(_DWORD)result )\n      return result;\n    if ( *((_QWORD *)v5 + 20) )\n      sub_4340E0(\"engine/owl.c\", 3200LL, \"0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n    v11 = (unsigned int)(signed int)v5[31];\n    if ( dword_88C268 )\n    {\n      v12 = *((_QWORD *)v5 + 2);\n      sub_433F90((unsigned __int64)\"Pattern %s found at %1m with value %d\\n\");\n    }\n    v13 = *((_DWORD *)v5 + 30);\n    v14 = *((signed int *)v5 + 2);\n    if ( v14 <= 0 )\n      goto LABEL_28;\n    v15 = *(_QWORD *)v5;\n    v16 = v14 & 1;\n    if ( (_DWORD)v14 == 1 )\n    {\n      v17 = 0LL;\n      if ( !(v14 & 1) )\n      {\nLABEL_28:\n        v22 = *((_QWORD *)v5 + 2);\n        return sub_432D00(v23);\n      }\n    }\n    else\n    {\n      v18 = v14 - v16;\n      v17 = 0LL;\n      do\n      {\n        if ( *(_DWORD *)(v15 + 8 * v17 + 4) == 7 )\n          v19 = v6 + dword_94A490[8 * *(signed int *)(v15 + 8 * v17) + v7];\n        if ( *(_DWORD *)(v15 + 8 * v17 + 12) == 7 )\n          v20 = v6 + dword_94A490[8 * *(signed int *)(v15 + 8 * v17 + 8) + v7];\n        v17 += 2LL;\n      }\n      while ( v18 != v17 );\n      if ( !v16 )\n        goto LABEL_28;\n    }\n    if ( *(_DWORD *)(v15 + 8 * v17 + 4) == 7 )\n      v21 = dword_94A490[8 * *(signed int *)(v15 + 8 * v17) + v7] + v6;\n    goto LABEL_28;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x432860L", 
            "funcEndAddr": "0x432ac6L", 
            "funcName": "sub_432860"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_432AD0(unsigned int a1, __int64 a2, __int64 a3, int a4)\n{\n  int v4; // ebp\n  __int64 v5; // r15\n  int v6; // er14\n  int v7; // er14\n  signed __int64 v8; // rbx\n  char v9; // al\n  unsigned int v10; // ebx\n  signed __int64 v11; // rbx\n  char v12; // al\n  int v13; // ebx\n  int v15; // [rsp+10h] [rbp-38h]\n  unsigned int v16; // [rsp+14h] [rbp-34h]\n\n  v4 = a4;\n  v5 = a3;\n  v16 = *(_DWORD *)(a2 + 1200);\n  v6 = dword_88C268;\n  if ( byte_98A1B0[a1] )\n    sub_4340E0(\"engine/owl.c\", 929LL, \"board[move] == 0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  dword_88C268 = 0;\n  if ( (unsigned int)sub_43F100(a1, v16) )\n  {\n    v15 = v6;\n    v7 = 0;\n    v8 = 21LL;\n    do\n    {\n      v9 = byte_98A1B0[v8];\n      if ( v9 && v9 != 3 && v8 == (unsigned int)sub_40AD00(v8) )\n      {\n        if ( *(_BYTE *)(a2 + v8) )\n          v7 += -75 * (unsigned __int64)sub_4083A0(v8);\n        if ( *(_BYTE *)(v5 + v8) )\n          v7 += 100 * (unsigned __int64)sub_4083A0(v8);\n      }\n      ++v8;\n    }\n    while ( v8 != 400 );\n    v10 = 0;\n    if ( !(unsigned int)sub_406880(a1, v16, 0LL, 0, 0, 0) )\n    {\n      dword_88C268 = v15;\n      return v10;\n    }\n    v11 = 21LL;\n    do\n    {\n      v12 = byte_98A1B0[v11];\n      if ( v12 && v12 != 3 && v11 == (unsigned int)sub_40AD00(v11) )\n      {\n        if ( *(_BYTE *)(a2 + v11)\n          || a1 == v11\n          && (byte_98A1C4[a1] != 3 && *(_BYTE *)(a2 + (signed int)a1 + 20)\n           || byte_98A1AF[a1] != 3 && *(_BYTE *)(a2 + (signed int)a1 - 1)\n           || byte_98A19C[a1] != 3 && *(_BYTE *)(a2 + (signed int)a1 - 20)\n           || byte_98A1B1[a1] != 3 && *(_BYTE *)(a2 + (signed int)a1 + 1)) )\n        {\n          v7 += 75 * (unsigned __int64)sub_4083A0(v11);\n        }\n        if ( *(_BYTE *)(v5 + v11) )\n          v7 += -100 * (unsigned __int64)sub_4083A0(v11);\n      }\n      ++v11;\n    }\n    while ( v11 != 400 );\n    sub_407030();\n    dword_88C268 = v15;\n    v13 = 0;\n    if ( v7 >= 0 )\n      v13 = v7;\n  }\n  else\n  {\n    v13 = 0;\n  }\n  return (unsigned int)(v4 + v13);\n}\n", 
            "funcStartAddr": "0x432ad0L", 
            "funcEndAddr": "0x432cf8L", 
            "funcName": "sub_432AD0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_432D00(_DWORD *a1, int a2, int a3, __int64 a4, int a5, int a6, int a7)\n{\n  signed __int64 result; // rax\n  unsigned int v8; // er11\n  signed int v9; // er10\n  __int64 v10; // rbp\n  signed __int64 v11; // rbx\n  signed __int64 v12; // rbx\n  bool v13; // bp\n  signed __int64 v14; // rbp\n  __int128 v15; // xmm0\n  signed __int64 v16; // r14\n  __int128 v17; // xmm0\n  signed __int64 v18; // rbx\n  __int128 v19; // xmm0\n  signed __int64 v20; // r11\n  __int128 v21; // xmm0\n\n  result = a2;\n  if ( !byte_877C50[a2] )\n  {\n    byte_877C50[a2] = 1;\n    ++dword_877C4C;\n    if ( a1[1] != -1 )\n      goto LABEL_3;\nLABEL_14:\n    v8 = 0;\n    goto LABEL_17;\n  }\n  if ( a1[1] == -1 )\n    goto LABEL_14;\nLABEL_3:\n  v8 = 0;\n  if ( *a1 != a2 )\n  {\n    if ( a1[9] == -1 )\n    {\n      v8 = 1;\n      goto LABEL_17;\n    }\n    v8 = 1;\n    if ( a1[8] != a2 )\n    {\n      if ( a1[17] != -1 )\n      {\n        v9 = 3;\n        v8 = 2;\n        if ( a1[16] != a2 )\n          goto LABEL_19;\n        goto LABEL_8;\n      }\n      v8 = 2;\nLABEL_17:\n      v10 = v8;\n      goto LABEL_18;\n    }\n  }\nLABEL_8:\n  v10 = v8;\n  v11 = 8LL * v8;\n  if ( a1[v11 + 4] < a5 )\n    a1[v11 + 4] = a5;\n  result = (unsigned int)a1[v11 + 5];\n  if ( !(_DWORD)result )\n    a6 = 0;\nLABEL_18:\n  v9 = v8;\n  if ( a1[8 * v10 + 1] >= a3 )\n    return result;\nLABEL_19:\n  if ( !v9 )\n    goto LABEL_33;\n  result = v9 - 1LL;\n  v12 = 8 * result;\n  v13 = v9 < 3;\n  if ( a1[8 * result + 1] >= a3 )\n  {\n    result = v9;\n    goto LABEL_35;\n  }\n  if ( v9 <= 2 )\n  {\n    v14 = 8LL * v9;\n    v15 = *(_OWORD *)&a1[v12];\n    *(_OWORD *)&a1[v14 + 4] = *(_OWORD *)&a1[v12 + 4];\n    *(_OWORD *)&a1[v14] = v15;\n  }\n  if ( v9 > 0 )\n  {\n    if ( v9 != 1LL )\n    {\n      v16 = 8 * (v9 - 2LL);\n      v13 = 1;\n      if ( a1[v16 + 1] >= a3 )\n        goto LABEL_35;\n      result = (signed __int64)&a1[v16];\n      v17 = *(_OWORD *)&a1[v16];\n      *(_OWORD *)&a1[v12 + 4] = *(_OWORD *)&a1[v16 + 4];\n      *(_OWORD *)&a1[v12] = v17;\n      if ( v9 < 2 )\n        return result;\n      if ( v9 != 2LL )\n      {\n        result = v9 - 3LL;\n        v18 = 8 * result;\n        if ( a1[8 * result + 1] >= a3 )\n        {\n          result = v9 - 2LL;\n          goto LABEL_36;\n        }\n        v19 = *(_OWORD *)&a1[v18];\n        *(_OWORD *)&a1[v16 + 4] = *(_OWORD *)&a1[v18 + 4];\n        *(_OWORD *)&a1[v16] = v19;\n        if ( v9 < 3 )\n          return result;\n        if ( v9 != 3LL )\n        {\n          v20 = 8LL * v9;\n          if ( a1[v20 - 31] < a3 )\n          {\n            result = (signed __int64)&a1[v20 - 32];\n            v21 = *(_OWORD *)result;\n            *(_OWORD *)&a1[v18 + 4] = *(_OWORD *)(result + 16);\n            *(_OWORD *)&a1[v18] = v21;\n            return result;\n          }\nLABEL_35:\n          if ( !v13 )\n            return result;\n          goto LABEL_36;\n        }\n      }\n    }\nLABEL_33:\n    result = 0LL;\nLABEL_36:\n    result *= 32LL;\n    *(_DWORD *)((char *)a1 + result) = a2;\n    *(_DWORD *)((char *)a1 + result + 4) = a3;\n    *(_QWORD *)((char *)a1 + result + 8) = a4;\n    *(_DWORD *)((char *)a1 + result + 16) = a5;\n    *(_DWORD *)((char *)a1 + result + 20) = a6;\n    *(_DWORD *)((char *)a1 + result + 24) = a7;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x432d00L", 
            "funcEndAddr": "0x432edcL", 
            "funcName": "sub_432D00"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_432EE0@<rax>(__int64 a1@<rax>, unsigned int a2@<edi>, unsigned int a3@<esi>)\n{\n  unsigned int v3; // ebx\n  __int64 v4; // r15\n  __int64 v6; // [rsp-4h] [rbp-28h]\n\n  v6 = a1;\n  v3 = 0;\n  if ( dword_98A7F4 <= dword_98A75C )\n  {\n    v4 = 3 - (unsigned int)(unsigned __int8)byte_98A1B0[a2];\n    if ( (unsigned int)sub_43F100(a3, v4) )\n    {\n      v3 = a3;\n    }\n    else\n    {\n      if ( (unsigned int)sub_40AD70(a3, v4) && (signed int)sub_4093D0(a3, v4, 1, (_DWORD *)&v6 + 1) > 0 )\n      {\n        v3 = 0;\n        if ( (unsigned int)sub_406880(HIDWORD(v6), (unsigned int)v4, \"find_semeai_backfilling_move\", a2, 0, 0) )\n        {\n          if ( (unsigned int)sub_43F100(a3, (unsigned int)v4) )\n            v3 = HIDWORD(v6);\n          else\n            v3 = sub_432EE0(a2, a3);\n          sub_407030();\n        }\n      }\n      else\n      {\n        v3 = 0;\n      }\n      if ( byte_98A1B0[v3] == 3 || !(unsigned int)sub_43F100(v3, (unsigned int)v4) )\n        v3 = 0;\n    }\n  }\n  return v3;\n}\n", 
            "funcStartAddr": "0x432ee0L", 
            "funcEndAddr": "0x432fc0L", 
            "funcName": "sub_432EE0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_432FC0(__int64 a1, __int64 a2)\n{\n  __int64 v2; // r14\n  signed __int64 v3; // r12\n  __int64 v4; // rbx\n  char *v5; // r13\n  signed __int64 v6; // rax\n  char *v7; // rax\n  const void *v8; // rsi\n  signed __int64 v9; // rbx\n  signed __int64 v10; // rbp\n  __int64 result; // rax\n  const void *v12; // rsi\n  int v13; // ebx\n  char *v14; // r15\n\n  v2 = a2;\n  if ( dword_877DE0 == dword_877DE4 - 1 || a2 && dword_877DE0 == dword_877DE4 - 2 )\n  {\n    v3 = 35816LL * *(signed int *)(*(_QWORD *)a1 + 35812LL);\n    if ( *(void **)a1 != (char *)qword_877DE8 + v3 )\n      sub_4340E0(\"engine/owl.c\", 5075LL, \"*owla == &(owl_stack[num_a])\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n    if ( a2 )\n    {\n      v4 = *(signed int *)(*(_QWORD *)a2 + 35812LL);\n      if ( *(void **)a2 != (char *)qword_877DE8 + 35816 * v4 )\n        sub_4340E0(\"engine/owl.c\", 5078LL, \"*owlb == &(owl_stack[num_b])\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n    }\n    else\n    {\n      LODWORD(v4) = 0;\n    }\n    v6 = dword_877DE4 + 2LL;\n    dword_877DE4 += 2;\n    v7 = (char *)realloc(qword_877DE8, 35816 * v6);\n    v5 = v7;\n    qword_877DE8 = v7;\n    if ( !v7 )\n      sub_4340E0(\"engine/owl.c\", 5088LL, \"owl_stack != ((void*)0)\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n    *(_QWORD *)a1 = &v7[v3];\n    if ( a2 )\n      *(_QWORD *)a2 = &v7[35816 * (signed int)v4];\n  }\n  else\n  {\n    v5 = (char *)qword_877DE8;\n  }\n  v8 = *(const void **)a1;\n  if ( &v5[35816 * *(signed int *)(*(_QWORD *)a1 + 35812LL)] != *(char **)a1 )\n    sub_4340E0(\"engine/owl.c\", 5039LL, \"&owl_stack[(*owl)->number_in_stack] == *owl\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n  v9 = dword_877DE0++ + 1LL;\n  v10 = 35816 * v9;\n  memcpy(&v5[35816 * v9], v8, 0x8BE8uLL);\n  *(_DWORD *)&v5[v10 + 35812] = v9;\n  result = *(unsigned int *)(*(_QWORD *)a1 + 35812LL);\n  *(_DWORD *)&v5[v10 + 35808] = result;\n  *(_QWORD *)a1 = &v5[35816 * v9];\n  if ( v2 )\n  {\n    v12 = *(const void **)v2;\n    if ( &v5[35816 * *(signed int *)(*(_QWORD *)v2 + 35812LL)] != *(char **)v2 )\n      sub_4340E0(\"engine/owl.c\", 5039LL, \"&owl_stack[(*owl)->number_in_stack] == *owl\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n    v13 = v9 + 1;\n    dword_877DE0 = v13;\n    v14 = &v5[35816 * v13];\n    memcpy(v14, v12, 0x8BE8uLL);\n    *((_DWORD *)v14 + 8953) = v13;\n    result = *(unsigned int *)(*(_QWORD *)v2 + 35812LL);\n    *((_DWORD *)v14 + 8952) = result;\n    *(_QWORD *)v2 = v14;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x432fc0L", 
            "funcEndAddr": "0x433224L", 
            "funcName": "sub_432FC0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_433230(__int64 a1, signed int *a2, int a3)\n{\n  signed int *v3; // r15\n  __int64 v4; // r14\n  __int64 v5; // rdi\n  char v6; // cl\n  unsigned int v7; // ebx\n  __int64 v8; // rax\n  int v9; // ebp\n  int v10; // er12\n  __int64 v11; // rsi\n\n  v3 = a2;\n  v4 = a1;\n  v5 = *a2;\n  v6 = byte_98A1B0[v5 - dword_5641B0[0]];\n  if ( v6 == 3\n    && !byte_98A1B0[v5 + dword_5641B0[0]]\n    && !byte_98A1B0[dword_5641B4 + v5]\n    && !byte_98A1B0[(signed int)v5 - dword_5641B4]\n    && ((v11 = v5 + dword_5641B0[0], byte_98A1B0[2 * dword_5641B0[0] + v5])\n     || byte_98A1B0[dword_5641B4 + v11]\n     || byte_98A1B0[(signed int)v11 - (signed __int64)dword_5641B4])\n    || byte_98A1B0[v5 - dword_5641B4] == 3\n    && !byte_98A1B0[v5 + dword_5641B4]\n    && !byte_98A1B0[dword_5641B8 + v5]\n    && !byte_98A1B0[(signed int)v5 - dword_5641B8]\n    && ((v11 = v5 + dword_5641B4, byte_98A1B0[2 * dword_5641B4 + v5])\n     || byte_98A1B0[dword_5641B8 + v11]\n     || byte_98A1B0[(signed int)v11 - (signed __int64)dword_5641B8])\n    || byte_98A1B0[v5 - dword_5641B8] == 3\n    && !byte_98A1B0[v5 + dword_5641B8]\n    && !byte_98A1B0[dword_5641BC + v5]\n    && !byte_98A1B0[(signed int)v5 - dword_5641BC]\n    && ((v11 = v5 + dword_5641B8, byte_98A1B0[2 * dword_5641B8 + v5])\n     || byte_98A1B0[dword_5641BC + v11]\n     || byte_98A1B0[(signed int)v11 - (signed __int64)dword_5641BC])\n    || byte_98A1B0[v5 - dword_5641BC] == 3\n    && !byte_98A1B0[v5 + dword_5641BC]\n    && !((unsigned __int8)byte_98A1B0[dword_5641B0[0] + v5] | (unsigned __int8)v6)\n    && ((v11 = v5 + dword_5641BC, byte_98A1B0[2 * dword_5641BC + v5])\n     || byte_98A1B0[dword_5641B0[0] + v11]\n     || byte_98A1B0[(signed int)v11 - dword_5641B0[0]]) )\n  {\n    *v3 = v11;\n    return 1;\n  }\n  v7 = 0;\n  if ( a3 )\n    return v7;\n  v7 = 0;\n  if ( (unsigned int)sub_4093D0(v5, 3 - *(_DWORD *)(v4 + 1200), 1, 0LL) )\n    return v7;\n  v8 = *v3;\n  v9 = 3 - *(_DWORD *)(v4 + 1200);\n  if ( v9 == (unsigned __int8)byte_98A1B0[dword_5641C0[0] + v8] )\n  {\n    v10 = v8 + dword_5641C0[0];\n    if ( (unsigned int)sub_4083A0((signed int)v8 + dword_5641C0[0]) == 1 )\n      goto LABEL_29;\n    LODWORD(v8) = *v3;\n    v9 = 3 - *(_DWORD *)(v4 + 1200);\n  }\n  if ( v9 == (unsigned __int8)byte_98A1B0[dword_5641C4 + (signed __int64)(signed int)v8] )\n  {\n    v10 = v8 + dword_5641C4;\n    if ( (unsigned int)sub_4083A0((signed int)v8 + dword_5641C4) == 1 )\n      goto LABEL_29;\n    LODWORD(v8) = *v3;\n    v9 = 3 - *(_DWORD *)(v4 + 1200);\n  }\n  if ( v9 == (unsigned __int8)byte_98A1B0[dword_5641C8 + (signed __int64)(signed int)v8] )\n  {\n    v10 = v8 + dword_5641C8;\n    if ( (unsigned int)sub_4083A0((signed int)v8 + dword_5641C8) != 1 )\n    {\n      LODWORD(v8) = *v3;\n      v9 = 3 - *(_DWORD *)(v4 + 1200);\n      goto LABEL_27;\n    }\nLABEL_29:\n    v7 = 1;\n    sub_408410(v10, 1, (unsigned __int64)v3);\n    return v7;\n  }\nLABEL_27:\n  if ( v9 == (unsigned __int8)byte_98A1B0[dword_5641CC + (signed __int64)(signed int)v8] )\n  {\n    v10 = v8 + dword_5641CC;\n    if ( (unsigned int)sub_4083A0((signed int)v8 + dword_5641CC) == 1 )\n      goto LABEL_29;\n  }\n  return v7;\n}\n", 
            "funcStartAddr": "0x433230L", 
            "funcEndAddr": "0x433549L", 
            "funcName": "sub_433230"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_433550(unsigned int a1, unsigned int a2, __int64 a3, unsigned int a4)\n{\n  unsigned int v4; // ebx\n  __int64 v5; // r13\n  unsigned int v6; // er12\n  int v7; // eax\n  signed int v8; // edi\n  signed int v9; // er14\n  int v10; // ecx\n  char v11; // dl\n  unsigned int v12; // ebp\n  unsigned int v13; // er14\n  _BOOL8 v14; // rbx\n\n  v4 = a4;\n  v5 = a3;\n  v6 = a1;\n  v7 = *(_DWORD *)(a3 + 120);\n  v8 = 0;\n  v9 = 0;\n  v10 = *(_DWORD *)(a3 + 120) & 0x10;\n  if ( v10 )\n    goto LABEL_5;\n  v11 = *(_BYTE *)(qword_877C30 + (signed int)v6 + 35408);\n  v12 = 0;\n  if ( v11 )\n  {\n    if ( v11 == 1 )\n      return v12;\n    v9 = 1;\nLABEL_5:\n    if ( !(*(_BYTE *)(v5 + 152) & 1) )\n      goto LABEL_11;\n    goto LABEL_6;\n  }\n  v9 = 0;\n  if ( !(*(_BYTE *)(v5 + 152) & 1) )\n  {\nLABEL_11:\n    if ( !(v9 | v10) )\n      goto LABEL_15;\nLABEL_12:\n    if ( !(v7 & 0x20) )\n    {\nLABEL_20:\n      if ( v8\n        || !(*(_DWORD *)(v5 + 152) & 1)\n        || (v12 = 0, (*(unsigned int (__fastcall **)(_QWORD, _QWORD, _QWORD, _QWORD))(v5 + 168))(v4, v6, a2, 0LL)) )\n      {\n        v12 = 1;\n      }\n      return v12;\n    }\nLABEL_13:\n    if ( !(unsigned int)sub_43F100(v6, 3 - a2) )\n      return 0;\n    goto LABEL_20;\n  }\nLABEL_6:\n  if ( *(float *)(v5 + 180) >= 0.45 )\n    goto LABEL_11;\n  v12 = 0;\n  if ( !(*(unsigned int (__fastcall **)(_QWORD, _QWORD, _QWORD, _QWORD))(v5 + 168))(v4, v6, a2, 0LL) )\n    return v12;\n  v7 = *(_DWORD *)(v5 + 120);\n  v8 = 1;\n  if ( v9 | *(_DWORD *)(v5 + 120) & 0x10 )\n    goto LABEL_12;\nLABEL_15:\n  v13 = v4;\n  v12 = 0;\n  LODWORD(v14) = 0;\n  if ( (unsigned int)sub_406880(v6, a2, \"owl_safe_move\", 0, 0, 0) )\n  {\n    v14 = (unsigned int)sub_43B050(v6, 0LL) != 5;\n    *(_DWORD *)(qword_877C30 + 35404) = 0;\n    sub_407030();\n  }\n  *(_BYTE *)(qword_877C30 + (signed int)v6 + 35408) = v14 + 1;\n  if ( (_DWORD)v14 )\n  {\n    v4 = v13;\n    if ( (unsigned int)sub_407B30(v6, a2) )\n    {\n      if ( !(*(_DWORD *)(v5 + 120) & 0x20) )\n        goto LABEL_20;\n      goto LABEL_13;\n    }\n  }\n  return v12;\n}\n", 
            "funcStartAddr": "0x433550L", 
            "funcEndAddr": "0x4336fbL", 
            "funcName": "sub_433550"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_433700(__int64 a1, __int64 *a2, _QWORD *a3, int a4, unsigned __int8 *a5, int *a6, int *a7)\n{\n  int *v7; // rbx\n  int v8; // er13\n  int v9; // er12\n  int v10; // er14\n  unsigned int v11; // er15\n  __int64 v12; // rsi\n  __int64 *v13; // rcx\n  __int64 v14; // rsi\n  int v15; // eax\n  unsigned int v16; // ebp\n  int v17; // eax\n  __int64 v19; // [rsp+10h] [rbp-B8h]\n  _QWORD *v20; // [rsp+18h] [rbp-B0h]\n  __int64 *v21; // [rsp+20h] [rbp-A8h]\n  __int64 v22; // [rsp+28h] [rbp-A0h]\n  __int64 v23; // [rsp+30h] [rbp-98h]\n  __int64 v24; // [rsp+38h] [rbp-90h]\n  __int64 v25; // [rsp+40h] [rbp-88h]\n  int v26; // [rsp+48h] [rbp-80h]\n  __int64 v27; // [rsp+50h] [rbp-78h]\n  __int64 v28; // [rsp+58h] [rbp-70h]\n  __int64 v29; // [rsp+60h] [rbp-68h]\n  __int64 v30; // [rsp+70h] [rbp-58h]\n  __int64 v31; // [rsp+78h] [rbp-50h]\n  __int64 v32; // [rsp+80h] [rbp-48h]\n\n  v7 = a6;\n  v8 = a4;\n  v20 = a3;\n  v22 = qword_88C238;\n  v9 = dword_88C22C;\n  v10 = *(_DWORD *)(a1 + 1200);\n  qword_88C238 = 0LL;\n  dword_88C22C = 0;\n  v21 = a2;\n  v19 = (__int64)a5;\n  sub_431930(a1, 0LL, a4, a2, a5, a6, a7);\n  dword_877C4C = 0;\n  memset(byte_877C50, 0, 0x190uLL);\n  if ( dword_565C78 >= 9 )\n  {\n    v11 = 3 - v10;\n    if ( v8 )\n    {\n      if ( (signed int)sub_4263B0(v19) < 2 )\n        goto LABEL_7;\n      v12 = v11;\n      v13 = v21;\n    }\n    else\n    {\n      v23 = -4294967296LL;\n      v24 = 0LL;\n      v25 = 2LL;\n      v27 = -4294967296LL;\n      v28 = 0LL;\n      v29 = 2LL;\n      v30 = -4294967296LL;\n      v31 = 0LL;\n      v32 = 2LL;\n      v13 = &v23;\n      v12 = v11;\n    }\n    sub_41EFF0((__int64)sub_432860, v12, (__int64)&unk_5DB230, (__int64)v13, a1);\n  }\nLABEL_7:\n  if ( (dword_88C264 & 6) == 6 )\n  {\n    v14 = (unsigned int)*v7;\n    sub_433F90((unsigned __int64)\"owl: eyemin=%d matches_found=%d\\n\");\n  }\n  v15 = *v7 - dword_877C4C;\n  if ( *v7 < dword_877C4C )\n    v15 = 0;\n  *v7 = v15;\n  qword_88C238 = v22;\n  dword_88C22C = v9;\n  if ( *v7 > 1 )\n    goto LABEL_12;\n  if ( (*v7 != 1 || (signed int)sub_426330(v19) <= 3)\n    && (dword_98A7F4 <= dword_98A7E4 || (signed int)sub_426330(v19) < 2 || dword_877C4C) )\n  {\n    v16 = 0;\n    if ( !v8 )\n    {\n      if ( (v17 = *v7 + dword_877C4C, v17 > 1)\n        || v17 == 1 && (signed int)sub_426330(v19) > 3\n        || dword_98A7F4 > dword_98A7E4 && (signed int)sub_426330(v19) >= 2 )\n      {\n        v16 = 0;\n        sub_432D00(v21, v26, SHIDWORD(v23), v24, 2, 0, 0);\n      }\n    }\n  }\n  else\n  {\n    if ( *v7 >= 2 )\n    {\nLABEL_12:\n      *v20 = \"2 or more secure eyes\";\n      return 1;\n    }\n    if ( *v7 != 1 || (signed int)sub_426330(v19) < 4 )\n    {\n      if ( dword_98A7F4 <= dword_98A7E4 || (signed int)sub_426330(v19) < 2 || dword_877C4C )\n        sub_4340E0(\"engine/owl.c\", 2289LL, \"0\", 0xFFFFFFFFLL, 0xFFFFFFFFLL);\n      *v20 = \"getting deep, looks lively\";\n      v16 = 1;\n    }\n    else\n    {\n      *v20 = \"1 secure eye, likely >= 4\";\n      v16 = 1;\n    }\n  }\n  return v16;\n}\n", 
            "funcStartAddr": "0x433700L", 
            "funcEndAddr": "0x4339f6L", 
            "funcName": "sub_433700"
        }, 
        {
            "decompiledFuncCode": "char *__fastcall sub_433A00(int a1, __int64 a2, __int64 a3, int a4, __int64 a5)\n{\n  __int64 v5; // rbx\n  int v6; // er15\n  __int64 v7; // r14\n  signed int v8; // ecx\n  __int64 v9; // rsi\n  char *result; // rax\n  signed __int64 v11; // rsi\n  signed __int64 v12; // rdx\n\n  v5 = a5;\n  v6 = a4;\n  v7 = a3;\n  v8 = *(_DWORD *)(a5 + 4);\n  v9 = *(signed int *)(a5 + 16);\n  if ( v8 >= (signed int)v9 )\n  {\n    v11 = v9 + 100;\n    *(_DWORD *)(a5 + 16) = v11;\n    result = (char *)realloc(*(void **)(a5 + 24), 16 * v11);\n    *(_QWORD *)(v5 + 24) = result;\n    v8 = *(_DWORD *)(v5 + 4);\n  }\n  else\n  {\n    result = *(char **)(a5 + 24);\n  }\n  v12 = 16LL * v8;\n  *(_DWORD *)&result[v12] = dword_94A490[8 * *(signed int *)(v7 + 52) + v6] + a1;\n  *(_QWORD *)&result[v12 + 8] = v7;\n  *(_DWORD *)&result[v12 + 4] = v6;\n  *(_DWORD *)(v5 + 4) = v8 + 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x433a00L", 
            "funcEndAddr": "0x433a77L", 
            "funcName": "sub_433A00"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_433A80(FILE *a1, __m128 a2, __m128 a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __int64 a10, __int64 a11, __int64 a12, __int64 a13, __int64 a14)\n{\n  __int64 v15; // [rsp+30h] [rbp-A8h]\n  __int64 v16; // [rsp+38h] [rbp-A0h]\n  __int64 v17; // [rsp+40h] [rbp-98h]\n  __int64 v18; // [rsp+48h] [rbp-90h]\n  __m128 v19; // [rsp+50h] [rbp-88h]\n  __m128 v20; // [rsp+60h] [rbp-78h]\n  __m128 v21; // [rsp+70h] [rbp-68h]\n  __m128 v22; // [rsp+80h] [rbp-58h]\n  __m128 v23; // [rsp+90h] [rbp-48h]\n  __m128 v24; // [rsp+A0h] [rbp-38h]\n  __m128 v25; // [rsp+B0h] [rbp-28h]\n  __m128 v26; // [rsp+C0h] [rbp-18h]\n\n  v15 = a11;\n  v16 = a12;\n  v17 = a13;\n  v18 = a14;\n  v19 = a2;\n  v20 = a3;\n  v21 = a4;\n  v22 = a5;\n  v23 = a6;\n  v24 = a7;\n  v25 = a8;\n  v26 = a9;\n  return sub_433B10(a1);\n}\n", 
            "funcStartAddr": "0x433a80L", 
            "funcEndAddr": "0x433b0bL", 
            "funcName": "sub_433A80"
        }, 
        {
            "decompiledFuncCode": "int __usercall sub_433B10@<eax>(FILE *stream@<rdi>, __int64 a2@<rax>, signed int *a3@<rdx>, char *a4@<rsi>)\n{\n  signed int *v4; // rbx\n  char *v5; // r12\n  FILE *v6; // r14\n  int v7; // edi\n  _BYTE *v8; // r15\n  char v9; // dl\n  _BYTE *v10; // r12\n  unsigned __int64 v11; // rcx\n  signed int *v12; // rax\n  char v13; // dl\n  unsigned __int64 v14; // rax\n  __int64 v15; // rdx\n  unsigned int v16; // edx\n  unsigned int *v17; // rcx\n  unsigned int *v18; // rax\n  unsigned int v19; // ecx\n  const char *v20; // rsi\n  const char *v21; // rsi\n  FILE *v22; // rdi\n  unsigned __int64 v23; // rcx\n  signed int *v24; // rax\n  unsigned __int64 v25; // rcx\n  _QWORD *v26; // rax\n  unsigned __int64 v27; // rcx\n  int *v28; // rax\n  unsigned __int64 v29; // rcx\n  unsigned int *v30; // rax\n  unsigned __int64 v31; // rcx\n  double *v32; // rax\n  unsigned __int64 v33; // rcx\n  const char **v34; // rax\n  const char *v35; // rdi\n  unsigned __int64 v36; // rcx\n  unsigned int *v37; // rax\n  unsigned __int64 v38; // rax\n  __int64 v39; // rdx\n  __int64 v40; // rdx\n  const char *v41; // rsi\n  __int64 v42; // rdx\n  FILE *v43; // rdi\n  signed int v44; // ecx\n  unsigned __int64 v45; // rdx\n  const char *v46; // rsi\n  __int64 v48; // [rsp+0h] [rbp-38h]\n\n  v48 = a2;\n  v4 = a3;\n  v5 = a4;\n  v6 = stream;\n  if ( *a4 != 37 || a4[1] != 111 )\n  {\n    if ( dword_98A7F4 > 0 )\n      LODWORD(a2) = fprintf(stream, \"%.*s\", (unsigned int)(2 * dword_98A7F4), \"                                \", v48);\n  }\n  else\n  {\n    v5 = a4 + 2;\n  }\n  while ( 1 )\n  {\n    while ( 1 )\n    {\n      v7 = *v5;\n      if ( v7 != 37 )\n        break;\n      v8 = v5 + 1;\n      switch ( v5[1] )\n      {\n        case 49:\n          v9 = v5[2];\n          v10 = v5 + 2;\n          if ( ((unsigned __int8)v9 | 0x20) != 109 )\n          {\n            v41 = \"\\n\\nUnknown format string '1%c'\\n\";\n            goto LABEL_73;\n          }\n          v11 = *v4;\n          if ( v11 > 0x28 )\n          {\n            v12 = (signed int *)*((_QWORD *)v4 + 1);\n            *((_QWORD *)v4 + 1) = v12 + 2;\n          }\n          else\n          {\n            v12 = (signed int *)(*((_QWORD *)v4 + 2) + v11);\n            *v4 = v11 + 8;\n          }\n          v42 = *v12;\n          if ( *v12 )\n          {\n            if ( (unsigned int)v42 > 0x1A4 || byte_98A1B0[v42] == 3 )\n            {\n              v41 = \"[%d]\";\n              v43 = v6;\n              goto LABEL_74;\n            }\n            v44 = v42 - 20 * (((unsigned __int64)(1717986919 * v42) >> 63) + (1717986919 * v42 >> 35));\n            LOBYTE(v48) = v44 - (v44 < 9) + 65;\n            v45 = dword_565C68\n                + ((unsigned __int64)(-1717986919 * v42) >> 63)\n                + (unsigned int)(-1717986919 * v42 >> 35)\n                + 1;\n            if ( *v10 == 109 )\n              v46 = \"%d\";\n            else\n              v46 = \"%-2d\";\n            sprintf((char *)&v48 + 1, v46, v45, v48);\n            LODWORD(a2) = fputs((const char *)&v48, v6);\n            v5 = v10 + 1;\n          }\n          else\n          {\n            LODWORD(a2) = fwrite(\"PASS\", 4uLL, 1uLL, v6);\n            v5 = v10 + 1;\n          }\n          continue;\n        case 50:\n          v13 = v5[2];\n          v10 = v5 + 2;\n          if ( ((unsigned __int8)v13 | 0x20) == 109 )\n          {\n            v8 = v10;\n            goto LABEL_17;\n          }\n          v41 = \"\\n\\nUnknown format string '2%c'\\n\";\nLABEL_73:\n          v43 = v6;\nLABEL_74:\n          LODWORD(a2) = fprintf(v43, v41, v48);\n          v5 = v10 + 1;\n          continue;\n        case 67:\n          v23 = *v4;\n          if ( v23 > 0x28 )\n          {\n            v24 = (signed int *)*((_QWORD *)v4 + 1);\n            *((_QWORD *)v4 + 1) = v24 + 2;\n          }\n          else\n          {\n            v24 = (signed int *)(*((_QWORD *)v4 + 2) + v23);\n            *v4 = v23 + 8;\n          }\n          v38 = *v24;\n          if ( v38 > 5 )\n            v35 = \"purple?\";\n          else\n            v35 = off_4AF0B0[v38];\n          goto LABEL_64;\n        case 72:\n          v25 = *v4;\n          if ( v25 > 0x28 )\n          {\n            v26 = (_QWORD *)*((_QWORD *)v4 + 1);\n            *((_QWORD *)v4 + 1) = v26 + 1;\n          }\n          else\n          {\n            v26 = (_QWORD *)(*((_QWORD *)v4 + 2) + v25);\n            *v4 = v25 + 8;\n          }\n          LODWORD(a2) = fprintf(v6, off_499011, *v26, v48);\n          goto LABEL_65;\n        case 77:\n        case 109:\nLABEL_17:\n          v14 = *v4;\n          if ( v14 >= 0x29 )\n          {\n            v18 = (unsigned int *)*((_QWORD *)v4 + 1);\n            *((_QWORD *)v4 + 1) = v18 + 2;\n            v16 = *v18;\n          }\n          else\n          {\n            v15 = *((_QWORD *)v4 + 2);\n            *v4 = v14 + 8;\n            v16 = *(_DWORD *)(v15 + v14);\n            if ( (unsigned int)(v14 + 8) <= 0x28 )\n            {\n              v17 = (unsigned int *)(*((_QWORD *)v4 + 2) + (signed int)v14 + 8);\n              *v4 = v14 + 16;\n              goto LABEL_22;\n            }\n          }\n          v17 = (unsigned int *)*((_QWORD *)v4 + 1);\n          *((_QWORD *)v4 + 1) = v17 + 2;\nLABEL_22:\n          v19 = *v17;\n          if ( (v16 & v19) == -1 )\n          {\n            LODWORD(a2) = fwrite(\"PASS\", 4uLL, 1uLL, v6);\n          }\n          else if ( dword_565C68 <= v16 || v19 >= dword_565C68 )\n          {\n            LODWORD(a2) = fprintf(v6, \"[%d,%d]\", v48);\n          }\n          else\n          {\n            BYTE4(v48) = v19 - ((signed int)v19 < 8) + 66;\n            if ( *v8 == 109 )\n              v20 = \"%d\";\n            else\n              v20 = \"%-2d\";\n            sprintf((char *)&v48 + 5, v20, dword_565C68 - v16, v48);\n            v35 = (char *)&v48 + 4;\nLABEL_64:\n            LODWORD(a2) = fputs(v35, v6);\n          }\nLABEL_65:\n          v5 = v8 + 1;\n          break;\n        case 99:\n          v27 = *v4;\n          if ( v27 > 0x28 )\n          {\n            v28 = (int *)*((_QWORD *)v4 + 1);\n            *((_QWORD *)v4 + 1) = v28 + 2;\n          }\n          else\n          {\n            v28 = (int *)(*((_QWORD *)v4 + 2) + v27);\n            *v4 = v27 + 8;\n          }\n          LODWORD(a2) = _IO_putc(*v28, v6);\n          goto LABEL_65;\n        case 100:\n          v29 = *v4;\n          if ( v29 > 0x28 )\n          {\n            v30 = (unsigned int *)*((_QWORD *)v4 + 1);\n            *((_QWORD *)v4 + 1) = v30 + 2;\n          }\n          else\n          {\n            v30 = (unsigned int *)(*((_QWORD *)v4 + 2) + v29);\n            *v4 = v29 + 8;\n          }\n          v39 = *v30;\n          v21 = \"%d\";\n          goto LABEL_59;\n        case 102:\n          v31 = v4[1];\n          if ( v31 > 0xA0 )\n          {\n            v32 = (double *)*((_QWORD *)v4 + 1);\n            *((_QWORD *)v4 + 1) = v32 + 1;\n          }\n          else\n          {\n            v32 = (double *)(*((_QWORD *)v4 + 2) + v31);\n            v4[1] = v31 + 16;\n          }\n          LODWORD(a2) = fprintf(v6, \"%.2f\", *v32, v48);\n          goto LABEL_65;\n        case 115:\n          v33 = *v4;\n          if ( v33 > 0x28 )\n          {\n            v34 = (const char **)*((_QWORD *)v4 + 1);\n            *((_QWORD *)v4 + 1) = v34 + 1;\n          }\n          else\n          {\n            v34 = (const char **)(*((_QWORD *)v4 + 2) + v33);\n            *v4 = v33 + 8;\n          }\n          v35 = *v34;\n          goto LABEL_64;\n        case 120:\n          v36 = *v4;\n          if ( v36 > 0x28 )\n          {\n            v37 = (unsigned int *)*((_QWORD *)v4 + 1);\n            *((_QWORD *)v4 + 1) = v37 + 2;\n          }\n          else\n          {\n            v37 = (unsigned int *)(*((_QWORD *)v4 + 2) + v36);\n            *v4 = v36 + 8;\n          }\n          v40 = *v37;\n          v21 = \"%x\";\nLABEL_59:\n          v22 = v6;\n          goto LABEL_60;\n        default:\n          v21 = \"\\n\\nUnknown format character '%c'\\n\";\n          v22 = v6;\nLABEL_60:\n          LODWORD(a2) = fprintf(v22, v21, v48);\n          goto LABEL_65;\n      }\n    }\n    if ( !(_BYTE)v7 )\n      return a2;\n    LODWORD(a2) = _IO_putc(v7, v6);\n    ++v5;\n  }\n}\n", 
            "funcStartAddr": "0x433b10L", 
            "funcEndAddr": "0x433f87L", 
            "funcName": "sub_433B10"
        }, 
        {
            "decompiledFuncCode": "signed __int64 sub_433F90(char *a1, ...)\n{\n  gcc_va_list va; // [rsp+0h] [rbp-D8h]\n\n  va_start(va, a1);\n  sub_433B10(stderr, 206158430216LL, (signed int *)va, a1);\n  return 1LL;\n}\n", 
            "funcStartAddr": "0x433f90L", 
            "funcEndAddr": "0x434032L", 
            "funcName": "sub_433F90"
        }, 
        {
            "decompiledFuncCode": "int sub_434040(char *a1, ...)\n{\n  gcc_va_list va; // [rsp+0h] [rbp-D8h]\n\n  va_start(va, a1);\n  return sub_433B10(stdout, 206158430216LL, (signed int *)va, a1);\n}\n", 
            "funcStartAddr": "0x434040L", 
            "funcEndAddr": "0x4340ddL", 
            "funcName": "sub_434040"
        }, 
        {
            "decompiledFuncCode": "void __fastcall __noreturn sub_4340E0(__int64 a1, unsigned int a2, __int64 a3, unsigned int a4, unsigned int a5)\n{\n  FILE *v5; // rbx\n  __int64 v6; // rax\n\n  dword_88C268 = 4;\n  sub_433F90(\"%o\\n\\n***assertion failure:\\n%s:%d - %s near %m***\\n\\n\", a1, a2, a3, a4, a5);\n  sub_407180();\n  while ( 1 )\n  {\n    sub_44A610(0LL, a1);\n    if ( dword_98A7F4 <= 0 )\n      break;\n    sub_407030();\n  }\n  v5 = stderr;\n  v6 = sub_493860(0LL);\n  fprintf(v5, \"\\ngnugo %s (seed %d): You stepped on a bug.\\n\", v6, (unsigned int)dword_88C240);\n  if ( (unsigned int)(dword_565C68 - 9) <= 0xA )\n    fwrite(\n      \"Please save this game as an sgf file and mail it to gnugo@gnu.org\\n\"\n      \"If you can, please also include the debug output above this message.\\n\",\n      0x87uLL,\n      1uLL,\n      stderr);\n  fputc(10, stderr);\n  fflush(stderr);\n  fflush(stdout);\n  abort();\n}\n", 
            "funcStartAddr": "0x4340e0L", 
            "funcEndAddr": "0x4341a0L", 
            "funcName": "sub_4340E0"
        }, 
        {
            "decompiledFuncCode": "const char *__fastcall sub_4341A0(unsigned int a1)\n{\n  const char *result; // rax\n\n  if ( a1 > 5 )\n    result = \"purple?\";\n  else\n    result = off_4AF0B0[a1];\n  return result;\n}\n", 
            "funcStartAddr": "0x4341a0L", 
            "funcEndAddr": "0x4341b7L", 
            "funcName": "sub_4341A0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4341C0(signed int a1)\n{\n  int v1; // er9\n  __int64 v2; // rcx\n  _BYTE *v3; // r10\n  unsigned __int8 v4; // dl\n  signed int v5; // esi\n  _BYTE *v6; // r11\n  signed __int64 v7; // rax\n  int v9; // edx\n\n  if ( !byte_87B630 )\n  {\n    v1 = dword_565C68;\n    v2 = 0LL;\n    v3 = &unk_87B641;\n    do\n    {\n      if ( v2 )\n      {\n        v4 = (unsigned int)v2 % 0x14 | 0x40;\n        if ( v4 > 0x48u )\n          v4 = (unsigned int)v2 % 0x14 + 65;\n        *(v3 - 1) = v4;\n        v5 = v1\n           + ((unsigned __int64)(-1717986919LL * (signed int)v2) >> 63)\n           + (-1717986919LL * (signed int)v2 >> 35)\n           + 1;\n        v6 = v3;\n        if ( v5 >= 10 )\n        {\n          v6 = (_BYTE *)(5 * v2 + 8894018);\n          *v3 = v5 / 0xAu + 48;\n        }\n        *v6 = v1\n            + (-1717986919LL * (signed int)v2 < 0)\n            + (unsigned __int64)(-1717986919LL * (signed int)v2 >> 35)\n            + 1\n            - 10\n            * ((1717986919LL\n              * (signed int)(v1\n                           + ((unsigned __int64)(-1717986919LL * (signed int)v2) >> 63)\n                           + (-1717986919LL * (signed int)v2 >> 35)\n                           + 1) < 0)\n             + ((unsigned __int64)(1717986919LL\n                                 * (signed int)(v1\n                                              + ((unsigned __int64)(-1717986919LL * (signed int)v2) >> 63)\n                                              + (-1717986919LL * (signed int)v2 >> 35)\n                                              + 1)) >> 34))\n            + 48;\n        v6[1] = 0;\n      }\n      else\n      {\n        v7 = (signed __int64)(v3 - 1);\n        *(_BYTE *)(v7 + 4) = 0;\n        *(_DWORD *)v7 = 1936941392;\n      }\n      ++v2;\n      v3 += 5;\n    }\n    while ( v2 != 421 );\n    byte_87B630 = 1;\n  }\n  if ( (unsigned int)a1 >= 0x1A5 )\n  {\n    v9 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0((__int64)\"engine/printutils.c\", 0x11Cu, (__int64)\"pos >= 0 && pos < BOARDSIZE\", v9 - 1, a1 - 20 * v9 - 1);\n  }\n  return 5LL * a1 + 8894016;\n}\n", 
            "funcStartAddr": "0x4341c0L", 
            "funcEndAddr": "0x434313L", 
            "funcName": "sub_4341C0"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_434320(int a1, _BYTE *a2)\n{\n  __int64 v2; // rax\n  int v3; // edi\n  char v4; // cl\n  signed int v5; // eax\n  _BYTE *v6; // rsi\n\n  if ( a1 )\n  {\n    v2 = a1;\n    v3 = a1 - 20 * (((unsigned __int64)(1717986919LL * a1) >> 63) + (1717986919LL * a1 >> 35));\n    v4 = v3 + 64;\n    if ( (char)(v3 + 64) > 72 )\n      v4 = v3 + 65;\n    *a2 = v4;\n    v5 = dword_565C68 + ((unsigned __int64)(-1717986919 * v2) >> 63) + (-1717986919 * v2 >> 35) + 1;\n    if ( v5 < 10 )\n    {\n      v6 = a2 + 1;\n    }\n    else\n    {\n      a2[1] = v5 / 0xAu + 48;\n      v6 = a2 + 2;\n    }\n    *v6 = v5 - 10 * ((1717986919LL * v5 < 0) + ((unsigned __int64)(1717986919LL * v5) >> 34)) + 48;\n    v6[1] = 0;\n  }\n  else\n  {\n    a2[4] = 0;\n    *(_DWORD *)a2 = 1936941392;\n  }\n}\n", 
            "funcStartAddr": "0x434320L", 
            "funcEndAddr": "0x4343cbL", 
            "funcName": "sub_434320"
        }, 
        {
            "decompiledFuncCode": "const char *__fastcall sub_4343D0(unsigned int a1)\n{\n  const char *result; // rax\n\n  if ( a1 > 0xC )\n    result = \"ERROR\";\n  else\n    result = off_4AF0E0[a1];\n  return result;\n}\n", 
            "funcStartAddr": "0x4343d0L", 
            "funcEndAddr": "0x4343e7L", 
            "funcName": "sub_4343D0"
        }, 
        {
            "decompiledFuncCode": "const char *__fastcall sub_4343F0(unsigned int a1)\n{\n  const char *result; // rax\n\n  if ( a1 > 0xC )\n    result = \"ERROR\";\n  else\n    result = off_4AF150[a1];\n  return result;\n}\n", 
            "funcStartAddr": "0x4343f0L", 
            "funcEndAddr": "0x434407L", 
            "funcName": "sub_4343F0"
        }, 
        {
            "decompiledFuncCode": "const char *__fastcall sub_434410(unsigned int a1)\n{\n  const char *result; // rax\n\n  if ( a1 > 6 )\n    result = \"ERROR\";\n  else\n    result = off_4AF1C0[a1];\n  return result;\n}\n", 
            "funcStartAddr": "0x434410L", 
            "funcEndAddr": "0x434427L", 
            "funcName": "sub_434410"
        }, 
        {
            "decompiledFuncCode": "const char *__fastcall sub_434430(unsigned int a1)\n{\n  const char *result; // rax\n\n  if ( a1 > 7 )\n    result = \"ERROR\";\n  else\n    result = off_4AF200[a1];\n  return result;\n}\n", 
            "funcStartAddr": "0x434430L", 
            "funcEndAddr": "0x434447L", 
            "funcName": "sub_434430"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_434450(int a1, char *a2, _DWORD *a3, int *a4)\n{\n  int *v4; // r13\n  _DWORD *v5; // r14\n  char *v6; // rbx\n  __int64 v7; // rbp\n  const unsigned __int16 **v8; // rax\n  const unsigned __int16 *v9; // r12\n  const __int32_t **v10; // rax\n  const __int32_t *v11; // rsi\n  __int32_t v12; // ecx\n  int v13; // eax\n  int v14; // eax\n  int v16; // ecx\n\n  v4 = a4;\n  v5 = a3;\n  v6 = a2;\n  v7 = *a2;\n  if ( !*a2 )\n    return 0LL;\n  v8 = __ctype_b_loc();\n  v9 = *v8;\n  if ( !((*v8)[v7] & 0x400) )\n    return 0LL;\n  v10 = __ctype_tolower_loc();\n  v11 = *v10;\n  v12 = (*v10)[v7];\n  v13 = v12 - 97;\n  *v4 = v12 - 97;\n  if ( (unsigned int)(*v6 + 128) <= 0x17F )\n  {\n    if ( v11[*v6] < 105 )\n    {\nLABEL_5:\n      if ( v13 < 0 )\n        return 0LL;\n      goto LABEL_6;\n    }\n  }\n  else if ( *v6 < 105 )\n  {\n    goto LABEL_5;\n  }\n  v16 = v12 - 98;\n  *v4 = v16;\n  v13 = v16;\n  if ( v16 < 0 )\n    return 0LL;\nLABEL_6:\n  if ( v13 < a1 && v9[v6[1]] & 0x800 )\n  {\n    v14 = strtol(v6 + 1, 0LL, 10);\n    *v5 = a1 - v14;\n    return (a1 - v14 >= 0) & (unsigned __int8)(v14 > 0);\n  }\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x434450L", 
            "funcEndAddr": "0x434512L", 
            "funcName": "sub_434450"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_434520(__int64 a1, __int64 a2, char *a3)\n{\n  char *v3; // rax\n  bool v4; // zf\n  char *v5; // rdx\n  int v6; // ebx\n  __int64 result; // rax\n  char v8; // [rsp+Ch] [rbp-Ch]\n\n  v3 = a3;\n  v4 = a3 == 0LL;\n  v5 = &v8;\n  if ( !v4 )\n    v5 = v3;\n  dword_87BE7C = 0;\n  *(_DWORD *)v5 = 0;\n  v6 = dword_88C268;\n  if ( dword_88C268 > 0 )\n    --dword_88C268;\n  result = sub_434570(a1, a2, v5, 0LL, 0LL, 0LL);\n  dword_88C268 = v6;\n  return result;\n}\n", 
            "funcStartAddr": "0x434520L", 
            "funcEndAddr": "0x434570L", 
            "funcName": "sub_434520"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_434570(int a1, int a2, _DWORD *a3, unsigned int a4, int a5, unsigned int a6)\n{\n  unsigned int v6; // ebp\n  int v7; // er15\n  _DWORD *v8; // r14\n  int v9; // er13\n  unsigned __int8 v10; // bl\n  char v11; // al\n  unsigned int v12; // er15\n  unsigned int v13; // er8\n  const char *v14; // r9\n  signed int v15; // ecx\n  signed int v16; // esi\n  __int64 v17; // rax\n  __int64 v18; // rax\n  __int64 v19; // rax\n  int v20; // ecx\n  int v21; // eax\n  __int64 v22; // rbp\n  __int64 v23; // r15\n  int v24; // eax\n  __int64 v25; // rbp\n  int v26; // ebx\n  __int64 v27; // rax\n  bool v28; // zf\n  bool v29; // sf\n  unsigned __int8 v30; // of\n  __int64 v31; // rax\n  int v33; // ebx\n  unsigned int v34; // [rsp+Ch] [rbp-62Ch]\n  unsigned int v35; // [rsp+10h] [rbp-628h]\n  unsigned int v36; // [rsp+14h] [rbp-624h]\n  __int64 v37; // [rsp+18h] [rbp-620h]\n  __int64 v38; // [rsp+20h] [rbp-618h]\n  int v39; // [rsp+2Ch] [rbp-60Ch]\n  unsigned int v40; // [rsp+30h] [rbp-608h]\n  int v41; // [rsp+34h] [rbp-604h]\n  __int64 v42; // [rsp+38h] [rbp-600h]\n  __int64 v43; // [rsp+40h] [rbp-5F8h]\n  int v44; // [rsp+48h] [rbp-5F0h]\n  unsigned int v45; // [rsp+4Ch] [rbp-5ECh]\n  unsigned int v46; // [rsp+50h] [rbp-5E8h]\n  int v47; // [rsp+54h] [rbp-5E4h]\n  unsigned int v48; // [rsp+58h] [rbp-5E0h]\n  unsigned int v49; // [rsp+5Ch] [rbp-5DCh]\n  int v50[374]; // [rsp+60h] [rbp-5D8h]\n\n  v35 = a1;\n  v6 = a6;\n  v7 = a5;\n  v8 = a3;\n  v9 = a2;\n  v36 = a2;\n  v10 = byte_98A1B0[a1];\n  v41 = 0;\n  v38 = 0LL;\n  v11 = v10;\n  if ( a3 )\n  {\n    *a3 = 0;\n    v11 = byte_98A1B0[a1];\n  }\n  ++dword_87BE7C;\n  ++dword_87BE80;\n  if ( !v11 || !byte_98A1B0[a2] )\n  {\n    if ( qword_88C238 )\n    {\n      v12 = 0;\n      v13 = 0;\n      v14 = \"one string already captured\";\nLABEL_10:\n      sub_40F260((__int64)\"recursive_connect2\", a1, a2, 0, v13, (__int64)v14);\n      return v12;\n    }\n    return 0;\n  }\n  v40 = a4;\n  if ( (unsigned int)sub_40B5B0(a1, a2) )\n  {\n    if ( !qword_88C238 )\n      return 5;\n    v12 = 5;\n    v13 = 5;\n    v14 = \"already connected\";\n    goto LABEL_10;\n  }\n  if ( dword_87BE7C > dword_565AF0 )\n  {\n    if ( qword_88C238 )\n    {\n      v12 = 0;\n      v13 = 0;\n      v14 = \"connection node limit reached\";\n      goto LABEL_10;\n    }\n    return 0;\n  }\n  if ( dword_98A7F4 > dword_565AF4 )\n  {\n    if ( qword_88C238 )\n    {\n      v12 = 0;\n      v13 = 0;\n      v14 = \"connection depth limit reached\";\n      goto LABEL_10;\n    }\n    return 0;\n  }\n  v15 = a2;\n  v16 = a1;\n  if ( dword_98A7F4 <= dword_98A76C )\n  {\n    v15 = v9;\n    v16 = a1;\n    if ( !v6 )\n    {\n      v15 = v9;\n      v16 = a1;\n      if ( dword_565C6C & 0x800 )\n      {\n        if ( (unsigned int)sub_40EFF0(5, v40, v7, (int *)&v35, (int *)&v36, &v38) )\n        {\n          v17 = v38;\n          if ( v8 && *(_DWORD *)(v38 + 4) & 0xF000000 )\n            *v8 = (*(_DWORD *)(v38 + 4) >> 10) & 0x3FF;\n          v18 = v17 + 4;\n          if ( qword_88C238 )\n          {\n            sub_40F260(\n              (__int64)\"recursive_connect2\",\n              a1,\n              v9,\n              (*(_DWORD *)v18 >> 10) & 0x3FF,\n              (*(_DWORD *)v18 >> 24) & 0xF,\n              (__int64)\"cached\");\n            v18 = v38 + 4;\n          }\n          return *(_BYTE *)(v18 + 3) & 0xF;\n        }\n        v16 = v35;\n        v15 = v36;\n      }\n    }\n  }\n  v43 = qword_88C238;\n  LODWORD(v42) = dword_88C22C;\n  LODWORD(v37) = v16;\n  v39 = v15;\n  if ( (unsigned int)sub_40A360(v16, v15, (int *)&v34) )\n  {\n    if ( !qword_88C238 )\n    {\nLABEL_32:\n      if ( v8 )\n        *v8 = v34;\n      v19 = v38;\n      v12 = 5;\n      if ( !v38 )\n        return v12;\n      v20 = (*(_DWORD *)(v38 + 4) & 0x3FF) + ((v34 << 10) & 0xFFC00) + 620756992;\n      goto LABEL_36;\n    }\nLABEL_31:\n    sub_40F260((__int64)\"recursive_connect2\", a1, v9, v34, 5u, (__int64)\"trivial connection\");\n    goto LABEL_32;\n  }\n  v46 = v7;\n  v45 = v6;\n  v21 = sub_40A7D0(v37, (__int64)v50);\n  qword_88C238 = 0LL;\n  dword_88C22C = 0;\n  if ( v21 > 0 )\n  {\n    v22 = v21;\n    v23 = 0LL;\n    while ( !(unsigned int)sub_40B720(v50[v23], v39) || (unsigned int)sub_43B050((unsigned int)v50[v23], &v34) != 5 )\n    {\n      if ( ++v23 >= v22 )\n        goto LABEL_42;\n    }\n    qword_88C238 = v43;\n    dword_88C22C = v42;\n    if ( !v43 )\n      goto LABEL_32;\n    goto LABEL_31;\n  }\nLABEL_42:\n  qword_88C238 = v43;\n  dword_88C22C = v42;\n  LODWORD(v43) = v10;\n  v24 = sub_4352E0(v35, v36, v10, v50, &v41);\n  v44 = v24;\n  if ( v24 <= 0 )\n  {\n    v12 = 0;\n    v37 = 0LL;\nLABEL_68:\n    if ( v44 || v41 > 999 )\n    {\n      if ( v12 )\n      {\n        v33 = v37;\n        if ( qword_88C238 )\n          sub_40F260((__int64)\"recursive_connect2\", a1, v9, v37, v12, (__int64)\"saved move\");\n        if ( v8 )\n          *v8 = v33;\n        v19 = v38;\n        if ( !v38 )\n          return v12;\n        v20 = (*(_DWORD *)(v38 + 4) & 0x3FF) + (((v12 & 0xF) << 24) | (v33 << 10) & 0xFFC00) + 0x20000000;\n      }\n      else\n      {\n        if ( qword_88C238 )\n          sub_40F260((__int64)\"recursive_connect2\", a1, v9, 0, 0, 0LL);\n        v19 = v38;\n        v12 = 0;\n        if ( !v38 )\n          return v12;\n        v20 = *(_DWORD *)(v38 + 4) & 0x3FF | 0x20000000;\n      }\n    }\n    else\n    {\n      if ( qword_88C238 )\n        sub_40F260((__int64)\"recursive_connect2\", a1, v9, 0, 5u, (__int64)\"no move, probably connected\");\n      if ( v8 )\n        *v8 = 0;\n      v19 = v38;\n      v12 = 5;\n      if ( !v38 )\n        return v12;\n      v20 = *(_DWORD *)(v38 + 4) & 0x3FF | 0x25000000;\n    }\nLABEL_36:\n    *(_DWORD *)(v19 + 4) = v20;\n    return v12;\n  }\n  v42 = v24;\n  v25 = 0LL;\n  v37 = 0LL;\n  v12 = 0;\n  while ( 1 )\n  {\n    v34 = v50[v25];\n    if ( (unsigned int)sub_407EA0(\n                         v34,\n                         v43,\n                         \"recursive_connect2\",\n                         v35,\n                         v40,\n                         v46,\n                         &v49,\n                         &v48,\n                         &v47,\n                         (dword_98A7F4 <= dword_98A784) & (unsigned __int8)(v12 == 0)) )\n      break;\nLABEL_57:\n    if ( ++v25 >= v42 )\n      goto LABEL_68;\n  }\n  v39 = v47;\n  v26 = sub_434C00(v35, v36, 0LL, v49, v48, v45);\n  if ( v39 )\n  {\n    if ( v26 != 5 )\n      v12 = 1;\n    v27 = v37;\n    if ( v26 != 5 )\n      v27 = v34;\n    v37 = v27;\n    sub_407030();\n    goto LABEL_57;\n  }\n  sub_407030();\n  if ( v26 )\n  {\n    v30 = __OFSUB__(5 - v26, v12);\n    v28 = 5 - v26 == v12;\n    v29 = (signed int)(5 - v26 - v12) < 0;\n    if ( 5 - v26 >= (signed int)v12 )\n      v12 = 5 - v26;\n    v31 = v37;\n    if ( !((unsigned __int8)(v29 ^ v30) | v28) )\n      v31 = v34;\n    v37 = v31;\n    goto LABEL_57;\n  }\n  if ( qword_88C238 )\n    sub_40F260((__int64)\"recursive_connect2\", a1, v9, v34, 5u, (__int64)\"connection effective\");\n  if ( v8 )\n    *v8 = v34;\n  if ( v38 )\n    *(_DWORD *)(v38 + 4) = (*(_DWORD *)(v38 + 4) & 0x3FF) + ((v34 << 10) & 0xFFC00) + 620756992;\n  return 5;\n}\n", 
            "funcStartAddr": "0x434570L", 
            "funcEndAddr": "0x434ba2L", 
            "funcName": "sub_434570"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_434BB0(__int64 a1, __int64 a2, char *a3)\n{\n  char *v3; // rax\n  bool v4; // zf\n  char *v5; // rdx\n  int v6; // ebx\n  __int64 result; // rax\n  char v8; // [rsp+Ch] [rbp-Ch]\n\n  v3 = a3;\n  v4 = a3 == 0LL;\n  v5 = &v8;\n  if ( !v4 )\n    v5 = v3;\n  dword_87BE7C = 0;\n  *(_DWORD *)v5 = 0;\n  v6 = dword_88C268;\n  if ( dword_88C268 > 0 )\n    --dword_88C268;\n  result = sub_434C00(a1, a2, v5, 0LL, 0LL, 0LL);\n  dword_88C268 = v6;\n  return result;\n}\n", 
            "funcStartAddr": "0x434bb0L", 
            "funcEndAddr": "0x434c00L", 
            "funcName": "sub_434BB0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_434C00(int a1, int a2, _DWORD *a3, unsigned int a4, int a5, unsigned int a6)\n{\n  int v6; // er13\n  unsigned int v7; // ebp\n  _DWORD *v8; // rbx\n  int v9; // er12\n  unsigned int v10; // er13\n  unsigned int v11; // er8\n  const char *v12; // r9\n  unsigned int v13; // ebp\n  __int64 v14; // rax\n  __int64 v15; // rax\n  __int64 v16; // r13\n  int v17; // ebx\n  int v18; // eax\n  int v19; // eax\n  int v20; // ecx\n  const char *v21; // r9\n  __int64 v22; // rbp\n  unsigned int v23; // er13\n  int v24; // eax\n  int v25; // eax\n  __int64 v26; // rax\n  int v27; // ecx\n  int v28; // eax\n  __int64 v29; // r12\n  int v30; // ebp\n  int v31; // ebx\n  __int64 v32; // rax\n  bool v33; // zf\n  bool v34; // sf\n  unsigned __int8 v35; // of\n  __int64 v36; // rax\n  _DWORD *v38; // rbx\n  int v39; // ebp\n  unsigned int v40; // [rsp+Ch] [rbp-62Ch]\n  unsigned int v41; // [rsp+10h] [rbp-628h]\n  unsigned int v42; // [rsp+14h] [rbp-624h]\n  __int64 v43; // [rsp+18h] [rbp-620h]\n  unsigned int v44; // [rsp+24h] [rbp-614h]\n  __int64 v45; // [rsp+28h] [rbp-610h]\n  _DWORD *v46; // [rsp+30h] [rbp-608h]\n  unsigned int v47; // [rsp+38h] [rbp-600h]\n  unsigned int v48; // [rsp+3Ch] [rbp-5FCh]\n  int v49; // [rsp+40h] [rbp-5F8h]\n  int v50; // [rsp+44h] [rbp-5F4h]\n  unsigned int v51; // [rsp+48h] [rbp-5F0h]\n  int v52; // [rsp+4Ch] [rbp-5ECh]\n  int v53; // [rsp+50h] [rbp-5E8h]\n  unsigned int v54; // [rsp+54h] [rbp-5E4h]\n  __int64 v55; // [rsp+58h] [rbp-5E0h]\n  int v56[374]; // [rsp+60h] [rbp-5D8h]\n\n  v41 = a1;\n  v6 = a5;\n  v7 = a4;\n  v8 = a3;\n  v42 = a2;\n  ++dword_87BE7C;\n  ++dword_87BE80;\n  v9 = (unsigned __int8)byte_98A1B0[a1];\n  v49 = 0;\n  v43 = 0LL;\n  if ( a3 )\n  {\n    *a3 = 0;\n    if ( !byte_98A1B0[a1] )\n      goto LABEL_9;\n  }\n  else if ( !(_BYTE)v9 )\n  {\nLABEL_9:\n    if ( !qword_88C238 )\n      return 5;\n    v10 = 5;\n    v11 = 5;\n    v12 = \"one string already captured\";\nLABEL_11:\n    sub_40F260((__int64)\"recursive_disconnect2\", a1, a2, 0, v11, (__int64)v12);\n    return v10;\n  }\n  if ( !byte_98A1B0[a2] )\n    goto LABEL_9;\n  v48 = a6;\n  if ( (unsigned int)sub_40B5B0(a1, a2) )\n  {\n    if ( !qword_88C238 )\n      return 0;\n    v10 = 0;\n    v11 = 0;\n    v12 = \"already connected\";\n    goto LABEL_11;\n  }\n  if ( dword_87BE7C > dword_565AF0 )\n  {\n    if ( !qword_88C238 )\n      return 5;\n    v10 = 5;\n    v11 = 5;\n    v12 = \"connection node limit reached\";\n    goto LABEL_11;\n  }\n  if ( dword_98A7F4 > dword_565AF4 )\n  {\n    if ( !qword_88C238 )\n      return 5;\n    v10 = 5;\n    v11 = 5;\n    v12 = \"connection depth limit reached\";\n    goto LABEL_11;\n  }\n  v44 = v7;\n  v46 = v8;\n  v13 = a1;\n  if ( dword_98A7F4 <= dword_98A76C )\n  {\n    v13 = a1;\n    if ( dword_565C6C & 0x1000 )\n    {\n      if ( (unsigned int)sub_40EFF0(6, v44, v6, (int *)&v41, (int *)&v42, &v43) )\n      {\n        v14 = v43;\n        if ( v46 && *(_DWORD *)(v43 + 4) & 0xF000000 )\n          *v46 = (*(_DWORD *)(v43 + 4) >> 10) & 0x3FF;\n        v15 = v14 + 4;\n        if ( qword_88C238 )\n        {\n          sub_40F260(\n            (__int64)\"recursive_disconnect2\",\n            a1,\n            a2,\n            (*(_DWORD *)v15 >> 10) & 0x3FF,\n            (*(_DWORD *)v15 >> 24) & 0xF,\n            (__int64)\"cached\");\n          v15 = v43 + 4;\n        }\n        return *(_BYTE *)(v15 + 3) & 0xF;\n      }\n      v13 = v41;\n    }\n  }\n  v47 = v6;\n  v16 = qword_88C238;\n  v17 = dword_88C22C;\n  v18 = sub_4083A0(v13);\n  qword_88C238 = 0LL;\n  dword_88C22C = 0;\n  if ( v18 == 1 )\n  {\n    v19 = sub_43B050(v13, &v40);\n  }\n  else\n  {\n    if ( v18 != 2 )\n    {\n      qword_88C238 = v16;\n      dword_88C22C = v17;\n      goto LABEL_37;\n    }\n    v19 = sub_43FAB0(v13, &v40);\n  }\n  qword_88C238 = v16;\n  dword_88C22C = v17;\n  if ( v19 == 5 )\n  {\n    if ( v16 )\n    {\n      v20 = v40;\n      v21 = \"first string capturable\";\nLABEL_44:\n      sub_40F260((__int64)\"recursive_disconnect2\", a1, a2, v20, 5u, (__int64)v21);\n      goto LABEL_45;\n    }\n    goto LABEL_45;\n  }\nLABEL_37:\n  v22 = v16;\n  v23 = v42;\n  v24 = sub_4083A0(v42);\n  qword_88C238 = 0LL;\n  dword_88C22C = 0;\n  if ( v24 == 1 )\n  {\n    v25 = sub_43B050(v23, &v40);\nLABEL_41:\n    qword_88C238 = v22;\n    dword_88C22C = v17;\n    if ( v25 == 5 )\n    {\n      if ( v22 )\n      {\n        v20 = v40;\n        v21 = \"second string capturable\";\n        goto LABEL_44;\n      }\nLABEL_45:\n      if ( v46 )\n        *v46 = v40;\n      v26 = v43;\n      v10 = 5;\n      if ( !v43 )\n        return v10;\n      v27 = (*(_DWORD *)(v43 + 4) & 0x3FF) + ((v40 << 10) & 0xFFC00) + 620756992;\n      goto LABEL_49;\n    }\n    goto LABEL_51;\n  }\n  if ( v24 == 2 )\n  {\n    v25 = sub_43FAB0(v23, &v40);\n    goto LABEL_41;\n  }\n  qword_88C238 = v22;\n  dword_88C22C = v17;\nLABEL_51:\n  v51 = 3 - v9;\n  v28 = sub_4352E0(v41, v42, (unsigned int)(3 - v9), v56, &v49);\n  v50 = v28;\n  if ( v28 <= 0 )\n  {\n    v10 = 0;\n    v45 = 0LL;\nLABEL_77:\n    v38 = v46;\n    if ( v50 || v49 < 1000 || !v48 && (unsigned int)sub_434570(v41, v42, 0LL, v44, v47, 1u) )\n    {\n      if ( v10 )\n      {\n        v39 = v45;\n        if ( qword_88C238 )\n          sub_40F260((__int64)\"recursive_disconnect2\", a1, a2, v45, v10, (__int64)\"saved move\");\n        if ( v38 )\n          *v38 = v39;\n        v26 = v43;\n        if ( !v43 )\n          return v10;\n        v27 = (*(_DWORD *)(v43 + 4) & 0x3FF) + (((v10 & 0xF) << 24) | (v39 << 10) & 0xFFC00) + 0x20000000;\n      }\n      else\n      {\n        if ( qword_88C238 )\n          sub_40F260((__int64)\"recursive_disconnect2\", a1, a2, 0, 0, 0LL);\n        v26 = v43;\n        v10 = 0;\n        if ( !v43 )\n          return v10;\n        v27 = *(_DWORD *)(v43 + 4) & 0x3FF | 0x20000000;\n      }\n    }\n    else\n    {\n      if ( qword_88C238 )\n        sub_40F260((__int64)\"recursive_disconnect2\", a1, a2, 0, 5u, (__int64)\"no move, probably disconnected\");\n      if ( v38 )\n        *v38 = 0;\n      v26 = v43;\n      v10 = 5;\n      if ( !v43 )\n        return v10;\n      v27 = *(_DWORD *)(v43 + 4) & 0x3FF | 0x25000000;\n    }\nLABEL_49:\n    *(_DWORD *)(v26 + 4) = v27;\n    return v10;\n  }\n  v55 = v28;\n  v29 = 0LL;\n  v45 = 0LL;\n  v10 = 0;\n  while ( 1 )\n  {\n    v40 = v56[v29];\n    if ( (unsigned int)sub_407EA0(\n                         v40,\n                         v51,\n                         \"recursive_disconnect2\",\n                         v41,\n                         v44,\n                         v47,\n                         &v54,\n                         &v53,\n                         &v52,\n                         (dword_98A7F4 <= dword_98A784) & (unsigned __int8)(v10 == 0)) )\n      break;\nLABEL_66:\n    if ( ++v29 >= v55 )\n      goto LABEL_77;\n  }\n  v30 = v52;\n  v31 = sub_434570(v41, v42, 0LL, v54, v53, v48);\n  if ( v30 )\n  {\n    if ( v31 != 5 )\n      v10 = 1;\n    v32 = v45;\n    if ( v31 != 5 )\n      v32 = v40;\n    v45 = v32;\n    sub_407030();\n    goto LABEL_66;\n  }\n  sub_407030();\n  if ( v31 )\n  {\n    v35 = __OFSUB__(5 - v31, v10);\n    v33 = 5 - v31 == v10;\n    v34 = (signed int)(5 - v31 - v10) < 0;\n    if ( 5 - v31 >= (signed int)v10 )\n      v10 = 5 - v31;\n    v36 = v45;\n    if ( !((unsigned __int8)(v34 ^ v35) | v33) )\n      v36 = v40;\n    v45 = v36;\n    goto LABEL_66;\n  }\n  if ( qword_88C238 )\n    sub_40F260((__int64)\"recursive_disconnect2\", a1, a2, v40, 5u, (__int64)\"disconnection effective\");\n  if ( v46 )\n    *v46 = v40;\n  if ( v43 )\n    *(_DWORD *)(v43 + 4) = (*(_DWORD *)(v43 + 4) & 0x3FF) + ((v40 << 10) & 0xFFC00) + 620756992;\n  return 5;\n}\n", 
            "funcStartAddr": "0x434c00L", 
            "funcEndAddr": "0x4352b3L", 
            "funcName": "sub_434C00"
        }, 
        {
            "decompiledFuncCode": "void sub_4352C0()\n{\n  dword_87BE80 = 0;\n}\n", 
            "funcStartAddr": "0x4352c0L", 
            "funcEndAddr": "0x4352cbL", 
            "funcName": "sub_4352C0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_4352D0()\n{\n  return (unsigned int)dword_87BE80;\n}\n", 
            "funcStartAddr": "0x4352d0L", 
            "funcEndAddr": "0x4352d7L", 
            "funcName": "sub_4352D0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4352E0(unsigned int a1, __int64 a2, unsigned int a3, int *a4, int *a5)\n{\n  int *v5; // r13\n  unsigned int v6; // er15\n  int v7; // ebp\n  __int64 v8; // rax\n  unsigned __int64 v9; // rsi\n  signed __int64 v10; // rdx\n  __int64 v11; // r8\n  __int64 v12; // r9\n  __int64 v13; // rcx\n  int *v14; // rax\n  int v15; // ecx\n  int v16; // eax\n  __int64 v17; // rcx\n  int v18; // ebp\n  unsigned int v19; // er12\n  int v20; // eax\n  unsigned int v21; // er13\n  unsigned int v22; // ebx\n  int v23; // er14\n  int v24; // eax\n  int v25; // ebp\n  __int64 v26; // r13\n  int v27; // eax\n  char *v28; // rdi\n  int v29; // eax\n  int *v30; // rbx\n  __int64 v31; // rax\n  __int64 v32; // rax\n  unsigned int *v33; // r13\n  int v34; // er14\n  unsigned int *v35; // rax\n  unsigned int v36; // ebx\n  unsigned int *v37; // rax\n  unsigned int v38; // er12\n  __int64 v39; // rax\n  __int64 v40; // rax\n  __int64 v41; // rax\n  __int64 v42; // rax\n  __int64 v43; // rax\n  __int64 v44; // rax\n  __int64 v45; // rcx\n  char *v46; // rdi\n  __int64 v47; // rcx\n  __int64 v48; // r13\n  __int64 v49; // rbp\n  signed __int64 v50; // r14\n  signed int v51; // er15\n  __int64 v52; // rbx\n  int v53; // eax\n  __int64 v54; // rbx\n  int v55; // er12\n  char *v56; // rdi\n  __int64 v57; // rbx\n  char v58; // r12\n  __int64 v59; // rdi\n  int v60; // er11\n  signed __int64 v61; // r14\n  signed __int64 v62; // rbp\n  __int64 v63; // rax\n  int v64; // ecx\n  int v65; // ebx\n  bool v66; // sf\n  unsigned __int8 v67; // of\n  int v68; // ebx\n  int v69; // ebp\n  bool v70; // sf\n  unsigned __int8 v71; // of\n  int v72; // ebx\n  bool v73; // sf\n  unsigned __int8 v74; // of\n  int v75; // eax\n  bool v76; // sf\n  unsigned __int8 v77; // of\n  int v78; // ebp\n  int v79; // ebx\n  bool v80; // sf\n  unsigned __int8 v81; // of\n  __int64 v82; // rbp\n  char *v83; // rdx\n  char *v84; // rbx\n  __int64 v85; // rbp\n  __int64 v86; // rax\n  signed int v87; // edx\n  signed __int64 result; // rax\n  int v89; // ecx\n  __int64 v90; // rdx\n  bool v91; // zf\n  signed int v92; // [rsp+8h] [rbp-5370h]\n  int v93; // [rsp+8h] [rbp-5370h]\n  unsigned int v94; // [rsp+Ch] [rbp-536Ch]\n  int *v95; // [rsp+10h] [rbp-5368h]\n  unsigned int v96; // [rsp+18h] [rbp-5360h]\n  signed __int64 v97; // [rsp+20h] [rbp-5358h]\n  unsigned int *v98; // [rsp+20h] [rbp-5358h]\n  bool v99; // [rsp+20h] [rbp-5358h]\n  unsigned int v100; // [rsp+2Ch] [rbp-534Ch]\n  unsigned int v101; // [rsp+30h] [rbp-5348h]\n  unsigned int v102; // [rsp+34h] [rbp-5344h]\n  unsigned int v103; // [rsp+38h] [rbp-5340h]\n  int v104; // [rsp+3Ch] [rbp-533Ch]\n  int v105; // [rsp+40h] [rbp-5338h]\n  unsigned int v106; // [rsp+44h] [rbp-5334h]\n  __int64 v107; // [rsp+48h] [rbp-5330h]\n  unsigned int v108; // [rsp+54h] [rbp-5324h]\n  int v109; // [rsp+58h] [rbp-5320h]\n  unsigned int v110; // [rsp+5Ch] [rbp-531Ch]\n  int v111; // [rsp+60h] [rbp-5318h]\n  unsigned int v112; // [rsp+64h] [rbp-5314h]\n  __int64 v113; // [rsp+68h] [rbp-5310h]\n  char *v114; // [rsp+70h] [rbp-5308h]\n  __int64 v115; // [rsp+78h] [rbp-5300h]\n  int *v116; // [rsp+80h] [rbp-52F8h]\n  unsigned int *v117; // [rsp+88h] [rbp-52F0h]\n  int v118; // [rsp+90h] [rbp-52E8h]\n  int v119; // [rsp+94h] [rbp-52E4h]\n  int v120; // [rsp+98h] [rbp-52E0h]\n  int v121[361]; // [rsp+9Ch] [rbp-52DCh]\n  char s[504]; // [rsp+640h] [rbp-4D38h]\n  int v123[400]; // [rsp+838h] [rbp-4B40h]\n  int v124[400]; // [rsp+E78h] [rbp-4500h]\n  int v125[800]; // [rsp+14B8h] [rbp-3EC0h]\n  int v126[800]; // [rsp+1AF8h] [rbp-3880h]\n  char v127[1600]; // [rsp+2138h] [rbp-3240h]\n  int v128[401]; // [rsp+2778h] [rbp-2C00h]\n  int v129; // [rsp+2DBCh] [rbp-25BCh]\n  int v130[400]; // [rsp+2DC0h] [rbp-25B8h]\n  int v131[400]; // [rsp+3400h] [rbp-1F78h]\n  int v132[1614]; // [rsp+3A40h] [rbp-1938h]\n  int _4080[1614]; // [rsp+4080h] [rbp-12F8h]\n  int _46C0[1614]; // [rsp+46C0h] [rbp-CB8h]\n\n  v116 = a5;\n  v5 = a4;\n  v6 = a3;\n  v7 = a2;\n  v110 = a1;\n  v96 = (unsigned __int8)byte_98A1B0[a1];\n  v115 = qword_88C238;\n  v103 = dword_88C22C;\n  v106 = 0;\n  v100 = 0;\n  v102 = 0;\n  v101 = 0;\n  qword_88C238 = 0LL;\n  dword_88C22C = 0;\n  sub_436120(a1, a2, v123);\n  sub_436120((unsigned int)a2, a1, v130);\n  if ( (unsigned int)sub_408410(a1, 1, (unsigned __int64)&v105) == 1 )\n  {\n    v8 = v105;\n    v123[v8] = 0;\n    v130[v8] = v130[a1];\n    v125[v8] = 0;\n    v132[v8] = v125[a1];\n  }\n  v9 = 1LL;\n  if ( (unsigned int)sub_408410(v7, 1, (unsigned __int64)&v105) == 1 )\n  {\n    v13 = v105;\n    v130[v13] = 0;\n    v14 = &v123[v7];\n    v10 = (unsigned int)v123[v7];\n    v123[v13] = v10;\n  }\n  else\n  {\n    v14 = &v123[v7];\n  }\n  v15 = *v14;\n  v111 = v130[a1];\n  v16 = v111;\n  v109 = v15;\n  if ( v15 <= v111 )\n    v16 = v15;\n  v17 = (__int64)v116;\n  *v116 = v16;\n  if ( dword_88C268 > 0 )\n  {\n    v9 = v103;\n    sub_433F90(\"%oVariation %d\\n\", v103);\n    sub_407180();\n    sub_44A610(0LL, v103);\n    sub_43AB20(v123);\n    sub_43AB20(v130);\n  }\n  if ( v129 <= 0 )\n  {\n    qword_88C238 = v115;\n    dword_88C22C = v103;\n    v93 = 0;\n    v99 = 0;\n    if ( dword_88C268 <= 0 )\n      goto LABEL_212;\n    goto LABEL_209;\n  }\n  v108 = v7;\n  v95 = v5;\n  v112 = 3 - v96;\n  v94 = v6;\n  v109 += 200;\n  v111 += 200;\n  v17 = 0LL;\n  v18 = 0;\n  do\n  {\n    v19 = v128[v17];\n    v10 = (unsigned int)v130[v19];\n    v107 = v17;\n    if ( (signed int)v10 > v111 )\n      goto LABEL_134;\n    v20 = v123[v19];\n    if ( v20 > v109 )\n      goto LABEL_134;\n    v21 = v124[v19];\n    v22 = v131[v19];\n    LODWORD(v114) = v123[v19];\n    v23 = v20 - v21;\n    if ( (signed int)(v20 - v21 + v10 - v22) > 2500 )\n      goto LABEL_134;\n    v97 = v10;\n    if ( (unsigned __int8)(byte_98A1B0[v19] - 1) <= 1u )\n    {\n      v24 = sub_40AD00(v19);\n      v10 = v97;\n      if ( v24 != v19 )\n        goto LABEL_134;\n    }\n    v92 = v18;\n    if ( dword_88C268 <= 0 )\n    {\n      v25 = v10 - v22;\n      v26 = v23 + (unsigned int)v10 - v22;\n    }\n    else\n    {\n      v9 = v19;\n      sub_433F90(\"%oMove %1m, (%d, %d, %d, %d)\\n\", v19, (unsigned int)v114, v21, v97, v22);\n      v25 = v97 - v22;\n      v26 = v23 + (unsigned int)v97 - v22;\n      if ( dword_88C268 > 0 )\n      {\n        v9 = (unsigned int)v26;\n        sub_433F90(\"%o  %d, primary distance\\n\", (unsigned int)v26);\n      }\n    }\n    if ( 3 * v23 > 2 * v25 && 3 * v25 > 2 * v23 )\n    {\n      v26 = (unsigned int)(v26 - 100);\n      if ( dword_88C268 > 0 )\n        sub_433F90(\"%o  -100, well balanced\\n\");\n    }\n    v18 = v92;\n    v27 = v125[v19];\n    if ( v27 && v27 == v132[v19] )\n    {\n      if ( dword_88C268 <= 0 )\n        goto LABEL_134;\n      v28 = \"%o  discarded, not between strings\\n\";\n      goto LABEL_29;\n    }\n    v29 = (unsigned __int8)byte_98A1B0[v19];\n    if ( !byte_98A1B0[v19] )\n    {\n      v9 = v6;\n      if ( (unsigned int)sub_40AD70(v19, v6) && (v9 = v6, !(unsigned int)sub_408130(v19, v6, 0LL)) )\n      {\n        if ( dword_88C268 > 0 )\n        {\n          v28 = \"%o  discarded, self atari\\n\";\nLABEL_29:\n          sub_433F90(v28);\n          goto LABEL_134;\n        }\n      }\n      else\n      {\n        if ( v92 <= 0 )\n        {\n          LODWORD(v32) = 0;\n          v10 = (signed __int64)v95;\n          if ( v92 > 361 )\n            goto LABEL_134;\nLABEL_104:\n          if ( (_DWORD)v32 == v92 )\n          {\n            v44 = v92;\n            *(_DWORD *)(v10 + 4 * v44) = v19;\n            *(&v118 + v44) = v26;\n            v18 = v92 + 1;\n          }\n          goto LABEL_134;\n        }\n        v32 = 0LL;\n        v10 = (signed __int64)v95;\n        while ( v95[v32] != v19 )\n        {\n          if ( ++v32 >= v92 )\n            goto LABEL_108;\n        }\n        if ( *(&v118 + v32) > (signed int)v26 )\n          *(&v118 + v32) = v26;\nLABEL_108:\n        if ( v92 <= 361 )\n          goto LABEL_104;\n      }\n      goto LABEL_134;\n    }\n    if ( v112 != v29 )\n    {\n      if ( (_BYTE)v29 != (_BYTE)v96 )\n        goto LABEL_134;\n      v113 = v26;\n      v98 = (unsigned int *)&v126[v19];\n      v114 = &v127[4 * v19];\n      v33 = (unsigned int *)&_4080[v19];\n      v117 = (unsigned int *)&_46C0[v19];\n      v34 = 0;\n      while ( 1 )\n      {\n        v35 = v98;\n        if ( !(v34 & 1) )\n          v35 = (unsigned int *)v114;\n        v36 = *v35;\n        v37 = v33;\n        if ( !(v34 & 2) )\n          v37 = v117;\n        v38 = *v37;\n        v9 = *v37;\n        if ( !(unsigned int)sub_43ADB0(v36, v9, v96) )\n          goto LABEL_94;\n        v9 = v6;\n        if ( (unsigned int)sub_40AD70(v36, v6) )\n        {\n          v9 = v6;\n          if ( !(unsigned int)sub_408130(v36, v6, 0LL) )\n          {\n            if ( v38 == v36 )\n              goto LABEL_94;\n            goto LABEL_76;\n          }\n        }\n        if ( v18 <= 0 )\n        {\n          LODWORD(v39) = 0;\n          if ( v18 > 361 )\n            goto LABEL_73;\n        }\n        else\n        {\n          v39 = 0LL;\n          while ( 1 )\n          {\n            v10 = (signed __int64)v95;\n            if ( v95[v39] == v36 )\n              break;\n            if ( ++v39 >= v18 )\n              goto LABEL_72;\n          }\n          if ( *(&v118 + v39) > (signed int)v113 )\n            *(&v118 + v39) = v113;\nLABEL_72:\n          if ( v18 > 361 )\n          {\nLABEL_73:\n            if ( dword_88C268 <= 0 )\n              goto LABEL_75;\nLABEL_74:\n            v9 = v36;\n            sub_433F90(\"%o  +0 at %1m, vulnerability\\n\", v36);\n            goto LABEL_75;\n          }\n        }\n        if ( (_DWORD)v39 != v18 )\n          goto LABEL_73;\n        v40 = v18;\n        v95[v40] = v36;\n        *(&v118 + v40) = v113;\n        ++v18;\n        if ( dword_88C268 > 0 )\n          goto LABEL_74;\nLABEL_75:\n        if ( v38 == v36 )\n          goto LABEL_94;\nLABEL_76:\n        v9 = v6;\n        if ( (unsigned int)sub_40AD70(v38, v6) )\n        {\n          v9 = v6;\n          if ( !(unsigned int)sub_408130(v38, v6, 0LL) )\n            goto LABEL_94;\n        }\n        if ( v18 <= 0 )\n        {\n          LODWORD(v41) = 0;\n          if ( v18 <= 361 )\n            goto LABEL_86;\n        }\n        else\n        {\n          v41 = 0LL;\n          while ( 1 )\n          {\n            v10 = (signed __int64)v95;\n            if ( v95[v41] == v38 )\n              break;\n            if ( ++v41 >= v18 )\n              goto LABEL_91;\n          }\n          if ( *(&v118 + v41) > (signed int)v113 )\n            *(&v118 + v41) = v113;\nLABEL_91:\n          if ( v18 <= 361 )\n          {\nLABEL_86:\n            if ( (_DWORD)v41 == v18 )\n            {\n              v42 = v18;\n              v95[v42] = v38;\n              *(&v118 + v42) = v113;\n              ++v18;\n              if ( dword_88C268 <= 0 )\n                goto LABEL_94;\nLABEL_93:\n              v9 = v38;\n              sub_433F90(\"%o  +0 at %1m, vulnerability\\n\", v38);\n              goto LABEL_94;\n            }\n            goto LABEL_92;\n          }\n        }\nLABEL_92:\n        if ( dword_88C268 > 0 )\n          goto LABEL_93;\nLABEL_94:\n        if ( ++v34 == 4 )\n          goto LABEL_134;\n      }\n    }\n    v9 = (unsigned __int64)&v106;\n    sub_43E350(v19, &v106, &v100, &v102, &v101);\n    if ( dword_88C268 > 0 )\n    {\n      v9 = v106;\n      sub_433F90(\"%o  attack with code %d at %1m, defense with code %d at %1m\\n\", v106, v100, v102, v101);\n    }\n    if ( v96 == v6 && v106 )\n    {\n      if ( v102 )\n      {\n        if ( v123[v100] + v130[v100] > (signed int)v114 + (signed int)v97 )\n        {\n          LODWORD(v26) = v26 + 500;\n          v30 = v95;\n          if ( dword_88C268 > 0 )\n            sub_433F90(\"%o  +500, attack point not on shortest path\\n\", v9);\n          if ( v92 > 0 )\n          {\nLABEL_41:\n            v10 = v92;\n            v31 = 0LL;\n            while ( v30[v31] != v100 )\n            {\n              if ( ++v31 >= v92 )\n                goto LABEL_121;\n            }\n            if ( *(&v118 + v31) > (signed int)v26 - 150 )\n              *(&v118 + v31) = v26 - 150;\nLABEL_121:\n            if ( v92 > 361 )\n            {\nLABEL_122:\n              if ( dword_88C268 <= 0 )\n                goto LABEL_134;\nLABEL_123:\n              v9 = v100;\n              v46 = \"%o  -150 at %1m, capturing a string\\n\";\n              goto LABEL_133;\n            }\n            goto LABEL_116;\n          }\nLABEL_115:\n          LODWORD(v31) = 0;\n          if ( v92 > 361 )\n            goto LABEL_122;\nLABEL_116:\n          if ( (_DWORD)v31 != v92 )\n            goto LABEL_122;\n          v45 = v92;\n          v30[v45] = v100;\n          *(&v118 + v45) = v26 - 150;\n          v18 = v92 + 1;\n          if ( dword_88C268 > 0 )\n            goto LABEL_123;\n          goto LABEL_134;\n        }\n      }\n      else\n      {\n        LODWORD(v26) = v26 + 500;\n        if ( dword_88C268 > 0 )\n          sub_433F90(\"%o  +500, no defense\\n\", v9);\n      }\n      v30 = v95;\n      if ( v92 > 0 )\n        goto LABEL_41;\n      goto LABEL_115;\n    }\n    if ( (v96 != v6 && v106 != 0) == 1 && v102 )\n    {\n      if ( v92 <= 0 )\n      {\n        LODWORD(v43) = 0;\n        v9 = (unsigned __int64)v95;\n        if ( v92 > 361 )\n          goto LABEL_131;\n      }\n      else\n      {\n        v10 = v92;\n        v43 = 0LL;\n        v9 = (unsigned __int64)v95;\n        while ( v95[v43] != v101 )\n        {\n          if ( ++v43 >= v92 )\n            goto LABEL_130;\n        }\n        if ( *(&v118 + v43) > (signed int)v26 - 500 )\n          *(&v118 + v43) = v26 - 500;\nLABEL_130:\n        if ( v92 > 361 )\n        {\nLABEL_131:\n          if ( dword_88C268 <= 0 )\n            goto LABEL_134;\nLABEL_132:\n          v9 = v101;\n          v46 = \"%o  -500 at %1m, defending a string\\n\";\nLABEL_133:\n          sub_433F90(v46, v9);\n          goto LABEL_134;\n        }\n      }\n      if ( (_DWORD)v43 != v92 )\n        goto LABEL_131;\n      v47 = v92;\n      *(_DWORD *)(v9 + 4 * v47) = v101;\n      *(&v118 + v47) = v26 - 500;\n      v18 = v92 + 1;\n      if ( dword_88C268 > 0 )\n        goto LABEL_132;\n    }\nLABEL_134:\n    v17 = v107 + 1;\n  }\n  while ( v107 + 1 < v129 );\n  qword_88C238 = v115;\n  dword_88C22C = v103;\n  v99 = v18 > 0;\n  v93 = v18;\n  if ( v18 <= 0 )\n  {\nLABEL_205:\n    v99 = 0;\n    v5 = v95;\n    v6 = v94;\n    goto LABEL_206;\n  }\n  v48 = 0LL;\n  v107 = (unsigned int)v18;\n  while ( 2 )\n  {\n    v49 = v95[v48];\n    v50 = 4611686018427387900LL;\n    v51 = 0;\n    while ( 2 )\n    {\n      v52 = dword_5641C0[v50];\n      v53 = (unsigned __int8)byte_98A1B0[v52 + v49];\n      v54 = v49 + v52;\n      if ( v112 == v53 )\n      {\n        v55 = *(&v118 + v48);\n        *(&v118 + v48) = v55 - 150;\n        if ( dword_88C268 > 0 )\n          sub_433F90(\"%o%1M -150, adjacent to attacker string\\n\", (unsigned int)v49, v10);\n        v51 = 1;\n        if ( (signed int)sub_4083A0(v54) <= 2 )\n        {\n          *(&v118 + v48) = v55 - 350;\n          if ( dword_88C268 > 0 )\n            sub_433F90(\"%o%1M -200, adjacent to attacker string with at most two liberties\\n\", (unsigned int)v49);\n          if ( (v123[v49] - v124[v49] < 501 || v123[v54] - v124[v54] <= 500)\n            && (v130[v49] - v131[v49] < 501 || v130[v54] - v131[v54] <= 500)\n            && v123[v54] < *v116\n            && v130[v54] < *v116 )\n          {\n            *(&v118 + v48) = v55 - 1050;\n            if ( dword_88C268 > 0 )\n            {\n              v56 = \"%o%1M -700, capture or atari of immediately connecting string\\n\";\n              goto LABEL_156;\n            }\n          }\n        }\n      }\n      else if ( (_BYTE)v53 == (_BYTE)v96 && (signed int)sub_4083A0(v54) <= 2 )\n      {\n        *(&v118 + v48) -= 200;\n        if ( dword_88C268 > 0 )\n        {\n          v56 = \"%o%1M -200, adjacent to defender string with at most two liberties\\n\";\nLABEL_156:\n          sub_433F90(v56, (unsigned int)v49);\n        }\n      }\n      ++v50;\n      if ( v50 * 4 )\n        continue;\n      break;\n    }\n    if ( v96 != v94 )\n    {\n      if ( v51 )\n      {\n        if ( (unsigned int)sub_408320(v49) )\n        {\n          *(&v118 + v48) -= 100;\n          if ( dword_88C268 > 0 )\n            sub_433F90(\"%o%1M -100, disconnect move on edge\\n\", (unsigned int)v49);\n        }\n      }\n    }\n    v9 = v110;\n    if ( (unsigned int)sub_40B0A0(v49, v110) && (unsigned int)sub_4083A0(v110) == 3\n      || (v9 = v108, (unsigned int)sub_40B0A0(v49, v108)) && (unsigned int)sub_4083A0(v108) == 3 )\n    {\n      *(&v118 + v48) -= 100;\n      if ( dword_88C268 > 0 )\n      {\n        v9 = (unsigned int)v49;\n        sub_433F90(\"%o%1M -100, liberty of endpoint string with 3 libs\\n\", (unsigned int)v49);\n      }\n    }\n    ++v48;\n    v57 = v107;\n    if ( v48 != v107 )\n      continue;\n    break;\n  }\n  if ( v93 <= 0 )\n    goto LABEL_205;\n  v11 = v107 + 3;\n  v12 = v107 - 2;\n  v58 = v93 + 3;\n  v10 = 1LL;\n  v59 = 0LL;\n  v5 = v95;\n  v6 = v94;\n  do\n  {\n    v60 = *(&v118 + v59);\n    v61 = v59 + 1;\n    if ( v59 + 1 >= v93 )\n    {\n      LODWORD(v63) = v59;\n    }\n    else\n    {\n      if ( ((_BYTE)v11 - (_BYTE)v59) & 3 )\n      {\n        v62 = -(signed __int64)(v58 & 3);\n        v9 = v10;\n        LODWORD(v63) = v59;\n        v64 = *(&v118 + v59);\n        do\n        {\n          v65 = *(&v118 + v9);\n          v67 = __OFSUB__(v65, v64);\n          v66 = v65 - v64 < 0;\n          if ( v65 <= v64 )\n            v64 = *(&v118 + v9);\n          if ( v66 ^ v67 )\n            LODWORD(v63) = v9;\n          ++v9;\n          ++v62;\n        }\n        while ( v62 );\n      }\n      else\n      {\n        v9 = v10;\n        LODWORD(v63) = v59;\n        v64 = *(&v118 + v59);\n      }\n      v6 = v94;\n      v57 = v107;\n      if ( (unsigned __int64)(v12 - v59) >= 3 )\n      {\n        do\n        {\n          v68 = *(&v118 + v9);\n          v69 = *(&v119 + v9);\n          v71 = __OFSUB__(v68, v64);\n          v70 = v68 - v64 < 0;\n          if ( v68 <= v64 )\n            v64 = *(&v118 + v9);\n          if ( v70 ^ v71 )\n            LODWORD(v63) = v9;\n          v72 = v9 + 1;\n          v74 = __OFSUB__(v69, v64);\n          v73 = v69 - v64 < 0;\n          if ( v69 <= v64 )\n            v64 = *(&v119 + v9);\n          if ( !(v73 ^ v74) )\n            v72 = v63;\n          v75 = *(&v120 + v9);\n          v77 = __OFSUB__(v75, v64);\n          v76 = v75 - v64 < 0;\n          if ( v75 <= v64 )\n            v64 = *(&v120 + v9);\n          v78 = v9 + 2;\n          if ( !(v76 ^ v77) )\n            v78 = v72;\n          v79 = v121[v9];\n          LODWORD(v63) = v9 + 3;\n          v81 = __OFSUB__(v79, v64);\n          v80 = v79 - v64 < 0;\n          if ( v79 <= v64 )\n            v64 = v121[v9];\n          if ( !(v80 ^ v81) )\n            LODWORD(v63) = v78;\n          v57 = v107;\n          v9 += 4LL;\n        }\n        while ( v9 != v107 );\n      }\n    }\n    v17 = (unsigned int)v63;\n    if ( v59 != (unsigned int)v63 )\n    {\n      v17 = (unsigned int)v95[v59];\n      v63 = (signed int)v63;\n      v95[v59] = v95[(signed int)v63];\n      v9 = (unsigned int)*(&v118 + (signed int)v63);\n      *(&v118 + v59) = v9;\n      v95[v63] = v17;\n      *(&v118 + v63) = v60;\n    }\n    ++v10;\n    v58 += 3;\n    ++v59;\n  }\n  while ( v61 != v57 );\nLABEL_206:\n  if ( dword_88C268 > 0 )\n  {\nLABEL_209:\n    sub_433F90(\"%oSorted moves:\\n\", v9, v10, v17, v11, v12);\n    if ( v99 )\n    {\n      v82 = 0LL;\n      do\n      {\n        sub_433F90(\"%o%1M %d\\n\", (unsigned int)v5[v82], (unsigned int)*(&v118 + v82));\n        ++v82;\n      }\n      while ( v93 != v82 );\n    }\n  }\nLABEL_212:\n  if ( qword_88C238 )\n  {\n    v83 = (char *)&off_49940C;\n    if ( v96 == v6 )\n      v83 = &byte_494DEA;\n    sprintf(s, \"Move order for %sconnect: %n\", v83, &v104, v11, v12);\n    if ( v99 )\n    {\n      v84 = &s[v104];\n      v85 = 0LL;\n      do\n      {\n        v86 = v5[v85];\n        v87 = v5[v85] - 20 * (((unsigned __int64)(1717986919 * v86) >> 63) + (1717986919 * v86 >> 35));\n        sprintf(\n          v84,\n          \"%c%d (%d) %n\",\n          v87 + (unsigned int)(v87 > 8) + 64,\n          dword_565C68 + ((unsigned __int64)(-1717986919 * v86) >> 63) + (unsigned int)(-1717986919 * v86 >> 35) + 1,\n          (unsigned int)*(&v118 + v85),\n          &v104);\n        v84 += v104;\n        ++v85;\n      }\n      while ( v93 != v85 );\n    }\n    sub_4018D0((__int64 *)qword_88C238);\n  }\n  result = 0LL;\n  if ( v99 )\n  {\n    v89 = v118 + 1500;\n    v90 = 0LL;\n    while ( 1 )\n    {\n      result = v90 + 1;\n      if ( v90 + 1 >= v93 )\n        break;\n      v67 = __OFSUB__(*(&v119 + v90), v89);\n      v91 = *(&v119 + v90) == v89;\n      v66 = *(&v119 + v90++) - v89 < 0;\n      if ( !((unsigned __int8)(v66 ^ v67) | v91) )\n        return result;\n    }\n    result = (unsigned int)(v90 + 1);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4352e0L", 
            "funcEndAddr": "0x43611eL", 
            "funcName": "sub_4352E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_436120(signed int a1, int a2, __int64 a3)\n{\n  __int64 v3; // r15\n  unsigned __int8 v4; // bl\n  signed __int64 v5; // rsi\n  __int64 result; // rax\n  signed __int64 v7; // rcx\n  signed int v8; // er12\n  signed __int64 v9; // r14\n  int *v10; // rdx\n  signed int v11; // edi\n  int *v12; // rbp\n  __int64 v13; // rcx\n  signed int *v14; // rbx\n  int v15; // esi\n  __int64 v16; // r9\n  bool v17; // zf\n  __int64 v18; // rbp\n  int v19; // er8\n  signed int v20; // er10\n  unsigned __int8 v21; // r14\n  signed int v22; // edi\n  __int64 v23; // rdx\n  __int64 v24; // rsi\n  unsigned __int64 v25; // rax\n  __int64 v26; // r10\n  __int64 v27; // rax\n  __int64 v28; // r9\n  __int64 v29; // rbx\n  signed int v30; // ecx\n  signed int v31; // ebp\n  signed int v32; // ecx\n  signed int v33; // edi\n  signed int v34; // ecx\n  signed int v35; // ebp\n  signed int v36; // ecx\n  __int64 v37; // r10\n  signed int v38; // eax\n  int v39; // ecx\n  int v40; // er9\n  __int64 v41; // rdx\n  signed __int64 v42; // r13\n  int v43; // eax\n  int v44; // eax\n  __int64 v45; // r8\n  _BYTE *v46; // r10\n  __int64 v47; // rax\n  int v48; // eax\n  __int64 v49; // rax\n  int *v50; // rcx\n  int v51; // edx\n  __int64 v52; // rdi\n  int v53; // edx\n  char *v54; // rbp\n  int v55; // ebp\n  int v56; // eax\n  __int64 v57; // rax\n  int *v58; // rcx\n  int v59; // edx\n  __int64 v60; // rdi\n  int v61; // edx\n  __int64 v62; // rax\n  __int64 v63; // rax\n  __int64 v64; // rax\n  __int64 v65; // rax\n  __int64 v66; // rax\n  __int64 v67; // rax\n  int *v68; // rcx\n  __int64 v69; // rbx\n  __int64 v70; // r10\n  unsigned __int8 *v71; // r11\n  int v72; // edx\n  __int64 v73; // rdi\n  int v74; // edx\n  __int64 v75; // rax\n  int *v76; // rcx\n  int v77; // edx\n  __int64 v78; // rdi\n  int v79; // edx\n  __int64 v80; // rax\n  int v81; // eax\n  __int64 v82; // rax\n  unsigned int v83; // er14\n  int *v84; // rcx\n  int v85; // edx\n  __int64 v86; // rdi\n  int v87; // edx\n  __int64 v88; // rax\n  __int64 v89; // rax\n  __int64 v90; // rax\n  unsigned __int8 v91; // r8\n  __int64 v92; // rax\n  __int64 v93; // rax\n  __int64 v94; // rax\n  __int64 v95; // rax\n  __int64 v96; // rax\n  __int64 v97; // rax\n  __int64 v98; // rax\n  __int64 v99; // rax\n  signed int v100; // eax\n  char v101; // cl\n  signed int v102; // eax\n  char v103; // cl\n  __int64 v104; // rcx\n  signed __int64 v105; // r13\n  int v106; // er14\n  int v107; // er13\n  __int64 v108; // rbx\n  signed int v109; // eax\n  __int64 v110; // rax\n  int *v111; // rcx\n  int v112; // edx\n  __int64 v113; // rdi\n  int v114; // edx\n  __int64 v115; // rbp\n  unsigned int v116; // ebx\n  __int64 v117; // r13\n  unsigned __int64 v118; // rbp\n  int v119; // ecx\n  __int64 v120; // rdi\n  __int64 v121; // rdi\n  int v122; // eax\n  __int64 v123; // r13\n  int v124; // ebx\n  int v125; // eax\n  int v126; // eax\n  __int64 v127; // rax\n  unsigned int v128; // ebp\n  unsigned int v129; // er13\n  unsigned int v130; // ebx\n  int v131; // er14\n  int v132; // ecx\n  int v133; // edx\n  __int64 v134; // rcx\n  int v135; // ecx\n  __int64 v136; // rax\n  int *v137; // rcx\n  int v138; // edx\n  __int64 v139; // rdi\n  int v140; // edx\n  unsigned int v141; // ebp\n  char v142; // dl\n  char v143; // al\n  int v144; // eax\n  __int64 v145; // rax\n  int *v146; // rcx\n  int v147; // edx\n  __int64 v148; // rdi\n  int v149; // edx\n  char v150; // al\n  char v151; // dl\n  char v152; // al\n  int v153; // eax\n  __int64 v154; // rax\n  int *v155; // rcx\n  int v156; // edx\n  __int64 v157; // rdi\n  int v158; // edx\n  int v159; // eax\n  unsigned int v160; // ebp\n  signed int v161; // eax\n  __int64 v162; // rcx\n  __int64 v163; // rdx\n  unsigned __int8 v164; // al\n  __int64 v165; // rbx\n  int v166; // eax\n  int v167; // eax\n  int v168; // ebp\n  int v169; // eax\n  __int64 v170; // rax\n  int *v171; // rcx\n  int v172; // edx\n  __int64 v173; // rdi\n  int v174; // edx\n  __int64 v175; // rax\n  int v176; // ecx\n  __int64 v177; // rax\n  int *v178; // rcx\n  int v179; // edx\n  __int64 v180; // rdi\n  int v181; // edx\n  _BOOL4 v182; // er14\n  int v183; // eax\n  __int64 v184; // rax\n  int *v185; // rcx\n  int v186; // edx\n  __int64 v187; // rdi\n  int v188; // edx\n  __int64 v189; // rax\n  _BOOL4 v190; // ebp\n  int v191; // eax\n  __int64 v192; // rax\n  int *v193; // rcx\n  int v194; // edx\n  __int64 v195; // rdi\n  int v196; // edx\n  _BOOL4 v197; // ebp\n  int v198; // eax\n  __int64 v199; // rax\n  int *v200; // rcx\n  int v201; // edx\n  __int64 v202; // rdi\n  int v203; // edx\n  int v204; // eax\n  __int64 v205; // rax\n  int v206; // eax\n  int v207; // eax\n  int v208; // eax\n  int v209; // eax\n  int v210; // eax\n  __int64 v211; // rax\n  int v212; // edx\n  __int64 v213; // rdx\n  signed int v214; // ecx\n  __int64 v215; // rax\n  int *v216; // rcx\n  int v217; // edx\n  __int64 v218; // rdi\n  int v219; // edx\n  int v220; // ebp\n  int v221; // eax\n  __int64 v222; // rax\n  int *v223; // rcx\n  int v224; // edx\n  __int64 v225; // rdi\n  int v226; // edx\n  int v227; // ebp\n  int v228; // eax\n  __int64 v229; // rax\n  int *v230; // rcx\n  int v231; // edx\n  __int64 v232; // rdi\n  int v233; // edx\n  int v234; // eax\n  __int64 v235; // rax\n  int *v236; // rcx\n  int v237; // edx\n  __int64 v238; // rdi\n  int v239; // edx\n  int v240; // eax\n  __int64 v241; // rax\n  int *v242; // rcx\n  int v243; // edx\n  __int64 v244; // rdi\n  int v245; // edx\n  int v246; // eax\n  __int64 v247; // rax\n  int v248; // eax\n  __int64 v249; // rax\n  __int64 v250; // rax\n  int v251; // eax\n  __int64 v252; // rax\n  int *v253; // rcx\n  int v254; // edx\n  __int64 v255; // rdi\n  int v256; // edx\n  __int64 v257; // rax\n  __int64 v258; // rax\n  __int64 v259; // rax\n  __int64 v260; // rax\n  __int64 v261; // rax\n  signed int v262; // eax\n  __int64 v263; // rax\n  int v264; // eax\n  __int64 v265; // rax\n  int *v266; // rcx\n  int v267; // edx\n  __int64 v268; // rdi\n  int v269; // edx\n  int v270; // eax\n  __int64 v271; // rax\n  int *v272; // rcx\n  int v273; // edx\n  __int64 v274; // rdi\n  int v275; // edx\n  __int64 v276; // rax\n  int *v277; // rcx\n  int v278; // edx\n  __int64 v279; // rdi\n  int v280; // edx\n  __int64 v281; // rax\n  int *v282; // rcx\n  int v283; // edx\n  __int64 v284; // rdi\n  int v285; // edx\n  __int64 v286; // rax\n  int *v287; // rcx\n  int v288; // edx\n  __int64 v289; // rdi\n  int v290; // edx\n  __int64 v291; // rax\n  int *v292; // rcx\n  int v293; // edx\n  __int64 v294; // rdi\n  int v295; // edx\n  __int64 v296; // rcx\n  int v297; // eax\n  __int64 v298; // rax\n  int *v299; // rcx\n  int v300; // edx\n  __int64 v301; // rdi\n  int v302; // edx\n  int v303; // ebp\n  int v304; // eax\n  __int64 v305; // rax\n  int *v306; // rcx\n  int v307; // edx\n  __int64 v308; // rdi\n  int v309; // edx\n  __int64 v310; // rbx\n  int *v311; // rcx\n  int v312; // edx\n  __int64 v313; // rdi\n  int v314; // edx\n  int v315; // ebp\n  int v316; // eax\n  __int64 v317; // rax\n  int *v318; // rcx\n  int v319; // edx\n  __int64 v320; // rdi\n  int v321; // edx\n  int v322; // ebx\n  int v323; // er10\n  signed __int64 v324; // r14\n  __int64 v325; // rcx\n  __int64 v326; // rax\n  signed __int64 v327; // r14\n  int v328; // er13\n  __int64 v329; // r14\n  signed int v330; // ecx\n  char v331; // al\n  signed int v332; // eax\n  __int64 v333; // rax\n  int *v334; // rcx\n  __int64 v335; // rbx\n  int v336; // edx\n  __int64 v337; // rdi\n  int v338; // edx\n  int v339; // ecx\n  __int64 v340; // rax\n  int *v341; // rcx\n  int v342; // edx\n  __int64 v343; // rdi\n  int v344; // edx\n  __int64 v345; // rax\n  __int64 v346; // rax\n  int v347; // er13\n  char v348; // cl\n  int v349; // ecx\n  __int64 v350; // rcx\n  int v351; // ecx\n  int *v352; // rcx\n  int v353; // edx\n  __int64 v354; // rdi\n  int v355; // edx\n  unsigned __int8 v356; // [rsp+7h] [rbp-961h]\n  __int64 v357; // [rsp+8h] [rbp-960h]\n  __int128 v358; // [rsp+10h] [rbp-958h]\n  signed __int64 v359; // [rsp+18h] [rbp-950h]\n  unsigned int v360; // [rsp+24h] [rbp-944h]\n  unsigned int v361; // [rsp+24h] [rbp-944h]\n  unsigned int v362; // [rsp+24h] [rbp-944h]\n  int v363; // [rsp+24h] [rbp-944h]\n  unsigned int v364; // [rsp+28h] [rbp-940h]\n  char *v365; // [rsp+28h] [rbp-940h]\n  signed int v366; // [rsp+28h] [rbp-940h]\n  unsigned int v367; // [rsp+30h] [rbp-938h]\n  int v368; // [rsp+34h] [rbp-934h]\n  unsigned int v369; // [rsp+38h] [rbp-930h]\n  signed int v370; // [rsp+38h] [rbp-930h]\n  signed int v371; // [rsp+3Ch] [rbp-92Ch]\n  int v372; // [rsp+40h] [rbp-928h]\n  unsigned int v373; // [rsp+44h] [rbp-924h]\n  __int64 v374; // [rsp+48h] [rbp-920h]\n  int v375; // [rsp+5Ch] [rbp-90Ch]\n  int v376; // [rsp+60h] [rbp-908h]\n  int v377; // [rsp+64h] [rbp-904h]\n  unsigned int v378; // [rsp+68h] [rbp-900h]\n  int v379; // [rsp+68h] [rbp-900h]\n  int v380; // [rsp+6Ch] [rbp-8FCh]\n  unsigned int v381; // [rsp+70h] [rbp-8F8h]\n  unsigned int v382; // [rsp+70h] [rbp-8F8h]\n  unsigned int v383; // [rsp+70h] [rbp-8F8h]\n  unsigned int v384; // [rsp+70h] [rbp-8F8h]\n  int v385; // [rsp+74h] [rbp-8F4h]\n  signed __int64 v386; // [rsp+78h] [rbp-8F0h]\n  signed __int64 v387; // [rsp+78h] [rbp-8F0h]\n  int v388; // [rsp+78h] [rbp-8F0h]\n  int v389; // [rsp+88h] [rbp-8E0h]\n  int v390; // [rsp+8Ch] [rbp-8DCh]\n  signed __int64 v391; // [rsp+90h] [rbp-8D8h]\n  int v392; // [rsp+90h] [rbp-8D8h]\n  unsigned int v393; // [rsp+98h] [rbp-8D0h]\n  unsigned int v394; // [rsp+98h] [rbp-8D0h]\n  unsigned int v395; // [rsp+98h] [rbp-8D0h]\n  unsigned int v396; // [rsp+98h] [rbp-8D0h]\n  int v397; // [rsp+9Ch] [rbp-8CCh]\n  int v398; // [rsp+9Ch] [rbp-8CCh]\n  int v399; // [rsp+A0h] [rbp-8C8h]\n  int v400; // [rsp+A8h] [rbp-8C0h]\n  int v401; // [rsp+ACh] [rbp-8BCh]\n  signed __int64 v402; // [rsp+B0h] [rbp-8B8h]\n  signed int v403; // [rsp+B8h] [rbp-8B0h]\n  __int64 v404; // [rsp+D0h] [rbp-898h]\n  signed __int64 v405; // [rsp+D0h] [rbp-898h]\n  int v406; // [rsp+F4h] [rbp-874h]\n  __int64 v407; // [rsp+F8h] [rbp-870h]\n  int v408[364]; // [rsp+100h] [rbp-868h]\n  unsigned int v409; // [rsp+6B0h] [rbp-2B8h]\n\n  v3 = a3;\n  v368 = a2;\n  v4 = byte_98A1B0[a1];\n  v373 = v4;\n  v5 = 361LL;\n  result = sub_40A6C0(a1, 361, (__int64)v408);\n  *(_QWORD *)(v3 + 9600) = 0LL;\n  v7 = -1504LL;\n  do\n  {\n    *(_OWORD *)(v3 + v7 + 1588) = xmmword_4AE130;\n    *(_OWORD *)(v3 + v7 + 3188) = 0LL;\n    *(_OWORD *)(v3 + v7 + 4788) = 0LL;\n    *(_OWORD *)(v3 + v7 + 6388) = 0LL;\n    *(_OWORD *)(v3 + v7 + 7988) = 0LL;\n    *(_OWORD *)(v3 + v7 + 1604) = xmmword_4AE130;\n    *(_OWORD *)(v3 + v7 + 3204) = 0LL;\n    *(_OWORD *)(v3 + v7 + 4804) = 0LL;\n    *(_OWORD *)(v3 + v7 + 6404) = 0LL;\n    *(_OWORD *)(v3 + v7 + 8004) = 0LL;\n    v7 += 32LL;\n  }\n  while ( v7 );\n  *(_QWORD *)(v3 + 1588) = 429496729700000LL;\n  *(_QWORD *)(v3 + 3188) = 0LL;\n  *(_QWORD *)(v3 + 4788) = 0LL;\n  *(_QWORD *)(v3 + 6388) = 0LL;\n  *(_QWORD *)(v3 + 7988) = 0LL;\n  *(_DWORD *)(v3 + 1596) = 100000;\n  *(_DWORD *)(v3 + 3196) = 0;\n  *(_DWORD *)(v3 + 4796) = 0;\n  *(_DWORD *)(v3 + 6396) = 0;\n  *(_DWORD *)(v3 + 7996) = 0;\n  v356 = v4;\n  v8 = 3001;\n  if ( (signed int)result > 0 )\n  {\n    v9 = 0LL;\n    v10 = v408;\n    do\n    {\n      v11 = v408[v9];\n      v5 = *(unsigned int *)(v3 + 4LL * v11);\n      if ( (signed int)v5 > 0 )\n      {\n        if ( byte_98A1B0[v11] )\n        {\n          v5 = 361LL;\n          v12 = v10;\n          result = sub_40A6C0(v11, 361, (__int64)v10);\n          if ( (signed int)result <= 0 )\n          {\n            v10 = v12;\n          }\n          else\n          {\n            v13 = (unsigned int)result;\n            v14 = v12;\n            v10 = v12;\n            do\n            {\n              v15 = *v14;\n              if ( *(_DWORD *)(v3 + 4LL * *v14) == 100000 )\n              {\n                v16 = *(signed int *)(v3 + 9604);\n                *(_DWORD *)(v3 + 9604) = v16 + 1;\n                *(_DWORD *)(v3 + 4 * v16 + 8000) = v15;\n              }\n              *(_DWORD *)(v3 + 4LL * v15) = 0;\n              *(_DWORD *)(v3 + 4LL * v15 + 1600) = 0;\n              *(_DWORD *)(v3 + 4LL * v15 + 3200) = 0;\n              *(_DWORD *)(v3 + 4LL * v15 + 4800) = 0;\n              *(_DWORD *)(v3 + 4LL * v15 + 6400) = 0;\n              v17 = v15 == v368;\n              v5 = (unsigned int)v8;\n              if ( v17 )\n                v5 = 0xFFFFFFFFLL;\n              if ( v8 > 0 )\n                v8 = v5;\n              ++v14;\n              --v13;\n            }\n            while ( v13 );\n          }\n        }\n        else\n        {\n          if ( (_DWORD)v5 == 100000 )\n          {\n            v18 = *(signed int *)(v3 + 9604);\n            v5 = (unsigned int)(v18 + 1);\n            *(_DWORD *)(v3 + 9604) = v5;\n            *(_DWORD *)(v3 + 4 * v18 + 8000) = v11;\n          }\n          *(_DWORD *)(v3 + 4LL * v11) = 0;\n          *(_DWORD *)(v3 + 4LL * v11 + 1600) = 0;\n          *(_DWORD *)(v3 + 4LL * v11 + 3200) = 0;\n          *(_DWORD *)(v3 + 4LL * v11 + 4800) = 0;\n          *(_DWORD *)(v3 + 4LL * v11 + 6400) = 0;\n        }\n      }\n      ++v9;\n    }\n    while ( v9 < (signed int)result );\n  }\n  v19 = *(_DWORD *)(v3 + 9600);\n  v20 = *(_DWORD *)(v3 + 9604);\n  v21 = v356;\n  if ( v19 < v20 )\n  {\n    v367 = 3 - v373;\n    v407 = v3 + 8012;\n    while ( 1 )\n    {\n      if ( v20 >= 362 )\n        sub_4340E0(\n          (__int64)\"engine/readconnect.c\",\n          0x387u,\n          (__int64)\"conn->queue_end <= 19 * 19\",\n          0xFFFFFFFF,\n          0xFFFFFFFF);\n      v22 = -1;\n      if ( v19 >= v20 )\n        goto LABEL_55;\n      v23 = v19;\n      v24 = v20;\n      v25 = v20 - 1LL - v19;\n      v26 = ((_BYTE)v20 - (_BYTE)v19) & 3;\n      if ( v25 >= 3 )\n        break;\n      v22 = -1;\n      v5 = 100000LL;\n      if ( v26 )\n        goto LABEL_49;\nLABEL_55:\n      if ( v22 != v19 )\n      {\n        v39 = *(_DWORD *)(v3 + 4LL * v19 + 8000);\n        v5 = *(unsigned int *)(v3 + 4LL * v22 + 8000);\n        *(_DWORD *)(v3 + 4LL * v19 + 8000) = v5;\n        *(_DWORD *)(v3 + 4LL * v22 + 8000) = v39;\n        v19 = *(_DWORD *)(v3 + 9600);\n      }\n      v40 = *(_DWORD *)(v3 + 4LL * v19 + 8000);\n      v41 = v40;\n      result = *(unsigned int *)(v3 + 4LL * v40);\n      v403 = result;\n      if ( (signed int)result > v8 )\n        return result;\n      result = (unsigned __int8)byte_98A1B0[v40];\n      v357 = *(unsigned int *)(v3 + 4LL * v19 + 8000);\n      v374 = v40;\n      if ( (_BYTE)result != v21 )\n      {\n        if ( (_BYTE)result )\n        {\n          if ( v367 != (_DWORD)result )\n            goto LABEL_906;\n          v322 = *(_DWORD *)(v3 + 4LL * v19 + 8000);\n          result = sub_43AED0((unsigned int)v40, v5);\n          if ( !(_DWORD)result )\n            goto LABEL_906;\n          result = sub_4083A0(v322);\n          v40 = v322;\n          v41 = v374;\n          if ( (signed int)result > 2 )\n            goto LABEL_906;\n        }\n        v323 = v403 + 1000;\n        v392 = v403 + 1500;\n        v398 = v403 + 1300;\n        v324 = 0LL;\n        v363 = v403 + 1000;\n        while ( 2 )\n        {\n          v326 = dword_5641B0[v324];\n          v327 = v324 + 1;\n          v359 = v327;\n          v328 = dword_5641B0[v327 & 3];\n          v329 = v326 + v41;\n          v330 = v326 + v41 + v328;\n          v331 = byte_98A1B0[v326 + v41];\n          v366 = v330;\n          if ( v331 == v356 )\n          {\n            v332 = *(_DWORD *)(v3 + 4 * v329);\n            if ( v403 >= v332 )\n              goto LABEL_879;\n            if ( v356 )\n            {\n              v5 = 361LL;\n              LODWORD(v333) = sub_40A6C0(v329, 361, (__int64)v408);\n              if ( (signed int)v333 > 0 )\n              {\n                v333 = (unsigned int)v333;\n                v334 = v408;\n                v40 = v357;\n                v335 = v374;\n                v323 = v403 + 1000;\n                do\n                {\n                  v336 = *v334;\n                  v5 = *v334;\n                  if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n                  {\n                    v337 = *(signed int *)(v3 + 9604);\n                    *(_DWORD *)(v3 + 9604) = v337 + 1;\n                    v335 = v374;\n                    *(_DWORD *)(v3 + 4 * v337 + 8000) = v336;\n                  }\n                  *(_DWORD *)(v3 + 4LL * v336) = v403;\n                  *(_DWORD *)(v3 + 4LL * v336 + 1600) = 0;\n                  *(_DWORD *)(v3 + 4LL * v336 + 3200) = v357;\n                  *(_DWORD *)(v3 + 4LL * v336 + 4800) = *(_DWORD *)(v3 + 4 * v335 + 4800);\n                  *(_DWORD *)(v3 + 4LL * v336 + 6400) = *(_DWORD *)(v3 + 4 * v335 + 6400);\n                  v17 = v336 == v368;\n                  v338 = v8;\n                  if ( v17 )\n                    v338 = v403 - 1;\n                  if ( v403 < v8 )\n                    v8 = v338;\n                  ++v334;\n                  --v333;\n                }\n                while ( v333 );\n                goto LABEL_879;\n              }\nLABEL_875:\n              v40 = v357;\n              v323 = v403 + 1000;\n              goto LABEL_879;\n            }\n            if ( v332 == 100000 )\n            {\n              v345 = *(signed int *)(v3 + 9604);\n              *(_DWORD *)(v3 + 9604) = v345 + 1;\n              *(_DWORD *)(v3 + 4 * v345 + 8000) = v329;\n            }\n            *(_DWORD *)(v3 + 4 * v329) = v403;\n            *(_DWORD *)(v3 + 4 * v329 + 1600) = 0;\n            *(_DWORD *)(v3 + 4 * v329 + 3200) = v40;\n            *(_DWORD *)(v3 + 4 * v329 + 4800) = *(_DWORD *)(v3 + 4 * v41 + 4800);\n            *(_DWORD *)(v3 + 4 * v329 + 6400) = *(_DWORD *)(v3 + 4 * v41 + 6400);\n          }\n          else\n          {\n            if ( v331 == 3 )\n              goto LABEL_879;\n            v339 = *(_DWORD *)(v3 + 4 * v329);\n            if ( v323 >= v339 )\n              goto LABEL_879;\n            if ( v331 )\n            {\n              v5 = 361LL;\n              LODWORD(v340) = sub_40A6C0(v329, 361, (__int64)v408);\n              if ( (signed int)v340 <= 0 )\n                goto LABEL_875;\n              v340 = (unsigned int)v340;\n              v341 = v408;\n              v40 = v357;\n              v323 = v403 + 1000;\n              do\n              {\n                v342 = *v341;\n                v5 = *v341;\n                if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n                {\n                  v343 = *(signed int *)(v3 + 9604);\n                  *(_DWORD *)(v3 + 9604) = v343 + 1;\n                  *(_DWORD *)(v3 + 4 * v343 + 8000) = v342;\n                }\n                *(_DWORD *)(v3 + 4LL * v342) = v363;\n                *(_DWORD *)(v3 + 4LL * v342 + 1600) = 1000;\n                *(_DWORD *)(v3 + 4LL * v342 + 3200) = v357;\n                *(_DWORD *)(v3 + 4LL * v342 + 4800) = 0;\n                *(_DWORD *)(v3 + 4LL * v342 + 6400) = 0;\n                v17 = v342 == v368;\n                v344 = v8;\n                if ( v17 )\n                  v344 = v403 + 999;\n                if ( v363 < v8 )\n                  v8 = v344;\n                ++v341;\n                --v340;\n              }\n              while ( v340 );\n            }\n            else\n            {\n              if ( v339 == 100000 )\n              {\n                v346 = *(signed int *)(v3 + 9604);\n                *(_DWORD *)(v3 + 9604) = v346 + 1;\n                *(_DWORD *)(v3 + 4 * v346 + 8000) = v329;\n              }\n              *(_DWORD *)(v3 + 4 * v329) = v323;\n              *(_DWORD *)(v3 + 4 * v329 + 1600) = 1000;\n              *(_DWORD *)(v3 + 4 * v329 + 3200) = v40;\n              *(_DWORD *)(v3 + 4 * v329 + 4800) = 0;\n              *(_DWORD *)(v3 + 4 * v329 + 6400) = 0;\n            }\n          }\nLABEL_879:\n          v347 = v40 + v328;\n          result = v366;\n          v348 = byte_98A1B0[v366];\n          if ( v348 )\n          {\n            if ( v348 == v356 )\n              goto LABEL_890;\nLABEL_904:\n            v324 = v359;\n          }\n          else\n          {\n            if ( byte_98A1B0[v329] || byte_98A1B0[v347] || (v349 = *(_DWORD *)(v3 + 4LL * v366), v349 <= v392) )\n            {\n              if ( v356 )\n                goto LABEL_904;\n            }\n            else\n            {\n              if ( v349 == 100000 )\n              {\n                v350 = *(signed int *)(v3 + 9604);\n                *(_DWORD *)(v3 + 9604) = v350 + 1;\n                *(_DWORD *)(v3 + 4 * v350 + 8000) = v366;\n              }\n              *(_DWORD *)(v3 + 4LL * v366) = v392;\n              *(_DWORD *)(v3 + 4LL * v366 + 1600) = 1000;\n              *(_DWORD *)(v3 + 4LL * v366 + 3200) = v40;\n              *(_DWORD *)(v3 + 4LL * v366 + 4800) = 0;\n              *(_DWORD *)(v3 + 4LL * v366 + 6400) = 0;\n              if ( byte_98A1B0[v366] != v356 )\n                goto LABEL_904;\n            }\nLABEL_890:\n            if ( byte_98A1B0[v329] )\n              goto LABEL_904;\n            if ( byte_98A1B0[v347] )\n              goto LABEL_904;\n            v351 = *(_DWORD *)(v3 + 4LL * v366);\n            if ( v351 <= v398 )\n              goto LABEL_904;\n            v324 = v359;\n            if ( v356 )\n            {\n              v5 = 361LL;\n              result = sub_40A6C0(v366, 361, (__int64)v408);\n              if ( (signed int)result <= 0 )\n              {\n                v40 = v357;\n                v323 = v403 + 1000;\n              }\n              else\n              {\n                result = (unsigned int)result;\n                v352 = v408;\n                v40 = v357;\n                v323 = v403 + 1000;\n                do\n                {\n                  v353 = *v352;\n                  v5 = *v352;\n                  if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n                  {\n                    v354 = *(signed int *)(v3 + 9604);\n                    *(_DWORD *)(v3 + 9604) = v354 + 1;\n                    *(_DWORD *)(v3 + 4 * v354 + 8000) = v353;\n                  }\n                  *(_DWORD *)(v3 + 4LL * v353) = v398;\n                  *(_DWORD *)(v3 + 4LL * v353 + 1600) = 1000;\n                  *(_DWORD *)(v3 + 4LL * v353 + 3200) = v357;\n                  *(_DWORD *)(v3 + 4LL * v353 + 4800) = 0;\n                  *(_DWORD *)(v3 + 4LL * v353 + 6400) = 0;\n                  v17 = v353 == v368;\n                  v355 = v8;\n                  if ( v17 )\n                    v355 = v403 + 1299;\n                  if ( v398 < v8 )\n                    v8 = v355;\n                  ++v352;\n                  --result;\n                }\n                while ( result );\n              }\n            }\n            else\n            {\n              if ( v351 == 100000 )\n              {\n                v325 = *(signed int *)(v3 + 9604);\n                *(_DWORD *)(v3 + 9604) = v325 + 1;\n                *(_DWORD *)(v3 + 4 * v325 + 8000) = v366;\n              }\n              *(_DWORD *)(v3 + 4LL * v366) = v398;\n              *(_DWORD *)(v3 + 4LL * v366 + 1600) = 1000;\n              *(_DWORD *)(v3 + 4LL * v366 + 3200) = v40;\n              *(_DWORD *)(v3 + 4LL * v366 + 4800) = 0;\n              *(_DWORD *)(v3 + 4LL * v366 + 6400) = 0;\n            }\n          }\n          v41 = v374;\n          if ( v324 == 4 )\n            goto LABEL_906;\n          continue;\n        }\n      }\n      v377 = v403 + 100;\n      v372 = v403 + 200;\n      v400 = v403 + 700;\n      v397 = v403 + 1000;\n      v376 = v403 + 1100;\n      v375 = v403 + 1300;\n      v390 = v403 + 1200;\n      v380 = v403 + 2000;\n      v389 = v403 + 1800;\n      v401 = v403 + 300;\n      v399 = v403 + 1500;\n      v42 = 0LL;\n      do\n      {\n        v104 = dword_5641B0[v42];\n        v105 = v42 + 1;\n        v5 = (unsigned int)dword_5641B0[v105 & 3];\n        v70 = v104 + v41;\n        v371 = v104 + v41 + v5;\n        v106 = dword_5641B0[v105 & 3];\n        v391 = v41 - v104;\n        v71 = (unsigned __int8 *)(v104 + v41 + 10002864);\n        v404 = v104;\n        *(_QWORD *)&v358 = v104 + v41;\n        *((_QWORD *)&v358 + 1) = v104 + v41 + 10002864;\n        v402 = v105;\n        if ( byte_98A1B0[v104 + v41] )\n        {\n          v91 = v356;\n          v107 = dword_5641B0[v105 & 3];\n          goto LABEL_260;\n        }\n        v108 = v104 + v41;\n        if ( (unsigned int)sub_407C30(v70, v367) )\n        {\n          v109 = *(_DWORD *)(v3 + 4 * v108);\n          v70 = v108;\n          if ( v403 < v109 )\n          {\n            v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n            if ( **((_BYTE **)&v358 + 1) )\n            {\n              LODWORD(v110) = sub_40A6C0(v108, 361, (__int64)v408);\n              v91 = v356;\n              v107 = v106;\n              if ( (signed int)v110 <= 0 )\n              {\n                v40 = v357;\n                v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n                v70 = v358;\n                if ( **((_BYTE **)&v358 + 1) )\n                  goto LABEL_260;\n              }\n              else\n              {\n                v110 = (unsigned int)v110;\n                v111 = v408;\n                v40 = v357;\n                v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n                v70 = v358;\n                do\n                {\n                  v112 = *v111;\n                  if ( *(_DWORD *)(v3 + 4LL * *v111) == 100000 )\n                  {\n                    v113 = *(signed int *)(v3 + 9604);\n                    *(_DWORD *)(v3 + 9604) = v113 + 1;\n                    *(_DWORD *)(v3 + 4 * v113 + 8000) = v112;\n                  }\n                  *(_DWORD *)(v3 + 4LL * v112) = v403;\n                  *(_DWORD *)(v3 + 4LL * v112 + 1600) = 0;\n                  *(_DWORD *)(v3 + 4LL * v112 + 3200) = v357;\n                  *(_DWORD *)(v3 + 4LL * v112 + 4800) = v358;\n                  *(_DWORD *)(v3 + 4LL * v112 + 6400) = 0;\n                  v17 = v112 == v368;\n                  v114 = v8;\n                  if ( v17 )\n                    v114 = v403 - 1;\n                  if ( v403 < v8 )\n                    v8 = v114;\n                  ++v111;\n                  --v110;\n                }\n                while ( v110 );\n                if ( **((_BYTE **)&v358 + 1) )\n                  goto LABEL_260;\n              }\n            }\n            else\n            {\n              v91 = v356;\n              v107 = v106;\n              if ( v109 == 100000 )\n              {\n                v127 = *(signed int *)(v3 + 9604);\n                *(_DWORD *)(v3 + 9604) = v127 + 1;\n                *(_DWORD *)(v3 + 4 * v127 + 8000) = v108;\n              }\n              *(_DWORD *)(v3 + 4 * v108) = v403;\n              *(_DWORD *)(v3 + 4 * v108 + 1600) = 0;\n              v40 = v357;\n              *(_DWORD *)(v3 + 4 * v108 + 3200) = v357;\n              *(_DWORD *)(v3 + 4 * v108 + 4800) = v108;\n              *(_DWORD *)(v3 + 4 * v108 + 6400) = 0;\n              if ( **((_BYTE **)&v358 + 1) )\n                goto LABEL_260;\n            }\n            goto LABEL_226;\n          }\n          v91 = v356;\n          v40 = v357;\n        }\n        else\n        {\n          v91 = v356;\n          v40 = v357;\n          v70 = v108;\n        }\n        v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n        v107 = v106;\n        if ( **((_BYTE **)&v358 + 1) )\n          goto LABEL_260;\nLABEL_226:\n        if ( *(_DWORD *)(v3 + 4 * v70) <= v377 )\n          goto LABEL_260;\n        v115 = v70;\n        if ( !(unsigned int)sub_40AD70(v70, v367) )\n        {\n          v40 = v357;\n          v70 = v115;\nLABEL_254:\n          v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n          v91 = v356;\n          goto LABEL_260;\n        }\n        if ( (signed int)sub_4093D0(v115, v367, 1, &v409) <= 0 )\n        {\n          v116 = 0;\n          v364 = 0;\n          v163 = v373;\n          v117 = v374;\n          goto LABEL_257;\n        }\n        v116 = 0;\n        if ( (signed int)sub_4093D0(v409, v367, 2, 0LL) > 2 )\n          v116 = v409;\n        v117 = v374;\n        if ( (unsigned int)sub_4083A0(v357) != 2 )\n        {\n          v364 = 0;\n          v163 = v373;\n          goto LABEL_257;\n        }\n        v360 = v116;\n        v364 = 0;\n        v118 = 0LL;\n        v119 = v358;\n        do\n        {\n          v120 = dword_5641B0[v118];\n          if ( !byte_98A1B0[v120 + (signed int)v409] )\n          {\n            v121 = (signed int)v409 + v120;\n            if ( (_DWORD)v121 != v119 )\n            {\n              v122 = sub_406880(v121, v367, \"compute_connection_distances\", v357, 0, 0);\n              v119 = v358;\n              if ( v122 )\n              {\n                v123 = qword_88C238;\n                v124 = dword_88C22C;\n                v125 = sub_4083A0(v357);\n                qword_88C238 = 0LL;\n                dword_88C22C = 0;\n                if ( v125 != 1 )\n                {\n                  if ( v125 == 2 )\n                  {\n                    v126 = sub_43FAB0(v357, 0LL);\nLABEL_240:\n                    qword_88C238 = v123;\n                    dword_88C22C = v124;\n                    if ( v126 )\n                    {\n                      v364 = v409 + dword_5641B0[v118];\n                      sub_407030();\n                      v163 = v373;\n                      v117 = v374;\n                      goto LABEL_246;\n                    }\n                  }\n                  else\n                  {\n                    qword_88C238 = v123;\n                    dword_88C22C = v124;\n                  }\n                  sub_407030();\n                  v117 = v374;\n                  v119 = v358;\n                  goto LABEL_244;\n                }\n                v126 = sub_43B050(v357, 0LL);\n                goto LABEL_240;\n              }\n            }\n          }\nLABEL_244:\n          ++v118;\n        }\n        while ( v118 < 4 );\n        v163 = v373;\nLABEL_246:\n        v116 = v360;\nLABEL_257:\n        v128 = *(_DWORD *)(v3 + 4 * v117 + 4800);\n        v369 = *(_DWORD *)(v3 + 4 * v117 + 6400);\n        v129 = v163;\n        if ( (unsigned int)sub_43ADB0(v128, v116, v163)\n          || (v361 = v116, v130 = v129, (unsigned int)sub_43ADB0(v128, v364, v129)) )\n        {\n          v40 = v357;\n          v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n          v70 = v358;\n          v91 = v356;\n          v107 = v106;\n          goto LABEL_260;\n        }\n        v159 = sub_43ADB0(v369, v361, v129);\n        v107 = v106;\n        if ( v159 || (v160 = v364, (unsigned int)sub_43ADB0(v369, v364, v130)) )\n        {\nLABEL_335:\n          v40 = v357;\n          v70 = v358;\n          goto LABEL_254;\n        }\n        v70 = v358;\n        v270 = *(_DWORD *)(v3 + 4 * v358);\n        if ( v377 >= v270 )\n        {\n          v40 = v357;\n          goto LABEL_254;\n        }\n        v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n        if ( **((_BYTE **)&v358 + 1) )\n        {\n          LODWORD(v271) = sub_40A6C0(v358, 361, (__int64)v408);\n          if ( (signed int)v271 <= 0 )\n            goto LABEL_335;\n          v271 = (unsigned int)v271;\n          v272 = v408;\n          v40 = v357;\n          v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n          v70 = v358;\n          v91 = v356;\n          do\n          {\n            v273 = *v272;\n            if ( *(_DWORD *)(v3 + 4LL * *v272) == 100000 )\n            {\n              v274 = *(signed int *)(v3 + 9604);\n              *(_DWORD *)(v3 + 9604) = v274 + 1;\n              v160 = v364;\n              *(_DWORD *)(v3 + 4 * v274 + 8000) = v273;\n            }\n            *(_DWORD *)(v3 + 4LL * v273) = v377;\n            *(_DWORD *)(v3 + 4LL * v273 + 1600) = 100;\n            *(_DWORD *)(v3 + 4LL * v273 + 3200) = v357;\n            *(_DWORD *)(v3 + 4LL * v273 + 4800) = v361;\n            *(_DWORD *)(v3 + 4LL * v273 + 6400) = v160;\n            v17 = v273 == v368;\n            v275 = v8;\n            if ( v17 )\n              v275 = v403 + 99;\n            if ( v377 < v8 )\n              v8 = v275;\n            ++v272;\n            --v271;\n          }\n          while ( v271 );\n        }\n        else\n        {\n          if ( v270 == 100000 )\n          {\n            v90 = *(signed int *)(v3 + 9604);\n            *(_DWORD *)(v3 + 9604) = v90 + 1;\n            *(_DWORD *)(v3 + 4 * v90 + 8000) = v358;\n          }\n          *(_DWORD *)(v3 + 4 * v358) = v377;\n          *(_DWORD *)(v3 + 4 * v358 + 1600) = 100;\n          v40 = v357;\n          *(_DWORD *)(v3 + 4 * v358 + 3200) = v357;\n          *(_DWORD *)(v3 + 4 * v358 + 4800) = v361;\n          *(_DWORD *)(v3 + 4 * v358 + 6400) = v364;\n          v91 = v356;\n        }\nLABEL_260:\n        v370 = v40 + 2 * v5;\n        v131 = v70 + 2 * v5;\n        v362 = v40 + v107;\n        v54 = &byte_98A1B0[v371];\n        v365 = &byte_98A1B0[v371];\n        if ( *v71 != v91 || *v54 || byte_98A1B0[v131] != v91 || byte_98A1B0[v370] != v91 || byte_98A1B0[v362] )\n          goto LABEL_280;\n        v132 = *(_DWORD *)(v3 + 4LL * v371);\n        v133 = v403 + 100;\n        if ( v377 < v132 )\n        {\n          if ( v132 == 100000 )\n          {\n            v134 = *(signed int *)(v3 + 9604);\n            *(_DWORD *)(v3 + 9604) = v134 + 1;\n            *(_DWORD *)(v3 + 4 * v134 + 8000) = v371;\n          }\n          v133 = v403 + 100;\n          *(_DWORD *)(v3 + 4LL * v371) = v377;\n          *(_DWORD *)(v3 + 4LL * v371 + 1600) = 100;\n          *(_DWORD *)(v3 + 4LL * v371 + 3200) = v40;\n          *(_DWORD *)(v3 + 4LL * v371 + 4800) = 0;\n          *(_DWORD *)(v3 + 4LL * v371 + 6400) = 0;\n        }\n        v135 = *(_DWORD *)(v3 + 4LL * (signed int)v362);\n        if ( v133 >= v135 )\n        {\nLABEL_280:\n          if ( *v54 != v91 )\n            goto LABEL_289;\n          goto LABEL_281;\n        }\n        if ( !byte_98A1B0[v362] )\n        {\n          if ( v135 == 100000 )\n          {\n            v162 = *(signed int *)(v3 + 9604);\n            *(_DWORD *)(v3 + 9604) = v162 + 1;\n            *(_DWORD *)(v3 + 4 * v162 + 8000) = v362;\n          }\n          *(_DWORD *)(v3 + 4LL * (signed int)v362) = v377;\n          *(_DWORD *)(v3 + 4LL * (signed int)v362 + 1600) = 100;\n          *(_DWORD *)(v3 + 4LL * (signed int)v362 + 3200) = v40;\n          *(_DWORD *)(v3 + 4LL * (signed int)v362 + 4800) = 0;\n          *(_DWORD *)(v3 + 4LL * (signed int)v362 + 6400) = 0;\n          if ( *v54 != v91 )\n            goto LABEL_289;\nLABEL_281:\n          if ( *v71 || byte_98A1B0[v362] )\n            goto LABEL_289;\n          v387 = v5;\n          v141 = *(_DWORD *)(v3 + 4 * v374 + 4800);\n          v378 = *(_DWORD *)(v3 + 4 * v374 + 6400);\n          if ( (unsigned int)sub_43ADB0(v141, (unsigned int)v70, v373)\n            || (unsigned int)sub_43ADB0(v141, v362, v373)\n            || (unsigned int)sub_43ADB0(v378, v358, v373)\n            || (unsigned int)sub_43ADB0(v378, v362, v373) )\n          {\n            v40 = v357;\n            v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n            v70 = v358;\n            v54 = &byte_98A1B0[v371];\n          }\n          else\n          {\n            v264 = *(_DWORD *)(v3 + 4LL * v371);\n            v40 = v357;\n            v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n            v70 = v358;\n            v54 = &byte_98A1B0[v371];\n            v91 = v356;\n            if ( v264 <= v377 )\n              goto LABEL_289;\n            if ( !*v365 )\n            {\n              if ( v264 == 100000 )\n              {\n                v89 = *(signed int *)(v3 + 9604);\n                *(_DWORD *)(v3 + 9604) = v89 + 1;\n                *(_DWORD *)(v3 + 4 * v89 + 8000) = v371;\n              }\n              *(_DWORD *)(v3 + 4LL * v371) = v377;\n              *(_DWORD *)(v3 + 4LL * v371 + 1600) = 100;\n              *(_DWORD *)(v3 + 4LL * v371 + 3200) = v357;\n              *(_DWORD *)(v3 + 4LL * v371 + 4800) = v358;\n              *(_DWORD *)(v3 + 4LL * v371 + 6400) = v362;\n              goto LABEL_289;\n            }\n            LODWORD(v265) = sub_40A6C0(v371, 361, (__int64)v408);\n            if ( (signed int)v265 > 0 )\n            {\n              v265 = (unsigned int)v265;\n              v266 = v408;\n              v40 = v357;\n              v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n              v70 = v358;\n              v91 = v356;\n              do\n              {\n                v267 = *v266;\n                if ( *(_DWORD *)(v3 + 4LL * *v266) == 100000 )\n                {\n                  v268 = *(signed int *)(v3 + 9604);\n                  *(_DWORD *)(v3 + 9604) = v268 + 1;\n                  v54 = &byte_98A1B0[v371];\n                  *(_DWORD *)(v3 + 4 * v268 + 8000) = v267;\n                }\n                *(_DWORD *)(v3 + 4LL * v267) = v377;\n                *(_DWORD *)(v3 + 4LL * v267 + 1600) = 100;\n                *(_DWORD *)(v3 + 4LL * v267 + 3200) = v357;\n                *(_DWORD *)(v3 + 4LL * v267 + 4800) = v358;\n                *(_DWORD *)(v3 + 4LL * v267 + 6400) = v362;\n                v17 = v267 == v368;\n                v269 = v8;\n                if ( v17 )\n                  v269 = v403 + 99;\n                if ( v377 < v8 )\n                  v8 = v269;\n                ++v266;\n                v17 = v265-- == 1;\n                v5 = v387;\n              }\n              while ( !v17 );\n              goto LABEL_289;\n            }\n            v40 = v357;\n            v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n            v70 = v358;\n          }\n          v91 = v356;\n          goto LABEL_289;\n        }\n        v386 = v5;\n        LODWORD(v136) = sub_40A6C0(v362, 361, (__int64)v408);\n        if ( (signed int)v136 > 0 )\n        {\n          v136 = (unsigned int)v136;\n          v137 = v408;\n          v40 = v357;\n          v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n          v70 = v358;\n          v91 = v356;\n          do\n          {\n            v138 = *v137;\n            if ( *(_DWORD *)(v3 + 4LL * *v137) == 100000 )\n            {\n              v139 = *(signed int *)(v3 + 9604);\n              *(_DWORD *)(v3 + 9604) = v139 + 1;\n              v54 = &byte_98A1B0[v371];\n              *(_DWORD *)(v3 + 4 * v139 + 8000) = v138;\n            }\n            *(_DWORD *)(v3 + 4LL * v138) = v377;\n            *(_DWORD *)(v3 + 4LL * v138 + 1600) = 100;\n            *(_DWORD *)(v3 + 4LL * v138 + 3200) = v357;\n            *(_DWORD *)(v3 + 4LL * v138 + 4800) = 0;\n            *(_DWORD *)(v3 + 4LL * v138 + 6400) = 0;\n            v17 = v138 == v368;\n            v140 = v8;\n            if ( v17 )\n              v140 = v403 + 99;\n            if ( v377 < v8 )\n              v8 = v140;\n            ++v137;\n            v17 = v136-- == 1;\n            v5 = v386;\n          }\n          while ( !v17 );\n          goto LABEL_280;\n        }\n        v40 = v357;\n        v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n        v70 = v358;\n        v91 = v356;\n        if ( *v54 == v356 )\n          goto LABEL_281;\nLABEL_289:\n        v388 = v391 + v107;\n        v379 = v391 + 2 * v5;\n        v385 = v131;\n        if ( byte_98A1B0[v362] )\n        {\n          v83 = 3 - v373;\n          goto LABEL_354;\n        }\n        if ( byte_98A1B0[v370] != v91 || *(_DWORD *)(v3 + 4LL * v370) <= v372 )\n          goto LABEL_352;\n        v83 = 3 - v373;\n        v5 = v367;\n        if ( (signed int)sub_4093D0(v362, v367, 3, 0LL) > 2 )\n          goto LABEL_730;\n        if ( *v365 )\n          goto LABEL_295;\n        v5 = v373;\n        v69 = v374;\n        if ( (signed int)sub_4093D0(v371, v373, 3, 0LL) < 3 )\n        {\n          v40 = v357;\n          goto LABEL_314;\n        }\n        v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n        v142 = v356;\n        v40 = v357;\n        v70 = v358;\n        if ( **((_BYTE **)&v358 + 1) == v356 )\n          goto LABEL_298;\n        if ( !**((_BYTE **)&v358 + 1) )\n        {\n          v381 = *(_DWORD *)(v3 + 4 * v374 + 6400);\n          v393 = *(_DWORD *)(v3 + 4 * v374 + 4800);\n          v5 = (unsigned int)v358;\n          if ( (unsigned int)sub_43ADB0(*(unsigned int *)(v3 + 4 * v374 + 4800), (unsigned int)v358, v373) )\n            goto LABEL_295;\n          v5 = v362;\n          if ( (unsigned int)sub_43ADB0(v393, v362, v373) )\n            goto LABEL_295;\n          v5 = v358;\n          if ( (unsigned int)sub_43ADB0(v381, v358, v373) )\n            goto LABEL_295;\n          v5 = v362;\n          if ( (unsigned int)sub_43ADB0(v381, v362, v373) )\n            goto LABEL_295;\n          v5 = v367;\n          v161 = sub_4093D0(v358, v367, 3, 0LL);\n          v70 = v358;\n          v40 = v357;\n          v69 = v374;\n          v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n          v142 = v356;\n          if ( v161 > 2 )\n            goto LABEL_315;\nLABEL_298:\n          v143 = byte_98A1B0[v385];\n          v101 = v142;\n          if ( v143 != v142 )\n          {\n            if ( !v143 )\n            {\n              v383 = *(_DWORD *)(v3 + 4 * v69 + 6400);\n              v395 = *(_DWORD *)(v3 + 4 * v69 + 4800);\n              v5 = (unsigned int)v385;\n              if ( (unsigned int)sub_43ADB0(*(unsigned int *)(v3 + 4 * v69 + 4800), (unsigned int)v385, v373)\n                || (v5 = v362, (unsigned int)sub_43ADB0(v395, v362, v373))\n                || (v5 = (unsigned int)v385, (unsigned int)sub_43ADB0(v383, (unsigned int)v385, v373))\n                || (v5 = v362, (unsigned int)sub_43ADB0(v383, v362, v373)) )\n              {\n                v83 = 3 - v373;\n                goto LABEL_295;\n              }\n              v5 = v367;\n              v100 = sub_4093D0(v385, v367, 3, 0LL);\n              v40 = v357;\n              v69 = v374;\n              v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n              v70 = v358;\n              if ( v100 <= 2 )\n              {\n                v101 = byte_98A1B0[v385];\n                goto LABEL_299;\n              }\n            }\n            v83 = 3 - v373;\n            goto LABEL_315;\n          }\nLABEL_299:\n          v144 = *(_DWORD *)(v3 + 4LL * v370);\n          if ( *v71 )\n          {\n            v83 = 3 - v373;\n            if ( v101 )\n            {\n              if ( v372 >= v144 )\n                goto LABEL_315;\n              if ( byte_98A1B0[v370] )\n              {\n                v5 = 361LL;\n                LODWORD(v145) = sub_40A6C0(v370, 361, (__int64)v408);\n                if ( (signed int)v145 > 0 )\n                {\n                  v145 = (unsigned int)v145;\n                  v146 = v408;\n                  v40 = v357;\n                  v69 = v374;\n                  v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n                  v70 = v358;\n                  do\n                  {\n                    v147 = *v146;\n                    v5 = *v146;\n                    if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n                    {\n                      v148 = *(signed int *)(v3 + 9604);\n                      *(_DWORD *)(v3 + 9604) = v148 + 1;\n                      v69 = v374;\n                      *(_DWORD *)(v3 + 4 * v148 + 8000) = v147;\n                    }\n                    *(_DWORD *)(v3 + 4LL * v147) = v372;\n                    *(_DWORD *)(v3 + 4LL * v147 + 1600) = 200;\n                    *(_DWORD *)(v3 + 4LL * v147 + 3200) = v357;\n                    *(_DWORD *)(v3 + 4LL * v147 + 4800) = 0;\n                    *(_DWORD *)(v3 + 4LL * v147 + 6400) = 0;\n                    v17 = v147 == v368;\n                    v149 = v8;\n                    if ( v17 )\n                      v149 = v403 + 199;\n                    if ( v372 < v8 )\n                      v8 = v149;\n                    ++v146;\n                    --v145;\n                  }\n                  while ( v145 );\n                  goto LABEL_315;\n                }\nLABEL_295:\n                v40 = v357;\n                v69 = v374;\nLABEL_314:\n                v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n                v70 = v358;\n                goto LABEL_315;\n              }\n              if ( v144 == 100000 )\n              {\n                v92 = *(signed int *)(v3 + 9604);\n                *(_DWORD *)(v3 + 9604) = v92 + 1;\n                *(_DWORD *)(v3 + 4 * v92 + 8000) = v370;\n              }\n              *(_DWORD *)(v3 + 4LL * v370) = v372;\n              *(_DWORD *)(v3 + 4LL * v370 + 1600) = 200;\n              *(_DWORD *)(v3 + 4LL * v370 + 3200) = v40;\n              *(_DWORD *)(v3 + 4LL * v370 + 4800) = 0;\n              *(_DWORD *)(v3 + 4LL * v370 + 6400) = 0;\n            }\n            else\n            {\n              if ( v372 >= v144 )\n                goto LABEL_315;\n              if ( byte_98A1B0[v370] )\n              {\n                v5 = 361LL;\n                LODWORD(v286) = sub_40A6C0(v370, 361, (__int64)v408);\n                if ( (signed int)v286 <= 0 )\n                  goto LABEL_295;\n                v286 = (unsigned int)v286;\n                v287 = v408;\n                v40 = v357;\n                v69 = v374;\n                v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n                v70 = v358;\n                do\n                {\n                  v288 = *v287;\n                  v5 = *v287;\n                  if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n                  {\n                    v289 = *(signed int *)(v3 + 9604);\n                    *(_DWORD *)(v3 + 9604) = v289 + 1;\n                    v69 = v374;\n                    *(_DWORD *)(v3 + 4 * v289 + 8000) = v288;\n                  }\n                  *(_DWORD *)(v3 + 4LL * v288) = v372;\n                  *(_DWORD *)(v3 + 4LL * v288 + 1600) = 200;\n                  *(_DWORD *)(v3 + 4LL * v288 + 3200) = v357;\n                  *(_DWORD *)(v3 + 4LL * v288 + 4800) = v385;\n                  *(_DWORD *)(v3 + 4LL * v288 + 6400) = 0;\n                  v17 = v288 == v368;\n                  v290 = v8;\n                  if ( v17 )\n                    v290 = v403 + 199;\n                  if ( v372 < v8 )\n                    v8 = v290;\n                  ++v287;\n                  --v286;\n                }\n                while ( v286 );\n              }\n              else\n              {\n                if ( v144 == 100000 )\n                {\n                  v96 = *(signed int *)(v3 + 9604);\n                  *(_DWORD *)(v3 + 9604) = v96 + 1;\n                  *(_DWORD *)(v3 + 4 * v96 + 8000) = v370;\n                }\n                *(_DWORD *)(v3 + 4LL * v370) = v372;\n                *(_DWORD *)(v3 + 4LL * v370 + 1600) = 200;\n                *(_DWORD *)(v3 + 4LL * v370 + 3200) = v40;\n                *(_DWORD *)(v3 + 4LL * v370 + 4800) = v385;\n                *(_DWORD *)(v3 + 4LL * v370 + 6400) = 0;\n              }\n            }\n          }\n          else\n          {\n            v83 = 3 - v373;\n            if ( v101 )\n            {\n              if ( v372 >= v144 )\n                goto LABEL_315;\n              if ( byte_98A1B0[v370] )\n              {\n                v5 = 361LL;\n                LODWORD(v276) = sub_40A6C0(v370, 361, (__int64)v408);\n                if ( (signed int)v276 <= 0 )\n                  goto LABEL_295;\n                v276 = (unsigned int)v276;\n                v277 = v408;\n                v40 = v357;\n                v69 = v374;\n                v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n                v70 = v358;\n                do\n                {\n                  v278 = *v277;\n                  v5 = *v277;\n                  if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n                  {\n                    v279 = *(signed int *)(v3 + 9604);\n                    *(_DWORD *)(v3 + 9604) = v279 + 1;\n                    v69 = v374;\n                    *(_DWORD *)(v3 + 4 * v279 + 8000) = v278;\n                  }\n                  *(_DWORD *)(v3 + 4LL * v278) = v372;\n                  *(_DWORD *)(v3 + 4LL * v278 + 1600) = 200;\n                  *(_DWORD *)(v3 + 4LL * v278 + 3200) = v357;\n                  *(_DWORD *)(v3 + 4LL * v278 + 4800) = v358;\n                  *(_DWORD *)(v3 + 4LL * v278 + 6400) = 0;\n                  v17 = v278 == v368;\n                  v280 = v8;\n                  if ( v17 )\n                    v280 = v403 + 199;\n                  if ( v372 < v8 )\n                    v8 = v280;\n                  ++v277;\n                  --v276;\n                }\n                while ( v276 );\n              }\n              else\n              {\n                if ( v144 == 100000 )\n                {\n                  v94 = *(signed int *)(v3 + 9604);\n                  *(_DWORD *)(v3 + 9604) = v94 + 1;\n                  *(_DWORD *)(v3 + 4 * v94 + 8000) = v370;\n                }\n                *(_DWORD *)(v3 + 4LL * v370) = v372;\n                *(_DWORD *)(v3 + 4LL * v370 + 1600) = 200;\n                *(_DWORD *)(v3 + 4LL * v370 + 3200) = v40;\n                *(_DWORD *)(v3 + 4LL * v370 + 4800) = v70;\n                *(_DWORD *)(v3 + 4LL * v370 + 6400) = 0;\n              }\n            }\n            else if ( v372 < v144 )\n            {\n              if ( byte_98A1B0[v370] )\n              {\n                v5 = 361LL;\n                LODWORD(v67) = sub_40A6C0(v370, 361, (__int64)v408);\n                if ( (signed int)v67 <= 0 )\n                  goto LABEL_295;\n                v67 = (unsigned int)v67;\n                v68 = v408;\n                v40 = v357;\n                v69 = v374;\n                v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n                v70 = v358;\n                do\n                {\n                  v72 = *v68;\n                  v5 = *v68;\n                  if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n                  {\n                    v73 = *(signed int *)(v3 + 9604);\n                    *(_DWORD *)(v3 + 9604) = v73 + 1;\n                    v69 = v374;\n                    *(_DWORD *)(v3 + 4 * v73 + 8000) = v72;\n                  }\n                  *(_DWORD *)(v3 + 4LL * v72) = v372;\n                  *(_DWORD *)(v3 + 4LL * v72 + 1600) = 200;\n                  *(_DWORD *)(v3 + 4LL * v72 + 3200) = v357;\n                  *(_DWORD *)(v3 + 4LL * v72 + 4800) = v358;\n                  *(_DWORD *)(v3 + 4LL * v72 + 6400) = v385;\n                  v17 = v72 == v368;\n                  v74 = v8;\n                  if ( v17 )\n                    v74 = v403 + 199;\n                  if ( v372 < v8 )\n                    v8 = v74;\n                  ++v68;\n                  --v67;\n                }\n                while ( v67 );\n              }\n              else\n              {\n                if ( v144 == 100000 )\n                {\n                  v98 = *(signed int *)(v3 + 9604);\n                  *(_DWORD *)(v3 + 9604) = v98 + 1;\n                  *(_DWORD *)(v3 + 4 * v98 + 8000) = v370;\n                }\n                *(_DWORD *)(v3 + 4LL * v370) = v372;\n                *(_DWORD *)(v3 + 4LL * v370 + 1600) = 200;\n                *(_DWORD *)(v3 + 4LL * v370 + 3200) = v40;\n                *(_DWORD *)(v3 + 4LL * v370 + 4800) = v70;\n                *(_DWORD *)(v3 + 4LL * v370 + 6400) = v385;\n              }\n            }\n          }\n        }\nLABEL_315:\n        if ( byte_98A1B0[v388] )\n          goto LABEL_353;\n        v5 = v373;\n        if ( (signed int)sub_4093D0(v388, v373, 3, 0LL) < 3 )\n          goto LABEL_730;\n        v150 = byte_98A1B0[v391];\n        v151 = v356;\n        v40 = v357;\n        v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n        if ( v150 == v356 )\n          goto LABEL_318;\n        if ( v150 )\n        {\nLABEL_344:\n          v70 = v358;\n          goto LABEL_353;\n        }\n        v382 = *(_DWORD *)(v3 + 4 * v69 + 6400);\n        v394 = *(_DWORD *)(v3 + 4 * v69 + 4800);\n        v5 = v391;\n        if ( (unsigned int)sub_43ADB0(*(unsigned int *)(v3 + 4 * v69 + 4800), v391, v373) )\n          goto LABEL_730;\n        v5 = v362;\n        if ( (unsigned int)sub_43ADB0(v394, v362, v373) )\n          goto LABEL_730;\n        v5 = v391;\n        if ( (unsigned int)sub_43ADB0(v382, v391, v373) )\n          goto LABEL_730;\n        v5 = v362;\n        if ( (unsigned int)sub_43ADB0(v382, v362, v373) )\n          goto LABEL_730;\n        v5 = v83;\n        v262 = sub_4093D0(v391, v83, 3, 0LL);\n        v40 = v357;\n        v69 = v374;\n        v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n        v151 = v356;\n        if ( v262 > 2 )\n          goto LABEL_344;\nLABEL_318:\n        v152 = byte_98A1B0[v379];\n        v103 = v151;\n        if ( v152 != v151 )\n        {\n          v70 = v358;\n          if ( v152 )\n          {\nLABEL_352:\n            v83 = 3 - v373;\n          }\n          else\n          {\n            v384 = *(_DWORD *)(v3 + 4 * v69 + 6400);\n            v396 = *(_DWORD *)(v3 + 4 * v69 + 4800);\n            v5 = (unsigned int)v379;\n            if ( !(unsigned int)sub_43ADB0(*(unsigned int *)(v3 + 4 * v69 + 4800), (unsigned int)v379, v373) )\n            {\n              v5 = v362;\n              if ( !(unsigned int)sub_43ADB0(v396, v362, v373) )\n              {\n                v5 = (unsigned int)v379;\n                if ( !(unsigned int)sub_43ADB0(v384, (unsigned int)v379, v373) )\n                {\n                  v5 = v362;\n                  if ( !(unsigned int)sub_43ADB0(v384, v362, v373) )\n                  {\n                    v5 = v367;\n                    v102 = sub_4093D0(v379, v367, 3, 0LL);\n                    v40 = v357;\n                    v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n                    if ( v102 > 2 )\n                    {\n                      v83 = 3 - v373;\n                      goto LABEL_344;\n                    }\n                    v103 = byte_98A1B0[v379];\n                    goto LABEL_319;\n                  }\n                }\n              }\n            }\n            v83 = 3 - v373;\nLABEL_730:\n            v40 = v357;\n            v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n            v70 = v358;\n          }\nLABEL_353:\n          v54 = &byte_98A1B0[v371];\n          goto LABEL_354;\n        }\nLABEL_319:\n        v153 = *(_DWORD *)(v3 + 4LL * v370);\n        if ( !byte_98A1B0[v391] )\n        {\n          v83 = 3 - v373;\n          v70 = v358;\n          if ( v103 )\n          {\n            if ( v372 < v153 )\n            {\n              if ( !byte_98A1B0[v370] )\n              {\n                if ( v153 == 100000 )\n                {\n                  v95 = *(signed int *)(v3 + 9604);\n                  *(_DWORD *)(v3 + 9604) = v95 + 1;\n                  *(_DWORD *)(v3 + 4 * v95 + 8000) = v370;\n                }\n                *(_DWORD *)(v3 + 4LL * v370) = v372;\n                *(_DWORD *)(v3 + 4LL * v370 + 1600) = 200;\n                *(_DWORD *)(v3 + 4LL * v370 + 3200) = v40;\n                *(_DWORD *)(v3 + 4LL * v370 + 4800) = v391;\n                goto LABEL_195;\n              }\n              v5 = 361LL;\n              LODWORD(v281) = sub_40A6C0(v370, 361, (__int64)v408);\n              v54 = &byte_98A1B0[v371];\n              if ( (signed int)v281 <= 0 )\n                goto LABEL_171;\n              v281 = (unsigned int)v281;\n              v282 = v408;\n              v40 = v357;\n              v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n              v70 = v358;\n              do\n              {\n                v283 = *v282;\n                v5 = *v282;\n                if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n                {\n                  v284 = *(signed int *)(v3 + 9604);\n                  *(_DWORD *)(v3 + 9604) = v284 + 1;\n                  v54 = &byte_98A1B0[v371];\n                  *(_DWORD *)(v3 + 4 * v284 + 8000) = v283;\n                }\n                *(_DWORD *)(v3 + 4LL * v283) = v372;\n                *(_DWORD *)(v3 + 4LL * v283 + 1600) = 200;\n                *(_DWORD *)(v3 + 4LL * v283 + 3200) = v357;\n                *(_DWORD *)(v3 + 4LL * v283 + 4800) = v391;\n                *(_DWORD *)(v3 + 4LL * v283 + 6400) = 0;\n                v17 = v283 == v368;\n                v285 = v8;\n                if ( v17 )\n                  v285 = v403 + 199;\n                if ( v372 < v8 )\n                  v8 = v285;\n                ++v282;\n                --v281;\n              }\n              while ( v281 );\n              goto LABEL_354;\n            }\n          }\n          else\n          {\n            if ( v372 >= v153 )\n              goto LABEL_353;\n            if ( byte_98A1B0[v370] )\n            {\n              v5 = 361LL;\n              LODWORD(v75) = sub_40A6C0(v370, 361, (__int64)v408);\n              v54 = &byte_98A1B0[v371];\n              if ( (signed int)v75 <= 0 )\n                goto LABEL_171;\n              v75 = (unsigned int)v75;\n              v76 = v408;\n              v40 = v357;\n              v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n              v70 = v358;\n              do\n              {\n                v77 = *v76;\n                v5 = *v76;\n                if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n                {\n                  v78 = *(signed int *)(v3 + 9604);\n                  *(_DWORD *)(v3 + 9604) = v78 + 1;\n                  v54 = &byte_98A1B0[v371];\n                  *(_DWORD *)(v3 + 4 * v78 + 8000) = v77;\n                }\n                *(_DWORD *)(v3 + 4LL * v77) = v372;\n                *(_DWORD *)(v3 + 4LL * v77 + 1600) = 200;\n                *(_DWORD *)(v3 + 4LL * v77 + 3200) = v357;\n                *(_DWORD *)(v3 + 4LL * v77 + 4800) = v391;\n                *(_DWORD *)(v3 + 4LL * v77 + 6400) = v379;\n                v17 = v77 == v368;\n                v79 = v8;\n                if ( v17 )\n                  v79 = v403 + 199;\n                if ( v372 < v8 )\n                  v8 = v79;\n                ++v76;\n                --v75;\n              }\n              while ( v75 );\n              goto LABEL_354;\n            }\n            if ( v153 == 100000 )\n            {\n              v99 = *(signed int *)(v3 + 9604);\n              *(_DWORD *)(v3 + 9604) = v99 + 1;\n              *(_DWORD *)(v3 + 4 * v99 + 8000) = v370;\n            }\n            *(_DWORD *)(v3 + 4LL * v370) = v372;\n            *(_DWORD *)(v3 + 4LL * v370 + 1600) = 200;\n            *(_DWORD *)(v3 + 4LL * v370 + 3200) = v40;\n            *(_DWORD *)(v3 + 4LL * v370 + 4800) = v391;\n            *(_DWORD *)(v3 + 4LL * v370 + 6400) = v379;\n          }\n          goto LABEL_353;\n        }\n        v83 = 3 - v373;\n        v70 = v358;\n        if ( v103 )\n        {\n          if ( v372 >= v153 )\n            goto LABEL_353;\n          if ( byte_98A1B0[v370] )\n          {\n            v5 = 361LL;\n            LODWORD(v154) = sub_40A6C0(v370, 361, (__int64)v408);\n            v54 = &byte_98A1B0[v371];\n            if ( (signed int)v154 > 0 )\n            {\n              v154 = (unsigned int)v154;\n              v155 = v408;\n              v40 = v357;\n              v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n              v70 = v358;\n              do\n              {\n                v156 = *v155;\n                v5 = *v155;\n                if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n                {\n                  v157 = *(signed int *)(v3 + 9604);\n                  *(_DWORD *)(v3 + 9604) = v157 + 1;\n                  v54 = &byte_98A1B0[v371];\n                  *(_DWORD *)(v3 + 4 * v157 + 8000) = v156;\n                }\n                *(_DWORD *)(v3 + 4LL * v156) = v372;\n                *(_DWORD *)(v3 + 4LL * v156 + 1600) = 200;\n                *(_DWORD *)(v3 + 4LL * v156 + 3200) = v357;\n                *(_DWORD *)(v3 + 4LL * v156 + 4800) = 0;\n                *(_DWORD *)(v3 + 4LL * v156 + 6400) = 0;\n                v17 = v156 == v368;\n                v158 = v8;\n                if ( v17 )\n                  v158 = v403 + 199;\n                if ( v372 < v8 )\n                  v8 = v158;\n                ++v155;\n                --v154;\n              }\n              while ( v154 );\n              goto LABEL_354;\n            }\nLABEL_171:\n            v40 = v357;\n            v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n            v70 = v358;\n            goto LABEL_354;\n          }\n          if ( v153 == 100000 )\n          {\n            v93 = *(signed int *)(v3 + 9604);\n            *(_DWORD *)(v3 + 9604) = v93 + 1;\n            *(_DWORD *)(v3 + 4 * v93 + 8000) = v370;\n          }\n          *(_DWORD *)(v3 + 4LL * v370) = v372;\n          *(_DWORD *)(v3 + 4LL * v370 + 1600) = 200;\n          *(_DWORD *)(v3 + 4LL * v370 + 3200) = v40;\n          *(_DWORD *)(v3 + 4LL * v370 + 4800) = 0;\nLABEL_195:\n          *(_DWORD *)(v3 + 4LL * v370 + 6400) = 0;\n          goto LABEL_353;\n        }\n        if ( v372 >= v153 )\n          goto LABEL_353;\n        if ( !byte_98A1B0[v370] )\n        {\n          if ( v153 == 100000 )\n          {\n            v97 = *(signed int *)(v3 + 9604);\n            *(_DWORD *)(v3 + 9604) = v97 + 1;\n            *(_DWORD *)(v3 + 4 * v97 + 8000) = v370;\n          }\n          *(_DWORD *)(v3 + 4LL * v370) = v372;\n          *(_DWORD *)(v3 + 4LL * v370 + 1600) = 200;\n          *(_DWORD *)(v3 + 4LL * v370 + 3200) = v40;\n          *(_DWORD *)(v3 + 4LL * v370 + 4800) = v379;\n          goto LABEL_195;\n        }\n        v5 = 361LL;\n        LODWORD(v291) = sub_40A6C0(v370, 361, (__int64)v408);\n        v54 = &byte_98A1B0[v371];\n        if ( (signed int)v291 <= 0 )\n          goto LABEL_171;\n        v291 = (unsigned int)v291;\n        v292 = v408;\n        v40 = v357;\n        v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n        v70 = v358;\n        do\n        {\n          v293 = *v292;\n          v5 = *v292;\n          if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n          {\n            v294 = *(signed int *)(v3 + 9604);\n            *(_DWORD *)(v3 + 9604) = v294 + 1;\n            v54 = &byte_98A1B0[v371];\n            *(_DWORD *)(v3 + 4 * v294 + 8000) = v293;\n          }\n          *(_DWORD *)(v3 + 4LL * v293) = v372;\n          *(_DWORD *)(v3 + 4LL * v293 + 1600) = 200;\n          *(_DWORD *)(v3 + 4LL * v293 + 3200) = v357;\n          *(_DWORD *)(v3 + 4LL * v293 + 4800) = v379;\n          *(_DWORD *)(v3 + 4LL * v293 + 6400) = 0;\n          v17 = v293 == v368;\n          v295 = v8;\n          if ( v17 )\n            v295 = v403 + 199;\n          if ( v372 < v8 )\n            v8 = v295;\n          ++v292;\n          --v291;\n        }\n        while ( v291 );\nLABEL_354:\n        v164 = *v71;\n        if ( !*v71 )\n        {\n          if ( *(_DWORD *)(v3 + 4 * v70) <= v400 )\n            goto LABEL_383;\n          v5 = v83;\n          v165 = v70;\n          if ( (unsigned int)sub_406880((unsigned int)v70, v83, 0LL, 0, 0, 0) )\n          {\n            v166 = sub_4083A0(v165);\n            if ( v166 != 1 )\n            {\n              if ( v166 == 2 )\n              {\n                v5 = 0LL;\n                v167 = sub_43FAB0(v358, 0LL);\n                goto LABEL_363;\n              }\n              sub_407030();\nLABEL_378:\n              v40 = v357;\n              v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n              v70 = v358;\n              goto LABEL_383;\n            }\n            v5 = 0LL;\n            v167 = sub_43B050(v358, 0LL);\nLABEL_363:\n            v168 = v167;\n            sub_407030();\n            v17 = v168 == 5;\n            v165 = v358;\n            v54 = &byte_98A1B0[v371];\n            if ( !v17 )\n            {\n              v40 = v357;\n              v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n              v70 = v358;\n              goto LABEL_383;\n            }\n          }\n          v169 = *(_DWORD *)(v3 + 4 * v165);\n          v70 = v165;\n          if ( v400 >= v169 )\n          {\n            v40 = v357;\n            v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n          }\n          else\n          {\n            v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n            if ( **((_BYTE **)&v358 + 1) )\n            {\n              v5 = 361LL;\n              LODWORD(v170) = sub_40A6C0(v165, 361, (__int64)v408);\n              if ( (signed int)v170 <= 0 )\n                goto LABEL_378;\n              v170 = (unsigned int)v170;\n              v171 = v408;\n              v40 = v357;\n              v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n              v70 = v358;\n              do\n              {\n                v172 = *v171;\n                v5 = *v171;\n                if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n                {\n                  v173 = *(signed int *)(v3 + 9604);\n                  *(_DWORD *)(v3 + 9604) = v173 + 1;\n                  v54 = &byte_98A1B0[v371];\n                  *(_DWORD *)(v3 + 4 * v173 + 8000) = v172;\n                }\n                *(_DWORD *)(v3 + 4LL * v172) = v400;\n                *(_DWORD *)(v3 + 4LL * v172 + 1600) = 700;\n                *(_DWORD *)(v3 + 4LL * v172 + 3200) = v357;\n                *(_DWORD *)(v3 + 4LL * v172 + 4800) = v358;\n                *(_DWORD *)(v3 + 4LL * v172 + 6400) = 0;\n                v17 = v172 == v368;\n                v174 = v8;\n                if ( v17 )\n                  v174 = v403 + 699;\n                if ( v400 < v8 )\n                  v8 = v174;\n                ++v171;\n                --v170;\n              }\n              while ( v170 );\n            }\n            else\n            {\n              if ( v169 == 100000 )\n              {\n                v175 = *(signed int *)(v3 + 9604);\n                *(_DWORD *)(v3 + 9604) = v175 + 1;\n                *(_DWORD *)(v3 + 4 * v175 + 8000) = v165;\n              }\n              *(_DWORD *)(v3 + 4 * v165) = v400;\n              *(_DWORD *)(v3 + 4 * v165 + 1600) = 700;\n              v40 = v357;\n              *(_DWORD *)(v3 + 4 * v165 + 3200) = v357;\n              *(_DWORD *)(v3 + 4 * v165 + 4800) = v165;\n              *(_DWORD *)(v3 + 4 * v165 + 6400) = 0;\n            }\n          }\nLABEL_383:\n          v164 = *v71;\n          if ( !*v71 )\n            goto LABEL_385;\nLABEL_384:\n          if ( v83 == v164 )\n            goto LABEL_385;\nLABEL_396:\n          if ( !*v54 )\n            goto LABEL_417;\nLABEL_397:\n          if ( !byte_98A1B0[v362] )\n            goto LABEL_398;\n          goto LABEL_473;\n        }\n        if ( v164 )\n          goto LABEL_384;\nLABEL_385:\n        v176 = *(_DWORD *)(v3 + 4 * v70);\n        if ( v176 <= v397 )\n          goto LABEL_396;\n        if ( !v164 )\n        {\n          if ( v176 == 100000 )\n          {\n            v189 = *(signed int *)(v3 + 9604);\n            *(_DWORD *)(v3 + 9604) = v189 + 1;\n            *(_DWORD *)(v3 + 4 * v189 + 8000) = v70;\n          }\n          *(_DWORD *)(v3 + 4 * v70) = v397;\n          *(_DWORD *)(v3 + 4 * v70 + 1600) = 1000;\n          *(_DWORD *)(v3 + 4 * v70 + 3200) = v40;\n          *(_DWORD *)(v3 + 4 * v70 + 4800) = 0;\n          *(_DWORD *)(v3 + 4 * v70 + 6400) = 0;\n          if ( !*v54 )\n            goto LABEL_417;\n          goto LABEL_397;\n        }\n        v5 = 361LL;\n        LODWORD(v177) = sub_40A6C0(v70, 361, (__int64)v408);\n        if ( (signed int)v177 > 0 )\n        {\n          v177 = (unsigned int)v177;\n          v178 = v408;\n          v40 = v357;\n          v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n          LODWORD(v70) = v358;\n          do\n          {\n            v179 = *v178;\n            v5 = *v178;\n            if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n            {\n              v180 = *(signed int *)(v3 + 9604);\n              *(_DWORD *)(v3 + 9604) = v180 + 1;\n              v54 = &byte_98A1B0[v371];\n              *(_DWORD *)(v3 + 4 * v180 + 8000) = v179;\n            }\n            *(_DWORD *)(v3 + 4LL * v179) = v397;\n            *(_DWORD *)(v3 + 4LL * v179 + 1600) = 1000;\n            *(_DWORD *)(v3 + 4LL * v179 + 3200) = v357;\n            *(_DWORD *)(v3 + 4LL * v179 + 4800) = 0;\n            *(_DWORD *)(v3 + 4LL * v179 + 6400) = 0;\n            v17 = v179 == v368;\n            v181 = v8;\n            if ( v17 )\n              v181 = v403 + 999;\n            if ( v397 < v8 )\n              v8 = v181;\n            ++v178;\n            --v177;\n          }\n          while ( v177 );\n          goto LABEL_396;\n        }\n        v40 = v357;\n        v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n        LODWORD(v70) = v358;\n        if ( *v54 )\n          goto LABEL_397;\nLABEL_417:\n        if ( *v71 )\n          goto LABEL_418;\n        if ( *(_DWORD *)(v3 + 4LL * v371) <= v376 )\n        {\nLABEL_448:\n          if ( !*v54 )\n            goto LABEL_418;\n          goto LABEL_397;\n        }\n        v5 = v373;\n        if ( !(unsigned int)sub_406880((unsigned int)v371, v373, 0LL, 0, 0, 0) )\n          goto LABEL_454;\n        v5 = v83;\n        v197 = sub_40AD70(v358, v83);\n        sub_407030();\n        if ( !v197 || (v198 = *(_DWORD *)(v3 + 4LL * v371), v376 >= v198) )\n        {\n          v40 = v357;\n          v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n          LODWORD(v70) = v358;\n          v54 = &byte_98A1B0[v371];\n          if ( !*v365 )\n            goto LABEL_418;\n          goto LABEL_397;\n        }\n        v54 = &byte_98A1B0[v371];\n        if ( *v365 )\n        {\n          v5 = 361LL;\n          LODWORD(v199) = sub_40A6C0(v371, 361, (__int64)v408);\n          if ( (signed int)v199 > 0 )\n          {\n            v199 = (unsigned int)v199;\n            v200 = v408;\n            v40 = v357;\n            v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n            LODWORD(v70) = v358;\n            do\n            {\n              v201 = *v200;\n              v5 = *v200;\n              if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n              {\n                v202 = *(signed int *)(v3 + 9604);\n                *(_DWORD *)(v3 + 9604) = v202 + 1;\n                v54 = &byte_98A1B0[v371];\n                *(_DWORD *)(v3 + 4 * v202 + 8000) = v201;\n              }\n              *(_DWORD *)(v3 + 4LL * v201) = v376;\n              *(_DWORD *)(v3 + 4LL * v201 + 1600) = 1000;\n              *(_DWORD *)(v3 + 4LL * v201 + 3200) = v357;\n              *(_DWORD *)(v3 + 4LL * v201 + 4800) = v358;\n              *(_DWORD *)(v3 + 4LL * v201 + 6400) = 0;\n              v17 = v201 == v368;\n              v203 = v8;\n              if ( v17 )\n                v203 = v403 + 1099;\n              if ( v376 < v8 )\n                v8 = v203;\n              ++v200;\n              --v199;\n            }\n            while ( v199 );\n            goto LABEL_448;\n          }\nLABEL_454:\n          v40 = v357;\n          LODWORD(v70) = v358;\n        }\n        else\n        {\n          if ( v198 == 100000 )\n          {\n            v250 = *(signed int *)(v3 + 9604);\n            *(_DWORD *)(v3 + 9604) = v250 + 1;\n            *(_DWORD *)(v3 + 4 * v250 + 8000) = v371;\n          }\n          *(_DWORD *)(v3 + 4LL * v371) = v376;\n          *(_DWORD *)(v3 + 4LL * v371 + 1600) = 1000;\n          v40 = v357;\n          *(_DWORD *)(v3 + 4LL * v371 + 3200) = v357;\n          LODWORD(v70) = v358;\n          *(_DWORD *)(v3 + 4LL * v371 + 4800) = v358;\n          *(_DWORD *)(v3 + 4LL * v371 + 6400) = 0;\n        }\n        v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n        if ( *v54 )\n          goto LABEL_397;\nLABEL_418:\n        if ( byte_98A1B0[v362] )\n          goto LABEL_473;\n        if ( *(_DWORD *)(v3 + 4LL * v371) <= v376 )\n          goto LABEL_397;\n        v5 = v373;\n        if ( !(unsigned int)sub_406880((unsigned int)v371, v373, 0LL, 0, 0, 0) )\n          goto LABEL_528;\n        v5 = v83;\n        v190 = sub_40AD70(v362, v83);\n        sub_407030();\n        if ( !v190 )\n        {\n          v40 = v357;\n          v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n          LODWORD(v70) = v358;\n          v54 = &byte_98A1B0[v371];\n          if ( !byte_98A1B0[v362] )\n            goto LABEL_398;\n          goto LABEL_473;\n        }\n        v191 = *(_DWORD *)(v3 + 4LL * v371);\n        v40 = v357;\n        v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n        LODWORD(v70) = v358;\n        v54 = &byte_98A1B0[v371];\n        if ( v376 >= v191 )\n          goto LABEL_397;\n        if ( !*v365 )\n        {\n          if ( v191 == 100000 )\n          {\n            v259 = *(signed int *)(v3 + 9604);\n            *(_DWORD *)(v3 + 9604) = v259 + 1;\n            *(_DWORD *)(v3 + 4 * v259 + 8000) = v371;\n          }\n          *(_DWORD *)(v3 + 4LL * v371) = v376;\n          *(_DWORD *)(v3 + 4LL * v371 + 1600) = 1000;\n          *(_DWORD *)(v3 + 4LL * v371 + 3200) = v357;\n          *(_DWORD *)(v3 + 4LL * v371 + 4800) = v362;\n          *(_DWORD *)(v3 + 4LL * v371 + 6400) = 0;\n          if ( !byte_98A1B0[v362] )\n            goto LABEL_398;\n          goto LABEL_473;\n        }\n        v5 = 361LL;\n        LODWORD(v192) = sub_40A6C0(v371, 361, (__int64)v408);\n        if ( (signed int)v192 > 0 )\n        {\n          v192 = (unsigned int)v192;\n          v193 = v408;\n          v40 = v357;\n          v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n          LODWORD(v70) = v358;\n          do\n          {\n            v194 = *v193;\n            v5 = *v193;\n            if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n            {\n              v195 = *(signed int *)(v3 + 9604);\n              *(_DWORD *)(v3 + 9604) = v195 + 1;\n              v54 = &byte_98A1B0[v371];\n              *(_DWORD *)(v3 + 4 * v195 + 8000) = v194;\n            }\n            *(_DWORD *)(v3 + 4LL * v194) = v376;\n            *(_DWORD *)(v3 + 4LL * v194 + 1600) = 1000;\n            *(_DWORD *)(v3 + 4LL * v194 + 3200) = v357;\n            *(_DWORD *)(v3 + 4LL * v194 + 4800) = v362;\n            *(_DWORD *)(v3 + 4LL * v194 + 6400) = 0;\n            v17 = v194 == v368;\n            v196 = v8;\n            if ( v17 )\n              v196 = v403 + 1099;\n            if ( v376 < v8 )\n              v8 = v196;\n            ++v193;\n            --v192;\n          }\n          while ( v192 );\n          goto LABEL_397;\n        }\nLABEL_528:\n        v40 = v357;\n        v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n        LODWORD(v70) = v358;\n        if ( byte_98A1B0[v362] )\n          goto LABEL_473;\nLABEL_398:\n        if ( byte_98A1B0[v370] || *(_DWORD *)(v3 + 4LL * v370) <= v376 )\n          goto LABEL_460;\n        v5 = v373;\n        if ( !(unsigned int)sub_406880((unsigned int)v370, v373, 0LL, 0, 0, 0) )\n          goto LABEL_458;\n        v5 = v83;\n        v182 = sub_40AD70(v362, v83);\n        sub_407030();\n        if ( !v182 || (v183 = *(_DWORD *)(v3 + 4LL * v370), v376 >= v183) )\n        {\n          v83 = 3 - v373;\nLABEL_458:\n          v40 = v357;\nLABEL_459:\n          v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n          LODWORD(v70) = v358;\n          goto LABEL_460;\n        }\n        v83 = 3 - v373;\n        if ( !byte_98A1B0[v370] )\n        {\n          if ( v183 == 100000 )\n          {\n            v258 = *(signed int *)(v3 + 9604);\n            *(_DWORD *)(v3 + 9604) = v258 + 1;\n            *(_DWORD *)(v3 + 4 * v258 + 8000) = v370;\n          }\n          *(_DWORD *)(v3 + 4LL * v370) = v376;\n          *(_DWORD *)(v3 + 4LL * v370 + 1600) = 1000;\n          v40 = v357;\n          *(_DWORD *)(v3 + 4LL * v370 + 3200) = v357;\n          *(_DWORD *)(v3 + 4LL * v370 + 4800) = v362;\n          *(_DWORD *)(v3 + 4LL * v370 + 6400) = 0;\n          goto LABEL_459;\n        }\n        v5 = 361LL;\n        LODWORD(v184) = sub_40A6C0(v370, 361, (__int64)v408);\n        if ( (signed int)v184 <= 0 )\n          goto LABEL_458;\n        v184 = (unsigned int)v184;\n        v185 = v408;\n        v40 = v357;\n        v71 = (unsigned __int8 *)*((_QWORD *)&v358 + 1);\n        LODWORD(v70) = v358;\n        do\n        {\n          v186 = *v185;\n          v5 = *v185;\n          if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n          {\n            v187 = *(signed int *)(v3 + 9604);\n            *(_DWORD *)(v3 + 9604) = v187 + 1;\n            *(_DWORD *)(v3 + 4 * v187 + 8000) = v186;\n          }\n          *(_DWORD *)(v3 + 4LL * v186) = v376;\n          *(_DWORD *)(v3 + 4LL * v186 + 1600) = 1000;\n          *(_DWORD *)(v3 + 4LL * v186 + 3200) = v357;\n          *(_DWORD *)(v3 + 4LL * v186 + 4800) = v362;\n          *(_DWORD *)(v3 + 4LL * v186 + 6400) = 0;\n          v17 = v186 == v368;\n          v188 = v8;\n          if ( v17 )\n            v188 = v403 + 1099;\n          if ( v376 < v8 )\n            v8 = v188;\n          ++v185;\n          --v184;\n        }\n        while ( v184 );\nLABEL_460:\n        if ( !byte_98A1B0[v362] && !byte_98A1B0[v370] )\n        {\n          v204 = *(_DWORD *)(v3 + 4LL * v370);\n          if ( v204 > v376\n            && (*v71 == v356 && byte_98A1B0[v385] == v356 && !*v365\n             || byte_98A1B0[v391] == v356 && byte_98A1B0[v379] == v356 && !byte_98A1B0[v388]) )\n          {\n            if ( v204 == 100000 )\n            {\n              v205 = *(signed int *)(v3 + 9604);\n              *(_DWORD *)(v3 + 9604) = v205 + 1;\n              *(_DWORD *)(v3 + 4 * v205 + 8000) = v370;\n            }\n            *(_DWORD *)(v3 + 4LL * v370) = v376;\n            *(_DWORD *)(v3 + 4LL * v370 + 1600) = 1000;\n            *(_DWORD *)(v3 + 4LL * v370 + 3200) = v40;\n            *(_DWORD *)(v3 + 4LL * v370 + 4800) = v362;\n            *(_DWORD *)(v3 + 4LL * v370 + 6400) = 0;\n          }\n        }\n        v54 = &byte_98A1B0[v371];\nLABEL_473:\n        v405 = 2 * v404;\n        if ( !*v54 )\n        {\n          if ( *v71 || byte_98A1B0[v362] )\n            goto LABEL_481;\n          v210 = *(_DWORD *)(v3 + 4LL * v371);\n          if ( v210 <= v375 )\n            goto LABEL_474;\n          if ( v210 == 100000 )\n          {\n            v211 = *(signed int *)(v3 + 9604);\n            *(_DWORD *)(v3 + 9604) = v211 + 1;\n            *(_DWORD *)(v3 + 4 * v211 + 8000) = v371;\n          }\n          *(_DWORD *)(v3 + 4LL * v371) = v375;\n          *(_DWORD *)(v3 + 4LL * v371 + 1600) = 1000;\n          *(_DWORD *)(v3 + 4LL * v371 + 3200) = v40;\n          *(_DWORD *)(v3 + 4LL * v371 + 4800) = v70;\n          *(_DWORD *)(v3 + 4LL * v371 + 6400) = v362;\n          if ( *v71 )\n            goto LABEL_481;\nLABEL_475:\n          if ( *v54 || byte_98A1B0[v362] )\n            goto LABEL_481;\n          if ( byte_98A1B0[v370] )\n          {\nLABEL_478:\n            v83 = 3 - v373;\n            goto LABEL_481;\n          }\n          if ( byte_98A1B0[v385] || *(_DWORD *)(v3 + 4LL * v385) <= v375 && *(_DWORD *)(v3 + 4LL * v370) <= v375 )\n          {\n            v83 = 3 - v373;\n            v54 = &byte_98A1B0[v371];\n            goto LABEL_481;\n          }\n          if ( (signed int)sub_4083A0(v40) < 3 || byte_98A1B0[v374 + v405] != 3 && byte_98A1B0[v391] != 3 )\n          {\n            v83 = 3 - v373;\n            v40 = v357;\n            v54 = &byte_98A1B0[v371];\n            goto LABEL_481;\n          }\n          v251 = *(_DWORD *)(v3 + 4LL * v385);\n          if ( v375 >= v251 )\n            goto LABEL_681;\n          if ( byte_98A1B0[v385] )\n          {\n            v5 = 361LL;\n            LODWORD(v252) = sub_40A6C0(v385, 361, (__int64)v408);\n            if ( (signed int)v252 > 0 )\n            {\n              v252 = (unsigned int)v252;\n              v253 = v408;\n              v40 = v357;\n              v54 = &byte_98A1B0[v371];\n              do\n              {\n                v254 = *v253;\n                v5 = *v253;\n                if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n                {\n                  v255 = *(signed int *)(v3 + 9604);\n                  *(_DWORD *)(v3 + 9604) = v255 + 1;\n                  v54 = &byte_98A1B0[v371];\n                  *(_DWORD *)(v3 + 4 * v255 + 8000) = v254;\n                }\n                *(_DWORD *)(v3 + 4LL * v254) = v375;\n                *(_DWORD *)(v3 + 4LL * v254 + 1600) = 1000;\n                *(_DWORD *)(v3 + 4LL * v254 + 3200) = v357;\n                *(_DWORD *)(v3 + 4LL * v254 + 4800) = 0;\n                *(_DWORD *)(v3 + 4LL * v254 + 6400) = 0;\n                v17 = v254 == v368;\n                v256 = v8;\n                if ( v17 )\n                  v256 = v403 + 1299;\n                if ( v375 < v8 )\n                  v8 = v256;\n                ++v253;\n                --v252;\n              }\n              while ( v252 );\nLABEL_153:\n              v81 = *(_DWORD *)(v3 + 4LL * v370);\n              if ( v375 < v81 )\n              {\n                if ( byte_98A1B0[v370] )\n                {\n                  v5 = 361LL;\n                  LODWORD(v82) = sub_40A6C0(v370, 361, (__int64)v408);\n                  v83 = 3 - v373;\n                  if ( (signed int)v82 <= 0 )\n                  {\n                    v40 = v357;\n                  }\n                  else\n                  {\n                    v82 = (unsigned int)v82;\n                    v84 = v408;\n                    v40 = v357;\n                    do\n                    {\n                      v85 = *v84;\n                      v5 = *v84;\n                      if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n                      {\n                        v86 = *(signed int *)(v3 + 9604);\n                        *(_DWORD *)(v3 + 9604) = v86 + 1;\n                        v54 = &byte_98A1B0[v371];\n                        *(_DWORD *)(v3 + 4 * v86 + 8000) = v85;\n                      }\n                      *(_DWORD *)(v3 + 4LL * v85) = v375;\n                      *(_DWORD *)(v3 + 4LL * v85 + 1600) = 1000;\n                      *(_DWORD *)(v3 + 4LL * v85 + 3200) = v357;\n                      *(_DWORD *)(v3 + 4LL * v85 + 4800) = 0;\n                      *(_DWORD *)(v3 + 4LL * v85 + 6400) = 0;\n                      v17 = v85 == v368;\n                      v87 = v8;\n                      if ( v17 )\n                        v87 = v403 + 1299;\n                      if ( v375 < v8 )\n                        v8 = v87;\n                      ++v84;\n                      --v82;\n                    }\n                    while ( v82 );\n                  }\n                }\n                else\n                {\n                  if ( v81 == 100000 )\n                  {\n                    v88 = *(signed int *)(v3 + 9604);\n                    *(_DWORD *)(v3 + 9604) = v88 + 1;\n                    *(_DWORD *)(v3 + 4 * v88 + 8000) = v370;\n                  }\n                  *(_DWORD *)(v3 + 4LL * v370) = v375;\n                  *(_DWORD *)(v3 + 4LL * v370 + 1600) = 1000;\n                  *(_DWORD *)(v3 + 4LL * v370 + 3200) = v40;\n                  *(_DWORD *)(v3 + 4LL * v370 + 4800) = 0;\n                  *(_DWORD *)(v3 + 4LL * v370 + 6400) = 0;\n                  v83 = 3 - v373;\n                }\n                goto LABEL_481;\n              }\n              goto LABEL_478;\n            }\nLABEL_681:\n            v40 = v357;\n          }\n          else\n          {\n            if ( v251 == 100000 )\n            {\n              v80 = *(signed int *)(v3 + 9604);\n              *(_DWORD *)(v3 + 9604) = v80 + 1;\n              *(_DWORD *)(v3 + 4 * v80 + 8000) = v385;\n            }\n            *(_DWORD *)(v3 + 4LL * v385) = v375;\n            *(_DWORD *)(v3 + 4LL * v385 + 1600) = 1000;\n            v40 = v357;\n            *(_DWORD *)(v3 + 4LL * v385 + 3200) = v357;\n            *(_DWORD *)(v3 + 4LL * v385 + 4800) = 0;\n            *(_DWORD *)(v3 + 4LL * v385 + 6400) = 0;\n          }\n          v54 = &byte_98A1B0[v371];\n          goto LABEL_153;\n        }\nLABEL_474:\n        if ( !*v71 )\n          goto LABEL_475;\nLABEL_481:\n        if ( (signed int)sub_4083A0(v40) < 3 || byte_98A1B0[v391] || byte_98A1B0[v388] || byte_98A1B0[v362] )\n        {\nLABEL_485:\n          v40 = v357;\n          v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n          v45 = v358;\n          goto LABEL_486;\n        }\n        v40 = v357;\n        v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n        v45 = v358;\n        if ( byte_98A1B0[v370] )\n          goto LABEL_486;\n        if ( byte_98A1B0[v379] )\n          goto LABEL_486;\n        v212 = *(_DWORD *)(v3 + 4LL * v379);\n        v5 = (unsigned int)v375;\n        if ( v212 <= v375 && *(_DWORD *)(v3 + 4LL * v370) <= v375 )\n          goto LABEL_486;\n        if ( **((_BYTE **)&v358 + 1) != 3 )\n        {\n          v5 = (signed int)v357 - (signed int)v405;\n          if ( byte_98A1B0[v5] != 3 )\n            goto LABEL_486;\n        }\n        v5 = (unsigned int)v375;\n        if ( v212 > v375 )\n        {\n          if ( v212 == 100000 )\n          {\n            v213 = *(signed int *)(v3 + 9604);\n            *(_DWORD *)(v3 + 9604) = v213 + 1;\n            *(_DWORD *)(v3 + 4 * v213 + 8000) = v379;\n          }\n          v5 = (unsigned int)v375;\n          *(_DWORD *)(v3 + 4LL * v379) = v375;\n          *(_DWORD *)(v3 + 4LL * v379 + 1600) = 1000;\n          *(_DWORD *)(v3 + 4LL * v379 + 3200) = v357;\n          *(_DWORD *)(v3 + 4LL * v379 + 4800) = 0;\n          *(_DWORD *)(v3 + 4LL * v379 + 6400) = 0;\n        }\n        v214 = *(_DWORD *)(v3 + 4LL * v370);\n        if ( (signed int)v5 >= v214 )\n        {\nLABEL_486:\n          if ( *v54 )\n            goto LABEL_759;\nLABEL_487:\n          if ( *v46 )\n          {\nLABEL_488:\n            if ( byte_98A1B0[v362] || *(_DWORD *)(v3 + 4LL * v371) <= v390 )\n              goto LABEL_570;\n            v5 = v373;\n            if ( !(unsigned int)sub_406880((unsigned int)v371, v373, 0LL, 0, 0, 0) )\n              goto LABEL_569;\n            v5 = v83;\n            if ( (unsigned int)sub_406880(v362, v83, 0LL, 0, 0, 0) )\n            {\n              v206 = sub_4083A0(v362);\n              if ( v206 != 2 )\n              {\n                if ( v206 == 1 )\n                {\n                  v5 = 0LL;\n                  v207 = sub_43B050(v362, 0LL);\n                  goto LABEL_555;\n                }\n                sub_407030();\n                sub_407030();\nLABEL_569:\n                v40 = v357;\n                v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n                v45 = v358;\nLABEL_570:\n                if ( *v54 )\n                  goto LABEL_759;\n                goto LABEL_571;\n              }\n              v5 = 0LL;\n              v207 = sub_43FAB0(v362, 0LL);\nLABEL_555:\n              v227 = v207;\n              sub_407030();\n              sub_407030();\n              v17 = v227 == 5;\n              v54 = &byte_98A1B0[v371];\n              if ( !v17 )\n                goto LABEL_569;\n            }\n            else\n            {\n              sub_407030();\n            }\n            v228 = *(_DWORD *)(v3 + 4LL * v371);\n            v40 = v357;\n            v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n            v45 = v358;\n            if ( v390 >= v228 )\n              goto LABEL_570;\n            if ( *v54 )\n            {\n              v5 = 361LL;\n              LODWORD(v229) = sub_40A6C0(v371, 361, (__int64)v408);\n              if ( (signed int)v229 <= 0 )\n                goto LABEL_569;\n              v229 = (unsigned int)v229;\n              v230 = v408;\n              v40 = v357;\n              v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n              v45 = v358;\n              do\n              {\n                v231 = *v230;\n                v5 = *v230;\n                if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n                {\n                  v232 = *(signed int *)(v3 + 9604);\n                  *(_DWORD *)(v3 + 9604) = v232 + 1;\n                  v54 = &byte_98A1B0[v371];\n                  *(_DWORD *)(v3 + 4 * v232 + 8000) = v231;\n                }\n                *(_DWORD *)(v3 + 4LL * v231) = v390;\n                *(_DWORD *)(v3 + 4LL * v231 + 1600) = 1000;\n                *(_DWORD *)(v3 + 4LL * v231 + 3200) = v357;\n                *(_DWORD *)(v3 + 4LL * v231 + 4800) = v362;\n                *(_DWORD *)(v3 + 4LL * v231 + 6400) = 0;\n                v17 = v231 == v368;\n                v233 = v8;\n                if ( v17 )\n                  v233 = v403 + 1199;\n                if ( v390 < v8 )\n                  v8 = v233;\n                ++v230;\n                --v229;\n              }\n              while ( v229 );\n              goto LABEL_570;\n            }\n            if ( v228 == 100000 )\n            {\n              v260 = *(signed int *)(v3 + 9604);\n              *(_DWORD *)(v3 + 9604) = v260 + 1;\n              *(_DWORD *)(v3 + 4 * v260 + 8000) = v371;\n            }\n            *(_DWORD *)(v3 + 4LL * v371) = v390;\n            *(_DWORD *)(v3 + 4LL * v371 + 1600) = 1000;\n            *(_DWORD *)(v3 + 4LL * v371 + 3200) = v357;\n            *(_DWORD *)(v3 + 4LL * v371 + 4800) = v362;\n            *(_DWORD *)(v3 + 4LL * v371 + 6400) = 0;\n            if ( *v54 )\n              goto LABEL_759;\nLABEL_571:\n            if ( *v46 )\n            {\nLABEL_572:\n              if ( !byte_98A1B0[v362] && v83 == (unsigned __int8)*v46 )\n              {\n                if ( (signed int)sub_4083A0(v45) > 3 )\n                  goto LABEL_605;\n                v234 = *(_DWORD *)(v3 + 4LL * v371);\n                v40 = v357;\n                if ( v234 > v399 )\n                {\n                  if ( *v54 )\n                  {\n                    v5 = 361LL;\n                    LODWORD(v235) = sub_40A6C0(v371, 361, (__int64)v408);\n                    if ( (signed int)v235 > 0 )\n                    {\n                      v235 = (unsigned int)v235;\n                      v236 = v408;\n                      v40 = v357;\n                      v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n                      v45 = v358;\n                      do\n                      {\n                        v237 = *v236;\n                        v5 = *v236;\n                        if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n                        {\n                          v238 = *(signed int *)(v3 + 9604);\n                          *(_DWORD *)(v3 + 9604) = v238 + 1;\n                          v54 = &byte_98A1B0[v371];\n                          *(_DWORD *)(v3 + 4 * v238 + 8000) = v237;\n                        }\n                        *(_DWORD *)(v3 + 4LL * v237) = v399;\n                        *(_DWORD *)(v3 + 4LL * v237 + 1600) = 1000;\n                        *(_DWORD *)(v3 + 4LL * v237 + 3200) = v357;\n                        *(_DWORD *)(v3 + 4LL * v237 + 4800) = v362;\n                        *(_DWORD *)(v3 + 4LL * v237 + 6400) = 0;\n                        v17 = v237 == v368;\n                        v239 = v8;\n                        if ( v17 )\n                          v239 = v403 + 1499;\n                        if ( v399 < v8 )\n                          v8 = v239;\n                        ++v236;\n                        --v235;\n                      }\n                      while ( v235 );\n                      goto LABEL_607;\n                    }\nLABEL_605:\n                    v40 = v357;\n                    goto LABEL_606;\n                  }\n                  v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n                  if ( v234 == 100000 )\n                  {\n                    v263 = *(signed int *)(v3 + 9604);\n                    *(_DWORD *)(v3 + 9604) = v263 + 1;\n                    *(_DWORD *)(v3 + 4 * v263 + 8000) = v371;\n                  }\n                  *(_DWORD *)(v3 + 4LL * v371) = v399;\n                  *(_DWORD *)(v3 + 4LL * v371 + 1600) = 1000;\n                  *(_DWORD *)(v3 + 4LL * v371 + 3200) = v357;\n                  *(_DWORD *)(v3 + 4LL * v371 + 4800) = v362;\n                  *(_DWORD *)(v3 + 4LL * v371 + 6400) = 0;\n                  v45 = v358;\n                  if ( *v54 )\n                    goto LABEL_759;\nLABEL_608:\n                  if ( *v46 )\n                    goto LABEL_909;\n                  v246 = *(_DWORD *)(v3 + 4LL * v371);\n                  if ( v246 <= v389 )\n                    goto LABEL_909;\n                  if ( v246 == 100000 )\n                  {\n                    v247 = *(signed int *)(v3 + 9604);\n                    *(_DWORD *)(v3 + 9604) = v247 + 1;\n                    *(_DWORD *)(v3 + 4 * v247 + 8000) = v371;\n                  }\n                  *(_DWORD *)(v3 + 4LL * v371) = v389;\n                  *(_DWORD *)(v3 + 4LL * v371 + 1600) = 900;\n                  *(_DWORD *)(v3 + 4LL * v371 + 3200) = v40;\n                  *(_DWORD *)(v3 + 4LL * v371 + 4800) = 0;\n                  *(_DWORD *)(v3 + 4LL * v371 + 6400) = 0;\n                  if ( !byte_98A1B0[v371] )\n                  {\nLABEL_909:\n                    if ( !byte_98A1B0[v362] )\n                    {\n                      v248 = *(_DWORD *)(v3 + 4LL * v371);\n                      if ( v248 > v389 )\n                      {\n                        if ( v248 == 100000 )\n                        {\n                          v249 = *(signed int *)(v3 + 9604);\n                          *(_DWORD *)(v3 + 9604) = v249 + 1;\n                          *(_DWORD *)(v3 + 4 * v249 + 8000) = v371;\n                        }\n                        *(_DWORD *)(v3 + 4LL * v371) = v389;\n                        *(_DWORD *)(v3 + 4LL * v371 + 1600) = 900;\n                        *(_DWORD *)(v3 + 4LL * v371 + 3200) = v40;\n                        *(_DWORD *)(v3 + 4LL * v371 + 4800) = 0;\n                        *(_DWORD *)(v3 + 4LL * v371 + 6400) = 0;\n                      }\n                    }\n                  }\n                  goto LABEL_759;\n                }\nLABEL_606:\n                v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n                v45 = v358;\n              }\nLABEL_607:\n              if ( *v54 )\n                goto LABEL_759;\n              goto LABEL_608;\n            }\n            if ( v83 != (unsigned __int8)byte_98A1B0[v362] )\n            {\nLABEL_600:\n              if ( *v54 )\n                goto LABEL_759;\n              goto LABEL_572;\n            }\n            if ( (signed int)sub_4083A0(v362) > 3 || (v240 = *(_DWORD *)(v3 + 4LL * v371), v240 <= v399) )\n            {\nLABEL_602:\n              v40 = v357;\n              v45 = v358;\n            }\n            else\n            {\n              if ( *v54 )\n              {\n                v5 = 361LL;\n                LODWORD(v241) = sub_40A6C0(v371, 361, (__int64)v408);\n                if ( (signed int)v241 > 0 )\n                {\n                  v241 = (unsigned int)v241;\n                  v242 = v408;\n                  v40 = v357;\n                  v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n                  v45 = v358;\n                  do\n                  {\n                    v243 = *v242;\n                    v5 = *v242;\n                    if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n                    {\n                      v244 = *(signed int *)(v3 + 9604);\n                      *(_DWORD *)(v3 + 9604) = v244 + 1;\n                      v54 = &byte_98A1B0[v371];\n                      *(_DWORD *)(v3 + 4 * v244 + 8000) = v243;\n                    }\n                    *(_DWORD *)(v3 + 4LL * v243) = v399;\n                    *(_DWORD *)(v3 + 4LL * v243 + 1600) = 1000;\n                    *(_DWORD *)(v3 + 4LL * v243 + 3200) = v357;\n                    *(_DWORD *)(v3 + 4LL * v243 + 4800) = v358;\n                    *(_DWORD *)(v3 + 4LL * v243 + 6400) = 0;\n                    v17 = v243 == v368;\n                    v245 = v8;\n                    if ( v17 )\n                      v245 = v403 + 1499;\n                    if ( v399 < v8 )\n                      v8 = v245;\n                    ++v242;\n                    --v241;\n                  }\n                  while ( v241 );\n                  goto LABEL_600;\n                }\n                goto LABEL_602;\n              }\n              if ( v240 == 100000 )\n              {\n                v261 = *(signed int *)(v3 + 9604);\n                *(_DWORD *)(v3 + 9604) = v261 + 1;\n                *(_DWORD *)(v3 + 4 * v261 + 8000) = v371;\n              }\n              *(_DWORD *)(v3 + 4LL * v371) = v399;\n              *(_DWORD *)(v3 + 4LL * v371 + 1600) = 1000;\n              v40 = v357;\n              *(_DWORD *)(v3 + 4LL * v371 + 3200) = v357;\n              v45 = v358;\n              *(_DWORD *)(v3 + 4LL * v371 + 4800) = v358;\n              *(_DWORD *)(v3 + 4LL * v371 + 6400) = 0;\n            }\n            v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n            if ( *v54 )\n              goto LABEL_759;\n            goto LABEL_572;\n          }\n          if ( *(_DWORD *)(v3 + 4LL * v371) > v390 )\n          {\n            v5 = v373;\n            if ( !(unsigned int)sub_406880((unsigned int)v371, v373, 0LL, 0, 0, 0) )\n              goto LABEL_552;\n            v5 = v83;\n            if ( (unsigned int)sub_406880((unsigned int)v358, v83, 0LL, 0, 0, 0) )\n            {\n              v208 = sub_4083A0(v358);\n              if ( v208 != 2 )\n              {\n                if ( v208 == 1 )\n                {\n                  v5 = 0LL;\n                  v209 = sub_43B050(v358, 0LL);\n                  goto LABEL_537;\n                }\n                sub_407030();\n                sub_407030();\nLABEL_552:\n                v40 = v357;\n                v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n                v45 = v358;\n                if ( *v54 )\n                  goto LABEL_759;\n                goto LABEL_488;\n              }\n              v5 = 0LL;\n              v209 = sub_43FAB0(v358, 0LL);\nLABEL_537:\n              v220 = v209;\n              sub_407030();\n              sub_407030();\n              v17 = v220 == 5;\n              v54 = &byte_98A1B0[v371];\n              if ( !v17 )\n                goto LABEL_552;\n            }\n            else\n            {\n              sub_407030();\n            }\n            v221 = *(_DWORD *)(v3 + 4LL * v371);\n            v40 = v357;\n            v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n            v45 = v358;\n            if ( v390 < v221 )\n            {\n              if ( !*v54 )\n              {\n                if ( v221 == 100000 )\n                {\n                  v257 = *(signed int *)(v3 + 9604);\n                  *(_DWORD *)(v3 + 9604) = v257 + 1;\n                  *(_DWORD *)(v3 + 4 * v257 + 8000) = v371;\n                }\n                *(_DWORD *)(v3 + 4LL * v371) = v390;\n                *(_DWORD *)(v3 + 4LL * v371 + 1600) = 1000;\n                *(_DWORD *)(v3 + 4LL * v371 + 3200) = v357;\n                *(_DWORD *)(v3 + 4LL * v371 + 4800) = v358;\n                *(_DWORD *)(v3 + 4LL * v371 + 6400) = 0;\n                if ( *v54 )\n                  goto LABEL_759;\n                goto LABEL_488;\n              }\n              v5 = 361LL;\n              LODWORD(v222) = sub_40A6C0(v371, 361, (__int64)v408);\n              if ( (signed int)v222 <= 0 )\n                goto LABEL_552;\n              v222 = (unsigned int)v222;\n              v223 = v408;\n              v40 = v357;\n              v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n              v45 = v358;\n              do\n              {\n                v224 = *v223;\n                v5 = *v223;\n                if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n                {\n                  v225 = *(signed int *)(v3 + 9604);\n                  *(_DWORD *)(v3 + 9604) = v225 + 1;\n                  v54 = &byte_98A1B0[v371];\n                  *(_DWORD *)(v3 + 4 * v225 + 8000) = v224;\n                }\n                *(_DWORD *)(v3 + 4LL * v224) = v390;\n                *(_DWORD *)(v3 + 4LL * v224 + 1600) = 1000;\n                *(_DWORD *)(v3 + 4LL * v224 + 3200) = v357;\n                *(_DWORD *)(v3 + 4LL * v224 + 4800) = v358;\n                *(_DWORD *)(v3 + 4LL * v224 + 6400) = 0;\n                v17 = v224 == v368;\n                v226 = v8;\n                if ( v17 )\n                  v226 = v403 + 1199;\n                if ( v390 < v8 )\n                  v8 = v226;\n                ++v223;\n                --v222;\n              }\n              while ( v222 );\n            }\n          }\n          if ( *v54 )\n            goto LABEL_759;\n          goto LABEL_488;\n        }\n        if ( byte_98A1B0[v370] )\n        {\n          v5 = 361LL;\n          LODWORD(v215) = sub_40A6C0(v370, 361, (__int64)v408);\n          if ( (signed int)v215 <= 0 )\n            goto LABEL_485;\n          v215 = (unsigned int)v215;\n          v216 = v408;\n          v40 = v357;\n          v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n          v45 = v358;\n          do\n          {\n            v217 = *v216;\n            v5 = *v216;\n            if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n            {\n              v218 = *(signed int *)(v3 + 9604);\n              *(_DWORD *)(v3 + 9604) = v218 + 1;\n              v54 = &byte_98A1B0[v371];\n              *(_DWORD *)(v3 + 4 * v218 + 8000) = v217;\n            }\n            *(_DWORD *)(v3 + 4LL * v217) = v375;\n            *(_DWORD *)(v3 + 4LL * v217 + 1600) = 1000;\n            *(_DWORD *)(v3 + 4LL * v217 + 3200) = v357;\n            *(_DWORD *)(v3 + 4LL * v217 + 4800) = 0;\n            *(_DWORD *)(v3 + 4LL * v217 + 6400) = 0;\n            v17 = v217 == v368;\n            v219 = v8;\n            if ( v17 )\n              v219 = v403 + 1299;\n            if ( v375 < v8 )\n              v8 = v219;\n            ++v216;\n            --v215;\n          }\n          while ( v215 );\n          goto LABEL_486;\n        }\n        if ( v214 == 100000 )\n        {\n          v296 = *(signed int *)(v3 + 9604);\n          *(_DWORD *)(v3 + 9604) = v296 + 1;\n          *(_DWORD *)(v3 + 4 * v296 + 8000) = v370;\n        }\n        *(_DWORD *)(v3 + 4LL * v370) = v375;\n        *(_DWORD *)(v3 + 4LL * v370 + 1600) = 1000;\n        *(_DWORD *)(v3 + 4LL * v370 + 3200) = v357;\n        *(_DWORD *)(v3 + 4LL * v370 + 4800) = 0;\n        *(_DWORD *)(v3 + 4LL * v370 + 6400) = 0;\n        if ( !*v54 )\n          goto LABEL_487;\nLABEL_759:\n        if ( v83 != (unsigned __int8)byte_98A1B0[v362] || byte_98A1B0[v370] || *(_DWORD *)(v3 + 4LL * v370) <= v380 )\n          goto LABEL_777;\n        if ( (unsigned int)sub_40A5F0(v362) != 1 || (v297 = *(_DWORD *)(v3 + 4LL * v370), v380 >= v297) )\n        {\nLABEL_775:\n          v40 = v357;\nLABEL_776:\n          v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n          v45 = v358;\n          goto LABEL_777;\n        }\n        if ( !byte_98A1B0[v370] )\n        {\n          if ( v297 == 100000 )\n          {\n            v62 = *(signed int *)(v3 + 9604);\n            *(_DWORD *)(v3 + 9604) = v62 + 1;\n            *(_DWORD *)(v3 + 4 * v62 + 8000) = v370;\n          }\n          *(_DWORD *)(v3 + 4LL * v370) = v380;\n          *(_DWORD *)(v3 + 4LL * v370 + 1600) = 1000;\n          v40 = v357;\n          *(_DWORD *)(v3 + 4LL * v370 + 3200) = v357;\n          *(_DWORD *)(v3 + 4LL * v370 + 4800) = 0;\n          *(_DWORD *)(v3 + 4LL * v370 + 6400) = 0;\n          goto LABEL_776;\n        }\n        v5 = 361LL;\n        LODWORD(v298) = sub_40A6C0(v370, 361, (__int64)v408);\n        if ( (signed int)v298 <= 0 )\n          goto LABEL_775;\n        v298 = (unsigned int)v298;\n        v299 = v408;\n        v40 = v357;\n        v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n        v45 = v358;\n        do\n        {\n          v300 = *v299;\n          v5 = *v299;\n          if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n          {\n            v301 = *(signed int *)(v3 + 9604);\n            *(_DWORD *)(v3 + 9604) = v301 + 1;\n            v54 = &byte_98A1B0[v371];\n            *(_DWORD *)(v3 + 4 * v301 + 8000) = v300;\n          }\n          *(_DWORD *)(v3 + 4LL * v300) = v380;\n          *(_DWORD *)(v3 + 4LL * v300 + 1600) = 1000;\n          *(_DWORD *)(v3 + 4LL * v300 + 3200) = v357;\n          *(_DWORD *)(v3 + 4LL * v300 + 4800) = 0;\n          *(_DWORD *)(v3 + 4LL * v300 + 6400) = 0;\n          v17 = v300 == v368;\n          v302 = v8;\n          if ( v17 )\n            v302 = v403 + 1999;\n          if ( v380 < v8 )\n            v8 = v302;\n          ++v299;\n          --v298;\n        }\n        while ( v298 );\nLABEL_777:\n        if ( !*v54 )\n        {\n          if ( byte_98A1B0[v362] )\n            goto LABEL_818;\n          if ( *(_DWORD *)(v3 + 4LL * v371) > v389 )\n          {\n            v5 = v373;\n            if ( !(unsigned int)sub_406880((unsigned int)v371, v373, 0LL, 0, 0, 0) )\n              goto LABEL_104;\n            v5 = v83;\n            if ( (unsigned int)sub_406880(v362, v83, 0LL, 0, 0, 0) )\n            {\n              v43 = sub_4083A0(v362);\n              if ( v43 != 2 )\n              {\n                if ( v43 == 1 )\n                {\n                  v5 = 0LL;\n                  v44 = sub_43B050(v362, 0LL);\n                  goto LABEL_89;\n                }\n                sub_407030();\n                sub_407030();\nLABEL_104:\n                v40 = v357;\n                v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n                v45 = v358;\n                if ( *v54 )\n                  goto LABEL_778;\n                goto LABEL_818;\n              }\n              v5 = 0LL;\n              v44 = sub_43FAB0(v362, 0LL);\nLABEL_89:\n              v55 = v44;\n              sub_407030();\n              sub_407030();\n              v17 = v55 == 5;\n              v54 = &byte_98A1B0[v371];\n              if ( !v17 )\n                goto LABEL_104;\n            }\n            else\n            {\n              sub_407030();\n            }\n            v56 = *(_DWORD *)(v3 + 4LL * v371);\n            v40 = v357;\n            v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n            v45 = v358;\n            if ( v389 < v56 )\n            {\n              if ( !*v54 )\n              {\n                if ( v56 == 100000 )\n                {\n                  v64 = *(signed int *)(v3 + 9604);\n                  *(_DWORD *)(v3 + 9604) = v64 + 1;\n                  *(_DWORD *)(v3 + 4 * v64 + 8000) = v371;\n                }\n                *(_DWORD *)(v3 + 4LL * v371) = v389;\n                *(_DWORD *)(v3 + 4LL * v371 + 1600) = 900;\n                *(_DWORD *)(v3 + 4LL * v371 + 3200) = v357;\n                *(_DWORD *)(v3 + 4LL * v371 + 4800) = 0;\n                *(_DWORD *)(v3 + 4LL * v371 + 6400) = 0;\n                if ( *v54 )\n                  goto LABEL_778;\nLABEL_818:\n                if ( v83 == (unsigned __int8)*v46\n                  && v83 == (unsigned __int8)byte_98A1B0[v362]\n                  && *(_DWORD *)(v3 + 4LL * v371) > v380 )\n                {\n                  v315 = sub_4083A0(v45);\n                  if ( (signed int)(v315 + (unsigned __int64)sub_4083A0(v362)) > 6 )\n                  {\n                    v40 = v357;\n                    v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n                    v45 = v358;\n                    v54 = &byte_98A1B0[v371];\n                  }\n                  else\n                  {\n                    v316 = *(_DWORD *)(v3 + 4LL * v371);\n                    v40 = v357;\n                    v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n                    v54 = &byte_98A1B0[v371];\n                    if ( v380 >= v316 )\n                    {\n                      v45 = v358;\n                    }\n                    else if ( *v365 )\n                    {\n                      v5 = 361LL;\n                      LODWORD(v317) = sub_40A6C0(v371, 361, (__int64)v408);\n                      if ( (signed int)v317 <= 0 )\n                      {\n                        v40 = v357;\n                        v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n                        v45 = v358;\n                      }\n                      else\n                      {\n                        v317 = (unsigned int)v317;\n                        v318 = v408;\n                        v40 = v357;\n                        v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n                        v45 = v358;\n                        do\n                        {\n                          v319 = *v318;\n                          v5 = *v318;\n                          if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n                          {\n                            v320 = *(signed int *)(v3 + 9604);\n                            *(_DWORD *)(v3 + 9604) = v320 + 1;\n                            v54 = &byte_98A1B0[v371];\n                            *(_DWORD *)(v3 + 4 * v320 + 8000) = v319;\n                          }\n                          *(_DWORD *)(v3 + 4LL * v319) = v380;\n                          *(_DWORD *)(v3 + 4LL * v319 + 1600) = 1000;\n                          *(_DWORD *)(v3 + 4LL * v319 + 3200) = v357;\n                          *(_DWORD *)(v3 + 4LL * v319 + 4800) = 0;\n                          *(_DWORD *)(v3 + 4LL * v319 + 6400) = 0;\n                          v17 = v319 == v368;\n                          v321 = v8;\n                          if ( v17 )\n                            v321 = v403 + 1999;\n                          if ( v380 < v8 )\n                            v8 = v321;\n                          ++v318;\n                          --v317;\n                        }\n                        while ( v317 );\n                      }\n                    }\n                    else\n                    {\n                      if ( v316 == 100000 )\n                      {\n                        v66 = *(signed int *)(v3 + 9604);\n                        *(_DWORD *)(v3 + 9604) = v66 + 1;\n                        *(_DWORD *)(v3 + 4 * v66 + 8000) = v371;\n                      }\n                      *(_DWORD *)(v3 + 4LL * v371) = v380;\n                      *(_DWORD *)(v3 + 4LL * v371 + 1600) = 1000;\n                      *(_DWORD *)(v3 + 4LL * v371 + 3200) = v357;\n                      *(_DWORD *)(v3 + 4LL * v371 + 4800) = 0;\n                      *(_DWORD *)(v3 + 4LL * v371 + 6400) = 0;\n                      v45 = v358;\n                    }\n                  }\n                }\n                goto LABEL_778;\n              }\n              v5 = 361LL;\n              LODWORD(v57) = sub_40A6C0(v371, 361, (__int64)v408);\n              if ( (signed int)v57 <= 0 )\n                goto LABEL_104;\n              v57 = (unsigned int)v57;\n              v58 = v408;\n              v40 = v357;\n              v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n              v45 = v358;\n              do\n              {\n                v59 = *v58;\n                v5 = *v58;\n                if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n                {\n                  v60 = *(signed int *)(v3 + 9604);\n                  *(_DWORD *)(v3 + 9604) = v60 + 1;\n                  v54 = &byte_98A1B0[v371];\n                  *(_DWORD *)(v3 + 4 * v60 + 8000) = v59;\n                }\n                *(_DWORD *)(v3 + 4LL * v59) = v389;\n                *(_DWORD *)(v3 + 4LL * v59 + 1600) = 900;\n                *(_DWORD *)(v3 + 4LL * v59 + 3200) = v357;\n                *(_DWORD *)(v3 + 4LL * v59 + 4800) = 0;\n                *(_DWORD *)(v3 + 4LL * v59 + 6400) = 0;\n                v17 = v59 == v368;\n                v61 = v8;\n                if ( v17 )\n                  v61 = v403 + 1799;\n                if ( v389 < v8 )\n                  v8 = v61;\n                ++v58;\n                --v57;\n              }\n              while ( v57 );\n            }\n          }\n          if ( *v54 )\n            goto LABEL_778;\n          goto LABEL_818;\n        }\nLABEL_778:\n        if ( *v54 != v356\n          || v83 != (unsigned __int8)*v46\n          || v83 != (unsigned __int8)byte_98A1B0[v362]\n          || *(_DWORD *)(v3 + 4LL * v371) <= v380 )\n        {\n          v42 = v402;\n          goto LABEL_796;\n        }\n        v303 = sub_4083A0(v45);\n        if ( (signed int)(v303 + (unsigned __int64)sub_4083A0(v362)) > 5\n          || (v304 = *(_DWORD *)(v3 + 4LL * v371), v380 >= v304) )\n        {\n          v40 = v357;\n          v42 = v402;\nLABEL_69:\n          v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n          v45 = v358;\n          goto LABEL_796;\n        }\n        if ( !*v365 )\n        {\n          v42 = v402;\n          if ( v304 == 100000 )\n          {\n            v63 = *(signed int *)(v3 + 9604);\n            *(_DWORD *)(v3 + 9604) = v63 + 1;\n            *(_DWORD *)(v3 + 4 * v63 + 8000) = v371;\n          }\n          *(_DWORD *)(v3 + 4LL * v371) = v380;\n          *(_DWORD *)(v3 + 4LL * v371 + 1600) = 1000;\n          v40 = v357;\n          *(_DWORD *)(v3 + 4LL * v371 + 3200) = v357;\n          *(_DWORD *)(v3 + 4LL * v371 + 4800) = 0;\n          *(_DWORD *)(v3 + 4LL * v371 + 6400) = 0;\n          goto LABEL_69;\n        }\n        v5 = 361LL;\n        LODWORD(v305) = sub_40A6C0(v371, 361, (__int64)v408);\n        v42 = v402;\n        if ( (signed int)v305 <= 0 )\n        {\n          v40 = v357;\n          goto LABEL_69;\n        }\n        v305 = (unsigned int)v305;\n        v306 = v408;\n        v40 = v357;\n        v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n        v45 = v358;\n        do\n        {\n          v307 = *v306;\n          v5 = *v306;\n          if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n          {\n            v308 = *(signed int *)(v3 + 9604);\n            *(_DWORD *)(v3 + 9604) = v308 + 1;\n            *(_DWORD *)(v3 + 4 * v308 + 8000) = v307;\n          }\n          *(_DWORD *)(v3 + 4LL * v307) = v380;\n          *(_DWORD *)(v3 + 4LL * v307 + 1600) = 1000;\n          *(_DWORD *)(v3 + 4LL * v307 + 3200) = v357;\n          *(_DWORD *)(v3 + 4LL * v307 + 4800) = 0;\n          *(_DWORD *)(v3 + 4LL * v307 + 6400) = 0;\n          v17 = v307 == v368;\n          v309 = v8;\n          if ( v17 )\n            v309 = v403 + 1999;\n          if ( v380 < v8 )\n            v8 = v309;\n          ++v306;\n          --v305;\n        }\n        while ( v305 );\nLABEL_796:\n        if ( v83 == (unsigned __int8)*v46 && *(_DWORD *)(v3 + 4 * v45) > v377 )\n        {\n          v5 = 1LL;\n          if ( (signed int)sub_408410(v45, 1, (unsigned __int64)&v406) <= 1\n            && (v5 = (unsigned __int8)**((_BYTE **)&v358 + 1), (signed int)sub_4099C0(v406, v5, 2, 0LL) < 2) )\n          {\n            v5 = (signed __int64)&v409;\n            if ( (signed int)sub_40A880(v358, (__int64)&v409, 1) > 0 )\n            {\n              v40 = v357;\n              v45 = v358;\n              goto LABEL_801;\n            }\n            v48 = *(_DWORD *)(v3 + 4 * v358);\n            v45 = v358;\n            if ( v377 >= v48 )\n            {\n              v40 = v357;\n              goto LABEL_801;\n            }\n            v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n            if ( **((_BYTE **)&v358 + 1) )\n            {\n              v5 = 361LL;\n              LODWORD(v49) = sub_40A6C0(v358, 361, (__int64)v408);\n              if ( (signed int)v49 <= 0 )\n                goto LABEL_800;\n              v49 = (unsigned int)v49;\n              v50 = v408;\n              v40 = v357;\n              v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n              v45 = v358;\n              do\n              {\n                v51 = *v50;\n                v5 = *v50;\n                if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n                {\n                  v52 = *(signed int *)(v3 + 9604);\n                  *(_DWORD *)(v3 + 9604) = v52 + 1;\n                  *(_DWORD *)(v3 + 4 * v52 + 8000) = v51;\n                }\n                *(_DWORD *)(v3 + 4LL * v51) = v377;\n                *(_DWORD *)(v3 + 4LL * v51 + 1600) = 100;\n                *(_DWORD *)(v3 + 4LL * v51 + 3200) = v357;\n                *(_DWORD *)(v3 + 4LL * v51 + 4800) = 0;\n                *(_DWORD *)(v3 + 4LL * v51 + 6400) = 0;\n                v17 = v51 == v368;\n                v53 = v8;\n                if ( v17 )\n                  v53 = v403 + 99;\n                if ( v377 < v8 )\n                  v8 = v53;\n                ++v50;\n                --v49;\n              }\n              while ( v49 );\n            }\n            else\n            {\n              if ( v48 == 100000 )\n              {\n                v65 = *(signed int *)(v3 + 9604);\n                *(_DWORD *)(v3 + 9604) = v65 + 1;\n                *(_DWORD *)(v3 + 4 * v65 + 8000) = v358;\n              }\n              *(_DWORD *)(v3 + 4 * v358) = v377;\n              *(_DWORD *)(v3 + 4 * v358 + 1600) = 100;\n              v40 = v357;\n              *(_DWORD *)(v3 + 4 * v358 + 3200) = v357;\n              *(_DWORD *)(v3 + 4 * v358 + 4800) = 0;\n              *(_DWORD *)(v3 + 4 * v358 + 6400) = 0;\n            }\n          }\n          else\n          {\nLABEL_800:\n            v40 = v357;\n            v45 = v358;\nLABEL_801:\n            v46 = (_BYTE *)*((_QWORD *)&v358 + 1);\n          }\n        }\n        result = (unsigned __int8)*v46;\n        if ( v83 == (_DWORD)result )\n        {\n          result = (unsigned int)v401;\n          if ( *(_DWORD *)(v3 + 4 * v45) > v401 )\n          {\n            v310 = v45;\n            result = sub_43AED0((unsigned int)v45, v5);\n            if ( !(_DWORD)result )\n              goto LABEL_834;\n            result = *(unsigned int *)(v3 + 4 * v310);\n            if ( v401 >= (signed int)result )\n              goto LABEL_834;\n            if ( **((_BYTE **)&v358 + 1) )\n            {\n              v5 = 361LL;\n              result = sub_40A6C0(v310, 361, (__int64)v408);\n              if ( (signed int)result > 0 )\n              {\n                result = (unsigned int)result;\n                v311 = v408;\n                v40 = v357;\n                do\n                {\n                  v312 = *v311;\n                  v5 = *v311;\n                  if ( *(_DWORD *)(v3 + 4 * v5) == 100000 )\n                  {\n                    v313 = *(signed int *)(v3 + 9604);\n                    *(_DWORD *)(v3 + 9604) = v313 + 1;\n                    *(_DWORD *)(v3 + 4 * v313 + 8000) = v312;\n                  }\n                  *(_DWORD *)(v3 + 4LL * v312) = v401;\n                  *(_DWORD *)(v3 + 4LL * v312 + 1600) = 300;\n                  *(_DWORD *)(v3 + 4LL * v312 + 3200) = v357;\n                  *(_DWORD *)(v3 + 4LL * v312 + 4800) = 0;\n                  *(_DWORD *)(v3 + 4LL * v312 + 6400) = 0;\n                  v17 = v312 == v368;\n                  v314 = v8;\n                  if ( v17 )\n                    v314 = v403 + 299;\n                  if ( v401 < v8 )\n                    v8 = v314;\n                  ++v311;\n                  --result;\n                }\n                while ( result );\n                goto LABEL_835;\n              }\nLABEL_834:\n              v40 = v357;\n              goto LABEL_835;\n            }\n            if ( (_DWORD)result == 100000 )\n            {\n              v47 = *(signed int *)(v3 + 9604);\n              *(_DWORD *)(v3 + 9604) = v47 + 1;\n              *(_DWORD *)(v3 + 4 * v47 + 8000) = v310;\n            }\n            result = (unsigned int)v401;\n            *(_DWORD *)(v3 + 4 * v310) = v401;\n            *(_DWORD *)(v3 + 4 * v310 + 1600) = 300;\n            v40 = v357;\n            *(_DWORD *)(v3 + 4 * v310 + 3200) = v357;\n            *(_DWORD *)(v3 + 4 * v310 + 4800) = 0;\n            *(_DWORD *)(v3 + 4 * v310 + 6400) = 0;\n          }\n        }\nLABEL_835:\n        v41 = v374;\n      }\n      while ( v42 != 4 );\nLABEL_906:\n      v20 = *(_DWORD *)(v3 + 9604);\n      v19 = *(_DWORD *)(v3 + 9600) + 1;\n      *(_DWORD *)(v3 + 9600) = v19;\n      v21 = v356;\n      if ( v19 >= v20 )\n        return result;\n    }\n    v27 = v407 + 4LL * v19;\n    v28 = v19 + v26 - v24;\n    v22 = -1;\n    v5 = 100000LL;\n    v29 = 0LL;\n    do\n    {\n      v30 = *(_DWORD *)(v3 + 4LL * *(signed int *)(v27 + 4 * v29 - 12));\n      v31 = v19 + v29;\n      if ( v30 >= (signed int)v5 )\n        v31 = v22;\n      if ( v30 <= (signed int)v5 )\n        v5 = (unsigned int)v30;\n      v32 = *(_DWORD *)(v3 + 4LL * *(signed int *)(v27 + 4 * v29 - 8));\n      v33 = v19 + v29 + 1;\n      if ( v32 >= (signed int)v5 )\n        v33 = v31;\n      if ( v32 <= (signed int)v5 )\n        v5 = (unsigned int)v32;\n      v34 = *(_DWORD *)(v3 + 4LL * *(signed int *)(v27 + 4 * v29 - 4));\n      v35 = v19 + v29 + 2;\n      if ( v34 >= (signed int)v5 )\n        v35 = v33;\n      if ( v34 <= (signed int)v5 )\n        v5 = (unsigned int)v34;\n      v36 = *(_DWORD *)(v3 + 4LL * *(signed int *)(v27 + 4 * v29));\n      v22 = v19 + v29 + 3;\n      if ( v36 >= (signed int)v5 )\n        v22 = v35;\n      if ( v36 <= (signed int)v5 )\n        v5 = (unsigned int)v36;\n      v29 += 4LL;\n    }\n    while ( v29 + v28 );\n    v23 = v29 + v19;\n    if ( !v26 )\n      goto LABEL_55;\nLABEL_49:\n    v37 = -v26;\n    do\n    {\n      v38 = *(_DWORD *)(v3 + 4LL * *(signed int *)(v3 + 4 * v23 + 8000));\n      if ( v38 < (signed int)v5 )\n        v22 = v23;\n      if ( v38 <= (signed int)v5 )\n        v5 = (unsigned int)v38;\n      ++v23;\n      ++v37;\n    }\n    while ( v37 );\n    goto LABEL_55;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x436120L", 
            "funcEndAddr": "0x43ab1dL", 
            "funcName": "sub_436120"
        }, 
        {
            "decompiledFuncCode": "size_t __usercall sub_43AB20@<rax>(__int64 a1@<rax>, __int64 a2@<rdi>)\n{\n  signed int v2; // ebx\n  int v3; // ebp\n  _BOOL4 v4; // er15\n  int v5; // edx\n  FILE *v6; // rcx\n  __int64 v7; // r12\n  int v8; // er15\n  __int64 v9; // rbx\n  char v10; // al\n  size_t result; // rax\n  signed __int64 v12; // rbx\n  __int64 v13; // [rsp-8h] [rbp-38h]\n\n  v13 = a1;\n  fwrite(\"  \", 2uLL, 1uLL, stderr);\n  if ( dword_565C68 > 0 )\n  {\n    v2 = 65;\n    v3 = 0;\n    do\n    {\n      v4 = v2 == 73;\n      fprintf(stderr, \"  %c \", (unsigned int)(v2 + v4), v13);\n      ++v3;\n      v2 += v4 + 1;\n    }\n    while ( v3 < dword_565C68 );\n  }\n  fputc(10, stderr);\n  v5 = dword_565C68;\n  v6 = stderr;\n  if ( dword_565C68 > 0 )\n  {\n    LODWORD(v7) = 21;\n    v8 = 0;\n    while ( 1 )\n    {\n      v7 = (unsigned int)v7;\n      fprintf(v6, \"%2d \", (unsigned int)(v5 - v8), v13);\n      if ( dword_565C68 > 0 )\n        break;\nLABEL_17:\n      fputc(10, stderr);\n      ++v8;\n      v5 = dword_565C68;\n      v6 = stderr;\n      LODWORD(v7) = v7 + 20;\n      if ( dword_565C68 <= v8 )\n        goto LABEL_18;\n    }\n    v9 = 0LL;\n    while ( 1 )\n    {\n      if ( *(_DWORD *)(a2 + 4 * v7 + 4 * v9) == 100000 )\n      {\n        v10 = byte_98A1B0[v7 + v9];\n        if ( v10 == 1 )\n        {\n          fwrite(\" O  \", 4uLL, 1uLL, stderr);\n          v10 = byte_98A1B0[v7 + v9];\n          if ( v10 != 2 )\n            goto LABEL_15;\n        }\n        else if ( v10 != 2 )\n        {\nLABEL_15:\n          if ( v10 )\n            goto LABEL_16;\nLABEL_11:\n          fwrite(\" .  \", 4uLL, 1uLL, stderr);\n          goto LABEL_16;\n        }\n        fwrite(\" X  \", 4uLL, 1uLL, stderr);\n        if ( !byte_98A1B0[v7 + v9] )\n          goto LABEL_11;\n      }\n      else\n      {\n        fprintf(stderr, \"%d \");\n      }\nLABEL_16:\n      if ( ++v9 >= dword_565C68 )\n        goto LABEL_17;\n    }\n  }\nLABEL_18:\n  fputc(10, v6);\n  result = fwrite(\"Vulnerable:\\n\", 0xCuLL, 1uLL, stderr);\n  v12 = -379LL;\n  do\n  {\n    if ( *(_DWORD *)(a2 + 4 * v12 + 1600) <= 99999\n      && (*(_DWORD *)(a2 + 4 * v12 + 6400) || *(_DWORD *)(a2 + 4 * v12 + 8000)) )\n    {\n      sub_433F90(\" %1m:\", (unsigned int)(v12 + 400), v13);\n      if ( *(_DWORD *)(a2 + 4 * v12 + 6400) )\n        sub_433F90(\" %1m\");\n      if ( *(_DWORD *)(a2 + 4 * v12 + 8000) )\n        sub_433F90(\" %1m\");\n      result = sub_433F90(\"\\n\", (unsigned int)(v12 + 400));\n    }\n    ++v12;\n  }\n  while ( v12 );\n  return result;\n}\n", 
            "funcStartAddr": "0x43ab20L", 
            "funcEndAddr": "0x43adaeL", 
            "funcName": "sub_43AB20"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_43ADB0(int a1, signed int a2, int a3)\n{\n  int v3; // er15\n  unsigned int v4; // er14\n\n  v3 = a3;\n  v4 = 0;\n  if ( a1 )\n  {\n    if ( a2 )\n    {\n      v4 = 1;\n      if ( a1 != a2\n        && ((unsigned __int8)byte_98A1B0[dword_5641B0[0] + (signed __int64)a1] != a3\n         || (signed int)sub_4083A0(a1 + dword_5641B0[0]) > 3\n         || !(unsigned int)sub_40B0A0(a2, a1 + dword_5641B0[0]))\n        && ((unsigned __int8)byte_98A1B0[dword_5641B4 + (signed __int64)a1] != v3\n         || (signed int)sub_4083A0(a1 + dword_5641B4) > 3\n         || !(unsigned int)sub_40B0A0(a2, a1 + dword_5641B4))\n        && ((unsigned __int8)byte_98A1B0[dword_5641B8 + (signed __int64)a1] != v3\n         || (signed int)sub_4083A0(a1 + dword_5641B8) > 3\n         || !(unsigned int)sub_40B0A0(a2, a1 + dword_5641B8))\n        && ((unsigned __int8)byte_98A1B0[dword_5641BC + (signed __int64)a1] != v3\n         || (signed int)sub_4083A0(a1 + dword_5641BC) > 3\n         || !(unsigned int)sub_40B0A0(a2, dword_5641BC + a1)) )\n      {\n        v4 = 0;\n      }\n    }\n  }\n  return v4;\n}\n", 
            "funcStartAddr": "0x43adb0L", 
            "funcEndAddr": "0x43aecaL", 
            "funcName": "sub_43ADB0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_43AED0(unsigned int a1)\n{\n  __int64 v1; // r14\n  int v2; // er15\n  _BOOL4 v3; // ebx\n  __int64 v4; // r13\n  int v5; // er12\n  int v6; // eax\n  int v7; // eax\n  int v9; // [rsp+8h] [rbp-2C0h]\n  int v10; // [rsp+Ch] [rbp-2BCh]\n  char v11; // [rsp+10h] [rbp-2B8h]\n\n  v1 = qword_88C238;\n  v2 = dword_88C22C;\n  qword_88C238 = 0LL;\n  dword_88C22C = 0;\n  v3 = 0;\n  if ( (unsigned int)sub_4083A0(a1) == 1 )\n    v3 = (unsigned __int64)sub_43B6F0(a1, 0LL) == 0;\n  if ( (unsigned int)sub_4083A0(a1) == 2\n    && !(unsigned int)sub_40A880(a1, (__int64)&v11, 1)\n    && (unsigned int)sub_408410(a1, 2, (unsigned __int64)&v9) == 2\n    && (unsigned int)sub_4093D0(v9, (unsigned __int8)byte_98A1B0[a1], 2, 0LL) == 1\n    && (unsigned int)sub_4093D0(v10, (unsigned __int8)byte_98A1B0[a1], 2, 0LL) == 1 )\n  {\n    v4 = qword_88C238;\n    v5 = dword_88C22C;\n    v6 = sub_4083A0(a1);\n    qword_88C238 = 0LL;\n    dword_88C22C = 0;\n    if ( v6 == 1 )\n    {\n      v7 = sub_43B050(a1, 0LL);\n    }\n    else\n    {\n      if ( v6 != 2 )\n      {\n        qword_88C238 = v4;\n        dword_88C22C = v5;\n        goto LABEL_17;\n      }\n      v7 = sub_43FAB0(a1, 0LL);\n    }\n    qword_88C238 = v4;\n    dword_88C22C = v5;\n    if ( v7 && !(unsigned int)sub_43B6F0(a1, 0LL) )\n      v3 = 1;\n  }\nLABEL_17:\n  qword_88C238 = v1;\n  dword_88C22C = v2;\n  return (unsigned int)v3;\n}\n", 
            "funcStartAddr": "0x43aed0L", 
            "funcEndAddr": "0x43b047L", 
            "funcName": "sub_43AED0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_43B050(unsigned int a1, unsigned int *a2)\n{\n  signed int v2; // ecx\n  __int64 result; // rax\n  __int64 v4; // r14\n  unsigned int v5; // ebx\n  unsigned int v6; // er12\n  unsigned int v7; // [rsp+8h] [rbp-30h]\n  unsigned int v8; // [rsp+Ch] [rbp-2Ch]\n\n  v7 = 0;\n  dword_87BE94 = dword_87BE90;\n  v2 = sub_4083A0(a1);\n  result = 0LL;\n  if ( v2 <= 4 )\n  {\n    v4 = (unsigned int)sub_40AD00(a1);\n    if ( !(unsigned int)sub_457EF0(4LL, v4, &v8, &v7) )\n    {\n      memset(byte_98A510, 0, 0x190uLL);\n      v5 = sub_43B170(a1, &v7, 0LL, 0LL);\n      v8 = v5;\n      v6 = dword_87BE90 - dword_87BE94;\n      if ( dword_87BE90 - dword_87BE94 >= 1000 && (dword_88C264 & 0x8000u) != 0 )\n      {\n        if ( v5 )\n          sub_433F90(\"%oattack %1m(%1m) = %d %1M, %d nodes \", a1, (unsigned int)v4, v5, v7, v6);\n        else\n          sub_433F90(\"%oattack %1m(%1m) = %d, %d nodes \", a1, (unsigned int)v4, 0LL, v6);\n        sub_407180();\n        v5 = v8;\n      }\n      sub_458260(4LL, (unsigned int)v4, v5, v7, v6);\n    }\n    if ( a2 )\n      *a2 = v7;\n    result = v8;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x43b050L", 
            "funcEndAddr": "0x43b16dL", 
            "funcName": "sub_43B050"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_43B170(int a1, int *a2, unsigned int a3, unsigned int a4)\n{\n  unsigned int v4; // er15\n  unsigned int v5; // er12\n  unsigned int *v6; // r13\n  bool v7; // zf\n  signed int v8; // ebp\n  unsigned int v9; // ebp\n  int v10; // edx\n  __int64 v12; // rax\n  __int64 v13; // rax\n  __int64 v14; // rbx\n  int v15; // er14\n  unsigned int v16; // er14\n  int v17; // eax\n  signed int v18; // er14\n  unsigned int v19; // eax\n  __int64 v20; // rax\n  int v21; // ecx\n  int v22; // esi\n  int v23; // er13\n  bool v24; // sf\n  unsigned __int8 v25; // of\n  int v26; // eax\n  __int64 v27; // r13\n  unsigned int v28; // ebx\n  __int64 v29; // rsi\n  unsigned int v30; // er14\n  int v31; // eax\n  int v32; // edx\n  int v33; // esi\n  unsigned int v34; // ecx\n  int v35; // edx\n  unsigned int v36; // [rsp+8h] [rbp-D0h]\n  unsigned int v37; // [rsp+Ch] [rbp-CCh]\n  unsigned int v38; // [rsp+10h] [rbp-C8h]\n  unsigned int v39; // [rsp+14h] [rbp-C4h]\n  __int64 v40; // [rsp+18h] [rbp-C0h]\n  __int64 v41; // [rsp+20h] [rbp-B8h]\n  __int64 v42; // [rsp+28h] [rbp-B0h]\n  unsigned int *v43; // [rsp+30h] [rbp-A8h]\n  int v44; // [rsp+3Ch] [rbp-9Ch]\n  char s[4]; // [rsp+40h] [rbp-98h]\n\n  v4 = a4;\n  v5 = a3;\n  v6 = (unsigned int *)a2;\n  v38 = a1;\n  v7 = byte_98A1B0[a1] == 0;\n  v42 = 0LL;\n  if ( v7 )\n  {\n    v10 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0((__int64)\"engine/reading.c\", 0x8FAu, (__int64)\"color != 0\", v10 - 1, a1 - 20 * v10 - 1);\n  }\n  v8 = sub_4083A0(a1);\n  if ( v8 > 4 || v8 == 4 && dword_98A7F4 > dword_98A770 )\n  {\n    if ( qword_88C238 )\n    {\n      v9 = 0;\n      sprintf(s, \"got 4 liberties (stackp:%d>%d)\", (unsigned int)dword_98A7F4, (unsigned int)dword_98A770);\n      if ( qword_88C238 )\n        sub_40F0A0((__int64)\"attack\", a1, 0, 0, (__int64)s);\n    }\n    else\n    {\n      v9 = 0;\n    }\n    return v9;\n  }\n  if ( dword_98A7F4 <= dword_98A76C && dword_565C6C & 0x20 && (unsigned int)sub_40E8D0(4u, v5, v4, (int *)&v38, &v42) )\n  {\n    v12 = v42;\n    if ( a2 && *(_DWORD *)(v42 + 4) & 0xF000000 )\n      *a2 = (*(_DWORD *)(v42 + 4) >> 10) & 0x3FF;\n    v13 = v12 + 4;\n    if ( qword_88C238 )\n    {\n      sub_40F0A0((__int64)\"attack\", a1, (*(_DWORD *)v13 >> 10) & 0x3FF, (*(_DWORD *)v13 >> 24) & 0xF, (__int64)\"cached\");\n      v13 = v42 + 4;\n    }\n    return *(_BYTE *)(v13 + 3) & 0xF;\n  }\n  if ( v8 == 3 )\n  {\n    v19 = sub_4437B0(v38, &v36, v5, v4);\nLABEL_35:\n    v9 = v19;\n    goto LABEL_36;\n  }\n  if ( v8 == 2 )\n  {\n    if ( dword_98A7F4 <= dword_98A76C + 10 )\n      v19 = sub_4422D0(v38, &v36, v5, v4);\n    else\n      v19 = sub_43FAC0(v38, &v36, v5, v4);\n    goto LABEL_35;\n  }\n  if ( v8 != 1 )\n  {\n    if ( v8 != 4 )\n      goto LABEL_38;\n    v19 = sub_444770(v38, &v36, v5, v4);\n    goto LABEL_35;\n  }\n  v14 = (signed int)v38;\n  v15 = (unsigned __int8)byte_98A1B0[v38];\n  ++dword_87BE90;\n  sub_408410(v38, 1, (unsigned __int64)&v39);\n  v9 = 5;\n  if ( (signed int)sub_40A5F0(v14) > 1 )\n    goto LABEL_61;\n  LODWORD(v41) = v15;\n  v16 = 3 - v15;\n  v17 = sub_406880(v39, v16, \"attack1-A\", v14, v5, v4);\n  v40 = v14;\n  v37 = v16;\n  if ( !v17 )\n  {\n    v22 = v41;\n    v9 = v41 != v5;\n    goto LABEL_46;\n  }\n  if ( (signed int)sub_4083A0(v39) > 1 )\n    goto LABEL_43;\n  if ( (unsigned int)sub_40A5F0(v39) == 1 )\n  {\n    v18 = 4;\n    if ( v37 != v5 )\n      goto LABEL_45;\nLABEL_43:\n    sub_407030();\n    goto LABEL_61;\n  }\n  if ( (unsigned int)sub_406880((unsigned int)v14, (unsigned int)v41, \"attack1-B\", v14, v5, v4) )\n  {\n    v23 = sub_4083A0(v14);\n    sub_407030();\n    v18 = 0;\n    v25 = __OFSUB__(v23, 1);\n    v7 = v23 == 1;\n    v24 = v23 - 1 < 0;\n    v6 = (unsigned int *)a2;\n    LODWORD(v14) = v40;\n    if ( (unsigned __int8)(v24 ^ v25) | v7 )\n      goto LABEL_43;\n  }\n  else\n  {\n    v18 = -1;\n  }\nLABEL_45:\n  sub_407030();\n  v9 = v18;\n  v16 = v37;\n  v22 = v41;\nLABEL_46:\n  v43 = v6;\n  v26 = sub_4093D0(v39, v22, 6, s);\n  if ( (unsigned int)(v26 - 1) > 4 )\n  {\nLABEL_59:\n    if ( (signed int)v9 <= 0 )\n    {\n      v33 = v40;\n      v6 = v43;\n      if ( qword_88C238 )\n      {\n        v32 = 0;\n        v34 = 0;\nLABEL_63:\n        sub_40F0A0((__int64)\"attack1\", v33, v32, v34, 0LL);\n        if ( v9 < 6 )\n          goto LABEL_37;\nLABEL_64:\n        v35 = (1717986919LL * (signed int)v38 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)v38) >> 63);\n        sub_4340E0(\n          (__int64)\"engine/reading.c\",\n          0x92Cu,\n          (__int64)\"result >= 0 && result <= WIN\",\n          v35 - 1,\n          v38 - 20 * v35 - 1);\n      }\nLABEL_36:\n      if ( v9 < 6 )\n        goto LABEL_37;\n      goto LABEL_64;\n    }\n    LODWORD(v14) = v40;\n    v6 = v43;\nLABEL_61:\n    v32 = v39;\n    v36 = v39;\n    if ( qword_88C238 )\n    {\n      v33 = v14;\n      v34 = v9;\n      goto LABEL_63;\n    }\n    goto LABEL_36;\n  }\n  v41 = v26;\n  v27 = 0LL;\n  while ( 1 )\n  {\n    v28 = *(_DWORD *)&s[4 * v27];\n    if ( !(unsigned int)sub_40AD70(*(_DWORD *)&s[4 * v27], v16) )\n      break;\nLABEL_58:\n    if ( ++v27 >= v41 )\n      goto LABEL_59;\n  }\n  v29 = v16;\n  v30 = v40;\n  if ( !(unsigned int)sub_406880(v28, v29, \"attack1-C\", v40, v5, v4) )\n  {\n    v16 = v37;\n    goto LABEL_58;\n  }\n  v31 = sub_43B820(v30, 0LL, v5, v4);\n  if ( v31 == 5 || (v44 = v31, !(unsigned int)sub_43B170(v30, 0LL, v5, v4)) )\n  {\n    v16 = v37;\nLABEL_56:\n    sub_407030();\n    goto LABEL_58;\n  }\n  v16 = v37;\n  if ( v44 )\n  {\n    if ( 5 - v44 > (signed int)v9 )\n    {\n      v39 = v28;\n      v9 = 5 - v44;\n    }\n    goto LABEL_56;\n  }\n  sub_407030();\n  if ( qword_88C238 )\n    sub_40F0A0((__int64)\"attack1\", v40, v28, 5u, (__int64)\"backfilling\");\n  v36 = v28;\n  v9 = 5;\n  v6 = v43;\nLABEL_37:\n  if ( v9 )\n  {\n    if ( v6 )\n      *v6 = v36;\n    v20 = v42;\n    if ( v42 )\n    {\n      v21 = ((v36 << 10) & 0xFFC00) + (*(_DWORD *)(v42 + 4) & 0x3FF | ((v9 & 0xF) << 24)) + 0x20000000;\nLABEL_69:\n      *(_DWORD *)(v20 + 4) = v21;\n    }\n  }\n  else\n  {\nLABEL_38:\n    v20 = v42;\n    v9 = 0;\n    if ( v42 )\n    {\n      v21 = *(_DWORD *)(v42 + 4) & 0x3FF | 0x20000000;\n      goto LABEL_69;\n    }\n  }\n  return v9;\n}\n", 
            "funcStartAddr": "0x43b170L", 
            "funcEndAddr": "0x43b6eeL", 
            "funcName": "sub_43B170"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __usercall sub_43B6F0@<rax>(__int64 a1@<rax>, unsigned int a2@<edi>, _DWORD *a3@<rsi>)\n{\n  signed __int64 result; // rax\n  __int64 v4; // r14\n  unsigned int v5; // er9\n  unsigned int v6; // er15\n  __int64 v7; // [rsp+0h] [rbp-28h]\n\n  v7 = a1;\n  LODWORD(v7) = 0;\n  dword_87BE94 = dword_87BE90;\n  if ( (signed int)sub_4083A0(a2) < 5 )\n  {\n    v4 = (unsigned int)sub_40AD00(a2);\n    if ( !(unsigned int)sub_457EF0(3LL, v4, (char *)&v7 + 4, &v7) )\n    {\n      memset(byte_98A510, 0, 0x190uLL);\n      v5 = sub_43B820(a2, &v7, 0LL, 0LL);\n      HIDWORD(v7) = v5;\n      v6 = dword_87BE90 - dword_87BE94;\n      if ( dword_87BE90 - dword_87BE94 >= 1000 && (dword_88C264 & 0x8000u) != 0 )\n      {\n        if ( v5 )\n          sub_433F90(\"%odefend %1m(%1m) = %d %1M, %d nodes \", a2, (unsigned int)v4, v5, (unsigned int)v7, v6, v7);\n        else\n          sub_433F90(\"%odefend %1m(%1m) = %d, %d nodes \", a2, (unsigned int)v4, 0LL, v6, v7);\n        sub_407180();\n        v5 = HIDWORD(v7);\n      }\n      sub_458260(3LL, (unsigned int)v4, v5, (unsigned int)v7, v6);\n    }\n    if ( a3 )\n      *a3 = v7;\n    result = HIDWORD(v7);\n  }\n  else\n  {\n    result = 5LL;\n    if ( a3 )\n      *a3 = 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x43b6f0L", 
            "funcEndAddr": "0x43b814L", 
            "funcName": "sub_43B6F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_43B820(int a1, int *a2, unsigned int a3, unsigned int a4)\n{\n  unsigned int v4; // er15\n  signed int v5; // eax\n  signed int v6; // ebp\n  signed __int64 v7; // rbx\n  int v8; // eax\n  char v9; // r14\n  __int64 v10; // rax\n  signed __int64 v11; // rax\n  __int64 v12; // r15\n  unsigned int v13; // er13\n  int v14; // edx\n  int v15; // edx\n  int v16; // edx\n  int v17; // ebp\n  int v18; // er14\n  int v19; // edx\n  signed __int64 v20; // rcx\n  __int64 v21; // r12\n  unsigned int v22; // er15\n  int v23; // edx\n  __int64 v25; // rcx\n  __int64 v26; // r13\n  unsigned int v27; // er15\n  int v28; // edx\n  __int64 v30; // rcx\n  unsigned int v31; // er15\n  int v32; // ebp\n  int v33; // edx\n  unsigned int v44; // eax\n  __int64 v45; // rbp\n  int *v46; // rbx\n  __int128 *v47; // rbx\n  int v48; // eax\n  __int64 v49; // rbp\n  int v50; // er15\n  signed __int64 v51; // rax\n  __int64 v52; // rbx\n  __int64 v53; // r13\n  __int64 v54; // rdi\n  unsigned int v55; // er14\n  int v56; // eax\n  signed __int64 v57; // r12\n  unsigned __int64 v58; // rbp\n  signed __int64 v59; // rcx\n  unsigned int v60; // eax\n  __int64 v61; // rbp\n  int *v62; // rbx\n  int v63; // eax\n  int v64; // er15\n  signed __int64 v65; // rbp\n  signed __int64 v66; // rbx\n  int v67; // er14\n  char v68; // r15\n  int v69; // edi\n  signed __int64 v70; // r12\n  int v71; // er13\n  int v72; // ebx\n  bool v73; // zf\n  int v74; // eax\n  int v75; // eax\n  bool v76; // zf\n  bool v77; // sf\n  unsigned __int8 v78; // of\n  int v79; // eax\n  __int64 v80; // r14\n  unsigned int v81; // eax\n  __int64 v82; // r12\n  __int64 v83; // rbp\n  signed int v84; // ebx\n  signed __int64 i; // rcx\n  int v86; // eax\n  __int64 v87; // r12\n  __int64 v88; // rbp\n  int v89; // ebx\n  signed __int64 j; // rcx\n  int v91; // er14\n  signed __int64 v92; // rbp\n  unsigned int v93; // er12\n  signed __int64 v94; // rbx\n  int v95; // er14\n  int v96; // er12\n  int v97; // ebx\n  bool v98; // zf\n  int v99; // eax\n  int v100; // eax\n  bool v101; // zf\n  bool v102; // sf\n  unsigned __int8 v103; // of\n  int v104; // eax\n  signed __int64 v105; // r13\n  int v106; // eax\n  int v107; // ecx\n  signed __int64 v108; // rbp\n  int v109; // ebx\n  signed __int64 k; // rcx\n  signed __int64 v111; // rbp\n  unsigned int v112; // ebx\n  signed __int64 v113; // rbx\n  int v114; // eax\n  signed __int64 v115; // rbp\n  int v116; // er14\n  int v117; // er12\n  int v118; // ebx\n  bool v119; // zf\n  int v120; // eax\n  int v121; // eax\n  bool v122; // zf\n  bool v123; // sf\n  unsigned __int8 v124; // of\n  int v125; // eax\n  int *v126; // rax\n  int v127; // er14\n  signed __int64 v128; // rcx\n  __int64 v129; // rsi\n  __int64 v138; // rdx\n  unsigned int v140; // eax\n  __int64 v141; // rbp\n  int *v142; // rbx\n  int v143; // er15\n  signed int v144; // eax\n  int v145; // edx\n  signed __int64 v146; // rax\n  __int64 v147; // r14\n  __int64 v148; // r12\n  __int64 v149; // rbx\n  __int64 v150; // rbx\n  __int64 v151; // r13\n  __int64 v152; // rbp\n  signed int v153; // eax\n  int v154; // ebp\n  signed __int64 l; // rcx\n  int v156; // eax\n  int v157; // ebp\n  int v158; // ebx\n  signed int v159; // eax\n  signed __int64 m; // rcx\n  signed __int64 v161; // r12\n  __int64 v162; // rcx\n  signed __int64 v163; // rbp\n  int v164; // edi\n  int v165; // er13\n  int v166; // ebx\n  int v167; // eax\n  bool v168; // zf\n  bool v169; // sf\n  unsigned __int8 v170; // of\n  int v171; // eax\n  int v172; // eax\n  int v173; // er12\n  int v174; // edx\n  int v175; // er15\n  signed __int64 v176; // rax\n  __int64 v177; // rbx\n  __int64 v178; // rbp\n  __int64 v179; // rax\n  __int64 v180; // r14\n  __int64 v181; // rax\n  signed __int64 n; // rcx\n  int v183; // eax\n  int v184; // er14\n  int v185; // er14\n  signed __int64 ii; // rcx\n  __int128 *v187; // rbx\n  __int64 v188; // rbp\n  signed __int64 v189; // rbx\n  unsigned int v190; // ebx\n  int v191; // edx\n  signed __int64 v192; // rax\n  __int64 v193; // rsi\n  __int64 v194; // r14\n  __int64 v195; // rcx\n  __int64 v196; // rbx\n  _BOOL4 v197; // eax\n  __int64 v198; // rdi\n  int v199; // edx\n  __int64 v200; // r13\n  int v201; // er12\n  int v202; // ecx\n  __int64 v203; // rbp\n  __int64 v204; // r15\n  signed int v205; // ebp\n  signed __int64 jj; // rcx\n  _BOOL4 v207; // eax\n  signed __int64 kk; // rcx\n  unsigned int v209; // er13\n  signed __int64 v210; // rbx\n  int v211; // eax\n  int v212; // er15\n  int *v213; // rax\n  unsigned int v214; // er12\n  int *v215; // rbp\n  int v216; // er14\n  int v217; // er12\n  int v218; // ebp\n  signed __int64 v219; // rax\n  int v220; // eax\n  signed __int64 v221; // rcx\n  bool v222; // zf\n  bool v223; // sf\n  unsigned __int8 v224; // of\n  int v225; // eax\n  int *v226; // r12\n  unsigned int v227; // ebp\n  signed __int64 v228; // rbx\n  int v229; // ebp\n  signed __int64 ll; // rcx\n  signed __int64 v231; // rbx\n  unsigned int v232; // ebp\n  signed __int64 v233; // rbx\n  int v234; // er14\n  int v235; // eax\n  int v236; // edi\n  char v237; // r13\n  int v238; // er15\n  int v239; // ebp\n  signed __int64 v240; // rax\n  int v241; // eax\n  signed __int64 v242; // rcx\n  bool v243; // zf\n  bool v244; // sf\n  unsigned __int8 v245; // of\n  int v246; // eax\n  const char *v247; // rdi\n  int v248; // esi\n  int v249; // ebp\n  __int64 v250; // rax\n  int v251; // ecx\n  int v252; // eax\n  signed __int64 v258; // rsi\n  signed __int64 v259; // rdx\n  unsigned int v260; // eax\n  __int64 v261; // rbx\n  int *v262; // rbp\n  signed __int64 v263; // rbp\n  __int64 v264; // r14\n  int v265; // er13\n  unsigned int v266; // ebx\n  int v267; // ebp\n  int v268; // er12\n  int v269; // ebx\n  int v270; // ebp\n  int v271; // eax\n  bool v272; // zf\n  bool v273; // sf\n  unsigned __int8 v274; // of\n  int v275; // eax\n  int v276; // esi\n  const char *v277; // rdi\n  const char *v278; // r8\n  __int64 v279; // r12\n  char v280; // r14\n  int v281; // ebp\n  __int64 v282; // rdi\n  int v283; // er15\n  int v284; // ebx\n  bool v285; // zf\n  int v286; // eax\n  int v287; // eax\n  bool v288; // zf\n  bool v289; // sf\n  unsigned __int8 v290; // of\n  int v291; // eax\n  int v292; // er15\n  int v293; // er12\n  signed __int64 v294; // rbx\n  unsigned int v295; // er14\n  unsigned int v296; // ebp\n  int v297; // ebp\n  bool v298; // zf\n  bool v299; // sf\n  unsigned __int8 v300; // of\n  int v301; // eax\n  unsigned int v303; // [rsp+0h] [rbp-518h]\n  __int64 v304; // [rsp+0h] [rbp-518h]\n  int v305; // [rsp+0h] [rbp-518h]\n  int v306; // [rsp+0h] [rbp-518h]\n  unsigned int v307; // [rsp+Ch] [rbp-50Ch]\n  unsigned int v308; // [rsp+10h] [rbp-508h]\n  __int64 v309; // [rsp+10h] [rbp-508h]\n  int v310; // [rsp+10h] [rbp-508h]\n  signed __int64 v311; // [rsp+10h] [rbp-508h]\n  int v312; // [rsp+10h] [rbp-508h]\n  __int64 v313; // [rsp+10h] [rbp-508h]\n  signed __int64 v314; // [rsp+18h] [rbp-500h]\n  signed __int64 v315; // [rsp+18h] [rbp-500h]\n  signed __int64 v316; // [rsp+18h] [rbp-500h]\n  __int64 v317; // [rsp+18h] [rbp-500h]\n  signed __int64 v318; // [rsp+18h] [rbp-500h]\n  signed __int64 v319; // [rsp+18h] [rbp-500h]\n  unsigned int v320; // [rsp+18h] [rbp-500h]\n  unsigned int v321; // [rsp+24h] [rbp-4F4h]\n  int *v322; // [rsp+28h] [rbp-4F0h]\n  unsigned int v323; // [rsp+34h] [rbp-4E4h]\n  int v324; // [rsp+34h] [rbp-4E4h]\n  signed __int64 v325; // [rsp+38h] [rbp-4E0h]\n  int v326; // [rsp+38h] [rbp-4E0h]\n  int v327; // [rsp+38h] [rbp-4E0h]\n  unsigned int v328; // [rsp+44h] [rbp-4D4h]\n  int v329; // [rsp+44h] [rbp-4D4h]\n  int v330; // [rsp+48h] [rbp-4D0h]\n  __int64 v331; // [rsp+48h] [rbp-4D0h]\n  signed __int64 v332; // [rsp+48h] [rbp-4D0h]\n  __int64 v333; // [rsp+48h] [rbp-4D0h]\n  __int128 v334; // [rsp+50h] [rbp-4C8h]\n  __int128 v335; // [rsp+60h] [rbp-4B8h]\n  int v337; // [rsp+78h] [rbp-4A0h]\n  int v338; // [rsp+7Ch] [rbp-49Ch]\n  __int128 v339; // [rsp+80h] [rbp-498h]\n  __int128 v341; // [rsp+A0h] [rbp-478h]\n  __int128 v342; // [rsp+B0h] [rbp-468h]\n  __int128 v343; // [rsp+C0h] [rbp-458h]\n  __int128 v347; // [rsp+188h] [rbp-390h]\n  int v351; // [rsp+250h] [rbp-2C8h]\n  __int64 v352; // [rsp+258h] [rbp-2C0h]\n  int v353[50]; // [rsp+260h] [rbp-2B8h]\n  int v354[50]; // [rsp+328h] [rbp-1F0h]\n  int v355; // [rsp+3F0h] [rbp-128h]\n\n  v4 = a4;\n  v321 = a3;\n  v322 = a2;\n  v337 = a1;\n  *(_QWORD *)&v341 = 0LL;\n  v5 = sub_4083A0(a1);\n  v6 = v5;\n  if ( v5 > 4 )\n    goto LABEL_2;\n  if ( v5 == 4 )\n  {\n    v8 = dword_98A7F4;\n    if ( dword_98A7F4 <= dword_98A770 )\n    {\nLABEL_20:\n      v9 = 0;\n      if ( v8 > dword_98A76C )\n        goto LABEL_21;\n      goto LABEL_12;\n    }\n    goto LABEL_2;\n  }\n  v8 = dword_98A7F4;\n  if ( v6 != 3 )\n    goto LABEL_20;\n  v9 = 1;\n  if ( dword_98A7F4 > dword_98A76C )\n  {\nLABEL_2:\n    if ( qword_88C238 )\n      sub_40F0A0((__int64)\"find_defense\", a1, 0, 5u, (__int64)\"too many liberties or stackp > depth\");\n    LODWORD(v7) = 5;\n    if ( a2 )\n      *a2 = 0;\n    return (unsigned int)v7;\n  }\n  if ( dword_98A7F4 > dword_98A76C )\n    goto LABEL_21;\nLABEL_12:\n  if ( dword_565C6C & 1 && (unsigned int)sub_40E8D0(3u, v321, v4, &v337, &v341) )\n  {\n    v10 = v341;\n    if ( a2 && *(_DWORD *)(v341 + 4) & 0xF000000 )\n      *a2 = (*(_DWORD *)(v341 + 4) >> 10) & 0x3FF;\n    v11 = v10 + 4;\n    if ( qword_88C238 )\n    {\n      sub_40F0A0(\n        (__int64)\"find_defense\",\n        a1,\n        (*(_DWORD *)v11 >> 10) & 0x3FF,\n        (*(_DWORD *)v11 >> 24) & 0xF,\n        (__int64)\"cached\");\n      v11 = v341 + 4;\n    }\n    LODWORD(v7) = *(_BYTE *)(v11 + 3) & 0xF;\n    return (unsigned int)v7;\n  }\nLABEL_21:\n  v307 = v4;\n  if ( v6 == 2 )\n  {\n    ++dword_87BE90;\n    v21 = v337;\n    v303 = (unsigned __int8)byte_98A1B0[v337];\n    if ( (unsigned __int8)(v303 - 1) >= 2u )\n      sub_4340E0(\n        (__int64)\"engine/reading.c\",\n        0x4A1u,\n        (__int64)\"((board[str]) == 1 || (board[str]) == 2)\",\n        0xFFFFFFFF,\n        0xFFFFFFFF);\n    if ( (unsigned int)sub_4083A0(v337) != 2 )\n      sub_4340E0((__int64)\"engine/reading.c\", 0x4A2u, (__int64)\"countlib(str) == 2\", 0xFFFFFFFF, 0xFFFFFFFF);\n    v22 = sub_408410(v21, 2, (unsigned __int64)&v334);\n    if ( v22 != 2 )\n    {\n      v23 = (1717986919 * v21 >> 35) + ((unsigned __int64)(1717986919 * v21) >> 63);\n      sub_4340E0((__int64)\"engine/reading.c\", 0x4A5u, (__int64)\"liberties == 2\", v23 - 1, v21 - 20 * v23 - 1);\n    }\n    v25 = 0LL;\n    do\n    {\n      *((_DWORD *)&v343 + v25) = *((_DWORD *)&v334 + v25);\n      *((_DWORD *)&v347 + v25++) = 0;\n    }\n    while ( v22 != v25 );\n    v351 = v22;\n    sub_4401B0((unsigned int)v21, &v343);\n    v44 = sub_40A880(v21, (__int64)v353, 2);\n    if ( (signed int)v44 > 0 )\n    {\n      v45 = v44;\n      v46 = v353;\n      do\n      {\n        sub_441940((unsigned int)v21, (unsigned int)*v46, &v343);\n        ++v46;\n        --v45;\n      }\n      while ( v45 );\n    }\n    v47 = &v334;\n    sub_4409C0((unsigned int)v21, &v334, v22, &v343, v303);\n    sub_440E40((unsigned int)v21, &v343);\n    v48 = dword_98A7F4;\n    if ( dword_98A7F4 <= dword_98A76C == 1 )\n    {\n      v49 = v22;\n      do\n      {\n        sub_441100((unsigned int)v21, *(unsigned int *)v47, &v343);\n        v47 = (__int128 *)((char *)v47 + 4);\n        --v49;\n      }\n      while ( v49 );\n      v48 = dword_98A7F4;\n    }\n    v323 = v22;\n    v309 = v21;\n    if ( v48 > dword_98A75C )\n    {\nLABEL_102:\n      v63 = sub_4402B0((unsigned int)v21, &v343, v303, \"defend2\", 0LL);\n      v64 = v351;\n      if ( v351 <= 0 )\n      {\n        v314 = 0LL;\n        v326 = 0;\n        v330 = 0;\n      }\n      else\n      {\n        v65 = 0LL;\n        v330 = 0;\n        v66 = 0LL;\n        v326 = v63;\n        do\n        {\n          v67 = *((_DWORD *)&v343 + v65);\n          v68 = 1;\n          if ( (unsigned int)sub_407EA0(\n                               *((_DWORD *)&v343 + v65),\n                               v303,\n                               \"defend2-A\",\n                               v21,\n                               v321,\n                               v307,\n                               (unsigned int *)v353,\n                               &v335,\n                               &v338,\n                               (dword_98A7F4 <= dword_98A784) & (unsigned __int8)((_DWORD)v66 == 0)) )\n          {\n            v69 = v21;\n            v70 = v66;\n            v71 = v338;\n            v72 = sub_43B170(v69, 0LL, v353[0], v335);\n            if ( v71 )\n            {\n              v73 = v72 == 5;\n              v66 = v70;\n              if ( !v73 )\n                v66 = 1LL;\n              v74 = v330;\n              if ( !v73 )\n                v74 = v67;\n              v330 = v74;\n              sub_407030();\n            }\n            else\n            {\n              sub_407030();\n              if ( v72 )\n              {\n                v75 = 5 - v72;\n                v66 = v70;\n                v78 = __OFSUB__(v75, (_DWORD)v70);\n                v76 = v75 == (_DWORD)v70;\n                v77 = v75 - (signed int)v70 < 0;\n                if ( v75 >= (signed int)v70 )\n                  v66 = (unsigned int)v75;\n                v79 = v330;\n                if ( !((unsigned __int8)(v77 ^ v78) | v76) )\n                  v79 = v67;\n                v330 = v79;\n              }\n              else\n              {\n                if ( qword_88C238 )\n                {\n                  sub_40F0A0((__int64)\"defend2\", v309, v67, 5u, (__int64)\"defense effective - A\");\n                  v326 = v67;\n                  goto LABEL_218;\n                }\n                v68 = 0;\n                v326 = v67;\n                v66 = v70;\n              }\n            }\n            LODWORD(v21) = v309;\n          }\n          if ( !v68 )\n            goto LABEL_218;\n          ++v65;\n          v64 = v351;\n        }\n        while ( v65 < v351 );\n        v314 = v66;\n      }\n      DWORD2(v334) = 3 - v303;\n      v80 = 0LL;\n      do\n      {\n        if ( (unsigned int)sub_40AD70(*((_DWORD *)&v334 + v80), SDWORD2(v334)) )\n        {\n          v81 = sub_4093D0(*((_DWORD *)&v334 + v80), v303, 6, &v339);\n          if ( (signed int)v81 > 0 )\n          {\n            v82 = v81;\n            v83 = 0LL;\n            do\n            {\n              v84 = *((_DWORD *)&v339 + v83);\n              if ( !(unsigned int)sub_40AD70(*((_DWORD *)&v339 + v83), v303) || (unsigned int)sub_40B4C0(v84, v303) )\n              {\n                for ( i = 0LL; i < v351; ++i )\n                {\n                  if ( *((_DWORD *)&v343 + i) == v84 )\n                    break;\n                }\n                if ( (_DWORD)i == v351 && v351 <= 49 )\n                {\n                  *((_DWORD *)&v343 + v351) = v84;\n                  *((_DWORD *)&v347 + v351++) = 0;\n                }\n              }\n              ++v83;\n            }\n            while ( v83 != v82 );\n          }\n        }\n        v86 = sub_4093D0(*((_DWORD *)&v334 + v80), SDWORD2(v334), 3, &v339);\n        if ( (unsigned int)(v86 - 1) <= 1 )\n        {\n          v87 = v86;\n          v88 = 0LL;\n          do\n          {\n            v89 = *((_DWORD *)&v339 + v88);\n            if ( !(unsigned int)sub_40AD70(*((_DWORD *)&v339 + v88), v303) )\n            {\n              for ( j = 0LL; j < v351; ++j )\n              {\n                if ( *((_DWORD *)&v343 + j) == v89 )\n                  break;\n              }\n              if ( (_DWORD)j == v351 && v351 <= 49 )\n              {\n                *((_DWORD *)&v343 + v351) = v89;\n                *((_DWORD *)&v347 + v351++) = 0;\n              }\n            }\n            ++v88;\n          }\n          while ( v88 < v87 );\n        }\n        ++v80;\n      }\n      while ( v80 != v323 );\n      sub_4402B0(v309, &v343, DWORD2(v334), \"defend2\", (unsigned int)v64);\n      v91 = v351;\n      if ( v64 < v351 )\n      {\n        v92 = v64;\n        v93 = v307;\n        v94 = v314;\n        while ( 1 )\n        {\n          v95 = *((_DWORD *)&v343 + v92);\n          if ( (unsigned int)sub_407EA0(\n                               *((_DWORD *)&v343 + v92),\n                               v303,\n                               \"defend2-B\",\n                               v309,\n                               v321,\n                               v93,\n                               (unsigned int *)v353,\n                               &v335,\n                               &v338,\n                               (dword_98A7F4 <= dword_98A784) & (unsigned __int8)((_DWORD)v94 == 0)) )\n          {\n            v315 = v94;\n            v96 = v338;\n            v97 = sub_43B170(v309, 0LL, v353[0], v335);\n            if ( v96 )\n            {\n              v98 = v97 == 5;\n              v94 = v315;\n              if ( !v98 )\n                v94 = 1LL;\n              v99 = v330;\n              if ( !v98 )\n                v99 = v95;\n              v330 = v99;\n              sub_407030();\n            }\n            else\n            {\n              sub_407030();\n              if ( !v97 )\n              {\n                if ( qword_88C238 )\n                  sub_40F0A0((__int64)\"defend2\", v309, v95, 5u, (__int64)\"defense effective - B\");\n                v326 = v95;\nLABEL_218:\n                LODWORD(v7) = 5;\nLABEL_219:\n                v126 = v322;\n                goto LABEL_432;\n              }\n              v100 = 5 - v97;\n              v94 = v315;\n              v103 = __OFSUB__(v100, (_DWORD)v315);\n              v101 = v100 == (_DWORD)v315;\n              v102 = v100 - (signed int)v315 < 0;\n              if ( v100 >= (signed int)v315 )\n                v94 = (unsigned int)v100;\n              v104 = v330;\n              if ( !((unsigned __int8)(v102 ^ v103) | v101) )\n                v104 = v95;\n              v330 = v104;\n            }\n            v93 = v307;\n          }\n          ++v92;\n          v91 = v351;\n          if ( v92 >= v351 )\n            goto LABEL_171;\n        }\n      }\n      v93 = v307;\n      v94 = v314;\nLABEL_171:\n      v105 = v94;\n      v106 = dword_98A7F4;\n      v107 = dword_98A7F8;\n      if ( dword_98A7F4 <= dword_98A7F8 )\n      {\n        sub_4411E0(v309, &v343);\n        v106 = dword_98A7F4;\n        v107 = dword_98A7F8;\n      }\n      if ( v106 <= v107 )\n      {\n        sub_44DF50(v309, &v335, v353, 3LL);\n        if ( (signed int)v335 > 0 )\n        {\n          v108 = 0LL;\n          do\n          {\n            v109 = v353[v108];\n            if ( !(unsigned int)sub_40B0A0(v353[v108], v309) && (signed int)sub_4093D0(v109, v303, 2, 0LL) >= 2 )\n            {\n              for ( k = 0LL; k < v351; ++k )\n              {\n                if ( *((_DWORD *)&v343 + k) == v109 )\n                  break;\n              }\n              if ( (_DWORD)k == v351 && v351 <= 49 )\n              {\n                *((_DWORD *)&v343 + v351) = v109;\n                *((_DWORD *)&v347 + v351++) = 0;\n              }\n            }\n            ++v108;\n          }\n          while ( v108 < (signed int)v335 );\n          if ( (signed int)v335 > 0 )\n          {\n            v111 = 0LL;\n            do\n            {\n              v112 = v353[v111];\n              if ( !(unsigned int)sub_40B0A0(v353[v111], v309) )\n                sub_441100(v309, v112, &v343);\n              ++v111;\n            }\n            while ( v111 < (signed int)v335 );\n          }\n        }\n        v106 = dword_98A7F4;\n      }\n      v113 = v351;\n      sub_441D60(v309, &v343, v106 > dword_98A75C);\n      if ( (signed int)v113 < v351 )\n      {\n        do\n          *((_DWORD *)&v347 + v113++) = -2;\n        while ( v113 < v351 );\n      }\n      v114 = dword_98A7F4;\n      v7 = v105;\n      if ( dword_98A7F4 <= dword_98A75C )\n      {\n        sub_4412E0(v309, &v334, &v343);\n        v114 = dword_98A7F4;\n      }\n      if ( v114 <= dword_98A758 )\n        sub_441610(v309, &v343);\n      sub_4402B0(v309, &v343, DWORD2(v334), \"defend2\", (unsigned int)v91);\n      if ( v91 < v351 )\n      {\n        v115 = v91;\n        do\n        {\n          v116 = *((_DWORD *)&v343 + v115);\n          if ( (unsigned int)sub_407EA0(\n                               *((_DWORD *)&v343 + v115),\n                               v303,\n                               \"defend2-E\",\n                               v309,\n                               v321,\n                               v93,\n                               (unsigned int *)v353,\n                               &v335,\n                               &v338,\n                               (dword_98A7F4 <= dword_98A784) & (unsigned __int8)((_DWORD)v7 == 0)) )\n          {\n            v316 = v7;\n            v117 = v338;\n            v118 = sub_43B170(v309, 0LL, v353[0], v335);\n            if ( v117 )\n            {\n              v119 = v118 == 5;\n              v7 = v316;\n              if ( !v119 )\n                v7 = 1LL;\n              v120 = v330;\n              if ( !v119 )\n                v120 = v116;\n              v330 = v120;\n              sub_407030();\n            }\n            else\n            {\n              sub_407030();\n              if ( !v118 )\n              {\n                if ( qword_88C238 )\n                  sub_40F0A0((__int64)\"defend2\", v309, v116, 5u, (__int64)\"defense effective - A\");\n                v326 = v116;\n                goto LABEL_218;\n              }\n              v121 = 5 - v118;\n              v7 = v316;\n              v124 = __OFSUB__(v121, (_DWORD)v316);\n              v122 = v121 == (_DWORD)v316;\n              v123 = v121 - (signed int)v316 < 0;\n              if ( v121 >= (signed int)v316 )\n                v7 = (unsigned int)v121;\n              v125 = v330;\n              if ( !((unsigned __int8)(v123 ^ v124) | v122) )\n                v125 = v116;\n              v330 = v125;\n            }\n            v93 = v307;\n          }\n          ++v115;\n        }\n        while ( v115 < v351 );\n      }\n      if ( !(_DWORD)v7 )\n      {\n        LODWORD(v7) = 0;\n        if ( qword_88C238 )\n          sub_40F0A0((__int64)\"defend2\", v309, 0, 0, 0LL);\n        goto LABEL_219;\n      }\n      if ( qword_88C238 )\n      {\n        sub_40F0A0((__int64)\"defend2\", v309, v330, v7, (__int64)\"saved move\");\n        v127 = v330;\n        goto LABEL_539;\n      }\n      goto LABEL_538;\n    }\n    v50 = (unsigned __int8)byte_98A1B0[v21];\n    v51 = 0LL;\n    while ( 1 )\n    {\n      v325 = v51;\n      DWORD2(v334) = *((_DWORD *)&v334 + v51);\n      if ( (unsigned int)sub_407C30(SDWORD2(v334), 3 - v50) )\n        break;\nLABEL_101:\n      v51 = v325 + 1;\n      if ( v325 == 1 )\n        goto LABEL_102;\n    }\n    v52 = SDWORD2(v334);\n    v53 = 0LL;\n    v331 = SDWORD2(v334);\n    while ( 1 )\n    {\n      v54 = dword_5641B0[v53];\n      if ( byte_98A1B0[v54 + v52] == (_BYTE)v50 && !(unsigned int)sub_40B5B0((signed int)v52 + (signed int)v54, v21) )\n      {\n        v55 = DWORD2(v334) + dword_5641B0[v53];\n        v56 = sub_408410(v55, 4, (unsigned __int64)&v335);\n        if ( v56 > 0 )\n        {\n          v57 = v56;\n          v58 = 0LL;\n          do\n          {\n            if ( !(unsigned int)sub_40AD70(*((_DWORD *)&v335 + v58), v50) )\n            {\n              if ( v351 <= 0LL )\n              {\n                LODWORD(v59) = 0;\n                if ( v351 <= 49 )\n                  goto LABEL_92;\n              }\n              else\n              {\n                v59 = 0LL;\n                do\n                {\n                  if ( *((_DWORD *)&v343 + v59) == *((_DWORD *)&v335 + v58) )\n                    break;\n                  ++v59;\n                }\n                while ( v59 < v351 );\n                if ( v351 <= 49 )\n                {\nLABEL_92:\n                  if ( (_DWORD)v59 == v351 )\n                  {\n                    *((_DWORD *)&v343 + v351) = *((_DWORD *)&v335 + v58);\n                    *((_DWORD *)&v347 + v351++) = 0;\n                  }\n                  goto LABEL_94;\n                }\n              }\n            }\nLABEL_94:\n            ++v58;\n          }\n          while ( (signed __int64)v58 < v57 && v58 < 4 );\n        }\n        sub_4401B0(v55, &v343);\n        v60 = sub_40A880(v55, (__int64)v353, 2);\n        if ( (signed int)v60 > 0 )\n        {\n          v61 = v60;\n          v62 = v353;\n          do\n          {\n            sub_441940(v55, (unsigned int)*v62, &v343);\n            ++v62;\n            --v61;\n          }\n          while ( v61 );\n        }\n        sub_440E40(v55, &v343);\n        LODWORD(v21) = v309;\n        v52 = v331;\n      }\n      if ( ++v53 == 4 )\n        goto LABEL_101;\n    }\n  }\n  if ( v6 == 1 )\n  {\n    ++dword_87BE90;\n    v12 = v337;\n    v13 = (unsigned __int8)byte_98A1B0[v337];\n    if ( (unsigned __int8)(byte_98A1B0[v337] - 1) >= 2u )\n    {\n      v14 = (1717986919LL * v337 >> 35) + ((unsigned __int64)(1717986919LL * v337) >> 63);\n      sub_4340E0((__int64)\"engine/reading.c\", 0x435u, (__int64)\"IS_STONE(board[str])\", v14 - 1, v337 - 20 * v14 - 1);\n    }\n    if ( (unsigned int)sub_4083A0(v337) != 1 )\n    {\n      v15 = (1717986919 * v12 >> 35) + ((unsigned __int64)(1717986919 * v12) >> 63);\n      sub_4340E0((__int64)\"engine/reading.c\", 0x436u, (__int64)\"countlib(str) == 1\", v15 - 1, v12 - 20 * v15 - 1);\n    }\n    if ( (unsigned int)sub_408410(v12, 1, (unsigned __int64)&v343) != 1 )\n    {\n      v16 = (1717986919 * v12 >> 35) + ((unsigned __int64)(1717986919 * v12) >> 63);\n      sub_4340E0((__int64)\"engine/reading.c\", 0x43Au, (__int64)\"liberties == 1\", v16 - 1, v12 - 20 * v16 - 1);\n    }\n    v353[0] = v343;\n    v354[0] = 0;\n    v355 = 1;\n    sub_4401B0((unsigned int)v12, v353);\n    v17 = v343;\n    v18 = (unsigned __int8)byte_98A1B0[v12];\n    if ( (unsigned int)sub_4083A0(v12) != 1 )\n    {\n      v19 = (1717986919 * v12 >> 35) + ((unsigned __int64)(1717986919 * v12) >> 63);\n      sub_4340E0((__int64)\"engine/reading.c\", 0x118Au, (__int64)\"countlib(str) == 1\", v19 - 1, v12 - 20 * v19 - 1);\n    }\n    if ( dword_98A7F4 <= dword_98A75C\n      && (unsigned int)sub_40A5F0(v12) == 1\n      && (unsigned int)sub_4093D0(v17, 3 - v18, 2, &v334) == 1\n      && !(unsigned int)sub_40AD70(v334, v18) )\n    {\n      if ( v355 <= 0LL )\n      {\n        LODWORD(v20) = 0;\n      }\n      else\n      {\n        v20 = 0LL;\n        do\n        {\n          if ( v353[v20] == (_DWORD)v334 )\n            break;\n          ++v20;\n        }\n        while ( v20 < v355 );\n      }\n      if ( v355 <= 49 && (_DWORD)v20 == v355 )\n      {\n        v353[v355] = v334;\n        v354[v355++] = 0;\n      }\n    }\n    LODWORD(v7) = 0;\n    sub_4402B0((unsigned int)v12, v353, v13, \"defend1\", 0LL);\n    v313 = v355;\n    DWORD2(v334) = v13;\n    if ( v355 > 0LL )\n    {\n      v279 = 0LL;\n      v306 = 0;\n      v7 = 0LL;\n      while ( 1 )\n      {\n        v281 = v353[v279];\n        v280 = 1;\n        if ( !(unsigned int)sub_407EA0(\n                              v353[v279],\n                              v13,\n                              \"defend1-A\",\n                              v12,\n                              v321,\n                              v307,\n                              (unsigned int *)&v339,\n                              &v335,\n                              &v334,\n                              (dword_98A7F4 <= dword_98A784) & (unsigned __int8)((_DWORD)v7 == 0)) )\n          goto LABEL_511;\n        v319 = v7;\n        v282 = v12;\n        v283 = v334;\n        v284 = sub_43B170(v282, 0LL, v339, v335);\n        if ( v283 )\n          break;\n        sub_407030();\n        if ( v284 )\n        {\n          v287 = 5 - v284;\n          v7 = v319;\n          v290 = __OFSUB__(v287, (_DWORD)v319);\n          v288 = v287 == (_DWORD)v319;\n          v289 = v287 - (signed int)v319 < 0;\n          if ( v287 >= (signed int)v319 )\n            v7 = (unsigned int)v287;\n          v291 = v306;\n          if ( !((unsigned __int8)(v289 ^ v290) | v288) )\n            v291 = v281;\n          v306 = v291;\n          goto LABEL_509;\n        }\n        v12 = v282;\n        if ( qword_88C238 )\n          sub_40F0A0((__int64)\"defend1\", v282, v281, 5u, (__int64)\"defense effective - A\");\n        v280 = 0;\n        v330 = v281;\n        v126 = a2;\n        v7 = v319;\nLABEL_510:\n        v13 = DWORD2(v334);\n        if ( !v280 )\n        {\n          LODWORD(v7) = 5;\n          v127 = v330;\n          goto LABEL_540;\n        }\nLABEL_511:\n        if ( ++v279 >= v313 )\n          goto LABEL_514;\n      }\n      v285 = v284 == 5;\n      v7 = v319;\n      if ( !v285 )\n        v7 = 1LL;\n      v286 = v306;\n      if ( !v285 )\n        v286 = v281;\n      v306 = v286;\n      sub_407030();\nLABEL_509:\n      v126 = a2;\n      v12 = v282;\n      goto LABEL_510;\n    }\n    v306 = 0;\nLABEL_514:\n    if ( dword_98A7F4 <= dword_98A75C\n      && (unsigned int)sub_40A5F0(v12) == 1\n      && (v329 = 3 - v13, (unsigned int)sub_408130(v343, 3 - v13, 0LL)) )\n    {\n      v320 = v12;\n      v292 = v7;\n      v293 = sub_4093D0(v343, v13, 6, &v339);\n      if ( (unsigned int)(v293 - 1) <= 4 )\n      {\n        v294 = 0LL;\n        v295 = v321;\n        do\n        {\n          v296 = *((_DWORD *)&v339 + v294);\n          if ( v293 == 1 || !(unsigned int)sub_40AD70(v296, v329) )\n          {\n            v327 = v296;\n            if ( (unsigned int)sub_406880(v296, v13, \"defend1-C\", v320, v295, v307) )\n            {\n              v297 = sub_43B170(v320, 0LL, v295, v307);\n              sub_407030();\n              if ( !v297 )\n              {\n                v127 = v327;\n                if ( qword_88C238 )\n                {\n                  v277 = \"defend1\";\n                  v278 = \"backfilling\";\n                  v276 = v320;\nLABEL_550:\n                  sub_40F0A0((__int64)v277, v276, v127, 5u, (__int64)v278);\n                }\n                goto LABEL_551;\n              }\n              v300 = __OFSUB__(5 - v297, v292);\n              v298 = 5 - v297 == v292;\n              v299 = 5 - v297 - v292 < 0;\n              if ( 5 - v297 >= v292 )\n                v292 = 5 - v297;\n              v301 = v306;\n              if ( !((unsigned __int8)(v299 ^ v300) | v298) )\n                v301 = v327;\n              v306 = v301;\n              v295 = v321;\n            }\n            v13 = DWORD2(v334);\n          }\n          ++v294;\n        }\n        while ( v294 < v293 );\n      }\n      v127 = v306;\n      LODWORD(v7) = v292;\n      LODWORD(v12) = v320;\n    }\n    else\n    {\n      v127 = v306;\n    }\n    if ( (_DWORD)v7 )\n    {\n      if ( qword_88C238 )\n        sub_40F0A0((__int64)\"defend1\", v12, v127, v7, (__int64)\"saved move\");\n      goto LABEL_539;\n    }\n    LODWORD(v7) = 0;\n    if ( qword_88C238 )\n      sub_40F0A0((__int64)\"defend1\", v12, 0, 0, 0LL);\nLABEL_538:\n    v127 = v330;\n    goto LABEL_539;\n  }\n  if ( !v9 )\n  {\n    if ( v6 != 4 )\n      goto LABEL_433;\n    ++dword_87BE90;\n    v31 = v337;\n    v308 = (unsigned __int8)byte_98A1B0[v337];\n    if ( (unsigned __int8)(v308 - 1) >= 2u )\n      sub_4340E0(\n        (__int64)\"engine/reading.c\",\n        0x64Bu,\n        (__int64)\"((board[str]) == 1 || (board[str]) == 2)\",\n        0xFFFFFFFF,\n        0xFFFFFFFF);\n    if ( (unsigned int)sub_4083A0(v337) != 4 )\n      sub_4340E0((__int64)\"engine/reading.c\", 0x64Cu, (__int64)\"countlib(str) == 4\", 0xFFFFFFFF, 0xFFFFFFFF);\n    v32 = sub_408410(v31, 4, (unsigned __int64)&v335);\n    if ( v32 != 4 )\n    {\n      v33 = (1717986919LL * (signed int)v31 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)v31) >> 63);\n      sub_4340E0((__int64)\"engine/reading.c\", 0x64Fu, (__int64)\"liberties == 4\", v33 - 1, v31 - 20 * v33 - 1);\n    }\n    v128 = 4LL;\n    v129 = 0LL;\n    v258 = 4 * v129;\n    v259 = -1LL;\n    do\n    {\n      *(__int128 *)((char *)&v343 + v258) = *(__int128 *)((char *)&v335 + v258);\n      *(__int128 *)((char *)&v347 + v258) = 0LL;\n      v258 += 16LL;\n      ++v259;\n    }\n    while ( v259 );\n    if ( 4LL != v32 )\n    {\n      do\n      {\n        *((_DWORD *)&v343 + v128) = *((_DWORD *)&v335 + v128);\n        *((_DWORD *)&v347 + v128++) = 0;\n      }\n      while ( v32 != v128 );\n    }\n    v351 = v32;\n    sub_4401B0(v31, &v343);\n    v260 = sub_40A880(v31, (__int64)v353, 2);\n    if ( (signed int)v260 > 0 )\n    {\n      v261 = v260;\n      v262 = v353;\n      do\n      {\n        sub_441940(v31, (unsigned int)*v262, &v343);\n        ++v262;\n        --v261;\n      }\n      while ( v261 );\n    }\n    if ( dword_98A7F4 <= dword_98A75C )\n    {\n      v263 = v351;\n      sub_441D60(v31, &v343, 0LL);\n      if ( (signed int)v263 < v351 )\n      {\n        do\n          *((_DWORD *)&v347 + v263++) = -2;\n        while ( v263 < v351 );\n      }\n    }\n    sub_4402B0(v31, &v343, v308, \"defend4\", 0LL);\n    *((_QWORD *)&v334 + 1) = v351;\n    if ( v351 <= 0LL )\n    {\n      if ( !qword_88C238 )\n        goto LABEL_433;\n    }\n    else\n    {\n      v264 = 0LL;\n      v305 = 0;\n      v265 = 0;\n      v226 = v322;\n      v266 = v321;\n      while ( !v264 || dword_98A7F4 < dword_98A768 )\n      {\n        v267 = *((_DWORD *)&v343 + v264);\n        if ( (unsigned int)sub_407EA0(\n                             *((_DWORD *)&v343 + v264),\n                             v308,\n                             \"defend4-A\",\n                             v31,\n                             v266,\n                             v307,\n                             (unsigned int *)v353,\n                             &v339,\n                             &v334,\n                             (dword_98A7F4 <= dword_98A784) & (unsigned __int8)(v265 == 0)) )\n        {\n          v268 = v267;\n          v269 = v334;\n          v270 = sub_43B170(v31, 0LL, v353[0], v339);\n          if ( v269 )\n          {\n            if ( v270 != 5 )\n              v265 = 1;\n            v271 = v305;\n            if ( v270 != 5 )\n              v271 = v268;\n            v305 = v271;\n            sub_407030();\n          }\n          else\n          {\n            sub_407030();\n            if ( !v270 )\n            {\n              v127 = v268;\n              if ( qword_88C238 )\n              {\n                v277 = \"defend4\";\n                v278 = \"defense effective - A\";\n                v276 = v31;\n                goto LABEL_550;\n              }\nLABEL_551:\n              LODWORD(v7) = 5;\nLABEL_539:\n              v126 = v322;\n              if ( !(_DWORD)v7 )\n                goto LABEL_433;\nLABEL_540:\n              if ( v126 )\n                *v126 = v127;\n              v250 = v341;\n              if ( (_QWORD)v341 )\n              {\n                v251 = (*(_DWORD *)(v341 + 4) & 0x3FF) + (((v7 & 0xF) << 24) | (v127 << 10) & 0xFFC00) + 0x20000000;\nLABEL_544:\n                *(_DWORD *)(v250 + 4) = v251;\n              }\n              return (unsigned int)v7;\n            }\n            v274 = __OFSUB__(5 - v270, v265);\n            v272 = 5 - v270 == v265;\n            v273 = 5 - v270 - v265 < 0;\n            if ( 5 - v270 >= v265 )\n              v265 = 5 - v270;\n            v275 = v305;\n            if ( !((unsigned __int8)(v273 ^ v274) | v272) )\n              v275 = v268;\n            v305 = v275;\n          }\n          v226 = v322;\n          v266 = v321;\n        }\n        if ( ++v264 >= *((_QWORD *)&v334 + 1) )\n          break;\n      }\n      LODWORD(v7) = v265;\n      if ( v265 )\n      {\n        if ( qword_88C238 )\n        {\n          v247 = \"defend4\";\n          v248 = v31;\n          v249 = v305;\n          goto LABEL_473;\n        }\n        v252 = v305;\n        goto LABEL_482;\n      }\n      if ( !qword_88C238 )\n        goto LABEL_433;\n    }\n    sub_40F0A0((__int64)\"defend4\", v31, 0, 0, 0LL);\n    goto LABEL_433;\n  }\n  ++dword_87BE90;\n  v26 = v337;\n  v328 = (unsigned __int8)byte_98A1B0[v337];\n  if ( (unsigned __int8)(v328 - 1) >= 2u )\n    sub_4340E0(\n      (__int64)\"engine/reading.c\",\n      0x580u,\n      (__int64)\"((board[str]) == 1 || (board[str]) == 2)\",\n      0xFFFFFFFF,\n      0xFFFFFFFF);\n  if ( (unsigned int)sub_4083A0(v337) != 3 )\n    sub_4340E0((__int64)\"engine/reading.c\", 0x581u, (__int64)\"countlib(str) == 3\", 0xFFFFFFFF, 0xFFFFFFFF);\n  v27 = sub_408410(v26, 3, (unsigned __int64)&v339);\n  if ( v27 != 3 )\n  {\n    v28 = (1717986919 * v26 >> 35) + ((unsigned __int64)(1717986919 * v26) >> 63);\n    sub_4340E0((__int64)\"engine/reading.c\", 0x584u, (__int64)\"liberties == 3\", v28 - 1, v26 - 20 * v28 - 1);\n  }\n  v30 = 0LL;\n  do\n  {\n    LODWORD(v138) = *((_DWORD *)&v339 + v30);\n    *((_DWORD *)&v343 + v30) = v138;\n    *((_DWORD *)&v347 + v30++) = 0;\n  }\n  while ( v27 != v30 );\n  LOBYTE(v138) = 1;\n  DWORD2(v342) = v138;\n  v351 = v27;\n  sub_4401B0((unsigned int)v26, &v343);\n  v140 = sub_40A880(v26, (__int64)v353, 2);\n  if ( (signed int)v140 > 0 )\n  {\n    v141 = v140;\n    v142 = v353;\n    do\n    {\n      sub_441940((unsigned int)v26, (unsigned int)*v142, &v343);\n      ++v142;\n      --v141;\n    }\n    while ( v141 );\n  }\n  LODWORD(v342) = v27;\n  sub_4409C0((unsigned int)v26, &v339, v27, &v343, v328);\n  sub_440E40((unsigned int)v26, &v343);\n  v304 = v26;\n  if ( dword_98A7F4 <= dword_98A758 )\n  {\n    v143 = (unsigned __int8)byte_98A1B0[v26];\n    v144 = sub_4083A0(v26);\n    DWORD2(v334) = v144;\n    if ( v144 >= 5 )\n    {\n      v145 = (1717986919 * v26 >> 35) + ((unsigned __int64)(1717986919 * v26) >> 63);\n      sub_4340E0((__int64)\"engine/reading.c\", 0x749u, (__int64)\"num_libs <= 4\", v145 - 1, v26 - 20 * v145 - 1);\n    }\n    if ( v144 > 0 )\n    {\n      v310 = 3 - v143;\n      v317 = DWORD2(v334);\n      v146 = 0LL;\n      do\n      {\n        v332 = v146;\n        v147 = *((signed int *)&v339 + v146);\n        v148 = 0LL;\n        do\n        {\n          v149 = dword_5641B0[v148];\n          if ( byte_98A1B0[v149 + v147] == (_BYTE)v143 )\n          {\n            v150 = v147 + v149;\n            if ( (unsigned int)sub_40B5B0(v150, v26) )\n            {\n              v151 = ((_BYTE)v148 + 1) & 3;\n              v152 = dword_5641B0[v151];\n              if ( !byte_98A1B0[v152 + v147] && v310 == (unsigned __int8)byte_98A1B0[v152 + v150] )\n              {\n                v153 = sub_4083A0((signed int)v152 + (signed int)v150);\n                if ( v153 <= SDWORD2(v334) )\n                {\n                  v154 = v147 + v152;\n                  if ( v153 <= (signed int)sub_4099C0(v154, v143, v153, 0LL) )\n                  {\n                    for ( l = 0LL; l < v351; ++l )\n                    {\n                      if ( *((_DWORD *)&v343 + l) == v154 )\n                        break;\n                    }\n                    if ( v351 <= 49 && (_DWORD)l == v351 )\n                    {\n                      *((_DWORD *)&v343 + v351) = v154;\n                      *((_DWORD *)&v347 + v351++) = 0;\n                    }\n                  }\n                }\n              }\n              v156 = dword_5641B0[v151];\n              v157 = v147 - v156;\n              v26 = v304;\n              if ( !byte_98A1B0[(signed int)v147 - v156] )\n              {\n                v158 = v150 - v156;\n                if ( v310 == (unsigned __int8)byte_98A1B0[v158] )\n                {\n                  v159 = sub_4083A0(v158);\n                  if ( v159 <= SDWORD2(v334) && v159 <= (signed int)sub_4099C0(v157, v143, v159, 0LL) )\n                  {\n                    for ( m = 0LL; m < v351; ++m )\n                    {\n                      if ( *((_DWORD *)&v343 + m) == v157 )\n                        break;\n                    }\n                    if ( v351 <= 49 && (_DWORD)m == v351 )\n                    {\n                      *((_DWORD *)&v343 + v351) = v157;\n                      *((_DWORD *)&v347 + v351++) = 0;\n                    }\n                  }\n                }\n              }\n            }\n          }\n          ++v148;\n        }\n        while ( v148 != 4 );\n        v146 = v332 + 1;\n      }\n      while ( v332 + 1 != v317 );\n    }\n  }\n  v161 = 0LL;\n  sub_4402B0((unsigned int)v26, &v343, v328, \"defend3\", 0LL);\n  v162 = (unsigned int)v351;\n  if ( v351 <= 0 )\n  {\n    v324 = 0;\n  }\n  else\n  {\n    v163 = 0LL;\n    v324 = 0;\n    v161 = 0LL;\n    do\n    {\n      if ( v163 && dword_98A7F4 >= dword_98A768 )\n        break;\n      v127 = *((_DWORD *)&v343 + v163);\n      if ( (unsigned int)sub_407EA0(\n                           *((_DWORD *)&v343 + v163),\n                           v328,\n                           \"defend3-A\",\n                           v26,\n                           v321,\n                           v307,\n                           (unsigned int *)v353,\n                           &v335,\n                           &v334,\n                           (dword_98A7F4 <= dword_98A784) & (unsigned __int8)((_DWORD)v161 == 0)) )\n      {\n        v164 = v26;\n        v165 = v334;\n        v166 = sub_43B170(v164, 0LL, v353[0], v335);\n        if ( v165 )\n        {\n          if ( v166 != 5 )\n            v161 = 1LL;\n          v167 = v324;\n          if ( v166 != 5 )\n            v167 = v127;\n          v324 = v167;\n          sub_407030();\n        }\n        else\n        {\n          sub_407030();\n          if ( !v166 )\n          {\n            v276 = v304;\n            if ( qword_88C238 )\n            {\n              v277 = \"defend3\";\n              v278 = \"defense effective - A\";\n              goto LABEL_550;\n            }\n            goto LABEL_551;\n          }\n          v170 = __OFSUB__(5 - v166, (_DWORD)v161);\n          v168 = 5 - v166 == (_DWORD)v161;\n          v169 = 5 - v166 - (signed int)v161 < 0;\n          if ( 5 - v166 >= (signed int)v161 )\n            v161 = (unsigned int)(5 - v166);\n          v171 = v324;\n          if ( !((unsigned __int8)(v169 ^ v170) | v168) )\n            v171 = v127;\n          v324 = v171;\n        }\n        v26 = v304;\n      }\n      ++v163;\n      v162 = v351;\n    }\n    while ( v163 < v351 );\n  }\n  v352 = v162;\n  v318 = v161;\n  v172 = dword_98A7F4;\n  if ( dword_98A7F4 <= dword_98A75C )\n  {\n    v173 = (unsigned __int8)byte_98A1B0[v26];\n    if ( (unsigned int)sub_4083A0(v26) != 3 )\n    {\n      v174 = (1717986919 * v26 >> 35) + ((unsigned __int64)(1717986919 * v26) >> 63);\n      sub_4340E0((__int64)\"engine/reading.c\", 0x6FCu, (__int64)\"countlib(str) == 3\", v174 - 1, v26 - 20 * v174 - 1);\n    }\n    v175 = 3 - v173;\n    v176 = 0LL;\n    do\n    {\n      v311 = v176;\n      v177 = *((signed int *)&v339 + v176);\n      v178 = 0LL;\n      do\n      {\n        v179 = dword_5641B0[v178];\n        if ( byte_98A1B0[v179 + v177] == 3 )\n        {\n          v180 = v177 - v179;\n          if ( byte_98A1B0[v177 - v179] == (_BYTE)v173 )\n          {\n            if ( (unsigned int)sub_40B5B0(v180, v26) )\n            {\n              v26 = ((_BYTE)v178 + 1) & 3;\n              v181 = dword_5641B0[v26];\n              if ( v175 == (unsigned __int8)byte_98A1B0[v181 + v180]\n                && byte_98A1B0[v181 + v180 + v181] == (_BYTE)v173\n                && !byte_98A1B0[v181 + v177]\n                && !byte_98A1B0[v181 + v177 + v181] )\n              {\n                *((_QWORD *)&v334 + 1) = v181 + v177;\n                if ( (signed int)sub_4093D0(v177, v175, 4, 0LL) <= 3 )\n                {\n                  for ( n = 0LL; n < v351; ++n )\n                  {\n                    if ( *((_DWORD *)&v343 + n) == DWORD2(v334) )\n                      break;\n                  }\n                  if ( v351 <= 49 && (_DWORD)n == v351 )\n                  {\n                    *((_DWORD *)&v343 + v351) = DWORD2(v334);\n                    *((_DWORD *)&v347 + v351++) = 0;\n                  }\n                }\n              }\n              v183 = dword_5641B0[v26];\n              v184 = v180 - v183;\n              LODWORD(v26) = v304;\n              if ( v175 == (unsigned __int8)byte_98A1B0[v184] && byte_98A1B0[v184 - v183] == (_BYTE)v173 )\n              {\n                v185 = v177 - v183;\n                if ( !byte_98A1B0[(signed int)v177 - v183]\n                  && !byte_98A1B0[v185 - v183]\n                  && (signed int)sub_4093D0(v177, v175, 4, 0LL) <= 3 )\n                {\n                  for ( ii = 0LL; ii < v351; ++ii )\n                  {\n                    if ( *((_DWORD *)&v343 + ii) == v185 )\n                      break;\n                  }\n                  if ( v351 <= 49 && (_DWORD)ii == v351 )\n                  {\n                    *((_DWORD *)&v343 + v351) = v185;\n                    *((_DWORD *)&v347 + v351++) = 0;\n                  }\n                }\n              }\n            }\n          }\n        }\n        ++v178;\n      }\n      while ( v178 != 4 );\n      v176 = v311 + 1;\n    }\n    while ( v311 != 2 );\n    v172 = dword_98A7F4;\n  }\n  v187 = &v339;\n  if ( (BYTE8(v342) & (v172 <= dword_98A76C)) == 1 )\n  {\n    v188 = (unsigned int)v342;\n    do\n    {\n      sub_441100((unsigned int)v26, *(unsigned int *)v187, &v343);\n      v187 = (__int128 *)((char *)v187 + 4);\n      --v188;\n    }\n    while ( v188 );\n  }\n  if ( dword_565C78 >= 10 && dword_98A7F4 <= dword_98A758 )\n    sub_4411E0((unsigned int)v26, &v343);\n  if ( dword_98A7F4 <= dword_98A758 )\n  {\n    v189 = v351;\n    sub_441D60((unsigned int)v26, &v343, dword_98A7F4 > dword_98A75C);\n    if ( (signed int)v189 < v351 )\n    {\n      do\n        *((_DWORD *)&v347 + v189++) = -2;\n      while ( v189 < v351 );\n    }\n  }\n  HIDWORD(v341) = 3 - v328;\n  if ( dword_98A7F4 <= dword_98A75C )\n  {\n    sub_4412E0((unsigned int)v304, &v339, &v343);\n    v312 = (unsigned __int8)byte_98A1B0[v304];\n    v190 = sub_4083A0(v304);\n    if ( v190 - 3 >= 2 )\n    {\n      v191 = (1717986919 * v304 >> 35) + ((unsigned __int64)(1717986919 * v304) >> 63);\n      sub_4340E0(\n        (__int64)\"engine/reading.c\",\n        0x7E0u,\n        (__int64)\"liberties == 3 || liberties == 4\",\n        v191 - 1,\n        v304 - 20 * v191 - 1);\n    }\n    *(_QWORD *)&v342 = v190;\n    v192 = 0LL;\n    do\n    {\n      *((_QWORD *)&v342 + 1) = v192;\n      v193 = *((signed int *)&v339 + v192);\n      v194 = 0LL;\n      v333 = *((signed int *)&v339 + v192);\n      do\n      {\n        v195 = dword_5641B0[v194];\n        if ( byte_98A1B0[v193 - v195] == 3 && byte_98A1B0[v195 + v193] == (_BYTE)v312 )\n        {\n          v196 = v195 + v193;\n          *((_QWORD *)&v334 + 1) = dword_5641B0[v194];\n          v197 = sub_40B5B0(v304, (signed int)v195 + (signed int)v193);\n          v198 = *((_QWORD *)&v334 + 1);\n          v193 = v333;\n          v199 = 3 - v312;\n          if ( v197 )\n          {\n            v200 = ((_BYTE)v194 + 1) & 3;\n            v201 = 0;\n            do\n            {\n              v202 = -dword_5641B0[v200];\n              if ( v201 != 1 )\n                v202 = dword_5641B0[v200];\n              if ( v199 == (unsigned __int8)byte_98A1B0[v202 + v196] && !byte_98A1B0[v202 + v193] )\n              {\n                v203 = v202 + v196;\n                if ( !byte_98A1B0[v203 + v198] && !byte_98A1B0[v202 + v193 + v202] && !byte_98A1B0[v203 + v202] )\n                {\n                  v204 = v203 + v202;\n                  if ( byte_98A1B0[v204 + v198] == (_BYTE)v312 )\n                  {\n                    v205 = v198 + v203;\n                    if ( !(unsigned int)sub_40AD70(v205, v312) )\n                    {\n                      for ( jj = 0LL; jj < v351; ++jj )\n                      {\n                        if ( *((_DWORD *)&v343 + jj) == v205 )\n                          break;\n                      }\n                      if ( v351 <= 49 && (_DWORD)jj == v351 )\n                      {\n                        *((_DWORD *)&v343 + v351) = v205;\n                        *((_DWORD *)&v347 + v351++) = 0;\n                      }\n                    }\n                    v207 = sub_40AD70(v204, v312);\n                    v199 = 3 - v312;\n                    v193 = v333;\n                    v198 = *((_QWORD *)&v334 + 1);\n                    if ( !v207 )\n                    {\n                      for ( kk = 0LL; kk < v351; ++kk )\n                      {\n                        if ( *((_DWORD *)&v343 + kk) == (_DWORD)v204 )\n                          break;\n                      }\n                      if ( v351 <= 49 && (_DWORD)kk == v351 )\n                      {\n                        *((_DWORD *)&v343 + v351) = v204;\n                        *((_DWORD *)&v347 + v351++) = 0;\n                      }\n                    }\n                  }\n                }\n              }\n              ++v201;\n            }\n            while ( v201 != 2 );\n          }\n        }\n        ++v194;\n      }\n      while ( v194 != 4 );\n      v192 = *((_QWORD *)&v342 + 1) + 1LL;\n    }\n    while ( *((_QWORD *)&v342 + 1) + 1LL != (_QWORD)v342 );\n  }\n  v209 = v304;\n  LODWORD(v210) = v352;\n  v211 = sub_4402B0((unsigned int)v304, &v343, HIDWORD(v341), \"defend3\", (unsigned int)v352);\n  v212 = v351;\n  if ( (signed int)v210 >= v351 )\n  {\n    v326 = v211;\n    v226 = v322;\nLABEL_386:\n    v227 = v321;\n    if ( dword_565C78 >= 10 && dword_98A7F4 <= dword_98A758 )\n    {\n      sub_44DF50(v209, &v335, v353, 3LL);\n      if ( (signed int)v335 > 0 )\n      {\n        v228 = 0LL;\n        do\n        {\n          v229 = v353[v228];\n          if ( !(unsigned int)sub_40B0A0(v353[v228], v209) && (signed int)sub_4093D0(v229, v328, 2, 0LL) >= 2 )\n          {\n            for ( ll = 0LL; ll < v351; ++ll )\n            {\n              if ( *((_DWORD *)&v343 + ll) == v229 )\n                break;\n            }\n            if ( (_DWORD)ll == v351 && v351 <= 49 )\n            {\n              *((_DWORD *)&v343 + v351) = v229;\n              *((_DWORD *)&v347 + v351++) = 0;\n            }\n          }\n          ++v228;\n        }\n        while ( v228 < (signed int)v335 );\n        if ( (signed int)v335 > 0 )\n        {\n          v231 = 0LL;\n          do\n          {\n            v232 = v353[v231];\n            if ( !(unsigned int)sub_40B0A0(v353[v231], v209) )\n              sub_441100(v209, v232, &v343);\n            ++v231;\n          }\n          while ( v231 < (signed int)v335 );\n        }\n      }\n      v226 = v322;\n      v227 = v321;\n    }\n    if ( dword_98A7F4 <= dword_98A758 )\n      sub_441610(v209, &v343);\n    sub_4402B0(v209, &v343, HIDWORD(v341), \"defend3\", (unsigned int)v212);\n    if ( v212 < v351 )\n    {\n      v233 = v212;\n      do\n      {\n        v234 = *((_DWORD *)&v343 + v233);\n        v235 = sub_407EA0(\n                 *((_DWORD *)&v343 + v233),\n                 v328,\n                 \"defend3-E\",\n                 v209,\n                 v227,\n                 v307,\n                 (unsigned int *)v353,\n                 &v335,\n                 &v334,\n                 (dword_98A7F4 <= dword_98A784) & (unsigned __int8)((_DWORD)v318 == 0));\n        v236 = v209;\n        v237 = 1;\n        if ( v235 )\n        {\n          v238 = v334;\n          v239 = sub_43B170(v236, 0LL, v353[0], v335);\n          if ( v238 )\n          {\n            v240 = v318;\n            if ( v239 != 5 )\n              v240 = 1LL;\n            v318 = v240;\n            v241 = v324;\n            if ( v239 != 5 )\n              v241 = v234;\n            v324 = v241;\n            sub_407030();\n          }\n          else\n          {\n            sub_407030();\n            if ( v239 )\n            {\n              v242 = v318;\n              v245 = __OFSUB__(5 - v239, (_DWORD)v318);\n              v243 = 5 - v239 == (_DWORD)v318;\n              v244 = 5 - v239 - (signed int)v318 < 0;\n              if ( 5 - v239 >= (signed int)v318 )\n                v242 = (unsigned int)(5 - v239);\n              v318 = v242;\n              v246 = v324;\n              if ( !((unsigned __int8)(v244 ^ v245) | v243) )\n                v246 = v234;\n              v324 = v246;\n            }\n            else\n            {\n              if ( qword_88C238 )\n                sub_40F0A0((__int64)\"defend3\", v304, v234, 5u, (__int64)\"defense effective - A\");\n              v237 = 0;\n              v326 = v234;\n            }\n          }\n          v126 = v322;\n          v227 = v321;\n          if ( !v237 )\n            goto LABEL_431;\n        }\n        else\n        {\n          v126 = v226;\n        }\n        v226 = v126;\n        ++v233;\n        v209 = v304;\n      }\n      while ( v233 < v351 );\n    }\n    LODWORD(v7) = v318;\n    if ( !(_DWORD)v318 )\n    {\n      LODWORD(v7) = 0;\n      if ( qword_88C238 )\n        sub_40F0A0((__int64)\"defend3\", v209, 0, 0, 0LL);\n      v127 = v326;\nLABEL_483:\n      v126 = v226;\n      if ( (_DWORD)v7 )\n        goto LABEL_540;\n      goto LABEL_433;\n    }\n    if ( qword_88C238 )\n    {\n      v247 = \"defend3\";\n      v248 = v209;\n      v249 = v324;\nLABEL_473:\n      sub_40F0A0((__int64)v247, v248, v249, v7, (__int64)\"saved move\");\n      v127 = v249;\n      goto LABEL_483;\n    }\n    v252 = v324;\nLABEL_482:\n    v127 = v252;\n    goto LABEL_483;\n  }\n  v210 = (signed int)v210;\n  v326 = v211;\n  v213 = v322;\n  v214 = v307;\n  while ( 1 )\n  {\n    v215 = v213;\n    v216 = *((_DWORD *)&v343 + v210);\n    if ( (unsigned int)sub_407EA0(\n                         *((_DWORD *)&v343 + v210),\n                         v328,\n                         \"defend3-E\",\n                         v304,\n                         v321,\n                         v214,\n                         (unsigned int *)v353,\n                         &v335,\n                         &v334,\n                         (dword_98A7F4 <= dword_98A784) & (unsigned __int8)((_DWORD)v318 == 0)) )\n      break;\n    v213 = v215;\nLABEL_380:\n    ++v210;\n    v212 = v351;\n    if ( v210 >= v351 )\n    {\n      v226 = v213;\n      v209 = v304;\n      goto LABEL_386;\n    }\n  }\n  v217 = v334;\n  v218 = sub_43B170(v304, 0LL, v353[0], v335);\n  if ( v217 )\n  {\n    v219 = v318;\n    if ( v218 != 5 )\n      v219 = 1LL;\n    v318 = v219;\n    v220 = v324;\n    if ( v218 != 5 )\n      v220 = v216;\n    v324 = v220;\n    sub_407030();\nLABEL_379:\n    v213 = v322;\n    v214 = v307;\n    goto LABEL_380;\n  }\n  sub_407030();\n  if ( v218 )\n  {\n    v221 = v318;\n    v224 = __OFSUB__(5 - v218, (_DWORD)v318);\n    v222 = 5 - v218 == (_DWORD)v318;\n    v223 = 5 - v218 - (signed int)v318 < 0;\n    if ( 5 - v218 >= (signed int)v318 )\n      v221 = (unsigned int)(5 - v218);\n    v318 = v221;\n    v225 = v324;\n    if ( !((unsigned __int8)(v223 ^ v224) | v222) )\n      v225 = v216;\n    v324 = v225;\n    goto LABEL_379;\n  }\n  if ( qword_88C238 )\n    sub_40F0A0((__int64)\"defend3\", v304, v216, 5u, (__int64)\"defense effective - A\");\n  v326 = v216;\n  v126 = v322;\nLABEL_431:\n  LODWORD(v7) = 5;\nLABEL_432:\n  v127 = v326;\n  if ( (_DWORD)v7 )\n    goto LABEL_540;\nLABEL_433:\n  v250 = v341;\n  LODWORD(v7) = 0;\n  if ( (_QWORD)v341 )\n  {\n    v251 = *(_DWORD *)(v341 + 4) & 0x3FF | 0x20000000;\n    goto LABEL_544;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x43b820L", 
            "funcEndAddr": "0x43e344L", 
            "funcName": "sub_43B820"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_43E350(unsigned int a1, _DWORD *a2, _DWORD *a3, signed int *a4, _DWORD *a5)\n{\n  _DWORD *v5; // r14\n  signed int *v6; // r15\n  _DWORD *v7; // r12\n  __int64 v8; // rax\n  int v9; // ebp\n  signed int v10; // eax\n  int v11; // edx\n  __int64 v12; // rax\n  bool v13; // cl\n  int v14; // edx\n  int v16; // [rsp+0h] [rbp-38h]\n  int v17; // [rsp+4h] [rbp-34h]\n\n  v5 = a5;\n  v6 = a4;\n  v7 = a3;\n  v17 = 0;\n  v16 = 0;\n  v8 = sub_43B050(a1, (unsigned int *)&v17);\n  v9 = v8;\n  if ( !(_DWORD)v8 )\n  {\n    v13 = 0;\n    v10 = 0;\n    v9 = 0;\n    goto LABEL_11;\n  }\n  v10 = sub_43B6F0(v8, a1, &v16);\n  v11 = v16;\n  if ( v10 != 5 || v16 )\n  {\nLABEL_6:\n    v13 = v9 != 0;\n    if ( v9 && v10 == 5 && !v11 )\n    {\n      v14 = (1717986919LL * (signed int)a1 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)a1) >> 63);\n      sub_4340E0(\n        (__int64)\"engine/reading.c\",\n        0x17Au,\n        (__int64)\"!(acode != 0 && dcode == WIN && dpos == NO_MOVE)\",\n        v14 - 1,\n        a1 - 20 * v14 - 1);\n    }\nLABEL_11:\n    if ( !a2 )\n      goto LABEL_13;\n    goto LABEL_12;\n  }\n  sub_458890(4LL, a1);\n  sub_458890(3LL, a1);\n  v12 = sub_43B050(a1, (unsigned int *)&v17);\n  v9 = v12;\n  if ( (_DWORD)v12 )\n  {\n    v10 = sub_43B6F0(v12, a1, &v16);\n    v11 = v16;\n    goto LABEL_6;\n  }\n  v13 = 0;\n  v10 = 5;\n  v9 = 0;\n  if ( a2 )\nLABEL_12:\n    *a2 = v9;\nLABEL_13:\n  if ( v7 )\n    *v7 = v17;\n  if ( v6 )\n    *v6 = v10;\n  if ( v5 )\n    *v5 = v16;\n  return (v10 != 0) & (unsigned __int8)v13;\n}\n", 
            "funcStartAddr": "0x43e350L", 
            "funcEndAddr": "0x43e495L", 
            "funcName": "sub_43E350"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_43E4A0(int a1, int a2)\n{\n  unsigned int v2; // er12\n  int v3; // er15\n  int v4; // edx\n  int v5; // edx\n  int v6; // ebx\n  int v7; // eax\n  unsigned int v8; // er14\n  int v9; // ebp\n  int v10; // er13\n  signed int v11; // ebx\n  signed int v12; // ebp\n  int v13; // eax\n  signed int v14; // er15\n  unsigned int v16; // [rsp+Ch] [rbp-3Ch]\n  unsigned int v17; // [rsp+10h] [rbp-38h]\n  unsigned int v18; // [rsp+14h] [rbp-34h]\n\n  v2 = a1;\n  v3 = (unsigned __int8)byte_98A1B0[a1];\n  if ( (unsigned __int8)(byte_98A1B0[a1] - 1) >= 2u )\n  {\n    v4 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0((__int64)\"engine/reading.c\", 0x1A3u, (__int64)\"IS_STONE(color)\", v4 - 1, a1 - 20 * v4 - 1);\n  }\n  if ( (_BYTE)v3 != byte_98A1B0[a2] )\n  {\n    v5 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0((__int64)\"engine/reading.c\", 0x1A4u, (__int64)\"color == board[bstr]\", v5 - 1, -20 * v5 + a2 - 1);\n  }\n  v6 = sub_4083A0(a1);\n  v7 = sub_4083A0(a2);\n  v8 = a2;\n  if ( v6 > v7 )\n    v8 = a1;\n  if ( v6 > v7 )\n    v2 = a2;\n  v9 = sub_43B050(v2, 0LL);\n  v10 = 5;\n  if ( v9 != 5 )\n  {\n    v10 = sub_43B050(v8, 0LL);\n    if ( v9 | v10 )\n    {\n      if ( v9 >= v10 )\n        v10 = v9;\n    }\n    else\n    {\n      v11 = 5;\n      v12 = 5;\n      if ( (unsigned int)sub_408410(v2, 2, (unsigned __int64)&v17) == 2 )\n      {\n        v11 = 0;\n        v16 = 3 - v3;\n        v13 = sub_406880(v17, (unsigned int)(3 - v3), \"attack_either-A\", v2, 0, 0);\n        v12 = 5;\n        v14 = 5;\n        if ( v13 && (v14 = sub_43E680(v2, v8), sub_407030(), !v14) )\n        {\n          v12 = 5;\n        }\n        else\n        {\n          if ( (unsigned int)sub_406880(v18, v16, \"attack_either-B\", v2, 0, 0) )\n          {\n            v12 = sub_43E680(v2, v8);\n            sub_407030();\n          }\n          v11 = v14;\n        }\n      }\n      if ( v11 <= v12 )\n        v12 = v11;\n      v10 = 5 - v12;\n    }\n  }\n  return (unsigned int)v10;\n}\n", 
            "funcStartAddr": "0x43e4a0L", 
            "funcEndAddr": "0x43e675L", 
            "funcName": "sub_43E4A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_43E680(signed int a1, signed int a2)\n{\n  unsigned int v2; // er13\n  int v3; // edx\n  int v4; // edx\n  signed int v5; // ebx\n  unsigned int v6; // ebp\n  int v7; // ebp\n  int v8; // er13\n  __int64 v9; // rbx\n  __int64 v10; // r14\n  unsigned int v11; // ebp\n  signed __int64 v12; // rax\n  int v14; // [rsp+0h] [rbp-568h]\n  int v15; // [rsp+4h] [rbp-564h]\n  unsigned int v16; // [rsp+8h] [rbp-560h]\n  unsigned int v17; // [rsp+Ch] [rbp-55Ch]\n  unsigned int v18; // [rsp+10h] [rbp-558h]\n  unsigned int v19; // [rsp+14h] [rbp-554h]\n  __int64 v20; // [rsp+18h] [rbp-550h]\n  __int64 v21; // [rsp+20h] [rbp-548h]\n  __int64 v22; // [rsp+28h] [rbp-540h]\n  int v23[160]; // [rsp+30h] [rbp-538h]\n  int v24[174]; // [rsp+2B0h] [rbp-2B8h]\n\n  v15 = 0;\n  v14 = 0;\n  v2 = (unsigned __int8)byte_98A1B0[a1];\n  if ( (unsigned __int8)(byte_98A1B0[a1] - 1) >= 2u )\n  {\n    v3 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0((__int64)\"engine/reading.c\", 0x1EAu, (__int64)\"IS_STONE(color)\", v3 - 1, a1 - 20 * v3 - 1);\n  }\n  if ( (_BYTE)v2 != byte_98A1B0[a2] )\n  {\n    v4 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0((__int64)\"engine/reading.c\", 0x1EBu, (__int64)\"color == board[bstr]\", v4 - 1, a2 - 20 * v4 - 1);\n  }\n  v5 = 0;\n  sub_43E350(a1, &v15, 0LL, &v14, &v17);\n  if ( v15 )\n  {\n    v5 = 1;\n    if ( !v14 )\n      return 0;\n  }\n  v20 = a2;\n  v6 = 0;\n  sub_43E350(a2, &v15, 0LL, &v14, &v16);\n  if ( !v15 )\n    return 5;\n  if ( v14 )\n  {\n    if ( !v5 || v17 == v16 )\n      return 5;\n    if ( (unsigned int)sub_406880(v17, v2, \"defend_both-A\", a1, 0, 0) )\n    {\n      if ( byte_98A1B0[v20] && !(unsigned int)sub_43B050(a2, 0LL) )\n        goto LABEL_42;\n      sub_407030();\n    }\n    if ( !(unsigned int)sub_406880(v16, v2, \"defend_both-B\", a2, 0, 0) )\n      goto LABEL_20;\n    if ( !byte_98A1B0[a1] || (unsigned int)sub_43B050(a1, 0LL) )\n    {\n      sub_407030();\nLABEL_20:\n      v18 = v2;\n      v22 = a1;\n      v7 = sub_40A7D0(a1, (__int64)v23);\n      v21 = (unsigned int)a2;\n      v8 = sub_40A7D0(a2, (__int64)v24);\n      if ( v7 > 0 )\n      {\n        v9 = v7;\n        v10 = 0LL;\n        do\n        {\n          v11 = v23[v10];\n          if ( (signed int)sub_4083A0(v23[v10]) > 4 || v11 == v17 || v11 == v16 )\n            goto LABEL_39;\n          if ( v8 <= 0 )\n          {\n            if ( !v8 )\n              goto LABEL_39;\n          }\n          else\n          {\n            v12 = 0LL;\n            do\n            {\n              if ( v24[v12] == v23[v10] )\n                break;\n              ++v12;\n            }\n            while ( v12 < v8 );\n            if ( (_DWORD)v12 == v8 )\n              goto LABEL_39;\n          }\n          if ( (unsigned int)sub_43B050(v11, &v19) && (unsigned int)sub_406880(v19, v18, \"defend_both-C\", a1, 0, 0) )\n          {\n            if ( byte_98A1B0[v22]\n              && byte_98A1B0[v20]\n              && !(unsigned int)sub_43B050(a1, 0LL)\n              && !(unsigned int)sub_43B050(v21, 0LL) )\n            {\n              goto LABEL_42;\n            }\n            sub_407030();\n          }\nLABEL_39:\n          ++v10;\n        }\n        while ( v10 < v9 );\n      }\n      return 0;\n    }\nLABEL_42:\n    sub_407030();\n    v6 = 5;\n  }\n  return v6;\n}\n", 
            "funcStartAddr": "0x43e680L", 
            "funcEndAddr": "0x43e97fL", 
            "funcName": "sub_43E680"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_43E980(unsigned int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er13\n  __int64 v4; // rbp\n  int v5; // edx\n  int v6; // edx\n  int v7; // edx\n  int v8; // er12\n  int v9; // er15\n  int v10; // ebp\n  int v11; // edx\n  int v12; // edx\n  unsigned int v13; // eax\n  unsigned int v14; // er13\n  unsigned int v15; // ebx\n  unsigned int v16; // ebp\n  unsigned int v17; // er14\n  bool v18; // zf\n  int v19; // eax\n  unsigned int v20; // er15\n  unsigned int v21; // ebx\n  signed int v22; // er15\n  signed int v24; // er13\n  unsigned int v25; // er15\n  bool v26; // sf\n  __int64 v27; // [rsp+0h] [rbp-78h]\n  __int64 v28; // [rsp+8h] [rbp-70h]\n  unsigned int v29; // [rsp+14h] [rbp-64h]\n  __int64 v30; // [rsp+18h] [rbp-60h]\n  __int64 v31; // [rsp+20h] [rbp-58h]\n  __int64 v32; // [rsp+28h] [rbp-50h]\n  __int64 v33; // [rsp+30h] [rbp-48h]\n  __int64 v34; // [rsp+38h] [rbp-40h]\n  __int64 v35; // [rsp+40h] [rbp-38h]\n\n  v3 = a3;\n  v4 = (unsigned __int8)byte_98A1B0[a1];\n  if ( (unsigned __int8)(byte_98A1B0[a1] - 1) >= 2u )\n  {\n    v5 = (1717986919LL * (signed int)a1 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)a1) >> 63);\n    sub_4340E0((__int64)\"engine/reading.c\", 0x27Au, (__int64)\"IS_STONE(color)\", v5 - 1, a1 - 20 * v5 - 1);\n  }\n  if ( (_BYTE)v4 != byte_98A1B0[a2] )\n  {\n    v6 = (1717986919LL * (signed int)a2 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)a2) >> 63);\n    sub_4340E0((__int64)\"engine/reading.c\", 0x27Bu, (__int64)\"color == board[bpos]\", v6 - 1, a2 - 20 * v6 - 1);\n  }\n  v34 = (signed int)a1;\n  v28 = v4;\n  if ( (_BYTE)v4 != byte_98A1B0[a3] )\n  {\n    v7 = (1717986919LL * (signed int)a3 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)a3) >> 63);\n    sub_4340E0((__int64)\"engine/reading.c\", 0x27Cu, (__int64)\"color == board[cpos]\", v7 - 1, -20 * v7 + v3 - 1);\n  }\n  v35 = (signed int)a3;\n  v8 = (signed int)(a1 + a3) / 2;\n  v30 = a1;\n  v9 = a2 + a1 - v8;\n  v33 = a2;\n  v31 = a3;\n  v10 = a2 + a3 - v8;\n  v27 = (unsigned int)v10;\n  if ( byte_98A1B0[v9] )\n  {\n    v11 = (1717986919LL * v9 >> 35) + ((unsigned __int64)(1717986919LL * v9) >> 63);\n    sub_4340E0((__int64)\"engine/reading.c\", 0x284u, (__int64)\"board[dpos] == EMPTY\", v11 - 1, v9 - 20 * v11 - 1);\n  }\n  v32 = a2 + a1 - v8;\n  if ( byte_98A1B0[v10] )\n  {\n    v12 = (1717986919LL * v10 >> 35) + ((unsigned __int64)(1717986919LL * v10) >> 63);\n    sub_4340E0((__int64)\"engine/reading.c\", 0x285u, (__int64)\"board[epos] == EMPTY\", v12 - 1, v10 - 20 * v12 - 1);\n  }\n  if ( !byte_98A1B0[v8] )\n    return 0;\n  if ( 3 - (_DWORD)v28 != (unsigned __int8)byte_98A1B0[v8] )\n    sub_4340E0(\n      (__int64)\"engine/reading.c\",\n      0x28Du,\n      (__int64)\"board[Fpos] == other\",\n      (1717986919LL * (signed int)(a1 + a3) >> 36)\n    + ((unsigned __int64)(1717986919LL * (signed int)(a1 + a3)) >> 63)\n    - 1,\n      v8 - 20 * (((unsigned __int64)(1717986919LL * v8) >> 63) + (1717986919LL * v8 >> 35)) - 1);\n  v13 = sub_43EDB0(v30, v33, v31);\n  v14 = 5;\n  if ( v13 != 5 )\n  {\n    v15 = v13;\n    v16 = v32;\n    v17 = 3 - v28;\n    v14 = sub_43EDB0(v31, v33, v30);\n    if ( v14 != 5 )\n    {\n      v18 = v14 == 2;\n      v14 = v15;\n      if ( v18 )\n        v14 = 2;\n      v19 = sub_43E350(v8, 0LL, 0LL, 0LL, &v29);\n      v20 = v31;\n      if ( v19 )\n      {\n        if ( (unsigned int)sub_406880(v29, v17, \"break_through-A\", v8, 0, 0) )\n        {\n          if ( (unsigned int)sub_406880(v16, v28, \"break_through-B\", v8, 0, 0) )\n          {\n            if ( (unsigned int)sub_43F100(v27, v17) )\n            {\n              if ( byte_98A1B0[v35] && !(unsigned int)sub_43B050(v20, 0LL) )\n              {\n                v21 = v14;\n                v22 = 2;\n              }\n              else\n              {\n                v21 = v14;\n                v22 = 5;\n              }\n              sub_407030();\n              v24 = 0;\n              if ( (unsigned int)sub_406880(v27, v28, \"break_through-C\", v8, 0, 0) )\n              {\n                if ( (unsigned int)sub_43F100(v16, v17) )\n                {\n                  if ( byte_98A1B0[v34] && !(unsigned int)sub_43B050(v30, 0LL) )\n                    v22 = 2;\n                  v24 = v22;\n                }\n                sub_407030();\n                sub_407030();\n                v25 = v24;\n                v18 = v24 == 0;\n                v26 = v24 < 0;\n                v14 = v21;\n                if ( !v26 && !v18 )\n                  v14 = v25;\n              }\n              else\n              {\n                sub_407030();\n                v14 = v22;\n              }\n              return v14;\n            }\n            sub_407030();\n          }\n          sub_407030();\n          return v14;\n        }\n      }\n    }\n  }\n  return v14;\n}\n", 
            "funcStartAddr": "0x43e980L", 
            "funcEndAddr": "0x43edafL", 
            "funcName": "sub_43E980"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_43EDB0(unsigned int a1, signed int a2, signed int a3, unsigned int a4, unsigned int a5, unsigned int a6, unsigned int a7, unsigned int a8)\n{\n  unsigned int v8; // ebx\n  unsigned int v9; // er15\n  signed int v10; // er12\n  unsigned int v11; // er14\n  signed int v13; // er12\n  signed int v14; // ebp\n  signed int v15; // er12\n  _BOOL8 v16; // r14\n  __int64 v17; // rax\n  __int64 v18; // rdi\n  signed int v19; // ebx\n  signed int v20; // [rsp+0h] [rbp-48h]\n  unsigned int v21; // [rsp+4h] [rbp-44h]\n  int v22; // [rsp+8h] [rbp-40h]\n  unsigned int v23; // [rsp+Ch] [rbp-3Ch]\n  __int64 v24; // [rsp+10h] [rbp-38h]\n\n  v8 = a6;\n  v9 = a5;\n  v10 = a4;\n  v20 = a3;\n  v11 = 0;\n  if ( (unsigned int)sub_406880(a4, a8, \"break_through_helper-A\", a6, 0, 0) )\n  {\n    v11 = 0;\n    if ( (unsigned int)sub_43B050(v8, 0LL) )\n    {\nLABEL_3:\n      sub_407030();\n      return v11;\n    }\n    if ( !(unsigned int)sub_43B050(v10, &v23) )\n    {\n      v13 = 2;\n      v14 = a2;\n      goto LABEL_16;\n    }\n    if ( (unsigned int)sub_406880(v9, a7, \"break_through_helper-E\", v8, 0, 0) )\n    {\n      if ( !byte_98A1B0[v10] || !(unsigned int)sub_43B6F0(v10, v10, 0LL) )\n      {\n        sub_407030();\n        goto LABEL_29;\n      }\n      sub_407030();\n    }\n    if ( v23 != v9 )\n    {\n      v13 = 0;\n      v14 = a2;\n      if ( (unsigned int)sub_406880(v23, a7, \"break_through_helper-F\", v8, 0, 0) )\n      {\n        v13 = 0;\n        if ( (unsigned int)sub_406880(v9, a8, \"break_through_helper-G\", v8, 0, 0) )\n        {\n          v11 = 0;\n          if ( (unsigned int)sub_43B050(v9, 0LL) )\n          {\n            sub_407030();\n            sub_407030();\n            goto LABEL_3;\n          }\n          if ( byte_98A1B0[a2] && byte_98A1B0[v20] && (unsigned int)sub_43E680(a2, v20) )\n          {\n            sub_407030();\n            sub_407030();\n            sub_407030();\n            return 2;\n          }\n          sub_407030();\n          v13 = 2;\n        }\n        sub_407030();\n      }\nLABEL_16:\n      v11 = 5;\n      if ( !byte_98A1B0[a1] )\n        goto LABEL_3;\n      if ( !byte_98A1B0[v14] )\n        goto LABEL_3;\n      v24 = v14;\n      if ( !(unsigned int)sub_43E680(a1, v14) )\n        goto LABEL_3;\n      v22 = v13;\n      v15 = 0;\n      LODWORD(v16) = 0;\n      if ( (unsigned int)sub_406880(v9, a7, \"break_through_helper-B\", v8, 0, 0) )\n      {\n        LODWORD(v16) = 0;\n        v15 = 1;\n        if ( !(unsigned int)sub_43B050(v14, 0LL) )\n        {\n          v15 = 0;\n          v16 = (unsigned int)sub_43B050(a1, 0LL) != 0;\n        }\n        sub_407030();\n      }\n      v17 = v15 | (unsigned int)v16;\n      if ( !(v15 | (unsigned int)v16) )\n      {\n        v11 = v22;\n        goto LABEL_3;\n      }\n      v21 = 0;\n      if ( (_DWORD)v16 && (v17 = sub_43B6F0(v17, a1, &v21), (_DWORD)v17) )\n      {\n        v18 = v21;\n        if ( !v21 )\n        {\nLABEL_45:\n          v11 = 5;\n          goto LABEL_3;\n        }\n      }\n      else\n      {\n        v11 = 5;\n        if ( !v15 )\n          goto LABEL_3;\n        if ( !(unsigned int)sub_43B6F0(v17, v14, &v21) )\n          goto LABEL_3;\n        v18 = v21;\n        if ( !v21 )\n          goto LABEL_3;\n      }\n      if ( (unsigned int)sub_406880(v18, a7, \"break_through_helper-C\", v8, 0, 0) )\n      {\n        if ( (unsigned int)sub_406880(v9, a8, \"break_through_helper-D\", v8, 0, 0) )\n        {\n          v19 = v22;\n          if ( !byte_98A1B0[v24] || !byte_98A1B0[v20] || !(unsigned int)sub_43E680(v14, v20) )\n            v19 = 5;\n          sub_407030();\n        }\n        else\n        {\n          v19 = v22;\n        }\n        sub_407030();\n        v11 = v19;\n        goto LABEL_3;\n      }\n      goto LABEL_45;\n    }\nLABEL_29:\n    sub_407030();\n    v11 = 0;\n  }\n  return v11;\n}\n", 
            "funcStartAddr": "0x43edb0L", 
            "funcEndAddr": "0x43f0f7L", 
            "funcName": "sub_43EDB0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_43F100(unsigned int a1, unsigned int a2)\n{\n  _BOOL8 v2; // rcx\n  _BOOL8 v3; // rbx\n  __int64 v4; // rcx\n  _BOOL8 v5; // rdx\n\n  if ( !byte_87BE98 )\n  {\n    memset(&unk_87BF48, 255, 0xBD8uLL);\n    byte_87BE98 = 1;\n  }\n  if ( !dword_98A7F4 )\n  {\n    v2 = a2 == 2;\n    if ( dword_87BEA0[2 * (signed int)a1 + v2] == dword_98A7F0 )\n    {\n      LODWORD(v3) = dword_87CB20[2 * (signed int)a1 + v2];\n      return (unsigned int)v3;\n    }\n  }\n  LODWORD(v3) = 0;\n  if ( (unsigned int)sub_406880(a1, a2, \"safe_move-A\", 0, 0, 0) )\n  {\n    LODWORD(v3) = 5 - (unsigned __int64)sub_43B050(a1, 0LL);\nLABEL_11:\n    sub_407030();\n    goto LABEL_12;\n  }\n  if ( (unsigned int)sub_408130(a1, a2, 0LL) )\n  {\n    LODWORD(v3) = 0;\n    if ( (unsigned int)sub_406E60(a1, a2, \"safe_move-B\", 0, 0) )\n    {\n      v3 = (unsigned int)sub_43B170(a1, 0LL, a2, a1) != 5;\n      goto LABEL_11;\n    }\n  }\nLABEL_12:\n  if ( !dword_98A7F4 )\n  {\n    v4 = (signed int)a1;\n    v5 = a2 == 2;\n    dword_87BEA0[2 * v4 + v5] = dword_98A7F0;\n    dword_87CB20[2 * v4 + v5] = v3;\n  }\n  return (unsigned int)v3;\n}\n", 
            "funcStartAddr": "0x43f100L", 
            "funcEndAddr": "0x43f20aL", 
            "funcName": "sub_43F100"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_43F210(signed int a1, signed int a2, __int64 a3, __int64 a4)\n{\n  __int64 v4; // r13\n  unsigned __int8 v5; // bl\n  int v6; // edx\n  signed __int64 v7; // rbp\n  unsigned int v8; // eax\n  __int64 v9; // r15\n  __int64 v10; // r14\n  int v11; // ebp\n  int v12; // eax\n  signed __int64 v13; // rbx\n  __int64 v14; // rbp\n  __int64 v15; // rax\n  unsigned int v16; // ebp\n  int v17; // eax\n  unsigned int v18; // eax\n  __int64 v19; // r13\n  signed __int64 v20; // rbx\n  char *v21; // r14\n  int *v22; // rax\n  signed __int64 v23; // rax\n  int v24; // ebp\n  int v25; // esi\n  signed int v27; // [rsp+Ch] [rbp-6ACh]\n  unsigned int v28; // [rsp+10h] [rbp-6A8h]\n  int v29; // [rsp+14h] [rbp-6A4h]\n  __int64 v30; // [rsp+18h] [rbp-6A0h]\n  int v31; // [rsp+20h] [rbp-698h]\n  char v32; // [rsp+24h] [rbp-694h]\n  __int64 v33; // [rsp+28h] [rbp-690h]\n  __int64 v34; // [rsp+30h] [rbp-688h]\n  __int64 v35; // [rsp+38h] [rbp-680h]\n  int v36[160]; // [rsp+40h] [rbp-678h]\n  int v37[254]; // [rsp+2C0h] [rbp-3F8h]\n\n  v4 = a4;\n  v30 = a3;\n  v34 = a1;\n  v5 = byte_98A1B0[a1];\n  if ( (unsigned __int8)(v5 - 1) >= 2u )\n  {\n    v6 = (1717986919 * v34 >> 35) + ((unsigned __int64)(1717986919 * v34) >> 63);\n    sub_4340E0((__int64)\"engine/reading.c\", 0x367u, (__int64)\"IS_STONE(board[str])\", v6 - 1, a1 - 20 * v6 - 1);\n  }\n  LODWORD(v7) = 0;\n  if ( !(unsigned int)sub_43B050(a1, 0LL) )\n  {\n    v27 = a2;\n    v28 = 3 - v5;\n    v8 = sub_408410(a1, 241, (unsigned __int64)v37);\n    if ( v8 - 2 <= 3 && (signed int)v8 > 0 )\n    {\n      v9 = v8;\n      v10 = 0LL;\n      do\n      {\n        v11 = v37[v10];\n        if ( (unsigned int)sub_406880((unsigned int)v37[v10], v28, \"attack_threats-A\", a1, 0, 0) )\n        {\n          v12 = sub_43B050(a1, 0LL);\n          if ( v12 )\n            sub_4241E0(v11, v12, a2, v30, v4);\n          sub_407030();\n        }\n        v13 = 4611686018427387900LL;\n        do\n        {\n          v14 = dword_5641C0[v13];\n          v15 = v37[v10];\n          if ( (unsigned __int8)(byte_98A1B0[v14 + v15] - 1) >= 3u )\n          {\n            v16 = v15 + v14;\n            if ( !(unsigned int)sub_40B0A0(v16, a1) )\n            {\n              if ( (unsigned int)sub_406880(v16, v28, \"attack_threats-B\", a1, 0, 0) )\n              {\n                v17 = sub_43B050(a1, 0LL);\n                if ( v17 )\n                  sub_4241E0(v16, v17, a2, v30, v4);\n                sub_407030();\n              }\n            }\n          }\n          ++v13;\n        }\n        while ( v13 * 4 );\n        ++v10;\n      }\n      while ( v10 != v9 );\n    }\n    v33 = v4;\n    v18 = sub_40A7D0(a1, (__int64)v36);\n    if ( (signed int)v18 > 0 )\n    {\n      v35 = v18;\n      v19 = 0LL;\n      while ( 1 )\n      {\n        sub_43E350(v36[v19], &v29, 0LL, &v31, &v32);\n        if ( v29 )\n        {\n          if ( v31 && v27 >= 0 )\n            break;\n        }\nLABEL_40:\n        if ( ++v19 == v35 )\n          goto LABEL_41;\n      }\n      v20 = -1LL;\n      v21 = (char *)&unk_8E94F8;\n      while ( 1 )\n      {\n        if ( dword_98A7F4 )\n        {\n          v22 = (int *)&v32;\n          if ( (_DWORD)v20 != -1 )\n            goto LABEL_40;\n        }\n        else\n        {\n          if ( (_DWORD)v20 == -1 )\n            goto LABEL_39;\n          v23 = 95LL * v36[v19];\n          if ( !dword_8E9524[v20 + v23] )\n            goto LABEL_40;\n          v22 = (int *)&v21[v23 * 4];\n        }\n        v24 = *v22;\n        if ( (unsigned int)sub_406880((unsigned int)*v22, v28, \"attack_threats-C\", a1, 0, 0) )\n        {\n          if ( byte_98A1B0[v34] )\n          {\n            v25 = sub_43B050(a1, 0LL);\n            v29 = v25;\n            if ( !v25 )\n              goto LABEL_38;\n          }\n          else\n          {\n            v29 = 5;\n            v25 = 5;\n          }\n          sub_4241E0(v24, v25, v27, v30, v33);\nLABEL_38:\n          sub_407030();\n        }\nLABEL_39:\n        ++v20;\n        v21 += 4;\n        if ( v20 >= v27 )\n          goto LABEL_40;\n      }\n    }\nLABEL_41:\n    LODWORD(v7) = 0;\n    if ( *(_DWORD *)(v33 + 4LL * v27 - 4) <= 0 )\n    {\n      if ( v27 > 0 )\n      {\n        v7 = 0LL;\n        do\n        {\n          if ( !*(_DWORD *)(v33 + 4 * v7) )\n            break;\n          ++v7;\n        }\n        while ( v7 < v27 );\n      }\n    }\n    else\n    {\n      LODWORD(v7) = v27;\n    }\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x43f210L", 
            "funcEndAddr": "0x43f571L", 
            "funcName": "sub_43F210"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_43F580(__int64 a1)\n{\n  signed __int64 result; // rax\n  __int64 v2; // ST00_8\n  __int64 v3; // ST00_8\n  __int64 v4; // ST00_8\n  __int64 v5; // ST00_8\n  __int64 v6; // ST00_8\n  __int64 v7; // ST00_8\n\n  qword_565B10 = *(_QWORD *)(a1 + 16);\n  xmmword_565B00 = *(_OWORD *)a1;\n  qword_565B50 = *(_QWORD *)(a1 + 60);\n  xmmword_565B40 = *(_OWORD *)(a1 + 44);\n  qword_565B70 = *(_QWORD *)(a1 + 84);\n  xmmword_565B60 = *(_OWORD *)(a1 + 68);\n  qword_565B90 = *(_QWORD *)(a1 + 108);\n  xmmword_565B80 = *(_OWORD *)(a1 + 92);\n  qword_565BF0 = *(_QWORD *)(a1 + 172);\n  xmmword_565BE0 = *(_OWORD *)(a1 + 156);\n  qword_565C10 = *(_QWORD *)(a1 + 196);\n  xmmword_565C00 = *(_OWORD *)(a1 + 180);\n  xmmword_565C20 = *(_OWORD *)(a1 + 204);\n  qword_565C30 = *(_QWORD *)(a1 + 220);\n  xmmword_565B20 = *(_OWORD *)(a1 + 24);\n  xmmword_565BA0 = *(_OWORD *)(a1 + 116);\n  xmmword_565BC0 = *(_OWORD *)(a1 + 136);\n  xmmword_565C40 = *(_OWORD *)(a1 + 228);\n  dword_565B30 = *(_DWORD *)(a1 + 40);\n  dword_565BB0 = *(_DWORD *)(a1 + 132);\n  dword_565BD0 = *(_DWORD *)(a1 + 152);\n  dword_565C50 = *(_DWORD *)(a1 + 244);\n  dword_565C54 = *(_DWORD *)(a1 + 248);\n  dword_565C58 = *(_DWORD *)(a1 + 252);\n  dword_565C5C = *(_DWORD *)(a1 + 256);\n  dword_565C60 = *(_DWORD *)(a1 + 260);\n  result = *(unsigned int *)(a1 + 264);\n  dword_565C64 = *(_DWORD *)(a1 + 264);\n  if ( dword_88C268 )\n  {\n    sub_433F90(\n      \"static int defend_lib_score[6]              = {%d, %d, %d, %d, %d, %d};\\n\",\n      (unsigned int)xmmword_565B00,\n      DWORD1(xmmword_565B00),\n      DWORD2(xmmword_565B00),\n      HIDWORD(xmmword_565B00),\n      (unsigned int)qword_565B10,\n      __PAIR__(HIDWORD(result), HIDWORD(qword_565B10)));\n    sub_433F90(\n      \"static int defend_not_adjacent_lib_score[5] = {%d, %d, %d, %d, %d};\\n\",\n      (unsigned int)xmmword_565B20,\n      DWORD1(xmmword_565B20),\n      DWORD2(xmmword_565B20),\n      HIDWORD(xmmword_565B20),\n      (unsigned int)dword_565B30);\n    LODWORD(v2) = HIDWORD(qword_565B50);\n    sub_433F90(\n      \"static int defend_capture_score[6]          = {%d, %d, %d, %d, %d, %d};\\n\",\n      (unsigned int)xmmword_565B40,\n      DWORD1(xmmword_565B40),\n      DWORD2(xmmword_565B40),\n      HIDWORD(xmmword_565B40),\n      (unsigned int)qword_565B50,\n      v2);\n    LODWORD(v3) = HIDWORD(qword_565B70);\n    sub_433F90(\n      \"static int defend_atari_score[6]            = {%d, %d, %d, %d, %d, %d};\\n\",\n      (unsigned int)xmmword_565B60,\n      DWORD1(xmmword_565B60),\n      DWORD2(xmmword_565B60),\n      HIDWORD(xmmword_565B60),\n      (unsigned int)qword_565B70,\n      v3);\n    LODWORD(v4) = HIDWORD(qword_565B90);\n    sub_433F90(\n      \"static int defend_save_score[6]             = {%d, %d, %d, %d, %d, %d};\\n\",\n      (unsigned int)xmmword_565B80,\n      DWORD1(xmmword_565B80),\n      DWORD2(xmmword_565B80),\n      HIDWORD(xmmword_565B80),\n      (unsigned int)qword_565B90,\n      v4);\n    sub_433F90(\n      \"static int defend_open_score[5]             = {%d, %d, %d, %d, %d};\\n\",\n      (unsigned int)xmmword_565BA0,\n      DWORD1(xmmword_565BA0),\n      DWORD2(xmmword_565BA0),\n      HIDWORD(xmmword_565BA0),\n      (unsigned int)dword_565BB0);\n    sub_433F90(\n      \"static int attack_own_lib_score[5]          = {%d, %d, %d, %d, %d};\\n\",\n      (unsigned int)xmmword_565BC0,\n      DWORD1(xmmword_565BC0),\n      DWORD2(xmmword_565BC0),\n      HIDWORD(xmmword_565BC0),\n      (unsigned int)dword_565BD0);\n    LODWORD(v5) = HIDWORD(qword_565BF0);\n    sub_433F90(\n      \"static int attack_string_lib_score[6]       = {%d, %d, %d, %d, %d, %d};\\n\",\n      (unsigned int)xmmword_565BE0,\n      DWORD1(xmmword_565BE0),\n      DWORD2(xmmword_565BE0),\n      HIDWORD(xmmword_565BE0),\n      (unsigned int)qword_565BF0,\n      v5);\n    LODWORD(v6) = HIDWORD(qword_565C10);\n    sub_433F90(\n      \"static int attack_capture_score[6]          = {%d, %d, %d, %d, %d, %d};\\n\",\n      (unsigned int)xmmword_565C00,\n      DWORD1(xmmword_565C00),\n      DWORD2(xmmword_565C00),\n      HIDWORD(xmmword_565C00),\n      (unsigned int)qword_565C10,\n      v6);\n    LODWORD(v7) = HIDWORD(qword_565C30);\n    sub_433F90(\n      \"static int attack_save_score[6]             = {%d, %d, %d, %d, %d, %d};\\n\",\n      (unsigned int)xmmword_565C20,\n      DWORD1(xmmword_565C20),\n      DWORD2(xmmword_565C20),\n      HIDWORD(xmmword_565C20),\n      (unsigned int)qword_565C30,\n      v7);\n    sub_433F90(\n      \"static int attack_open_score[5]             = {%d, %d, %d, %d, %d};\\n\",\n      (unsigned int)xmmword_565C40,\n      DWORD1(xmmword_565C40),\n      DWORD2(xmmword_565C40),\n      HIDWORD(xmmword_565C40),\n      (unsigned int)dword_565C50);\n    sub_433F90(\"static int defend_not_edge_score            = %d;\\n\", (unsigned int)dword_565C54);\n    sub_433F90(\"static int attack_not_edge_score            = %d;\\n\", (unsigned int)dword_565C58);\n    sub_433F90(\"static int attack_ko_score                  = %d;\\n\", (unsigned int)dword_565C5C);\n    sub_433F90(\"static int cannot_defend_penalty            = %d;\\n\", (unsigned int)dword_565C60);\n    result = sub_433F90(\"static int safe_atari_score                 = %d;\\n\", (unsigned int)dword_565C64);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x43f580L", 
            "funcEndAddr": "0x43f953L", 
            "funcName": "sub_43F580"
        }, 
        {
            "decompiledFuncCode": "void sub_43F960()\n{\n  dword_87BE90 = 0;\n}\n", 
            "funcStartAddr": "0x43f960L", 
            "funcEndAddr": "0x43f96bL", 
            "funcName": "sub_43F960"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_43F970()\n{\n  return (unsigned int)dword_87BE90;\n}\n", 
            "funcStartAddr": "0x43f970L", 
            "funcEndAddr": "0x43f977L", 
            "funcName": "sub_43F970"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_43F980(__int64 a1)\n{\n  int v1; // er14\n  signed int v3; // er15\n  __int64 v4; // rbx\n  int v5; // er13\n  unsigned int v6; // er14\n  signed __int64 v7; // r12\n  char v8; // al\n  unsigned int v9; // ebp\n  bool v10; // zf\n  signed int v11; // eax\n\n  sub_44A2C0(a1);\n  v1 = dword_565C68;\n  if ( dword_565C68 > 0 )\n  {\n    v3 = 32;\n    LODWORD(v4) = 21;\n    v5 = 0;\n    while ( 1 )\n    {\n      v4 = (unsigned int)v4;\n      v6 = v1 - v5;\n      fprintf(stderr, \"\\n%2d\", v6);\n      if ( dword_565C68 > 0 )\n        break;\n      v9 = v3;\nLABEL_19:\n      fprintf(stderr, off_499B47, v6);\n      ++v5;\n      v1 = dword_565C68;\n      LODWORD(v4) = v4 + 20;\n      v3 = v9;\n      if ( dword_565C68 <= v5 )\n        return sub_44A570();\n    }\n    v7 = 0LL;\n    while ( 1 )\n    {\n      v8 = byte_98A1B0[v4 + v7];\n      if ( byte_98A510[v4 + v7] )\n      {\n        v9 = 44;\n        if ( v8 )\n        {\n          v9 = 111;\n          if ( v8 != 1 )\n          {\n            v10 = v8 == 2;\n            v11 = 120;\n            goto LABEL_13;\n          }\n        }\n      }\n      else\n      {\n        v9 = 46;\n        if ( v8 )\n        {\n          v9 = 79;\n          if ( v8 != 1 )\n          {\n            v10 = v8 == 2;\n            v11 = 88;\nLABEL_13:\n            if ( v10 )\n              v3 = v11;\n            v9 = v3;\n            goto LABEL_16;\n          }\n        }\n      }\nLABEL_16:\n      fprintf(stderr, off_499B43, v9);\n      ++v7;\n      v3 = v9;\n      if ( v7 >= dword_565C68 )\n        goto LABEL_19;\n    }\n  }\n  return sub_44A570();\n}\n", 
            "funcStartAddr": "0x43f980L", 
            "funcEndAddr": "0x43faa8L", 
            "funcName": "sub_43F980"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_43FAB0(__int64 a1, __int64 a2)\n{\n  return sub_43FAC0(a1, a2, 0LL, 0LL);\n}\n", 
            "funcStartAddr": "0x43fab0L", 
            "funcEndAddr": "0x43fab6L", 
            "funcName": "sub_43FAB0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_43FAC0(int a1, int *a2, unsigned int a3, unsigned int a4)\n{\n  unsigned int v4; // er12\n  int v5; // er15\n  signed int v6; // er13\n  int v7; // edx\n  int v8; // edx\n  unsigned int v9; // ebx\n  __int64 v10; // rcx\n  signed __int64 v11; // rax\n  int v12; // edx\n  __int64 v13; // rdi\n  __int64 v14; // rbx\n  unsigned int v15; // er15\n  unsigned __int64 v16; // rcx\n  signed __int64 v17; // rax\n  __int64 v18; // rbp\n  unsigned int v19; // er12\n  unsigned int v20; // er14\n  signed int v21; // er15\n  int v22; // er14\n  unsigned int v23; // eax\n  __int64 v24; // r14\n  char v25; // r12\n  int v26; // ebp\n  unsigned int v27; // ebx\n  signed int v28; // eax\n  signed int v29; // er13\n  int v30; // eax\n  bool v31; // zf\n  bool v32; // sf\n  unsigned __int8 v33; // of\n  int v34; // ecx\n  bool v35; // zf\n  bool v36; // sf\n  unsigned __int8 v37; // of\n  int v38; // eax\n  signed int v39; // eax\n  signed int v41; // [rsp+4h] [rbp-3E4h]\n  unsigned int v42; // [rsp+8h] [rbp-3E0h]\n  int v43; // [rsp+Ch] [rbp-3DCh]\n  int v44; // [rsp+10h] [rbp-3D8h]\n  int v45; // [rsp+14h] [rbp-3D4h]\n  unsigned int v46; // [rsp+18h] [rbp-3D0h]\n  int v47; // [rsp+1Ch] [rbp-3CCh]\n  unsigned int v48; // [rsp+20h] [rbp-3C8h]\n  unsigned int v49; // [rsp+24h] [rbp-3C4h]\n  __int64 v50; // [rsp+28h] [rbp-3C0h]\n  __int64 v51; // [rsp+38h] [rbp-3B0h]\n  unsigned int v52; // [rsp+40h] [rbp-3A8h]\n  unsigned int v53; // [rsp+44h] [rbp-3A4h]\n  int v54; // [rsp+48h] [rbp-3A0h]\n  unsigned int v55; // [rsp+4Ch] [rbp-39Ch]\n  unsigned int v56; // [rsp+50h] [rbp-398h]\n  int v57; // [rsp+54h] [rbp-394h]\n  unsigned int v58; // [rsp+58h] [rbp-390h]\n  unsigned int v59; // [rsp+5Ch] [rbp-38Ch]\n  int v60; // [rsp+60h] [rbp-388h]\n  int v61; // [rsp+64h] [rbp-384h]\n  int v62; // [rsp+68h] [rbp-380h]\n  unsigned int v63; // [rsp+6Ch] [rbp-37Ch]\n  unsigned int v64; // [rsp+70h] [rbp-378h]\n  int v65; // [rsp+74h] [rbp-374h]\n  __int64 v66; // [rsp+78h] [rbp-370h]\n  __int64 v67; // [rsp+80h] [rbp-368h]\n  int v68; // [rsp+88h] [rbp-360h]\n  int v69[49]; // [rsp+8Ch] [rbp-35Ch]\n  int v70[50]; // [rsp+150h] [rbp-298h]\n  int v71; // [rsp+218h] [rbp-1D0h]\n  int v72[50]; // [rsp+220h] [rbp-1C8h]\n  int v73; // [rsp+2E8h] [rbp-100h]\n  int v74; // [rsp+3B0h] [rbp-38h]\n\n  ++dword_87BE90;\n  v42 = a4;\n  v4 = a3;\n  v45 = a1;\n  v5 = (unsigned __int8)byte_98A1B0[a1];\n  v71 = 0;\n  v6 = sub_40AD00(a1);\n  if ( (unsigned __int8)(byte_98A1B0[v6] - 1) >= 2u )\n  {\n    v7 = (1717986919LL * v6 >> 35) + ((unsigned __int64)(1717986919LL * v6) >> 63);\n    sub_4340E0((__int64)\"engine/reading.c\", 0x126Au, (__int64)\"IS_STONE(board[str])\", v7 - 1, v6 - 20 * v7 - 1);\n  }\n  if ( (unsigned int)sub_4083A0(v6) != 2 )\n  {\n    v8 = (1717986919LL * v6 >> 35) + ((unsigned __int64)(1717986919LL * v6) >> 63);\n    sub_4340E0((__int64)\"engine/reading.c\", 0x126Bu, (__int64)\"countlib(str) == 2\", v8 - 1, v6 - 20 * v8 - 1);\n  }\n  if ( dword_98A7F4 > dword_98A76C + 20 && 3 - (unsigned __int8)byte_98A1B0[v6] == v4 )\n  {\n    if ( qword_88C238 )\n      sub_40F0A0((__int64)\"simple_ladder_attack\", a1, 0, 0, 0LL);\n    v9 = 0;\n    if ( a2 )\n      *a2 = 0;\n    return v9;\n  }\n  sub_408410(v6, 2, (unsigned __int64)&v60);\n  v68 = v60;\n  v70[0] = 0;\n  v10 = v71;\n  v11 = v71 + 1LL;\n  v12 = 0;\n  ++v71;\n  if ( v10 >= 0 && v60 != v61 )\n  {\n    v13 = 0LL;\n    while ( 1 )\n    {\n      v12 = v13 + 1;\n      if ( v13 + 1 >= v11 )\n        break;\n      v31 = v69[v13++] == v61;\n      if ( v31 )\n        goto LABEL_18;\n    }\n    v12 = v13 + 1;\n  }\nLABEL_18:\n  v48 = 3 - v5;\n  if ( v12 == (_DWORD)v11 && (signed int)v10 <= 48 )\n  {\n    *(&v68 + (signed int)v11) = v61;\n    v70[v71++] = 0;\n  }\n  sub_4402B0((unsigned int)v6, &v68, v48, \"simple_ladder_attack\", 0LL);\n  v66 = v71;\n  v14 = v6;\n  v15 = v42;\n  if ( v71 <= 0LL )\n    goto LABEL_81;\n  v16 = (unsigned __int64)(1717986919LL * v6) >> 63;\n  v17 = 1717986919LL * v6 >> 35;\n  v53 = v17 + v16 - 1;\n  v52 = v6 - 20 * (v17 + v16) - 1;\n  v18 = 0LL;\n  v43 = 0;\n  v41 = 0;\n  v46 = v4;\n  v50 = v6;\n  do\n  {\n    v22 = *(&v68 + v18);\n    if ( !(unsigned int)sub_407EA0(*(&v68 + v18), v48, \"simple_ladder_attack\", v6, v4, v15, &v59, &v58, &v57, v41 == 0) )\n      goto LABEL_75;\n    v54 = v57;\n    v56 = v59;\n    v55 = v58;\n    ++dword_87BE90;\n    v23 = (unsigned __int8)byte_98A1B0[v14];\n    v74 = 0;\n    v49 = v23;\n    if ( (unsigned __int8)(v23 - 1) >= 2u )\n      sub_4340E0(\n        (__int64)\"engine/reading.c\",\n        0x12B0u,\n        (__int64)\"((board[str]) == 1 || (board[str]) == 2)\",\n        0xFFFFFFFF,\n        0xFFFFFFFF);\n    v47 = v22;\n    if ( (unsigned int)sub_4083A0(v6) != 1 )\n      sub_4340E0((__int64)\"engine/reading.c\", 0x12B1u, (__int64)\"countlib(str) == 1\", v53, v52);\n    sub_408410(v6, 1, (unsigned __int64)&v65);\n    v72[0] = v65;\n    v73 = 0;\n    v74 = 1;\n    sub_4401B0((unsigned int)v6, v72);\n    sub_4402B0((unsigned int)v6, v72, v49, \"simple_ladder_defend\", 0LL);\n    v67 = v74;\n    v51 = v18;\n    if ( v74 <= 0LL )\n    {\n      v20 = v4;\n      v19 = v15;\n      if ( qword_88C238 )\n      {\nLABEL_59:\n        v21 = 0;\n        sub_40F0A0((__int64)\"simple_ladder_defend\", v6, 0, 0, 0LL);\n        if ( v54 )\n          goto LABEL_69;\n      }\n      else\n      {\nLABEL_24:\n        v21 = 0;\n        if ( v54 )\n          goto LABEL_69;\n      }\nLABEL_60:\n      if ( v21 == 5 )\n        goto LABEL_74;\n      if ( v21 )\n      {\n        v34 = v41;\n        v37 = __OFSUB__(5 - v21, v41);\n        v35 = 5 - v21 == v41;\n        v36 = 5 - v21 - v41 < 0;\n        if ( 5 - v21 >= v41 )\n          v34 = 5 - v21;\n        v41 = v34;\n        v38 = v43;\n        if ( !((unsigned __int8)(v36 ^ v37) | v35) )\n          v38 = v47;\n        goto LABEL_73;\n      }\n      sub_407030();\n      if ( qword_88C238 )\n        sub_40F0A0((__int64)\"simple_ladder_attack\", v45, v47, 5u, (__int64)\"attack effective\");\n      if ( a2 )\n        *a2 = v47;\n      return 5;\n    }\n    v24 = 0LL;\n    v44 = 0;\n    v21 = 0;\n    do\n    {\n      v26 = v72[v24];\n      v25 = 1;\n      if ( !(unsigned int)sub_407EA0(v72[v24], v49, \"simple_ladder_defend\", v6, v56, v55, &v64, &v63, &v62, v21 == 0) )\n        goto LABEL_53;\n      v27 = v6;\n      v28 = sub_4083A0(v6);\n      v29 = 0;\n      if ( v28 <= 2 )\n      {\n        v29 = 5;\n        if ( v28 == 2 )\n          v29 = sub_43FAC0(v27, 0LL, v64, v63);\n      }\n      sub_407030();\n      if ( v62 )\n      {\n        if ( v29 != 5 )\n          v21 = 1;\n        v30 = v44;\n        if ( v29 != 5 )\n          v30 = v26;\n      }\n      else\n      {\n        if ( !v29 )\n        {\n          if ( qword_88C238 )\n          {\n            v6 = v27;\n            sub_40F0A0((__int64)\"simple_ladder_defend\", v27, v26, 5u, (__int64)\"defense effective\");\nLABEL_67:\n            v21 = 5;\n            goto LABEL_68;\n          }\n          v25 = 0;\n          goto LABEL_52;\n        }\n        v33 = __OFSUB__(5 - v29, v21);\n        v31 = 5 - v29 == v21;\n        v32 = 5 - v29 - v21 < 0;\n        if ( 5 - v29 >= v21 )\n          v21 = 5 - v29;\n        v30 = v44;\n        if ( !((unsigned __int8)(v32 ^ v33) | v31) )\n          v30 = v26;\n      }\n      v44 = v30;\nLABEL_52:\n      v6 = v27;\nLABEL_53:\n      if ( !v25 )\n        goto LABEL_67;\n      ++v24;\n    }\n    while ( v24 < v67 );\n    if ( !v21 )\n    {\n      v19 = v42;\n      v20 = v46;\n      v14 = v50;\n      if ( qword_88C238 )\n        goto LABEL_59;\n      goto LABEL_24;\n    }\n    if ( qword_88C238 )\n      sub_40F0A0((__int64)\"simple_ladder_defend\", v6, v44, v21, (__int64)\"saved move\");\nLABEL_68:\n    v19 = v42;\n    v20 = v46;\n    v14 = v50;\n    if ( !v54 )\n      goto LABEL_60;\nLABEL_69:\n    v39 = v41;\n    if ( v21 != 5 )\n      v39 = 1;\n    v41 = v39;\n    v38 = v43;\n    if ( v21 != 5 )\n      v38 = v47;\nLABEL_73:\n    v43 = v38;\nLABEL_74:\n    v18 = v51;\n    v15 = v19;\n    v4 = v20;\n    sub_407030();\nLABEL_75:\n    ++v18;\n  }\n  while ( v18 < v66 );\n  if ( v41 )\n  {\n    if ( a2 )\n      *a2 = v43;\n    if ( qword_88C238 )\n    {\n      v9 = v41;\n      sub_40F0A0((__int64)\"simple_ladder_attack\", v45, v43, v41, (__int64)\"saved move\");\n    }\n    else\n    {\n      v9 = v41;\n    }\n    return v9;\n  }\nLABEL_81:\n  v9 = 0;\n  if ( qword_88C238 )\n  {\n    v9 = 0;\n    sub_40F0A0((__int64)\"simple_ladder_attack\", v45, 0, 0, 0LL);\n  }\n  return v9;\n}\n", 
            "funcStartAddr": "0x43fac0L", 
            "funcEndAddr": "0x4401adL", 
            "funcName": "sub_43FAC0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4401B0(int a1, __int64 a2)\n{\n  __int64 result; // rax\n  __int64 v3; // r15\n  __int64 v4; // r12\n  __int64 v5; // rcx\n  int v6; // [rsp+Ch] [rbp-2ACh]\n  int v7[170]; // [rsp+10h] [rbp-2A8h]\n\n  result = sub_40A880(a1, (__int64)v7, 1);\n  if ( (signed int)result > 0 )\n  {\n    v3 = (unsigned int)result;\n    v4 = 0LL;\n    while ( 1 )\n    {\n      sub_408410(v7[v4], 1, (unsigned __int64)&v6);\n      result = *(signed int *)(a2 + 400);\n      if ( result > 0 )\n        break;\n      if ( !(_DWORD)result )\n        goto LABEL_12;\nLABEL_14:\n      if ( ++v4 == v3 )\n        return result;\n    }\n    v5 = 0LL;\n    do\n    {\n      if ( *(_DWORD *)(a2 + 4 * v5) == v6 )\n      {\n        ++*(_DWORD *)(a2 + 4 * v5 + 200);\n        result = *(unsigned int *)(a2 + 400);\n        if ( (_DWORD)v5 == (_DWORD)result )\n          goto LABEL_12;\n        goto LABEL_14;\n      }\n      ++v5;\n    }\n    while ( v5 < result );\n    if ( (_DWORD)v5 != (_DWORD)result )\n      goto LABEL_14;\nLABEL_12:\n    if ( (signed int)result <= 49 )\n    {\n      *(_DWORD *)(a2 + 4LL * (signed int)result) = v6;\n      result = *(signed int *)(a2 + 400);\n      *(_DWORD *)(a2 + 4 * result + 200) = 1;\n      ++*(_DWORD *)(a2 + 400);\n    }\n    goto LABEL_14;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4401b0L", 
            "funcEndAddr": "0x4402a1L", 
            "funcName": "sub_4401B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4402B0(int a1, __int64 a2, int a3, __int64 a4, int a5)\n{\n  int v5; // ebx\n  __int64 v6; // r14\n  int v7; // er15\n  __int64 v8; // r12\n  int v9; // er13\n  __int64 result; // rax\n  __int64 v11; // r8\n  __int64 v12; // r11\n  __int64 v13; // r13\n  int *v14; // r14\n  int v15; // ebp\n  int v16; // ebx\n  signed int v17; // er15\n  int v18; // eax\n  signed int v19; // ebx\n  int v20; // ecx\n  int v21; // eax\n  signed int v22; // eax\n  int v23; // ebx\n  bool v24; // dl\n  int v25; // ecx\n  _DWORD *v26; // rax\n  int v27; // ecx\n  unsigned int *v28; // rax\n  int *v29; // rdx\n  int v30; // eax\n  signed int v31; // ecx\n  int *v32; // rcx\n  signed __int64 v33; // r14\n  int v34; // er10\n  int v35; // er9\n  signed __int64 v36; // rdi\n  int v37; // er15\n  char v38; // r13\n  __int64 v39; // rbp\n  int v40; // edx\n  int v41; // esi\n  __int64 v42; // rcx\n  __int64 v43; // rbx\n  int v44; // er10\n  int v45; // er9\n  int v46; // er12\n  int v47; // esi\n  int v48; // eax\n  int v49; // ebp\n  int v50; // ebp\n  int v51; // ebx\n  int v52; // eax\n  __int64 v53; // rax\n  int v54; // ecx\n  signed __int64 v55; // rbp\n  char *v56; // rbx\n  __int64 v57; // rax\n  signed int v58; // edx\n  int v59; // [rsp+8h] [rbp-280h]\n  int v60; // [rsp+Ch] [rbp-27Ch]\n  int v61; // [rsp+10h] [rbp-278h]\n  int v62; // [rsp+14h] [rbp-274h]\n  int v63; // [rsp+18h] [rbp-270h]\n  int v64; // [rsp+1Ch] [rbp-26Ch]\n  int v65; // [rsp+20h] [rbp-268h]\n  int v66; // [rsp+24h] [rbp-264h]\n  __int64 v67; // [rsp+28h] [rbp-260h]\n  __int64 v68; // [rsp+30h] [rbp-258h]\n  int v69; // [rsp+3Ch] [rbp-24Ch]\n  int v70; // [rsp+40h] [rbp-248h]\n  int v71; // [rsp+44h] [rbp-244h]\n  __int64 v72; // [rsp+48h] [rbp-240h]\n  __int64 v73; // [rsp+50h] [rbp-238h]\n  __int64 v74; // [rsp+58h] [rbp-230h]\n  char s[4]; // [rsp+60h] [rbp-228h]\n\n  v5 = a5;\n  v6 = a4;\n  v7 = a3;\n  v8 = a2;\n  v9 = (unsigned __int8)byte_98A1B0[a1];\n  result = sub_4083A0(a1);\n  LODWORD(v12) = *(_DWORD *)(a2 + 400);\n  if ( *(_DWORD *)(a2 + 400) - v5 < 2 )\n    return result;\n  v72 = v6;\n  v64 = v5;\n  if ( (signed int)v12 <= v5 )\n    goto LABEL_65;\n  v62 = result;\n  LODWORD(v67) = v9;\n  LODWORD(v68) = a1;\n  v13 = v5;\n  v14 = (int *)(a2 + 4LL * v5 + 200);\n  do\n  {\n    v15 = *(v14 - 50);\n    *(_DWORD *)s = 0;\n    v59 = 0;\n    v66 = 0;\n    v71 = 0;\n    v61 = 0;\n    v65 = 0;\n    v63 = 0;\n    v60 = 0;\n    sub_40BCD0(v15, v7, v68, s, &v59, &v66, &v71, &v61, &v65, &v63, &v60);\n    if ( (_DWORD)v67 == v7 )\n    {\n      v16 = v7;\n      v17 = sub_4093D0(v15, v7, 10, 0LL);\n      if ( v59 <= 0 )\n      {\n        if ( v17 < 5 )\n          v18 = *((_DWORD *)&xmmword_565B20 + v17) + *v14;\n        else\n          v18 = dword_565B30 + *v14;\n      }\n      else if ( v17 > 5 || v17 == 4 && dword_98A7F4 > dword_98A770 )\n      {\n        v18 = *v14 + v17 + HIDWORD(qword_565B10) - 4;\n      }\n      else\n      {\n        v18 = *((_DWORD *)&xmmword_565B00 + v17) + *v14;\n      }\n      *v14 = v18;\n      v29 = v14;\n      if ( v60 >= 5 )\n        sub_4340E0((__int64)\"engine/reading.c\", 0x1083u, (__int64)\"number_open <= 4\", 0xFFFFFFFF, 0xFFFFFFFF);\n      v30 = *((_DWORD *)&xmmword_565BA0 + v60) + v18;\n      *v14 = v30;\n      v31 = v61;\n      if ( *(_DWORD *)s && v61 <= 0 || (v30 += dword_565C54, *v14 = v30, v31 <= 5) )\n        result = (unsigned int)(*((_DWORD *)&xmmword_565B40 + v31) + v30);\n      else\n        result = (unsigned int)(v31 + HIDWORD(qword_565B50) + v30);\n      *v14 = result;\n      if ( v17 + v31 < 2 )\n      {\n        v7 = v16;\n      }\n      else\n      {\n        v7 = v16;\n        if ( v65 > 5LL )\n          result = (unsigned int)(HIDWORD(qword_565B70) + result + v65);\n        else\n          result = (unsigned int)(*((_DWORD *)&xmmword_565B60 + v65) + result);\n        *v14 = result;\n      }\n      v32 = (int *)((char *)&xmmword_565B80 + 4 * v63);\n      if ( v63 >= 6LL )\n        v32 = (_DWORD *)(&qword_565B90 + 4);\n      v27 = *v32;\n      goto LABEL_63;\n    }\n    v19 = sub_4093D0(v15, v7, 4, 0LL);\n    if ( v19 >= 5 )\n      v19 = 4;\n    v20 = *((_DWORD *)&xmmword_565BC0 + v19) + *v14;\n    *v14 = v20;\n    v21 = v61;\n    if ( !v19 && v61 == 1 )\n    {\n      v20 += dword_565C5C;\n      *v14 = v20;\n    }\n    if ( v19 + v21 <= 1 )\n    {\n      if ( v62 > 2 || v66 || v59 <= 0 )\n        goto LABEL_37;\n    }\n    else if ( v59 <= 0 )\n    {\n      goto LABEL_37;\n    }\n    v22 = sub_4093D0(v15, v67, 5, 0LL);\n    if ( v22 > 5 || v22 == 4 && (v22 = 4, dword_98A7F4 > dword_98A770) )\n      v22 = 5;\n    v20 = *((_DWORD *)&xmmword_565BE0 + v22) + *v14;\n    *v14 = v20;\n    if ( v62 > 2 )\n    {\n      v24 = 0;\n    }\n    else\n    {\n      v23 = v61 + v19;\n      v24 = v23 > 1;\n      if ( v23 > 1 )\n        goto LABEL_35;\n    }\n    if ( v22 == 1 && !v63 )\n    {\n      v20 += dword_565C60;\n      *v14 = v20;\n      if ( !v24 )\n        goto LABEL_37;\nLABEL_36:\n      v20 += dword_565C64;\n      *v14 = v20;\n      goto LABEL_37;\n    }\nLABEL_35:\n    if ( v24 )\n      goto LABEL_36;\nLABEL_37:\n    if ( v60 >= 5 )\n      sub_4340E0((__int64)\"engine/reading.c\", 0x10CCu, (__int64)\"number_open <= 4\", 0xFFFFFFFF, 0xFFFFFFFF);\n    v25 = *((_DWORD *)&xmmword_565C40 + v60) + v20;\n    *v14 = v25;\n    if ( !*(_DWORD *)s )\n    {\n      v25 += dword_565C58;\n      *v14 = v25;\n    }\n    v26 = (_DWORD *)((char *)&xmmword_565C00 + 4 * v61);\n    if ( v61 >= 6LL )\n      v26 = (_DWORD *)(&qword_565C10 + 4);\n    v27 = *v26 + v25;\n    v28 = (unsigned int *)((char *)&xmmword_565C20 + 4 * v63);\n    if ( v63 >= 6LL )\n      v28 = (_DWORD *)(&qword_565C30 + 4);\n    result = *v28;\n    v29 = v14;\nLABEL_63:\n    *v29 = result + v27;\n    ++v13;\n    v12 = *(signed int *)(a2 + 400);\n    ++v14;\n  }\n  while ( v13 < v12 );\n  v5 = v64;\nLABEL_65:\n  if ( (signed int)v12 - 1 > v5 )\n  {\n    v33 = v64;\n    v34 = ~v64;\n    v35 = -2 - v64;\n    v36 = a2 + 4LL * v64 + 216;\n    v37 = v64;\n    v11 = 0LL;\n    v38 = ~(_BYTE)v64;\n    v73 = v64;\n    v74 = a2;\n    v70 = ~v64;\n    v69 = -2 - v64;\n    while ( 1 )\n    {\n      v39 = v33++;\n      if ( v33 < (signed int)v12 )\n        break;\nLABEL_98:\n      result = (signed int)v12 - 1;\n      ++v11;\n      --v38;\n      if ( v33 >= result )\n        goto LABEL_99;\n    }\n    v40 = *(_DWORD *)(v8 + 4 * v39 + 200);\n    v41 = 0;\n    if ( (unsigned int)(v12 + v35 - v11) >= 3 )\n    {\n      v62 = v12 + v34 - v11;\n      v68 = v39;\n      v41 = 0;\n      v43 = v11;\n      v67 = v33;\n      do\n      {\n        v44 = *(_DWORD *)(v36 + 4 * v43 - 12);\n        v45 = *(_DWORD *)(v36 + 4 * v43 - 8);\n        v46 = v37 + v43 + 1;\n        if ( v44 <= v40 )\n          v46 = v41;\n        if ( v44 >= v40 )\n          v40 = *(_DWORD *)(v36 + 4 * v43 - 12);\n        v47 = v33 + 1;\n        if ( v45 <= v40 )\n          v47 = v46;\n        if ( v45 >= v40 )\n          v40 = *(_DWORD *)(v36 + 4 * v43 - 8);\n        v48 = v33 + 2;\n        v49 = *(_DWORD *)(v36 + 4 * v43 - 4);\n        if ( v49 <= v40 )\n          v48 = v47;\n        if ( v49 >= v40 )\n          v40 = *(_DWORD *)(v36 + 4 * v43 - 4);\n        v41 = v33 + 3;\n        v50 = *(_DWORD *)(v36 + 4 * v43);\n        if ( v50 <= v40 )\n          v41 = v48;\n        if ( v50 >= v40 )\n          v40 = *(_DWORD *)(v36 + 4 * v43);\n        LODWORD(v33) = v33 + 4;\n        v43 += 4LL;\n      }\n      while ( (_DWORD)v43 + v37 + (((_BYTE)v12 + v38) & 3) - (_DWORD)v12 != -1 );\n      v42 = v73 + v43 + 1;\n      v8 = v74;\n      v34 = v70;\n      v35 = v69;\n      v33 = v67;\n      v39 = v68;\n      if ( !(v62 & 3) )\n        goto LABEL_96;\n    }\n    else\n    {\n      v42 = v33;\n      if ( !(((_BYTE)v12 + (_BYTE)v34 - (_BYTE)v11) & 3) )\n      {\nLABEL_96:\n        if ( v41 )\n        {\n          v53 = v41;\n          v54 = *(_DWORD *)(v8 + 4LL * v41);\n          *(_DWORD *)(v8 + 4 * v53) = *(_DWORD *)(v8 + 4 * v39);\n          *(_DWORD *)(v8 + 4 * v53 + 200) = *(_DWORD *)(v8 + 4 * v39 + 200);\n          *(_DWORD *)(v8 + 4 * v39) = v54;\n          *(_DWORD *)(v8 + 4 * v39 + 200) = v40;\n          LODWORD(v12) = *(_DWORD *)(v8 + 400);\n        }\n        goto LABEL_98;\n      }\n    }\n    v51 = -(((_BYTE)v12 + v38) & 3);\n    do\n    {\n      v52 = *(_DWORD *)(v8 + 4 * v42 + 200);\n      if ( v52 > v40 )\n        v41 = v42;\n      if ( v52 >= v40 )\n        v40 = *(_DWORD *)(v8 + 4 * v42 + 200);\n      ++v42;\n      ++v51;\n    }\n    while ( v51 );\n    goto LABEL_96;\n  }\nLABEL_99:\n  LODWORD(v55) = v64;\n  if ( qword_88C238 )\n  {\n    sprintf(s, \"Move order for %s: %n\", v72, &v59, v11);\n    if ( *(_DWORD *)(v8 + 400) > (signed int)v55 )\n    {\n      v56 = &s[v59];\n      v55 = (signed int)v55;\n      do\n      {\n        v57 = *(signed int *)(v8 + 4 * v55);\n        v58 = *(_DWORD *)(v8 + 4 * v55) - 20 * (((unsigned __int64)(1717986919 * v57) >> 63) + (1717986919 * v57 >> 35));\n        sprintf(\n          v56,\n          \"%c%d (%d) %n\",\n          v58 + (unsigned int)(v58 > 8) + 64,\n          dword_565C68 + ((unsigned __int64)(-1717986919 * v57) >> 63) + (unsigned int)(-1717986919 * v57 >> 35) + 1,\n          *(unsigned int *)(v8 + 4 * v55 + 200),\n          &v59);\n        v56 += v59;\n        ++v55;\n      }\n      while ( v55 < *(signed int *)(v8 + 400) );\n    }\n    result = sub_4018D0((__int64 *)qword_88C238);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4402b0L", 
            "funcEndAddr": "0x4409baL", 
            "funcName": "sub_4402B0"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_4409C0(int a1, __int64 a2, unsigned int a3, __int64 a4, int a5)\n{\n  __int64 v5; // r12\n  int v6; // ebp\n  int v7; // er8\n  signed __int64 v8; // rcx\n  __int64 v9; // r9\n  signed __int64 v10; // rcx\n  int v11; // er10\n  __int64 v12; // r11\n  int v13; // er15\n  int v14; // ecx\n  int v15; // er14\n  int v16; // eax\n  signed int v17; // eax\n  char v18; // cl\n  bool v19; // al\n  __int64 v20; // rsi\n  char v21; // bl\n  int v22; // eax\n  signed __int64 v23; // rax\n  __int64 v24; // rcx\n  __int64 v25; // rax\n  int v26; // edx\n  signed int v27; // ecx\n  signed __int64 v28; // rax\n  __int64 v29; // rbx\n  int v30; // ebx\n  signed __int64 v31; // rax\n  int v32; // [rsp+10h] [rbp-88h]\n  bool v33; // [rsp+17h] [rbp-81h]\n  __int64 v34; // [rsp+18h] [rbp-80h]\n  __int64 v35; // [rsp+20h] [rbp-78h]\n  int v36; // [rsp+2Ch] [rbp-6Ch]\n  __int64 v37; // [rsp+30h] [rbp-68h]\n  signed __int64 v38; // [rsp+38h] [rbp-60h]\n  char *v39; // [rsp+40h] [rbp-58h]\n  __int64 v40; // [rsp+48h] [rbp-50h]\n  __int64 v41; // [rsp+50h] [rbp-48h]\n  signed __int64 v42; // [rsp+58h] [rbp-40h]\n  signed __int64 v43; // [rsp+60h] [rbp-38h]\n\n  v36 = a5;\n  v5 = a4;\n  v41 = a2;\n  if ( (signed int)a3 > 0 )\n  {\n    v6 = (unsigned __int8)byte_98A1B0[a1];\n    v7 = 3 - v6;\n    v40 = a3;\n    v33 = (v36 ^ v6 | a3 ^ 2) == 0;\n    v8 = 0LL;\n    do\n    {\n      v42 = v8;\n      v9 = *(signed int *)(v41 + 4 * v8);\n      v39 = &byte_98A1B0[v9];\n      v10 = 0LL;\n      v34 = v9;\n      do\n      {\n        v37 = dword_5641B0[v10];\n        v38 = v10 + 1;\n        if ( byte_98A1B0[v9 - v37] == 3 )\n        {\n          v43 = v38 & 3;\n          v11 = v37 + v9;\n          v12 = (signed int)v37 + (signed int)v9;\n          v13 = 0;\n          v32 = v37 + v9;\n          v35 = (signed int)v37 + (signed int)v9;\n          do\n          {\n            v15 = -dword_5641B0[v43];\n            if ( v13 != 1 )\n              v15 = dword_5641B0[v43];\n            v16 = (unsigned __int8)byte_98A1B0[v12];\n            if ( v7 == v16 )\n            {\n              v17 = sub_4083A0(v11);\n              if ( v6 == v36 && v17 >= 5 )\n              {\n                v9 = v34;\n                v18 = byte_98A1B0[v34];\n                v19 = v18 == 3;\n                v12 = v35;\n                if ( v18 == 3 )\n                {\n                  v7 = 3 - v6;\n                  v11 = v32;\n                }\n                else\n                {\n                  v7 = 3 - v6;\n                  v11 = v32;\n                  if ( v18 != (_BYTE)v6 )\n                  {\n                    v20 = 0LL;\n                    while ( v39[v37 + v20] != (_BYTE)v6 )\n                    {\n                      v21 = v39[v15 + v20];\n                      v19 = v21 == 3;\n                      if ( v21 != 3 )\n                      {\n                        v20 += v15;\n                        if ( v21 != (_BYTE)v6 )\n                          continue;\n                      }\n                      goto LABEL_35;\n                    }\n                    goto LABEL_64;\n                  }\n                }\nLABEL_35:\n                if ( v19 )\n                {\n                  v24 = *(signed int *)(v5 + 400);\n                  if ( v24 > 0 )\n                  {\n                    v25 = 0LL;\n                    while ( *(_DWORD *)(v5 + 4 * v25) != (_DWORD)v34 )\n                    {\n                      if ( ++v25 >= v24 )\n                        goto LABEL_64;\n                    }\n                    while ( 1 )\n                    {\n                      v27 = v24 - 1;\n                      if ( v27 <= (signed int)v25 )\n                        break;\n                      v26 = *(_DWORD *)(v5 + 4 * v25 + 204);\n                      *(_DWORD *)(v5 + 4 * v25) = *(_DWORD *)(v5 + 4 * v25 + 4);\n                      *(_DWORD *)(v5 + 4 * v25++ + 200) = v26;\n                      LODWORD(v24) = *(_DWORD *)(v5 + 400);\n                    }\n                    *(_DWORD *)(v5 + 400) = v27;\n                  }\n                }\n                goto LABEL_64;\n              }\n              v12 = v35;\n              LOBYTE(v16) = byte_98A1B0[v35];\n              v7 = 3 - v6;\n              v9 = v34;\n              v11 = v32;\n            }\n            if ( (_BYTE)v16 || v7 != (unsigned __int8)byte_98A1B0[v11 - v15] || byte_98A1B0[v15 + v9] )\n              goto LABEL_64;\n            v22 = sub_4083A0(v11 - v15);\n            v14 = *(_DWORD *)(v5 + 400);\n            if ( v22 == 1 )\n            {\n              v23 = 0LL;\n              if ( v14 <= 0 )\n              {\n                v7 = 3 - v6;\n                v9 = v34;\n                v11 = v32;\n                v12 = v35;\n                if ( 0 != v14 )\n                  goto LABEL_64;\n              }\n              else\n              {\n                v7 = 3 - v6;\n                v9 = v34;\n                v11 = v32;\n                v12 = v35;\n                do\n                {\n                  if ( *(_DWORD *)(v5 + 4 * v23) == v32 )\n                  {\n                    *(_DWORD *)(v5 + 4 * v23 + 200) += 10;\n                    v14 = *(_DWORD *)(v5 + 400);\n                    if ( (_DWORD)v23 == v14 )\n                      goto LABEL_32;\n                    goto LABEL_64;\n                  }\n                  ++v23;\n                }\n                while ( v23 < v14 );\n                if ( (_DWORD)v23 != v14 )\n                  goto LABEL_64;\n              }\nLABEL_32:\n              if ( v14 <= 49 )\n              {\n                *(_DWORD *)(v5 + 4LL * v14) = v11;\n                *(_DWORD *)(v5 + 4LL * *(signed int *)(v5 + 400) + 200) = 10;\nLABEL_63:\n                ++*(_DWORD *)(v5 + 400);\n                goto LABEL_64;\n              }\n            }\n            else\n            {\n              v28 = 0LL;\n              if ( v14 <= 0 )\n              {\n                v7 = 3 - v6;\n                v9 = v34;\n                v11 = v32;\n                v12 = v35;\n              }\n              else\n              {\n                v7 = 3 - v6;\n                v9 = v34;\n                v11 = v32;\n                v12 = v35;\n                do\n                {\n                  if ( *(_DWORD *)(v5 + 4 * v28) == v32 )\n                    break;\n                  ++v28;\n                }\n                while ( v28 < v14 );\n              }\n              v29 = v9 + v15;\n              if ( (_DWORD)v28 == v14 && v14 <= 49 )\n              {\n                *(_DWORD *)(v5 + 4LL * v14) = v11;\n                *(_DWORD *)(v5 + 4LL * *(signed int *)(v5 + 400) + 200) = 0;\n                v14 = *(_DWORD *)(v5 + 400) + 1;\n                *(_DWORD *)(v5 + 400) = v14;\n              }\n              if ( v33 || byte_98A1B0[v29 + v37] != 0 )\n                goto LABEL_64;\n              v30 = v37 + v29;\n              if ( v14 <= 0 )\n              {\n                if ( v14 )\n                  goto LABEL_64;\n              }\n              else\n              {\n                v31 = 0LL;\n                do\n                {\n                  if ( *(_DWORD *)(v5 + 4 * v31) == v30 )\n                    break;\n                  ++v31;\n                }\n                while ( v31 < v14 );\n                if ( (_DWORD)v31 != v14 )\n                  goto LABEL_64;\n              }\n              if ( v14 <= 49 )\n              {\n                *(_DWORD *)(v5 + 4LL * v14) = v30;\n                *(_DWORD *)(v5 + 4LL * *(signed int *)(v5 + 400) + 200) = 0;\n                goto LABEL_63;\n              }\n            }\nLABEL_64:\n            ++v13;\n          }\n          while ( v13 != 2 );\n        }\n        v10 = v38;\n      }\n      while ( v38 != 4 );\n      v8 = v42 + 1;\n    }\n    while ( v42 + 1 != v40 );\n  }\n}\n", 
            "funcStartAddr": "0x4409c0L", 
            "funcEndAddr": "0x440e40L", 
            "funcName": "sub_4409C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_440E40(int a1, __int64 a2)\n{\n  __int64 result; // rax\n  __int64 v3; // rbx\n  _BOOL4 v4; // eax\n  signed __int64 v5; // rax\n  __int64 v6; // r13\n  int v7; // ebp\n  __int64 v8; // r15\n  int v9; // ebx\n  __int64 v10; // rdx\n  __int64 v11; // rcx\n  __int64 v12; // rcx\n  int v13; // er12\n  signed int v14; // er12\n  int v15; // [rsp+Ch] [rbp-2FCh]\n  int v16; // [rsp+10h] [rbp-2F8h]\n  signed int v17; // [rsp+14h] [rbp-2F4h]\n  __int64 v18; // [rsp+18h] [rbp-2F0h]\n  __int64 v19; // [rsp+20h] [rbp-2E8h]\n  int v20; // [rsp+2Ch] [rbp-2DCh]\n  int v21; // [rsp+30h] [rbp-2D8h]\n  int v22; // [rsp+34h] [rbp-2D4h]\n  __int64 v23; // [rsp+38h] [rbp-2D0h]\n  __int64 v24; // [rsp+40h] [rbp-2C8h]\n  __int64 v25; // [rsp+48h] [rbp-2C0h]\n  int v26[174]; // [rsp+50h] [rbp-2B8h]\n\n  v23 = a2;\n  v16 = (unsigned __int8)byte_98A1B0[a1];\n  result = sub_40A880(a1, (__int64)v26, 3);\n  if ( (signed int)result > 0 )\n  {\n    v15 = 3 - v16;\n    v24 = (unsigned int)result;\n    v3 = 0LL;\n    do\n    {\n      v17 = v26[v3];\n      sub_408410(v26[v3], 3, (unsigned __int64)&v20);\n      v4 = sub_408320(v20);\n      v25 = v3;\n      if ( v4 )\n      {\n        v5 = 0LL;\n      }\n      else if ( (unsigned int)sub_408320(v21) )\n      {\n        v5 = 1LL;\n      }\n      else\n      {\n        result = sub_408320(v22);\n        if ( !(_DWORD)result )\n          goto LABEL_34;\n        v5 = 2LL;\n      }\n      result = *(&v20 + v5);\n      v19 = result;\n      if ( result )\n      {\n        v6 = 0LL;\n        while ( 1 )\n        {\n          v18 = dword_5641B0[v6];\n          result = v19 - v18;\n          if ( byte_98A1B0[result] == 3 )\n          {\n            result = (unsigned __int8)byte_98A1B0[v18 + v19];\n            if ( v15 == (_DWORD)result )\n              break;\n          }\nLABEL_33:\n          if ( ++v6 == 4 )\n            goto LABEL_34;\n        }\n        v7 = v18 + v19;\n        v8 = ((_BYTE)v6 + 1) & 3;\n        v9 = 0;\n        while ( 2 )\n        {\n          v13 = -dword_5641B0[v8];\n          if ( v9 != 1 )\n            v13 = dword_5641B0[v8];\n          result = v7 - v13;\n          if ( byte_98A1B0[result] == (_BYTE)v16 )\n          {\n            result = sub_40B5B0(v7 - v13, a1);\n            if ( (_DWORD)result )\n            {\n              v14 = v7 + v13;\n              if ( !byte_98A1B0[v14] )\n              {\n                result = sub_40B0A0(v14, v17);\n                if ( (_DWORD)result )\n                {\n                  result = v18;\n                  if ( !byte_98A1B0[v14 + v18] )\n                  {\n                    result = sub_40B0A0((signed int)v18 + v14, v17);\n                    if ( (_DWORD)result )\n                    {\n                      result = sub_4093D0(v14, v16, 3, 0LL);\n                      if ( (signed int)result >= 3 )\n                      {\n                        result = sub_4093D0((signed int)v18 + v14, v15, 4, 0LL);\n                        if ( (signed int)result <= 3 )\n                        {\n                          v10 = v23;\n                          result = *(signed int *)(v23 + 400);\n                          v11 = 0LL;\n                          if ( result <= 0 )\n                          {\nLABEL_22:\n                            if ( (_DWORD)v11 != (_DWORD)result )\n                              goto LABEL_32;\n                          }\n                          else\n                          {\n                            while ( *(_DWORD *)(v23 + 4 * v11) != v14 )\n                            {\n                              if ( ++v11 >= result )\n                                goto LABEL_22;\n                            }\n                            *(_DWORD *)(v23 + 4 * v11 + 200) += 10;\n                            result = *(unsigned int *)(v10 + 400);\n                            if ( (_DWORD)v11 != (_DWORD)result )\n                              goto LABEL_32;\n                          }\n                          if ( (signed int)result <= 49 )\n                          {\n                            v12 = v23;\n                            *(_DWORD *)(v23 + 4LL * (signed int)result) = v14;\n                            result = *(signed int *)(v12 + 400);\n                            *(_DWORD *)(v12 + 4 * result + 200) = 10;\n                            ++*(_DWORD *)(v12 + 400);\n                          }\n                          goto LABEL_32;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\nLABEL_32:\n          if ( ++v9 == 2 )\n            goto LABEL_33;\n          continue;\n        }\n      }\nLABEL_34:\n      v3 = v25 + 1;\n    }\n    while ( v25 + 1 != v24 );\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x440e40L", 
            "funcEndAddr": "0x4410fcL", 
            "funcName": "sub_440E40"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_441100(int a1, int a2, __int64 a3)\n{\n  __int64 v3; // r13\n  __int64 result; // rax\n  int v5; // er12\n  __int64 v6; // rbx\n  __int64 v7; // rbp\n  signed int v8; // ebp\n  __int64 i; // rcx\n  int v10; // [rsp+0h] [rbp-34h]\n\n  v3 = a3;\n  result = (unsigned __int8)byte_98A1B0[a1];\n  v10 = result;\n  v5 = 3 - result;\n  v6 = 0LL;\n  do\n  {\n    v7 = dword_5641B0[v6];\n    if ( !byte_98A1B0[v7 + a2] )\n    {\n      result = sub_4093D0(a2, v5, 3, 0LL);\n      if ( (signed int)result <= 2 )\n      {\n        v8 = a2 + v7;\n        result = sub_40AD70(v8, v10);\n        if ( !(_DWORD)result )\n        {\n          result = *(signed int *)(v3 + 400);\n          for ( i = 0LL; i < result; ++i )\n          {\n            if ( *(_DWORD *)(v3 + 4 * i) == v8 )\n              break;\n          }\n          if ( (_DWORD)i == (_DWORD)result && (signed int)result <= 49 )\n          {\n            *(_DWORD *)(v3 + 4 * result) = v8;\n            result = *(signed int *)(v3 + 400);\n            *(_DWORD *)(v3 + 4 * result + 200) = 0;\n            ++*(_DWORD *)(v3 + 400);\n          }\n        }\n      }\n    }\n    ++v6;\n  }\n  while ( v6 != 4 );\n  return result;\n}\n", 
            "funcStartAddr": "0x441100L", 
            "funcEndAddr": "0x4411ddL", 
            "funcName": "sub_441100"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4411E0(__int64 a1, __int64 a2)\n{\n  __int64 result; // rax\n  signed __int64 v3; // rbp\n  int v4; // eax\n  __int64 v5; // rax\n  __int64 v6; // rcx\n  int v7; // [rsp+8h] [rbp-2B0h]\n  int v8; // [rsp+Ch] [rbp-2ACh]\n  int v9[170]; // [rsp+10h] [rbp-2A8h]\n\n  result = sub_44E030(a1, &v8, v9, 4LL);\n  if ( v8 > 0 )\n  {\n    v3 = 0LL;\n    do\n    {\n      v4 = sub_4083A0(v9[v3]);\n      if ( v4 == 2 )\n      {\n        sub_441940((unsigned int)a1, (unsigned int)v9[v3], a2);\n      }\n      else if ( v4 == 1 )\n      {\n        sub_408410(v9[v3], 1, (unsigned __int64)&v7);\n        v5 = *(signed int *)(a2 + 400);\n        if ( v5 > 0 )\n        {\n          v6 = 0LL;\n          do\n          {\n            if ( *(_DWORD *)(a2 + 4 * v6) == v7 )\n              break;\n            ++v6;\n          }\n          while ( v6 < v5 );\n          if ( (_DWORD)v6 != (_DWORD)v5 )\n            goto LABEL_15;\nLABEL_12:\n          if ( (signed int)v5 <= 49 )\n          {\n            *(_DWORD *)(a2 + 4 * v5) = v7;\n            *(_DWORD *)(a2 + 4LL * (signed int)(*(_DWORD *)(a2 + 400))++ + 200) = 0;\n          }\n          goto LABEL_15;\n        }\n        if ( !(_DWORD)v5 )\n          goto LABEL_12;\n      }\nLABEL_15:\n      ++v3;\n      result = v8;\n    }\n    while ( v3 < v8 );\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4411e0L", 
            "funcEndAddr": "0x4412dfL", 
            "funcName": "sub_4411E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4412E0(int a1, __int64 a2, __int64 a3)\n{\n  __int64 v3; // rbx\n  __int64 v4; // rax\n  __int64 result; // rax\n  int v6; // edx\n  int v7; // ebp\n  signed int v8; // er14\n  __int64 v9; // rcx\n  __int64 v10; // r12\n  __int64 v11; // r13\n  unsigned int v12; // er13\n  __int64 v13; // r14\n  __int64 v14; // rbp\n  __int64 v15; // rax\n  __int64 v16; // rcx\n  unsigned int v17; // eax\n  __int64 v18; // r14\n  __int64 v19; // rbp\n  __int64 v20; // rax\n  __int64 v21; // rcx\n  int v22; // [rsp+Ch] [rbp-30Ch]\n  int v23; // [rsp+10h] [rbp-308h]\n  int v24; // [rsp+14h] [rbp-304h]\n  int v25; // [rsp+18h] [rbp-300h]\n  int v26; // [rsp+1Ch] [rbp-2FCh]\n  __int64 v27; // [rsp+20h] [rbp-2F8h]\n  __int64 v28; // [rsp+28h] [rbp-2F0h]\n  int v29[6]; // [rsp+30h] [rbp-2E8h]\n  __int64 v30; // [rsp+48h] [rbp-2D0h]\n  __int64 v31; // [rsp+50h] [rbp-2C8h]\n  __int64 v32; // [rsp+58h] [rbp-2C0h]\n  int v33[174]; // [rsp+60h] [rbp-2B8h]\n\n  v3 = a3;\n  v31 = a2;\n  v22 = (unsigned __int8)byte_98A1B0[a1];\n  v4 = sub_4083A0(a1);\n  v27 = v4;\n  result = (unsigned int)v4 | 1;\n  if ( (_DWORD)result != 3 )\n  {\n    v6 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      (__int64)\"engine/reading.c\",\n      0x796u,\n      (__int64)\"liberties == 2 || liberties == 3\",\n      v6 - 1,\n      a1 - 20 * v6 - 1);\n  }\n  if ( (signed int)v27 > 0 )\n  {\n    v7 = 3 - v22;\n    v8 = v27 + 1;\n    v30 = (unsigned int)v27;\n    v9 = 0LL;\n    v25 = 3 - v22;\n    v24 = v27 + 1;\n    do\n    {\n      v32 = v9;\n      v28 = *(signed int *)(v31 + 4 * v9);\n      v10 = 0LL;\n      do\n      {\n        v11 = dword_5641B0[v10];\n        result = (unsigned __int8)byte_98A1B0[v11 + v28];\n        if ( v7 == (_DWORD)result )\n        {\n          v12 = v28 + v11;\n          result = sub_4083A0(v12);\n          if ( (signed int)result <= v8 )\n          {\n            result = sub_408FD0(a1, v12);\n            if ( (signed int)result >= 2 )\n            {\n              v26 = sub_408410(v12, 4, (unsigned __int64)v29);\n              if ( v26 > 0 )\n              {\n                v13 = (unsigned int)v26;\n                v14 = 0LL;\n                do\n                {\n                  if ( !(unsigned int)sub_40B0A0(v29[v14], a1) && !(unsigned int)sub_40AD70(v29[v14], v22) )\n                  {\n                    v15 = *(signed int *)(v3 + 400);\n                    if ( v15 <= 0 )\n                    {\n                      if ( !(_DWORD)v15 )\n                        goto LABEL_20;\n                    }\n                    else\n                    {\n                      v16 = 0LL;\n                      do\n                      {\n                        if ( *(_DWORD *)(v3 + 4 * v16) == v29[v14] )\n                          break;\n                        ++v16;\n                      }\n                      while ( v16 < v15 );\n                      if ( (_DWORD)v16 == (_DWORD)v15 )\n                      {\nLABEL_20:\n                        if ( (signed int)v15 <= 49 )\n                        {\n                          *(_DWORD *)(v3 + 4 * v15) = v29[v14];\n                          *(_DWORD *)(v3 + 4LL * (signed int)(*(_DWORD *)(v3 + 400))++ + 200) = 0;\n                        }\n                        goto LABEL_22;\n                      }\n                    }\n                  }\nLABEL_22:\n                  ++v14;\n                }\n                while ( v14 != v13 );\n              }\n              result = (unsigned int)v26;\n              v7 = v25;\n              v8 = v24;\n              if ( v26 <= (signed int)v27 )\n              {\n                v17 = sub_40A880(v12, (__int64)v33, 1);\n                if ( (signed int)v17 > 0 )\n                {\n                  v18 = v17;\n                  v19 = 0LL;\n                  do\n                  {\n                    sub_4401B0(v33[v19], v3);\n                    sub_408410(v33[v19], 1, (unsigned __int64)&v23);\n                    if ( !(unsigned int)sub_40AD70(v23, v22) )\n                    {\n                      v20 = *(signed int *)(v3 + 400);\n                      if ( v20 > 0 )\n                      {\n                        v21 = 0LL;\n                        do\n                        {\n                          if ( *(_DWORD *)(v3 + 4 * v21) == v23 )\n                            break;\n                          ++v21;\n                        }\n                        while ( v21 < v20 );\n                        if ( (_DWORD)v21 != (_DWORD)v20 )\n                          goto LABEL_36;\nLABEL_34:\n                        if ( (signed int)v20 <= 49 )\n                        {\n                          *(_DWORD *)(v3 + 4 * v20) = v23;\n                          *(_DWORD *)(v3 + 4LL * (signed int)(*(_DWORD *)(v3 + 400))++ + 200) = 0;\n                        }\n                        goto LABEL_36;\n                      }\n                      if ( !(_DWORD)v20 )\n                        goto LABEL_34;\n                    }\nLABEL_36:\n                    ++v19;\n                  }\n                  while ( v19 != v18 );\n                }\n                result = sub_4420F0(v12, v3);\n                v7 = v25;\n                v8 = v24;\n              }\n            }\n          }\n        }\n        ++v10;\n      }\n      while ( v10 != 4 );\n      v9 = v32 + 1;\n    }\n    while ( v32 + 1 != v30 );\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4412e0L", 
            "funcEndAddr": "0x441604L", 
            "funcName": "sub_4412E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_441610(int a1, __int64 a2)\n{\n  int v2; // er15\n  int *v3; // rbp\n  __int64 result; // rax\n  int v5; // er13\n  __int64 v6; // r12\n  signed int v7; // er14\n  signed int v8; // eax\n  signed int v9; // ebx\n  bool v10; // ST0F_1\n  signed int v11; // eax\n  int v12; // ecx\n  int v13; // ecx\n  int v14; // eax\n  int v15; // eax\n  __int64 v16; // rdx\n  int v17; // eax\n  __int64 v18; // rcx\n  __int64 v19; // rax\n  __int64 v20; // rax\n  __int64 v21; // rbx\n  int v22; // er12\n  __int64 v23; // r15\n  int v24; // ebp\n  __int64 v25; // rcx\n  __int64 v26; // [rsp+10h] [rbp-9E8h]\n  int v27; // [rsp+18h] [rbp-9E0h]\n  int v28; // [rsp+1Ch] [rbp-9DCh]\n  int v29; // [rsp+20h] [rbp-9D8h]\n  int v30; // [rsp+24h] [rbp-9D4h]\n  __int64 v31; // [rsp+28h] [rbp-9D0h]\n  int v32[52]; // [rsp+30h] [rbp-9C8h]\n  int s[400]; // [rsp+100h] [rbp-8F8h]\n  char v34; // [rsp+740h] [rbp-2B8h]\n\n  v2 = (unsigned __int8)byte_98A1B0[a1];\n  memset(s, 0, 0x640uLL);\n  v3 = (int *)&v34;\n  result = sub_40A880(a1, (__int64)&v34, 3);\n  if ( (signed int)result <= 0 )\n    return result;\n  v26 = 0LL;\n  v31 = a2;\n  v30 = v2;\n  v5 = 3 - v2;\n  v6 = (unsigned int)result;\n  do\n  {\n    sub_408410(*v3, 3, (unsigned __int64)&v27);\n    v7 = sub_4093D0(v27, v5, 4, 0LL);\n    v8 = sub_4093D0(v28, v5, 4, 0LL);\n    v9 = v8;\n    if ( v7 < 4 || v8 <= 3 )\n    {\n      v10 = v8 > 3;\n      v11 = sub_4093D0(v29, v5, 4, 0LL);\n      if ( (v10 || v7 > 3) != 1 || v11 <= 3 )\n      {\n        if ( v7 < 4 || (v12 = v27, s[v27]) )\n        {\n          if ( v9 < 4 || (v13 = v28, s[v28]) )\n          {\n            if ( v11 < 4 || (v14 = v29, s[v29]) )\n            {\n              v15 = v27;\n              if ( s[v27] )\n              {\n                v16 = v26;\n              }\n              else\n              {\n                s[v27] = 1;\n                v16 = (unsigned int)(v26 + 1);\n                v32[(signed int)v26] = v15;\n              }\n              v17 = v28;\n              if ( !s[v28] )\n              {\n                s[v28] = 1;\n                v18 = (signed int)v16;\n                v16 = (unsigned int)(v16 + 1);\n                v32[v18] = v17;\n              }\n              v14 = v29;\n              if ( s[v29] )\n              {\n                v26 = v16;\n                goto LABEL_25;\n              }\n              s[v29] = 1;\n            }\n            else\n            {\n              s[v29] = 1;\n              LODWORD(v16) = v26;\n            }\n            v26 = (unsigned int)(v16 + 1);\n            v32[(signed int)v16] = v14;\n          }\n          else\n          {\n            s[v28] = 1;\n            v20 = (signed int)v26;\n            v26 = (unsigned int)(v26 + 1);\n            v32[v20] = v13;\n          }\n        }\n        else\n        {\n          s[v27] = 1;\n          v19 = (signed int)v26;\n          v26 = (unsigned int)(v26 + 1);\n          v32[v19] = v12;\n        }\n      }\n    }\nLABEL_25:\n    ++v3;\n    --v6;\n  }\n  while ( v6 );\n  result = v26;\n  v21 = v31;\n  v22 = v30;\n  if ( (signed int)v26 > 0 )\n  {\n    v23 = 0LL;\n    while ( 1 )\n    {\n      v24 = v32[v23];\n      if ( dword_98A7F4 >= dword_98A758 )\n      {\n        result = sub_4093D0(v24, v22, 2, 0LL);\n        if ( (signed int)result < 2 )\n          goto LABEL_38;\n      }\n      result = *(signed int *)(v21 + 400);\n      v25 = 0LL;\n      if ( result > 0 )\n        break;\nLABEL_35:\n      if ( (_DWORD)v25 == (_DWORD)result )\n        goto LABEL_36;\nLABEL_38:\n      if ( ++v23 == (unsigned int)v26 )\n        return result;\n    }\n    while ( *(_DWORD *)(v21 + 4 * v25) != v24 )\n    {\n      if ( ++v25 >= result )\n        goto LABEL_35;\n    }\n    *(_DWORD *)(v21 + 4 * v25 + 200) -= 2;\n    result = *(unsigned int *)(v21 + 400);\n    if ( (_DWORD)v25 != (_DWORD)result )\n      goto LABEL_38;\nLABEL_36:\n    if ( (signed int)result <= 49 )\n    {\n      *(_DWORD *)(v21 + 4LL * (signed int)result) = v24;\n      result = *(signed int *)(v21 + 400);\n      *(_DWORD *)(v21 + 4 * result + 200) = -2;\n      ++*(_DWORD *)(v21 + 400);\n    }\n    goto LABEL_38;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x441610L", 
            "funcEndAddr": "0x441940L", 
            "funcName": "sub_441610"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_441940(int a1, int a2, __int64 a3)\n{\n  __int64 v3; // r15\n  int v4; // er14\n  int v5; // edx\n  __int64 result; // rax\n  __int64 v7; // rcx\n  int v8; // er12\n  __int64 v9; // rax\n  __int64 v10; // rcx\n  __int64 v11; // rax\n  __int64 v12; // rcx\n  __int64 v13; // rdx\n  signed int v14; // er13\n  signed __int64 v15; // rbx\n  __int64 v16; // rax\n  __int64 v17; // rcx\n  __int64 v18; // rcx\n  int v19; // [rsp+8h] [rbp-2C0h]\n  unsigned int v20; // [rsp+Ch] [rbp-2BCh]\n  int v21; // [rsp+10h] [rbp-2B8h]\n\n  v3 = a3;\n  v4 = (unsigned __int8)byte_98A1B0[a1];\n  if ( (unsigned int)sub_4083A0(a2) != 2 )\n  {\n    v5 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0((__int64)\"engine/reading.c\", 0xEC2u, (__int64)\"countlib(adj) == 2\", v5 - 1, -20 * v5 + a2 - 1);\n  }\n  result = sub_40A880(a2, (__int64)&v21, 1);\n  if ( (_DWORD)result == 1 )\n  {\n    if ( (signed int)sub_4083A0(a1) >= 3 )\n    {\n      sub_408410(v21, 1, (unsigned __int64)&v19);\n      result = sub_40AD70(v19, v4);\n      if ( !(_DWORD)result )\n      {\n        result = *(signed int *)(v3 + 400);\n        if ( result <= 0 )\n        {\n          LODWORD(v7) = 0;\n        }\n        else\n        {\n          v7 = 0LL;\n          do\n          {\n            if ( *(_DWORD *)(v3 + 4 * v7) == v19 )\n              break;\n            ++v7;\n          }\n          while ( v7 < result );\n        }\n        if ( (_DWORD)v7 == (_DWORD)result && (signed int)result <= 49 )\n        {\n          *(_DWORD *)(v3 + 4 * result) = v19;\n          result = *(signed int *)(v3 + 400);\n          *(_DWORD *)(v3 + 4 * result + 200) = 0;\nLABEL_23:\n          ++*(_DWORD *)(v3 + 400);\n          return result;\n        }\n      }\n      return result;\n    }\n  }\n  else if ( (signed int)result > 1 )\n  {\n    return result;\n  }\n  v8 = 3 - v4;\n  sub_408410(a2, 2, (unsigned __int64)&v19);\n  if ( (signed int)sub_4093D0(v19, 3 - v4, 3, 0LL) <= 2 && !(unsigned int)sub_40AD70(v20, v4) )\n  {\n    v9 = *(signed int *)(v3 + 400);\n    if ( v9 <= 0 )\n    {\n      LODWORD(v10) = 0;\n    }\n    else\n    {\n      v10 = 0LL;\n      do\n      {\n        if ( *(_DWORD *)(v3 + 4 * v10) == v20 )\n          break;\n        ++v10;\n      }\n      while ( v10 < v9 );\n    }\n    if ( (_DWORD)v10 == (_DWORD)v9 && (signed int)v9 <= 49 )\n    {\n      *(_DWORD *)(v3 + 4 * v9) = v20;\n      *(_DWORD *)(v3 + 4LL * (signed int)(*(_DWORD *)(v3 + 400))++ + 200) = 0;\n    }\n  }\n  if ( (signed int)sub_4093D0(v20, v8, 3, 0LL) < 3 && !(unsigned int)sub_40AD70(v19, v4) )\n  {\n    v11 = *(signed int *)(v3 + 400);\n    if ( v11 <= 0 )\n    {\n      LODWORD(v12) = 0;\n    }\n    else\n    {\n      v12 = 0LL;\n      do\n      {\n        if ( *(_DWORD *)(v3 + 4 * v12) == v19 )\n          break;\n        ++v12;\n      }\n      while ( v12 < v11 );\n    }\n    if ( (_DWORD)v12 == (_DWORD)v11 && (signed int)v11 <= 49 )\n    {\n      *(_DWORD *)(v3 + 4 * v11) = v19;\n      *(_DWORD *)(v3 + 4LL * (signed int)(*(_DWORD *)(v3 + 400))++ + 200) = 0;\n    }\n  }\n  result = v20;\n  if ( v19 != v20 + 21 && v19 != (_DWORD)result - 19 && v19 != (_DWORD)result + 19 && v19 != (_DWORD)result - 21 )\n    return result;\n  LODWORD(v13) = v19;\n  if ( v19 < (signed int)result )\n    LODWORD(v13) = result;\n  v13 = (signed int)v13;\n  if ( v19 <= (signed int)result )\n    LODWORD(result) = v19;\n  v14 = v13 - 20;\n  v15 = (signed int)result + 20LL;\n  if ( v8 != (unsigned __int8)byte_98A19C[v13] || !(unsigned int)sub_408320(v15) || !(unsigned int)sub_40B5B0(v14, a2) )\n  {\n    result = (unsigned __int8)byte_98A1B0[v15];\n    if ( v8 != (_DWORD)result )\n      return result;\n    result = sub_408320(v14);\n    if ( !(_DWORD)result )\n      return result;\n    result = sub_40B5B0(v15, a2);\n    if ( !(_DWORD)result )\n      return result;\n  }\n  if ( (unsigned int)sub_408320(v19) && !(unsigned int)sub_40AD70(v20, v4) )\n  {\n    v16 = *(signed int *)(v3 + 400);\n    if ( v16 > 0 )\n    {\n      v17 = 0LL;\n      while ( *(_DWORD *)(v3 + 4 * v17) != v20 )\n      {\n        if ( ++v17 >= v16 )\n          goto LABEL_63;\n      }\n      ++*(_DWORD *)(v3 + 4 * v17 + 200);\n      LODWORD(v16) = *(_DWORD *)(v3 + 400);\nLABEL_63:\n      if ( (_DWORD)v17 != (_DWORD)v16 )\n        goto LABEL_66;\n      goto LABEL_64;\n    }\n    if ( !(_DWORD)v16 )\n    {\nLABEL_64:\n      if ( (signed int)v16 <= 49 )\n      {\n        *(_DWORD *)(v3 + 4LL * (signed int)v16) = v20;\n        *(_DWORD *)(v3 + 4LL * (signed int)(*(_DWORD *)(v3 + 400))++ + 200) = 1;\n      }\n      goto LABEL_66;\n    }\n  }\nLABEL_66:\n  result = sub_408320(v20);\n  if ( !(_DWORD)result )\n    return result;\n  result = sub_40AD70(v19, v4);\n  if ( (_DWORD)result )\n    return result;\n  result = *(signed int *)(v3 + 400);\n  if ( result <= 0 )\n  {\n    if ( (_DWORD)result )\n      return result;\n  }\n  else\n  {\n    v18 = 0LL;\n    while ( *(_DWORD *)(v3 + 4 * v18) != v19 )\n    {\n      if ( ++v18 >= result )\n        goto LABEL_77;\n    }\n    ++*(_DWORD *)(v3 + 4 * v18 + 200);\n    result = *(unsigned int *)(v3 + 400);\nLABEL_77:\n    if ( (_DWORD)v18 != (_DWORD)result )\n      return result;\n  }\n  if ( (signed int)result <= 49 )\n  {\n    *(_DWORD *)(v3 + 4LL * (signed int)result) = v19;\n    result = *(signed int *)(v3 + 400);\n    *(_DWORD *)(v3 + 4 * result + 200) = 1;\n    goto LABEL_23;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x441940L", 
            "funcEndAddr": "0x441d54L", 
            "funcName": "sub_441940"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_441D60(int a1, __int64 a2, int a3)\n{\n  int v3; // er13\n  __int64 result; // rax\n  int v5; // er12\n  __int64 v6; // r14\n  int v7; // ebp\n  __int64 v8; // rax\n  __int64 v9; // rcx\n  _BOOL4 v10; // er15\n  __int64 v11; // rax\n  __int64 v12; // rcx\n  __int64 v13; // rbp\n  __int64 v14; // rax\n  __int64 v15; // rcx\n  __int64 v16; // rcx\n  int v17; // [rsp+8h] [rbp-560h]\n  int v18; // [rsp+Ch] [rbp-55Ch]\n  int v19; // [rsp+10h] [rbp-558h]\n  int v20; // [rsp+14h] [rbp-554h]\n  int v21; // [rsp+18h] [rbp-550h]\n  int v22; // [rsp+20h] [rbp-548h]\n  _BOOL4 v23; // [rsp+24h] [rbp-544h]\n  __int64 v24; // [rsp+28h] [rbp-540h]\n  int v25[160]; // [rsp+30h] [rbp-538h]\n  char v26; // [rsp+2B0h] [rbp-2B8h]\n\n  v19 = a3;\n  v22 = a1;\n  v3 = (unsigned __int8)byte_98A1B0[a1];\n  result = sub_40A880(a1, (__int64)v25, 2);\n  if ( (signed int)result > 0 )\n  {\n    v5 = 3 - v3;\n    v24 = (unsigned int)result;\n    v6 = 0LL;\n    do\n    {\n      v7 = v25[v6];\n      if ( dword_98A7F4 > dword_98A75C )\n      {\n        result = sub_40A880(v7, (__int64)&v26, 1);\n        if ( (signed int)result > 0 )\n          goto LABEL_58;\n      }\n      sub_408410(v7, 2, (unsigned __int64)&v17);\n      v23 = sub_40AD70(v17, v3);\n      if ( !v23 || (unsigned int)sub_408130(v17, v3, 0LL) || !v19 && (signed int)sub_4093D0(v17, v5, 5, 0LL) <= 4 )\n      {\n        v8 = *(signed int *)(a2 + 400);\n        if ( v8 <= 0 )\n        {\n          if ( (_DWORD)v8 )\n            goto LABEL_18;\n        }\n        else\n        {\n          v9 = 0LL;\n          do\n          {\n            if ( *(_DWORD *)(a2 + 4 * v9) == v17 )\n              break;\n            ++v9;\n          }\n          while ( v9 < v8 );\n          if ( (_DWORD)v9 != (_DWORD)v8 )\n            goto LABEL_18;\n        }\n        if ( (signed int)v8 <= 49 )\n        {\n          *(_DWORD *)(a2 + 4 * v8) = v17;\n          *(_DWORD *)(a2 + 4LL * (signed int)(*(_DWORD *)(a2 + 400))++ + 200) = 0;\n        }\n      }\nLABEL_18:\n      v10 = sub_40AD70(v18, v3);\n      if ( v10 && !(unsigned int)sub_408130(v18, v3, 0LL) && (v19 || (signed int)sub_4093D0(v18, v5, 5, 0LL) > 4) )\n        goto LABEL_31;\n      v11 = *(signed int *)(a2 + 400);\n      if ( v11 <= 0 )\n      {\n        if ( (_DWORD)v11 )\n          goto LABEL_31;\n      }\n      else\n      {\n        v12 = 0LL;\n        do\n        {\n          if ( *(_DWORD *)(a2 + 4 * v12) == v18 )\n            break;\n          ++v12;\n        }\n        while ( v12 < v11 );\n        if ( (_DWORD)v12 != (_DWORD)v11 )\n          goto LABEL_31;\n      }\n      if ( (signed int)v11 <= 49 )\n      {\n        *(_DWORD *)(a2 + 4 * v11) = v18;\n        *(_DWORD *)(a2 + 4LL * (signed int)(*(_DWORD *)(a2 + 400))++ + 200) = 0;\n      }\nLABEL_31:\n      if ( dword_98A7F4 <= dword_98A758 || (result = sub_40A360(v22, v7, 0LL), (_DWORD)result) )\n      {\n        result = sub_4401B0(v7, a2);\n        if ( v23 && v10 )\n        {\n          v13 = 0LL;\n          while ( 2 )\n          {\n            result = sub_4093D0(*(&v17 + v13), v5, 3, &v20);\n            if ( (_DWORD)result != 2 )\n              goto LABEL_57;\n            if ( !(unsigned int)sub_40AD70(v20, v3) )\n            {\n              v14 = *(signed int *)(a2 + 400);\n              if ( v14 <= 0 )\n              {\n                if ( !(_DWORD)v14 )\n                {\nLABEL_47:\n                  if ( (signed int)v14 <= 49 )\n                  {\n                    *(_DWORD *)(a2 + 4 * v14) = v20;\n                    *(_DWORD *)(a2 + 4LL * (signed int)(*(_DWORD *)(a2 + 400))++ + 200) = 0;\n                  }\n                }\n              }\n              else\n              {\n                v15 = 0LL;\n                do\n                {\n                  if ( *(_DWORD *)(a2 + 4 * v15) == v20 )\n                    break;\n                  ++v15;\n                }\n                while ( v15 < v14 );\n                if ( (_DWORD)v15 == (_DWORD)v14 )\n                  goto LABEL_47;\n              }\n            }\n            result = sub_40AD70(v21, v3);\n            if ( !(_DWORD)result )\n            {\n              result = *(signed int *)(a2 + 400);\n              if ( result > 0 )\n              {\n                v16 = 0LL;\n                do\n                {\n                  if ( *(_DWORD *)(a2 + 4 * v16) == v21 )\n                    break;\n                  ++v16;\n                }\n                while ( v16 < result );\n                if ( (_DWORD)v16 != (_DWORD)result )\n                  goto LABEL_57;\nLABEL_55:\n                if ( (signed int)result <= 49 )\n                {\n                  *(_DWORD *)(a2 + 4 * result) = v21;\n                  result = *(signed int *)(a2 + 400);\n                  *(_DWORD *)(a2 + 4 * result + 200) = 0;\n                  ++*(_DWORD *)(a2 + 400);\n                }\n                goto LABEL_57;\n              }\n              if ( !(_DWORD)result )\n                goto LABEL_55;\n            }\nLABEL_57:\n            if ( ++v13 == 2 )\n              break;\n            continue;\n          }\n        }\n      }\nLABEL_58:\n      ++v6;\n    }\n    while ( v6 != v24 );\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x441d60L", 
            "funcEndAddr": "0x4420efL", 
            "funcName": "sub_441D60"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4420F0(int a1, __int64 a2)\n{\n  __int64 result; // rax\n  __int64 v3; // r15\n  __int64 v4; // r12\n  __int64 v5; // rbp\n  __int64 v6; // rax\n  signed int v7; // edi\n  int v8; // eax\n  __int64 v9; // rcx\n  signed int v10; // edi\n  __int64 v11; // rcx\n  int v12; // [rsp+8h] [rbp-8F0h]\n  int v13; // [rsp+Ch] [rbp-8ECh]\n  int s[400]; // [rsp+10h] [rbp-8E8h]\n  int v15[170]; // [rsp+650h] [rbp-2A8h]\n\n  memset(s, 0, 0x640uLL);\n  result = sub_40A880(a1, (__int64)v15, 2);\n  if ( (signed int)result > 0 )\n  {\n    v3 = a1;\n    v4 = (unsigned int)result;\n    v5 = 0LL;\n    do\n    {\n      sub_408410(v15[v5], 2, (unsigned __int64)&v12);\n      v7 = v12;\n      v8 = s[v12] + 1;\n      s[v12] = v8;\n      if ( v8 == 2 && !(unsigned int)sub_40AD70(v7, (unsigned __int8)byte_98A1B0[v3]) )\n      {\n        v6 = *(signed int *)(a2 + 400);\n        if ( v6 <= 0 )\n        {\n          if ( (_DWORD)v6 )\n            goto LABEL_20;\n        }\n        else\n        {\n          v9 = 0LL;\n          do\n          {\n            if ( *(_DWORD *)(a2 + 4 * v9) == v12 )\n            {\n              ++*(_DWORD *)(a2 + 4 * v9 + 200);\n              LODWORD(v6) = *(_DWORD *)(a2 + 400);\n              if ( (_DWORD)v9 == (_DWORD)v6 )\n                goto LABEL_18;\n              goto LABEL_20;\n            }\n            ++v9;\n          }\n          while ( v9 < v6 );\n          if ( (_DWORD)v9 != (_DWORD)v6 )\n            goto LABEL_20;\n        }\nLABEL_18:\n        if ( (signed int)v6 <= 49 )\n        {\n          *(_DWORD *)(a2 + 4LL * (signed int)v6) = v12;\n          *(_DWORD *)(a2 + 4LL * (signed int)(*(_DWORD *)(a2 + 400))++ + 200) = 1;\n        }\n      }\nLABEL_20:\n      v10 = v13;\n      result = (unsigned int)(s[v13] + 1);\n      s[v13] = result;\n      if ( (_DWORD)result != 2 )\n        goto LABEL_29;\n      result = sub_40AD70(v10, (unsigned __int8)byte_98A1B0[v3]);\n      if ( (_DWORD)result )\n        goto LABEL_29;\n      result = *(signed int *)(a2 + 400);\n      if ( result > 0 )\n      {\n        v11 = 0LL;\n        do\n        {\n          if ( *(_DWORD *)(a2 + 4 * v11) == v13 )\n          {\n            ++*(_DWORD *)(a2 + 4 * v11 + 200);\n            result = *(unsigned int *)(a2 + 400);\n            if ( (_DWORD)v11 == (_DWORD)result )\n              goto LABEL_27;\n            goto LABEL_29;\n          }\n          ++v11;\n        }\n        while ( v11 < result );\n        if ( (_DWORD)v11 != (_DWORD)result )\n          goto LABEL_29;\nLABEL_27:\n        if ( (signed int)result <= 49 )\n        {\n          *(_DWORD *)(a2 + 4LL * (signed int)result) = v13;\n          result = *(signed int *)(a2 + 400);\n          *(_DWORD *)(a2 + 4 * result + 200) = 1;\n          ++*(_DWORD *)(a2 + 400);\n        }\n        goto LABEL_29;\n      }\n      if ( !(_DWORD)result )\n        goto LABEL_27;\nLABEL_29:\n      ++v5;\n    }\n    while ( v5 != v4 );\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4420f0L", 
            "funcEndAddr": "0x4422cdL", 
            "funcName": "sub_4420F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4422D0(int a1, _DWORD *a2, unsigned int a3, unsigned int a4)\n{\n  unsigned int v4; // er13\n  int v5; // er14\n  int v6; // ebp\n  int v7; // edx\n  int v8; // edx\n  int v9; // eax\n  __int64 v10; // rbp\n  __int64 v11; // rbx\n  int v12; // eax\n  int v13; // ecx\n  signed __int64 v14; // rcx\n  int v15; // edx\n  unsigned int v16; // er15\n  signed int v17; // er14\n  __int64 v18; // r13\n  signed int v19; // eax\n  signed __int64 i; // rcx\n  signed __int64 v21; // rcx\n  __int64 v22; // rbx\n  __int64 v23; // rdi\n  signed __int64 v24; // rcx\n  int *v25; // rbp\n  unsigned int v26; // eax\n  unsigned int v27; // er13\n  __int64 v28; // rbx\n  int v29; // er12\n  unsigned int v30; // ebx\n  __int64 v31; // rbp\n  int v32; // er12\n  int v33; // er13\n  int v34; // ebx\n  bool v35; // zf\n  signed int v36; // eax\n  int v37; // eax\n  int v38; // ecx\n  bool v39; // zf\n  bool v40; // sf\n  unsigned __int8 v41; // of\n  int v42; // eax\n  unsigned int v43; // ebp\n  signed int v44; // eax\n  int v45; // edx\n  unsigned int v46; // ebx\n  unsigned int v47; // ecx\n  const char *v48; // r8\n  signed int v49; // ecx\n  bool v50; // zf\n  bool v51; // sf\n  unsigned __int8 v52; // of\n  unsigned int v53; // eax\n  int v54; // eax\n  int v55; // ecx\n  int v56; // er14\n  unsigned int v57; // ebp\n  unsigned int v58; // er12\n  int v59; // eax\n  int v60; // ebx\n  int v61; // eax\n  unsigned int v62; // er14\n  int v63; // esi\n  __int64 v64; // rsi\n  unsigned int v65; // ebp\n  int v66; // eax\n  signed int v67; // eax\n  bool v68; // zf\n  bool v69; // sf\n  unsigned __int8 v70; // of\n  int v71; // eax\n  int v72; // ebx\n  unsigned int v73; // er12\n  signed __int64 v74; // rbx\n  int v75; // ebp\n  int v76; // er14\n  int v77; // eax\n  unsigned int v78; // ebp\n  unsigned int v79; // er13\n  unsigned int v80; // er14\n  __int64 v81; // rdi\n  __int64 v82; // rsi\n  unsigned int v83; // er14\n  signed int v84; // eax\n  signed int v85; // ecx\n  bool v86; // zf\n  bool v87; // sf\n  unsigned __int8 v88; // of\n  int v89; // eax\n  unsigned int v90; // er14\n  int v91; // eax\n  unsigned int v92; // ecx\n  int v93; // er13\n  int v94; // ecx\n  bool v95; // zf\n  bool v96; // sf\n  unsigned __int8 v97; // of\n  int v98; // eax\n  bool v99; // cf\n  signed int v100; // ecx\n  signed int v101; // eax\n  bool v102; // zf\n  bool v103; // sf\n  unsigned __int8 v104; // of\n  int v105; // eax\n  int v106; // ebx\n  int v107; // er14\n  unsigned int v108; // er12\n  __int64 v109; // r13\n  signed int v110; // ebp\n  __int64 v111; // rbx\n  int v112; // eax\n  __int64 v113; // r13\n  __int64 v114; // r12\n  int v115; // ebx\n  unsigned int v116; // ebp\n  int v117; // ebx\n  signed int v118; // ebx\n  unsigned int v119; // er14\n  unsigned int v120; // ebx\n  int v121; // eax\n  int v122; // ecx\n  bool v123; // zf\n  bool v124; // sf\n  unsigned __int8 v125; // of\n  unsigned int v126; // eax\n  int v127; // ebx\n  signed int v128; // ebx\n  unsigned int v129; // er14\n  __int64 v130; // rsi\n  unsigned int v131; // er14\n  int v132; // eax\n  int v133; // ecx\n  bool v134; // zf\n  bool v135; // sf\n  unsigned __int8 v136; // of\n  unsigned int v137; // eax\n  signed int v138; // eax\n  bool v139; // zf\n  bool v140; // sf\n  unsigned __int8 v141; // of\n  unsigned int v142; // eax\n  __int64 v143; // rbx\n  unsigned int v144; // er12\n  signed int v145; // er13\n  signed int v146; // ebp\n  unsigned int v147; // er14\n  unsigned int v148; // ebp\n  int v149; // ebp\n  int v150; // ecx\n  bool v151; // zf\n  bool v152; // sf\n  unsigned __int8 v153; // of\n  unsigned int v154; // eax\n  int v155; // er14\n  int v156; // ecx\n  bool v157; // zf\n  bool v158; // sf\n  unsigned __int8 v159; // of\n  int v160; // eax\n  int v161; // edx\n  unsigned int v163; // [rsp+0h] [rbp-9C8h]\n  bool v164; // [rsp+4h] [rbp-9C4h]\n  signed int v165; // [rsp+4h] [rbp-9C4h]\n  signed int v166; // [rsp+4h] [rbp-9C4h]\n  unsigned int v167; // [rsp+8h] [rbp-9C0h]\n  unsigned int v168; // [rsp+Ch] [rbp-9BCh]\n  unsigned int v169; // [rsp+10h] [rbp-9B8h]\n  unsigned int v170; // [rsp+14h] [rbp-9B4h]\n  __int64 v171; // [rsp+18h] [rbp-9B0h]\n  int v172; // [rsp+20h] [rbp-9A8h]\n  int v173; // [rsp+24h] [rbp-9A4h]\n  unsigned int v174; // [rsp+28h] [rbp-9A0h]\n  unsigned int v175; // [rsp+2Ch] [rbp-99Ch]\n  unsigned __int64 v176; // [rsp+30h] [rbp-998h]\n  unsigned int v177; // [rsp+38h] [rbp-990h]\n  int v178; // [rsp+3Ch] [rbp-98Ch]\n  unsigned int v179; // [rsp+40h] [rbp-988h]\n  unsigned int v180; // [rsp+44h] [rbp-984h]\n  _DWORD *v181; // [rsp+48h] [rbp-980h]\n  __int64 v182; // [rsp+50h] [rbp-978h]\n  int v183; // [rsp+58h] [rbp-970h]\n  __int64 v184; // [rsp+5Ch] [rbp-96Ch]\n  int v185; // [rsp+64h] [rbp-964h]\n  int v186; // [rsp+68h] [rbp-960h]\n  __int64 v187; // [rsp+70h] [rbp-958h]\n  int v188[50]; // [rsp+78h] [rbp-950h]\n  int v189[50]; // [rsp+140h] [rbp-888h]\n  int v190; // [rsp+208h] [rbp-7C0h]\n  unsigned int v191; // [rsp+210h] [rbp-7B8h]\n  unsigned int v192; // [rsp+214h] [rbp-7B4h]\n  int v193[160]; // [rsp+490h] [rbp-538h]\n  int v194[174]; // [rsp+710h] [rbp-2B8h]\n\n  ++dword_87BE90;\n  v4 = a4;\n  v168 = a3;\n  v173 = a1;\n  v5 = (unsigned __int8)byte_98A1B0[a1];\n  v190 = 0;\n  v6 = sub_40AD00(a1);\n  if ( (unsigned __int8)(byte_98A1B0[v6] - 1) >= 2u )\n  {\n    v7 = (1717986919LL * v6 >> 35) + ((unsigned __int64)(1717986919LL * v6) >> 63);\n    sub_4340E0((__int64)\"engine/reading.c\", 0x9F8u, (__int64)\"IS_STONE(board[str])\", v7 - 1, v6 - 20 * v7 - 1);\n  }\n  v181 = a2;\n  if ( (unsigned int)sub_4083A0(v6) != 2 )\n  {\n    v8 = (1717986919LL * v6 >> 35) + ((unsigned __int64)(1717986919LL * v6) >> 63);\n    sub_4340E0((__int64)\"engine/reading.c\", 0x9F9u, (__int64)\"countlib(str) == 2\", v8 - 1, v6 - 20 * v8 - 1);\n  }\n  v182 = v6;\n  v163 = v6;\n  v9 = sub_40A880(v6, (__int64)v194, 1);\n  if ( v9 > 0 )\n  {\n    v10 = v9;\n    v11 = 0LL;\n    do\n    {\n      v12 = dword_98A7F4;\n      v13 = dword_98A76C;\n      if ( dword_98A7F4 > dword_98A76C )\n      {\n        if ( (signed int)sub_40A5F0(v194[v11]) > 1 )\n          goto LABEL_322;\n        v12 = dword_98A7F4;\n        v13 = dword_98A76C;\n      }\n      if ( v12 <= v13 )\n        sub_4401B0(v194[v11], (__int64)v188);\n      sub_408410(v194[v11], 1, (unsigned __int64)&v185);\n      if ( v190 <= 0LL )\n      {\n        if ( !v190 )\n          goto LABEL_19;\n      }\n      else\n      {\n        v14 = 0LL;\n        do\n        {\n          if ( v188[v14] == v185 )\n            break;\n          ++v14;\n        }\n        while ( v14 < v190 );\n        if ( (_DWORD)v14 == v190 )\n        {\nLABEL_19:\n          if ( v190 <= 49 )\n          {\n            v188[v190] = v185;\n            v189[v190++] = 0;\n          }\n          goto LABEL_21;\n        }\n      }\nLABEL_21:\n      ++v11;\n    }\n    while ( v11 < v10 );\n  }\n  v170 = v4;\n  LODWORD(v171) = sub_408410(v163, 2, (unsigned __int64)&v174);\n  if ( (_DWORD)v171 != 2 )\n  {\n    v15 = (1717986919 * v182 >> 35) + ((unsigned __int64)(1717986919 * v182) >> 63);\n    sub_4340E0((__int64)\"engine/reading.c\", 0xA15u, (__int64)\"liberties == 2\", v15 - 1, v163 - 20 * v15 - 1);\n  }\n  v16 = 3 - v5;\n  v17 = v174;\n  v164 = v174 == v175 + 20 || v174 == v175 - 1 || v174 == v175 - 20 || v174 == v175 + 1;\n  v18 = 0LL;\n  v178 = 0;\n  while ( 1 )\n  {\n    v35 = (unsigned int)sub_40AD70(v17, v16) == 0;\n    v19 = v178;\n    if ( v35 )\n      v19 = 1;\n    v178 = v19;\n    if ( dword_98A7F4 <= dword_98A75C\n      || (v164 || dword_98A7F4 <= dword_98A76C) == 1\n      && v16 != (unsigned __int8)byte_98A1C4[v17]\n      && v16 != (unsigned __int8)byte_98A1AF[v17]\n      && v16 != (unsigned __int8)byte_98A19C[v17]\n      && v16 != (unsigned __int8)byte_98A1B1[v17]\n      || !(unsigned int)sub_40AD70(v17, v16) )\n    {\n      for ( i = 0LL; i < v190; ++i )\n      {\n        if ( v188[i] == v17 )\n          break;\n      }\n      if ( (_DWORD)i == v190 && v190 <= 49 )\n      {\n        v188[v190] = v17;\n        v189[v190++] = 0;\n      }\n    }\n    if ( dword_98A7F4 <= dword_98A75C && (unsigned int)sub_4093D0(v17, v16, 2, &v186) == 1 )\n    {\n      if ( v190 <= 0LL )\n      {\n        if ( !v190 )\n          goto LABEL_48;\n      }\n      else\n      {\n        v21 = 0LL;\n        do\n        {\n          if ( v188[v21] == v186 )\n            break;\n          ++v21;\n        }\n        while ( v21 < v190 );\n        if ( (_DWORD)v21 == v190 )\n        {\nLABEL_48:\n          if ( v190 <= 49 )\n          {\n            v188[v190] = v186;\n            v189[v190++] = 0;\n          }\n          goto LABEL_50;\n        }\n      }\nLABEL_50:\n      v22 = 0LL;\n      do\n      {\n        v23 = dword_5641B0[v22];\n        if ( v16 == (unsigned __int8)byte_98A1B0[v23 + v186]\n          && (signed int)sub_40A880(v186 + (signed int)v23, (__int64)v194, 1) > 0 )\n        {\n          sub_408410(v194[0], 1, (unsigned __int64)&v167);\n          if ( v190 <= 0LL )\n          {\n            if ( !v190 )\n              goto LABEL_60;\n          }\n          else\n          {\n            v24 = 0LL;\n            do\n            {\n              if ( v188[v24] == v167 )\n                break;\n              ++v24;\n            }\n            while ( v24 < v190 );\n            if ( (_DWORD)v24 == v190 )\n            {\nLABEL_60:\n              if ( v190 <= 49 )\n              {\n                v188[v190] = v167;\n                v189[v190++] = 0;\n              }\n              goto LABEL_62;\n            }\n          }\n        }\nLABEL_62:\n        ++v22;\n      }\n      while ( v22 != 4 );\n    }\n    if ( v18 == 1 )\n      break;\n    v17 = *(&v175 + v18++);\n  }\n  if ( !v178 )\n  {\n    sub_444E70(v163, v174, v188);\n    sub_444E70(v163, v175, v188);\n  }\n  v25 = v194;\n  v26 = sub_40A880(v163, (__int64)v194, 2);\n  v27 = v170;\n  if ( (signed int)v26 > 0 )\n  {\n    v28 = v26;\n    do\n    {\n      v29 = *v25;\n      if ( (unsigned int)sub_40B0A0(v174, *v25) && (unsigned int)sub_40B0A0(v175, v29) )\n        sub_4401B0(v29, (__int64)v188);\n      ++v25;\n      --v28;\n    }\n    while ( v28 );\n  }\n  sub_4409C0(v163, (__int64)&v174, v171, (__int64)v188, v16);\n  v165 = 0;\n  sub_4402B0(v163, (__int64)v188, v16, (__int64)\"attack2\", 0);\n  v169 = 0;\n  v171 = v190;\n  v30 = v168;\n  if ( v190 > 0LL )\n  {\n    v31 = 0LL;\n    v169 = 0;\n    v165 = 0;\n    do\n    {\n      v32 = v188[v31];\n      if ( (unsigned int)sub_407EA0(\n                           v188[v31],\n                           v16,\n                           \"attack2-A\",\n                           v163,\n                           v30,\n                           v27,\n                           &v191,\n                           v193,\n                           &v179,\n                           (dword_98A7F4 <= dword_98A784) & (unsigned __int8)(v165 == 0)) )\n      {\n        v33 = v179;\n        v34 = sub_43B820(v163, 0LL, v191, v193[0]);\n        if ( v33 )\n        {\n          if ( v34 != 5 )\n          {\n            v35 = (unsigned int)sub_43B170(v163, 0LL, v191, v193[0]) == 0;\n            v36 = v165;\n            if ( !v35 )\n              v36 = 1;\n            v165 = v36;\n            v37 = v169;\n            if ( !v35 )\n              v37 = v32;\n            v169 = v37;\n          }\n          v27 = v170;\n          v30 = v168;\n          sub_407030();\n        }\n        else\n        {\n          if ( v34 != 5 && (unsigned int)sub_43B170(v163, 0LL, v191, v193[0]) )\n          {\n            sub_407030();\n            v27 = v170;\n            if ( !v34 )\n            {\n              if ( v181 )\n                *v181 = v32;\n              if ( qword_88C238 )\n                sub_40F0A0((__int64)\"attack2\", v173, v32, 5u, (__int64)\"attack effective\");\n              return 5;\n            }\n            v38 = v165;\n            v41 = __OFSUB__(5 - v34, v165);\n            v39 = 5 - v34 == v165;\n            v40 = 5 - v34 - v165 < 0;\n            if ( 5 - v34 >= v165 )\n              v38 = 5 - v34;\n            v165 = v38;\n            v42 = v169;\n            if ( !((unsigned __int8)(v40 ^ v41) | v39) )\n              v42 = v32;\n            v169 = v42;\n          }\n          else\n          {\n            sub_407030();\n            v27 = v170;\n          }\n          v30 = v168;\n        }\n      }\n      ++v31;\n    }\n    while ( v31 < v171 );\n  }\n  v43 = v163;\n  v44 = sub_445100(v163, v174, v175, &v167, v30, v27);\n  if ( v44 == 5 )\n  {\n    if ( v181 )\n      *v181 = v167;\n    if ( qword_88C238 )\n    {\n      v45 = v167;\n      v46 = 5;\n      v47 = 5;\n      v48 = \"find cap2\";\n      goto LABEL_324;\n    }\n    return 5;\n  }\n  v49 = v165;\n  v52 = __OFSUB__(v44, v165);\n  v50 = v44 == v165;\n  v51 = v44 - v165 < 0;\n  if ( v44 >= v165 )\n    v49 = v44;\n  v166 = v49;\n  v53 = v169;\n  if ( !((unsigned __int8)(v51 ^ v52) | v50) )\n    v53 = v167;\n  v169 = v53;\n  v54 = dword_98A7F4;\n  v55 = dword_98A75C;\n  if ( dword_98A7F4 > dword_98A75C )\n    goto LABEL_157;\n  v56 = (unsigned __int8)byte_98A1B0[v182];\n  v57 = 3 - v56;\n  if ( !(unsigned int)sub_407C30(v174, 3 - v56) )\n  {\n    v171 = 0LL;\nLABEL_123:\n    v60 = 0;\n    goto LABEL_124;\n  }\n  v171 = 0LL;\n  if ( (unsigned int)sub_4093D0(v174, v56, 3, &v191) != 2 )\n    goto LABEL_123;\n  v58 = v191;\n  if ( v191 == v175 )\n    v58 = v192;\n  if ( (unsigned int)sub_40AD70(v58, v57) )\n    goto LABEL_123;\n  v59 = sub_406880(v58, v57, \"special_attack2\", v163, v30, v27);\n  v60 = 0;\n  if ( !v59 )\n    goto LABEL_124;\n  v171 = 0LL;\n  v61 = sub_43B820(v163, 0LL, v168, v27);\n  v60 = 0;\n  if ( v61 == 5 )\n    goto LABEL_121;\n  LODWORD(v176) = v61;\n  v171 = 0LL;\n  v60 = 0;\n  if ( !(unsigned int)sub_43B170(v163, 0LL, v168, v27) )\n    goto LABEL_121;\n  if ( !(_DWORD)v176 )\n    goto LABEL_334;\n  v60 = 5 - v176;\n  if ( 5 - (signed int)v176 <= 0 )\n    v58 = 0;\n  if ( v60 < 0 )\n    v60 = 0;\n  v171 = v58;\nLABEL_121:\n  sub_407030();\nLABEL_124:\n  if ( !(unsigned int)sub_407C30(v175, v57) || (unsigned int)sub_4093D0(v175, v56, 3, &v191) != 2 )\n    goto LABEL_335;\n  v58 = v191;\n  if ( v191 == v174 )\n    v58 = v192;\n  if ( (unsigned int)sub_40AD70(v58, v57) )\n  {\nLABEL_335:\n    v43 = v163;\n    goto LABEL_130;\n  }\n  v64 = v57;\n  v65 = v168;\n  if ( !(unsigned int)sub_406880(v58, v64, \"special_attack2\", v163, v168, v27) )\n  {\n    v43 = v163;\nLABEL_130:\n    v62 = v171;\n    if ( !v60 )\n      goto LABEL_151;\nLABEL_131:\n    v167 = v62;\n    if ( v60 != 5 )\n      goto LABEL_152;\n    goto LABEL_132;\n  }\n  v66 = sub_43B820(v163, 0LL, v65, v27);\n  if ( v66 == 5 || (LODWORD(v176) = v66, !(unsigned int)sub_43B170(v163, 0LL, v65, v27)) )\n  {\n    v62 = v171;\n    goto LABEL_150;\n  }\n  if ( !(_DWORD)v176 )\n  {\nLABEL_334:\n    sub_407030();\n    v167 = v58;\n    v62 = v58;\nLABEL_132:\n    if ( v181 )\n      *v181 = v62;\n    if ( !qword_88C238 )\n      return 5;\n    v46 = 5;\n    v47 = 5;\n    v48 = \"special attack2\";\n    v63 = v173;\n    v45 = v62;\n    goto LABEL_325;\n  }\n  v62 = v171;\n  if ( 5 - (signed int)v176 > v60 )\n    v62 = v58;\n  if ( 5 - (signed int)v176 >= v60 )\n    v60 = 5 - v176;\nLABEL_150:\n  sub_407030();\n  v43 = v163;\n  if ( v60 )\n    goto LABEL_131;\nLABEL_151:\n  v60 = 0;\n  v62 = v167;\nLABEL_152:\n  v67 = v166;\n  v70 = __OFSUB__(v60, v166);\n  v68 = v60 == v166;\n  v69 = v60 - v166 < 0;\n  if ( v60 >= v166 )\n    v67 = v60;\n  v166 = v67;\n  v71 = v169;\n  if ( !((unsigned __int8)(v69 ^ v70) | v68) )\n    v71 = v62;\n  v169 = v71;\n  v54 = dword_98A7F4;\n  v55 = dword_98A75C;\nLABEL_157:\n  if ( v54 > v55 )\n    goto LABEL_213;\n  v72 = (unsigned __int8)byte_98A1B0[v182];\n  if ( (unsigned int)sub_4083A0(v43) != 2 )\n    sub_4340E0((__int64)\"engine/reading.c\", 0xCFEu, (__int64)\"countlib(str) == 2\", 0xFFFFFFFF, 0xFFFFFFFF);\n  LODWORD(v184) = v72;\n  v73 = 3 - v72;\n  v74 = 0LL;\n  v172 = 0;\n  LODWORD(v171) = 0;\n  LODWORD(v176) = v73;\n  while ( 2 )\n  {\n    v75 = *(&v174 + v74);\n    v76 = v75;\n    v77 = *(&v174 + (v74 ^ 1));\n    if ( v75 == v77 + 20 || v75 == v77 - 20 )\n    {\n      if ( !byte_98A1AF[v75] )\n      {\n        v78 = v75 - 1;\n        goto LABEL_173;\n      }\n      if ( !byte_98A1B1[v75] )\n      {\n        v78 = v75 + 1;\n        goto LABEL_173;\n      }\n    }\n    else\n    {\n      if ( v75 != v77 - 1 && v75 != v77 + 1 )\n        goto LABEL_207;\n      if ( !byte_98A1C4[v75] )\n      {\n        v78 = v75 + 20;\n        goto LABEL_173;\n      }\n      if ( !byte_98A19C[v75] )\n      {\n        v78 = v75 - 20;\nLABEL_173:\n        if ( !(unsigned int)sub_40AD70(v78, v73) )\n        {\n          if ( (unsigned int)sub_406880(v78, v73, \"special_attack3-A\", v163, v168, v27) )\n          {\n            if ( (unsigned int)sub_4083A0(v78) == 2 )\n            {\n              sub_408410(v78, 2, (unsigned __int64)&v179);\n              v79 = v179;\n              if ( v179 == v76 )\n                v79 = v180;\n              v80 = v184;\n              if ( (unsigned int)sub_40AD70(v79, v184) )\n              {\n                v27 = v170;\n                goto LABEL_190;\n              }\n              v81 = v79;\n              v82 = v80;\n              v83 = v168;\n              v27 = v170;\n              if ( !(unsigned int)sub_406880(v81, v82, \"special_attack3-B\", v163, v168, v170) )\n                goto LABEL_190;\n              v84 = sub_43B170(v163, 0LL, v83, v27);\n              if ( v84 != 5 )\n              {\n                if ( !v84 )\n                {\n                  sub_407030();\n                  sub_407030();\n                  v73 = v176;\n                  goto LABEL_200;\n                }\n                v85 = v171;\n                v88 = __OFSUB__(v84, (_DWORD)v171);\n                v86 = v84 == (_DWORD)v171;\n                v87 = v84 - (signed int)v171 < 0;\n                if ( v84 >= (signed int)v171 )\n                  v85 = v84;\n                LODWORD(v171) = v85;\n                v89 = v172;\n                if ( !((unsigned __int8)(v87 ^ v88) | v86) )\n                  v89 = v78;\n                v172 = v89;\n              }\n              sub_407030();\n            }\nLABEL_190:\n            v90 = v168;\n            v91 = sub_43B820(v163, 0LL, v168, v27);\n            v92 = v27;\n            v93 = v91;\n            if ( v91 != 5 && (unsigned int)sub_43B170(v163, 0LL, v90, v92) )\n            {\n              v73 = v176;\n              if ( !v93 )\n              {\n                sub_407030();\n                v167 = v78;\n                v45 = v78;\nLABEL_203:\n                if ( v181 )\n                  *v181 = v45;\n                if ( qword_88C238 )\n                {\n                  v46 = 5;\n                  v47 = 5;\n                  v48 = \"special attack3\";\n                  goto LABEL_324;\n                }\n                return 5;\n              }\n              v94 = v171;\n              v97 = __OFSUB__(5 - v93, (_DWORD)v171);\n              v95 = 5 - v93 == (_DWORD)v171;\n              v96 = 5 - v93 - (signed int)v171 < 0;\n              if ( 5 - v93 >= (signed int)v171 )\n                v94 = 5 - v93;\n              LODWORD(v171) = v94;\n              v98 = v172;\n              if ( !((unsigned __int8)(v96 ^ v97) | v95) )\n                v98 = v78;\n              v172 = v98;\n            }\n            else\n            {\n              v73 = v176;\n            }\n            sub_407030();\n            v27 = v170;\n          }\n        }\n      }\n    }\nLABEL_200:\n    v99 = (unsigned __int64)(v74 + 1) < 2;\n    v74 = 1LL;\n    if ( v99 )\n      continue;\n    break;\n  }\n  if ( (_DWORD)v171 )\n  {\n    v45 = v172;\n    v167 = v172;\n    v100 = v171;\n    if ( (_DWORD)v171 == 5 )\n      goto LABEL_203;\n  }\n  else\n  {\nLABEL_207:\n    v100 = 0;\n    v45 = v167;\n  }\n  v101 = v166;\n  v104 = __OFSUB__(v100, v166);\n  v102 = v100 == v166;\n  v103 = v100 - v166 < 0;\n  if ( v100 >= v166 )\n    v101 = v100;\n  v166 = v101;\n  v105 = v169;\n  if ( !((unsigned __int8)(v103 ^ v104) | v102) )\n    v105 = v45;\n  v169 = v105;\n  v54 = dword_98A7F4;\n  v55 = dword_98A75C;\n  v43 = v163;\nLABEL_213:\n  if ( v54 > v55 )\n    goto LABEL_275;\n  LODWORD(v182) = (unsigned __int8)byte_98A1B0[v182];\n  v106 = 3 - v182;\n  if ( (unsigned int)sub_4083A0(v43) != 2 )\n    sub_4340E0((__int64)\"engine/reading.c\", 0xD62u, (__int64)\"countlib(str) == 2\", 0xFFFFFFFF, 0xFFFFFFFF);\n  v107 = 0;\n  if ( !(unsigned int)sub_40AD70(v174, v106) || !(unsigned int)sub_40AD70(v175, v106) )\n    goto LABEL_263;\n  LODWORD(v171) = v106;\n  v108 = sub_40A880(v43, (__int64)&v191, 2);\n  v109 = (signed int)v108;\n  v176 = 0LL;\n  v177 = 0;\n  v107 = 0;\n  v184 = v108;\n  v187 = (signed int)v108;\n  while ( 2 )\n  {\n    if ( (signed int)v108 <= 0 )\n    {\n      LODWORD(v111) = 0;\n    }\n    else\n    {\n      v110 = *(&v174 + v176);\n      v111 = 0LL;\n      while ( !(unsigned int)sub_40B0A0(v110, *(&v191 + v111)) )\n      {\n        if ( ++v111 >= v109 )\n          goto LABEL_226;\n      }\n      HIDWORD(v184) = *(&v191 + v111);\nLABEL_226:\n      v43 = v163;\n    }\n    v172 = v107;\n    if ( (_DWORD)v111 != v108 )\n    {\n      v112 = sub_40A880(SHIDWORD(v184), (__int64)v193, 2);\n      if ( v112 > 0 )\n      {\n        v113 = v112;\n        v114 = 0LL;\n        do\n        {\n          v115 = v193[v114];\n          if ( !(unsigned int)sub_40B5B0(v193[v114], v43) )\n          {\n            sub_408410(v115, 2, (unsigned __int64)&v179);\n            v116 = v179;\n            v117 = v180;\n            if ( !(unsigned int)sub_40AD70(v179, v171) )\n            {\n              v118 = sub_4093D0(v117, v182, 4, 0LL);\n              if ( v118 <= 3 )\n              {\n                v119 = v171;\n                if ( v118 <= (signed int)sub_4093D0(v116, v171, 3, 0LL) )\n                {\n                  v120 = v170;\n                  if ( (unsigned int)sub_406880(v116, v119, \"special_attack4\", v163, v168, v170) )\n                  {\n                    v121 = sub_43B820(v163, 0LL, v168, v120);\n                    if ( v121 != 5 )\n                    {\n                      v183 = v121;\n                      if ( (unsigned int)sub_43B170(v163, 0LL, v168, v120) )\n                      {\n                        if ( !v183 )\n                          goto LABEL_329;\n                        v122 = v172;\n                        v125 = __OFSUB__(5 - v183, v172);\n                        v123 = 5 - v183 == v172;\n                        v124 = 5 - v183 - v172 < 0;\n                        if ( 5 - v183 >= v172 )\n                          v122 = 5 - v183;\n                        v172 = v122;\n                        v126 = v177;\n                        if ( !((unsigned __int8)(v124 ^ v125) | v123) )\n                          v126 = v116;\n                        v177 = v126;\n                      }\n                    }\n                    sub_407030();\n                  }\n                }\n              }\n            }\n            v127 = v179;\n            v116 = v180;\n            if ( (unsigned int)sub_40AD70(v180, v171) )\n              goto LABEL_258;\n            v128 = sub_4093D0(v127, v182, 4, 0LL);\n            if ( v128 > 3 )\n              goto LABEL_258;\n            v129 = v171;\n            if ( v128 > (signed int)sub_4093D0(v116, v171, 3, 0LL) )\n              goto LABEL_258;\n            v130 = v129;\n            v131 = v170;\n            if ( (unsigned int)sub_406880(v116, v130, \"special_attack4\", v163, v168, v170) )\n            {\n              v132 = sub_43B820(v163, 0LL, v168, v131);\n              if ( v132 != 5 )\n              {\n                v183 = v132;\n                if ( (unsigned int)sub_43B170(v163, 0LL, v168, v131) )\n                {\n                  if ( !v183 )\n                  {\nLABEL_329:\n                    sub_407030();\n                    v167 = v116;\nLABEL_264:\n                    if ( v181 )\n                      *v181 = v167;\n                    if ( qword_88C238 )\n                    {\n                      v45 = v167;\n                      v46 = 5;\n                      v47 = 5;\n                      v48 = \"special attack4\";\n                      goto LABEL_324;\n                    }\n                    return 5;\n                  }\n                  v133 = v172;\n                  v136 = __OFSUB__(5 - v183, v172);\n                  v134 = 5 - v183 == v172;\n                  v135 = 5 - v183 - v172 < 0;\n                  if ( 5 - v183 >= v172 )\n                    v133 = 5 - v183;\n                  v172 = v133;\n                  v137 = v177;\n                  if ( !((unsigned __int8)(v135 ^ v136) | v134) )\n                    v137 = v116;\n                  v177 = v137;\n                }\n              }\n              sub_407030();\nLABEL_258:\n              v43 = v163;\n              goto LABEL_259;\n            }\n            v43 = v163;\n          }\nLABEL_259:\n          ++v114;\n        }\n        while ( v114 < v113 );\n      }\n    }\n    ++v176;\n    v107 = v172;\n    v108 = v184;\n    v109 = v187;\n    if ( v176 < 2 )\n      continue;\n    break;\n  }\n  if ( v172 )\n  {\n    v167 = v177;\nLABEL_263:\n    if ( v107 == 5 )\n      goto LABEL_264;\n  }\n  else\n  {\n    v107 = 0;\n  }\n  v138 = v166;\n  v141 = __OFSUB__(v107, v166);\n  v139 = v107 == v166;\n  v140 = v107 - v166 < 0;\n  if ( v107 >= v166 )\n    v138 = v107;\n  v166 = v138;\n  v142 = v169;\n  if ( !((unsigned __int8)(v140 ^ v141) | v139) )\n    v142 = v167;\n  v169 = v142;\nLABEL_275:\n  if ( dword_565C78 < 10\n    || dword_98A7F4 > dword_98A75C\n    || v178 && dword_98A7F4 > dword_98A7F8\n    || (sub_44DF50(v43, v193, &v191, 3 - (unsigned int)(dword_98A7F4 > dword_98A758)), (unsigned int)(v193[0] - 1) > 4) )\n  {\nLABEL_317:\n    if ( v166 )\n    {\n      v161 = v169;\n      if ( v181 )\n        *v181 = v169;\n      if ( qword_88C238 )\n      {\n        v46 = v166;\n        sub_40F0A0((__int64)\"attack2\", v173, v161, v166, (__int64)\"saved move\");\n      }\n      else\n      {\n        v46 = v166;\n      }\n      return v46;\n    }\nLABEL_322:\n    if ( !qword_88C238 )\n      return 0;\n    v46 = 0;\n    v45 = 0;\n    v47 = 0;\n    v48 = 0LL;\nLABEL_324:\n    v63 = v173;\nLABEL_325:\n    sub_40F0A0((__int64)\"attack2\", v63, v45, v47, (__int64)v48);\n    return v46;\n  }\n  v143 = 0LL;\n  while ( 1 )\n  {\n    v144 = *(&v191 + v143);\n    v145 = 54;\n    if ( !(unsigned int)sub_40B0A0(*(&v191 + v143), v163) )\n    {\n      v145 = 0;\n      if ( (unsigned int)sub_406880(v144, v16, \"attack2-C\", v163, v168, v170) )\n      {\n        if ( (unsigned int)sub_4083A0(v144) == 1 )\n        {\n          sub_408410(v144, 1, (unsigned __int64)&v167);\n          v145 = 0;\n          v146 = sub_4093D0(v167, v16, 2, 0LL);\n          sub_407030();\n          if ( v146 >= 2 )\n          {\n            v147 = v168;\n            v148 = v170;\n            if ( (unsigned int)sub_406880(v167, v16, \"attack2-D\", v163, v168, v170) )\n            {\n              v149 = sub_43B820(v163, 0LL, v147, v148);\n              if ( v149 == 5 || !(unsigned int)sub_43B170(v163, 0LL, v168, v170) )\n                goto LABEL_306;\n              sub_407030();\n              if ( v149 )\n              {\n                v150 = v166;\n                v153 = __OFSUB__(5 - v149, v166);\n                v151 = 5 - v149 == v166;\n                v152 = 5 - v149 - v166 < 0;\n                if ( 5 - v149 >= v166 )\n                  v150 = 5 - v149;\n                v166 = v150;\n                v154 = v169;\n                if ( !((unsigned __int8)(v152 ^ v153) | v151) )\n                  v154 = v167;\n                v169 = v154;\n              }\n              else\n              {\n                if ( v181 )\n                  *v181 = v167;\n                v145 = 1;\n                if ( qword_88C238 )\n                  sub_40F0A0((__int64)\"attack2\", v173, v167, 5u, (__int64)\"attack effective\");\n              }\n            }\n          }\n        }\n        else\n        {\n          v155 = sub_43B820(v163, 0LL, v168, v170);\n          if ( v155 == 5 || !(unsigned int)sub_43B170(v163, 0LL, v168, v170) )\n          {\nLABEL_306:\n            sub_407030();\n            goto LABEL_282;\n          }\n          sub_407030();\n          if ( v155 )\n          {\n            v156 = v166;\n            v159 = __OFSUB__(5 - v155, v166);\n            v157 = 5 - v155 == v166;\n            v158 = 5 - v155 - v166 < 0;\n            if ( 5 - v155 >= v166 )\n              v156 = 5 - v155;\n            v166 = v156;\n            v160 = v169;\n            if ( !((unsigned __int8)(v158 ^ v159) | v157) )\n              v160 = v144;\n            v169 = v160;\n          }\n          else\n          {\n            if ( v181 )\n              *v181 = v144;\n            v145 = 1;\n            if ( qword_88C238 )\n              sub_40F0A0((__int64)\"attack2\", v173, v144, 5u, (__int64)\"attack effective\");\n          }\n        }\n      }\n    }\nLABEL_282:\n    if ( (v145 & 0x3F) != 54 )\n    {\n      if ( v145 & 0x3F )\n        break;\n    }\n    if ( ++v143 >= v193[0] )\n      goto LABEL_317;\n  }\n  v46 = 5;\n  if ( !v145 )\n    goto LABEL_317;\n  return v46;\n}\n", 
            "funcStartAddr": "0x4422d0L", 
            "funcEndAddr": "0x4437aeL", 
            "funcName": "sub_4422D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4437B0(unsigned int a1, _DWORD *a2, unsigned int a3, unsigned int a4)\n{\n  unsigned int v4; // er13\n  unsigned int v5; // er15\n  unsigned int v6; // ebp\n  unsigned int v7; // er12\n  int v8; // edx\n  unsigned int v9; // ecx\n  const char *v10; // r8\n  int v11; // esi\n  unsigned int v12; // eax\n  __int64 v13; // rbx\n  __int64 v14; // r12\n  signed __int64 v15; // rcx\n  int v16; // edx\n  __int64 v17; // rbx\n  unsigned int v18; // er12\n  signed __int64 i; // rcx\n  signed __int64 v20; // rcx\n  int v21; // ebx\n  signed __int64 v22; // rbx\n  int v23; // ebp\n  int v24; // er13\n  int v25; // ecx\n  bool v26; // zf\n  bool v27; // sf\n  unsigned __int8 v28; // of\n  unsigned int v29; // eax\n  int v30; // eax\n  int v31; // eax\n  int v32; // eax\n  int v33; // ebx\n  int v34; // ebp\n  int v35; // eax\n  bool v36; // zf\n  bool v37; // sf\n  unsigned __int8 v38; // of\n  unsigned int v39; // eax\n  unsigned int v40; // ebx\n  int v41; // eax\n  __int64 v42; // r14\n  signed __int64 v43; // r12\n  int v44; // eax\n  signed __int64 v45; // rdi\n  signed __int64 v46; // rdi\n  signed __int64 v47; // rdi\n  signed __int64 v48; // rdi\n  int v49; // ebp\n  bool v50; // cf\n  int v51; // ecx\n  signed __int64 v52; // r12\n  __int64 v53; // r14\n  __int64 v54; // rax\n  __int64 v55; // r13\n  int v56; // eax\n  int v57; // eax\n  bool v58; // zf\n  bool v59; // sf\n  unsigned __int8 v60; // of\n  unsigned int v61; // eax\n  __int64 v62; // r14\n  unsigned int v63; // eax\n  __int64 v64; // rbx\n  __int64 v65; // rbp\n  int v66; // eax\n  signed __int64 v67; // rcx\n  signed __int64 v68; // rcx\n  signed int v69; // ebx\n  int v70; // ebp\n  int v71; // er13\n  int v72; // ecx\n  bool v73; // zf\n  bool v74; // sf\n  unsigned __int8 v75; // of\n  unsigned int v76; // eax\n  int v77; // eax\n  __int64 v78; // r14\n  unsigned int v79; // er12\n  unsigned int v80; // ebp\n  signed int v81; // ebx\n  unsigned int v82; // er12\n  signed int v83; // ebp\n  __int64 v84; // rsi\n  int v85; // ebp\n  int v86; // ecx\n  bool v87; // zf\n  bool v88; // sf\n  unsigned __int8 v89; // of\n  unsigned int v90; // eax\n  unsigned int v91; // ebx\n  int v92; // er12\n  int v93; // ecx\n  bool v94; // zf\n  bool v95; // sf\n  unsigned __int8 v96; // of\n  unsigned int v97; // eax\n  int v98; // edx\n  int v99; // ebx\n  unsigned int v101; // [rsp+8h] [rbp-730h]\n  int v102; // [rsp+Ch] [rbp-72Ch]\n  unsigned int v103; // [rsp+10h] [rbp-728h]\n  unsigned int v104; // [rsp+14h] [rbp-724h]\n  unsigned int v105; // [rsp+18h] [rbp-720h]\n  int v106[2]; // [rsp+1Ch] [rbp-71Ch]\n  unsigned int v107; // [rsp+24h] [rbp-714h]\n  _DWORD *v108; // [rsp+28h] [rbp-710h]\n  int v109; // [rsp+34h] [rbp-704h]\n  __int64 v110; // [rsp+38h] [rbp-700h]\n  __int64 v111; // [rsp+40h] [rbp-6F8h]\n  __int64 v112; // [rsp+48h] [rbp-6F0h]\n  __int64 v113; // [rsp+50h] [rbp-6E8h]\n  int v114[3]; // [rsp+5Ch] [rbp-6DCh]\n  int v115[50]; // [rsp+68h] [rbp-6D0h]\n  int v116[50]; // [rsp+130h] [rbp-608h]\n  int v117; // [rsp+1F8h] [rbp-540h]\n  int v118; // [rsp+200h] [rbp-538h]\n  int v119; // [rsp+204h] [rbp-534h]\n  int v120[174]; // [rsp+480h] [rbp-2B8h]\n\n  v4 = a4;\n  v108 = a2;\n  v5 = a1;\n  ++dword_87BE90;\n  v113 = (signed int)a1;\n  v6 = (unsigned __int8)byte_98A1B0[a1];\n  v117 = 0;\n  if ( (unsigned __int8)(v6 - 1) >= 2u )\n    sub_4340E0(\n      (__int64)\"engine/reading.c\",\n      0xAEFu,\n      (__int64)\"((board[str]) == 1 || (board[str]) == 2)\",\n      0xFFFFFFFF,\n      0xFFFFFFFF);\n  if ( dword_98A7F4 > dword_98A76C )\n    goto LABEL_4;\n  v104 = v6;\n  v107 = a3;\n  v12 = sub_40A880(a1, (__int64)v120, 1);\n  if ( (signed int)v12 > 0 )\n  {\n    v13 = v12;\n    v14 = 0LL;\n    do\n    {\n      sub_4401B0(v120[v14], (__int64)v115);\n      sub_408410(v120[v14], 1, (unsigned __int64)&v118);\n      LODWORD(v15) = 0;\n      if ( v117 > 0LL )\n      {\n        v15 = 0LL;\n        do\n        {\n          if ( v115[v15] == v118 )\n            break;\n          ++v15;\n        }\n        while ( v15 < v117 );\n      }\n      if ( (_DWORD)v15 == v117 && v117 <= 49 )\n      {\n        v115[v117] = v118;\n        v116[v117++] = 0;\n      }\n      ++v14;\n    }\n    while ( v14 != v13 );\n  }\n  sub_4420F0(a1, (__int64)v115);\n  v102 = sub_408410(a1, 3, (unsigned __int64)v114);\n  if ( v102 != 3 )\n  {\n    v16 = (1717986919 * v113 >> 35) + ((unsigned __int64)(1717986919 * v113) >> 63);\n    sub_4340E0((__int64)\"engine/reading.c\", 0xB02u, (__int64)\"liberties == 3\", v16 - 1, a1 - 20 * v16 - 1);\n  }\n  v104 = 3 - v104;\n  v17 = 0LL;\n  do\n  {\n    v18 = v114[v17];\n    if ( dword_98A7F4 <= dword_98A75C\n      || dword_98A7F4 <= dword_98A76C\n      && v104 != (unsigned __int8)byte_98A1C4[v18]\n      && v104 != (unsigned __int8)byte_98A1AF[v18]\n      && v104 != (unsigned __int8)byte_98A19C[v18]\n      && v104 != (unsigned __int8)byte_98A1B1[v18]\n      || !(unsigned int)sub_40AD70(v18, v104) )\n    {\n      for ( i = 0LL; i < v117; ++i )\n      {\n        if ( v115[i] == v18 )\n          break;\n      }\n      if ( (_DWORD)i == v117 && v117 <= 49 )\n      {\n        v115[v117] = v18;\n        v116[v117++] = 0;\n      }\n    }\n    if ( (unsigned int)sub_445210(a1, v18, &v101) )\n    {\n      if ( v117 <= 0LL )\n      {\n        if ( v117 )\n          goto LABEL_44;\n      }\n      else\n      {\n        v20 = 0LL;\n        do\n        {\n          if ( v115[v20] == v101 )\n            break;\n          ++v20;\n        }\n        while ( v20 < v117 );\n        if ( (_DWORD)v20 != v117 )\n          goto LABEL_44;\n      }\n      if ( v117 <= 49 )\n      {\n        v115[v117] = v101;\n        v116[v117++] = 0;\n      }\n    }\nLABEL_44:\n    sub_444E70(a1, v18, v115);\n    ++v17;\n  }\n  while ( v17 != 3 );\n  v21 = v104;\n  sub_4409C0(a1, (__int64)v114, v102, (__int64)v115, v104);\n  v102 = 0;\n  sub_4402B0(a1, (__int64)v115, v21, (__int64)\"attack3\", 0);\n  v103 = 0;\n  v105 = v4;\n  if ( v117 > 0 )\n  {\n    v22 = 0LL;\n    v103 = 0;\n    v102 = 0;\n    do\n    {\n      if ( v22 && dword_98A7F4 >= dword_98A768 )\n        break;\n      v101 = v115[v22];\n      if ( (unsigned int)sub_407EA0(\n                           v101,\n                           v104,\n                           \"attack3-A\",\n                           a1,\n                           v107,\n                           v4,\n                           (unsigned int *)&v118,\n                           v106,\n                           &v109,\n                           (dword_98A7F4 <= dword_98A784) & (unsigned __int8)(v102 == 0)) )\n      {\n        v23 = v109;\n        v24 = sub_43B820(a1, 0LL, v118, v106[0]);\n        if ( v23 )\n        {\n          if ( v24 == 5 )\n          {\n            v4 = v105;\n            sub_407030();\n          }\n          else\n          {\n            v30 = sub_43B170(a1, 0LL, v118, v106[0]);\n            v4 = v105;\n            if ( v30 )\n            {\n              v102 = 1;\n              v103 = v101;\n            }\n            sub_407030();\n          }\n        }\n        else\n        {\n          if ( v24 != 5 && (unsigned int)sub_43B170(a1, 0LL, v118, v106[0]) )\n          {\n            sub_407030();\n            if ( !v24 )\n            {\n              if ( v108 )\n                *v108 = v101;\n              if ( qword_88C238 )\n                sub_40F0A0((__int64)\"attack3\", a1, v101, 5u, (__int64)\"attack effective\");\n              return 5;\n            }\n            v25 = v102;\n            v28 = __OFSUB__(5 - v24, v102);\n            v26 = 5 - v24 == v102;\n            v27 = 5 - v24 - v102 < 0;\n            if ( 5 - v24 >= v102 )\n              v25 = 5 - v24;\n            v102 = v25;\n            v29 = v103;\n            if ( !((unsigned __int8)(v27 ^ v28) | v26) )\n              v29 = v101;\n            v103 = v29;\n          }\n          else\n          {\n            sub_407030();\n          }\n          v4 = v105;\n        }\n      }\n      ++v22;\n    }\n    while ( v22 < v117 );\n  }\n  v31 = dword_98A7F4;\n  if ( dword_98A7F4 > dword_98A75C )\n    goto LABEL_75;\n  v106[0] = 0;\n  v32 = sub_408410(a1, 4, (unsigned __int64)&v118);\n  if ( (unsigned int)(v32 - 2) > 2 )\n  {\nLABEL_69:\n    v33 = 0;\n    v34 = v101;\n    goto LABEL_70;\n  }\n  v52 = v32;\n  v111 = v32 - 1;\n  v53 = 0LL;\n  v54 = 1LL;\n  v33 = 0;\n  v34 = 0;\n  while ( 2 )\n  {\n    v110 = v54;\n    v112 = v53 + 1;\n    if ( v53 + 1 < v52 )\n    {\n      v55 = v54;\n      while ( 1 )\n      {\n        v56 = sub_445100(a1, (unsigned int)*(&v118 + v53), (unsigned int)*(&v118 + v55), v106, v107, v105);\n        if ( v56 == 5 )\n          break;\n        if ( v56 > v33 )\n          v34 = v106[0];\n        if ( v56 >= v33 )\n          v33 = v56;\n        if ( ++v55 >= v52 )\n          goto LABEL_117;\n      }\n      v34 = v106[0];\n      v101 = v106[0];\nLABEL_122:\n      if ( v108 )\n        *v108 = v34;\n      if ( !qword_88C238 )\n        return 5;\n      v7 = 5;\n      v9 = 5;\n      v10 = \"find cap3\";\n      v11 = a1;\n      v8 = v34;\nLABEL_7:\n      sub_40F0A0((__int64)\"attack3\", v11, v8, v9, (__int64)v10);\n      return v7;\n    }\nLABEL_117:\n    v54 = v110 + 1;\n    v53 = v112;\n    v4 = v105;\n    if ( v112 < v111 )\n      continue;\n    break;\n  }\n  if ( !v33 )\n    goto LABEL_69;\n  v101 = v34;\n  if ( v33 == 5 )\n    goto LABEL_122;\nLABEL_70:\n  v35 = v102;\n  v38 = __OFSUB__(v33, v102);\n  v36 = v33 == v102;\n  v37 = v33 - v102 < 0;\n  if ( v33 >= v102 )\n    v35 = v33;\n  v102 = v35;\n  v39 = v103;\n  if ( !((unsigned __int8)(v37 ^ v38) | v36) )\n    v39 = v34;\n  v103 = v39;\n  v31 = dword_98A7F4;\nLABEL_75:\n  v40 = v107;\n  if ( v31 > dword_98A770 )\n    goto LABEL_132;\n  v41 = sub_40A880(a1, (__int64)&v118, 2);\n  if ( v41 <= 0 )\n  {\nLABEL_126:\n    v51 = 0;\n    v8 = v101;\n    goto LABEL_127;\n  }\n  v112 = v41;\n  v42 = 0LL;\n  LODWORD(v110) = 0;\n  LODWORD(v111) = 0;\n  while ( 2 )\n  {\n    sub_408410(*(&v118 + v42), 2, (unsigned __int64)v106);\n    v43 = 0LL;\n    while ( 2 )\n    {\n      if ( !(unsigned int)sub_40B0A0(v106[v43], v5) )\n      {\n        v44 = v106[v43];\n        v45 = v106[v43] + 20LL;\n        if ( (unsigned int)v45 <= 0x1A4 && byte_98A1B0[v45] != 3 )\n        {\n          if ( (unsigned int)sub_40B0A0(v45, v5) )\n            goto LABEL_94;\n          v44 = v106[v43];\n        }\n        v46 = v44 - 1LL;\n        if ( (unsigned int)v46 <= 0x1A4 && byte_98A1B0[v46] != 3 )\n        {\n          if ( (unsigned int)sub_40B0A0(v46, v5) )\n            goto LABEL_94;\n          v44 = v106[v43];\n        }\n        v47 = v44 - 20LL;\n        if ( (unsigned int)v47 > 0x1A4 || byte_98A1B0[v47] == 3 )\n        {\nLABEL_91:\n          v48 = v44 + 1LL;\n          if ( (unsigned int)v48 > 0x1A4 || byte_98A1B0[v48] == 3 || !(unsigned int)sub_40B0A0(v48, v5) )\n            goto LABEL_102;\n          goto LABEL_94;\n        }\n        if ( !(unsigned int)sub_40B0A0(v47, v5) )\n        {\n          v44 = v106[v43];\n          goto LABEL_91;\n        }\nLABEL_94:\n        if ( (unsigned int)sub_406880(\n                             (unsigned int)v106[v43],\n                             3 - (unsigned int)(unsigned __int8)byte_98A1B0[v113],\n                             \"draw_back\",\n                             v5,\n                             v40,\n                             v4) )\n        {\n          v49 = sub_43B820(v5, 0LL, v40, v4);\n          if ( v49 != 5 && (unsigned int)sub_43B170(v5, 0LL, v40, v4) )\n          {\n            if ( !v49 )\n            {\n              sub_407030();\n              v8 = v106[v43];\n              v101 = v106[v43];\n              goto LABEL_184;\n            }\n            if ( 5 - v49 > (signed int)v110 )\n            {\n              LODWORD(v111) = v106[v43];\n              LODWORD(v110) = 5 - v49;\n            }\n          }\n          sub_407030();\n        }\n      }\nLABEL_102:\n      v50 = (unsigned __int64)(v43 + 1) < 2;\n      v43 = 1LL;\n      if ( v50 )\n        continue;\n      break;\n    }\n    if ( ++v42 < v112 )\n      continue;\n    break;\n  }\n  v51 = v110;\n  if ( !(_DWORD)v110 )\n    goto LABEL_126;\n  v8 = v111;\n  v101 = v111;\n  if ( (_DWORD)v110 == 5 )\n  {\nLABEL_184:\n    if ( v108 )\n      *v108 = v8;\n    if ( qword_88C238 )\n    {\n      v7 = 5;\n      v9 = 5;\n      v10 = \"draw back\";\n      goto LABEL_6;\n    }\n    return 5;\n  }\nLABEL_127:\n  v57 = v102;\n  v60 = __OFSUB__(v51, v102);\n  v58 = v51 == v102;\n  v59 = v51 - v102 < 0;\n  if ( v51 >= v102 )\n    v57 = v51;\n  v102 = v57;\n  v61 = v103;\n  if ( !((unsigned __int8)(v59 ^ v60) | v58) )\n    v61 = v8;\n  v103 = v61;\n  v31 = dword_98A7F4;\nLABEL_132:\n  if ( v31 > dword_98A758 )\n    goto LABEL_190;\n  v62 = v117;\n  v63 = sub_40A880(v5, (__int64)v120, 2);\n  if ( (signed int)v63 > 0 )\n  {\n    v64 = v63;\n    v65 = 0LL;\n    while ( 2 )\n    {\n      sub_408410(v120[v65], 2, (unsigned __int64)&v118);\n      if ( (signed int)sub_4093D0(v118, v104, 4, 0LL) >= 4 && (signed int)sub_4093D0(v119, v104, 4, 0LL) > 3 )\n        goto LABEL_155;\n      sub_4401B0(v120[v65], (__int64)v115);\n      sub_441D60(v120[v65], (__int64)v115, 1);\n      v66 = v117;\n      if ( v117 <= 0LL )\n      {\n        if ( !v117 )\n        {\nLABEL_146:\n          if ( v117 <= 49 )\n          {\n            v115[v117] = v118;\n            v116[v117] = 0;\n            v66 = v117++ + 1;\n          }\n        }\n      }\n      else\n      {\n        v67 = 0LL;\n        do\n        {\n          if ( v115[v67] == v118 )\n            break;\n          ++v67;\n        }\n        while ( v67 < v117 );\n        if ( (_DWORD)v67 == v117 )\n          goto LABEL_146;\n      }\n      if ( v66 <= 0 )\n      {\n        if ( !v66 )\n          goto LABEL_153;\n      }\n      else\n      {\n        v68 = 0LL;\n        do\n        {\n          if ( v115[v68] == v119 )\n            break;\n          ++v68;\n        }\n        while ( v68 < v66 );\n        if ( (_DWORD)v68 == v66 )\n        {\nLABEL_153:\n          if ( v66 <= 49 )\n          {\n            v115[v66] = v119;\n            v116[v117++] = 0;\n          }\n          goto LABEL_155;\n        }\n      }\nLABEL_155:\n      if ( ++v65 == v64 )\n        break;\n      continue;\n    }\n  }\n  sub_4402B0(v5, (__int64)v115, v104, (__int64)\"attack3\", v62);\n  if ( (signed int)v62 >= v117 )\n    goto LABEL_190;\n  while ( 2 )\n  {\n    if ( v62 > 0 )\n    {\n      v69 = 45;\n      if ( dword_98A7F4 >= dword_98A768 )\n        goto LABEL_176;\n    }\n    v101 = v115[v62];\n    v69 = 0;\n    if ( !(unsigned int)sub_407EA0(\n                          v101,\n                          v104,\n                          \"attack3-C\",\n                          v5,\n                          v107,\n                          v4,\n                          (unsigned int *)&v118,\n                          v106,\n                          &v109,\n                          (dword_98A7F4 <= dword_98A784) & (unsigned __int8)(v102 == 0)) )\n      goto LABEL_176;\n    v70 = v109;\n    v71 = sub_43B820(v5, 0LL, v118, v106[0]);\n    if ( v70 )\n    {\n      if ( v71 == 5 )\n      {\n        v4 = v105;\n      }\n      else\n      {\n        v77 = sub_43B170(v5, 0LL, v118, v106[0]);\n        v4 = v105;\n        if ( v77 )\n        {\n          v102 = 1;\n          v103 = v101;\n        }\n      }\n      sub_407030();\n      goto LABEL_176;\n    }\n    if ( v71 == 5 || !(unsigned int)sub_43B170(v5, 0LL, v118, v106[0]) )\n    {\n      sub_407030();\nLABEL_175:\n      v4 = v105;\n      goto LABEL_176;\n    }\n    sub_407030();\n    if ( v71 )\n    {\n      v72 = v102;\n      v75 = __OFSUB__(5 - v71, v102);\n      v73 = 5 - v71 == v102;\n      v74 = 5 - v71 - v102 < 0;\n      if ( 5 - v71 >= v102 )\n        v72 = 5 - v71;\n      v102 = v72;\n      v76 = v103;\n      if ( !((unsigned __int8)(v74 ^ v75) | v73) )\n        v76 = v101;\n      v103 = v76;\n      goto LABEL_175;\n    }\n    if ( v108 )\n      *v108 = v101;\n    v69 = 1;\n    v4 = v105;\n    if ( qword_88C238 )\n      sub_40F0A0((__int64)\"attack3\", v5, v101, 5u, (__int64)\"attack effective\");\nLABEL_176:\n    if ( !(v69 & 0x3F) )\n    {\n      if ( ++v62 >= v117 )\n        goto LABEL_190;\n      continue;\n    }\n    break;\n  }\n  if ( (v69 & 0x3F) != 45 )\n  {\n    v7 = 5;\n    if ( v69 )\n      return v7;\n  }\nLABEL_190:\n  if ( dword_565C78 < 10\n    || dword_98A7F4 > dword_98A758\n    || (sub_44DF50(v5, v106, &v118, 3LL), (unsigned int)(v106[0] - 1) > 4) )\n  {\nLABEL_233:\n    if ( v102 )\n    {\n      v98 = v103;\n      if ( v108 )\n        *v108 = v103;\n      if ( qword_88C238 )\n      {\n        v99 = v102;\n        sub_40F0A0((__int64)\"attack3\", v5, v98, v102, (__int64)\"saved move\");\n        v7 = v99;\n      }\n      else\n      {\n        v7 = v102;\n      }\n      return v7;\n    }\nLABEL_4:\n    if ( !qword_88C238 )\n      return 0;\n    v7 = 0;\n    v8 = 0;\n    v9 = 0;\n    v10 = 0LL;\nLABEL_6:\n    v11 = v5;\n    goto LABEL_7;\n  }\n  v78 = 0LL;\n  v79 = v107;\n  while ( 2 )\n  {\n    v80 = *(&v118 + v78);\n    v81 = 52;\n    if ( (unsigned int)sub_40B0A0(*(&v118 + v78), v5) )\n      goto LABEL_195;\n    v81 = 0;\n    if ( !(unsigned int)sub_406880(v80, v104, \"attack3-E\", v5, v79, v4) )\n      goto LABEL_195;\n    if ( (unsigned int)sub_4083A0(v80) == 1 )\n    {\n      sub_408410(v80, 1, (unsigned __int64)&v101);\n      v81 = 0;\n      v82 = v104;\n      v83 = sub_4093D0(v101, v104, 2, 0LL);\n      sub_407030();\n      if ( v83 < 2 )\n      {\n        v79 = v107;\n      }\n      else\n      {\n        v84 = v82;\n        v79 = v107;\n        if ( (unsigned int)sub_406880(v101, v84, \"attack3-F\", v5, v107, v4) )\n        {\n          v85 = sub_43B820(v5, 0LL, v79, v4);\n          if ( v85 != 5 && (unsigned int)sub_43B170(v5, 0LL, v79, v4) )\n          {\n            sub_407030();\n            if ( v85 )\n            {\n              v86 = v102;\n              v89 = __OFSUB__(5 - v85, v102);\n              v87 = 5 - v85 == v102;\n              v88 = 5 - v85 - v102 < 0;\n              if ( 5 - v85 >= v102 )\n                v86 = 5 - v85;\n              v102 = v86;\n              v90 = v103;\n              if ( !((unsigned __int8)(v88 ^ v89) | v87) )\n                v90 = v101;\n              v103 = v90;\n            }\n            else\n            {\n              if ( v108 )\n                *v108 = v101;\n              v81 = 1;\n              if ( qword_88C238 )\n                sub_40F0A0((__int64)\"attack3\", v5, v101, 5u, (__int64)\"attack effective\");\n            }\n          }\n          else\n          {\n            sub_407030();\n          }\n        }\n      }\n      goto LABEL_195;\n    }\n    v91 = v79;\n    v92 = sub_43B820(v5, 0LL, v79, v4);\n    if ( v92 == 5 || !(unsigned int)sub_43B170(v5, 0LL, v91, v4) )\n    {\n      sub_407030();\nLABEL_220:\n      v79 = v91;\n      v81 = 0;\n      goto LABEL_195;\n    }\n    sub_407030();\n    if ( v92 )\n    {\n      v93 = v102;\n      v96 = __OFSUB__(5 - v92, v102);\n      v94 = 5 - v92 == v102;\n      v95 = 5 - v92 - v102 < 0;\n      if ( 5 - v92 >= v102 )\n        v93 = 5 - v92;\n      v102 = v93;\n      v97 = v103;\n      if ( !((unsigned __int8)(v95 ^ v96) | v94) )\n        v97 = v80;\n      v103 = v97;\n      goto LABEL_220;\n    }\n    if ( v108 )\n      *v108 = v80;\n    v79 = v91;\n    if ( qword_88C238 )\n      sub_40F0A0((__int64)\"attack3\", v5, v80, 5u, (__int64)\"attack effective\");\n    v81 = 1;\nLABEL_195:\n    if ( (v81 & 0x3F) == 52 || !(v81 & 0x3F) )\n    {\n      if ( ++v78 >= v106[0] )\n        goto LABEL_233;\n      continue;\n    }\n    break;\n  }\n  v7 = 5;\n  if ( !v81 )\n    goto LABEL_233;\n  return v7;\n}\n", 
            "funcStartAddr": "0x4437b0L", 
            "funcEndAddr": "0x444767L", 
            "funcName": "sub_4437B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_444770(unsigned int a1, _DWORD *a2, unsigned int a3, unsigned int a4)\n{\n  int v4; // ebp\n  __int64 v5; // r14\n  int v6; // edx\n  unsigned int v7; // ecx\n  const char *v8; // r8\n  unsigned int v9; // eax\n  __int64 v10; // rbx\n  __int64 v11; // r15\n  signed __int64 v12; // rcx\n  signed __int64 v13; // rax\n  int v14; // edx\n  int v15; // ebx\n  __int64 v16; // rbp\n  signed int v17; // eax\n  unsigned int v18; // er15\n  signed __int64 i; // rcx\n  signed __int64 v20; // rcx\n  __int64 v21; // r13\n  int v22; // er14\n  int v23; // er15\n  int v24; // ebp\n  bool v25; // zf\n  int v26; // eax\n  signed __int64 v27; // rax\n  int v28; // eax\n  __int64 v29; // rcx\n  int v30; // edx\n  int v31; // eax\n  signed int v32; // ebx\n  unsigned int v33; // ebp\n  unsigned int v34; // eax\n  int v35; // esi\n  signed __int64 v37; // r15\n  __int64 v38; // r14\n  __int64 v39; // r13\n  signed int v40; // eax\n  int v41; // [rsp+Ch] [rbp-4BCh]\n  int v42; // [rsp+10h] [rbp-4B8h]\n  unsigned int v43; // [rsp+14h] [rbp-4B4h]\n  __int64 v44; // [rsp+18h] [rbp-4B0h]\n  __int64 v45; // [rsp+20h] [rbp-4A8h]\n  unsigned int v46; // [rsp+28h] [rbp-4A0h]\n  unsigned int v47; // [rsp+2Ch] [rbp-49Ch]\n  int v48[4]; // [rsp+30h] [rbp-498h]\n  _DWORD *v49; // [rsp+40h] [rbp-488h]\n  int v50; // [rsp+4Ch] [rbp-47Ch]\n  __int64 v51; // [rsp+50h] [rbp-478h]\n  __int64 v52; // [rsp+58h] [rbp-470h]\n  int v53[6]; // [rsp+60h] [rbp-468h]\n  int v54[50]; // [rsp+78h] [rbp-450h]\n  int v55[50]; // [rsp+140h] [rbp-388h]\n  int v56; // [rsp+208h] [rbp-2C0h]\n  int v57[174]; // [rsp+210h] [rbp-2B8h]\n\n  v47 = a4;\n  v46 = a3;\n  v4 = (unsigned __int8)byte_98A1B0[a1];\n  if ( (unsigned __int8)(byte_98A1B0[a1] - 1) >= 2u )\n    sub_4340E0(\n      (__int64)\"engine/reading.c\",\n      0xBCCu,\n      (__int64)\"((board[str]) == 1 || (board[str]) == 2)\",\n      0xFFFFFFFF,\n      0xFFFFFFFF);\n  ++dword_87BE90;\n  v56 = 0;\n  if ( dword_98A7F4 > dword_98A76C )\n  {\n    if ( qword_88C238 )\n    {\n      LODWORD(v5) = 0;\n      v6 = 0;\n      v7 = 0;\n      v8 = \"stackp > depth\";\nLABEL_85:\n      v35 = a1;\n      goto LABEL_86;\n    }\n    goto LABEL_87;\n  }\n  v49 = a2;\n  v9 = sub_40A880(a1, (__int64)v57, 1);\n  if ( (signed int)v9 > 0 )\n  {\n    v10 = v9;\n    v11 = 0LL;\n    do\n    {\n      sub_4401B0(v57[v11], (__int64)v54);\n      sub_408410(v57[v11], 1, (unsigned __int64)v48);\n      LODWORD(v12) = 0;\n      if ( v56 > 0LL )\n      {\n        v12 = 0LL;\n        do\n        {\n          if ( v54[v12] == v48[0] )\n            break;\n          ++v12;\n        }\n        while ( v12 < v56 );\n      }\n      if ( (_DWORD)v12 == v56 && v56 <= 49 )\n      {\n        v54[v56] = v48[0];\n        v55[v56++] = 0;\n      }\n      ++v11;\n    }\n    while ( v11 != v10 );\n  }\n  sub_4420F0(a1, (__int64)v54);\n  if ( v56 > 0 )\n  {\n    v13 = 0LL;\n    do\n      v55[v13++] += 5;\n    while ( v13 < v56 );\n  }\n  LODWORD(v45) = sub_408410(a1, 4, (unsigned __int64)v53);\n  if ( (_DWORD)v45 != 4 )\n  {\n    v14 = (1717986919LL * (signed int)a1 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)a1) >> 63);\n    sub_4340E0((__int64)\"engine/reading.c\", 0xBE8u, (__int64)\"liberties == 4\", v14 - 1, a1 - 20 * v14 - 1);\n  }\n  v15 = 3 - v4;\n  v16 = 0LL;\n  do\n  {\n    v18 = v53[v16];\n    if ( dword_98A7F4 <= dword_98A75C\n      || dword_98A7F4 <= dword_98A76C\n      && v15 != (unsigned __int8)byte_98A1C4[v18]\n      && v15 != (unsigned __int8)byte_98A1AF[v18]\n      && v15 != (unsigned __int8)byte_98A19C[v18]\n      && v15 != (unsigned __int8)byte_98A1B1[v18]\n      || !(unsigned int)sub_40AD70(v18, v15) )\n    {\n      for ( i = 0LL; i < v56; ++i )\n      {\n        if ( v54[i] == v18 )\n          break;\n      }\n      if ( (_DWORD)i == v56 && v56 <= 49 )\n      {\n        v54[v56] = v18;\n        v55[v56++] = 0;\n      }\n    }\n    if ( (unsigned int)sub_445210(a1, v18, &v42) )\n    {\n      v17 = v56;\n      if ( v56 <= 0LL )\n      {\n        if ( v56 )\n          goto LABEL_47;\n      }\n      else\n      {\n        v20 = 0LL;\n        do\n        {\n          if ( v54[v20] == v42 )\n          {\n            v55[v20] += 10;\n            v17 = v56;\n            if ( (_DWORD)v20 == v56 )\n              goto LABEL_45;\n            goto LABEL_47;\n          }\n          ++v20;\n        }\n        while ( v20 < v56 );\n        if ( (_DWORD)v20 != v56 )\n          goto LABEL_47;\n      }\nLABEL_45:\n      if ( v17 <= 49 )\n      {\n        v54[v17] = v42;\n        v55[v56++] = 10;\n      }\n    }\nLABEL_47:\n    sub_444E70(a1, v18, v54);\n    ++v16;\n  }\n  while ( v16 != 4 );\n  sub_4409C0(a1, (__int64)v53, v45, (__int64)v54, v15);\n  v41 = 0;\n  sub_4402B0(a1, (__int64)v54, v15, (__int64)\"attack4\", 0);\n  v5 = 0LL;\n  v45 = v56;\n  if ( v56 > 0LL )\n  {\n    v21 = 0LL;\n    v22 = v42;\n    v44 = 0LL;\n    v41 = 0;\n    while ( 1 )\n    {\n      if ( v21 && dword_98A7F4 >= dword_98A768 )\n      {\nLABEL_70:\n        v42 = v22;\n        v5 = v44;\n        break;\n      }\n      v22 = v54[v21];\n      if ( (unsigned int)sub_407EA0(v54[v21], v15, \"attack4-A\", a1, v46, v47, (unsigned int *)v48, &v43, &v50, 0) )\n      {\n        v23 = v50;\n        v24 = sub_43B820(a1, 0LL, v48[0], v43);\n        if ( v23 )\n        {\n          if ( v24 != 5 )\n          {\n            v25 = (unsigned int)sub_43B170(a1, 0LL, v48[0], v43) == 0;\n            v26 = v41;\n            if ( !v25 )\n              v26 = v22;\n            v41 = v26;\n            v27 = v44;\n            if ( !v25 )\n              v27 = 1LL;\n            v44 = v27;\n          }\nLABEL_68:\n          sub_407030();\n          goto LABEL_69;\n        }\n        if ( v24 == 5 || !(unsigned int)sub_43B170(a1, 0LL, v48[0], v43) )\n          goto LABEL_68;\n        sub_407030();\n        if ( !v24 )\n        {\n          v42 = v22;\n          if ( v49 )\n            *v49 = v22;\n          if ( qword_88C238 )\n            sub_40F0A0((__int64)\"attack4\", a1, v22, 5u, (__int64)\"attack effective\");\n          goto LABEL_110;\n        }\n        v28 = 5 - v24;\n        v29 = v44;\n        v30 = v41;\n        if ( 5 - v24 > (signed int)v44 )\n          v30 = v22;\n        v41 = v30;\n        if ( v28 >= (signed int)v44 )\n          v29 = (unsigned int)v28;\n        v44 = v29;\n      }\nLABEL_69:\n      if ( ++v21 >= v45 )\n        goto LABEL_70;\n    }\n  }\n  if ( dword_98A7F4 > dword_98A75C )\n  {\nLABEL_78:\n    if ( !(_DWORD)v5 )\n    {\n      if ( qword_88C238 )\n      {\n        LODWORD(v5) = 0;\n        v6 = 0;\n        v7 = 0;\n        v8 = 0LL;\n        goto LABEL_85;\n      }\nLABEL_87:\n      LODWORD(v5) = 0;\n      return (unsigned int)v5;\n    }\n    v6 = v41;\n    if ( v49 )\n      *v49 = v41;\n    if ( qword_88C238 )\n    {\n      v8 = \"saved move\";\n      v35 = a1;\n      v7 = v5;\nLABEL_86:\n      sub_40F0A0((__int64)\"attack4\", v35, v6, v7, (__int64)v8);\n      return (unsigned int)v5;\n    }\n  }\n  else\n  {\n    v43 = 0;\n    v31 = sub_408410(a1, 4, (unsigned __int64)v48);\n    if ( (unsigned int)(v31 - 2) > 2 )\n    {\nLABEL_73:\n      v32 = 0;\n      v33 = v42;\nLABEL_74:\n      v34 = v41;\n      if ( v32 > (signed int)v5 )\n        v34 = v33;\n      v41 = v34;\n      if ( v32 >= (signed int)v5 )\n        LODWORD(v5) = v32;\n      goto LABEL_78;\n    }\n    v44 = v5;\n    v37 = v31;\n    v51 = v31 - 1;\n    v38 = 0LL;\n    v39 = 1LL;\n    v32 = 0;\n    v33 = 0;\n    do\n    {\n      v45 = v39;\n      v52 = v38 + 1;\n      if ( v38 + 1 < v37 )\n      {\n        while ( 1 )\n        {\n          v40 = sub_445100(a1, (unsigned int)v48[v38], (unsigned int)v48[v39], &v43, v46, v47);\n          if ( v40 == 5 )\n            break;\n          if ( v40 > v32 )\n            v33 = v43;\n          if ( v40 >= v32 )\n            v32 = v40;\n          if ( ++v39 >= v37 )\n            goto LABEL_97;\n        }\n        v33 = v43;\n        v42 = v43;\n        goto LABEL_102;\n      }\nLABEL_97:\n      v39 = v45 + 1;\n      v38 = v52;\n    }\n    while ( v52 < v51 );\n    LODWORD(v5) = v44;\n    if ( !v32 )\n      goto LABEL_73;\n    v42 = v33;\n    if ( v32 != 5 )\n      goto LABEL_74;\nLABEL_102:\n    if ( v49 )\n      *v49 = v33;\n    if ( qword_88C238 )\n    {\n      LODWORD(v5) = 5;\n      v7 = 5;\n      v8 = \"find cap\";\n      v35 = a1;\n      v6 = v33;\n      goto LABEL_86;\n    }\nLABEL_110:\n    LODWORD(v5) = 5;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x444770L", 
            "funcEndAddr": "0x444e6dL", 
            "funcName": "sub_444770"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_444E70(signed int a1, int a2, __int64 a3)\n{\n  int v3; // edx\n  unsigned __int64 v4; // r12\n  __int64 v5; // rbx\n  __int64 v6; // rbp\n  __int64 result; // rax\n  int v8; // er15\n  unsigned __int64 v9; // r14\n  __int64 v10; // r13\n  __int64 v11; // rbx\n  int v12; // edi\n  signed int v13; // eax\n  int v14; // edi\n  __int64 v15; // rax\n  __int64 v16; // rcx\n  int v17; // er14\n  int v18; // ebx\n  int v19; // ebp\n  int v20; // ebx\n  int v21; // ebp\n  __int64 v22; // rcx\n  int v23; // [rsp+Ch] [rbp-4Ch]\n  __int64 v24; // [rsp+10h] [rbp-48h]\n  signed int v25; // [rsp+1Ch] [rbp-3Ch]\n  __int64 v26; // [rsp+20h] [rbp-38h]\n\n  v24 = a3;\n  v25 = a1;\n  v3 = (unsigned __int8)byte_98A1B0[a1];\n  v23 = 3 - v3;\n  v4 = 0LL;\n  v5 = a2;\n  while ( 1 )\n  {\n    while ( 1 )\n    {\n      v6 = dword_5641B0[v4];\n      result = v5 - v6;\n      if ( byte_98A1B0[v5 - v6] == 3 )\n        break;\n      if ( ++v4 >= 4 )\n        return result;\n    }\n    if ( byte_98A1B0[v6 + v5] != (_BYTE)v3 )\n      return result;\n    v8 = v3;\n    result = sub_40B5B0((signed int)v5 + (signed int)v6, v25);\n    v3 = v8;\n    if ( !(_DWORD)result )\n      return result;\n    v9 = ++v4 & 3;\n    v10 = dword_5641B0[v9];\n    if ( byte_98A1B0[v10 + v5] == (_BYTE)v8 )\n    {\n      v11 = a2 + v10;\n      v12 = a2 + v10 + v6;\n      if ( v23 == (unsigned __int8)byte_98A1B0[v12] )\n      {\n        v26 = v12;\n        v13 = sub_4083A0(v12);\n        v3 = v8;\n        if ( v13 <= 1 && !byte_98A1B0[v11 + v10] )\n        {\n          v14 = v10 + v12;\n          if ( !byte_98A1B0[v10 + v26] && byte_98A1B0[v10 + v10 + v11] != (_BYTE)v8 )\n          {\n            v15 = *(signed int *)(v24 + 400);\n            v16 = 0LL;\n            if ( v15 > 0 )\n            {\n              while ( *(_DWORD *)(v24 + 4 * v16) != v14 )\n              {\n                if ( ++v16 >= v15 )\n                  goto LABEL_18;\n              }\n              *(_DWORD *)(v24 + 4 * v16 + 200) += 30;\n              LODWORD(v15) = *(_DWORD *)(v24 + 400);\n            }\nLABEL_18:\n            if ( (_DWORD)v16 == (_DWORD)v15 && (signed int)v15 <= 49 )\n            {\n              *(_DWORD *)(v24 + 4LL * (signed int)v15) = v14;\n              *(_DWORD *)(v24 + 4LL * (signed int)(*(_DWORD *)(v24 + 400))++ + 200) = 30;\n            }\n          }\n        }\n      }\n    }\n    v17 = dword_5641B0[v9];\n    v18 = a2 - v17;\n    result = a2 - v17;\n    if ( byte_98A1B0[result] != (_BYTE)v3 )\n      goto LABEL_28;\n    v19 = v18 + v6;\n    result = (unsigned __int8)byte_98A1B0[v19];\n    if ( v23 != (_DWORD)result )\n      goto LABEL_28;\n    result = sub_4083A0(v19);\n    if ( (signed int)result <= 1 )\n    {\n      v20 = v18 - v17;\n      result = v20;\n      v3 = v8;\n      if ( byte_98A1B0[v20] )\n        goto LABEL_28;\n      v21 = v19 - v17;\n      result = v21;\n      if ( byte_98A1B0[v21] )\n        goto LABEL_28;\n      result = v20 - v17;\n      if ( byte_98A1B0[result] == (_BYTE)v8 )\n        goto LABEL_28;\n      result = *(signed int *)(v24 + 400);\n      v22 = 0LL;\n      if ( result > 0 )\n      {\n        while ( *(_DWORD *)(v24 + 4 * v22) != v21 )\n        {\n          if ( ++v22 >= result )\n            goto LABEL_36;\n        }\n        *(_DWORD *)(v24 + 4 * v22 + 200) += 30;\n        result = *(unsigned int *)(v24 + 400);\n      }\nLABEL_36:\n      v5 = a2;\n      if ( (_DWORD)v22 != (_DWORD)result || (signed int)result > 49 )\n        goto LABEL_29;\n      *(_DWORD *)(v24 + 4LL * (signed int)result) = v21;\n      result = *(signed int *)(v24 + 400);\n      *(_DWORD *)(v24 + 4 * result + 200) = 30;\n      ++*(_DWORD *)(v24 + 400);\n      if ( v4 >= 4 )\n        return result;\n    }\n    else\n    {\n      v3 = v8;\nLABEL_28:\n      v5 = a2;\nLABEL_29:\n      if ( v4 >= 4 )\n        return result;\n    }\n  }\n}\n", 
            "funcStartAddr": "0x444e70L", 
            "funcEndAddr": "0x4450f2L", 
            "funcName": "sub_444E70"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_445100(unsigned int a1, int a2, int a3, _DWORD *a4, unsigned int a5, unsigned int a6)\n{\n  unsigned int v6; // er14\n  unsigned int v7; // er15\n  unsigned int v8; // er12\n  unsigned int v9; // er13\n  int v10; // ebp\n  __int64 v11; // rdi\n  unsigned int v12; // esi\n  unsigned int v13; // ebp\n  signed int v14; // eax\n\n  v6 = a6;\n  v7 = a5;\n  v8 = a1;\n  v9 = 0;\n  if ( a3 + 21 == a2 || a3 - 19 == a2 || a3 + 19 == a2 || a3 - 21 == a2 )\n  {\n    v10 = 20 * (((unsigned __int64)(1717986919LL * a3) >> 63) + (1717986919LL * a3 >> 35));\n    v11 = a2 - 20 * (((unsigned __int64)(1717986919LL * a2) >> 63) + (unsigned int)(1717986919LL * a2 >> 35)) + v10;\n    if ( !byte_98A1B0[(signed int)v11]\n      || (v12 = a3 - v10 + 20 * (((unsigned __int64)(1717986919LL * a2) >> 63) + (1717986919LL * a2 >> 35)),\n          v11 = v12,\n          !byte_98A1B0[v12]) )\n    {\n      *a4 = v11;\n      if ( (unsigned int)sub_406880(v11, 3 - (unsigned int)(unsigned __int8)byte_98A1B0[v8], \"find_cap2\", v8, a5, a6) )\n      {\n        v9 = 0;\n        v13 = sub_43B820(v8, 0LL, v7, v6);\n        sub_407030();\n        if ( v13 <= 5 )\n        {\n          v14 = 51;\n          if ( _bittest(&v14, v13) )\n            v9 = dword_4AF240[v13];\n        }\n      }\n    }\n  }\n  return v9;\n}\n", 
            "funcStartAddr": "0x445100L", 
            "funcEndAddr": "0x445205L", 
            "funcName": "sub_445100"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_445210(int a1, int a2, _DWORD *a3)\n{\n  int v3; // er9\n  __int64 v4; // rcx\n  signed __int64 v5; // r8\n  signed __int64 result; // rax\n  int v7; // er8\n  char v8; // r10\n  char v9; // bl\n  int v10; // er10\n  __int64 v11; // rcx\n  int v12; // ecx\n  int v13; // edi\n  _BOOL4 v14; // ebp\n  _BOOL4 v15; // ecx\n  unsigned int v16; // ebx\n\n  v3 = (unsigned __int8)byte_98A1B0[a1];\n  LODWORD(v4) = dword_5641B0[0];\n  if ( byte_98A1B0[a2 - dword_5641B0[0]] == 3 )\n  {\n    v5 = 1LL;\n  }\n  else\n  {\n    LODWORD(v4) = dword_5641B4;\n    if ( byte_98A1B0[a2 - dword_5641B4] == 3 )\n    {\n      v5 = 2LL;\n    }\n    else\n    {\n      LODWORD(v4) = dword_5641B8;\n      if ( byte_98A1B0[a2 - dword_5641B8] == 3 )\n      {\n        v5 = 3LL;\n      }\n      else\n      {\n        LODWORD(v4) = dword_5641BC;\n        result = 0LL;\n        if ( byte_98A1B0[a2 - dword_5641BC] != 3 )\n          return result;\n        v5 = 0LL;\n      }\n    }\n  }\n  v4 = (signed int)v4;\n  result = 0LL;\n  if ( byte_98A1B0[(signed int)v4 + (signed __int64)a2] == (_BYTE)v3 )\n  {\n    v7 = dword_5641B0[v5];\n    v8 = byte_98A1B0[v7 + (signed __int64)a2];\n    v9 = byte_98A1B0[a2 - v7];\n    if ( v8 || v9 != 3 && v9 != (_BYTE)v3 )\n    {\n      if ( v9 || v8 != 3 && v8 != (_BYTE)v3 )\n        return result;\n      v7 = -v7;\n    }\n    v10 = 3 - v3;\n    v11 = a2 + v4;\n    if ( 3 - v3 == (unsigned __int8)byte_98A1B0[v7 + v11] )\n    {\n      v12 = (unsigned __int8)byte_98A1B0[2 * v7 + v11];\n      if ( v12 != 3 )\n      {\n        v13 = (unsigned __int8)byte_98A1B0[2 * v7 + a2];\n        if ( (_BYTE)v13 == (_BYTE)v3 )\n          goto LABEL_26;\n        v14 = (_BYTE)v12 == (_BYTE)v3;\n        v15 = (_BYTE)v12 != (_BYTE)v3 && v10 == v12;\n        v16 = v15 + 1;\n        if ( v10 != v13 )\n          v16 = v15;\n        if ( v16 <= v14 )\n        {\nLABEL_26:\n          *a3 = a2 + v7;\n          result = 5LL;\n        }\n      }\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x445210L", 
            "funcEndAddr": "0x44535aL", 
            "funcName": "sub_445210"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_445360()\n{\n  __int64 result; // rax\n  __int64 v1; // [rsp+0h] [rbp-648h]\n\n  result = (unsigned int)dword_88C224;\n  if ( dword_88C224 & 1 )\n  {\n    sub_445B70(5LL, 21LL, &v1, 1LL);\n    sub_4461E0(&v1);\n    sub_446400(&v1);\n    result = (unsigned int)dword_88C224;\n    if ( !(dword_88C224 & 2) )\n    {\nLABEL_3:\n      if ( !(result & 4) )\n        return result;\n      goto LABEL_4;\n    }\n  }\n  else if ( !(result & 2) )\n  {\n    goto LABEL_3;\n  }\n  sub_445B70(5LL, 10LL, &v1, 1LL);\n  sub_4461E0(&v1);\n  sub_446400(&v1);\n  result = (unsigned int)dword_88C224;\n  if ( dword_88C224 & 4 )\n  {\nLABEL_4:\n    sub_445B70(4LL, 0LL, &v1, 1LL);\n    sub_4461E0(&v1);\n    result = sub_446400(&v1);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x445360L", 
            "funcEndAddr": "0x445418L", 
            "funcName": "sub_445360"
        }, 
        {
            "decompiledFuncCode": "__int128 __usercall sub_445420@<xmm0>(_DWORD *a1@<rdi>, float *a2@<rsi>, double a3@<xmm0>, double a4@<xmm1>, double a5@<xmm2>, double a6@<xmm3>, double a7@<xmm4>, double a8@<xmm5>, double a9@<xmm6>)\n{\n  __int64 v9; // rcx\n  __int64 v10; // r8\n  char *v11; // r9\n  double v12; // xmm4_8\n  double v13; // xmm5_8\n  int v14; // esi\n  __int128 v15; // xmm2\n  int v16; // er13\n  double v17; // xmm1_8\n  float v18; // xmm0_4\n  double v19; // xmm3_8\n  __int64 v20; // r15\n  __int64 v21; // rbp\n  __int64 v22; // rdx\n  unsigned int v23; // er10\n  __int64 v24; // rax\n  char v25; // bl\n  signed __int64 v26; // rdi\n  int v27; // eax\n  signed __int64 v28; // rax\n  int v29; // edi\n  signed __int64 v30; // rbx\n  __int64 v31; // r14\n  char *v32; // rbx\n  __int64 v33; // rdi\n  signed __int64 v34; // rax\n  int v35; // eax\n  signed __int64 v36; // rbx\n  __int64 v37; // r14\n  char *v38; // rbx\n  __int64 v39; // rax\n  signed __int64 v40; // rdi\n  int v41; // eax\n  __int64 v42; // rsi\n  char *v43; // rdi\n  float v44; // xmm0_4\n  float *v45; // rax\n  _DWORD *v46; // rcx\n  float v47; // xmm1_4\n  __int64 v48; // rcx\n  __int64 v49; // r8\n  char *v50; // r9\n  double v51; // xmm5_8\n  int v52; // esi\n  double v53; // xmm1_8\n  int v54; // er12\n  double v55; // xmm4_8\n  double v56; // xmm0_8\n  double v57; // xmm3_8\n  __int64 v58; // r14\n  __int64 v59; // r13\n  __int64 v60; // rdx\n  unsigned int v61; // er10\n  __int64 v62; // rax\n  char v63; // bl\n  signed __int64 v64; // rax\n  int v65; // edi\n  signed __int64 v66; // rbp\n  __int64 v67; // rax\n  char *v68; // rbp\n  __int64 v69; // rdi\n  signed __int64 v70; // rbx\n  signed __int64 v71; // rax\n  int v72; // edi\n  signed __int64 v73; // rbp\n  __int64 v74; // rax\n  char *v75; // rbp\n  __int64 v76; // rdi\n  signed __int64 v77; // rbx\n  int v78; // eax\n  int v79; // eax\n  __int64 v80; // rsi\n  char *v81; // rdi\n  unsigned int v82; // ST1C_4\n  unsigned int v84; // [rsp+10h] [rbp-698h]\n  int v85; // [rsp+1Ch] [rbp-68Ch]\n  _DWORD *v86; // [rsp+20h] [rbp-688h]\n  float *v87; // [rsp+28h] [rbp-680h]\n  int v88[414]; // [rsp+30h] [rbp-678h]\n\n  v87 = a2;\n  v86 = a1;\n  v85 = sub_445B70(5LL, 21LL, v88, 1LL);\n  sub_4461E0(v88);\n  if ( dword_88C264 & 0x10000 )\n    sub_446400(v88);\n  v14 = dword_565C68;\n  if ( dword_565C68 > 0 )\n  {\n    v15 = 0LL;\n    *(_QWORD *)&v12 = 1065353216LL;\n    *(_QWORD *)&v13 = 0x40000000LL;\n    v16 = 0;\n    v17 = 0.0;\n    v18 = 0.0;\n    v19 = 0.0;\n    while ( 1 )\n    {\n      if ( v14 > 0 )\n      {\n        v20 = (20 * v16 + 21) & 0xFFFFFFFD;\n        v11 = (char *)ptr + 4;\n        v21 = 0LL;\n        v9 = 0LL;\n        v22 = 0LL;\n        v23 = 0;\n        v10 = 0LL;\n        while ( 1 )\n        {\n          v24 = v20 + v21;\n          v25 = byte_98A1B0[v20 + v21];\n          if ( v25 == 1 )\n          {\n            v28 = 19 * v24;\n            v29 = dword_954FF0[v28];\n            if ( (unsigned int)(v29 - 1) >= 3 )\n            {\n              v30 = 104LL * *(signed int *)(v28 * 4 + 9785268);\n              v31 = *(signed int *)((char *)ptr + v30 + 44);\n              if ( !((unsigned int)v31 | v29) )\n                goto LABEL_31;\n              if ( (signed int)v31 > 0 )\n              {\n                v32 = &v11[v30];\n                v33 = 0LL;\n                while ( 1 )\n                {\n                  v34 = 19LL * *((signed int *)ptr + 26 * *(signed int *)&v32[4 * v33]);\n                  if ( *(_DWORD *)((char *)&xmmword_954FB0 + v34 * 4) == 2 && dword_954FF0[v34] == 1 )\n                    break;\n                  if ( ++v33 >= v31 )\n                    goto LABEL_19;\n                }\nLABEL_31:\n                *(float *)&v19 = *(float *)&v19 + *(float *)&v13;\n                *(float *)&v17 = *(float *)&v17 + *(float *)&v12;\n                v10 = (unsigned int)(v10 + 2);\nLABEL_32:\n                v9 = (unsigned int)(v9 + 1);\n                goto LABEL_33;\n              }\n            }\nLABEL_19:\n            v18 = v18 + *(float *)&v12;\n            v22 = (unsigned int)(v22 + 1);\n          }\n          else if ( v25 == 2 )\n          {\n            v26 = 76 * v24;\n            v27 = dword_954FF0[19 * v24];\n            if ( (v27 | 2) == 3 )\n              goto LABEL_11;\n            v36 = 104LL * *(signed int *)(v26 + 9785268);\n            v37 = *(signed int *)((char *)ptr + v36 + 44);\n            if ( (unsigned int)v37 | v27 )\n            {\n              if ( (signed int)v37 <= 0 )\n              {\nLABEL_11:\n                *(float *)&v17 = *(float *)&v17 + *(float *)&v12;\n                goto LABEL_32;\n              }\n              v38 = &v11[v36];\n              v39 = 0LL;\n              while ( 1 )\n              {\n                v40 = 19LL * *((signed int *)ptr + 26 * *(signed int *)&v38[4 * v39]);\n                if ( *(_DWORD *)((char *)&xmmword_954FB0 + v40 * 4) == 1 && (unsigned int)(dword_954FF0[v40] - 1) < 2 )\n                  break;\n                if ( ++v39 >= v37 )\n                  goto LABEL_11;\n              }\n            }\n            *(float *)&v15 = *(float *)&v15 + *(float *)&v13;\n            v18 = v18 + *(float *)&v12;\n            v23 += 2;\n            v22 = (unsigned int)(v22 + 1);\n          }\n          else\n          {\n            v35 = v88[v24];\n            if ( v35 <= 0 )\n            {\n              if ( v35 < 0 )\n              {\n                *(float *)&v19 = *(float *)&v19 + *(float *)&v12;\n                *(float *)&v17 = *(float *)&v17 + *(float *)&v12;\n                v10 = (unsigned int)(v10 + 1);\n                goto LABEL_32;\n              }\n            }\n            else\n            {\n              *(float *)&v15 = *(float *)&v15 + *(float *)&v12;\n              v18 = v18 + *(float *)&v12;\n              ++v23;\n              v22 = (unsigned int)(v22 + 1);\n            }\n          }\nLABEL_33:\n          if ( ++v21 == v14 )\n            goto LABEL_36;\n        }\n      }\n      v10 = 0LL;\n      v23 = 0;\n      v22 = 0LL;\n      v9 = 0LL;\nLABEL_36:\n      v41 = dword_88C264;\n      if ( dword_88C300 )\n      {\n        if ( v41 & 0x10000 )\n        {\n          v42 = (unsigned int)(v14 - v16);\n          v43 = \"in row %d, white area=%d, black=%d\\n\";\nLABEL_41:\n          sub_433F90(v43, v42, v22, v9, v10, v11);\n          *(_QWORD *)&v13 = 0x40000000LL;\n          *(_QWORD *)&v12 = 1065353216LL;\n          *(_QWORD *)&v17 = LODWORD(v17);\n          *(_QWORD *)&v19 = LODWORD(v19);\n          v15 = (unsigned int)v15;\n          goto LABEL_42;\n        }\n      }\n      else if ( v41 & 0x10000 )\n      {\n        v42 = (unsigned int)(v14 - v16);\n        v43 = \"in row %d, white territory=%d, black=%d\\n\";\n        v22 = v23;\n        v9 = (unsigned int)v10;\n        goto LABEL_41;\n      }\nLABEL_42:\n      ++v16;\n      v14 = dword_565C68;\n      if ( dword_565C68 <= v16 )\n      {\n        if ( dword_88C300 )\n          goto LABEL_44;\nLABEL_46:\n        if ( dword_88C264 & 0x10000 )\n        {\n          sub_433F90(\n            \"black captured: %d\\nwhite captured: %d\\nkomi: %f\\n\",\n            (unsigned int)qword_98A760,\n            (unsigned int)dword_98A800,\n            v9,\n            v10,\n            v11,\n            *(float *)&dword_98A788,\n            v17,\n            *(double *)&v15,\n            v19,\n            v12,\n            v13);\n          v15 = (unsigned int)v15;\n        }\n        *(float *)&v15 = (float)((float)(*(float *)&v15 + (float)(signed int)qword_98A760) - *(float *)&v19)\n                       - (float)dword_98A800;\n        v44 = *(float *)&dword_98A788;\n        goto LABEL_49;\n      }\n    }\n  }\n  v19 = 0.0;\n  v18 = 0.0;\n  v17 = 0.0;\n  v15 = 0LL;\n  if ( !dword_88C300 )\n    goto LABEL_46;\nLABEL_44:\n  v44 = v18 - *(float *)&v17;\n  v15 = (unsigned int)dword_98A788;\nLABEL_49:\n  v45 = v87;\n  v46 = v86;\n  *(float *)&v15 = *(float *)&v15 + v44;\n  v47 = *(float *)&v15;\n  if ( v85 )\n  {\n    v84 = v15;\n    sub_445B70(5LL, 21LL, v88, 2LL);\n    sub_4461E0(v88);\n    v52 = dword_565C68;\n    if ( dword_565C68 > 0 )\n    {\n      v53 = 0.0;\n      *(_QWORD *)&v51 = 0x40000000LL;\n      *(_QWORD *)&a9 = 1065353216LL;\n      v54 = 0;\n      v55 = 0.0;\n      v56 = 0.0;\n      v57 = 0.0;\n      v15 = (unsigned int)v15;\n      while ( 1 )\n      {\n        if ( v52 > 0 )\n        {\n          v58 = (20 * v54 + 21) & 0xFFFFFFFD;\n          v50 = (char *)ptr + 4;\n          v59 = 0LL;\n          v48 = 0LL;\n          v60 = 0LL;\n          v61 = 0;\n          v49 = 0LL;\n          while ( 1 )\n          {\n            v62 = v58 + v59;\n            v63 = byte_98A1B0[v58 + v59];\n            if ( v63 == 1 )\n            {\n              v71 = 19 * v62;\n              v72 = dword_954FF0[v71];\n              if ( (dword_954FF0[v71] | 2) != 3 )\n              {\n                v73 = 104LL * *(signed int *)(v71 * 4 + 9785268);\n                v74 = *(signed int *)((char *)ptr + v73 + 44);\n                if ( !((unsigned int)v74 | v72) )\n                  goto LABEL_78;\n                if ( (signed int)v74 > 0 )\n                {\n                  v75 = &v50[v73];\n                  v76 = 0LL;\n                  while ( 1 )\n                  {\n                    v77 = 19LL * *((signed int *)ptr + 26 * *(signed int *)&v75[4 * v76]);\n                    if ( *(_DWORD *)((char *)&xmmword_954FB0 + v77 * 4) == 2\n                      && (unsigned int)(dword_954FF0[v77] - 1) < 2 )\n                    {\n                      break;\n                    }\n                    if ( ++v76 >= v74 )\n                      goto LABEL_79;\n                  }\nLABEL_78:\n                  *(float *)&v57 = *(float *)&v57 + *(float *)&v51;\n                  v49 = (unsigned int)(v49 + 2);\n                  *(float *)&v55 = (float)(*(float *)&v55 + *(float *)&a9) + *(float *)&a9;\n                  goto LABEL_79;\n                }\n              }\n            }\n            else\n            {\n              if ( v63 == 2 )\n              {\n                v64 = 19 * v62;\n                v65 = dword_954FF0[v64];\n                if ( (unsigned int)(v65 - 1) >= 3 )\n                {\n                  v66 = 104LL * *(signed int *)(v64 * 4 + 9785268);\n                  v67 = *(signed int *)((char *)ptr + v66 + 44);\n                  if ( !((unsigned int)v67 | v65) )\n                    goto LABEL_77;\n                  if ( (signed int)v67 > 0 )\n                  {\n                    v68 = &v50[v66];\n                    v69 = 0LL;\n                    while ( 1 )\n                    {\n                      v70 = 19LL * *((signed int *)ptr + 26 * *(signed int *)&v68[4 * v69]);\n                      if ( *(_DWORD *)((char *)&xmmword_954FB0 + v70 * 4) == 1 && dword_954FF0[v70] == 1 )\n                        break;\n                      if ( ++v69 >= v67 )\n                        goto LABEL_63;\n                    }\nLABEL_77:\n                    *(float *)&v53 = *(float *)&v53 + *(float *)&v51;\n                    v61 += 2;\n                    *(float *)&v56 = *(float *)&v56 + *(float *)&a9;\n                    v60 = (unsigned int)(v60 + 1);\n                    goto LABEL_79;\n                  }\n                }\nLABEL_63:\n                *(float *)&v55 = *(float *)&v55 + *(float *)&a9;\n              }\n              else\n              {\n                v78 = v88[v62];\n                if ( v78 > 0 )\n                {\n                  *(float *)&v53 = *(float *)&v53 + *(float *)&a9;\n                  ++v61;\n                  *(float *)&v56 = (float)(*(float *)&v56 + *(float *)&a9) + *(float *)&a9;\n                  goto LABEL_79;\n                }\n                if ( v78 >= 0 )\n                  goto LABEL_79;\n                *(float *)&v57 = *(float *)&v57 + *(float *)&a9;\n                *(float *)&v55 = *(float *)&v55 + *(float *)&a9;\n                v49 = (unsigned int)(v49 + 1);\n              }\n              v48 = (unsigned int)(v48 + 1);\n            }\nLABEL_79:\n            if ( ++v59 == v52 )\n              goto LABEL_82;\n          }\n        }\n        v49 = 0LL;\n        v61 = 0;\n        v60 = 0LL;\n        v48 = 0LL;\nLABEL_82:\n        v79 = dword_88C264;\n        if ( dword_88C300 )\n        {\n          if ( v79 & 0x10000 )\n          {\n            v80 = (unsigned int)(v52 - v54);\n            v81 = \"in row %d, white area=%d, black=%d\\n\";\nLABEL_87:\n            v82 = LODWORD(v55);\n            sub_433F90(v81, v80, v60, v48, v49, v50, v56, v53, *(double *)&v15, v57, v55, v51);\n            *(_QWORD *)&a9 = 1065353216LL;\n            *(_QWORD *)&v51 = 0x40000000LL;\n            *(_QWORD *)&v55 = v82;\n            *(_QWORD *)&v56 = LODWORD(v56);\n            *(_QWORD *)&v57 = LODWORD(v57);\n            *(_QWORD *)&v53 = LODWORD(v53);\n            v15 = v84;\n            goto LABEL_88;\n          }\n        }\n        else if ( v79 & 0x10000 )\n        {\n          v80 = (unsigned int)(v52 - v54);\n          v81 = \"in row %d, white territory=%d, black=%d\\n\";\n          v60 = v61;\n          v48 = (unsigned int)v49;\n          goto LABEL_87;\n        }\nLABEL_88:\n        ++v54;\n        v52 = dword_565C68;\n        if ( dword_565C68 <= v54 )\n        {\n          if ( dword_88C300 )\n            goto LABEL_90;\nLABEL_92:\n          if ( dword_88C264 & 0x10000 )\n          {\n            sub_433F90(\n              \"black captured: %d\\nwhite captured: %d\\nkomi: %f\\n\",\n              (unsigned int)qword_98A760,\n              (unsigned int)dword_98A800,\n              v48,\n              v49,\n              v50,\n              *(float *)&dword_98A788,\n              v53,\n              *(double *)&v15,\n              v57,\n              v55,\n              v51,\n              a9);\n            v15 = v84;\n          }\n          v47 = (float)((float)((float)(*(float *)&v53 + (float)(signed int)qword_98A760) - *(float *)&v57)\n                      - (float)dword_98A800)\n              + *(float *)&dword_98A788;\n          goto LABEL_95;\n        }\n      }\n    }\n    v57 = 0.0;\n    LODWORD(v56) = 0;\n    v55 = 0.0;\n    v53 = 0.0;\n    v15 = (unsigned int)v15;\n    if ( !dword_88C300 )\n      goto LABEL_92;\nLABEL_90:\n    v47 = (float)(*(float *)&v56 - *(float *)&v55) + *(float *)&dword_98A788;\nLABEL_95:\n    v45 = v87;\n    v46 = v86;\n  }\n  if ( v46 )\n    *v46 = v15;\n  if ( v45 )\n    *v45 = v47;\n  *(float *)&v15 = (float)(*(float *)&v15 + v47) * 0.5;\n  return v15;\n}\n", 
            "funcStartAddr": "0x445420L", 
            "funcEndAddr": "0x445b6fL", 
            "funcName": "sub_445420"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_445B70(int a1, int a2, _DWORD *a3, int a4)\n{\n  _DWORD *v4; // r14\n  int v5; // er12\n  signed int *v6; // r10\n  signed __int64 v7; // r9\n  signed __int64 v8; // r15\n  signed int v9; // ebp\n  __int64 v10; // rax\n  __int64 v11; // r11\n  __int64 v12; // rbx\n  signed __int64 v13; // r8\n  int v14; // er9\n  int v15; // edx\n  int v16; // ebx\n  signed __int64 v17; // r11\n  __int64 v18; // r8\n  char *v19; // r11\n  __int64 v20; // rdi\n  signed __int64 v21; // rdx\n  int v22; // eax\n  int v23; // er15\n  int v24; // ebp\n  signed __int64 v25; // rax\n  int v26; // edx\n  char v27; // cl\n  char v28; // bl\n  char v29; // di\n  char v30; // si\n  char v31; // dl\n  char v32; // bl\n  char v33; // si\n  int v34; // ebp\n  signed __int64 v35; // rax\n  int v36; // ecx\n  int v37; // edx\n  int v38; // ecx\n  int v39; // ecx\n  signed __int64 v41; // [rsp+0h] [rbp-688h]\n  unsigned int v42; // [rsp+0h] [rbp-688h]\n  char *v43; // [rsp+8h] [rbp-680h]\n  char dest; // [rsp+10h] [rbp-678h]\n  int v45[14]; // [rsp+650h] [rbp-38h]\n\n  v4 = a3;\n  v5 = a1;\n  v6 = (signed int *)ptr;\n  v43 = (char *)ptr + 4;\n  v7 = 0LL;\n  v8 = 21LL;\n  do\n  {\n    v15 = (unsigned __int8)byte_98A1B0[v8];\n    if ( !byte_98A1B0[v8] )\n      goto LABEL_32;\n    if ( (_BYTE)v15 == 3 )\n      goto LABEL_34;\n    v16 = dword_954FF0[19 * v8];\n    if ( v16 == 2 )\n      v7 = 1LL;\n    if ( (_BYTE)v15 == 2 )\n    {\n      v9 = -128;\n      if ( (v16 | 2) == 3 || v15 == a4 && v16 == 2 )\n        goto LABEL_33;\n      v41 = v7;\n      v10 = *((signed int *)&xmmword_954FB0 + 19 * v8 + 1);\n      v11 = v6[26 * v10 + 11];\n      if ( (unsigned int)v11 | v16 )\n      {\n        if ( (signed int)v11 <= 0 )\n        {\nLABEL_14:\n          v7 = v41;\n          goto LABEL_33;\n        }\n        v12 = 0LL;\n        while ( 1 )\n        {\n          v13 = 19LL * v6[26 * *(signed int *)&v43[104 * v10 + 4 * v12]];\n          if ( *(_DWORD *)((char *)&xmmword_954FB0 + v13 * 4) == 3 - v15 )\n          {\n            v14 = dword_954FF0[v13];\n            if ( v14 == 1 || v14 == 2 && v15 != a4 )\n              break;\n          }\n          if ( ++v12 >= v11 )\n            goto LABEL_14;\n        }\n      }\n      v9 = 0;\n      goto LABEL_14;\n    }\n    if ( (_BYTE)v15 != 1 )\n      goto LABEL_32;\n    v9 = 128;\n    if ( (v16 | 2) == 3 || a4 == 1 && v16 == 2 )\n      goto LABEL_33;\n    v17 = 26LL * *((signed int *)&xmmword_954FB0 + 19 * v8 + 1);\n    v18 = v6[v17 + 11];\n    if ( !((unsigned int)v18 | v16) )\n      goto LABEL_32;\n    if ( (signed int)v18 > 0 )\n    {\n      v19 = &v43[v17 * 4];\n      v20 = 0LL;\n      while ( 1 )\n      {\n        v21 = 19LL * v6[26 * *(signed int *)&v19[4 * v20]];\n        if ( *(_DWORD *)((char *)&xmmword_954FB0 + v21 * 4) == 2 )\n        {\n          v22 = dword_954FF0[v21];\n          if ( v22 == 1 || v22 == 2 && a4 != 1 )\n            break;\n        }\n        if ( ++v20 >= v18 )\n          goto LABEL_33;\n      }\nLABEL_32:\n      v9 = 0;\n    }\nLABEL_33:\n    v4[v8] = v9;\nLABEL_34:\n    ++v8;\n  }\n  while ( v8 != 400 );\n  v42 = v7;\n  v23 = a2;\n  memcpy(&dest, v4, 0x640uLL);\n  if ( v5 <= 0 )\n    goto LABEL_84;\n  v24 = 0;\n  while ( 2 )\n  {\n    v25 = -379LL;\n    while ( 2 )\n    {\n      while ( byte_98A340[v25] != 3 )\n      {\n        v26 = v4[v25 + 400];\n        v27 = byte_98A354[v25];\n        if ( v26 >= 0 )\n        {\n          if ( v27 == 3 || v4[v25 + 420] >= 0 )\n          {\n            v28 = byte_98A33F[v25];\n            if ( v28 == 3 || v4[v25 + 399] >= 0 )\n            {\n              v29 = byte_98A32C[v25];\n              if ( v29 == 3 || v4[v25 + 380] >= 0 )\n              {\n                v30 = byte_98A341[v25];\n                if ( v30 == 3 || v4[v25 + 401] >= 0 )\n                {\n                  if ( v27 != 3 && v4[v25 + 420] > 0 )\n                    ++v45[v25];\n                  if ( v28 != 3 && v4[v25 + 399] > 0 )\n                    ++v45[v25];\n                  if ( v29 != 3 && v4[v25 + 380] > 0 )\n                    ++v45[v25];\n                  if ( v30 != 3 && v4[v25 + 401] > 0 )\n                    ++v45[v25];\n                }\n              }\n            }\n          }\n          if ( v26 > 0 )\n            break;\n        }\n        if ( v27 != 3 && v4[v25 + 420] > 0 )\n          break;\n        v31 = byte_98A33F[v25];\n        if ( v31 != 3 && v4[v25 + 399] > 0 )\n          break;\n        v32 = byte_98A32C[v25];\n        if ( v32 != 3 && v4[v25 + 380] > 0 )\n          break;\n        v33 = byte_98A341[v25];\n        if ( v33 != 3 && v4[v25 + 401] > 0 )\n          break;\n        if ( v27 != 3 && v4[v25 + 420] < 0 )\n        {\n          --v45[v25];\n          if ( v31 == 3 )\n          {\nLABEL_80:\n            if ( v32 == 3 )\n              goto LABEL_81;\n            goto LABEL_74;\n          }\n        }\n        else if ( v31 == 3 )\n        {\n          goto LABEL_80;\n        }\n        if ( v4[v25 + 399] >= 0 )\n          goto LABEL_80;\n        --v45[v25];\n        if ( v32 == 3 )\n          goto LABEL_81;\nLABEL_74:\n        if ( v4[v25 + 380] < 0 )\n        {\n          --v45[v25];\n          if ( v33 == 3 )\n            break;\n          goto LABEL_76;\n        }\nLABEL_81:\n        if ( v33 == 3 )\n          break;\nLABEL_76:\n        if ( v4[v25 + 401] >= 0 )\n          break;\n        --v45[v25++];\n        if ( !v25 )\n          goto LABEL_83;\n      }\n      if ( ++v25 )\n        continue;\n      break;\n    }\nLABEL_83:\n    memcpy(v4, &dest, 0x640uLL);\n    if ( ++v24 != v5 )\n      continue;\n    break;\n  }\nLABEL_84:\n  if ( v23 > 0 )\n  {\n    v34 = 0;\n    do\n    {\n      v35 = -379LL;\n      do\n      {\n        while ( 1 )\n        {\n          if ( byte_98A340[v35] == 3 )\n            goto LABEL_128;\n          v36 = v45[v35];\n          if ( v36 > 0 )\n            break;\n          if ( v36 >= 0 )\n            goto LABEL_128;\n          if ( byte_98A354[v35] != 3 && v4[v35 + 420] >= 0 )\n            v45[v35] = ++v36;\n          if ( byte_98A33F[v35] == 3 || v4[v35 + 399] < 0 )\n            goto LABEL_92;\n          v37 = 0;\n          if ( v36 < 0 )\n          {\n            v45[v35] = ++v36;\nLABEL_92:\n            v37 = v36;\n            if ( byte_98A32C[v35] == 3 )\n              goto LABEL_93;\n            goto LABEL_122;\n          }\n          if ( byte_98A32C[v35] == 3 )\n            goto LABEL_93;\nLABEL_122:\n          if ( v4[v35 + 380] >= 0 )\n          {\n            v38 = 0;\n            if ( v37 >= 0 )\n              goto LABEL_94;\n            v45[v35] = ++v37;\n          }\nLABEL_93:\n          v38 = v37;\nLABEL_94:\n          if ( byte_98A341[v35] == 3 || v4[v35 + 401] < 0 || v38 >= 0 )\n            goto LABEL_128;\n          v39 = v38 + 1;\nLABEL_112:\n          v45[v35++] = v39;\n          if ( !v35 )\n            goto LABEL_129;\n        }\n        if ( byte_98A354[v35] != 3 && v4[v35 + 420] <= 0 )\n        {\n          v45[v35] = --v36;\n          if ( byte_98A33F[v35] == 3 )\n            goto LABEL_126;\n        }\n        else if ( byte_98A33F[v35] == 3 )\n        {\n          goto LABEL_126;\n        }\n        if ( v4[v35 + 399] <= 0 )\n        {\n          if ( v36 <= 0 )\n          {\n            v36 = 0;\n            if ( byte_98A32C[v35] == 3 )\n              goto LABEL_127;\n          }\n          else\n          {\n            v45[v35] = --v36;\n            if ( byte_98A32C[v35] == 3 )\n              goto LABEL_127;\n          }\n          goto LABEL_106;\n        }\nLABEL_126:\n        if ( byte_98A32C[v35] == 3 )\n        {\nLABEL_127:\n          if ( byte_98A341[v35] == 3 )\n            goto LABEL_128;\n          goto LABEL_109;\n        }\nLABEL_106:\n        if ( v4[v35 + 380] > 0 )\n          goto LABEL_127;\n        if ( v36 <= 0 )\n        {\n          v36 = 0;\n          if ( byte_98A341[v35] == 3 )\n            goto LABEL_128;\n        }\n        else\n        {\n          v45[v35] = --v36;\n          if ( byte_98A341[v35] == 3 )\n            goto LABEL_128;\n        }\nLABEL_109:\n        if ( v4[v35 + 401] <= 0 && v36 > 0 )\n        {\n          v39 = v36 - 1;\n          goto LABEL_112;\n        }\nLABEL_128:\n        ++v35;\n      }\n      while ( v35 );\nLABEL_129:\n      memcpy(v4, &dest, 0x640uLL);\n      ++v34;\n    }\n    while ( v34 != v23 );\n  }\n  return v42;\n}\n", 
            "funcStartAddr": "0x445b70L", 
            "funcEndAddr": "0x4461daL", 
            "funcName": "sub_445B70"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4461E0(__int64 a1)\n{\n  __int64 v1; // rbx\n  signed int v2; // ebp\n  signed __int64 v3; // rax\n  signed int v4; // er9\n  signed int v5; // edi\n  int v6; // edx\n  int v7; // ecx\n  char v8; // dl\n  char v9; // r8\n  char v10; // di\n  char v11; // si\n  bool v12; // zf\n  signed __int64 result; // rax\n  int v14; // ecx\n  int v15[19]; // [rsp+0h] [rbp-6A8h]\n  int v16; // [rsp+4Ch] [rbp-65Ch]\n  int v17; // [rsp+50h] [rbp-658h]\n  int v18[19]; // [rsp+54h] [rbp-654h]\n  int v19[380]; // [rsp+A0h] [rbp-608h]\n  int v20[6]; // [rsp+690h] [rbp-18h]\n\n  v1 = a1;\n  v2 = 0;\n  memset(&v17, 0, 0x640uLL);\n  v3 = 21LL;\n  while ( 1 )\n  {\n    if ( byte_98A1B0[v3] != 3 && !*(_DWORD *)(v1 + 4 * v3) )\n    {\n      v7 = *(&v17 + v3);\n      if ( v7 != 3 )\n      {\n        v8 = byte_98A1C4[v3];\n        if ( v8 != 3 && v19[v3] == 3\n          || (v9 = byte_98A1AF[v3], v9 != 3) && *(&v16 + v3) == 3\n          || (v10 = byte_98A19C[v3], v10 != 3) && v15[v3] == 3\n          || (v11 = byte_98A1B1[v3], v11 != 3) && v18[v3] == 3 )\n        {\n          *(&v17 + v3) = 3;\n          goto LABEL_51;\n        }\n        if ( v7 == 1\n          || v8 != 3 && (*(_DWORD *)(v1 + 4 * v3 + 80) > 0 || v19[v3] == 1)\n          || v9 != 3 && (*(_DWORD *)(v1 + 4 * v3 - 4) > 0 || *(&v16 + v3) == 1)\n          || v10 != 3 && (*(_DWORD *)(v1 + 4 * v3 - 80) > 0 || v15[v3] == 1)\n          || (v4 = 0, v11 != 3) && (*(_DWORD *)(v1 + 4 * v3 + 4) > 0 || v18[v3] == 1) )\n        {\n          v4 = 1;\n        }\n        if ( v7 == 2\n          || v8 != 3 && (*(_DWORD *)(v1 + 4 * v3 + 80) < 0 || v19[v3] == 2)\n          || v9 != 3 && (*(_DWORD *)(v1 + 4 * v3 - 4) < 0 || *(&v16 + v3) == 2)\n          || v10 != 3 && (*(_DWORD *)(v1 + 4 * v3 - 80) < 0 || v15[v3] == 2)\n          || (v5 = 0, v6 = 1, v11 != 3) && (*(_DWORD *)(v1 + 4 * v3 + 4) < 0 || v18[v3] == 2) )\n        {\n          v5 = 2;\n          v6 = 3;\n        }\n        if ( !v4 )\n          v6 = v5;\n        if ( v6 && v6 != v7 )\n        {\n          *(&v17 + v3) = v6;\nLABEL_51:\n          v2 = 1;\n          goto LABEL_52;\n        }\n      }\n    }\nLABEL_52:\n    if ( ++v3 == 400 )\n    {\n      v3 = 21LL;\n      v12 = v2 == 0;\n      v2 = 0;\n      if ( v12 )\n        break;\n    }\n  }\n  result = -379LL;\n  while ( 1 )\n  {\nLABEL_55:\n    if ( byte_98A340[result] == 3 || *(_DWORD *)(v1 + 4 * result + 1600) )\n      goto LABEL_57;\n    v14 = v20[result];\n    if ( v14 == 2 )\n      break;\n    if ( v14 == 1 )\n    {\n      *(_DWORD *)(v1 + 4 * result++ + 1600) = 1;\n      if ( !result )\n        return result;\n    }\n    else\n    {\nLABEL_57:\n      if ( !++result )\n        return result;\n    }\n  }\n  *(_DWORD *)(v1 + 4 * result++ + 1600) = -1;\n  if ( result )\n    goto LABEL_55;\n  return result;\n}\n", 
            "funcStartAddr": "0x4461e0L", 
            "funcEndAddr": "0x4463faL", 
            "funcName": "sub_4461E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_446400(__int64 a1)\n{\n  int v1; // eax\n  __int64 v2; // r12\n  signed __int64 v3; // r15\n  int *v4; // rbp\n  signed __int64 v5; // rbx\n  char v6; // cl\n  int v7; // eax\n  signed __int64 v8; // rdx\n  int v9; // eax\n  signed __int64 v10; // rcx\n\n  sub_44A2C0(a1);\n  v1 = dword_565C68;\n  if ( dword_565C68 > 0 )\n  {\n    LODWORD(v2) = 21;\n    v3 = 0LL;\n    while ( 1 )\n    {\n      v2 = (unsigned int)v2;\n      if ( v1 > 0 )\n        break;\nLABEL_21:\n      ++v3;\n      LODWORD(v2) = v2 + 20;\n      if ( v3 >= v1 )\n        return sub_44A570();\n    }\n    v4 = &dword_954FF0[19 * v2];\n    v5 = 0LL;\n    while ( 1 )\n    {\n      v6 = byte_98A1B0[v2 + v5];\n      if ( !v6 )\n        break;\n      v7 = *v4;\n      if ( !*v4 )\n        break;\n      if ( v6 == 1 )\n      {\n        v8 = 79LL;\n        if ( v7 != 2 )\n          goto LABEL_17;\n        goto LABEL_16;\n      }\n      if ( v6 == 2 )\n      {\n        v8 = 88LL;\n        if ( v7 != 2 )\n        {\nLABEL_17:\n          v10 = 0LL;\n          goto LABEL_19;\n        }\nLABEL_16:\n        v10 = 1LL;\nLABEL_19:\n        sub_44A340((unsigned int)v3, (unsigned int)v5, v8, v10);\n      }\n      ++v5;\n      v1 = dword_565C68;\n      v4 += 19;\n      if ( v5 >= dword_565C68 )\n        goto LABEL_21;\n    }\n    v9 = *(_DWORD *)(a1 + 4 * v2 + 4 * v5);\n    if ( v9 <= 0 )\n    {\n      if ( v9 >= 0 )\n      {\n        v8 = 46LL;\n        goto LABEL_17;\n      }\n      v8 = 98LL;\n      v10 = 5LL;\n    }\n    else\n    {\n      v8 = 119LL;\n      v10 = 2LL;\n    }\n    goto LABEL_19;\n  }\n  return sub_44A570();\n}\n", 
            "funcStartAddr": "0x446400L", 
            "funcEndAddr": "0x446519L", 
            "funcName": "sub_446400"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_446520(unsigned int a1)\n{\n  unsigned int v1; // er12\n  const char *v2; // rax\n  int v3; // ecx\n  int v4; // ebx\n  signed int *v5; // rax\n  __int64 v6; // rsi\n  signed __int64 v7; // r15\n  signed __int64 v8; // rdx\n  signed __int64 v9; // r13\n  unsigned int v10; // er8\n  int v11; // eax\n  signed int v12; // er14\n  __int64 v13; // rdi\n  int v14; // eax\n  unsigned int v15; // ebp\n  __int64 v16; // rsi\n  bool v17; // zf\n  signed __int64 v18; // rax\n  __int64 v19; // rdi\n  unsigned int v20; // eax\n  unsigned int v21; // ebp\n  __int64 v22; // rsi\n  signed __int64 v23; // r14\n  signed __int64 v24; // rbp\n  char v25; // al\n  _BOOL4 v26; // eax\n  unsigned __int64 v27; // rbp\n  int v28; // eax\n  int v29; // eax\n  __int64 v30; // r14\n  __int64 v31; // rbx\n  int v32; // eax\n  int v33; // eax\n  __int64 v34; // rdx\n  __int64 v35; // rcx\n  int *v36; // rbx\n  signed __int64 v37; // rbp\n  _BOOL4 v38; // eax\n  _BOOL4 v39; // eax\n  unsigned __int64 v40; // r14\n  __int64 v41; // rbx\n  signed __int64 v42; // r12\n  int v43; // ebp\n  _BOOL4 v44; // eax\n  char v45; // cl\n  char v46; // al\n  char v47; // dl\n  char v48; // di\n  signed __int64 v49; // rcx\n  signed int v50; // edi\n  _BOOL4 v51; // eax\n  signed int v52; // edi\n  int v53; // er14\n  int v54; // ebx\n  int v55; // er12\n  int v56; // ecx\n  int v57; // er8\n  int v58; // eax\n  int v59; // eax\n  signed int v60; // edi\n  signed int v61; // edx\n  signed __int64 v62; // rcx\n  __int64 v63; // r8\n  int v64; // er14\n  signed int v65; // ebp\n  signed int v66; // edx\n  int v67; // eax\n  signed __int64 v68; // rsi\n  signed __int64 v69; // rdx\n  signed __int64 v70; // rbp\n  signed int v71; // esi\n  char v72; // r14\n  signed int v73; // ebp\n  signed int v74; // ebp\n  signed __int64 v75; // r14\n  int *v76; // rbp\n  signed __int64 v77; // r12\n  char v78; // cl\n  int v79; // eax\n  char v80; // al\n  signed __int64 v81; // rcx\n  signed int v82; // ebx\n  int v83; // eax\n  signed __int64 v84; // r14\n  int *v85; // rbp\n  signed int v86; // ebx\n  int v87; // eax\n  unsigned int v88; // edx\n  signed int v89; // edx\n  int v90; // eax\n  signed int v91; // edx\n  signed int v92; // ebp\n  int v93; // ebx\n  _BOOL4 v94; // ecx\n  signed __int64 v95; // rcx\n  signed __int64 v96; // rbp\n  unsigned int v97; // [rsp+8h] [rbp-330h]\n  unsigned int v98; // [rsp+Ch] [rbp-32Ch]\n  __int64 v99; // [rsp+10h] [rbp-328h]\n  signed int v100; // [rsp+1Ch] [rbp-31Ch]\n  int v101; // [rsp+20h] [rbp-318h]\n  bool v102; // [rsp+20h] [rbp-318h]\n  int v103; // [rsp+28h] [rbp-310h]\n  int v104; // [rsp+34h] [rbp-304h]\n  char v105; // [rsp+38h] [rbp-300h]\n  signed __int64 v106; // [rsp+38h] [rbp-300h]\n  signed int v107; // [rsp+40h] [rbp-2F8h]\n  int *v108; // [rsp+48h] [rbp-2F0h]\n  signed int v109; // [rsp+48h] [rbp-2F0h]\n  signed __int64 v110; // [rsp+50h] [rbp-2E8h]\n  unsigned int v111; // [rsp+5Ch] [rbp-2DCh]\n  signed int *v112; // [rsp+60h] [rbp-2D8h]\n  signed int *v113; // [rsp+68h] [rbp-2D0h]\n  unsigned int v114; // [rsp+74h] [rbp-2C4h]\n  __int64 v115; // [rsp+78h] [rbp-2C0h]\n  int v116[174]; // [rsp+80h] [rbp-2B8h]\n\n  v1 = a1;\n  if ( dword_88C268 )\n  {\n    v2 = sub_4341A0(a1);\n    sub_433F90(\"Semeai Player is THINKING for %s!\\n\", v2);\n  }\n  v3 = dword_98A7DC;\n  if ( dword_98A7DC > 0 )\n  {\n    v4 = 3 - a1;\n    v5 = (signed int *)ptr;\n    v6 = 0LL;\n    v104 = 3 - a1;\n    while ( 1 )\n    {\n      v7 = 26 * v6;\n      v8 = 19LL * v5[26 * v6];\n      if ( *(_DWORD *)((char *)&xmmword_954FB0 + v8 * 4) == v1 && (dword_954FF0[v8] | 2) == 2 && v5[v7 + 11] > 0 )\n        break;\nLABEL_294:\n      if ( ++v6 >= v3 )\n        return;\n    }\n    v115 = v6;\n    v9 = 0LL;\nLABEL_286:\n    v95 = 19LL * v5[26 * v5[v7 + 1 + v9]];\n    if ( *(_DWORD *)((char *)&xmmword_954FB0 + v95 * 4) != v4 )\n      goto LABEL_292;\n    if ( (dword_954FF0[v95] | 2) != 2 )\n      goto LABEL_292;\n    v16 = *((signed int *)&xmmword_954FB0 + 19 * v5[v7] + 2);\n    if ( dword_8E94A0[95 * v16] )\n      goto LABEL_292;\n    v96 = 76 * v16;\n    if ( v5[26 * *((signed int *)&xmmword_954FB0 + 19 * v16 + 1) + 15] == 5 )\n      goto LABEL_292;\n    v10 = *((_DWORD *)&xmmword_954FB0 + 19 * v5[26 * v5[v7 + 1 + v9]] + 2);\n    if ( dword_8E94A0[95 * v10] )\n      goto LABEL_292;\n    v106 = 76LL * (signed int)v10;\n    if ( v5[26 * *((signed int *)&xmmword_954FB0 + 19 * (signed int)v10 + 1) + 15] == 5 )\n      goto LABEL_292;\n    v114 = (unsigned __int8)byte_98A1B0[v16];\n    v99 = *((signed int *)&xmmword_954FB0 + 19 * v5[v7] + 2);\n    v97 = *((_DWORD *)&xmmword_954FB0 + 19 * v5[26 * v5[v7 + 1 + v9]] + 2);\n    if ( dword_88C264 & 0x40 )\n    {\n      sub_433F90(\"semeai_analyzer: %1m (me) vs %1m (them)\\n\", v16, v10);\n      v10 = v97;\n    }\n    v108 = (int *)(v96 + 9785292);\n    v11 = *((_DWORD *)&xmmword_954FC0 + 19 * v16 + 3);\n    v12 = 0;\n    v110 = 76 * v16;\n    if ( v11 == 2 )\n    {\n      v12 = 0;\n      if ( *(_DWORD *)(v106 + 9785292) == 2 )\n      {\n        v13 = *(unsigned int *)((char *)&xmmword_954FE0 + v96);\n        if ( *(_DWORD *)((char *)&xmmword_954FD0 + v106) == (_DWORD)v13 )\n          goto LABEL_292;\n        if ( (_DWORD)v13 )\n        {\n          v12 = 0;\n          v14 = sub_42F0B0(v13, v10, 0LL);\n          v10 = v97;\n          v15 = v14;\n          if ( v14 )\n          {\n            sub_422400(*(_DWORD *)((char *)&xmmword_954FE0 + v110), v97, v14);\n            v12 = 1;\n            if ( dword_88C264 & 0x40 )\n              sub_433F90(\n                \"added owl attack of %1m at %1m with code %d\\n\",\n                v97,\n                *(unsigned int *)((char *)&xmmword_954FE0 + v110),\n                v15);\n            v4 = v104;\n            v16 = v99;\n            v10 = v97;\n          }\n        }\n      }\n      v11 = *v108;\n    }\n    v17 = (v11 | 2) == 2;\n    v18 = v106;\n    if ( v17 && *(_DWORD *)(v106 + 9785292) == 2 )\n    {\n      v19 = *(unsigned int *)((char *)&xmmword_954FD0 + v106);\n      if ( (_DWORD)v19 == *(_DWORD *)((char *)&xmmword_954FE0 + v110) )\n        goto LABEL_292;\n      v18 = v106;\n      if ( (_DWORD)v19 )\n      {\n        v20 = sub_42EAE0(v19, v16, 0LL);\n        v10 = v97;\n        LODWORD(v16) = v99;\n        v21 = v20;\n        v18 = v106;\n        if ( v21 )\n        {\n          sub_4224A0(*(_DWORD *)((char *)&xmmword_954FD0 + v106), v99, v21);\n          if ( dword_88C264 & 0x40 )\n            sub_433F90(\n              \"added owl defense of %1m at %1m with code %d\\n\",\n              v99,\n              *(unsigned int *)((char *)&xmmword_954FD0 + v106),\n              v21);\n          v22 = v99;\n          if ( *v108 )\n            goto LABEL_38;\n          v23 = 4611686018427380703LL;\n          v24 = 21LL;\n          do\n          {\n            v25 = byte_98A1B0[v24];\n            if ( v25 != 3 && v25 == byte_98A1B0[v22] )\n            {\n              v26 = sub_414710(v24, v22);\n              v22 = v99;\n              if ( v26 )\n              {\n                dword_95C68C[v23] = 2;\n                dword_95C6B0[v23] = 2;\n              }\n            }\n            ++v24;\n            v23 += 19LL;\n          }\n          while ( v23 * 4 );\n          if ( !(dword_88C264 & 0x40) )\n          {\nLABEL_38:\n            if ( !(dword_88C264 & 0x40) )\n              goto LABEL_292;\n          }\n          else\n          {\n            sub_433F90(\"changed owl_status and status of %1m to CRITICAL\\n\", v22);\n            if ( !(dword_88C264 & 0x40) )\n              goto LABEL_292;\n          }\n          sub_433F90(\"...owl code sufficient to resolve semeai, exiting\\n\");\n          goto LABEL_292;\n        }\n      }\n    }\n    if ( v12 )\n      goto LABEL_38;\n    v113 = (signed int *)(v110 + 9785268);\n    v112 = (signed int *)(v18 + 9785268);\n    v27 = 21LL;\n    do\n    {\n      if ( byte_98A1B0[v27] != 3 && v27 == dword_8E947C[95 * v27] && dword_8E94D4[95 * v27] == 5 )\n      {\n        v28 = *((_DWORD *)&xmmword_954FB0 + 19 * v27 + 2);\n        if ( v28 == (_DWORD)v16 || v28 == v10 )\n        {\n          v29 = sub_40A7D0(v27, (__int64)v116);\n          v10 = v97;\n          LODWORD(v16) = v99;\n          if ( v29 > 0 )\n          {\n            v30 = v29;\n            v31 = 0LL;\n            do\n            {\n              v32 = *((_DWORD *)&xmmword_954FB0 + 19 * v116[v31] + 2);\n              if ( v32 == (_DWORD)v16 || v32 == v10 )\n              {\n                v33 = sub_42F8F0((unsigned int)v27);\n                v10 = v97;\n                LODWORD(v16) = v99;\n                if ( v33 )\n                {\n                  if ( dword_88C264 & 0x40 )\n                    sub_433F90(\"...tactical situation detected, exiting\\n\", v99, v34, v35, v97);\n                  v4 = v104;\n                  goto LABEL_292;\n                }\n              }\n              ++v31;\n            }\n            while ( v31 < v30 );\n          }\n        }\n      }\n      ++v27;\n    }\n    while ( v27 < 0x190 );\n    v36 = dword_9555F0;\n    v37 = 21LL;\n    do\n    {\n      if ( byte_98A1B0[v37] != 3 )\n      {\n        v38 = sub_414710(v37, v16);\n        v10 = v97;\n        LODWORD(v16) = v99;\n        if ( v38 || (v39 = sub_414710(v37, v97), v10 = v97, LODWORD(v16) = v99, v39) )\n          *((_DWORD *)ptr + 26 * *v36 + 22) = 1;\n      }\n      ++v37;\n      v36 += 19;\n    }\n    while ( v37 != 400 );\n    v111 = v1;\n    v40 = 0LL;\n    v101 = 1;\n    v41 = 0LL;\n    v42 = 21LL;\n    v43 = 1;\n    v107 = 0;\n    while ( 1 )\n    {\n      if ( (unsigned __int8)(byte_98A1C5[v41] - 1) < 2u )\n      {\n        if ( v41 + 21 == dword_8EB3A8[5 * v40 / 4] )\n        {\n          v101 = ((unsigned int)sub_414710((signed int)v41 + 21, v16) < 1) + v101 - 1;\n          v44 = sub_414710((signed int)v41 + 21, v97);\n          v10 = v97;\n          LODWORD(v16) = v99;\n          v43 = ((unsigned int)v44 < 1) + v43 - 1;\n        }\n        goto LABEL_95;\n      }\n      if ( !byte_98A1C5[v41] )\n        break;\nLABEL_95:\n      ++v42;\n      ++v41;\n      v40 += 76LL;\n      if ( v41 == 379 )\n      {\n        if ( *v108 == 2 )\n        {\n          v50 = *(_DWORD *)((char *)&xmmword_954FD0 + v110);\n          if ( v50 )\n          {\n            v51 = sub_40B0A0(v50, v16);\n            v10 = v97;\n            v101 += (unsigned int)v51 < 1;\n          }\n        }\n        if ( *(_DWORD *)(v106 + 9785292) == 2 )\n        {\n          v52 = *(_DWORD *)((char *)&xmmword_954FD0 + v106);\n          if ( v52 )\n            v43 += (unsigned int)sub_40B0A0(v52, v10) < 1;\n        }\n        v53 = 0;\n        if ( (unsigned int)sub_426330((__int64)ptr + 104 * *v113 + 76)\n          || (unsigned int)sub_426330((__int64)ptr + 104 * *v112 + 76) )\n        {\nLABEL_104:\n          v54 = 3;\n          v55 = 3;\n        }\n        else if ( v107 )\n        {\n          v59 = v107 + v43 - 1;\n          if ( v101 == v59 )\n          {\n            v54 = ((unsigned int)v101 < 1) + 1;\n            v55 = 2;\n          }\n          else if ( v101 >= v59 || v43 >= v101 + v107 - 1 )\n          {\n            if ( v107 <= 0 )\n              goto LABEL_104;\n            if ( v43 == v101 + v107 - 1 )\n            {\n              v55 = ((unsigned int)v43 < 1) + 1;\n              v54 = 2;\n            }\n            else\n            {\n              v53 = v43 - (v101 + v107);\n              v94 = v43 <= v101 + v107;\n              v54 = 3 * v94;\n              v55 = 2 * v94 + 1;\n              if ( v43 <= v101 + v107 )\n                v53 = 0;\n            }\n          }\n          else\n          {\n            v53 = 1000;\n            v54 = 1;\n            v55 = 1;\n          }\n        }\n        else\n        {\n          v53 = v101 - v43;\n          if ( v101 <= v43 )\n          {\n            v93 = 0;\n            v53 = v43 - v101;\n            v107 = 0;\n            if ( v43 <= v101 )\n              v53 = 0;\n            LOBYTE(v93) = v43 <= v101;\n            v54 = 2 * v93;\n            v55 = 2 - (v43 < v101);\n          }\n          else\n          {\n            v54 = 1;\n            v107 = 0;\n            v55 = 0;\n          }\n        }\n        if ( (signed int)sub_426330((__int64)ptr + 104 * *v113 + 76) <= 0\n          || (signed int)sub_426330((__int64)ptr + 104 * *v112 + 76) <= 0 )\n        {\nLABEL_138:\n          v98 = v54;\n          v100 = v55;\n        }\n        else\n        {\n          v56 = v107 + v43;\n          if ( v101 > v107 + v43 )\n          {\n            v53 = v101 - v43 - v107;\n            v100 = 0;\n            v98 = 1;\n            goto LABEL_139;\n          }\n          v57 = v53;\n          v58 = v107 + v101;\n          v53 = v43 - (v107 + v101);\n          if ( v43 > v107 + v101 )\n          {\n            v100 = 1;\n            v98 = 0;\n            goto LABEL_139;\n          }\n          v53 = 0;\n          v100 = 2;\n          if ( v101 == v43 && !v107 )\n          {\n            v98 = 2;\n            goto LABEL_139;\n          }\n          if ( v107 <= 0 || (v98 = 1, v101 != v56) )\n          {\n            v60 = v54;\n            if ( v107 > 0 && v101 < v56 && v43 < v58 )\n              v60 = 1;\n            v98 = v60;\n            v61 = v55;\n            if ( v107 > 0 && v101 < v56 && v43 < v58 )\n              v61 = 1;\n            v100 = v61;\n            v53 = v57;\n            if ( v107 > 0 && v101 < v56 && v43 < v58 )\n              v53 = 1000;\n            if ( (v107 <= 0 || v101 >= v56 || v43 >= v58) && v107 > 0 )\n            {\n              if ( v43 == v58 )\n                v54 = 2;\n              if ( v43 == v58 )\n                v55 = 1;\n              v53 = v57;\n              if ( v43 == v58 )\n                v53 = 0;\n              goto LABEL_138;\n            }\n          }\n        }\nLABEL_139:\n        if ( (signed int)sub_426330((__int64)ptr + 104 * *v113 + 76) <= 0 )\n        {\n          v1 = v111;\n        }\n        else\n        {\n          v1 = v111;\n          if ( !(unsigned int)sub_426330((__int64)ptr + 104 * *v112 + 76) )\n          {\n            if ( v101 <= v107 + v43 )\n            {\n              if ( v107 + v101 == v43 )\n              {\n                v98 = 2;\n                v100 = 2;\n              }\n              else\n              {\n                v88 = v98;\n                if ( v107 + v101 < v43 )\n                  v88 = 0;\n                v98 = v88;\n                v89 = v100;\n                if ( v107 + v101 < v43 )\n                  v89 = 1;\n                v100 = v89;\n                if ( v107 + v101 < v43 )\n                  v53 = v107 + v101 - v43;\n              }\n            }\n            else\n            {\n              v53 = v101 - v43 - v107;\n              v100 = 0;\n              v98 = 1;\n            }\n          }\n        }\n        if ( (unsigned int)sub_426330((__int64)ptr + 104 * *v113 + 76)\n          || (signed int)sub_426330((__int64)ptr + 104 * *v112 + 76) <= 0 )\n        {\n          v103 = v53;\n          v4 = v104;\n          v63 = v97;\n          v64 = v98;\n          v65 = v100;\n        }\n        else\n        {\n          v63 = v97;\n          if ( v107 + v43 <= v101 )\n          {\n            v62 = v98;\n            if ( v107 + v43 == v101 )\n              v62 = 2LL;\n            v66 = v100;\n            if ( v107 + v43 == v101 )\n              v66 = 2;\n            if ( v107 + v43 == v101 )\n              v53 = 0;\n            v67 = v53;\n            v65 = v66;\n            v64 = v62;\n            v103 = v67;\n          }\n          else\n          {\n            v103 = v107 + v43 - v101;\n            v65 = 1;\n            v64 = 0;\n          }\n          v4 = v104;\n        }\n        if ( *v108 == 2 )\n          goto LABEL_167;\n        switch ( v64 )\n        {\n          case 0:\n            v68 = 0LL;\n            v69 = 0LL;\nLABEL_166:\n            sub_447AC0(v99, v68, v69, v62, v63);\n            v63 = v97;\n            break;\n          case 2:\n            v68 = 2LL;\n            v69 = 2LL;\n            goto LABEL_166;\n          case 1:\n            v68 = 1LL;\n            v69 = 7LL;\n            goto LABEL_166;\n        }\nLABEL_167:\n        if ( !v65 )\n        {\n          sub_447AC0((unsigned int)v63, 0LL, 0LL, v62, v63);\n          LODWORD(v63) = v97;\n          v70 = v110;\n          goto LABEL_172;\n        }\n        if ( v65 == 2 )\n        {\n          sub_447AC0((unsigned int)v63, 2LL, 2LL, v62, v63);\n          LODWORD(v63) = v97;\n          v102 = v64 == 2;\n          v72 = 1;\n          v71 = v99;\n          v70 = v110;\nLABEL_175:\n          if ( *v108 == 2 && (v73 = *(_DWORD *)((char *)&xmmword_954FE0 + v70)) != 0\n            || *(_DWORD *)(v106 + 9785292) == 2 && (v73 = *(_DWORD *)((char *)&xmmword_954FD0 + v106)) != 0 )\n          {\n            if ( v102 )\n            {\n              sub_4217F0(v73, v71);\n              goto LABEL_187;\n            }\n            if ( v103 == 1 )\n            {\n              sub_421870(v73, v71);\nLABEL_187:\n              LODWORD(v63) = v97;\n            }\n            if ( v72 )\n            {\n              sub_4217F0(v73, v63);\n            }\n            else if ( v103 == 1 )\n            {\n              sub_421870(v73, v63);\n            }\n            goto LABEL_292;\n          }\n          if ( v107 >= 2 )\n          {\n            if ( (signed int)sub_426FA0((char *)ptr + 104 * *v113 + 76) > 0 )\n            {\n              v74 = *((_DWORD *)ptr + 26 * *v113 + 20);\n              if ( v102 )\n              {\n                sub_4217F0(v74, v99);\n              }\n              else if ( v103 == 1 )\n              {\n                sub_421870(v74, v99);\n              }\n              if ( v72 )\n              {\n                sub_4217F0(v74, v97);\n                v72 = 1;\n              }\n              else\n              {\n                if ( v103 == 1 )\n                  sub_421870(v74, v97);\n                v72 = 0;\n              }\n            }\n            v90 = sub_426FA0((char *)ptr + 104 * *v112 + 76);\n            v91 = v97;\n            if ( !v90 )\n              goto LABEL_292;\n            v92 = *((_DWORD *)ptr + 26 * *v112 + 20);\n            if ( v102 )\n            {\n              sub_4217F0(v92, v99);\n              goto LABEL_269;\n            }\n            if ( v103 == 1 )\n            {\n              sub_421870(v92, v99);\nLABEL_269:\n              v91 = v97;\n            }\n            if ( v72 )\n            {\n              sub_4217F0(v92, v91);\n            }\n            else if ( v103 == 1 )\n            {\n              sub_421870(v92, v91);\n            }\n            goto LABEL_292;\n          }\n          v105 = v72;\n          v109 = 0;\n          v75 = -379LL;\n          v76 = dword_955004;\n          v77 = 21LL;\n          while ( 2 )\n          {\n            if ( byte_98A340[v75] )\n            {\nLABEL_225:\n              ++v77;\n              v76 += 19;\n              v17 = v75++ == -1;\n              v4 = v104;\n              if ( v17 )\n              {\n                v1 = v111;\n                if ( v109 )\n                  goto LABEL_292;\n                v84 = -379LL;\n                v85 = dword_955004;\n                while ( 2 )\n                {\n                  if ( !byte_98A340[v84]\n                    && (byte_98A354[v84] != 3 && v85[760] == (_DWORD)v63\n                     || byte_98A33F[v84] != 3 && v85[361] == (_DWORD)v63\n                     || byte_98A32C[v84] != 3 && *v85 == (_DWORD)v63\n                     || byte_98A341[v84] != 3 && v85[399] == (_DWORD)v63) )\n                  {\n                    v86 = v84 + 400;\n                    v87 = sub_43F100((signed int)v84 + 400, v114);\n                    LODWORD(v63) = v97;\n                    if ( v87 )\n                    {\n                      if ( v102 )\n                      {\n                        sub_4217F0(v86, v99);\n                        goto LABEL_241;\n                      }\n                      if ( v103 == 1 )\n                      {\n                        sub_421870(v86, v99);\nLABEL_241:\n                        LODWORD(v63) = v97;\n                      }\n                      if ( v105 )\n                      {\n                        sub_4217F0(v86, v63);\n                        goto LABEL_246;\n                      }\n                      if ( v103 == 1 )\n                      {\n                        sub_421870(v86, v63);\nLABEL_246:\n                        LODWORD(v63) = v97;\n                      }\n                    }\n                  }\n                  v85 += 19;\n                  v17 = v84++ == -1;\n                  v4 = v104;\n                  if ( v17 )\n                    goto LABEL_292;\n                  continue;\n                }\n              }\n              continue;\n            }\n            break;\n          }\n          v78 = byte_98A354[v75];\n          if ( v78 == 3 || (v79 = v63, v76[760] != (_DWORD)v63) )\n          {\n            v80 = byte_98A33F[v75];\n            if ( (v80 == 3 || v76[361] != (_DWORD)v63)\n              && (byte_98A32C[v75] == 3 || *v76 != (_DWORD)v63)\n              && (byte_98A341[v75] == 3 || v76[399] != (_DWORD)v63) )\n            {\n              goto LABEL_225;\n            }\n            if ( v78 == 3 )\n            {\n              v81 = v77 - 1;\n              if ( v80 == 3 )\n                goto LABEL_208;\nLABEL_207:\n              if ( *((_DWORD *)&xmmword_954FB0 + 19 * v81 + 2) == v71 )\n                goto LABEL_225;\nLABEL_208:\n              if ( byte_98A32C[v75] != 3 && *v76 == v71 )\n                goto LABEL_225;\n              if ( byte_98A341[v75] != 3 && v76[399] == v71 )\n                goto LABEL_225;\n              v82 = v75 + 400;\n              v83 = sub_43F100((signed int)v75 + 400, v114);\n              LODWORD(v63) = v97;\n              v71 = v99;\n              if ( !v83 )\n                goto LABEL_225;\n              if ( v102 )\n              {\n                sub_4217F0(v82, v99);\n                goto LABEL_217;\n              }\n              if ( v103 == 1 )\n              {\n                sub_421870(v82, v99);\nLABEL_217:\n                LODWORD(v63) = v97;\n              }\n              if ( v105 )\n              {\n                sub_4217F0(v82, v63);\n                LODWORD(v63) = v97;\n                goto LABEL_222;\n              }\n              if ( v103 == 1 )\n              {\n                v109 = 1;\n                sub_421870(v82, v63);\n                LODWORD(v63) = v97;\n              }\n              else\n              {\nLABEL_222:\n                v109 = 1;\n              }\n              v71 = v99;\n              goto LABEL_225;\n            }\n            v79 = v76[760];\n          }\n          if ( v79 == v71 )\n            goto LABEL_225;\n          v81 = v75 + 399;\n          if ( byte_98A33F[v75] != 3 )\n            goto LABEL_207;\n          goto LABEL_208;\n        }\n        v17 = v65 == 1;\n        v70 = v110;\n        if ( v17 )\n        {\n          sub_447AC0((unsigned int)v63, 1LL, 7LL, v62, v63);\n          LODWORD(v63) = v97;\n        }\nLABEL_172:\n        v71 = v99;\n        if ( v64 == 2 )\n        {\n          v102 = 1;\n          v72 = 0;\n          goto LABEL_175;\n        }\nLABEL_292:\n        ++v9;\n        v5 = (signed int *)ptr;\n        if ( v9 >= *(signed int *)((char *)ptr + v7 * 4 + 44) )\n        {\n          v3 = dword_98A7DC;\n          v6 = v115;\n          goto LABEL_294;\n        }\n        goto LABEL_286;\n      }\n    }\n    v45 = byte_98A1D9[v41];\n    if ( v45 == 3 || dword_955BE4[v40 / 4] != v10 )\n    {\n      v46 = byte_98A1C4[v41];\n      if ( v46 == 3 || dword_9555A8[v40 / 4] != v10 )\n      {\n        v47 = byte_98A1B1[v41];\n        if ( v47 == 3 || dword_955004[v40 / 4] != v10 )\n        {\n          v48 = byte_98A1C6[v41];\n          if ( v48 == 3 || dword_955640[v40 / 4] != v10 )\n          {\n            if ( (v45 == 3 || dword_955BE4[v40 / 4] != (_DWORD)v16)\n              && (v46 == 3 || dword_9555A8[v40 / 4] != (_DWORD)v16)\n              && (v47 == 3 || dword_955004[v40 / 4] != (_DWORD)v16)\n              && (v48 == 3 || dword_955640[v40 / 4] != (_DWORD)v16) )\n            {\n              goto LABEL_95;\n            }\n            goto LABEL_94;\n          }\n        }\n      }\n      ++v43;\n      if ( v45 == 3 )\n      {\n        v49 = v42 - 1;\n        if ( v46 == 3 )\n        {\nLABEL_89:\n          if ( (byte_98A1B1[v41] == 3 || dword_955004[v40 / 4] != (_DWORD)v16)\n            && (byte_98A1C6[v41] == 3 || dword_955640[v40 / 4] != (_DWORD)v16) )\n          {\n            goto LABEL_95;\n          }\n          goto LABEL_93;\n        }\n        goto LABEL_88;\n      }\n      if ( dword_955BE4[v40 / 4] == (_DWORD)v16 )\n        goto LABEL_93;\n    }\n    else\n    {\n      ++v43;\n      if ( v10 == (_DWORD)v16 )\n        goto LABEL_93;\n    }\n    v49 = v41 + 20;\n    if ( byte_98A1C4[v41] == 3 )\n      goto LABEL_89;\nLABEL_88:\n    if ( *((_DWORD *)&xmmword_954FB0 + 19 * v49 + 2) != (_DWORD)v16 )\n      goto LABEL_89;\nLABEL_93:\n    ++v107;\nLABEL_94:\n    ++v101;\n    goto LABEL_95;\n  }\n}\n", 
            "funcStartAddr": "0x446520L", 
            "funcEndAddr": "0x447616L", 
            "funcName": "sub_446520"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_447620(unsigned int a1)\n{\n  const char *v1; // rax\n  int v2; // er13\n  signed __int64 v3; // r14\n  signed __int64 v4; // rcx\n  unsigned int v5; // er11\n  __int64 v6; // r8\n  char *v7; // rax\n  signed __int64 v8; // r15\n  signed __int64 v9; // rcx\n  __int64 v10; // rcx\n  __int64 v11; // rsi\n  signed int v12; // er9\n  __int64 v13; // rbx\n  signed __int64 v14; // r12\n  signed __int64 v15; // rcx\n  signed __int64 v16; // rsi\n  signed __int64 v17; // rdi\n  signed __int64 v18; // rdx\n  signed __int64 v19; // r10\n  signed __int64 v20; // r9\n  unsigned int v21; // ebp\n  int v22; // er8\n  int v23; // ecx\n  const char *v24; // ST28_8\n  const char *v25; // rax\n  const char *v26; // ST10_8\n  const char *v27; // rax\n  signed __int64 v28; // rsi\n  unsigned int v29; // ebx\n  unsigned int v30; // er12\n  unsigned int v31; // ebp\n  __int64 v32; // rcx\n  __int64 v33; // r8\n  signed int v34; // [rsp+Ch] [rbp-14Ch]\n  int v35; // [rsp+10h] [rbp-148h]\n  unsigned int v36; // [rsp+1Ch] [rbp-13Ch]\n  unsigned int v37; // [rsp+20h] [rbp-138h]\n  unsigned int v38; // [rsp+24h] [rbp-134h]\n  int v39; // [rsp+28h] [rbp-130h]\n  unsigned int v40; // [rsp+30h] [rbp-128h]\n  signed int v41; // [rsp+34h] [rbp-124h]\n  signed __int64 v42; // [rsp+38h] [rbp-120h]\n  int v43[12]; // [rsp+40h] [rbp-118h]\n  int v44[12]; // [rsp+70h] [rbp-E8h]\n  int v45[12]; // [rsp+A0h] [rbp-B8h]\n  int v46[12]; // [rsp+D0h] [rbp-88h]\n  int v47[22]; // [rsp+100h] [rbp-58h]\n\n  if ( dword_88C268 )\n  {\n    v1 = sub_4341A0(a1);\n    sub_433F90(\"Experimental Semeai Module is THINKING for %s!\\n\", v1);\n  }\n  v40 = a1;\n  if ( dword_98A7DC > 0 )\n  {\n    v2 = 3 - a1;\n    v35 = 3;\n    v3 = 4LL;\n    v4 = 0LL;\n    v37 = 3;\n    v38 = 3;\n    v39 = 3;\n    v5 = 0;\n    v6 = 0LL;\n    while ( 1 )\n    {\n      v7 = (char *)ptr;\n      v42 = v4;\n      v8 = 104 * v4;\n      v9 = 19LL * *((signed int *)ptr + 26 * v4);\n      if ( *(_DWORD *)((char *)&xmmword_954FB0 + v9 * 4) == v40 && (dword_954FF0[v9] | 2) == 2 )\n        break;\nLABEL_59:\n      v4 = v42 + 1;\n      v3 += 104LL;\n      if ( v42 + 1 >= dword_98A7DC )\n        return;\n    }\n    LODWORD(v10) = *(_DWORD *)((char *)ptr + v8 + 44);\n    if ( (signed int)v10 > 0 )\n    {\n      v11 = 0LL;\n      do\n      {\n        v44[v11] = 0;\n        v43[v11] = 1;\n        v45[v11++] = 0;\n        v10 = *(signed int *)&v7[v8 + 44];\n      }\n      while ( v11 < v10 );\n    }\n    v41 = 0;\n    v12 = 0;\n    if ( (signed int)v10 <= 0 )\n    {\n      do\n      {\nLABEL_43:\n        if ( v12 || !v41 )\n        {\n          if ( ++v12 == 2 )\n            goto LABEL_59;\n        }\n        else\n        {\n          v28 = v37;\n          if ( !v37 )\n            v28 = 2LL;\n          if ( !v39 )\n            v28 = v37;\n          v29 = v38;\n          if ( v35 )\n            v29 = 2;\n          if ( v38 )\n            v29 = v38;\n          if ( (_DWORD)v28 == 7 )\n            v28 = 1LL;\n          if ( v29 == 7 )\n            v29 = 1;\n          v30 = v5;\n          v31 = v6;\n          sub_447AC0(v5, v28, (unsigned int)v28, v38, v6);\n          sub_447AC0(v31, v29, v29, v32, v33);\n          v12 = 1;\n          v6 = v31;\n          v5 = v30;\n        }\n        v7 = (char *)ptr;\n      }\n      while ( *(_DWORD *)((char *)ptr + v8 + 44) <= 0 );\n    }\n    v13 = 0LL;\n    v14 = 0LL;\n    while ( 1 )\n    {\n      v15 = 19LL * *(signed int *)&v7[104 * *(signed int *)&v7[v3 + v13 * 4]];\n      if ( *(_DWORD *)((char *)&xmmword_954FB0 + v15 * 4) != v2 )\n        goto LABEL_42;\n      if ( (dword_954FF0[v15] | 2) != 2 )\n        goto LABEL_42;\n      v5 = *((_DWORD *)&xmmword_954FB0 + 19 * *(signed int *)&v7[v8] + 2);\n      v6 = *((unsigned int *)&xmmword_954FB0 + 19 * *(signed int *)&v7[104 * *(signed int *)&v7[v3 + v13 * 4]] + 2);\n      v16 = 95LL * (signed int)v5;\n      if ( dword_8E94A0[v16] )\n        goto LABEL_42;\n      v17 = 104LL * *((signed int *)&xmmword_954FB0 + 19 * (signed int)v5 + 1);\n      if ( *(_DWORD *)&v7[v17 + 60] == 5 )\n        goto LABEL_42;\n      v18 = 95LL * (signed int)v6;\n      if ( dword_8E94A0[v18] )\n        goto LABEL_42;\n      v34 = v12;\n      v19 = 76LL * (signed int)v6;\n      v20 = 104LL * *((signed int *)&xmmword_954FB0 + 19 * (signed int)v6 + 1);\n      if ( *(_DWORD *)&v7[v20 + 60] == 5 )\n        goto LABEL_41;\n      v21 = *((_DWORD *)&xmmword_954FB0 + 19 * *(signed int *)&v7[104 * *(signed int *)&v7[v3 + v13 * 4]] + 2);\n      v22 = *((_DWORD *)&xmmword_954FB0 + 19 * (signed int)v5 + 3);\n      if ( v22 == dword_8E9474[v16] && dword_8E94D4[v16] == 5 && *(_DWORD *)&v7[v17 + 48] == 1 )\n        goto LABEL_40;\n      v23 = *(_DWORD *)(v19 + 9785276);\n      if ( v23 != dword_8E9474[v18] || dword_8E94D4[v18] != 5 )\n      {\n        if ( v22 == 1 || v23 == 1 )\n          goto LABEL_40;\n      }\n      else if ( v23 == 1 || v22 == 1 || *(_DWORD *)&v7[v20 + 48] == 1 )\n      {\n        goto LABEL_40;\n      }\n      v41 = 1;\n      v39 = 3;\n      v12 = v34;\n      if ( !v34 )\n        break;\n      v38 = 3;\n      v37 = 3;\n      v35 = 3;\n      v6 = v21;\nLABEL_42:\n      ++v14;\n      ++v13;\n      if ( v14 >= *(signed int *)&v7[v8 + 44] )\n        goto LABEL_43;\n    }\n    v36 = *((_DWORD *)&xmmword_954FB0 + 19 * *(signed int *)&v7[v8] + 2);\n    if ( dword_88C264 & 0x40 )\n    {\n      sub_433F90(\"Considering semeai between %1m and %1m\\n\", v5, v21);\n      v5 = v36;\n    }\n    sub_428490(v5, v21, (__int64)&v44[v13], (__int64)&v43[v13], (__int64)&v45[v13], 1u);\n    if ( dword_88C264 & 0x40 )\n    {\n      v24 = sub_4343F0(v44[v13]);\n      v25 = sub_4343F0(v43[v13]);\n      sub_433F90(\"Result1: %s %s %1m, \", v24, v25, (unsigned int)v45[v13]);\n    }\n    v39 = v44[v13];\n    v38 = v43[v13];\n    sub_428490(v21, v36, (__int64)&v47[v13], (__int64)&v46[v13], 0LL, 1u);\n    if ( dword_88C264 & 0x40 )\n    {\n      v26 = sub_4343F0(v47[v13]);\n      v27 = sub_4343F0(v46[v13]);\n      sub_433F90(\"Result2 %s %s.\\n\", v26, v27);\n    }\n    v35 = v47[v13];\n    v37 = v46[v13];\n    v7 = (char *)ptr;\n    v5 = v36;\nLABEL_40:\n    v6 = v21;\nLABEL_41:\n    v12 = v34;\n    goto LABEL_42;\n  }\n}\n", 
            "funcStartAddr": "0x447620L", 
            "funcEndAddr": "0x447abdL", 
            "funcName": "sub_447620"
        }, 
        {
            "decompiledFuncCode": "unsigned int *__usercall sub_447AC0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, signed int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // er15\n  unsigned __int64 v6; // r12\n  unsigned int v7; // edi\n  const char *v8; // rbp\n  const char *v9; // rax\n  signed __int64 v10; // rbx\n  signed __int64 v11; // rbp\n  unsigned int *result; // rax\n  signed __int64 v13; // rcx\n  unsigned int v14; // edi\n  const char *v15; // rbx\n  const char *v16; // rax\n  __int64 v17; // [rsp-8h] [rbp-38h]\n\n  v17 = a1;\n  v4 = a2;\n  v5 = a3;\n  v6 = 76LL * a3;\n  v7 = dword_954FF0[v6 / 4];\n  if ( v7 != a4 && (a4 || v7 != 2) )\n  {\n    if ( dword_88C264 & 0x40 )\n    {\n      v8 = sub_4343D0(v7);\n      v9 = sub_4343D0(a4);\n      sub_433F90(\"Changing status of %1m from %s to %s.\\n\", v5, v8, v9, v17);\n    }\n    v10 = 4611686018427380703LL;\n    v11 = 21LL;\n    do\n    {\n      if ( (unsigned __int8)(byte_98A1B0[v11] - 1) <= 1u && (unsigned int)sub_414710(v5, v11) )\n        dword_95C6B0[v10] = a4;\n      ++v11;\n      v10 += 19LL;\n    }\n    while ( v10 * 4 );\n  }\n  result = (unsigned int *)ptr;\n  v13 = 104LL * *(signed int *)(v6 + 9785268);\n  v14 = *(_DWORD *)((char *)ptr + v13 + 60);\n  if ( v14 != v4 && (v4 || v14 != 2) )\n  {\n    if ( dword_88C264 & 0x40 )\n    {\n      v15 = sub_4343F0(v14);\n      v16 = sub_4343F0(v4);\n      sub_433F90(\"Changing safety of %1m from %s to %s.\\n\", v5, v15, v16, v17);\n      result = (unsigned int *)ptr;\n      v13 = 104LL * *(signed int *)(v6 + 9785268);\n    }\n    result = (unsigned int *)((char *)result + v13 + 60);\n    *result = v4;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x447ac0L", 
            "funcEndAddr": "0x447be0L", 
            "funcName": "sub_447AC0"
        }, 
        {
            "decompiledFuncCode": "size_t __fastcall sub_447BE0(unsigned int a1)\n{\n  unsigned int v1; // ebx\n  unsigned int *v2; // rsi\n  __int64 v3; // rax\n  __int64 v4; // rdx\n  char *v5; // rdi\n  __int64 v6; // rdx\n  __int64 v7; // rcx\n  char *v8; // rdi\n  unsigned int *v9; // rsi\n  size_t result; // rax\n  __int64 v11; // rdx\n  __int64 v12; // rcx\n  char *v13; // rdi\n  unsigned int v14; // [rsp+8h] [rbp-20h]\n  unsigned int v15; // [rsp+Ch] [rbp-1Ch]\n  char v16; // [rsp+10h] [rbp-18h]\n\n  v1 = a1;\n  if ( !byte_98A1B0[a1] )\n    return fwrite(\"gnugo: --decide-string called on an empty vertex\\n\", 0x31uLL, 1uLL, stderr);\n  if ( dest )\n    sub_448D40(&v16);\n  sub_418500();\n  dword_88C22C = 1;\n  v2 = &v15;\n  v3 = (unsigned int)sub_43B050(a1, &v15);\n  switch ( (_DWORD)v3 )\n  {\n    case 0:\n      v4 = (unsigned int)dword_88C22C;\n      v5 = \"%1m cannot be attacked (%d variations)\\n\";\nLABEL_14:\n      v9 = (unsigned int *)v1;\n      sub_433F90(v5, v1, v4);\n      goto LABEL_15;\n    case 1:\n      v6 = v15;\n      v7 = (unsigned int)dword_88C22C;\n      v8 = \"%1m can be attacked with ko (bad) at %1m (%d variations)\\n\";\n      goto LABEL_9;\n    case 4:\n      v6 = v15;\n      v7 = (unsigned int)dword_88C22C;\n      v8 = \"%1m can be attacked with ko (good) at %1m (%d variations)\\n\";\n      goto LABEL_9;\n    case 5:\n      v6 = v15;\n      v7 = (unsigned int)dword_88C22C;\n      v8 = \"%1m can be attacked at %1m (%d variations)\\n\";\nLABEL_9:\n      v2 = (unsigned int *)v1;\n      v3 = sub_433F90(v8, v1, v6, v7);\n      break;\n    default:\n      break;\n  }\n  if ( (dword_88C264 & 0x8000u) != 0 )\n  {\n    sub_433F90(\"Reading shadow: \\n\", v2);\n    v3 = sub_43F980((__int64)\"Reading shadow: \\n\");\n  }\n  dword_88C22C = 1;\n  v9 = &v14;\n  switch ( (unsigned int)sub_43B6F0(v3, v1, &v14) )\n  {\n    case 0u:\n      v4 = (unsigned int)dword_88C22C;\n      v5 = \"%1m cannot be defended (%d variations)\\n\";\n      goto LABEL_14;\n    case 1u:\n      v11 = v14;\n      v12 = (unsigned int)dword_88C22C;\n      v13 = \"%1m can be defended with ko (bad) at %1m (%d variations)\\n\";\n      goto LABEL_21;\n    case 4u:\n      v11 = v14;\n      v12 = (unsigned int)dword_88C22C;\n      v13 = \"%1m can be defended with ko (good) at %1m (%d variations)\\n\";\n      goto LABEL_21;\n    case 5u:\n      v11 = v14;\n      v12 = (unsigned int)dword_88C22C;\n      v13 = \"%1m can be defended at %1m (%d variations)\\n\";\nLABEL_21:\n      v9 = (unsigned int *)v1;\n      sub_433F90(v13, v1, v11, v12);\n      if ( (dword_88C264 & 0x8000u) != 0 )\n        goto LABEL_22;\n      goto LABEL_16;\n    default:\n      break;\n  }\nLABEL_15:\n  if ( (dword_88C264 & 0x8000u) != 0 )\n  {\nLABEL_22:\n    sub_433F90(\"Reading shadow: \\n\", v9);\n    sub_43F980((__int64)\"Reading shadow: \\n\");\n  }\nLABEL_16:\n  result = sub_448F00(&dest, v9);\n  dword_88C22C = 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x447be0L", 
            "funcEndAddr": "0x447d68L", 
            "funcName": "sub_447BE0"
        }, 
        {
            "decompiledFuncCode": "size_t __fastcall sub_447D70(unsigned int a1, unsigned int a2)\n{\n  unsigned int v2; // er14\n  unsigned int v3; // ebx\n  int v4; // edx\n  int v5; // edx\n  char v6; // al\n  char v7; // cl\n  int v8; // eax\n  __int64 v9; // rcx\n  __int64 v10; // r8\n  char *v11; // rdi\n  __int64 v12; // rcx\n  char *v13; // rdi\n  __int64 v14; // rsi\n  __int64 v15; // rdx\n  FILE *v16; // rcx\n  const char *v17; // rdi\n  size_t v18; // rsi\n  int v19; // eax\n  __int64 v20; // rcx\n  __int64 v21; // r8\n  char *v22; // rdi\n  __int64 v23; // rsi\n  __int64 v24; // rcx\n  char *v25; // rdi\n  __int64 v26; // rdx\n  size_t result; // rax\n  unsigned int v28; // [rsp+4h] [rbp-24h]\n  char v29; // [rsp+8h] [rbp-20h]\n\n  v2 = a2;\n  v3 = a1;\n  if ( a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v4 = (1717986919LL * (signed int)a1 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)a1) >> 63);\n    sub_4340E0((__int64)\"engine/sgfdecide.c\", 0x7Fu, (__int64)\"ON_BOARD1(apos)\", v4 - 1, a1 - 20 * v4 - 1);\n  }\n  if ( a2 > 0x1A4 || byte_98A1B0[a2] == 3 )\n  {\n    v5 = (1717986919LL * (signed int)a2 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)a2) >> 63);\n    sub_4340E0((__int64)\"engine/sgfdecide.c\", 0x80u, (__int64)\"ON_BOARD1(bpos)\", v5 - 1, a2 - 20 * v5 - 1);\n  }\n  v6 = byte_98A1B0[a1];\n  if ( v6 && (v7 = byte_98A1B0[a2]) != 0 )\n  {\n    if ( v6 == v7 )\n    {\n      if ( dest )\n        sub_448D40(&v29);\n      sub_418500();\n      dword_88C22C = 1;\n      v8 = sub_434520(a1, a2, (char *)&v28);\n      if ( v8 != 1 )\n      {\n        if ( v8 == 4 )\n        {\n          v9 = v28;\n          v10 = (unsigned int)dword_88C22C;\n          v11 = \"%1m and %1m can be connected with ko (good) at %1m (%d variations)\\n\";\n          goto LABEL_19;\n        }\n        if ( v8 == 5 )\n        {\n          v9 = v28;\n          v10 = (unsigned int)dword_88C22C;\n          if ( v28 )\n          {\n            v11 = \"%1m and %1m can be connected at %1m (%d variations)\\n\";\nLABEL_19:\n            sub_433F90(v11, v3, a2, v9, v10);\n            goto LABEL_24;\n          }\n          v13 = \"%1m and %1m are connected as it stands (%d variations)\\n\";\n          v14 = v3;\n          v15 = v2;\n          v12 = (unsigned int)dword_88C22C;\n        }\n        else\n        {\n          v12 = (unsigned int)dword_88C22C;\n          v13 = \"%1m and %1m cannot be connected (%d variations)\\n\";\n          v14 = v3;\n          v15 = v2;\n        }\n        sub_433F90(v13, v14, v15, v12);\nLABEL_24:\n        dword_88C22C = 1;\n        v19 = sub_434BB0(v3, v2, (char *)&v28);\n        if ( v19 != 1 )\n        {\n          if ( v19 == 4 )\n          {\n            v20 = v28;\n            v21 = (unsigned int)dword_88C22C;\n            v22 = \"%1m and %1m can be disconnected with ko (good) at %1m (%d variations)\\n\";\n            goto LABEL_31;\n          }\n          if ( v19 == 5 )\n          {\n            v20 = v28;\n            v21 = (unsigned int)dword_88C22C;\n            if ( v28 )\n            {\n              v22 = \"%1m and %1m can be disconnected at %1m (%d variations)\\n\";\nLABEL_31:\n              v23 = v3;\n              sub_433F90(v22, v3, v2, v20, v21);\nLABEL_35:\n              result = sub_448F00(&dest, v23);\n              dword_88C22C = 0;\n              return result;\n            }\n            v25 = \"%1m and %1m are disconnected as it stands (%d variations)\\n\";\n            v23 = v3;\n            v26 = v2;\n            v24 = (unsigned int)dword_88C22C;\n          }\n          else\n          {\n            v24 = (unsigned int)dword_88C22C;\n            v25 = \"%1m and %1m cannot be disconnected (%d variations)\\n\";\n            v23 = v3;\n            v26 = v2;\n          }\n          sub_433F90(v25, v23, v26, v24);\n          goto LABEL_35;\n        }\n        v20 = v28;\n        v21 = (unsigned int)dword_88C22C;\n        v22 = \"%1m and %1m can be disconnected with ko (bad) at %1m (%d variations)\\n\";\n        goto LABEL_31;\n      }\n      v9 = v28;\n      v10 = (unsigned int)dword_88C22C;\n      v11 = \"%1m and %1m can be connected with ko (bad) at %1m (%d variations)\\n\";\n      goto LABEL_19;\n    }\n    v16 = stderr;\n    v17 = \"gnugo: --decide-connection called for strings of different colors\\n\";\n    v18 = 66LL;\n  }\n  else\n  {\n    v16 = stderr;\n    v17 = \"gnugo: --decide-connection called on an empty vertex\\n\";\n    v18 = 53LL;\n  }\n  return fwrite(v17, v18, 1uLL, v16);\n}\n", 
            "funcStartAddr": "0x447d70L", 
            "funcEndAddr": "0x447fe6L", 
            "funcName": "sub_447D70"
        }, 
        {
            "decompiledFuncCode": "size_t __fastcall sub_447FF0(unsigned int a1)\n{\n  unsigned int v1; // ebp\n  unsigned __int64 v2; // rsi\n  char *v3; // rdi\n  __int64 v4; // rdx\n  __int64 v5; // rcx\n  char *v6; // rdi\n  unsigned int *v7; // rsi\n  char *v8; // rdi\n  __int64 v9; // rdx\n  __int64 v10; // rcx\n  char *v11; // rdi\n  size_t result; // rax\n  unsigned int v13; // [rsp+Ch] [rbp-2Ch]\n  unsigned int v14; // [rsp+10h] [rbp-28h]\n  int v15; // [rsp+14h] [rbp-24h]\n  char v16; // [rsp+18h] [rbp-20h]\n\n  v1 = a1;\n  v13 = 0;\n  if ( !byte_98A1B0[a1] )\n    return fwrite(\"gnugo: --decide-dragon called on an empty vertex\\n\", 0x31uLL, 1uLL, stderr);\n  sub_418500();\n  sub_4187D0((unsigned __int8)byte_98A1B0[a1], (const char *)3);\n  sub_433F90(\"finished examine_position\\n\", 3LL);\n  sub_40E710();\n  if ( dest )\n    sub_448D40(&v16);\n  dword_88C22C = 1;\n  v2 = (unsigned __int64)&v13;\n  switch ( (unsigned int)sub_42AA60(a1, &v13, &v15, &v14) )\n  {\n    case 0u:\n      v2 = a1;\n      sub_433F90(\"%1m cannot be attacked (%d variations)\", a1, (unsigned int)dword_88C22C);\n      goto LABEL_6;\n    case 1u:\n      v4 = v13;\n      v5 = (unsigned int)dword_88C22C;\n      v6 = \"%1m can be attacked with ko (bad) at %1m (%d variations)\";\n      goto LABEL_14;\n    case 3u:\n      v2 = a1;\n      sub_433F90(\n        \"%1m can be attacked with gain (captures %1m) at %1m (%d variations)\",\n        a1,\n        v14,\n        v13,\n        (unsigned int)dword_88C22C);\n      if ( !v15 )\n        goto LABEL_15;\n      goto LABEL_7;\n    case 4u:\n      v4 = v13;\n      v5 = (unsigned int)dword_88C22C;\n      v6 = \"%1m can be attacked with ko (good) at %1m (%d variations)\";\n      goto LABEL_14;\n    case 5u:\n      v4 = v13;\n      if ( v13 )\n      {\n        v5 = (unsigned int)dword_88C22C;\n        v6 = \"%1m can be attacked at %1m (%d variations)\";\nLABEL_14:\n        v2 = v1;\n        sub_433F90(v6, v1, v4, v5);\n        if ( !v15 )\n          goto LABEL_15;\nLABEL_7:\n        v3 = \"\\n\";\n        goto LABEL_16;\n      }\n      v2 = a1;\n      sub_433F90(\"%1m is dead as it stands\", a1);\n      if ( v15 )\n        goto LABEL_7;\nLABEL_15:\n      v3 = \" result uncertain\\n\";\nLABEL_16:\n      sub_433F90(v3, v2);\n      sub_40E710();\n      dword_88C22C = 1;\n      v7 = &v13;\n      switch ( (unsigned int)sub_42CE50(v1, &v13, &v15, &v14) )\n      {\n        case 0u:\n          v7 = (unsigned int *)v1;\n          sub_433F90(\"%1m cannot be defended (%d variations)\", v1, (unsigned int)dword_88C22C);\n          goto LABEL_18;\n        case 1u:\n          v9 = v13;\n          v10 = (unsigned int)dword_88C22C;\n          v11 = \"%1m can be defended with ko (bad) at %1m (%d variations)\";\n          goto LABEL_26;\n        case 2u:\n          v7 = (unsigned int *)v1;\n          sub_433F90(\n            \"%1m can be defended with loss (loses %1m) at %1m (%d variations)\",\n            v1,\n            v14,\n            v13,\n            (unsigned int)dword_88C22C);\n          if ( !v15 )\n            goto LABEL_27;\n          goto LABEL_19;\n        case 4u:\n          v9 = v13;\n          v10 = (unsigned int)dword_88C22C;\n          v11 = \"%1m can be defended with ko (good) at %1m (%d variations)\";\n          goto LABEL_26;\n        case 5u:\n          v9 = v13;\n          if ( !v13 )\n          {\n            v7 = (unsigned int *)v1;\n            sub_433F90(\"%1m is alive as it stands\", v1);\n            if ( !v15 )\n              goto LABEL_27;\nLABEL_19:\n            v8 = \"\\n\";\n            goto LABEL_28;\n          }\n          v10 = (unsigned int)dword_88C22C;\n          v11 = \"%1m can be defended at %1m (%d variations)\";\nLABEL_26:\n          v7 = (unsigned int *)v1;\n          sub_433F90(v11, v1, v9, v10);\n          if ( v15 )\n            goto LABEL_19;\nLABEL_27:\n          v8 = \" result uncertain\\n\";\nLABEL_28:\n          sub_433F90(v8, v7);\n          result = sub_448F00(&dest, v7);\n          dword_88C22C = 0;\n          return result;\n        default:\nLABEL_18:\n          if ( v15 )\n            goto LABEL_19;\n          goto LABEL_27;\n      }\n    default:\nLABEL_6:\n      if ( v15 )\n        goto LABEL_7;\n      goto LABEL_15;\n  }\n}\n", 
            "funcStartAddr": "0x447ff0L", 
            "funcEndAddr": "0x448252L", 
            "funcName": "sub_447FF0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_448260(unsigned int a1)\n{\n  if ( !byte_98A1B0[a1] )\n    return fwrite(\"gnugo: --decide-dragon-data called on an empty vertex\\n\", 0x36uLL, 1uLL, stderr);\n  sub_418500();\n  sub_4187D0((unsigned __int8)byte_98A1B0[a1], (const char *)7);\n  sub_433F90(\"Dragon at %1m:\\n\", a1);\n  return sub_4162A0((char)stderr, a1);\n}\n", 
            "funcStartAddr": "0x448260L", 
            "funcEndAddr": "0x4482bcL", 
            "funcName": "sub_448260"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4482C0(unsigned int a1, unsigned int a2)\n{\n  unsigned int v2; // er13\n  int v3; // ebx\n  unsigned int v4; // er14\n  const char *v5; // r15\n  const char *v6; // r10\n  bool v7; // zf\n  const char *v8; // rbx\n  const char *v9; // rsi\n  unsigned int v10; // er14\n  const char *v11; // r15\n  const char *v12; // rax\n  signed __int64 result; // rax\n  unsigned int v14; // [rsp+Ch] [rbp-4Ch]\n  unsigned int v15; // [rsp+10h] [rbp-48h]\n  unsigned int v16; // [rsp+14h] [rbp-44h]\n  char v17; // [rsp+18h] [rbp-40h]\n\n  v2 = a2;\n  v3 = (unsigned __int8)byte_98A1B0[a1];\n  if ( !byte_98A1B0[a1] || 3 - v3 != (unsigned __int8)byte_98A1B0[a2] )\n    return sub_433F90(\"gnugo: --decide-semeai called on invalid data\\n\");\n  sub_418500();\n  sub_4187D0((unsigned __int8)byte_98A1B0[a1], (const char *)3);\n  sub_433F90(\"finished examine_position\\n\", 3LL);\n  dword_88C22C = 1;\n  sub_40E710();\n  if ( dest )\n    sub_448D40(&v17);\n  sub_428490(a1, a2, (__int64)&v16, (__int64)&v15, (__int64)&v14, 1u);\n  v4 = v14;\n  v5 = sub_4343F0(v16);\n  v6 = sub_4343F0(v15);\n  v7 = (_BYTE)v3 == 2;\n  v8 = \"black\";\n  v9 = \"white\";\n  if ( v7 )\n  {\n    v9 = \"black\";\n    if ( v7 )\n      v8 = \"white\";\n  }\n  sub_433F90(\"After %s at %1m, %1m is %s, %1m is %s (%d nodes)\\n\", v9, v4, a1, v5, v2, v6, (unsigned int)dword_88C22C);\n  sub_428490(v2, a1, (__int64)&v15, (__int64)&v16, (__int64)&v14, 1u);\n  v10 = v14;\n  v11 = sub_4343F0(v16);\n  v12 = sub_4343F0(v15);\n  sub_433F90(\n    \"After %s at %1m, %1m is %s, %1m is %s (%d nodes)\\n\",\n    v8,\n    v10,\n    a1,\n    v11,\n    v2,\n    v12,\n    (unsigned int)dword_88C22C);\n  result = sub_448F00(&dest, v8);\n  dword_88C22C = 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x4482c0L", 
            "funcEndAddr": "0x44845bL", 
            "funcName": "sub_4482C0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_448460(unsigned int a1, unsigned int a2)\n{\n  unsigned int v2; // er13\n  int v3; // ebx\n  unsigned int v4; // er14\n  const char *v5; // r15\n  const char *v6; // r10\n  bool v7; // zf\n  const char *v8; // rbx\n  const char *v9; // rsi\n  unsigned int v10; // er14\n  const char *v11; // r15\n  const char *v12; // rax\n  signed __int64 result; // rax\n  unsigned int v14; // [rsp+Ch] [rbp-4Ch]\n  unsigned int v15; // [rsp+10h] [rbp-48h]\n  unsigned int v16; // [rsp+14h] [rbp-44h]\n  char v17; // [rsp+18h] [rbp-40h]\n\n  v2 = a2;\n  v3 = (unsigned __int8)byte_98A1B0[a1];\n  if ( !byte_98A1B0[a1] || 3 - v3 != (unsigned __int8)byte_98A1B0[a2] )\n    return sub_433F90(\"gnugo: --decide-semeai called on invalid data\\n\");\n  sub_418500();\n  sub_4187D0((unsigned __int8)byte_98A1B0[a1], (const char *)3);\n  sub_433F90(\"finished examine_position\\n\", 3LL);\n  dword_88C22C = 1;\n  sub_40E710();\n  if ( dest )\n    sub_448D40(&v17);\n  sub_428490(a1, a2, (__int64)&v16, (__int64)&v15, (__int64)&v14, 0);\n  v4 = v14;\n  v5 = sub_4343F0(v16);\n  v6 = sub_4343F0(v15);\n  v7 = (_BYTE)v3 == 2;\n  v8 = \"black\";\n  v9 = \"white\";\n  if ( v7 )\n  {\n    v9 = \"black\";\n    if ( v7 )\n      v8 = \"white\";\n  }\n  sub_433F90(\"After %s at %1m, %1m is %s, %1m is %s (%d nodes)\\n\", v9, v4, a1, v5, v2, v6, (unsigned int)dword_88C22C);\n  sub_428490(v2, a1, (__int64)&v15, (__int64)&v16, (__int64)&v14, 0);\n  v10 = v14;\n  v11 = sub_4343F0(v16);\n  v12 = sub_4343F0(v15);\n  sub_433F90(\n    \"After %s at %1m, %1m is %s, %1m is %s (%d nodes)\\n\",\n    v8,\n    v10,\n    a1,\n    v11,\n    v2,\n    v12,\n    (unsigned int)dword_88C22C);\n  result = sub_448F00(&dest, v8);\n  dword_88C22C = 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x448460L", 
            "funcEndAddr": "0x4485f5L", 
            "funcName": "sub_448460"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_448600(unsigned int a1)\n{\n  signed __int64 v1; // rsi\n  signed __int64 v2; // r12\n  signed __int64 v3; // rbx\n  char v4; // al\n  char *v5; // rdi\n  __int64 v6; // rdx\n  __int64 v7; // rcx\n  char *v8; // rdi\n  __int64 v9; // rdx\n  __int64 v10; // rcx\n  char *v11; // rdi\n  __int64 result; // rax\n  unsigned int v13; // [rsp+0h] [rbp-38h]\n  unsigned int v14; // [rsp+4h] [rbp-34h]\n  char v15; // [rsp+8h] [rbp-30h]\n\n  v13 = 0;\n  sub_418500();\n  v1 = 3LL;\n  sub_4187D0(a1, (const char *)3);\n  sub_40E710();\n  if ( dest )\n    sub_448D40(&v15);\n  dword_88C22C = 1;\n  v2 = 4611686018427380703LL;\n  v3 = 21LL;\n  do\n  {\n    v4 = byte_98A1B0[v3];\n    if ( v4 != 3 && v4 && v3 == dword_95C678[v2] && *((_DWORD *)ptr + 26 * dword_95C674[v2] + 18) <= 5 )\n    {\n      sub_433F90(\"\\nanalyzing %1m\\n\", (unsigned int)v3, *(_QWORD *)&v13);\n      sub_433F90(\n        \"status=%s, escape=%d\\n\",\n        off_4AF380[dword_95C684[v2]],\n        *((unsigned int *)ptr + 26 * dword_95C674[v2] + 18),\n        *(_QWORD *)&v13);\n      switch ( (unsigned int)sub_42AA60((unsigned int)v3, &v13, 0LL, &v14) )\n      {\n        case 0u:\n          sub_433F90(\n            \"%1m cannot be attacked (%d variations)\\n\",\n            (unsigned int)v3,\n            (unsigned int)dword_88C22C,\n            *(_QWORD *)&v13);\n          v5 = \"status of %1m revised to ALIVE\\n\";\n          goto LABEL_27;\n        case 1u:\n          v6 = v13;\n          v7 = (unsigned int)dword_88C22C;\n          v8 = \"%1m can be attacked with ko (bad) at %1m (%d variations)\\n\";\n          goto LABEL_17;\n        case 3u:\n          sub_433F90(\n            \"%1m can be attacked with gain (captures %1m) at %1m (%d variations)\",\n            (unsigned int)v3,\n            v14,\n            v13,\n            (unsigned int)dword_88C22C,\n            *(_QWORD *)&v13);\n          break;\n        case 4u:\n          v6 = v13;\n          v7 = (unsigned int)dword_88C22C;\n          v8 = \"%1m can be attacked with ko (good) at %1m (%d variations)\\n\";\n          goto LABEL_17;\n        case 5u:\n          v6 = v13;\n          if ( v13 )\n          {\n            v7 = (unsigned int)dword_88C22C;\n            v8 = \"%1m can be attacked at %1m (%d variations)\\n\";\nLABEL_17:\n            sub_433F90(v8, (unsigned int)v3, v6, v7, *(_QWORD *)&v13);\n          }\n          else\n          {\n            sub_433F90(\"%1m is dead as it stands\\n\", (unsigned int)v3, *(_QWORD *)&v13);\n          }\n          break;\n        default:\n          break;\n      }\n      dword_88C22C = 1;\n      switch ( (unsigned int)sub_42CE50((unsigned int)v3, &v13, 0LL, &v14) )\n      {\n        case 0u:\n          sub_433F90(\n            \"%1m cannot be defended (%d variations)\\n\",\n            (unsigned int)v3,\n            (unsigned int)dword_88C22C,\n            *(_QWORD *)&v13);\n          v5 = \"status of %1m revised to DEAD\\n\";\n          goto LABEL_27;\n        case 1u:\n          v9 = v13;\n          v10 = (unsigned int)dword_88C22C;\n          v11 = \"%1m can be defended with ko (bad) at %1m (%d variations)\\n\";\n          goto LABEL_25;\n        case 2u:\n          sub_433F90(\n            \"%1m can be defended with loss (loses %1m) at %1m (%d variations)\",\n            (unsigned int)v3,\n            v14,\n            v13,\n            (unsigned int)dword_88C22C,\n            *(_QWORD *)&v13);\n          break;\n        case 4u:\n          v9 = v13;\n          v10 = (unsigned int)dword_88C22C;\n          v11 = \"%1m can be defended with ko (good) at %1m (%d variations)\\n\";\n          goto LABEL_25;\n        case 5u:\n          v9 = v13;\n          if ( v13 )\n          {\n            v10 = (unsigned int)dword_88C22C;\n            v11 = \"%1m can be defended at %1m (%d variations)\\n\";\nLABEL_25:\n            sub_433F90(v11, (unsigned int)v3, v9, v10, *(_QWORD *)&v13);\n          }\n          else\n          {\n            sub_433F90(\"%1m is alive as it stands\\n\", (unsigned int)v3, *(_QWORD *)&v13);\n          }\n          break;\n        default:\n          break;\n      }\n      v5 = \"status of %1m revised to CRITICAL\\n\";\nLABEL_27:\n      v1 = (unsigned int)v3;\n      sub_433F90(v5, (unsigned int)v3, *(_QWORD *)&v13);\n    }\n    ++v3;\n    v2 += 19LL;\n  }\n  while ( v2 * 4 );\n  result = sub_448F00(&dest, v1);\n  dword_88C22C = 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x448600L", 
            "funcEndAddr": "0x44889eL", 
            "funcName": "sub_448600"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4488A0(unsigned int a1)\n{\n  signed __int64 v1; // rsi\n  unsigned int v2; // ebx\n  void *v3; // rax\n  unsigned int v4; // ebx\n  void *v5; // rax\n  signed __int64 result; // rax\n  unsigned int v7; // [rsp+0h] [rbp-38h]\n  unsigned int v8; // [rsp+4h] [rbp-34h]\n  char v9; // [rsp+8h] [rbp-30h]\n  char v10; // [rsp+10h] [rbp-28h]\n\n  sub_418500();\n  v1 = 3LL;\n  sub_4187D0(2u, (const char *)3);\n  if ( dword_96CAB0[9 * a1] != 5 && dword_977370[9 * a1] != 4 )\n    return sub_433F90(\"The eye at %1m is not of a single color.\\n\", a1);\n  if ( dword_88C228 )\n    sub_44A610(0LL, 3LL);\n  if ( dest )\n    sub_448D40(&v10);\n  dword_88C22C = 1;\n  if ( dword_96CAB0[9 * a1] == 5 )\n  {\n    v2 = dword_96CABC[9 * a1];\n    sub_425500(dword_96CABC[9 * a1], &v9, &v8, &v7, (__int64)dword_96CAB0, (__int64)&unk_9634B0);\n    v3 = sub_426340((unsigned __int8 *)&v9);\n    v1 = v2;\n    sub_433F90(\"Black eyespace at %1m: %s\\n\", v2, v3);\n    if ( (signed int)sub_426FA0(&v9) > 0 )\n    {\n      v1 = v8;\n      sub_433F90(\"  vital points: %1m (attack) %1m (defense)\\n\", v8, v7);\n    }\n  }\n  if ( dword_977370[9 * a1] == 4 )\n  {\n    v4 = dword_97737C[9 * a1];\n    sub_425500(dword_97737C[9 * a1], &v9, &v8, &v7, (__int64)dword_977370, (__int64)&unk_9634B0);\n    v5 = sub_426340((unsigned __int8 *)&v9);\n    v1 = v4;\n    sub_433F90(\"White eyespace at %1m: %s\\n\", v4, v5);\n    if ( (signed int)sub_426FA0(&v9) > 0 )\n    {\n      v1 = v8;\n      sub_433F90(\"  vital points: %1m (attack) %1m (defense)\\n\", v8, v7);\n    }\n  }\n  result = sub_448F00(&dest, v1);\n  dword_88C22C = 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x4488a0L", 
            "funcEndAddr": "0x448a2fL", 
            "funcName": "sub_4488A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_448A30(unsigned int a1)\n{\n  __int64 v1; // rsi\n  signed int v2; // ebp\n  signed __int64 v3; // rbx\n  __int64 result; // rax\n  unsigned int v5; // [rsp+Ch] [rbp-1BCh]\n  char v6; // [rsp+10h] [rbp-1B8h]\n  char v7[424]; // [rsp+20h] [rbp-1A8h]\n\n  sub_418500();\n  sub_4187D0(a1, (const char *)0x63);\n  if ( dest )\n    sub_448D40(&v6);\n  dword_88C22C = 1;\n  if ( (unsigned int)sub_40F720(a1, &v5, v7, dword_88C268) )\n  {\n    v1 = a1;\n    sub_433F90(\"Combination attack for %C at %1m, defense at \", a1, v5);\n    v2 = 1;\n    v3 = 21LL;\n    do\n    {\n      if ( byte_98A1B0[v3] != 3 && v7[v3] )\n      {\n        if ( !v2 )\n          sub_433F90(\", \");\n        v2 = 0;\n        v1 = (unsigned int)v3;\n        sub_433F90((char *)&off_49AB32, (unsigned int)v3);\n      }\n      ++v3;\n    }\n    while ( v3 != 400 );\n    sub_433F90(\"\\n\");\n  }\n  else\n  {\n    v1 = a1;\n    sub_433F90(\"No Combination attack for %C\\n\", a1);\n  }\n  result = sub_448F00(&dest, v1);\n  dword_88C22C = 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x448a30L", 
            "funcEndAddr": "0x448b17L", 
            "funcName": "sub_448A30"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_448B20(unsigned int a1)\n{\n  unsigned int v1; // ebp\n  int v2; // eax\n  char *v3; // rdi\n\n  v1 = a1;\n  if ( !byte_98A1B0[a1] )\n    return fwrite(\"location must not be empty!\\n\", 0x1CuLL, 1uLL, stderr);\n  sub_418500();\n  sub_4187D0((unsigned __int8)byte_98A1B0[a1], (const char *)0x63);\n  v2 = sub_45A8A0(a1, 0LL, 1LL, 0LL);\n  if ( v2 == 2 )\n  {\n    v3 = \"the dragon at %1m is WEAKLY SURROUNDED!\\n\";\n  }\n  else if ( v2 == 1 )\n  {\n    v3 = \"the dragon at %1m is SURROUNDED!\\n\";\n  }\n  else\n  {\n    v3 = \"the dragon at %1m is not surrounded.\\n\";\n  }\n  return sub_433F90(v3, v1);\n}\n", 
            "funcStartAddr": "0x448b20L", 
            "funcEndAddr": "0x448ba4L", 
            "funcName": "sub_448B20"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_448BB0(_QWORD *a1, int a2)\n{\n  int v2; // eax\n  int *v3; // r13\n  __int64 v4; // rbp\n  signed __int64 v5; // r12\n  _DWORD *v6; // r14\n  signed __int64 v7; // rbx\n  const char *v8; // rsi\n  float v9; // xmm0_4\n  int v10; // [rsp+Ch] [rbp-4Ch]\n  char s; // [rsp+10h] [rbp-48h]\n\n  if ( dest )\n  {\n    v10 = a2;\n    v2 = dword_565C68;\n    if ( dword_565C68 > 0 )\n    {\n      v3 = dword_988EE0;\n      LODWORD(v4) = 21;\n      v5 = 0LL;\n      while ( 1 )\n      {\n        v4 = (unsigned int)v4;\n        if ( v2 > 0 )\n          break;\nLABEL_19:\n        ++v5;\n        LODWORD(v4) = v4 + 20;\n        v3 += 19;\n        if ( v5 >= v2 )\n          goto LABEL_20;\n      }\n      v6 = (_DWORD *)(76 * v4 + 9785284);\n      v7 = 0LL;\n      while ( 1 )\n      {\n        if ( !byte_98A1B0[v4 + v7] || !(dword_88C2F0 & 1) )\n          goto LABEL_13;\n        if ( *v6 == 2 )\n        {\n          v8 = \"!\";\n        }\n        else\n        {\n          if ( *v6 )\n            goto LABEL_13;\n          v8 = \"X\";\n        }\n        sub_402840(a1, (__int64)v8, (unsigned int)v5, v7);\nLABEL_13:\n        v9 = *(float *)&v3[v7];\n        if ( v9 > 0.0 && dword_88C2F0 & 2 )\n        {\n          if ( v9 >= 1.0 )\n            sub_4028B0(a1, (unsigned int)(signed int)v9, (unsigned int)v5, v7);\n          else\n            sub_402840(a1, (__int64)\"<1\", (unsigned int)v5, v7);\n        }\n        ++v7;\n        v2 = dword_565C68;\n        v6 += 19;\n        if ( v7 >= dword_565C68 )\n          goto LABEL_19;\n      }\n    }\nLABEL_20:\n    if ( v10 > 0 )\n    {\n      if ( dword_88C2F0 & 2 )\n      {\n        sprintf(&s, \"Value of move: %d\");\n        sub_402640(a1, &s);\n      }\n    }\n  }\n}\n", 
            "funcStartAddr": "0x448bb0L", 
            "funcEndAddr": "0x448d13L", 
            "funcName": "sub_448BB0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_448D20@<rax>(__int64 result@<rax>, __int64 *a2@<rdi>)\n{\n  if ( dest )\n    result = sub_4033B0(result, *a2, &dest);\n  return result;\n}\n", 
            "funcStartAddr": "0x448d20L", 
            "funcEndAddr": "0x448d37L", 
            "funcName": "sub_448D20"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_448D40(_OWORD *a1)\n{\n  _OWORD *v1; // rbx\n  _OWORD *v2; // rdi\n  __int64 v3; // rsi\n\n  v1 = a1;\n  if ( qword_88C238 )\n    sub_4340E0((__int64)\"engine/sgffile.c\", 0x76u, (__int64)\"sgf_dumptree == ((void*)0)\", 0xFFFFFFFF, 0xFFFFFFFF);\n  v2 = &unk_87D7A0;\n  if ( v1 )\n    v2 = v1;\n  qword_88C238 = (__int64)v2;\n  sub_4016F0(v2);\n  v3 = (unsigned int)dword_565C68;\n  sub_401880((__int64 *)qword_88C238, dword_565C68);\n  return sub_448DB0(qword_88C238, v3);\n}\n", 
            "funcStartAddr": "0x448d40L", 
            "funcEndAddr": "0x448da4L", 
            "funcName": "sub_448D40"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_448DB0(__int64 a1)\n{\n  _QWORD *v1; // r15\n  __int64 v2; // rax\n  __int64 v3; // r13\n  __int64 v4; // r12\n  signed __int64 v5; // rbx\n  __int64 v6; // rcx\n  __int64 v7; // r13\n  __int64 v8; // r12\n  signed __int64 v9; // rbx\n  __int64 v10; // rcx\n\n  if ( !a1 )\n    sub_4340E0((__int64)\"engine/sgffile.c\", 0xC7u, (__int64)\"tree\", 0xFFFFFFFF, 0xFFFFFFFF);\n  v1 = sub_4024E0(*(_QWORD *)(a1 + 8));\n  v2 = (unsigned int)dword_565C68;\n  if ( dword_565C68 > 0 )\n  {\n    LODWORD(v3) = 21;\n    v4 = 0LL;\n    do\n    {\n      v3 = (unsigned int)v3;\n      if ( (signed int)v2 <= 0 )\n      {\n        v6 = (signed int)v2;\n      }\n      else\n      {\n        v5 = 0LL;\n        do\n        {\n          if ( byte_98A1B0[v3 + v5] == 1 )\n          {\n            sub_402200(v2, v4, v5, v1, 1);\n            v2 = (unsigned int)dword_565C68;\n          }\n          ++v5;\n          v6 = (signed int)v2;\n        }\n        while ( v5 < (signed int)v2 );\n      }\n      ++v4;\n      LODWORD(v3) = v3 + 20;\n    }\n    while ( v4 < v6 );\n    if ( (signed int)v2 > 0 )\n    {\n      LODWORD(v7) = 21;\n      v8 = 0LL;\n      do\n      {\n        v7 = (unsigned int)v7;\n        if ( (signed int)v2 <= 0 )\n        {\n          v10 = (signed int)v2;\n        }\n        else\n        {\n          v9 = 0LL;\n          do\n          {\n            if ( byte_98A1B0[v7 + v9] == 2 )\n            {\n              sub_402200(v2, v8, v9, v1, 2);\n              v2 = (unsigned int)dword_565C68;\n            }\n            ++v9;\n            v10 = (signed int)v2;\n          }\n          while ( v9 < (signed int)v2 );\n        }\n        ++v8;\n        LODWORD(v7) = v7 + 20;\n      }\n      while ( v8 < v10 );\n    }\n  }\n  sub_401AC0(a1, (__int64)v1);\n}\n", 
            "funcStartAddr": "0x448db0L", 
            "funcEndAddr": "0x448ef4L", 
            "funcName": "sub_448DB0"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_448F00(const char *a1)\n{\n  if ( a1 && *a1 )\n  {\n    if ( qword_88C238 )\n    {\n      sub_4033B0((__int64)a1, *(_QWORD *)qword_88C238, a1);\n      sub_401BB0(*(void **)qword_88C238);\n      qword_88C238 = 0LL;\n    }\n  }\n}\n", 
            "funcStartAddr": "0x448f00L", 
            "funcEndAddr": "0x448f44L", 
            "funcName": "sub_448F00"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_448F50(unsigned int a1, const char *a2)\n{\n  unsigned int v2; // er13\n  __int64 **v3; // rdi\n  __int64 v4; // rax\n  __int64 v5; // rax\n  char *v6; // rdx\n  unsigned int v7; // ebp\n  signed __int64 v8; // rbx\n  signed __int64 v9; // r15\n  __int64 **v11; // [rsp+10h] [rbp-D8h]\n  _QWORD **v12; // [rsp+18h] [rbp-D0h]\n  char v13; // [rsp+25h] [rbp-C3h]\n  const char *v14; // [rsp+28h] [rbp-C0h]\n  char v15; // [rsp+30h] [rbp-B8h]\n\n  v14 = a2;\n  v2 = a1;\n  sub_4016F0(&v11);\n  sub_401880((__int64 *)&v11, dword_565C68);\n  v3 = v11;\n  sub_402BA0(v11, 1, (unsigned int)dword_88C240, (unsigned int)dword_565C78, dword_88C300);\n  v4 = sub_493860(v3);\n  sub_4937C0(&v15, 128LL, \"GNU Go %s load and print\", v4);\n  sub_401EF0(v11, \"GN\", &v15);\n  sub_448DB0((__int64)&v11);\n  if ( v2 )\n  {\n    v6 = off_494435;\n    if ( v2 == 1 )\n      v6 = off_494435 + 2;\n    sub_401C10(v12, \"PL\", v6);\n    v5 = (unsigned int)dword_565C68;\n    if ( dword_565C68 > 0 )\n    {\n      v7 = 21;\n      v8 = 0LL;\n      do\n      {\n        if ( (signed int)v5 > 0 )\n        {\n          v9 = 0LL;\n          do\n          {\n            if ( !byte_98A1B0[v7 + v9] && !(unsigned int)sub_407B30((unsigned int)v9 + v7, v2) )\n            {\n              sub_4937C0(&v13, 3LL, \"%c%c\", (unsigned int)(v9 + 97));\n              sub_401C10(v12, \"IL\", &v13);\n            }\n            ++v9;\n            v5 = dword_565C68;\n          }\n          while ( v9 < dword_565C68 );\n        }\n        ++v8;\n        v7 += 20;\n      }\n      while ( v8 < (signed int)v5 );\n    }\n  }\n  return sub_4033B0(v5, (__int64)v11, v14);\n}\n", 
            "funcStartAddr": "0x448f50L", 
            "funcEndAddr": "0x449105L", 
            "funcName": "sub_448F50"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_449110@<rax>(__int64 result@<rax>, _QWORD *a2@<rdi>)\n{\n  __int64 v2; // r12\n  __int64 v3; // r15\n  signed __int64 v4; // rbx\n  __int64 v5; // rcx\n\n  if ( a2 )\n  {\n    result = (unsigned int)dword_565C68;\n    if ( dword_565C68 > 0 )\n    {\n      LODWORD(v2) = 21;\n      v3 = 0LL;\n      do\n      {\n        v2 = (unsigned int)v2;\n        if ( (signed int)result <= 0 )\n        {\n          v5 = (signed int)result;\n        }\n        else\n        {\n          v4 = 0LL;\n          do\n          {\n            if ( byte_98A1B0[v2 + v4] == 2 )\n            {\n              sub_402200(result, v3, v4, a2, 2);\n              result = (unsigned int)dword_565C68;\n            }\n            ++v4;\n            v5 = (signed int)result;\n          }\n          while ( v4 < (signed int)result );\n        }\n        ++v3;\n        LODWORD(v2) = v2 + 20;\n      }\n      while ( v3 < v5 );\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x449110L", 
            "funcEndAddr": "0x4491acL", 
            "funcName": "sub_449110"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4491B0(unsigned int a1)\n{\n  const char *v1; // rax\n  __int64 result; // rax\n\n  if ( dword_88C268 )\n  {\n    v1 = sub_4341A0(a1);\n    sub_433F90(\"\\nPattern matcher is looking for move reasons for %s!\\n\", v1);\n  }\n  sub_41EFF0((__int64)sub_449240, a1, (__int64)&unk_5B18A0, 0LL, 0LL);\n  if ( dword_565C74 )\n    sub_41EFF0((__int64)sub_449240, a1, (__int64)&unk_6CBBC8, 0LL, 0LL);\n  result = dword_88C248 | (unsigned int)dword_88C2FC;\n  if ( !(dword_88C248 | dword_88C2FC) )\n    result = sub_41EFF0((__int64)sub_449240, a1, (__int64)&unk_629EC8, 0LL, 0LL);\n  return result;\n}\n", 
            "funcStartAddr": "0x4491b0L", 
            "funcEndAddr": "0x449231L", 
            "funcName": "sub_4491B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_449240(int a1, int a2, _DWORD *a3, unsigned int a4)\n{\n  unsigned int v4; // er12\n  __int64 result; // rax\n  signed int v6; // edi\n  signed int v7; // er13\n  signed int v8; // esi\n  int v9; // er8\n  signed __int64 v10; // rbp\n  signed __int64 v11; // r15\n  int v12; // er12\n  int v13; // ebx\n  signed __int64 v14; // rax\n  int v15; // er12\n  int v16; // eax\n  signed __int64 v17; // rax\n  signed int v18; // ebx\n  int v19; // er14\n  signed __int64 v20; // rax\n  signed __int64 v21; // rax\n  unsigned int v22; // ecx\n  unsigned int v23; // edx\n  unsigned int v24; // ebx\n  unsigned int v25; // edx\n  unsigned int v26; // er14\n  signed __int64 v27; // rsi\n  signed int v28; // ecx\n  __int64 v29; // rdx\n  int v30; // eax\n  __int64 (__fastcall *v31)(_DWORD *, _QWORD, _QWORD, _QWORD); // rbp\n  char *v32; // r12\n  signed __int64 v33; // r13\n  signed __int64 v34; // rax\n  unsigned int v35; // ebx\n  signed __int64 v36; // r15\n  unsigned int *v37; // r14\n  unsigned int v38; // ebp\n  char v39; // cl\n  char *v40; // r13\n  signed __int64 v41; // r15\n  signed __int64 v42; // rax\n  unsigned int v43; // ebx\n  signed __int64 v44; // r14\n  signed int *v45; // r12\n  unsigned int v46; // ebp\n  bool v47; // sf\n  signed __int64 v48; // rcx\n  char *v49; // r12\n  signed __int64 v50; // r15\n  unsigned int v51; // er13\n  signed __int64 v52; // rbx\n  unsigned int *v53; // r14\n  unsigned int v54; // ebp\n  unsigned int v55; // ebx\n  __int64 v56; // rbp\n  int *v57; // rbx\n  unsigned int v58; // er14\n  __int64 v59; // rbp\n  int *v60; // rbx\n  unsigned int v61; // er14\n  __int64 v62; // rbp\n  int *v63; // rbx\n  unsigned int v64; // er14\n  unsigned int v65; // ebx\n  unsigned int v66; // er14\n  float v67; // xmm1_4\n  float v68; // xmm0_4\n  float v69; // xmm1_4\n  float v70; // xmm0_4\n  unsigned int v71; // er13\n  __int64 v72; // rbp\n  int *v73; // rbx\n  unsigned int v74; // er14\n  __int64 v75; // rbp\n  int *v76; // rbx\n  unsigned int v77; // er14\n  __int64 v78; // [rsp+0h] [rbp-E8h]\n  unsigned int v79; // [rsp+8h] [rbp-E0h]\n  unsigned int v80; // [rsp+8h] [rbp-E0h]\n  signed int v81; // [rsp+Ch] [rbp-DCh]\n  _DWORD *v82; // [rsp+10h] [rbp-D8h]\n  signed int v83; // [rsp+1Ch] [rbp-CCh]\n  unsigned int v84; // [rsp+20h] [rbp-C8h]\n  signed __int64 v85; // [rsp+20h] [rbp-C8h]\n  unsigned int v86; // [rsp+2Ch] [rbp-BCh]\n  signed int v87; // [rsp+2Ch] [rbp-BCh]\n  int v88; // [rsp+30h] [rbp-B8h]\n  signed __int64 v89; // [rsp+30h] [rbp-B8h]\n  signed __int64 v90; // [rsp+30h] [rbp-B8h]\n  signed __int64 v91; // [rsp+30h] [rbp-B8h]\n  __int64 v92; // [rsp+38h] [rbp-B0h]\n  int v93; // [rsp+40h] [rbp-A8h]\n  char v94; // [rsp+44h] [rbp-A4h]\n  int v95; // [rsp+60h] [rbp-88h]\n  char v96; // [rsp+64h] [rbp-84h]\n  int v97; // [rsp+80h] [rbp-68h]\n  char v98; // [rsp+84h] [rbp-64h]\n  int v99[18]; // [rsp+A0h] [rbp-48h]\n\n  v79 = a4;\n  HIDWORD(v78) = a2;\n  v88 = a1;\n  v82 = a3;\n  v4 = a3[30];\n  if ( dword_88C2FC )\n  {\n    result = v4 & 0x800000;\n    if ( v4 & 0x800000 )\n      return result;\n  }\n  v84 = 3 - a2;\n  LODWORD(v78) = a1 + dword_94A490[8 * a3[13] + a4];\n  v6 = 0;\n  if ( v4 & 0x3EC381 )\n  {\n    v7 = 0;\n    v8 = 0;\n    v9 = 0;\n    if ( a3[2] > 0 )\n    {\n      v10 = 0LL;\n      v9 = 0;\n      v8 = 0;\n      v7 = 0;\n      v6 = 0;\n      v86 = a3[30];\n      do\n      {\n        if ( !*(_DWORD *)(*(_QWORD *)v82 + 8 * v10 + 4) )\n          goto LABEL_57;\n        v11 = dword_94A490[8 * *(signed int *)(*(_QWORD *)v82 + 8 * v10) + v79] + (signed __int64)v88;\n        if ( v4 & 1 )\n        {\n          if ( (unsigned __int8)byte_98A1B0[v11] == HIDWORD(v78) )\n          {\n            if ( dword_8E94AC[95 * v11] )\n            {\n              v12 = v9;\n              result = sub_44B0A0((unsigned int)v78, (unsigned int)v11);\n              v9 = v12;\n              v4 = v86;\n              if ( !(_DWORD)result )\n                return result;\n            }\n          }\n        }\n        v13 = *((_DWORD *)&xmmword_954FB0 + 19 * v11 + 2);\n        if ( v6 <= 4 && (unsigned __int8)byte_98A1B0[v11] == HIDWORD(v78) )\n        {\n          if ( v6 <= 0 )\n          {\n            if ( v6 )\n              goto LABEL_26;\n          }\n          else\n          {\n            v14 = 0LL;\n            do\n            {\n              if ( *(&v93 + v14) == v13 )\n                break;\n              ++v14;\n            }\n            while ( v14 < v6 );\n            if ( (_DWORD)v14 != v6 )\n              goto LABEL_26;\n          }\n          if ( !dword_8E94D4[95 * v11]\n            || (v15 = v9, v16 = sub_44B0A0((unsigned int)v78, (unsigned int)v11), v9 = v15, v4 = v86, v16) )\n          {\n            *(&v93 + (unsigned int)v6++) = v13;\n          }\n        }\nLABEL_26:\n        if ( v7 <= 4 && v84 == (unsigned __int8)byte_98A1B0[v11] )\n        {\n          if ( v7 <= 0 )\n          {\n            if ( !v7 )\n              goto LABEL_33;\n          }\n          else\n          {\n            v17 = 0LL;\n            do\n            {\n              if ( v99[v17] == v13 )\n                break;\n              ++v17;\n            }\n            while ( v17 < v7 );\n            if ( (_DWORD)v17 == v7 )\n            {\nLABEL_33:\n              v99[v7++] = v13;\n              goto LABEL_34;\n            }\n          }\n        }\nLABEL_34:\n        if ( (unsigned int)(*(_DWORD *)(*(_QWORD *)v82 + 8 * v10 + 4) - 1) > 1 )\n          goto LABEL_57;\n        v18 = v9;\n        v19 = sub_40AD00(v11);\n        if ( v8 > 4 || (unsigned __int8)byte_98A1B0[v11] != HIDWORD(v78) )\n          goto LABEL_49;\n        if ( v8 <= 0 )\n        {\n          if ( !v8 )\n            goto LABEL_46;\n        }\n        else\n        {\n          v20 = 0LL;\n          do\n          {\n            if ( *(&v97 + v20) == v19 )\n              break;\n            ++v20;\n          }\n          while ( v20 < v8 );\n          if ( (_DWORD)v20 == v8 )\n          {\nLABEL_46:\n            if ( !dword_8E94D4[95 * v11] || (unsigned int)sub_44B0A0((unsigned int)v78, (unsigned int)v11) )\n              *(&v97 + (unsigned int)v8++) = v19;\n            goto LABEL_49;\n          }\n        }\nLABEL_49:\n        v9 = v18;\n        if ( v18 > 4 || v84 != (unsigned __int8)byte_98A1B0[v11] )\n          goto LABEL_57;\n        if ( v18 <= 0 )\n        {\n          if ( v18 )\n            goto LABEL_57;\n        }\n        else\n        {\n          v21 = 0LL;\n          do\n          {\n            if ( *(&v95 + v21) == v19 )\n              break;\n            ++v21;\n          }\n          while ( v21 < v18 );\n          if ( (_DWORD)v21 != v18 )\n            goto LABEL_57;\n        }\n        *(&v95 + (unsigned int)v18) = v19;\n        v9 = v18 + 1;\nLABEL_57:\n        ++v10;\n      }\n      while ( v10 < (signed int)v82[2] );\n    }\n  }\n  else\n  {\n    v7 = 0;\n    v8 = 0;\n    v9 = 0;\n  }\n  v22 = v4 & 0xFFFFFF7F;\n  v23 = v4 & 0xFFFFFF7F;\n  if ( dword_565C84 )\n    v23 = v4;\n  if ( v6 > 1 )\n    v23 = v4;\n  if ( !dword_565C84 )\n    v22 = v23;\n  if ( v8 >= 2 )\n    v22 = v23;\n  v24 = v22 & 0xFFFFFDFF;\n  v25 = v22 & 0xFFFFFDFF;\n  if ( dword_565C84 )\n    v25 = v22;\n  if ( v7 > 1 )\n    v25 = v22;\n  if ( !dword_565C84 )\n    v24 = v25;\n  if ( v9 >= 2 )\n    v24 = v25;\n  if ( *((_QWORD *)v82 + 20) || dword_88C21C || (result = v82[38] & 2, (unsigned int)result | v24 & 0x7FFFFB80) )\n  {\n    v26 = v9;\n    v87 = v8;\n    if ( v24 & 0x10 )\n    {\n      v27 = HIDWORD(v78);\n      v30 = sub_408130(v78, SHIDWORD(v78), 0LL);\n      v28 = v6;\n      v29 = v26;\n      if ( !v30 )\n      {\n        v27 = HIDWORD(v78);\n        result = sub_407B30(v78, HIDWORD(v78));\n        v29 = v26;\n        v28 = v6;\n        if ( !(_DWORD)result )\n          return result;\n      }\n    }\n    else\n    {\n      v27 = HIDWORD(v78);\n      result = sub_43F100(v78, HIDWORD(v78));\n      v28 = v6;\n      v29 = v26;\n      if ( (_DWORD)result != 5 )\n        return result;\n    }\n    if ( !(v24 & 0x20) || (v27 = v84, result = sub_43F100(v78, v84), v29 = v26, v28 = v6, (_DWORD)result) )\n    {\n      if ( !(v82[38] & 1)\n        || (v27 = (unsigned int)v78,\n            result = (*((__int64 (__fastcall **)(_QWORD, _QWORD, _QWORD, _QWORD))v82 + 21))(\n                       v79,\n                       (unsigned int)v78,\n                       HIDWORD(v78),\n                       0LL),\n            v29 = v26,\n            v28 = v6,\n            (_DWORD)result) )\n      {\n        v31 = (__int64 (__fastcall *)(_DWORD *, _QWORD, _QWORD, _QWORD))*((_QWORD *)v82 + 20);\n        if ( !v31 )\n          goto LABEL_94;\n        if ( dword_88C264 & 0x100 )\n        {\n          sub_433F90(\"  asking helper to consider '%s'+%d at %1m\\n\", *((_QWORD *)v82 + 2), v79, (unsigned int)v78, v78);\n          v31 = (__int64 (__fastcall *)(_DWORD *, _QWORD, _QWORD, _QWORD))*((_QWORD *)v82 + 20);\n        }\n        v27 = v79;\n        result = v31(v82, v79, (unsigned int)v78, HIDWORD(v78));\n        if ( (_DWORD)result )\n        {\n          v28 = v6;\n          v29 = v26;\n          if ( dword_88C264 & 0x100 )\n          {\n            v27 = *((_QWORD *)v82 + 2);\n            sub_433F90(\"helper likes pattern '%s' at %1m\\n\", v27, (unsigned int)v78, (unsigned int)v6, v78);\n            v29 = v26;\n            v28 = v6;\n          }\nLABEL_94:\n          if ( dword_88C268 )\n          {\n            v27 = *((_QWORD *)v82 + 2);\n            sub_433F90(\"pattern '%s'+%d matched at %1m\\n\", v27, v79, (unsigned int)v78, v78);\n            v29 = v26;\n            v28 = v6;\n          }\n          v81 = v28;\n          v83 = v7;\n          if ( v82[38] & 2 )\n          {\n            v27 = (unsigned int)v78;\n            (*((void (__fastcall **)(_QWORD, _QWORD, _QWORD, signed __int64))v82 + 21))(\n              v79,\n              (unsigned int)v78,\n              HIDWORD(v78),\n              1LL);\n            v29 = v26;\n          }\n          v80 = v24;\n          if ( v24 & 0x200 && (signed int)v29 > 0 )\n          {\n            v85 = (signed int)v29;\n            v32 = &v96;\n            v92 = (unsigned int)v29;\n            v33 = (unsigned int)v29 - 1LL;\n            v34 = 0LL;\n            do\n            {\n              v89 = v34 + 1;\n              if ( v34 + 1 < v85 )\n              {\n                v35 = *(&v95 + v34);\n                v36 = v33;\n                v37 = (unsigned int *)v32;\n                do\n                {\n                  v38 = *v37;\n                  v27 = *v37;\n                  if ( (unsigned int)sub_434520(v35, v27, 0LL) )\n                  {\n                    v27 = 1LL;\n                    if ( !(unsigned int)sub_44BB60(SBYTE4(v78)) )\n                    {\n                      v27 = v35;\n                      sub_4215F0(v78, v35, v38);\n                      if ( dword_88C268 )\n                      {\n                        v27 = v35;\n                        sub_433F90(\"...cuts strings %1m, %1m\\n\", v35, v38, v78);\n                      }\n                    }\n                  }\n                  ++v37;\n                  --v36;\n                }\n                while ( v36 );\n              }\n              v32 += 4;\n              --v33;\n              v34 = v89;\n            }\n            while ( v89 != v92 );\n          }\n          result = (unsigned int)dword_565C84;\n          if ( !dword_565C84 )\n          {\n            v39 = v80;\n            if ( (v80 & 0x80u) == 0 || v81 <= 0 )\n            {\nLABEL_121:\n              v47 = v39 < 0;\n              v48 = (unsigned int)v87;\n              if ( v47 && (_DWORD)result && v87 > 0 )\n              {\n                v49 = &v98;\n                v50 = (unsigned int)v87 - 1LL;\n                result = 0LL;\n                do\n                {\n                  v91 = result + 1;\n                  if ( result + 1 < v87 )\n                  {\n                    v51 = *(&v97 + result);\n                    v52 = v50;\n                    v53 = (unsigned int *)v49;\n                    do\n                    {\n                      v54 = *v53;\n                      v27 = *v53;\n                      if ( (unsigned int)sub_434BB0(v51, v27, 0LL) )\n                      {\n                        v27 = 0LL;\n                        if ( !(unsigned int)sub_44BB60(SBYTE4(v78)) )\n                        {\n                          v27 = v51;\n                          sub_421440(v78, v51, v54);\n                          if ( dword_88C268 )\n                          {\n                            v27 = v51;\n                            sub_433F90(\"...connects strings %1m, %1m\\n\", v51, v54, v78);\n                          }\n                        }\n                      }\n                      ++v53;\n                      --v52;\n                    }\n                    while ( v52 );\n                  }\n                  v49 += 4;\n                  --v50;\n                  v48 = v91;\n                  result = v91;\n                }\n                while ( v91 != v87 );\n              }\n              v55 = v80;\n              if ( v55 & 0x100 )\n              {\n                if ( v81 > 0 )\n                {\n                  v56 = (unsigned int)v81;\n                  v57 = &v93;\n                  do\n                  {\n                    v58 = *v57;\n                    v27 = (unsigned int)*v57;\n                    sub_422380(v78, v27);\n                    if ( dword_88C268 )\n                    {\n                      v27 = v58;\n                      sub_433F90(\"...strategical defense (weak connection) of %1m\\n\", v58, v78);\n                    }\n                    ++v57;\n                    --v56;\n                  }\n                  while ( v56 );\n                }\n                result = (__int64)sub_422210(v78, 1.0);\n                v55 = v80;\n                if ( dword_88C268 )\n                  result = sub_433F90(\"...shape value 1\\n\", v27, COERCE_DOUBLE(1065353216LL), v78);\n              }\n              if ( v55 & 0x800 )\n                sub_4340E0((__int64)\"engine/shapes.c\", 0x14Bu, (__int64)\"!(class & 0x0800)\", 0xFFFFFFFF, 0xFFFFFFFF);\n              if ( v55 & 0x1000 )\n              {\n                result = sub_4221E0(v78);\n                if ( dword_88C268 )\n                  result = sub_433F90(\"...expands territory\\n\", v27, v78);\n              }\n              if ( v55 & 0x2000 )\n              {\n                result = sub_4221F0(v78);\n                if ( dword_88C268 )\n                  result = sub_433F90(\"...expands moyo\\n\", v27, v78);\n              }\n              if ( v55 & 0x10000 )\n              {\n                result = sub_422200(v78);\n                if ( dword_88C268 )\n                  result = sub_433F90(\"...is an invasion\\n\", v27, v78);\n              }\n              if ( v55 & 0x4000 && v83 > 0 )\n              {\n                v59 = (unsigned int)v83;\n                v60 = v99;\n                do\n                {\n                  v61 = *v60;\n                  v27 = (unsigned int)*v60;\n                  result = sub_422300(v78, v27);\n                  if ( dword_88C268 )\n                  {\n                    v27 = v61;\n                    result = sub_433F90(\"...strategical attack on %1m\\n\", v61, v78);\n                  }\n                  ++v60;\n                  --v59;\n                }\n                while ( v59 );\n              }\n              if ( (v80 & 0x8000u) != 0 && v81 > 0 )\n              {\n                v62 = (unsigned int)v81;\n                v63 = &v93;\n                do\n                {\n                  v64 = *v63;\n                  v27 = (unsigned int)*v63;\n                  result = sub_422380(v78, v27);\n                  if ( dword_88C268 )\n                  {\n                    v27 = v64;\n                    result = sub_433F90(\"...strategical defense of %1m\\n\", v64, v78);\n                  }\n                  ++v63;\n                  --v62;\n                }\n                while ( v62 );\n              }\n              v65 = v80;\n              if ( v80 & 0x20000 )\n              {\n                if ( dword_88C268 )\n                  sub_433F90(\"...joseki standard move\\n\", v27, v29, v48, v78);\n                sub_4221E0(v78);\n                if ( dword_88C268 )\n                  sub_433F90(\"...expands territory\\n\", v27, v78);\n                sub_4221F0(v78);\n                if ( dword_88C268 )\n                  sub_433F90(\"...expands moyo\\n\", v27, v78);\n                result = sub_422940(v78, 35.0);\n                if ( dword_88C268 )\n                  result = sub_433F90(\"... minimum move value %f\\n\", v27, 35.0, v78);\n              }\n              if ( !(v80 & 0x40000) )\n              {\n                v66 = v81;\n                if ( !(v80 & 0x80000) )\n                  goto LABEL_208;\n                goto LABEL_195;\n              }\n              if ( dword_88C268 )\n                sub_433F90(\"...less urgent joseki move\\n\", v27, v29, v48, v78);\n              sub_4221E0(v78);\n              v66 = v81;\n              if ( dword_88C268 )\n                sub_433F90(\"...expands territory\\n\", v27, v78);\n              sub_4221F0(v78);\n              if ( dword_88C268 )\n                sub_433F90(\"...expands moyo\\n\", v27, v78);\n              v67 = (double)dword_565C68 / 19.0 * 24.0;\n              if ( v80 & 0x10000000 )\n              {\n                v67 = v67 * (*((float *)v82 + 35) * 0.01 + 1.0);\n                v65 = v80 & 0xEFFFFFFF;\n              }\n              if ( dword_565C68 >= 17 && v65 & 0x800000 )\n              {\n                v68 = v67 * 1.005;\n                *((float *)&v78 + 1) = v68;\n                sub_4229D0(v78, v68);\n                sub_423FA0(v78, 5.0);\n                if ( dword_88C268 )\n                  sub_433F90(\"...move value %f (shape %f)\\n\", v27, v68, *((float *)v82 + 35), v78);\n              }\n              else\n              {\n                if ( !dword_88C268 )\n                  goto LABEL_194;\n                *((float *)&v78 + 1) = v67;\n                sub_433F90(\"...minimum move value %f (shape %f)\\n\", v27, v67, *((float *)v82 + 35), v78);\n              }\n              v67 = *((float *)&v78 + 1);\nLABEL_194:\n              result = sub_422940(v78, v67);\n              if ( !(v65 & 0x80000) )\n              {\nLABEL_208:\n                if ( v65 & 0x100000 )\n                {\n                  v71 = v65;\n                  if ( dword_88C268 )\n                    sub_433F90(\"...joseki urgent move\\n\", v27, v29, v48, v78);\n                  if ( (signed int)v66 > 0 )\n                  {\n                    v72 = v66;\n                    v73 = &v93;\n                    do\n                    {\n                      v74 = *v73;\n                      v27 = (unsigned int)*v73;\n                      sub_422380(v78, v27);\n                      if ( dword_88C268 )\n                      {\n                        v27 = v74;\n                        sub_433F90(\"...strategical defense of %1m\\n\", v74, v78);\n                      }\n                      ++v73;\n                      --v72;\n                    }\n                    while ( v72 );\n                  }\n                  dword_88C260 = 1;\n                  if ( v83 > 0 )\n                  {\n                    v75 = (unsigned int)v83;\n                    v76 = v99;\n                    do\n                    {\n                      v77 = *v76;\n                      v27 = (unsigned int)*v76;\n                      sub_422300(v78, v27);\n                      if ( dword_88C268 )\n                      {\n                        v27 = v77;\n                        sub_433F90(\"...strategical attack on %1m\\n\", v77, v78);\n                      }\n                      ++v76;\n                      --v75;\n                    }\n                    while ( v75 );\n                  }\n                  sub_422210(v78, 15.0);\n                  if ( dword_88C268 )\n                    sub_433F90(\"...shape value 15\\n\", v27, COERCE_DOUBLE(1097859072LL), v78);\n                  result = sub_422940(v78, 40.0);\n                  v65 = v71;\n                  if ( dword_88C268 )\n                    result = sub_433F90(\"...(min) move value %f\\n\", v27, 40.0, v78);\n                }\n                if ( v65 & 0x200000 )\n                {\n                  if ( dword_88C268 )\n                    sub_433F90(\"...joseki trick move\\n\", v27, v29, v48, v78);\n                  result = sub_4217E0(v78);\n                  if ( dword_88C268 )\n                    result = sub_433F90(\"...antisuji\\n\", v27, v78);\n                }\n                if ( v65 & 0x400000 )\n                {\n                  if ( dword_88C268 )\n                    sub_433F90(\"...worthwhile threat move\\n\", v27, v29, v48, v78);\n                  result = sub_4222E0(v78);\n                }\n                if ( v65 & 0x1000000 )\n                {\n                  result = sub_422940(v78, *((float *)v82 + 31));\n                  if ( dword_88C268 )\n                    result = sub_433F90(\"...(min) move value %f\\n\", v27, *((float *)v82 + 31), v78);\n                }\n                if ( v65 & 0x2000000 )\n                {\n                  result = sub_4229D0(v78, *((float *)v82 + 32));\n                  if ( dword_88C268 )\n                    result = sub_433F90(\"...max move value %f\\n\", v27, *((float *)v82 + 32), v78);\n                }\n                if ( v65 & 0x4000000 )\n                {\n                  result = sub_422A60(v78, *((float *)v82 + 33));\n                  if ( dword_88C268 )\n                    result = sub_433F90(\"...(min) territorial value %f\\n\", v27, *((float *)v82 + 33), v78);\n                }\n                if ( v65 & 0x8000000 )\n                {\n                  result = sub_422AF0(v78, *((float *)v82 + 34));\n                  if ( dword_88C268 )\n                    result = sub_433F90(\"...max territorial value %f\\n\", v27, *((float *)v82 + 34), v78);\n                }\n                if ( v65 & 0x10000000 )\n                {\n                  result = (__int64)sub_422210(v78, *((float *)v82 + 35));\n                  if ( dword_88C268 )\n                    result = sub_433F90(\"...shape value %f\\n\", v27, *((float *)v82 + 35), v78);\n                }\n                if ( v65 & 0x20000000 )\n                {\n                  result = sub_422820(v78, *((float *)v82 + 36));\n                  if ( dword_88C268 )\n                    result = sub_433F90(\"...followup value %f\\n\", v27, *((float *)v82 + 36), v78);\n                }\n                if ( v65 & 0x40000000 )\n                {\n                  result = sub_4228B0(v78, *((float *)v82 + 37));\n                  if ( dword_88C268 )\n                    result = sub_433F90(\"...reverse followup value %f\\n\", v27, *((float *)v82 + 37), v78);\n                }\n                return result;\n              }\nLABEL_195:\n              if ( dword_88C268 )\n                sub_433F90(\"...minor joseki move\\n\", v27, v29, v48, v78);\n              v69 = (double)dword_565C68 / 19.0 * 17.0;\n              if ( v65 & 0x10000000 )\n              {\n                v69 = v69 * (*((float *)v82 + 35) * 0.01 + 1.0);\n                v65 &= 0xEFFFFFFF;\n              }\n              if ( dword_565C68 >= 17 && v65 & 0x800000 )\n              {\n                v70 = v69 * 1.005;\n                *((float *)&v78 + 1) = v70;\n                sub_4229D0(v78, v70);\n                sub_423FA0(v78, 5.0);\n                if ( dword_88C268 )\n                  sub_433F90(\"...move value %f (shape %f)\\n\", v27, v70, *((float *)v82 + 35), v78);\n              }\n              else\n              {\n                if ( !dword_88C268 )\n                {\nLABEL_207:\n                  result = sub_422940(v78, v69);\n                  goto LABEL_208;\n                }\n                *((float *)&v78 + 1) = v69;\n                sub_433F90(\"...minimum move value %f (shape %f)\\n\", v27, v29, v48, v69, *((float *)v82 + 35), v78);\n              }\n              v69 = *((float *)&v78 + 1);\n              goto LABEL_207;\n            }\n            v40 = &v94;\n            v41 = (unsigned int)v81 - 1LL;\n            v42 = 0LL;\n            do\n            {\n              v90 = v42 + 1;\n              if ( v42 + 1 < v81 )\n              {\n                v43 = *(&v93 + v42);\n                v44 = v41;\n                v45 = (signed int *)v40;\n                do\n                {\n                  v46 = *v45;\n                  v27 = v43;\n                  sub_421440(v78, v43, *v45);\n                  if ( dword_88C268 )\n                  {\n                    v27 = v43;\n                    sub_433F90(\"...connects dragons %1m, %1m\\n\", v43, v46, v78);\n                  }\n                  ++v45;\n                  --v44;\n                }\n                while ( v44 );\n              }\n              v40 += 4;\n              --v41;\n              v42 = v90;\n            }\n            while ( v90 != v81 );\n            result = (unsigned int)dword_565C84;\n          }\n          v39 = v80;\n          goto LABEL_121;\n        }\n        if ( dword_88C264 & 0x100 )\n          result = sub_433F90(\n                     \"  helper does not like pattern '%s' at %1m\\n\",\n                     *((_QWORD *)v82 + 2),\n                     (unsigned int)v78,\n                     (unsigned int)dword_88C264,\n                     v78);\n      }\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x449240L", 
            "funcEndAddr": "0x44a278L", 
            "funcName": "sub_449240"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_44A280(unsigned int a1)\n{\n  const char *v1; // rax\n\n  if ( dword_88C268 )\n  {\n    v1 = sub_4341A0(a1);\n    sub_433F90(\"\\nEndgame pattern matcher is looking for move reasons for %s!\\n\", v1);\n  }\n  return sub_41EFF0((__int64)sub_449240, a1, (__int64)&unk_60A430, 0LL, 0LL);\n}\n", 
            "funcStartAddr": "0x44a280L", 
            "funcEndAddr": "0x44a2bcL", 
            "funcName": "sub_44A280"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_44A2C0(__int64 a1)\n{\n  FILE *v1; // rbx\n  int result; // eax\n  signed int v3; // er14\n  int v4; // ebp\n  _BOOL4 v5; // er15\n\n  nullsub_1(a1);\n  v1 = stderr;\n  result = fwrite(\"  \", 2uLL, 1uLL, stderr);\n  if ( dword_565C68 > 0 )\n  {\n    v3 = 65;\n    v4 = 0;\n    do\n    {\n      v5 = v3 == 73;\n      result = fprintf(v1, off_499B43, (unsigned int)(v3 + v5));\n      ++v4;\n      v3 += v5 + 1;\n    }\n    while ( v4 < dword_565C68 );\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x44a2c0L", 
            "funcEndAddr": "0x44a339L", 
            "funcName": "sub_44A2C0"
        }, 
        {
            "decompiledFuncCode": "int __usercall sub_44A340@<eax>(__int64 a1@<rax>, unsigned int a2@<edx>, unsigned int a3@<ecx>, unsigned int a4@<edi>, unsigned int a5@<esi>)\n{\n  unsigned int v5; // ebx\n  unsigned int v6; // ebp\n  int result; // eax\n  __int64 v8; // [rsp-8h] [rbp-28h]\n\n  v8 = a1;\n  v5 = a3;\n  v6 = a2;\n  if ( a5 )\n  {\n    if ( a2 )\n      goto LABEL_3;\nLABEL_9:\n    v6 = 3 * ((unsigned int)sub_44A400(a4, a5) == 0) + 43;\n    if ( v5 )\n      goto LABEL_4;\n    goto LABEL_10;\n  }\n  fprintf(stderr, \"\\n%2d\", dword_565C68 - a4, a1);\n  if ( !v6 )\n    goto LABEL_9;\nLABEL_3:\n  if ( v5 )\n  {\nLABEL_4:\n    sub_493780(v5, v6);\n    goto LABEL_5;\n  }\nLABEL_10:\n  fprintf(stderr, off_499B43, v6, v8);\nLABEL_5:\n  result = dword_565C68 - 1;\n  if ( dword_565C68 - 1 == a5 )\n    result = fprintf(stderr, \" %-2d\", dword_565C68 - a4);\n  return result;\n}\n", 
            "funcStartAddr": "0x44a340L", 
            "funcEndAddr": "0x44a3f6L", 
            "funcName": "sub_44A340"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_44A400(int a1, int a2)\n{\n  unsigned __int8 v2; // dl\n  bool v3; // zf\n  __int64 result; // rax\n  int v5; // ecx\n  int v6; // er8\n  int v7; // eax\n  int v8; // er10\n  int v9; // er9\n\n  v2 = 0;\n  switch ( dword_565C68 )\n  {\n    case 2:\n    case 4:\n      goto LABEL_15;\n    case 3:\n      v3 = (a1 ^ 1 | a2 ^ 1) == 0;\n      goto LABEL_3;\n    case 5:\n      v5 = a2 | 2;\n      v2 = 1;\n      if ( a1 == 1 && v5 == 3 || a1 == 2 && a2 == 2 )\n        goto LABEL_15;\n      result = (v5 ^ 3 | a1 ^ 3) == 0;\n      break;\n    default:\n      v6 = 3 - (dword_565C68 < 12);\n      v7 = dword_565C68 / 2;\n      v8 = dword_565C68 - 1 - a1;\n      if ( dword_565C68 / 2 > a1 )\n        v8 = a1;\n      v9 = dword_565C68 - 1 - a2;\n      if ( v7 > a2 )\n        v9 = a2;\n      if ( v8 != v6 || (v2 = 1, v9 != v6) )\n      {\n        if ( dword_565C68 & 1 )\n        {\n          if ( dword_565C68 > 11 )\n          {\n            result = (v8 == v7 || v8 == v6) & (unsigned __int8)(v9 == v6 || v9 == v7);\n          }\n          else\n          {\n            v3 = (v7 ^ v8 | v7 ^ v9) == 0;\nLABEL_3:\n            result = v3;\n          }\n        }\n        else\n        {\n          result = 0LL;\n        }\n      }\n      else\n      {\nLABEL_15:\n        result = v2;\n      }\n      break;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x44a400L", 
            "funcEndAddr": "0x44a4d4L", 
            "funcName": "sub_44A400"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_44A4E0(int a1, int a2, unsigned int a3)\n{\n  unsigned int v3; // ebx\n  int result; // eax\n\n  v3 = a3;\n  if ( !a2 )\n    fprintf(stderr, \"\\n%2d\", (unsigned int)(dword_565C68 - a1));\n  if ( !v3 )\n    v3 = 3 * ((unsigned int)sub_44A400(a1, a2) == 0) + 43;\n  fprintf(stderr, off_499B43, v3);\n  result = dword_565C68 - 1;\n  if ( dword_565C68 - 1 == a2 )\n    result = fprintf(stderr, \" %-2d\", (unsigned int)(dword_565C68 - a1));\n  return result;\n}\n", 
            "funcStartAddr": "0x44a4e0L", 
            "funcEndAddr": "0x44a567L", 
            "funcName": "sub_44A4E0"
        }, 
        {
            "decompiledFuncCode": "int __usercall sub_44A570@<eax>(__int64 a1@<rax>)\n{\n  FILE *v1; // rbx\n  signed int v3; // er14\n  int v4; // ebp\n  _BOOL4 v5; // er15\n  __int64 v6; // [rsp-8h] [rbp-28h]\n\n  v6 = a1;\n  fputc(10, stderr);\n  v1 = stderr;\n  fwrite(\"  \", 2uLL, 1uLL, stderr);\n  if ( dword_565C68 > 0 )\n  {\n    v3 = 65;\n    v4 = 0;\n    do\n    {\n      v5 = v3 == 73;\n      fprintf(v1, off_499B43, (unsigned int)(v3 + v5), v6);\n      ++v4;\n      v3 += v5 + 1;\n    }\n    while ( v4 < dword_565C68 );\n  }\n  return fputc(10, stderr);\n}\n", 
            "funcStartAddr": "0x44a570L", 
            "funcEndAddr": "0x44a605L", 
            "funcName": "sub_44A570"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_44A610(__int64 a1)\n{\n  FILE *v1; // r14\n  signed int v2; // ebp\n  int v3; // ebx\n  _BOOL4 v4; // er15\n  int v5; // ecx\n  unsigned int v6; // eax\n  signed __int64 v7; // rbx\n  signed int v8; // eax\n  unsigned int v9; // er14\n  signed __int64 v10; // r13\n  signed int *v11; // r15\n  signed __int64 v12; // rbp\n  __int64 v13; // rdx\n  FILE *v14; // rdi\n  int v15; // eax\n  int v16; // ecx\n  bool v17; // bl\n  __int64 v18; // rax\n  unsigned __int64 v19; // rdx\n  unsigned int v20; // ecx\n  unsigned __int8 v21; // di\n  int v22; // er10\n  int *v23; // rsi\n  signed __int64 v24; // rsi\n  __int64 v25; // rcx\n  int v26; // eax\n  signed __int64 v27; // rdi\n  int *v28; // rax\n  unsigned __int64 v29; // rbx\n  int v30; // eax\n  FILE *v31; // rbx\n  signed int v33; // ebp\n  int v34; // er14\n  _BOOL4 v35; // er15\n  unsigned __int64 v36; // [rsp+8h] [rbp-50h]\n  int v37; // [rsp+10h] [rbp-48h]\n  __int64 v38; // [rsp+18h] [rbp-40h]\n  unsigned int v39; // [rsp+24h] [rbp-34h]\n\n  v37 = a1;\n  nullsub_1(a1);\n  memset(byte_87D7B0, 0, 0x190uLL);\n  dword_87D940 = 233;\n  dword_87D944 = 26;\n  nullsub_1(byte_87D7B0);\n  v1 = stderr;\n  fwrite(\"  \", 2uLL, 1uLL, stderr);\n  if ( dword_565C68 > 0 )\n  {\n    v2 = 65;\n    v3 = 0;\n    do\n    {\n      v4 = v2 == 73;\n      fprintf(v1, off_499B43, (unsigned int)(v4 + v2));\n      ++v3;\n      v2 += v4 + 1;\n      v5 = dword_565C68;\n    }\n    while ( v3 < dword_565C68 );\n    if ( dword_565C68 > 0 )\n    {\n      v6 = 21;\n      v7 = 0LL;\n      while ( 1 )\n      {\n        v38 = v6;\n        v36 = v7;\n        v39 = v5 - v7;\n        fprintf(stderr, \"\\n%2d\", (unsigned int)(v5 - v7));\n        v9 = dword_565C68;\n        if ( dword_565C68 > 0 )\n        {\n          v10 = 36 * v38 + 28;\n          v11 = (signed int *)(76 * v38 + 9785272);\n          v12 = 0LL;\n          do\n          {\n            v15 = sub_44A400(v36, v12);\n            v16 = 0;\n            v17 = v15 == 0;\n            if ( v36 >= v9 || v12 >= (unsigned __int64)v9 )\n              sub_4340E0((__int64)\"engine/showbord.c\", 0x103u, (__int64)\"ON_BOARD2((i), (j))\", v36, v12);\n            v18 = (unsigned __int8)byte_98A1B0[v38 + v12];\n            if ( byte_98A1B0[v38 + v12] )\n            {\n              if ( v37 )\n              {\n                v19 = *v11;\n                if ( v19 <= 0x1A4 && byte_98A1B0[v19] != 3 )\n                {\n                  v20 = (unsigned __int8)byte_87D7B0[v19];\n                  if ( !byte_87D7B0[v19] )\n                  {\n                    v21 = dword_87D944;\n                    v22 = dword_87D944 + 1;\n                    v23 = &dword_87D940;\n                    if ( (_BYTE)v18 == 2 )\n                      v23 = &dword_87D944;\n                    if ( (_BYTE)v18 != 2 )\n                    {\n                      v22 = dword_87D940 - 1;\n                      if ( (_BYTE)v18 != 2 )\n                        v21 = dword_87D940;\n                    }\n                    *v23 = v22;\n                    byte_87D7B0[v19] = v21;\n                    v20 = v21;\n                  }\n                  v24 = (v20 % 0x1A | 32 * ((_BYTE)v18 != 2)) + 65;\n                  switch ( v37 )\n                  {\n                    case 1:\n                      v25 = v11[3];\n                      goto LABEL_39;\n                    case 2:\n                      if ( (_BYTE)v18 == 2 )\n                      {\n                        v27 = 1LL;\n                        v24 = 88LL;\n                      }\n                      else\n                      {\n                        v27 = 2LL;\n                        v24 = 79LL;\n                      }\n                      goto LABEL_44;\n                    case 3:\n                      v25 = v11[5];\n                      goto LABEL_39;\n                    case 4:\n                      v25 = v11[14];\nLABEL_39:\n                      v27 = (unsigned int)dword_4AF3E0[5 * v18 + v25];\n                      goto LABEL_44;\n                    default:\n                      goto LABEL_45;\n                  }\n                  goto LABEL_45;\n                }\n              }\n              v14 = stderr;\n              v13 = 9 * (unsigned int)((_BYTE)v18 == 2) + 79;\n            }\n            else\n            {\n              if ( v37 == 2 )\n              {\n                v26 = *(int *)((char *)&dword_977354 + v10);\n                if ( *(int *)((char *)&dword_96CA94 + v10) == 5 )\n                {\n                  v27 = 2 * (unsigned int)(v26 == 4) + 1;\n                  v24 = 120LL;\n                  v28 = dword_96CAB0;\nLABEL_32:\n                  if ( *((_BYTE *)v28 + v10) )\n                    v24 = 33LL;\n                }\n                else\n                {\n                  if ( v26 == 4 )\n                  {\n                    v27 = 2LL;\n                    v24 = 111LL;\n                    v28 = dword_977370;\n                    goto LABEL_32;\n                  }\n                  v24 = 46LL;\n                  v27 = 5LL;\n                }\nLABEL_44:\n                sub_493780(v27, v24);\n                goto LABEL_45;\n              }\n              LOBYTE(v16) = v17;\n              v13 = (unsigned int)(3 * v16 + 43);\n              v14 = stderr;\n            }\n            fprintf(v14, off_499B43, v13);\nLABEL_45:\n            ++v12;\n            v9 = dword_565C68;\n            v10 += 36LL;\n            v11 += 19;\n          }\n          while ( v12 < dword_565C68 );\n        }\n        fprintf(stderr, off_499B47, v39);\n        if ( v37 == 3 )\n        {\n          v30 = dword_565C68;\n          v29 = v36;\n          if ( v36 == dword_565C68 - 5 )\n          {\n            sub_493750(2LL, \"    green=alive\");\n            v30 = dword_565C68;\n          }\n          if ( v36 == v30 - 4 )\n          {\n            sub_493750(6LL, \"    cyan=dead\");\n            v30 = dword_565C68;\n          }\n          if ( v36 == v30 - 3 )\n          {\n            sub_493750(1LL, \"    red=critical\");\n            v30 = dword_565C68;\n          }\n          if ( v36 == v30 - 2 )\n          {\n            sub_493750(3LL, \"    yellow=unknown\");\n            v30 = dword_565C68;\n          }\n          if ( v36 == v30 - 1 )\n            sub_493750(5LL, \"    magenta=unchecked\");\n          goto LABEL_67;\n        }\n        v29 = v36;\n        if ( !v37 )\n          break;\nLABEL_67:\n        v7 = v29 + 1;\n        v5 = dword_565C68;\n        v6 = v38 + 20;\n        if ( dword_565C68 <= (signed int)v7 )\n          goto LABEL_68;\n      }\n      v8 = dword_565C68;\n      if ( dword_565C68 <= 9 && v36 == dword_565C68 - 2 || v36 == 8 && dword_565C68 >= 10 )\n      {\n        fprintf(stderr, \"     WHITE has captured %d stones\", (unsigned int)qword_98A760);\n        v8 = dword_565C68;\n        if ( dword_565C68 > 9 )\n          goto LABEL_54;\n      }\n      else if ( dword_565C68 > 9 )\n      {\n        goto LABEL_54;\n      }\n      if ( v36 == v8 - 1 )\n      {\nLABEL_56:\n        fprintf(stderr, \"     BLACK has captured %d stones\", (unsigned int)dword_98A800);\n        goto LABEL_67;\n      }\nLABEL_54:\n      if ( v36 != 9 || v8 < 10 )\n        goto LABEL_67;\n      goto LABEL_56;\n    }\n  }\nLABEL_68:\n  fputc(10, stderr);\n  v31 = stderr;\n  fwrite(\"  \", 2uLL, 1uLL, stderr);\n  if ( dword_565C68 > 0 )\n  {\n    v33 = 65;\n    v34 = 0;\n    do\n    {\n      v35 = v33 == 73;\n      fprintf(v31, off_499B43, (unsigned int)(v35 + v33));\n      ++v34;\n      v33 += v35 + 1;\n    }\n    while ( v34 < dword_565C68 );\n  }\n  return fputc(10, stderr);\n}\n", 
            "funcStartAddr": "0x44a610L", 
            "funcEndAddr": "0x44ab4cL", 
            "funcName": "sub_44A610"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_44AB50(FILE *stream)\n{\n  signed int v1; // ebx\n  int v2; // ebp\n  _BOOL4 v3; // er15\n  signed int v4; // edx\n  __int64 v5; // r12\n  __int64 v6; // r15\n  int v7; // edx\n  signed __int64 v8; // rbx\n  char v9; // al\n  __int64 v10; // rdx\n  int result; // eax\n  signed int v12; // ebx\n  int v13; // ebp\n  _BOOL4 v14; // er15\n\n  fwrite(\"  \", 2uLL, 1uLL, stream);\n  if ( dword_565C68 > 0 )\n  {\n    v1 = 65;\n    v2 = 0;\n    do\n    {\n      v3 = v1 == 73;\n      fprintf(stream, off_499B43, (unsigned int)(v1 + v3));\n      ++v2;\n      v1 += v3 + 1;\n      v4 = dword_565C68;\n    }\n    while ( v2 < dword_565C68 );\n    if ( dword_565C68 > 0 )\n    {\n      LODWORD(v5) = 21;\n      v6 = 0LL;\n      do\n      {\n        v5 = (unsigned int)v5;\n        fprintf(stream, \"\\n%2d\", (unsigned int)(v4 - v6));\n        v7 = dword_565C68;\n        if ( dword_565C68 > 0 )\n        {\n          v8 = 0LL;\n          do\n          {\n            v9 = byte_98A1B0[v5 + v8];\n            if ( v9 )\n              v10 = 9 * (unsigned int)(v9 == 2) + 79;\n            else\n              v10 = 3 * (unsigned int)((unsigned int)sub_44A400(v6, v8) == 0) + 43;\n            fprintf(stream, off_499B43, v10);\n            ++v8;\n            v7 = dword_565C68;\n          }\n          while ( v8 < dword_565C68 );\n        }\n        fprintf(stream, off_499B47, (unsigned int)(v7 - v6));\n        v4 = dword_565C68;\n        if ( dword_565C68 <= 9 && v6 == dword_565C68 - 2 || v6 == 8 && dword_565C68 >= 10 )\n        {\n          fprintf(stream, \"     WHITE has captured %d stones\", (unsigned int)qword_98A760);\n          v4 = dword_565C68;\n        }\n        if ( v4 <= 9 && v6 == v4 - 1 || v6 == 9 && v4 >= 10 )\n        {\n          fprintf(stream, \"     BLACK has captured %d stones\", (unsigned int)dword_98A800);\n          v4 = dword_565C68;\n        }\n        ++v6;\n        LODWORD(v5) = v5 + 20;\n      }\n      while ( v4 > (signed int)v6 );\n    }\n  }\n  fputc(10, stream);\n  result = fwrite(\"  \", 2uLL, 1uLL, stream);\n  if ( dword_565C68 > 0 )\n  {\n    v12 = 65;\n    v13 = 0;\n    do\n    {\n      v14 = v12 == 73;\n      result = fprintf(stream, off_499B43, (unsigned int)(v12 + v14));\n      ++v13;\n      v12 += v14 + 1;\n    }\n    while ( v13 < dword_565C68 );\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x44ab50L", 
            "funcEndAddr": "0x44ad68L", 
            "funcName": "sub_44AB50"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_44AD70(int a1, int a2)\n{\n  __int64 result; // rax\n  signed __int64 v3; // rcx\n  _DWORD *v4; // rdx\n\n  result = *((unsigned int *)&xmmword_954FB0 + 19 * a1 + 2);\n  v3 = -378LL;\n  v4 = &unk_955678;\n  if ( byte_98A33F[-378] == 3 )\n    goto LABEL_6;\nLABEL_4:\n  if ( *(v4 - 33) == (_DWORD)result )\n    *(v4 - 19) = a2;\nLABEL_6:\n  while ( v3 )\n  {\n    if ( byte_98A340[v3] != 3 && *(v4 - 14) == (_DWORD)result )\n      *v4 = a2;\n    v3 += 2LL;\n    v4 += 38;\n    if ( byte_98A33F[v3] != 3 )\n      goto LABEL_4;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x44ad70L", 
            "funcEndAddr": "0x44add7L", 
            "funcName": "sub_44AD70"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_44ADE0(__int64 a1, __int64 a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  int v5; // ebp\n\n  v3 = a3;\n  v4 = 0;\n  if ( (unsigned int)sub_406880(a1, a2, \"defend_against\", 0, 0, 0) )\n  {\n    v5 = sub_43F100(v3, 3 - (signed int)a2);\n    sub_407030();\n    if ( !v5 )\n      v4 = 1;\n  }\n  return v4;\n}\n", 
            "funcStartAddr": "0x44ade0L", 
            "funcEndAddr": "0x44ae27L", 
            "funcName": "sub_44ADE0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_44AE30(int a1, int a2)\n{\n  unsigned __int8 v2; // al\n\n  if ( a2 != 1 )\n  {\n    if ( !byte_977390[36 * a1] )\n    {\n      v2 = byte_97738D[36 * a1];\n      return (v2 >> 2) & 1;\n    }\n    return 1LL;\n  }\n  if ( byte_96CAD0[36 * a1] )\n    return 1LL;\n  v2 = byte_96CACD[36 * a1];\n  return (v2 >> 2) & 1;\n}\n", 
            "funcStartAddr": "0x44ae30L", 
            "funcEndAddr": "0x44ae6fL", 
            "funcName": "sub_44AE30"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_44AE70(unsigned int a1, signed int a2)\n{\n  unsigned int v2; // er14\n  unsigned int v3; // ebp\n  signed __int64 v4; // rax\n  __int64 v5; // rax\n  unsigned int v7; // [rsp+4h] [rbp-34h]\n  int v8; // [rsp+8h] [rbp-30h]\n  int v9; // [rsp+Ch] [rbp-2Ch]\n\n  v2 = (unsigned __int8)byte_98A1B0[a2];\n  v9 = 0;\n  v8 = 0;\n  v7 = 0;\n  if ( dword_98A7F4 )\n  {\n    v3 = 0;\n    sub_43E350(a2, &v9, 0LL, &v8, &v7);\n    if ( v9 && !v8 )\n      return v3;\n  }\n  else\n  {\n    v4 = 95LL * a2;\n    if ( dword_8E94D4[95 * a2] && !dword_8E9524[v4] )\n      return 0;\n    v7 = dword_8E94FC[v4];\n  }\n  v3 = 0;\n  v5 = sub_406880(a1, 3 - v2, \"does_attack-A\", a2, 0, 0);\n  if ( (_DWORD)v5 )\n  {\n    if ( !byte_98A1B0[a2] || (v3 = 0, !(unsigned int)sub_43B6F0(v5, a2, 0LL)) )\n    {\n      ++dword_98A76C;\n      ++dword_98A75C;\n      ++dword_98A758;\n      ++dword_98A7F8;\n      ++dword_98A768;\n      ++dword_98A770;\n      ++dword_98A784;\n      v3 = 5;\n      if ( v7 && (unsigned int)sub_406880(v7, v2, \"does_attack-B\", a2, 0, 0) )\n      {\n        if ( byte_98A1B0[a2] )\n          v3 = 5 * ((unsigned int)sub_43B050(a2, 0LL) != 0);\n        else\n          v3 = 5;\n        sub_407030();\n      }\n      --dword_98A76C;\n      --dword_98A75C;\n      --dword_98A758;\n      --dword_98A7F8;\n      --dword_98A768;\n      --dword_98A770;\n      --dword_98A784;\n    }\n    sub_407030();\n  }\n  return v3;\n}\n", 
            "funcStartAddr": "0x44ae70L", 
            "funcEndAddr": "0x44b013L", 
            "funcName": "sub_44AE70"
        }, 
        {
            "decompiledFuncCode": "void sub_44B020()\n{\n  ++dword_98A76C;\n  ++dword_98A75C;\n  ++dword_98A758;\n  ++dword_98A7F8;\n  ++dword_98A768;\n  ++dword_98A770;\n  ++dword_98A784;\n}\n", 
            "funcStartAddr": "0x44b020L", 
            "funcEndAddr": "0x44b052L", 
            "funcName": "sub_44B020"
        }, 
        {
            "decompiledFuncCode": "void sub_44B060()\n{\n  --dword_98A76C;\n  --dword_98A75C;\n  --dword_98A758;\n  --dword_98A7F8;\n  --dword_98A768;\n  --dword_98A770;\n  --dword_98A784;\n}\n", 
            "funcStartAddr": "0x44b060L", 
            "funcEndAddr": "0x44b092L", 
            "funcName": "sub_44B060"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_44B0A0(unsigned int a1, unsigned int a2)\n{\n  unsigned int v2; // er14\n  unsigned int v3; // ebp\n  __int64 v4; // rax\n  unsigned int v6; // [rsp+Ch] [rbp-2Ch]\n\n  v2 = (unsigned __int8)byte_98A1B0[a2];\n  v6 = 0;\n  if ( !dword_98A7F4 )\n  {\n    if ( dword_8E94D4[95 * a2] )\n    {\n      v6 = dword_8E94AC[95 * a2];\n      if ( !v6 )\nLABEL_4:\n        sub_4340E0((__int64)\"engine/utils.c\", 0xA1u, (__int64)\"spos != 0\", 0xFFFFFFFF, 0xFFFFFFFF);\n      goto LABEL_5;\n    }\n    return 0;\n  }\n  if ( !(unsigned int)sub_43B050(a2, &v6) )\n    return 0;\n  if ( !v6 )\n    goto LABEL_4;\nLABEL_5:\n  v3 = 0;\n  if ( (unsigned int)sub_406880(a1, v2, \"does_defend-A\", a2, 0, 0) )\n  {\n    v3 = 0;\n    if ( !(unsigned int)sub_43B050(a2, 0LL) )\n    {\n      ++dword_98A76C;\n      ++dword_98A75C;\n      ++dword_98A758;\n      ++dword_98A7F8;\n      ++dword_98A768;\n      ++dword_98A770;\n      ++dword_98A784;\n      v4 = sub_406880(v6, 3 - v2, \"does_defend-B\", a2, 0, 0);\n      if ( (_DWORD)v4 )\n      {\n        if ( !byte_98A1B0[a2] || (v3 = 1, !(unsigned int)sub_43B6F0(v4, a2, 0LL)) )\n          v3 = 0;\n        sub_407030();\n      }\n      else\n      {\n        v3 = 1;\n      }\n      --dword_98A76C;\n      --dword_98A75C;\n      --dword_98A758;\n      --dword_98A7F8;\n      --dword_98A768;\n      --dword_98A770;\n      --dword_98A784;\n    }\n    sub_407030();\n  }\n  return v3;\n}\n", 
            "funcStartAddr": "0x44b0a0L", 
            "funcEndAddr": "0x44b230L", 
            "funcName": "sub_44B0A0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_44B230(int a1, int a2, int a3, __int64 a4, __int64 a5, __int64 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __m128 a12, __m128 a13, __m128 a14, char a15)\n{\n  int v15; // ebx\n  int v16; // er14\n  int v17; // ecx\n  unsigned int v18; // edx\n  char *v19; // rax\n  __int64 v20; // rsi\n  signed __int64 result; // rax\n  char *v22; // [rsp+8h] [rbp-E0h]\n  char v23[24]; // [rsp+20h] [rbp-C8h]\n  __int64 v24; // [rsp+38h] [rbp-B0h]\n  __int64 v25; // [rsp+40h] [rbp-A8h]\n  __int64 v26; // [rsp+48h] [rbp-A0h]\n  __m128 v27; // [rsp+50h] [rbp-98h]\n  __m128 v28; // [rsp+60h] [rbp-88h]\n  __m128 v29; // [rsp+70h] [rbp-78h]\n  __m128 v30; // [rsp+80h] [rbp-68h]\n  __m128 v31; // [rsp+90h] [rbp-58h]\n  __m128 v32; // [rsp+A0h] [rbp-48h]\n  __m128 v33; // [rsp+B0h] [rbp-38h]\n  __m128 v34; // [rsp+C0h] [rbp-28h]\n\n  v24 = a4;\n  v25 = a5;\n  v26 = a6;\n  v27 = a7;\n  v28 = a8;\n  v29 = a9;\n  v30 = a10;\n  v31 = a11;\n  v32 = a12;\n  v33 = a13;\n  v34 = a14;\n  v15 = a3;\n  v16 = a2;\n  if ( a2 && dword_98A7F4 )\n    sub_4340E0((__int64)\"engine/utils.c\", 0xC5u, (__int64)\"stackp == 0 || !check_alive\", 0xFFFFFFFF, 0xFFFFFFFF);\n  v22 = &a15;\n  if ( a3 <= 0 )\n    return 0LL;\n  v17 = 0;\n  v18 = 24;\n  while ( 1 )\n  {\n    if ( v18 > 0x28 )\n    {\n      v19 = v22;\n      v22 += 8;\n    }\n    else\n    {\n      v19 = &v23[v18];\n      v18 += 8;\n    }\n    v20 = *(signed int *)v19;\n    if ( (unsigned __int8)byte_98A1B0[v20] == a1 )\n    {\n      result = 1LL;\n      if ( !v16 || dword_954FF0[19 * v20] )\n        break;\n    }\n    if ( ++v17 >= v15 )\n      return 0LL;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x44b230L", 
            "funcEndAddr": "0x44b358L", 
            "funcName": "sub_44B230"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_44B360(int a1, int a2, int a3)\n{\n  int v3; // ebp\n  unsigned int v4; // ecx\n  int v5; // er14\n  int v6; // er12\n  int v7; // er13\n  int v8; // er15\n  int v9; // ecx\n  int v10; // er15\n  signed __int64 v11; // r13\n  int v12; // er13\n  __int64 v13; // rdx\n  signed __int64 result; // rax\n  signed __int64 v15; // rbp\n  signed __int64 v16; // r12\n  signed __int64 v17; // r15\n  __int64 v18; // r14\n  int v19; // eax\n  int v20; // ecx\n  int v21; // edx\n  __int64 v22; // [rsp+10h] [rbp-48h]\n  __int64 v23; // [rsp+18h] [rbp-40h]\n  int v24; // [rsp+20h] [rbp-38h]\n\n  v3 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n  v4 = v3 - 1;\n  v5 = a2 - 20 * v3;\n  v6 = (1717986919LL * a3 >> 35) + ((unsigned __int64)(1717986919LL * a3) >> 63);\n  v7 = v6 - 1;\n  v8 = a3 - 20 * v6;\n  if ( (v3 == v6) == (v5 == v8) )\n    sub_4340E0((__int64)\"engine/utils.c\", 0xE5u, (__int64)\"(ai == bi) ^ (aj == bj)\", v4, a2 - 20 * v3 - 1);\n  if ( v4 == v7 )\n  {\n    v9 = 2 * (v5 <= v8) - 1;\n    if ( v3 <= dword_565C68 / 2 )\n    {\n      v10 = v8 + 20;\n      v11 = 20LL;\n    }\n    else\n    {\n      v10 = a3 - 20 * v6 - 1 + (20 * dword_565C68 | 1);\n      v11 = -20LL;\n    }\n  }\n  else\n  {\n    v9 = 20;\n    if ( v3 > v6 )\n      v9 = -20;\n    v12 = 4 * v7;\n    if ( v5 <= dword_565C68 / 2 )\n    {\n      v10 = 5 * v12 + 21;\n      v11 = 1LL;\n    }\n    else\n    {\n      v10 = 5 * v12 + dword_565C68 + 20;\n      v11 = -1LL;\n    }\n  }\n  v13 = v10;\n  result = 0LL;\n  if ( byte_98A1B0[v10] != 3 )\n  {\n    v15 = v10 + 4 * v11;\n    v16 = v15 + 10002864;\n    v22 = v9;\n    v24 = v9;\n    while ( 2 )\n    {\n      v23 = v13;\n      v17 = -5LL;\n      v18 = 0LL;\n      do\n      {\n        v19 = v18 + v15;\n        if ( (unsigned int)(v18 + v15) > 0x1A4 || (LOBYTE(v20) = *(_BYTE *)(v16 + v18), (_BYTE)v20 == 3) )\n        {\n          v21 = (1717986919LL * v19 >> 35) + ((unsigned __int64)(1717986919LL * v19) >> 63);\n          sub_4340E0((__int64)\"engine/utils.c\", 0x109u, (__int64)\"ON_BOARD1(pos + k * up)\", v21 - 1, v19 - 20 * v21 - 1);\n        }\n        v20 = (unsigned __int8)v20;\n        if ( (unsigned __int8)v20 == a1 )\n          return 1LL;\n        result = 0LL;\n        if ( 3 - a1 == v20 )\n          return result;\n        v18 -= v11;\n        ++v17;\n      }\n      while ( v17 );\n      v16 += v22;\n      LODWORD(v15) = v24 + v15;\n      v13 += v22;\n      if ( byte_98A1B0[v23 + v22] != 3 )\n        continue;\n      break;\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x44b360L", 
            "funcEndAddr": "0x44b5bbL", 
            "funcName": "sub_44B360"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_44B5C0(unsigned int a1, int a2, ...)\n{\n  int v2; // ebx\n  unsigned int v3; // er14\n  signed int v4; // eax\n  bool v5; // cl\n  int v6; // er15\n  signed int v7; // ecx\n  unsigned int *v8; // rax\n  unsigned int v9; // ebp\n  signed int *v10; // rcx\n  __int64 v11; // rdi\n  unsigned int v12; // esi\n  signed int *v13; // rcx\n  unsigned int *v14; // rax\n  unsigned int v15; // ebx\n  __int64 v16; // rdx\n  gcc_va_list va; // [rsp+0h] [rbp-F8h]\n\n  va_start(va, a2);\n  v2 = a2;\n  v3 = a1;\n  v4 = 16;\n  v5 = 1;\n  v6 = 0;\n  if ( a2 > 0 )\n  {\n    do\n    {\n      if ( v5 )\n      {\n        v7 = v4;\n        v8 = (unsigned int *)((char *)va[0].reg_save_area + v4);\n        va[0].gp_offset = v7 + 8;\n      }\n      else\n      {\n        v8 = (unsigned int *)va[0].overflow_arg_area;\n        va[0].overflow_arg_area = (char *)va[0].overflow_arg_area + 8;\n      }\n      v9 = *v8;\n      if ( *v8\n        && ((unsigned int)sub_406880(v9, v3, \"play_break_through_n\", 0, 0, 0)\n         || (unsigned int)sub_406E60(v9, v3, \"play_break_through_n\", 0, 0)) )\n      {\n        ++v6;\n      }\n      v4 = va[0].gp_offset;\n      v5 = va[0].gp_offset < 0x29;\n      v3 = 3 - v3;\n      --v2;\n    }\n    while ( v2 );\n  }\n  if ( v5 )\n  {\n    v10 = (signed int *)((char *)va[0].reg_save_area + v4);\n    v4 += 8;\n  }\n  else\n  {\n    v10 = (signed int *)va[0].overflow_arg_area;\n    va[0].overflow_arg_area = (char *)va[0].overflow_arg_area + 8;\n  }\n  v11 = *v10;\n  if ( (unsigned int)v4 >= 0x29 )\n  {\n    v14 = (unsigned int *)va[0].overflow_arg_area;\n    va[0].overflow_arg_area = (char *)va[0].overflow_arg_area + 8;\n    v12 = *v14;\n    goto LABEL_17;\n  }\n  v12 = *(_DWORD *)((char *)va[0].reg_save_area + v4);\n  if ( (unsigned int)(v4 + 8) > 0x28 )\n  {\nLABEL_17:\n    v13 = (signed int *)va[0].overflow_arg_area;\n    goto LABEL_18;\n  }\n  v13 = (signed int *)((char *)va[0].reg_save_area + v4 + 8);\nLABEL_18:\n  v15 = 1;\n  if ( byte_98A1B0[v11] )\n  {\n    if ( byte_98A1B0[v12] )\n    {\n      v16 = *v13;\n      if ( byte_98A1B0[v16] )\n        v15 = sub_43E980(v11, v12, v16);\n    }\n  }\n  if ( v6 > 0 )\n  {\n    do\n    {\n      sub_407030();\n      --v6;\n    }\n    while ( v6 );\n  }\n  return v15;\n}\n", 
            "funcStartAddr": "0x44b5c0L", 
            "funcEndAddr": "0x44b7abL", 
            "funcName": "sub_44B5C0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_44B7B0(unsigned int a1, int a2, int a3, ...)\n{\n  int v3; // ebp\n  unsigned int v4; // er15\n  signed int v5; // eax\n  bool v6; // cl\n  int v7; // er12\n  signed int v8; // ecx\n  unsigned int *v9; // rax\n  unsigned int v10; // ebx\n  signed int *v11; // rax\n  __int64 v12; // rbp\n  unsigned int v13; // ebx\n  gcc_va_list va; // [rsp+0h] [rbp-F8h]\n\n  va_start(va, a3);\n  v3 = a3;\n  v4 = a1;\n  v5 = 24;\n  v6 = 1;\n  v7 = 0;\n  if ( a3 > 0 )\n  {\n    do\n    {\n      if ( v6 )\n      {\n        v8 = v5;\n        v9 = (unsigned int *)((char *)va[0].reg_save_area + v5);\n        va[0].gp_offset = v8 + 8;\n      }\n      else\n      {\n        v9 = (unsigned int *)va[0].overflow_arg_area;\n        va[0].overflow_arg_area = (char *)va[0].overflow_arg_area + 8;\n      }\n      v10 = *v9;\n      if ( *v9\n        && ((unsigned int)sub_406880(v10, v4, \"play_attack_defend_n\", 0, 0, 0)\n         || (unsigned int)sub_406E60(v10, v4, \"play_attack_defend_n\", 0, 0)) )\n      {\n        ++v7;\n      }\n      v5 = va[0].gp_offset;\n      v6 = va[0].gp_offset < 0x29;\n      v4 = 3 - v4;\n      --v3;\n    }\n    while ( v3 );\n  }\n  if ( v6 )\n    v11 = (signed int *)((char *)va[0].reg_save_area + v5);\n  else\n    v11 = (signed int *)va[0].overflow_arg_area;\n  v12 = *v11;\n  LOBYTE(v11) = byte_98A1B0[v12];\n  if ( a2 )\n  {\n    if ( (_BYTE)v11 )\n    {\n      v13 = sub_43B050(v12, 0LL);\n      if ( v7 <= 0 )\n        return v13;\n      goto LABEL_22;\n    }\n    goto LABEL_20;\n  }\n  if ( (_BYTE)v11 )\n  {\n    v13 = sub_43B6F0((__int64)v11, v12, 0LL);\n    if ( v13 || (unsigned int)sub_43B050(v12, 0LL) )\n    {\nLABEL_21:\n      if ( v7 <= 0 )\n        return v13;\n      goto LABEL_22;\n    }\nLABEL_20:\n    v13 = 5;\n    goto LABEL_21;\n  }\n  v13 = 0;\n  if ( v7 <= 0 )\n    return v13;\n  do\n  {\nLABEL_22:\n    sub_407030();\n    --v7;\n  }\n  while ( v7 );\n  return v13;\n}\n", 
            "funcStartAddr": "0x44b7b0L", 
            "funcEndAddr": "0x44b976L", 
            "funcName": "sub_44B7B0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_44B980(unsigned int a1, int a2, int a3, ...)\n{\n  int v3; // ebp\n  int v4; // er14\n  unsigned int v5; // er15\n  signed int v6; // eax\n  bool v7; // cl\n  int v8; // er12\n  signed int v9; // ecx\n  unsigned int *v10; // rax\n  unsigned int v11; // ebx\n  signed int *v12; // rcx\n  __int64 v13; // rdi\n  signed int *v14; // rcx\n  __int64 v15; // rsi\n  char v16; // al\n  unsigned int v17; // ebx\n  unsigned int v18; // eax\n  gcc_va_list va; // [rsp+0h] [rbp-F8h]\n\n  va_start(va, a3);\n  v3 = a3;\n  v4 = a2;\n  v5 = a1;\n  v6 = 24;\n  v7 = 1;\n  v8 = 0;\n  if ( a3 > 0 )\n  {\n    do\n    {\n      if ( v7 )\n      {\n        v9 = v6;\n        v10 = (unsigned int *)((char *)va[0].reg_save_area + v6);\n        va[0].gp_offset = v9 + 8;\n      }\n      else\n      {\n        v10 = (unsigned int *)va[0].overflow_arg_area;\n        va[0].overflow_arg_area = (char *)va[0].overflow_arg_area + 8;\n      }\n      v11 = *v10;\n      if ( *v10\n        && ((unsigned int)sub_406880(v11, v5, \"play_attack_defend_n\", 0, 0, 0)\n         || (unsigned int)sub_406E60(v11, v5, \"play_attack_defend_n\", 0, 0)) )\n      {\n        ++v8;\n      }\n      v6 = va[0].gp_offset;\n      v7 = va[0].gp_offset < 0x29;\n      v5 = 3 - v5;\n      --v3;\n    }\n    while ( v3 );\n  }\n  if ( v7 )\n  {\n    v12 = (signed int *)((char *)va[0].reg_save_area + v6);\n    v6 += 8;\n  }\n  else\n  {\n    v12 = (signed int *)va[0].overflow_arg_area;\n    va[0].overflow_arg_area = (char *)va[0].overflow_arg_area + 8;\n  }\n  v13 = *v12;\n  if ( (unsigned int)v6 > 0x28 )\n    v14 = (signed int *)va[0].overflow_arg_area;\n  else\n    v14 = (signed int *)((char *)va[0].reg_save_area + v6);\n  v15 = *v14;\n  v16 = byte_98A1B0[v13];\n  if ( v4 )\n  {\n    v17 = 5;\n    if ( v16 && byte_98A1B0[v15] )\n    {\n      v18 = sub_43E4A0(v13, v15);\nLABEL_23:\n      v17 = v18;\n      goto LABEL_24;\n    }\n  }\n  else\n  {\n    v17 = 0;\n    if ( v16 && byte_98A1B0[v15] )\n    {\n      v18 = sub_43E680(v13, v15);\n      goto LABEL_23;\n    }\n  }\nLABEL_24:\n  if ( v8 > 0 )\n  {\n    do\n    {\n      sub_407030();\n      --v8;\n    }\n    while ( v8 );\n  }\n  return v17;\n}\n", 
            "funcStartAddr": "0x44b980L", 
            "funcEndAddr": "0x44bb5dL", 
            "funcName": "sub_44B980"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_44BB60(unsigned int a1, int a2, int a3, ...)\n{\n  int v3; // ebp\n  int v4; // er14\n  unsigned int v5; // er15\n  signed int v6; // eax\n  bool v7; // cl\n  int v8; // er12\n  signed int v9; // ecx\n  unsigned int *v10; // rax\n  unsigned int v11; // ebx\n  signed int *v12; // rcx\n  __int64 v13; // rdi\n  signed int *v14; // rcx\n  __int64 v15; // rsi\n  char v16; // al\n  unsigned int v17; // ebx\n  unsigned int v18; // eax\n  gcc_va_list va; // [rsp+0h] [rbp-F8h]\n\n  va_start(va, a3);\n  v3 = a3;\n  v4 = a2;\n  v5 = a1;\n  v6 = 24;\n  v7 = 1;\n  v8 = 0;\n  if ( a3 > 0 )\n  {\n    do\n    {\n      if ( v7 )\n      {\n        v9 = v6;\n        v10 = (unsigned int *)((char *)va[0].reg_save_area + v6);\n        va[0].gp_offset = v9 + 8;\n      }\n      else\n      {\n        v10 = (unsigned int *)va[0].overflow_arg_area;\n        va[0].overflow_arg_area = (char *)va[0].overflow_arg_area + 8;\n      }\n      v11 = *v10;\n      if ( *v10\n        && ((unsigned int)sub_406880(v11, v5, \"play_connect_n\", 0, 0, 0)\n         || (unsigned int)sub_406E60(v11, v5, \"play_connect_n\", 0, 0)) )\n      {\n        ++v8;\n      }\n      v6 = va[0].gp_offset;\n      v7 = va[0].gp_offset < 0x29;\n      v5 = 3 - v5;\n      --v3;\n    }\n    while ( v3 );\n  }\n  if ( v7 )\n  {\n    v12 = (signed int *)((char *)va[0].reg_save_area + v6);\n    v6 += 8;\n  }\n  else\n  {\n    v12 = (signed int *)va[0].overflow_arg_area;\n    va[0].overflow_arg_area = (char *)va[0].overflow_arg_area + 8;\n  }\n  v13 = *v12;\n  if ( (unsigned int)v6 > 0x28 )\n    v14 = (signed int *)va[0].overflow_arg_area;\n  else\n    v14 = (signed int *)((char *)va[0].reg_save_area + v6);\n  v15 = *v14;\n  v16 = byte_98A1B0[v13];\n  if ( v4 )\n  {\n    v17 = 0;\n    if ( v16 && byte_98A1B0[v15] )\n    {\n      v18 = sub_434520(v13, v15, 0LL);\nLABEL_23:\n      v17 = v18;\n      goto LABEL_24;\n    }\n  }\n  else\n  {\n    v17 = 5;\n    if ( v16 && byte_98A1B0[v15] )\n    {\n      v18 = sub_434BB0(v13, v15, 0LL);\n      goto LABEL_23;\n    }\n  }\nLABEL_24:\n  if ( v8 > 0 )\n  {\n    do\n    {\n      sub_407030();\n      --v8;\n    }\n    while ( v8 );\n  }\n  return v17;\n}\n", 
            "funcStartAddr": "0x44bb60L", 
            "funcEndAddr": "0x44bd3dL", 
            "funcName": "sub_44BB60"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_44BD40(signed int a1)\n{\n  int v1; // eax\n  int v2; // er8\n  int v3; // er11\n  int v4; // er9\n  int v5; // esi\n  int v6; // edx\n  int v7; // er10\n  int v8; // ebx\n  int v9; // eax\n  int v10; // edx\n  signed int v11; // ecx\n  int v12; // ecx\n  int v13; // eax\n  signed int v14; // ecx\n  int v15; // ecx\n  signed int v16; // eax\n  __int64 result; // rax\n\n  v1 = -10;\n  if ( a1 <= 9 )\n    v1 = -8 - (a1 > 7);\n  v2 = v1 + a1 + 16;\n  v3 = 6;\n  if ( v2 > 5 )\n    v3 = v1 + a1 + 16;\n  v4 = v1 + a1 + 12;\n  v5 = 2;\n  if ( v4 > 1 )\n    v5 = v1 + a1 + 12;\n  v6 = v1 + a1 + 5;\n  v7 = 1;\n  if ( v6 <= 0 )\n    v6 = 1;\n  v8 = 3;\n  if ( v1 + a1 + 13 > 2 )\n    v8 = v1 + a1 + 13;\n  dword_98A76C = v3;\n  dword_98A75C = v5;\n  dword_98A758 = v6;\n  v9 = v1 + a1;\n  dword_98A768 = v8;\n  if ( a1 < 8 )\n  {\n    if ( v9 >= -7 )\n    {\n      dword_98A7E4 = (signed int)(v9 + ((unsigned int)(v9 + 11) >> 31) + 11) >> 1;\n      dword_98A7E0 = v2 / 2;\nLABEL_19:\n      v11 = (signed int)(v9 + ((unsigned int)(v9 + 40) >> 31) + 40) >> 1;\n      goto LABEL_20;\n    }\n  }\n  else\n  {\n    v7 = 1;\n    if ( v9 >= -8 )\n      v7 = v4 / 2;\n  }\n  dword_98A7E4 = v7;\n  v10 = 2;\n  if ( v9 >= -10 )\n    v10 = v2 / 2;\n  dword_98A7E0 = v10;\n  v11 = 5;\n  if ( v9 >= -28 )\n    goto LABEL_19;\nLABEL_20:\n  dword_98A7EC = v11;\n  dword_88C260 = 0;\n  if ( a1 < 8 )\n  {\n    v12 = 0;\n    if ( a1 > 3 )\n      v12 = a1 - 3;\n  }\n  else\n  {\n    v12 = a1 - 4;\n  }\n  dword_98A754 = v12;\n  if ( a1 <= 9 )\n  {\n    if ( a1 == 7 )\n    {\n      dword_98A784 = 7;\n      v14 = 7;\n    }\n    else\n    {\n      v15 = a1 - 1;\n      v16 = 1;\n      if ( a1 <= 2 )\n        v15 = 1;\n      dword_98A784 = v15;\n      v14 = 7;\n      if ( a1 <= 6 )\n      {\n        if ( a1 > 0 )\n          v16 = a1;\n        v14 = v16;\n      }\n    }\n    dword_98A770 = v14;\n    dword_98A7F8 = 0;\n    v13 = 20;\n    if ( 2 * dword_4AF420[10 - a1] > 19 )\n      v13 = 2 * dword_4AF420[10 - a1];\n  }\n  else\n  {\n    dword_98A784 = a1 - 2;\n    dword_98A770 = a1 - 3;\n    dword_98A7F8 = a1 - 3;\n    v13 = (signed int)(pow(1.5, (double)v9) * 1000.0);\n  }\n  dword_98A7E8 = v13;\n  if ( dword_98A79C != -1 )\n    dword_98A76C = dword_98A79C;\n  if ( dword_98A794 != -1 )\n    dword_98A75C = dword_98A794;\n  if ( dword_98A790 != -1 )\n    dword_98A758 = dword_98A790;\n  if ( dword_98A7B8 != -1 )\n    dword_98A7F8 = dword_98A7B8;\n  if ( dword_98A7A0 != -1 )\n    dword_98A770 = dword_98A7A0;\n  if ( dword_98A7A4 != -1 )\n    dword_98A784 = dword_98A7A4;\n  if ( dword_98A798 != -1 )\n    dword_98A768 = dword_98A798;\n  if ( dword_98A78C != -1 )\n    dword_98A754 = dword_98A78C;\n  if ( dword_98A7AC != -1 )\n    dword_98A7E4 = dword_98A7AC;\n  if ( dword_98A7A8 != -1 )\n    dword_98A7E0 = dword_98A7A8;\n  if ( dword_98A7B4 != -1 )\n    dword_98A7EC = dword_98A7B4;\n  result = (unsigned int)dword_98A7B0;\n  if ( dword_98A7B0 != -1 )\n    dword_98A7E8 = dword_98A7B0;\n  return result;\n}\n", 
            "funcStartAddr": "0x44bd40L", 
            "funcEndAddr": "0x44bfedL", 
            "funcName": "sub_44BD40"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_44BFF0(int a1)\n{\n  dword_98A76C += a1;\n  dword_98A75C += a1;\n  dword_98A758 += a1;\n  dword_98A7F8 += a1;\n  dword_98A768 += a1;\n  dword_98A770 += a1;\n  dword_98A784 += a1;\n}\n", 
            "funcStartAddr": "0x44bff0L", 
            "funcEndAddr": "0x44c01bL", 
            "funcName": "sub_44BFF0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_44C110(__int64 a1, __m128 a2)\n{\n  __m128 v2; // xmm1\n\n  sub_44C130(a1);\n  v2.m128_i32[0] = 0;\n  return _mm_cvtsi128_si32((__m128i)_mm_cmpeq_ss(v2, a2)) & 1;\n}\n", 
            "funcStartAddr": "0x44c110L", 
            "funcEndAddr": "0x44c127L", 
            "funcName": "sub_44C110"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_44C130(unsigned int a1, unsigned int a2, unsigned int *a3, __int64 a4)\n{\n  unsigned int *v4; // r14\n  int v5; // ebx\n  int v6; // eax\n  int v7; // ecx\n  const char *v8; // rax\n  float v9; // xmm1_4\n  unsigned __int64 v10; // r14\n  __int64 v11; // r8\n  __int64 v12; // rbp\n  signed __int64 v13; // rax\n  __int64 v14; // rbp\n  signed int v15; // ecx\n  unsigned __int64 v16; // r12\n  __int64 v17; // rdx\n  __int64 v18; // rcx\n  int v19; // ebp\n  signed __int64 v20; // rax\n  int *v21; // rax\n  signed __int64 v22; // rcx\n  _DWORD *v23; // rdx\n  signed __int64 v24; // rcx\n  _DWORD *v25; // rdx\n  signed __int64 v26; // rax\n  int *v27; // rax\n  signed __int64 v28; // rcx\n  _DWORD *v29; // rdx\n  signed __int64 v30; // rax\n  int *v31; // rax\n  signed __int64 v32; // rcx\n  _DWORD *v33; // rdx\n  signed __int64 v34; // rcx\n  _DWORD *v35; // rdx\n  unsigned int v36; // ebp\n  unsigned int v37; // er12\n  unsigned int v38; // er15\n  __int64 v39; // rsi\n  signed __int64 v40; // r14\n  float v41; // xmm0_4\n  __int64 v42; // rcx\n  unsigned int v43; // eax\n  signed __int64 v44; // r13\n  int *v45; // rbp\n  __int64 v46; // rax\n  int v47; // ebp\n  float v48; // xmm1_4\n  __int64 v49; // rax\n  signed __int64 v50; // rax\n  _DWORD *i; // rsi\n  unsigned int *v52; // r14\n  __int64 v53; // rsi\n  int v54; // edx\n  __int64 result; // rax\n  float v56; // [rsp+4h] [rbp-94h]\n  float v57; // [rsp+4h] [rbp-94h]\n  unsigned int v58; // [rsp+Ch] [rbp-8Ch]\n  __int128 v59; // [rsp+10h] [rbp-88h]\n  unsigned int *v60; // [rsp+20h] [rbp-78h]\n  unsigned int v61; // [rsp+28h] [rbp-70h]\n  unsigned int v62; // [rsp+2Ch] [rbp-6Ch]\n  __int128 v63; // [rsp+30h] [rbp-68h]\n  int v64; // [rsp+4Ch] [rbp-4Ch]\n  unsigned int v65; // [rsp+50h] [rbp-48h]\n  unsigned int v66; // [rsp+54h] [rbp-44h]\n\n  *(_QWORD *)&v59 = a4;\n  v4 = a3;\n  v62 = a2;\n  v5 = sub_4099C0(a1, a2, 5, (__int64)&v65);\n  v6 = dword_88C268;\n  v58 = dword_88C268;\n  if ( v4 )\n  {\n    *v4 = 0;\n    v6 = dword_88C268;\n  }\n  v7 = 0;\n  if ( v6 )\n  {\n    v8 = sub_4341A0(a2);\n    sub_433F90(\"Checking safety of a %s move at %1m\\n\", v8, a1);\n    v7 = dword_88C268;\n    if ( dword_88C268 > 0 )\n      v7 = dword_88C268-- - 1;\n  }\n  v61 = v7;\n  v60 = v4;\n  v63 = 0LL;\n  v9 = 0.0;\n  v10 = 0LL;\n  DWORD2(v59) = 0;\n  v11 = v59;\n  do\n  {\n    v12 = dword_5641B0[v10];\n    v13 = (unsigned __int8)byte_98A1B0[v12 + (signed int)a1];\n    if ( (_DWORD)v13 != a2 )\n      goto LABEL_92;\n    v14 = (signed int)a1 + v12;\n    if ( v5 <= 4 )\n    {\n      v15 = 1;\n      if ( dword_8E9480[95 * v14] >= v5 )\n        goto LABEL_169;\n    }\n    v56 = v9;\n    v13 = sub_426330((__int64)ptr + 104 * *((signed int *)&xmmword_954FB0 + 19 * v14 + 1) + 76);\n    if ( (signed int)v13 > 2 )\n      goto LABEL_11;\n    v13 = sub_426580(a1);\n    v15 = DWORD2(v59);\n    v11 = v59;\n    if ( (_DWORD)v13 )\n    {\nLABEL_169:\n      DWORD2(v59) = v15;\n      v16 = 76 * v14;\n      v13 = *((unsigned int *)&xmmword_954FB0 + 19 * v14 + 2);\n      if ( !v10\n        || (_DWORD)v63 != (_DWORD)v13\n        && (v10 <= 1 || DWORD1(v63) != (_DWORD)v13 && (v10 < 3 || DWORD2(v63) != (_DWORD)v13)) )\n      {\n        *((_DWORD *)&v63 + v10) = v13;\n        if ( (!v11 || *(_BYTE *)(v11 + v14) != 2) && (dword_954FF0[v16 / 4] == 1 || v11 && *(_BYTE *)(v11 + v14)) )\n        {\n          v13 = *((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * v14 + 1) + 15) & 0xFFFFFFFE;\n          if ( (_DWORD)v13 != 8 )\n          {\n            v64 = 0;\n            v13 = sub_42EDA0(a1, (unsigned int)v14, v60, (__int64)&v64);\n            if ( (_DWORD)v13 == 2 )\n            {\n              dword_88C268 = v58;\n              if ( v58 )\n                sub_433F90(\"Dragon at %1m becomes attackable.\\n\", (unsigned int)v14);\n              dword_88C268 = v61;\n              if ( v64 == a1 )\n              {\n                if ( (unsigned __int8)byte_98A1B0[dword_5641B0[0] + (signed __int64)(signed int)a1] == a2 )\n                {\n                  v20 = 95 * ((signed int)a1 + (signed __int64)dword_5641B0[0]);\n                  v9 = v9 + *(float *)&dword_8E9478[v20] + *(float *)&dword_8E9478[v20];\n                  v11 = v59;\n                  if ( (_QWORD)v59 )\n                  {\n                    v21 = &dword_8E947C[v20];\n                    v22 = -378LL;\n                    v23 = &unk_8EB524;\n                    if ( byte_98A33F[-378] == 3 )\n                      goto LABEL_43;\nLABEL_41:\n                    if ( *(v23 - 95) == *v21 )\n                      *(_BYTE *)(v59 + v22 + 399) = 0;\nLABEL_43:\n                    while ( v22 )\n                    {\n                      if ( byte_98A340[v22] != 3 && *v23 == *v21 )\n                        *(_BYTE *)(v59 + v22 + 400) = 0;\n                      v22 += 2LL;\n                      v23 += 190;\n                      if ( byte_98A33F[v22] != 3 )\n                        goto LABEL_41;\n                    }\n                  }\n                }\n                else\n                {\n                  v11 = v59;\n                }\n                if ( (unsigned __int8)byte_98A1B0[dword_5641B4 + (signed __int64)(signed int)a1] == a2 )\n                {\n                  v26 = 95 * ((signed int)a1 + (signed __int64)dword_5641B4);\n                  v9 = v9 + *(float *)&dword_8E9478[v26] + *(float *)&dword_8E9478[v26];\n                  if ( v11 )\n                  {\n                    v27 = &dword_8E947C[v26];\n                    v28 = -378LL;\n                    v29 = &unk_8EB524;\n                    if ( byte_98A33F[-378] == 3 )\n                      goto LABEL_66;\nLABEL_64:\n                    if ( *(v29 - 95) == *v27 )\n                      *(_BYTE *)(v11 + v28 + 399) = 0;\nLABEL_66:\n                    while ( v28 )\n                    {\n                      if ( byte_98A340[v28] != 3 && *v29 == *v27 )\n                        *(_BYTE *)(v11 + v28 + 400) = 0;\n                      v28 += 2LL;\n                      v29 += 190;\n                      if ( byte_98A33F[v28] != 3 )\n                        goto LABEL_64;\n                    }\n                  }\n                }\n                if ( (unsigned __int8)byte_98A1B0[dword_5641B8 + (signed __int64)(signed int)a1] == a2 )\n                {\n                  v30 = 95 * ((signed int)a1 + (signed __int64)dword_5641B8);\n                  v9 = v9 + *(float *)&dword_8E9478[v30] + *(float *)&dword_8E9478[v30];\n                  if ( v11 )\n                  {\n                    v31 = &dword_8E947C[v30];\n                    v32 = -378LL;\n                    v33 = &unk_8EB524;\n                    if ( byte_98A33F[-378] == 3 )\n                      goto LABEL_77;\nLABEL_75:\n                    if ( *(v33 - 95) == *v31 )\n                      *(_BYTE *)(v11 + v32 + 399) = 0;\nLABEL_77:\n                    while ( v32 )\n                    {\n                      if ( byte_98A340[v32] != 3 && *v33 == *v31 )\n                        *(_BYTE *)(v11 + v32 + 400) = 0;\n                      v32 += 2LL;\n                      v33 += 190;\n                      if ( byte_98A33F[v32] != 3 )\n                        goto LABEL_75;\n                    }\n                  }\n                }\n                v13 = dword_5641BC;\n                if ( (unsigned __int8)byte_98A1B0[dword_5641BC + (signed __int64)(signed int)a1] == a2 )\n                {\n                  v13 = 380 * ((signed int)a1 + (signed __int64)dword_5641BC);\n                  v9 = v9 + *(float *)((char *)dword_8E9478 + v13) + *(float *)((char *)dword_8E9478 + v13);\n                  if ( v11 )\n                  {\n                    v13 += (signed __int64)dword_8E947C;\n                    v34 = -378LL;\n                    v35 = &unk_8EB524;\n                    if ( byte_98A33F[-378] == 3 )\n                      goto LABEL_88;\nLABEL_86:\n                    if ( *(v35 - 95) == *(_DWORD *)v13 )\n                      *(_BYTE *)(v11 + v34 + 399) = 0;\nLABEL_88:\n                    while ( v34 )\n                    {\n                      if ( byte_98A340[v34] != 3 && *v35 == *(_DWORD *)v13 )\n                        *(_BYTE *)(v11 + v34 + 400) = 0;\n                      v34 += 2LL;\n                      v35 += 190;\n                      if ( byte_98A33F[v34] != 3 )\n                        goto LABEL_86;\n                    }\n                  }\n                }\n              }\n              else\n              {\n                v13 = 380LL * v64;\n                v9 = v9 + *(float *)((char *)dword_8E9478 + v13) + *(float *)((char *)dword_8E9478 + v13);\n                v11 = v59;\n                if ( (_QWORD)v59 )\n                {\n                  v13 += (signed __int64)dword_8E947C;\n                  v24 = -378LL;\n                  v25 = &unk_8EB524;\n                  if ( byte_98A33F[-378] == 3 )\n                    goto LABEL_54;\nLABEL_52:\n                  if ( *(v25 - 95) == *(_DWORD *)v13 )\n                    *(_BYTE *)(v59 + v24 + 399) = 0;\nLABEL_54:\n                  while ( v24 )\n                  {\n                    if ( byte_98A340[v24] != 3 && *v25 == *(_DWORD *)v13 )\n                      *(_BYTE *)(v59 + v24 + 400) = 0;\n                    v24 += 2LL;\n                    v25 += 190;\n                    if ( byte_98A33F[v24] != 3 )\n                      goto LABEL_52;\n                  }\n                }\n              }\n            }\n            else\n            {\n              v11 = v59;\n              if ( !(_DWORD)v13 )\n              {\n                dword_88C268 = v58;\n                if ( v58 )\n                {\n                  sub_433F90(\"Dragon at %1m becomes attackable.\\n\", (unsigned int)v14, v17, v18, (_QWORD)v59);\n                  v11 = v59;\n                }\n                v13 = v61;\n                dword_88C268 = v61;\n                v9 = v9 + *(float *)((char *)&xmmword_954FC0 + v16) + *(float *)((char *)&xmmword_954FC0 + v16);\n                if ( v11 )\n                {\n                  v56 = v9;\n                  v13 = sub_414800(v14);\n                  v19 = v13;\n                  if ( !(_DWORD)v13 )\n                  {\nLABEL_11:\n                    v9 = v56;\n                    v11 = v59;\n                    goto LABEL_92;\n                  }\n                  do\n                  {\n                    sub_40BAB0(v19, v59, 0);\n                    v13 = sub_414810(v19);\n                    v19 = v13;\n                  }\n                  while ( (_DWORD)v13 );\n                  v11 = v59;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\nLABEL_92:\n    ++v10;\n  }\n  while ( v10 != 4 );\n  if ( !DWORD2(v59) )\n  {\n    v52 = v60;\n    v36 = a1;\n    goto LABEL_157;\n  }\n  v36 = a1;\n  v37 = a2;\n  v13 = sub_406880(a1, a2, 0LL, 0, 0, 0);\n  if ( !(_DWORD)v13 )\n  {\n    v52 = v60;\n    goto LABEL_156;\n  }\n  ++dword_98A76C;\n  ++dword_98A75C;\n  ++dword_98A758;\n  ++dword_98A7F8;\n  ++dword_98A768;\n  ++dword_98A770;\n  ++dword_98A784;\n  v38 = 3 - a2;\n  v39 = a1;\n  v40 = 21LL;\n  v41 = v9;\n  v42 = v59;\n  while ( 2 )\n  {\n    v43 = (unsigned __int8)byte_98A1B0[v40];\n    if ( (unsigned __int8)(byte_98A1B0[v40] - 1) > 1u )\n      goto LABEL_136;\n    if ( v40 == v39 )\n      goto LABEL_136;\n    v44 = 95 * v40;\n    if ( v40 != dword_8E947C[95 * v40] )\n      goto LABEL_136;\n    v45 = &dword_8E947C[v44];\n    if ( v43 != v37 )\n      goto LABEL_102;\n    if ( v42 )\n    {\n      v43 = v37;\n      if ( !*(_BYTE *)(v42 + v40) )\n        goto LABEL_102;\nLABEL_116:\n      v49 = sub_43B050(v40, 0LL);\n      if ( (_DWORD)v49 )\n      {\n        if ( v60 )\n          sub_43B6F0(v49, v40, v60);\n        dword_88C268 = v58;\n        if ( v58 )\n          sub_433F90(\"After %1m Worm at %1m becomes attackable.\\n\", a1, (unsigned int)v40);\n        dword_88C268 = v58;\n        v41 = v41 + *(float *)&dword_8E9478[v44];\n        v42 = v59;\n        if ( (_QWORD)v59 )\n        {\n          v50 = -378LL;\n          for ( i = &unk_8EB524; ; i += 190 )\n          {\n            if ( *(i - 95) == *v45 )\n              *(_BYTE *)(v59 + v50 + 399) = 0;\n            if ( !v50 )\n              break;\n            if ( *i == *v45 )\n              *(_BYTE *)(v59 + v50 + 400) = 0;\n            v50 += 2LL;\n          }\n        }\nLABEL_135:\n        v39 = a1;\n        goto LABEL_136;\n      }\n      v39 = a1;\n      v42 = v59;\n      if ( v38 != (unsigned __int8)byte_98A1B0[v40] )\n        goto LABEL_136;\n    }\n    else\n    {\n      v43 = v37;\n      if ( !dword_8E94D4[v44] )\n        goto LABEL_116;\nLABEL_102:\n      if ( v38 != v43 )\n        goto LABEL_136;\n    }\n    v46 = (unsigned int)*v45;\n    if ( v40 == v46 && dword_8E94D4[v44] && !dword_8E9524[v44] )\n    {\n      v57 = v41;\n      if ( (unsigned int)sub_43B6F0(v46, v40, 0LL) )\n      {\n        sub_407030();\n        --dword_98A76C;\n        --dword_98A75C;\n        --dword_98A758;\n        --dword_98A7F8;\n        --dword_98A768;\n        --dword_98A770;\n        --dword_98A784;\n        v47 = sub_42F0B0(a1, (unsigned int)v40, 0LL);\n        if ( v47 != 5 )\n        {\n          v48 = *(float *)&dword_8E9478[v44];\n          dword_88C268 = v58;\n          if ( v58 )\n            sub_433F90(\"After %1m worm at %1m becomes defendable.\\n\", a1, (unsigned int)v40);\n          v57 = v41 + v48;\n          dword_88C268 = v58;\n        }\n        sub_406880(a1, v37, 0LL, 0, 0, 0);\n        ++dword_98A76C;\n        ++dword_98A75C;\n        ++dword_98A758;\n        ++dword_98A7F8;\n        ++dword_98A768;\n        ++dword_98A770;\n        ++dword_98A784;\n        if ( v60 && v47 != 5 )\n        {\n          if ( (unsigned int)sub_43B050(v40, (unsigned int *)&v63) )\n          {\n            *v60 = v63;\n          }\n          else\n          {\n            dword_88C268 = v58;\n            if ( v58 )\n              sub_433F90(\"No attack found (unexpectedly) on %1m after move at %1m.\\n\", (unsigned int)v40, a1);\n            dword_88C268 = v58;\n          }\n        }\n      }\n      v41 = v57;\n      v42 = v59;\n      goto LABEL_135;\n    }\nLABEL_136:\n    if ( ++v40 != 400 )\n      continue;\n    break;\n  }\n  if ( v5 == 2 )\n  {\n    if ( (unsigned int)sub_44CDA0(v65, v38, &v63) )\n    {\n      v52 = v60;\n      if ( v60 && (unsigned int)sub_43F100(v65, v37) == 5 )\n        *v60 = v65;\n      dword_88C268 = v58;\n      if ( v58 )\n      {\n        v53 = v65;\n        goto LABEL_153;\n      }\n      goto LABEL_154;\n    }\n    v52 = v60;\n    if ( (unsigned int)sub_44CDA0(v66, v38, &v63) )\n    {\n      if ( v60 && (unsigned int)sub_43F100(v66, v37) == 5 )\n        *v60 = v66;\n      dword_88C268 = v58;\n      if ( v58 )\n      {\n        v53 = v66;\nLABEL_153:\n        sub_433F90(\"Double threat appears at %1m.\\n\", v53);\n      }\nLABEL_154:\n      v36 = a1;\n      dword_88C268 = v58;\n    }\n    else\n    {\n      v36 = a1;\n    }\n  }\n  else\n  {\n    v52 = v60;\n    v36 = a1;\n  }\n  --dword_98A76C;\n  --dword_98A75C;\n  --dword_98A758;\n  --dword_98A7F8;\n  --dword_98A768;\n  --dword_98A770;\n  --dword_98A784;\n  v13 = sub_407030();\nLABEL_156:\n  v11 = v59;\nLABEL_157:\n  if ( (unsigned int)sub_4105A0(v13, &v63, v11, v62, v36) )\n  {\n    if ( (unsigned __int64)(signed int)v63 > 0x1A4 || byte_98A1B0[(signed int)v63] == 3 )\n    {\n      v54 = (1717986919LL * (signed int)v63 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)v63) >> 63);\n      sub_4340E0((__int64)\"engine/utils.c\", 0x35Eu, (__int64)\"ON_BOARD1(apos)\", v54 - 1, v63 - 20 * v54 - 1);\n    }\n    if ( v52 )\n      *v52 = v63;\n    dword_88C268 = v58;\n    if ( v58 )\n      sub_433F90(\"Combination attack appears at %1m.\\n\", (unsigned int)v63);\n  }\n  result = v58;\n  dword_88C268 = v58;\n  return result;\n}\n", 
            "funcStartAddr": "0x44c130L", 
            "funcEndAddr": "0x44cd93L", 
            "funcName": "sub_44C130"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_44CDA0(signed int a1, unsigned int a2, float *a3, __int64 a4)\n{\n  __int64 v4; // r8\n  __int64 v5; // rax\n  unsigned int v6; // er14\n  int v7; // edi\n  __int64 v8; // rcx\n  signed __int64 v9; // rbp\n  signed __int64 v10; // rdx\n  int v11; // er9\n  signed __int64 v12; // r12\n  __int64 v13; // r14\n  __int64 v14; // rbx\n  signed int v15; // ebx\n  signed __int64 v16; // r15\n  signed __int64 v17; // r15\n  int v18; // eax\n  float v20; // xmm0_4\n  float v21; // xmm1_4\n  unsigned int v22; // [rsp+8h] [rbp-60h]\n  int v23; // [rsp+Ch] [rbp-5Ch]\n  int v24; // [rsp+10h] [rbp-58h]\n  unsigned int v25; // [rsp+14h] [rbp-54h]\n  __int64 v26; // [rsp+18h] [rbp-50h]\n  signed __int64 v27; // [rsp+20h] [rbp-48h]\n  signed __int64 v28; // [rsp+28h] [rbp-40h]\n  float *v29; // [rsp+30h] [rbp-38h]\n\n  v4 = a4;\n  v25 = a1;\n  v5 = a1;\n  v6 = 0;\n  if ( byte_98A1B0[a1] == 3 )\n    return v6;\n  v29 = a3;\n  v7 = 3 - a2;\n  v8 = (signed int)(((unsigned __int64)(1717986919 * v5) >> 63) + (1717986919 * v5 >> 35));\n  v9 = v8 - 1;\n  v10 = (signed int)v5 - 20 * (signed int)v8 - 1LL;\n  v11 = 20 * (v8 - 1) + 21;\n  v12 = 4LL;\n  v13 = (signed int)v10;\n  v26 = v4;\n  v22 = a2;\n  v24 = 3 - a2;\n  v28 = (signed int)v5 - 20 * (signed int)v8 - 1LL;\n  v23 = 20 * (v8 - 1) + 21;\n  v27 = v8 - 1;\n  while ( 1 )\n  {\n    v14 = v13 + dword_564190[v12];\n    if ( (unsigned __int8)byte_98A1C5[20 * (v9 + dword_564170[v12]) + v14] != a2 )\n      goto LABEL_15;\n    v15 = v11 + v14;\n    if ( v7 != (unsigned __int8)byte_98A1B0[v15] )\n      goto LABEL_15;\n    v16 = 20 * (v9 + dword_564170[v12]) + 21;\n    if ( v7 != (unsigned __int8)byte_98A1B0[v16 + v10] )\n      goto LABEL_15;\n    v17 = v10 + v16;\n    if ( v4 )\n    {\n      if ( !*(_BYTE *)(v4 + v15) || !*(_BYTE *)(v4 + v17) )\n        goto LABEL_15;\n    }\n    v18 = sub_406880(v25, v22, \"double_atari\", 0, 0, 0);\n    v9 = v27;\n    v11 = v23;\n    v10 = v28;\n    v7 = v24;\n    a2 = v22;\n    v4 = v26;\n    if ( !v18 )\n      goto LABEL_15;\n    if ( (signed int)sub_4083A0(v25) >= 2\n      && (!byte_98A1B0[v15] || !byte_98A1B0[v17] || !(unsigned int)sub_43E680(v15, v17)) )\n    {\n      break;\n    }\n    sub_407030();\n    v4 = v26;\n    a2 = v22;\n    v7 = v24;\n    v10 = v28;\n    v11 = v23;\n    v9 = v27;\nLABEL_15:\n    if ( (unsigned __int64)++v12 >= 8 )\n      return 0;\n  }\n  sub_407030();\n  v6 = 1;\n  if ( v29 )\n  {\n    v20 = *(float *)&dword_8E9478[95 * v15];\n    v21 = *(float *)&dword_8E9478[95 * v17];\n    if ( v20 <= v21 )\n    {\n      *v29 = v21 + v21;\n      if ( v26 )\n        sub_40BAB0(v17, v26, 0);\n    }\n    else\n    {\n      *v29 = v20 + v20;\n      if ( v26 )\n        sub_40BAB0(v15, v26, 0);\n    }\n  }\n  return v6;\n}\n", 
            "funcStartAddr": "0x44cda0L", 
            "funcEndAddr": "0x44cfd9L", 
            "funcName": "sub_44CDA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_44CFE0(void *a1, int a2)\n{\n  int v2; // er15\n  unsigned int v3; // er13\n  int v4; // ebp\n  signed __int64 v5; // rbx\n  int v6; // er12\n  unsigned int v7; // eax\n  int v8; // er14\n  __int64 v9; // rbp\n  unsigned int *v10; // r15\n  bool v11; // zf\n  signed __int64 v12; // r15\n  unsigned int v13; // eax\n  __int64 v14; // rbp\n  unsigned int *v15; // rbx\n  signed int v16; // ebp\n  signed __int64 v17; // rbx\n  int v18; // eax\n  signed __int64 v19; // rbx\n  void *v20; // rbp\n  unsigned int v21; // ebp\n  unsigned int v22; // er14\n  int v23; // eax\n  signed int v24; // edx\n  int v25; // esi\n  int v26; // ecx\n  int v27; // eax\n  int v28; // eax\n  __int64 v29; // rdi\n  signed __int64 v30; // rbx\n  __int64 result; // rax\n  __int64 v32; // rcx\n  unsigned __int64 v33; // rdx\n  __int64 v34; // rdx\n  __int64 v35; // rcx\n  int *v36; // rcx\n  int v37; // er12\n  int v38; // [rsp+8h] [rbp-410h]\n  int v39; // [rsp+Ch] [rbp-40Ch]\n  int v40; // [rsp+Ch] [rbp-40Ch]\n  void *s; // [rsp+10h] [rbp-408h]\n  int v42; // [rsp+18h] [rbp-400h]\n  int v43; // [rsp+1Ch] [rbp-3FCh]\n  unsigned int v44; // [rsp+20h] [rbp-3F8h]\n  unsigned int v45; // [rsp+24h] [rbp-3F4h]\n  int v46; // [rsp+28h] [rbp-3F0h]\n  int v47[251]; // [rsp+2Ch] [rbp-3ECh]\n\n  v2 = a2;\n  s = a1;\n  v3 = 3 - a2;\n  v4 = 0;\n  v5 = 21LL;\n  v6 = 0;\n  v38 = a2;\n  while ( 1 )\n  {\n    if ( (unsigned __int8)byte_98A1B0[v5] == v2 && (unsigned int)sub_456110((unsigned int)v5, (unsigned int)v5) )\n    {\n      v39 = v4;\n      v7 = sub_408410(v5, 241, (unsigned __int64)&v44);\n      v8 = v6;\n      if ( (signed int)v7 > 0 )\n      {\n        v9 = v7;\n        v10 = &v44;\n        v8 = v6;\n        do\n        {\n          v8 -= ((unsigned int)sub_406880(*v10, v3, \"unconditional_life\", v5, 0, 0) < 1) - 1;\n          ++v10;\n          --v9;\n        }\n        while ( v9 );\n      }\n      if ( byte_98A1B0[v5] )\n      {\n        if ( (unsigned int)sub_408410(v5, 2, (unsigned __int64)&v44) == 1 )\n        {\n          v2 = a2;\n          if ( !(unsigned int)sub_406E60(v44, v3, \"unconditional_life\", 0, 0) )\n            sub_4340E0((__int64)\"engine/utils.c\", 0x4DEu, (__int64)\"success\", 0xFFFFFFFF, 0xFFFFFFFF);\n          v4 = v39 + 1;\n          v6 = v8 + 1;\n        }\n        else\n        {\n          if ( v8 <= v6 )\n          {\n            v6 = v8;\n          }\n          else\n          {\n            do\n            {\n              sub_407030();\n              --v8;\n            }\n            while ( v8 > v6 );\n          }\n          v2 = a2;\n          v4 = v39;\n        }\n      }\n      else\n      {\n        v4 = 1;\n        v6 = v8;\n        v2 = a2;\n      }\n    }\n    if ( ++v5 == 400 )\n    {\n      v5 = 21LL;\n      v11 = v4 == 0;\n      v4 = 0;\n      if ( v11 )\n        break;\n    }\n  }\n  v12 = 21LL;\n  do\n  {\n    if ( (unsigned __int8)byte_98A1B0[v12] == a2 )\n    {\n      if ( (unsigned int)sub_456110((unsigned int)v12, (unsigned int)v12) )\n      {\n        v13 = sub_408410(v12, 241, (unsigned __int64)&v44);\n        if ( (signed int)v13 > 0 )\n        {\n          v14 = v13;\n          v15 = &v44;\n          do\n          {\n            v6 -= ((unsigned int)sub_406880(*v15, v3, \"unconditional_life\", v12, 0, 0) < 1) - 1;\n            ++v15;\n            --v14;\n          }\n          while ( v14 );\n        }\n      }\n    }\n    ++v12;\n  }\n  while ( v12 != 400 );\n  v16 = 0;\n  v17 = 21LL;\n  while ( 1 )\n  {\n    if ( v3 == (unsigned __int8)byte_98A1B0[v17] && (signed int)sub_4083A0(v17) <= 1 )\n    {\n      sub_408410(v17, 1, (unsigned __int64)&v44);\n      v18 = sub_406880(v44, v3, \"unconditional_life\", v17, 0, 0);\n      if ( v18 != 0 )\n        v16 = 1;\n      v6 += v18 != 0;\n    }\n    if ( ++v17 == 400 )\n    {\n      v17 = 21LL;\n      v11 = v16 == 0;\n      v16 = 0;\n      if ( v11 )\n        break;\n    }\n  }\n  v19 = 21LL;\n  v20 = a1;\n  do\n  {\n    if ( v3 == (unsigned __int8)byte_98A1B0[v19] && (unsigned int)sub_4083A0(v19) == 2 )\n    {\n      sub_408410(v19, 2, (unsigned __int64)&v44);\n      v21 = v44;\n      v22 = v45;\n      v23 = ((unsigned __int64)(1717986919LL * (signed int)v44) >> 63) + (1717986919LL * (signed int)v44 >> 35);\n      v24 = -(v23 + ((unsigned __int64)(-1717986919LL * (signed int)v45) >> 63)\n                  + (-1717986919LL * (signed int)v45 >> 35));\n      if ( v24 < 1 )\n        v24 = v23\n            + ((unsigned __int64)(-1717986919LL * (signed int)v45) >> 63)\n            + (-1717986919LL * (signed int)v45 >> 35);\n      v25 = v45\n          - 20 * (((unsigned __int64)(1717986919LL * (signed int)v45) >> 63) + (1717986919LL * (signed int)v45 >> 35));\n      v26 = v44 - 20 * v23 - v25;\n      v27 = v25 - (v44 - 20 * v23);\n      if ( v27 < 1 )\n        v27 = v26;\n      if ( v24 + v27 == 1 )\n      {\n        v40 = sub_4093D0(v44, v38, 4, 0LL);\n        v43 = sub_4093D0(v22, v38, 4, 0LL);\n        v42 = sub_4093D0(v21, v3, 4, 0LL);\n        v28 = sub_4093D0(v22, v3, 4, 0LL);\n        if ( v40 <= v43 && (v40 != v43 || v42 < v28) )\n          v29 = v22;\n        else\n          v29 = v21;\n        sub_406880(v29, v3, \"unconditional_life\", v19, 0, 0);\n        v20 = s;\n        ++v6;\n      }\n      else\n      {\n        v20 = s;\n      }\n    }\n    ++v19;\n  }\n  while ( v19 != 400 );\n  memset(v20, 0, 0x640uLL);\n  v30 = 21LL;\n  do\n  {\n    result = (unsigned __int8)byte_98A1B0[v30];\n    if ( (_DWORD)result == v38 )\n    {\n      *((_DWORD *)v20 + v30) = 1;\n      result = sub_456110((unsigned int)v30, (unsigned int)v30);\n      if ( (_DWORD)result )\n      {\n        result = sub_408410(v30, 241, (unsigned __int64)&v44);\n        if ( (signed int)result > 0 )\n        {\n          v32 = (unsigned int)result;\n          v33 = (unsigned int)result - 1LL;\n          result &= 3u;\n          if ( v33 < 3 )\n          {\n            v34 = 0LL;\n            if ( !result )\n              goto LABEL_66;\nLABEL_64:\n            v36 = (int *)(&v44 + v34);\n            result = -result;\n            do\n            {\n              *((_DWORD *)v20 + *v36) = 2;\n              ++v36;\n              ++result;\n            }\n            while ( result );\n            goto LABEL_66;\n          }\n          v35 = v32 - result;\n          v34 = 0LL;\n          do\n          {\n            *((_DWORD *)v20 + (signed int)*(&v44 + v34)) = 2;\n            *((_DWORD *)v20 + (signed int)*(&v45 + v34)) = 2;\n            *((_DWORD *)v20 + *(&v46 + v34)) = 2;\n            *((_DWORD *)v20 + v47[v34]) = 2;\n            v34 += 4LL;\n          }\n          while ( v35 != v34 );\n          if ( result )\n            goto LABEL_64;\n        }\n      }\n    }\n    else if ( v3 == (_DWORD)result )\n    {\n      result = sub_4083A0(v30);\n      if ( (_DWORD)result == 1 )\n      {\n        *((_DWORD *)v20 + v30) = 2;\n        sub_408410(v30, 1, (unsigned __int64)&v44);\n        result = (signed int)v44;\n        *((_DWORD *)v20 + (signed int)v44) = 2;\n      }\n    }\nLABEL_66:\n    ++v30;\n  }\n  while ( v30 != 400 );\n  if ( v6 > 0 )\n  {\n    v37 = v6 + 1;\n    do\n    {\n      result = sub_407030();\n      --v37;\n    }\n    while ( v37 > 1 );\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x44cfe0L", 
            "funcEndAddr": "0x44d551L", 
            "funcName": "sub_44CFE0"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_44D560(double a1, __m128 a2, double a3, double a4, double a5, double a6, double a7, __int64 a8, FILE *a9)\n{\n  __int128 v9; // xmm0\n  signed __int64 v11; // rdx\n  __m128 v12; // xmm2\n  __m128 v13; // xmm2\n\n  v9 = sub_445420(0LL, 0LL, a1, *(double *)a2.m128_u64, a3, a4, a5, a6, a7);\n  a2.m128_i32[0] = 0;\n  if ( *(float *)&v9 == 0.0 )\n    return fwrite(\"Result: jigo   \", 0xFuLL, 1uLL, a9);\n  v11 = 66LL;\n  if ( *(float *)&v9 > 0.0 )\n    v11 = 87LL;\n  v12.m128_i32[0] = v9;\n  v13 = _mm_cmplt_ss(v12, a2);\n  return fprintf(\n           a9,\n           \"Result: %c+%.1f   \",\n           v11,\n           COERCE_FLOAT((xmmword_4AE070 ^ v9) & v13.m128_i32[0] | *(unsigned __int128 *)&_mm_andnot_ps(v13, (__m128)v9)));\n}\n", 
            "funcStartAddr": "0x44d560L", 
            "funcEndAddr": "0x44d5cbL", 
            "funcName": "sub_44D560"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_44D5D0(__int64 a1, __int64 a2, int a3)\n{\n  return sub_44D610(a1, a2, a3, 0, 0, 0, 0);\n}\n", 
            "funcStartAddr": "0x44d5d0L", 
            "funcEndAddr": "0x44d605L", 
            "funcName": "sub_44D5D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_44D610(unsigned int a1, _DWORD *a2, __int64 a3, _DWORD *a4, __int64 a5, __int64 a6, _DWORD *a7, __int64 a8, int a9, __int64 a10, signed int a11)\n{\n  _DWORD *v11; // rbp\n  int v12; // er12\n  __int64 result; // rax\n  signed int v14; // edx\n  __int64 v15; // rsi\n  unsigned __int64 v16; // r15\n  unsigned int v17; // ecx\n  __int64 v18; // rbx\n  char v19; // al\n  __int64 v20; // r14\n  __int64 v21; // rbp\n  signed int v22; // eax\n  _BOOL4 v23; // eax\n  int v24; // eax\n  signed __int64 v25; // rbx\n  unsigned int v26; // er13\n  int v27; // ebx\n  __int64 v28; // r13\n  signed __int64 v29; // r14\n  unsigned int v30; // er14\n  unsigned int v31; // eax\n  unsigned int v32; // ebp\n  __int64 v33; // rax\n  int v34; // eax\n  unsigned int v35; // eax\n  __int64 v36; // r14\n  __int64 v37; // rbp\n  signed __int64 v38; // rbx\n  __int64 v39; // rdi\n  __int64 v40; // rax\n  __int64 v41; // rdi\n  unsigned int v42; // eax\n  unsigned int v43; // ebp\n  __int64 v44; // rax\n  int v45; // eax\n  unsigned int v46; // eax\n  int v47; // er13\n  __int64 v48; // r14\n  __int64 v49; // rbp\n  signed __int64 v50; // rbx\n  __int64 v51; // rdi\n  __int64 v52; // rax\n  __int64 v53; // rdi\n  unsigned int v54; // [rsp+8h] [rbp-1080h]\n  int v55; // [rsp+Ch] [rbp-107Ch]\n  __int64 v56; // [rsp+10h] [rbp-1078h]\n  bool v57; // [rsp+1Bh] [rbp-106Dh]\n  int v58; // [rsp+1Ch] [rbp-106Ch]\n  __int64 v59; // [rsp+20h] [rbp-1068h]\n  _DWORD *v60; // [rsp+28h] [rbp-1060h]\n  __int64 v61; // [rsp+30h] [rbp-1058h]\n  __int64 v62; // [rsp+38h] [rbp-1050h]\n  _DWORD *v63; // [rsp+40h] [rbp-1048h]\n  __int64 v64; // [rsp+48h] [rbp-1040h]\n  char s[400]; // [rsp+50h] [rbp-1038h]\n  char v66; // [rsp+1E0h] [rbp-EA8h]\n  char v67; // [rsp+370h] [rbp-D18h]\n  int v68[364]; // [rsp+500h] [rbp-B88h]\n  int v69[374]; // [rsp+AB0h] [rbp-5D8h]\n\n  v59 = a6;\n  v62 = a5;\n  v11 = a4;\n  v61 = a3;\n  v12 = (unsigned __int8)byte_98A1B0[a1];\n  memset(s, 0, 0x190uLL);\n  memset(&v67, 0, 0x190uLL);\n  memset(&v66, 0, 0x190uLL);\n  if ( a2 )\n    *a2 = 0;\n  if ( v11 )\n    *v11 = 0;\n  if ( a7 )\n    *a7 = 0;\n  v55 = 0;\n  v63 = a2;\n  result = sub_44E1A0(\n             a1,\n             (unsigned __int64)&v55,\n             (unsigned __int64)v68,\n             (__int64)a2,\n             v61,\n             (_DWORD)v11,\n             v62,\n             v59,\n             (__int64)a7,\n             a8,\n             a9);\n  if ( v55 <= 0 )\n    return result;\n  v14 = a11;\n  v58 = 3 - v12;\n  v57 = v11 != 0LL && (signed int)v59 > 0;\n  v64 = 0LL;\n  v60 = v11;\n  do\n  {\n    v15 = v68[v64];\n    v16 = 0LL;\n    v56 = v68[v64];\n    while ( 1 )\n    {\n      v18 = dword_5641B0[v16++];\n      v19 = byte_98A1B0[v18 + v15];\n      if ( v19 == 3 )\n      {\n        result = 7LL;\n        goto LABEL_75;\n      }\n      v20 = dword_5641B0[v16 & 3];\n      v21 = v18 + v15;\n      v17 = v20 + v18 + v15;\n      v54 = v20 + v18 + v15;\n      if ( !v19 )\n      {\n        if ( v14 == 2 )\n        {\n          v22 = sub_4093D0(v21, v58, 2, 0LL);\n          v15 = v56;\n          v14 = a11;\n          v17 = v54;\n          v23 = v22 < 2;\n          goto LABEL_22;\n        }\n        v23 = sub_40AD70(v21, v58);\n        v14 = a11;\n        if ( a11 != 1 )\n        {\n          v15 = v56;\n          v17 = v54;\n          goto LABEL_22;\n        }\n        v15 = v56;\n        v17 = v54;\n        if ( v23 )\n        {\n          v24 = sub_408130(v21, v58, 0LL);\n          v17 = v54;\n          v15 = v56;\n          v14 = 1;\n          if ( v24 )\n            goto LABEL_32;\n        }\n        else\n        {\nLABEL_22:\n          if ( !v23 )\n            goto LABEL_32;\n        }\n        v25 = v15 + 2 * v18;\n        if ( byte_98A1B0[v17] == (_BYTE)v12 && !s[v17] )\n        {\n          sub_44E1A0(\n            v17,\n            (unsigned __int64)&v55,\n            (unsigned __int64)v68,\n            (__int64)v63,\n            v61,\n            (_DWORD)v60,\n            v62,\n            v59,\n            (__int64)a7,\n            a8,\n            a9);\n          v17 = v54;\n          v15 = v56;\n          v14 = a11;\n        }\n        v26 = v21 - v20;\n        if ( byte_98A1B0[v25] == (_BYTE)v12 && !s[v25] )\n        {\n          sub_44E1A0(\n            (unsigned int)v25,\n            (unsigned __int64)&v55,\n            (unsigned __int64)v68,\n            (__int64)v63,\n            v61,\n            (_DWORD)v60,\n            v62,\n            v59,\n            (__int64)a7,\n            a8,\n            a9);\n          v17 = v54;\n          v15 = v56;\n          v14 = a11;\n        }\n        if ( byte_98A1B0[v26] == (_BYTE)v12 && !s[v26] )\n        {\n          sub_44E1A0(\n            v26,\n            (unsigned __int64)&v55,\n            (unsigned __int64)v68,\n            (__int64)v63,\n            v61,\n            (_DWORD)v60,\n            v62,\n            v59,\n            (__int64)a7,\n            a8,\n            a9);\n          v17 = v54;\n          v15 = v56;\n          v14 = a11;\n        }\n      }\nLABEL_32:\n      v27 = v20 + v15;\n      v28 = (signed int)v17;\n      if ( byte_98A1B0[v21] != (_BYTE)v12\n        || byte_98A1B0[v17]\n        || (v29 = 2 * v20, byte_98A1B0[v21 + v29] != (_BYTE)v12)\n        || (v30 = v15 + v29, byte_98A1B0[v30] != (_BYTE)v12)\n        || s[v30]\n        || byte_98A1B0[v27] )\n      {\n        if ( byte_98A1B0[v17] == (_BYTE)v12 )\n        {\nLABEL_39:\n          if ( !s[v28] && !byte_98A1B0[v21] && !byte_98A1B0[v27] )\n          {\n            sub_44E1A0(\n              v17,\n              (unsigned __int64)&v55,\n              (unsigned __int64)v68,\n              (__int64)v63,\n              v61,\n              (_DWORD)v60,\n              v62,\n              v59,\n              (__int64)a7,\n              a8,\n              a9);\n            v17 = v54;\n            v15 = v56;\n            v14 = a11;\n          }\n          goto LABEL_43;\n        }\n      }\n      else\n      {\n        sub_44E1A0(\n          v30,\n          (unsigned __int64)&v55,\n          (unsigned __int64)v68,\n          (__int64)v63,\n          v61,\n          (_DWORD)v60,\n          v62,\n          v59,\n          (__int64)a7,\n          a8,\n          a9);\n        v17 = v54;\n        v15 = v56;\n        v14 = a11;\n        if ( byte_98A1B0[v28] == (_BYTE)v12 )\n          goto LABEL_39;\n      }\nLABEL_43:\n      if ( v14 == 1 )\n      {\n        if ( v58 == (unsigned __int8)byte_98A1B0[v21] )\n        {\n          v31 = sub_40AD00(v21);\n          v17 = v54;\n          v15 = v56;\n          v14 = a11;\n          v32 = v31;\n          if ( s[v31] != 1 )\n          {\n            s[v31] = 1;\n            v33 = sub_43B050(v31, 0LL);\n            v17 = v54;\n            v15 = v56;\n            v14 = a11;\n            if ( (_DWORD)v33 )\n            {\n              v34 = sub_43B6F0(v33, v32, 0LL);\n              v17 = v54;\n              v15 = v56;\n              v14 = a11;\n              if ( !v34 )\n              {\n                v35 = sub_40A6C0(v32, 361, (__int64)v69);\n                if ( (signed int)v35 > 0 )\n                {\n                  v36 = v35;\n                  v37 = 0LL;\n                  do\n                  {\n                    v38 = 4611686018427387896LL;\n                    do\n                    {\n                      while ( 1 )\n                      {\n                        v39 = dword_5641D0[v38];\n                        v40 = v69[v37];\n                        if ( byte_98A1B0[v39 + v40] == (_BYTE)v12 )\n                        {\n                          v41 = v40 + v39;\n                          if ( !s[v41] )\n                            break;\n                        }\n                        ++v38;\n                        if ( !(v38 * 4) )\n                          goto LABEL_56;\n                      }\n                      sub_44E1A0(\n                        v41,\n                        (unsigned __int64)&v55,\n                        (unsigned __int64)v68,\n                        (__int64)v63,\n                        v61,\n                        (_DWORD)v60,\n                        v62,\n                        v59,\n                        (__int64)a7,\n                        a8,\n                        a9);\n                      ++v38;\n                    }\n                    while ( v38 * 4 );\nLABEL_56:\n                    ++v37;\n                  }\n                  while ( v37 != v36 );\n                }\n                v14 = a11;\n                v15 = v56;\n                v17 = v54;\n              }\n            }\n          }\n        }\n        if ( v58 == (unsigned __int8)byte_98A1B0[v28] )\n        {\n          v42 = sub_40AD00(v17);\n          v15 = v56;\n          v14 = a11;\n          v43 = v42;\n          if ( s[v42] != 1 )\n          {\n            s[v42] = 1;\n            v44 = sub_43B050(v42, 0LL);\n            v15 = v56;\n            v14 = a11;\n            if ( (_DWORD)v44 )\n            {\n              v45 = sub_43B6F0(v44, v43, 0LL);\n              v15 = v56;\n              v14 = a11;\n              if ( !v45 )\n              {\n                v46 = sub_40A6C0(v43, 361, (__int64)v69);\n                v47 = (signed int)v60;\n                if ( (signed int)v46 > 0 )\n                {\n                  v48 = v46;\n                  v49 = 0LL;\n                  do\n                  {\n                    v50 = 4611686018427387896LL;\n                    do\n                    {\n                      while ( 1 )\n                      {\n                        v51 = dword_5641D0[v50];\n                        v52 = v69[v49];\n                        if ( byte_98A1B0[v51 + v52] == (_BYTE)v12 )\n                        {\n                          v53 = v52 + v51;\n                          if ( !s[v53] )\n                            break;\n                        }\n                        ++v50;\n                        if ( !(v50 * 4) )\n                          goto LABEL_70;\n                      }\n                      sub_44E1A0(\n                        v53,\n                        (unsigned __int64)&v55,\n                        (unsigned __int64)v68,\n                        (__int64)v63,\n                        v61,\n                        v47,\n                        v62,\n                        v59,\n                        (__int64)a7,\n                        a8,\n                        a9);\n                      ++v50;\n                    }\n                    while ( v50 * 4 );\nLABEL_70:\n                    ++v49;\n                  }\n                  while ( v49 != v48 );\n                }\n                v14 = a11;\n                v15 = v56;\n              }\n            }\n          }\n        }\n      }\n      if ( !v57 || (result = 1LL, *v60 < (signed int)v59) )\n        result = 0LL;\nLABEL_75:\n      if ( (result & 7) != 7 && result & 7 )\n        break;\n      if ( v16 >= 4 )\n        goto LABEL_80;\n    }\n    if ( (_DWORD)result )\n      return result;\nLABEL_80:\n    result = v55;\n    ++v64;\n  }\n  while ( v64 < v55 );\n  return result;\n}\n", 
            "funcStartAddr": "0x44d610L", 
            "funcEndAddr": "0x44df08L", 
            "funcName": "sub_44D610"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_44DF10(unsigned int a1, _DWORD *a2, __int64 a3)\n{\n  __int64 v4; // [rsp+18h] [rbp-10h]\n\n  LODWORD(v4) = 0;\n  return sub_44D610(a1, a2, a3, 0LL, 0LL, 0LL, 0LL, 0LL >> 63, 0, v4, 0);\n}\n", 
            "funcStartAddr": "0x44df10L", 
            "funcEndAddr": "0x44df45L", 
            "funcName": "sub_44DF10"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_44DF50(unsigned int a1, _DWORD *a2, __int64 a3, int a4)\n{\n  __int64 v5; // [rsp+18h] [rbp-10h]\n\n  LODWORD(v5) = 0;\n  return sub_44D610(a1, 0LL, 0LL, a2, a3, 20LL, 0LL, 0LL >> 63, a4, v5, 0);\n}\n", 
            "funcStartAddr": "0x44df50L", 
            "funcEndAddr": "0x44df8cL", 
            "funcName": "sub_44DF50"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_44DF90(unsigned int a1, _DWORD *a2, __int64 a3, int a4)\n{\n  __int64 v5; // [rsp+18h] [rbp-10h]\n\n  LODWORD(v5) = 1;\n  return sub_44D610(a1, 0LL, 0LL, a2, a3, 20LL, 0LL, 0LL >> 63, a4, v5, 0);\n}\n", 
            "funcStartAddr": "0x44df90L", 
            "funcEndAddr": "0x44dfccL", 
            "funcName": "sub_44DF90"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_44DFD0(unsigned int a1, _DWORD *a2, __int64 a3, _DWORD *a4, __int64 a5, int a6)\n{\n  __int64 v7; // [rsp+18h] [rbp-10h]\n\n  LODWORD(v7) = 0;\n  return sub_44D610(a1, a2, a3, a4, a5, 20LL, 0LL, 0LL >> 63, a6, v7, 0);\n}\n", 
            "funcStartAddr": "0x44dfd0L", 
            "funcEndAddr": "0x44e000L", 
            "funcName": "sub_44DFD0"
        }, 
        {
            "decompiledFuncCode": "void __fastcall __spoils<rdx,rcx,r8,r9,r10,r11,xmm4,xmm5> sub_44E000(unsigned int a1, _DWORD *a2, __int64 a3, int a4)\n{\n  sub_44D610(a1, 0LL, 0LL, 0LL, 0LL, 0LL, a2, a3, a4, 0LL, 2);\n}\n", 
            "funcStartAddr": "0x44e000L", 
            "funcEndAddr": "0x44e02dL", 
            "funcName": "sub_44E000"
        }, 
        {
            "decompiledFuncCode": "void __fastcall __spoils<rdx,rcx,r8,r9,r10,r11,xmm4,xmm5> sub_44E030(unsigned int a1, _DWORD *a2, __int64 a3, int a4)\n{\n  sub_44D610(a1, 0LL, 0LL, 0LL, 0LL, 0LL, a2, a3, a4, 1LL, 2);\n}\n", 
            "funcStartAddr": "0x44e030L", 
            "funcEndAddr": "0x44e05dL", 
            "funcName": "sub_44E030"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_44E060(__int64 a1, __int64 a2, double a3)\n{\n  __int64 result; // rax\n\n  if ( (unsigned int)a1 >= 4 )\n    sub_4340E0((__int64)\"engine/utils.c\", 0x720u, (__int64)\"n >= 0 && n < 4\", 0xFFFFFFFF, 0xFFFFFFFF);\n  if ( dword_88C24C )\n  {\n    sub_493870(a1, a2);\n    result = (signed int)a1;\n    *((double *)&xmmword_98A700 + (signed int)a1) = a3;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x44e060L", 
            "funcEndAddr": "0x44e0a3L", 
            "funcName": "sub_44E060"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_44E0B0(__int64 a1, __int64 a2, unsigned int a3, double a4)\n{\n  unsigned int v4; // er14\n  int result; // eax\n  double v6; // xmm1_8\n  double v7; // xmm0_8\n  double v8; // [rsp+0h] [rbp-28h]\n  double v9; // [rsp+0h] [rbp-28h]\n\n  v8 = a4;\n  v4 = a3;\n  if ( (unsigned int)a1 >= 4 )\n    sub_4340E0((__int64)\"engine/utils.c\", 0x72Fu, (__int64)\"n >= 0 && n < 4\", 0xFFFFFFFF, 0xFFFFFFFF);\n  if ( dword_88C24C )\n  {\n    result = sub_493870(a1, a2);\n    v6 = a4;\n    v7 = a4 - *((double *)&xmmword_98A700 + (signed int)a1);\n    if ( v7 > v8 )\n    {\n      sub_433F90(\"%s\", *(_QWORD *)&v7);\n      if ( v4 )\n        sub_433F90((char *)&off_49AB32, v4);\n      result = fprintf(stderr, \": %.2f sec\\n\", v9);\n    }\n    *((double *)&xmmword_98A700 + (signed int)a1) = v6;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x44e0b0L", 
            "funcEndAddr": "0x44e179L", 
            "funcName": "sub_44E0B0"
        }, 
        {
            "decompiledFuncCode": "void __spoils<rdx,rcx,r8,r9,r10,r11,xmm4,xmm5> sub_44E180()\n{\n  signed int v0; // eax\n  signed int v1; // ecx\n\n  v0 = sub_493F30();\n  v1 = 1;\n  if ( v0 )\n    v1 = v0;\n  dword_88C240 = v1;\n}\n", 
            "funcStartAddr": "0x44e180L", 
            "funcEndAddr": "0x44e198L", 
            "funcName": "sub_44E180"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_44E1A0(signed int a1, signed int *a2, __int64 a3, _DWORD *a4, __int64 a5, int *a6, __int64 a7, __int64 a8, _DWORD *a9, __int64 a10, signed int a11, __int64 a12, __int64 a13, __int64 a14, int a15)\n{\n  int *v15; // r15\n  __int64 v16; // r13\n  _DWORD *v17; // rbx\n  __int64 v18; // rbp\n  int v19; // edx\n  int v20; // er14\n  __int64 result; // rax\n  __int64 v22; // rsi\n  int v23; // edi\n  int v24; // edx\n  int *v25; // rbx\n  __int64 v26; // rbp\n  int v27; // [rsp+8h] [rbp-690h]\n  int v28[244]; // [rsp+10h] [rbp-688h]\n  char v29; // [rsp+3E0h] [rbp-2B8h]\n\n  v15 = a6;\n  v16 = a5;\n  v17 = a4;\n  v18 = a3;\n  if ( *(_BYTE *)(a12 + a1) )\n  {\n    v19 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0((__int64)\"engine/utils.c\", 0x6DBu, (__int64)\"mx[str] == 0\", v19 - 1, a1 - 20 * v19 - 1);\n  }\n  v20 = sub_40A6C0(a1, dword_565C68 * dword_565C68, a3 + 4LL * *a2);\n  v27 = a1;\n  result = sub_40BAB0(a1, a12, 1);\n  if ( v16 )\n  {\n    if ( !v17 )\n      sub_4340E0((__int64)\"engine/utils.c\", 0x6E3u, (__int64)\"num_stones\", 0xFFFFFFFF, 0xFFFFFFFF);\n    if ( v20 > 0 )\n    {\n      result = 0LL;\n      if ( v20 != 1 )\n      {\n        LODWORD(result) = 0;\n        do\n        {\n          if ( a15 )\n          {\n            *(_DWORD *)(v16 + 4LL * (signed int)(*v17)++) = *(_DWORD *)(v18 + 4LL * ((signed int)result + *a2));\n            *(_DWORD *)(v16 + 4LL * (signed int)(*v17)++) = *(_DWORD *)(v18 + 4LL * ((signed int)result + *a2 + 1));\n          }\n          result = (unsigned int)(result + 2);\n        }\n        while ( v20 - (v20 & 1) != (_DWORD)result );\n      }\n      if ( v20 & 1 && a15 )\n      {\n        result = *(unsigned int *)(v18 + 4 * (*a2 + (signed __int64)(signed int)result));\n        *(_DWORD *)(v16 + 4LL * (signed int)(*v17)++) = result;\n      }\n    }\n  }\n  *a2 += v20;\n  if ( a7 )\n  {\n    if ( !v15 )\n      sub_4340E0((__int64)\"engine/utils.c\", 0x6EFu, (__int64)\"num_libs\", 0xFFFFFFFF, 0xFFFFFFFF);\n    result = sub_408410(a1, 241, (unsigned __int64)v28);\n    if ( a11 > 0 && (signed int)result > a11 )\n      *a2 -= v20;\n    if ( (signed int)result > 0 )\n    {\n      result = (signed int)result;\n      v22 = 0LL;\n      do\n      {\n        v23 = v28[v22];\n        if ( !*(_BYTE *)(a13 + v23) )\n        {\n          *(_BYTE *)(a13 + v23) = 1;\n          if ( a15 != 0 && ((signed int)result <= a11 || a11 == 0) )\n          {\n            *(_DWORD *)(a7 + 4LL * *v15) = v23;\n            v24 = *v15 + 1;\n            *v15 = v24;\n            if ( v24 == (_DWORD)a8 )\n              break;\n          }\n        }\n        ++v22;\n      }\n      while ( v22 < result );\n    }\n  }\n  if ( a10 )\n  {\n    if ( !a9 )\n      sub_4340E0((__int64)\"engine/utils.c\", 0x708u, (__int64)\"num_adj\", 0xFFFFFFFF, 0xFFFFFFFF);\n    v25 = (int *)&v29;\n    result = sub_40A7D0(v27, (__int64)&v29);\n    if ( (signed int)result > 0 )\n    {\n      v26 = (unsigned int)result;\n      do\n      {\n        if ( a11 <= 0 || (result = sub_4083A0(*v25), (signed int)result <= a11) )\n        {\n          result = (unsigned int)*v25;\n          if ( !*(_BYTE *)(a14 + (signed int)result) )\n          {\n            *(_BYTE *)(a14 + (signed int)result) = 1;\n            if ( a15 )\n              *(_DWORD *)(a10 + 4LL * (signed int)(*a9)++) = result;\n          }\n        }\n        ++v25;\n        --v26;\n      }\n      while ( v26 );\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x44e1a0L", 
            "funcEndAddr": "0x44e4acL", 
            "funcName": "sub_44E1A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_44E4B0(int a1, float a2)\n{\n  __int64 result; // rax\n\n  if ( a2 > *((float *)&xmmword_98A6C0 + 1) )\n  {\n    *((float *)&xmmword_98A6C0 + 1) = a2;\n    DWORD1(xmmword_98A6F0) = a1;\n  }\n  if ( a2 > *(float *)&xmmword_98A6C0 )\n  {\n    DWORD1(xmmword_98A6C0) = xmmword_98A6C0;\n    result = (unsigned int)xmmword_98A6F0;\n    DWORD1(xmmword_98A6F0) = xmmword_98A6F0;\n    *(float *)&xmmword_98A6C0 = a2;\n    LODWORD(xmmword_98A6F0) = a1;\n  }\n  if ( a2 > *((float *)&xmmword_98A6B0 + 3) )\n  {\n    LODWORD(xmmword_98A6C0) = HIDWORD(xmmword_98A6B0);\n    result = HIDWORD(xmmword_98A6E0);\n    LODWORD(xmmword_98A6F0) = HIDWORD(xmmword_98A6E0);\n    *((float *)&xmmword_98A6B0 + 3) = a2;\n    HIDWORD(xmmword_98A6E0) = a1;\n  }\n  if ( a2 > *((float *)&xmmword_98A6B0 + 2) )\n  {\n    HIDWORD(xmmword_98A6B0) = DWORD2(xmmword_98A6B0);\n    result = DWORD2(xmmword_98A6E0);\n    HIDWORD(xmmword_98A6E0) = DWORD2(xmmword_98A6E0);\n    *((float *)&xmmword_98A6B0 + 2) = a2;\n    DWORD2(xmmword_98A6E0) = a1;\n  }\n  if ( a2 > *((float *)&xmmword_98A6B0 + 1) )\n  {\n    DWORD2(xmmword_98A6B0) = DWORD1(xmmword_98A6B0);\n    result = DWORD1(xmmword_98A6E0);\n    DWORD2(xmmword_98A6E0) = DWORD1(xmmword_98A6E0);\n    *((float *)&xmmword_98A6B0 + 1) = a2;\n    DWORD1(xmmword_98A6E0) = a1;\n  }\n  if ( a2 > *(float *)&xmmword_98A6B0 )\n  {\n    DWORD1(xmmword_98A6B0) = xmmword_98A6B0;\n    result = (unsigned int)xmmword_98A6E0;\n    DWORD1(xmmword_98A6E0) = xmmword_98A6E0;\n    *(float *)&xmmword_98A6B0 = a2;\n    LODWORD(xmmword_98A6E0) = a1;\n  }\n  if ( a2 > *((float *)&xmmword_98A6A0 + 3) )\n  {\n    LODWORD(xmmword_98A6B0) = HIDWORD(xmmword_98A6A0);\n    result = HIDWORD(xmmword_98A6D0);\n    LODWORD(xmmword_98A6E0) = HIDWORD(xmmword_98A6D0);\n    *((float *)&xmmword_98A6A0 + 3) = a2;\n    HIDWORD(xmmword_98A6D0) = a1;\n  }\n  if ( a2 > *((float *)&xmmword_98A6A0 + 2) )\n  {\n    HIDWORD(xmmword_98A6A0) = DWORD2(xmmword_98A6A0);\n    result = DWORD2(xmmword_98A6D0);\n    HIDWORD(xmmword_98A6D0) = DWORD2(xmmword_98A6D0);\n    *((float *)&xmmword_98A6A0 + 2) = a2;\n    DWORD2(xmmword_98A6D0) = a1;\n  }\n  if ( a2 > *((float *)&xmmword_98A6A0 + 1) )\n  {\n    DWORD2(xmmword_98A6A0) = DWORD1(xmmword_98A6A0);\n    result = DWORD1(xmmword_98A6D0);\n    DWORD2(xmmword_98A6D0) = DWORD1(xmmword_98A6D0);\n    *((float *)&xmmword_98A6A0 + 1) = a2;\n    DWORD1(xmmword_98A6D0) = a1;\n  }\n  if ( a2 > *(float *)&xmmword_98A6A0 )\n  {\n    DWORD1(xmmword_98A6A0) = xmmword_98A6A0;\n    result = (unsigned int)xmmword_98A6D0;\n    DWORD1(xmmword_98A6D0) = xmmword_98A6D0;\n    *(float *)&xmmword_98A6A0 = a2;\n    LODWORD(xmmword_98A6D0) = a1;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x44e4b0L", 
            "funcEndAddr": "0x44e66fL", 
            "funcName": "sub_44E4B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_44E830(signed int *a1, __int64 a2, unsigned int a3, __int64 a4, double a5)\n{\n  unsigned int v5; // er12\n  __int64 v6; // r9\n  __int64 v7; // rdx\n  unsigned int v8; // eax\n  __int64 v9; // rbx\n  int *v10; // rdi\n  __int64 v11; // rcx\n  __int64 v12; // rdx\n  int v13; // eax\n  int v14; // ebp\n  signed int v15; // ebx\n  char *v16; // r13\n  __int64 v17; // r15\n  signed __int64 v18; // rsi\n  unsigned __int64 v19; // rax\n  __int64 v20; // rcx\n  unsigned int v21; // ecx\n  unsigned int v22; // ecx\n  __int64 v23; // rdx\n  unsigned int v24; // edx\n  __int64 v25; // rdx\n  unsigned int v26; // edx\n  int *v27; // r14\n  __int64 v28; // r15\n  __int64 v29; // rbx\n  int v30; // er12\n  signed __int64 v31; // rbp\n  __int64 v32; // rsi\n  __int64 v33; // rax\n  int v34; // ecx\n  int v35; // eax\n  unsigned int v36; // ebp\n  __int64 v37; // rax\n  int v38; // er12\n  signed __int64 v39; // rbp\n  __int64 v40; // rsi\n  int v41; // ecx\n  int v42; // eax\n  unsigned int v43; // ebp\n  int v44; // ecx\n  int v45; // eax\n  signed __int64 v46; // rcx\n  signed __int64 v47; // rdx\n  __int64 v48; // rbx\n  signed __int64 v49; // rbx\n  unsigned int v50; // ebp\n  __int64 v51; // rax\n  unsigned int v52; // er13\n  _DWORD *v53; // rbx\n  signed int v54; // er15\n  unsigned __int64 v55; // rax\n  signed __int64 v56; // rcx\n  int v57; // eax\n  unsigned int v58; // ebx\n  signed __int64 v59; // rcx\n  int v60; // eax\n  unsigned int v61; // ebx\n  int *v62; // rsi\n  int v63; // edx\n  signed __int64 v64; // r13\n  signed __int64 v65; // r15\n  signed int *v66; // rbx\n  signed __int64 v67; // rbp\n  __int64 v68; // r14\n  __int64 v69; // rax\n  signed __int64 v70; // rax\n  unsigned __int64 v71; // rcx\n  int v72; // eax\n  unsigned int v73; // ecx\n  int v74; // eax\n  int v75; // eax\n  signed __int64 v76; // r14\n  __int64 v77; // r12\n  signed int v78; // er15\n  signed int v79; // ebx\n  __int64 v80; // rax\n  signed __int64 v81; // rax\n  unsigned int v82; // ecx\n  int v83; // eax\n  __int64 v84; // rdx\n  float *v85; // rdx\n  signed __int64 v86; // rdx\n  signed int v87; // edx\n  int v88; // eax\n  signed int v89; // er9\n  unsigned __int64 v90; // rsi\n  unsigned int v91; // ecx\n  signed int v92; // er8\n  __int64 v93; // rdi\n  unsigned __int64 v94; // rbx\n  signed __int64 v95; // rcx\n  __int64 v96; // rdi\n  unsigned int v97; // edx\n  signed __int64 v98; // rbp\n  int v99; // eax\n  __int64 v100; // rsi\n  __int64 v101; // rdx\n  int v102; // ebp\n  int v103; // edi\n  signed __int64 v104; // rdi\n  signed int *v105; // rbx\n  signed __int64 v106; // rbp\n  int v107; // eax\n  int v108; // ecx\n  __int64 v109; // rsi\n  int v110; // edx\n  int v111; // edx\n  signed __int64 v112; // rax\n  signed __int64 v113; // rcx\n  __int64 v114; // rax\n  signed __int64 v115; // rbx\n  __int64 v116; // rbp\n  int v117; // ecx\n  unsigned int v118; // eax\n  __int64 v119; // r15\n  char *v120; // r12\n  signed __int64 v121; // r13\n  __int64 v122; // rbx\n  __int64 v123; // r14\n  char v124; // al\n  char v125; // cl\n  char v126; // al\n  char v127; // cl\n  char *v128; // rdi\n  signed int v129; // ecx\n  __int64 v130; // rax\n  unsigned int v131; // er12\n  unsigned int v132; // er14\n  signed __int64 v133; // r13\n  int v134; // eax\n  signed __int64 v135; // rbp\n  __int64 v136; // rbx\n  int v137; // eax\n  unsigned int v138; // ebx\n  signed int *v139; // rax\n  int v140; // ecx\n  __int64 v141; // rdx\n  int *v142; // rbx\n  signed __int64 v143; // rbp\n  __int64 v144; // rsi\n  __int64 v145; // rdx\n  int v146; // eax\n  __int64 v147; // rcx\n  unsigned int v148; // er12\n  int v149; // eax\n  signed int v150; // er14\n  int v151; // er15\n  signed __int64 v152; // rbp\n  unsigned int v153; // ebx\n  signed __int64 v154; // r13\n  unsigned int v155; // esi\n  float *v156; // r12\n  float v157; // xmm0_4\n  signed __int64 v158; // rbx\n  signed int v159; // er15\n  float v160; // xmm2_4\n  __int64 v161; // rax\n  unsigned __int64 v162; // rcx\n  __int64 v163; // rdx\n  unsigned __int64 v164; // rdi\n  signed __int64 v165; // r10\n  unsigned __int64 v166; // rsi\n  unsigned __int64 v167; // rax\n  char v168; // r9\n  signed __int64 v169; // rbp\n  unsigned __int64 v170; // rax\n  __int128 v171; // xmm1\n  __int128 v172; // xmm1\n  __int128 v173; // xmm1\n  __int128 v174; // xmm0\n  __int128 v175; // xmm1\n  unsigned __int64 v176; // rsi\n  unsigned __int64 v177; // rax\n  __int128 v178; // xmm1\n  __int128 v179; // xmm1\n  signed __int64 v180; // r14\n  unsigned int v181; // ebx\n  __int64 v182; // rsi\n  __int64 v183; // rdx\n  __int64 v184; // rcx\n  signed __int64 v185; // rbx\n  int v186; // eax\n  int v187; // eax\n  int v188; // eax\n  int v189; // edx\n  int v190; // eax\n  signed __int64 v191; // rdi\n  unsigned __int64 v192; // rdx\n  signed __int64 v193; // rcx\n  __int64 v194; // r14\n  signed __int64 v195; // rdx\n  signed int v196; // er13\n  int *v197; // r12\n  __int64 v198; // rbp\n  signed __int64 v199; // r15\n  signed __int64 v200; // rbx\n  signed int v201; // ebp\n  float v202; // xmm1_4\n  unsigned __int64 v203; // r13\n  signed int v204; // er14\n  __int64 v205; // rax\n  signed __int64 v206; // rcx\n  unsigned int v207; // eax\n  __int64 v208; // rcx\n  float v209; // xmm0_4\n  signed __int64 v210; // rsi\n  float *v211; // rax\n  bool v212; // al\n  float *v213; // rbp\n  signed __int64 v214; // rsi\n  unsigned __int64 v215; // rdx\n  unsigned __int64 v216; // rax\n  __int64 v217; // rcx\n  unsigned __int64 v218; // rdi\n  unsigned __int64 v219; // rdx\n  char v220; // r8\n  signed __int64 v221; // rbx\n  unsigned __int64 v222; // rbp\n  __int128 v223; // xmm1\n  __int128 v224; // xmm1\n  __int128 v225; // xmm1\n  __int128 v226; // xmm1\n  unsigned __int64 v227; // rbp\n  __int128 v228; // xmm1\n  __int128 v229; // xmm1\n  unsigned __int64 v230; // rdx\n  unsigned __int64 v231; // rax\n  __int64 v232; // rcx\n  unsigned __int64 v233; // rdi\n  signed __int64 v234; // rsi\n  unsigned __int64 v235; // rdx\n  char v236; // r8\n  signed __int64 v237; // rbp\n  unsigned __int64 v238; // rbx\n  __int128 v239; // xmm1\n  __int128 v240; // xmm1\n  __int128 v241; // xmm1\n  __int128 v242; // xmm1\n  unsigned __int64 v243; // rbx\n  __int128 v244; // xmm1\n  __int128 v245; // xmm1\n  signed __int64 v246; // rax\n  float v247; // xmm0_4\n  float *v248; // rbx\n  unsigned int v250; // [rsp+Ch] [rbp-93Ch]\n  unsigned int v251; // [rsp+10h] [rbp-938h]\n  _DWORD *v252; // [rsp+10h] [rbp-938h]\n  __int64 v253; // [rsp+10h] [rbp-938h]\n  signed __int64 v254; // [rsp+18h] [rbp-930h]\n  __int64 v255; // [rsp+18h] [rbp-930h]\n  int v256; // [rsp+18h] [rbp-930h]\n  int v257; // [rsp+18h] [rbp-930h]\n  unsigned int v258; // [rsp+20h] [rbp-928h]\n  char *v259; // [rsp+20h] [rbp-928h]\n  unsigned int v260; // [rsp+20h] [rbp-928h]\n  __int64 v261; // [rsp+28h] [rbp-920h]\n  int v262; // [rsp+28h] [rbp-920h]\n  signed __int64 v263; // [rsp+28h] [rbp-920h]\n  __int64 v264; // [rsp+28h] [rbp-920h]\n  signed int v265; // [rsp+30h] [rbp-918h]\n  signed __int64 v266; // [rsp+30h] [rbp-918h]\n  unsigned int v267; // [rsp+30h] [rbp-918h]\n  signed __int64 v268; // [rsp+38h] [rbp-910h]\n  __int64 v269; // [rsp+38h] [rbp-910h]\n  signed __int64 v270; // [rsp+40h] [rbp-908h]\n  signed __int64 v271; // [rsp+40h] [rbp-908h]\n  signed int v272; // [rsp+40h] [rbp-908h]\n  int v273; // [rsp+48h] [rbp-900h]\n  __int64 v274; // [rsp+48h] [rbp-900h]\n  __int64 v275; // [rsp+48h] [rbp-900h]\n  unsigned int v276; // [rsp+50h] [rbp-8F8h]\n  int v277; // [rsp+50h] [rbp-8F8h]\n  unsigned int v278; // [rsp+54h] [rbp-8F4h]\n  __int64 v279; // [rsp+58h] [rbp-8F0h]\n  int *v280; // [rsp+60h] [rbp-8E8h]\n  __int64 v281; // [rsp+60h] [rbp-8E8h]\n  __int64 v282; // [rsp+68h] [rbp-8E0h]\n  unsigned int v283; // [rsp+68h] [rbp-8E0h]\n  unsigned int v284; // [rsp+70h] [rbp-8D8h]\n  signed __int64 v285; // [rsp+78h] [rbp-8D0h]\n  int v286; // [rsp+78h] [rbp-8D0h]\n  float v287; // [rsp+80h] [rbp-8C8h]\n  signed __int64 v288; // [rsp+80h] [rbp-8C8h]\n  signed __int64 v289; // [rsp+88h] [rbp-8C0h]\n  unsigned int v290; // [rsp+88h] [rbp-8C0h]\n  signed int *v291; // [rsp+90h] [rbp-8B8h]\n  float *v292; // [rsp+98h] [rbp-8B0h]\n  int v293; // [rsp+A0h] [rbp-8A8h]\n  unsigned int v294; // [rsp+230h] [rbp-718h]\n  char v295; // [rsp+234h] [rbp-714h]\n  char s[400]; // [rsp+5F0h] [rbp-358h]\n  char v297; // [rsp+780h] [rbp-1C8h]\n\n  v279 = a4;\n  v287 = *(float *)&a5;\n  v5 = a3;\n  v292 = (float *)a2;\n  v291 = a1;\n  sub_44E060(2LL, a2, a5);\n  v250 = v5;\n  if ( dword_88C260 && !dword_88C21C )\n    goto LABEL_80;\n  if ( dword_88C268 )\n    sub_433F90(\"\\nLooking for additional attack and defense moves. Trying moves ...\\n\");\n  v6 = dword_565C68;\n  if ( dword_565C68 <= 0LL )\n  {\n    LODWORD(v9) = 0;\n  }\n  else\n  {\n    v7 = 0LL;\n    v8 = 21;\n    LODWORD(v9) = 0;\n    do\n    {\n      v10 = &dword_8E9524[95 * v8];\n      v11 = (unsigned int)v6;\n      a2 = v8;\n      do\n      {\n        if ( byte_98A1B0[a2] && a2 == *(v10 - 42) && *(v10 - 20) && *v10 )\n        {\n          v9 = (signed int)v9;\n          *(&v294 + v9) = a2;\n          LODWORD(v9) = v9 + 1;\n        }\n        ++a2;\n        v10 += 95;\n        --v11;\n      }\n      while ( v11 );\n      ++v7;\n      v8 += 20;\n    }\n    while ( v7 != v6 );\n  }\n  v258 = v9;\n  sub_44B020();\n  v13 = dword_565C68;\n  if ( dword_565C68 <= 0 )\n    goto LABEL_77;\n  v14 = 3 - v5;\n  LODWORD(v12) = 21;\n  v15 = 87380;\n  a2 = 0LL;\n  v251 = 3 - v5;\n  do\n  {\n    if ( v13 <= 0 )\n      goto LABEL_76;\n    v273 = v12;\n    v16 = (char *)&unk_8B2380 + 564 * (unsigned int)v12;\n    v282 = a2;\n    v17 = (20 * (_DWORD)a2 + 21) & 0xFFFFFFFD;\n    v18 = 0LL;\n    v261 = v17;\n    do\n    {\n      v254 = v18 + v17;\n      v19 = 0LL;\n      do\n      {\n        v20 = *(signed int *)&v16[4 * v19 - 8];\n        if ( v20 < 0 || (v21 = dword_97ABB0[3 * v20], v21 <= 0x10) && _bittest(&v15, v21) )\n        {\n          v22 = v19;\n          goto LABEL_35;\n        }\n        v22 = v19 + 1;\n        v23 = *(signed int *)&v16[4 * v19 - 4];\n        if ( v23 < 0 )\n          goto LABEL_35;\n        v24 = dword_97ABB0[3 * v23];\n        if ( v24 <= 0x10 )\n        {\n          if ( _bittest(&v15, v24) )\n            goto LABEL_35;\n        }\n        v22 = v19 + 2;\n        v25 = *(signed int *)&v16[4 * v19];\n        if ( v25 < 0 )\n          goto LABEL_35;\n        v26 = dword_97ABB0[3 * v25];\n        if ( v26 <= 0x10 )\n        {\n          if ( _bittest(&v15, v26) )\n            goto LABEL_35;\n        }\n        v19 += 3LL;\n      }\n      while ( v19 < 0x78 );\n      if ( (_DWORD)v19 != 120 )\n      {\n        v22 = 120;\nLABEL_35:\n        if ( dword_8B2378[141 * v254 + v22] != -1 )\n        {\n          v270 = v18;\n          if ( dword_88C268 )\n            sub_433F90(\"%1m \", (unsigned int)v254);\n          if ( (unsigned int)sub_406880((unsigned int)v254, v5, \"find_more_attack_and_defense_moves\", 0, 0, 0) )\n          {\n            if ( (signed int)v258 > 0 )\n            {\n              v265 = 0;\n              v27 = (int *)&v294;\n              v28 = v258;\n              while ( 1 )\n              {\n                v29 = *v27;\n                if ( (unsigned __int8)byte_98A1B0[v29] == v5 && !(unsigned int)sub_4207C0(v254, v29) )\n                  break;\nLABEL_58:\n                if ( v14 != (unsigned __int8)byte_98A1B0[v29] )\n                  goto LABEL_72;\n                v37 = sub_420590(v254, v29);\n                if ( (_DWORD)v37 )\n                  goto LABEL_72;\n                v38 = sub_43B6F0(v37, v29, 0LL);\n                v39 = 95 * v29;\n                if ( v38 < dword_8E9524[95 * v29] )\n                {\n                  v40 = v251;\n                  if ( !(unsigned int)sub_406880(\n                                        (unsigned int)dword_8E94FC[v39],\n                                        v251,\n                                        \"find_more_attack_and_defense_moves\",\n                                        0,\n                                        0,\n                                        0) )\n                    goto LABEL_65;\n                  v40 = 0LL;\n                  v41 = 5 - (unsigned __int64)sub_43B050(v29, 0LL);\n                  if ( v41 <= v38 || (v38 = v41, v41 < dword_8E9524[v39]) )\n                  {\n                    sub_407030();\nLABEL_65:\n                    v42 = dword_88C268;\n                    if ( !v265 && dword_88C268 )\n                    {\n                      sub_433F90(\"\\n\", v40);\n                      v42 = dword_88C268;\n                    }\n                    v43 = 5 - v38;\n                    if ( v42 )\n                      sub_433F90(\n                        \"%ofound extra point of attack of %1m at %1m code %d\\n\",\n                        (unsigned int)v29,\n                        (unsigned int)v254,\n                        v43);\n                    sub_420DE0(v254, v29, v43);\n                    v265 = 1;\n                    goto LABEL_71;\n                  }\n                  sub_407030();\n                }\nLABEL_71:\n                v5 = v250;\n                v14 = v251;\nLABEL_72:\n                ++v27;\n                if ( !--v28 )\n                  goto LABEL_73;\n              }\n              v30 = sub_43B050(v29, 0LL);\n              v31 = 95 * v29;\n              if ( v30 < dword_8E94D4[95 * v29] )\n              {\n                v32 = v251;\n                v33 = sub_406880((unsigned int)dword_8E94AC[v31], v251, \"find_more_attack_and_defense_moves\", 0, 0, 0);\n                if ( !(_DWORD)v33 )\n                  goto LABEL_50;\n                if ( byte_98A1B0[v29] )\n                {\n                  v32 = 0LL;\n                  v34 = 5 - (unsigned __int64)sub_43B6F0(v33, v29, 0LL);\n                  if ( v34 <= v30 || (v30 = v34, v34 < dword_8E94D4[v31]) )\n                  {\n                    sub_407030();\nLABEL_50:\n                    v35 = dword_88C268;\n                    if ( !v265 && dword_88C268 )\n                    {\n                      sub_433F90(\"\\n\", v32);\n                      v35 = dword_88C268;\n                    }\n                    v36 = 5 - v30;\n                    if ( v35 )\n                      sub_433F90(\n                        \"%ofound extra point of defense of %1m at %1m code %d\\n\",\n                        (unsigned int)v29,\n                        (unsigned int)v254,\n                        v36);\n                    sub_421030(v254, v29, v36);\n                    v265 = 1;\n                    goto LABEL_57;\n                  }\n                }\n                sub_407030();\n              }\nLABEL_57:\n              v5 = v250;\n              v14 = v251;\n              goto LABEL_58;\n            }\nLABEL_73:\n            sub_407030();\n            v15 = 87380;\n            v17 = v261;\n            v18 = v270;\n          }\n        }\n      }\n      ++v18;\n      v13 = dword_565C68;\n      v16 += 564;\n    }\n    while ( v18 < dword_565C68 );\n    LODWORD(v12) = v273;\n    a2 = v282;\nLABEL_76:\n    ++a2;\n    v12 = (unsigned int)(v12 + 20);\n  }\n  while ( a2 < v13 );\nLABEL_77:\n  if ( dword_88C268 )\n    sub_433F90(\"\\n\", a2, v12);\n  sub_44B060();\n  a5 = 1.0;\n  a2 = (__int64)\"  find_more_attack_and_defense_moves\";\n  sub_44E0B0(2LL, (__int64)\"  find_more_attack_and_defense_moves\", 0, 1.0);\nLABEL_80:\n  v44 = dword_88C268;\n  v45 = dword_88C268;\n  if ( dword_88C268 > 0 )\n    v45 = dword_88C268-- - 1;\n  v262 = v44;\n  if ( dword_565C78 < 6 )\n    goto LABEL_166;\n  if ( v45 )\n    sub_433F90(\"\\nTrying to upgrade strategical attack and defense moves.\\n\", a2, a5);\n  v46 = 21LL;\n  while ( 2 )\n  {\n    if ( byte_98A1B0[v46] == 3 )\n      goto LABEL_136;\n    v47 = 0LL;\n    v255 = v46;\n    while ( 2 )\n    {\n      v48 = dword_8B2378[141 * v46 + v47];\n      v294 = 0;\n      if ( v48 < 0 )\n        break;\n      v266 = v47;\n      v49 = 4 * v48;\n      v50 = dword_97ABB4[(unsigned __int64)(3 * v49) / 4];\n      v51 = (signed int)v50;\n      switch ( dword_97ABB0[(unsigned __int64)(3 * v49) / 4] )\n      {\n        case 2:\n        case 4:\n        case 6:\n        case 8:\n        case 10:\n        case 12:\n        case 44:\n        case 46:\n          v294 = dword_97ABB4[(unsigned __int64)(3 * v49) / 4];\n          v52 = 0;\n          goto LABEL_91;\n        case 14:\n          v50 = *((_DWORD *)&xmmword_954FB0 + 19 * dword_983560[v50] + 2);\n          v294 = v50;\n          v52 = *((_DWORD *)&xmmword_954FB0 + 19 * dword_984470[v51] + 2);\n          if ( v50 == v52 )\n            v52 = 0;\n          goto LABEL_91;\n        case 54:\n          if ( dword_989C10[v50] == 1 )\n          {\n            v62 = dword_977370;\n            v63 = 1;\n          }\n          else\n          {\n            v62 = dword_96CAB0;\n            v63 = 2;\n          }\n          sub_4253A0(dword_989EE0[v50], (__int64)v62, v63, (__int64)&v294, 1);\n          v50 = v294;\n          v52 = 0;\n          if ( !v294 )\n            goto LABEL_135;\nLABEL_91:\n          v53 = (_DWORD *)(3 * v49 + 9939888);\n          v54 = 1;\n          v252 = v53;\n          break;\n        default:\n          goto LABEL_135;\n      }\n      while ( 2 )\n      {\n        if ( v54 != 1 )\n          v50 = v52;\n        if ( !v50\n          || *((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * (signed int)v50 + 1) + 15) == 5\n          || *((_DWORD *)&xmmword_954FC0 + 19 * (signed int)v50 + 3) != 2 )\n        {\n          goto LABEL_488;\n        }\n        v55 = (unsigned int)*v53;\n        if ( v55 <= 0x36 )\n        {\n          v56 = 17592186044500LL;\n          if ( _bittest64(&v56, v55) )\n            goto LABEL_100;\n          if ( v55 == 54 )\n          {\n            if ( 3 - v5 != (unsigned __int8)byte_98A1B0[v50] )\n            {\nLABEL_111:\n              LODWORD(v55) = *v53;\n              goto LABEL_112;\n            }\nLABEL_100:\n            if ( (unsigned int)sub_4209F0(v255, v50) )\n              goto LABEL_111;\n            v293 = 0;\n            v57 = sub_42F0B0(v255, v50, &v293);\n            v58 = v57;\n            if ( v57 >= *((_DWORD *)&xmmword_954FD0 + 19 * (signed int)v50 + 1) )\n            {\n              if ( v57 == 3 )\n              {\n                sub_421FC0(v255, v50, v293);\n                if ( !dword_88C268 )\n                  goto LABEL_110;\nLABEL_109:\n                sub_433F90(\"Move at %1m owl attacks %1m, result %d.\\n\", v255, v50, v58, a5);\n              }\n              else\n              {\n                sub_422400(v255, v50, v57);\n                if ( dword_88C268 )\n                  goto LABEL_109;\n              }\n            }\nLABEL_110:\n            v53 = v252;\n            goto LABEL_111;\n          }\n        }\nLABEL_112:\n        if ( (unsigned int)v55 > 0x36 )\n          goto LABEL_488;\n        v55 = (unsigned int)v55;\n        v59 = 70368744199424LL;\n        if ( !_bittest64(&v59, (unsigned int)v55) && (v55 != 54 || (unsigned __int8)byte_98A1B0[v50] != v250) )\n          goto LABEL_488;\n        if ( (unsigned int)sub_420BD0(v255, v50) )\n        {\nLABEL_488:\n          if ( !v54 )\n            break;\n          goto LABEL_92;\n        }\n        v293 = 0;\n        v60 = sub_42EAE0((unsigned int)v255, v50, (__int64)&v293);\n        v61 = v60;\n        if ( v60 >= *((_DWORD *)&xmmword_954FE0 + 19 * (signed int)v50 + 1) )\n        {\n          if ( v60 == 2 )\n          {\n            sub_4220D0(v255, v50, v293);\n            if ( !dword_88C268 )\n              goto LABEL_126;\n          }\n          else\n          {\n            sub_4224A0(v255, v50, v60);\n            if ( !dword_88C268 )\n              goto LABEL_126;\n          }\n          sub_433F90(\"Move at %1m owl defends %1m, result %d.\\n\", (unsigned int)v255, v50, v61, a5);\n        }\nLABEL_126:\n        v53 = v252;\n        if ( v54 )\n        {\nLABEL_92:\n          v50 = v294;\n          --v54;\n          continue;\n        }\n        break;\n      }\nLABEL_135:\n      v47 = v266 + 1;\n      v46 = v255;\n      if ( (unsigned __int64)(v266 + 1) < 0x78 )\n        continue;\n      break;\n    }\nLABEL_136:\n    if ( ++v46 != 400 )\n      continue;\n    break;\n  }\n  v64 = 21LL;\n  v65 = 91603599360LL;\n  do\n  {\n    if ( (unsigned __int8)(byte_98A1B0[v64] - 1) <= 1u\n      && v64 == *((_DWORD *)&xmmword_954FB0 + 19 * v64 + 2)\n      && *((_DWORD *)&xmmword_954FC0 + 19 * v64 + 3) == 2 )\n    {\n      v66 = (signed int *)&unk_8B51BC;\n      v67 = 21LL;\n      do\n      {\n        if ( !byte_98A1B0[v67] )\n        {\n          v68 = 0LL;\n          while ( 1 )\n          {\n            v69 = v66[v68];\n            if ( v69 < 0 )\n              goto LABEL_163;\n            v70 = 3 * v69;\n            v71 = (unsigned int)dword_97ABB0[v70];\n            if ( v71 <= 0x24 && _bittest64(&v65, v71) && (unsigned int)sub_416160(dword_97ABB4[v70], v64) )\n              break;\n            if ( (unsigned __int64)++v68 >= 0x78 )\n              goto LABEL_163;\n          }\n          v72 = (unsigned __int8)byte_98A1B0[v64];\n          v73 = v250;\n          if ( v72 != v250 )\n            goto LABEL_152;\n          if ( (unsigned int)sub_420BD0(v67, v64) )\n          {\n            v72 = (unsigned __int8)byte_98A1B0[v64];\n            v73 = v250;\nLABEL_152:\n            if ( v72 != v73 && !(unsigned int)sub_4209F0(v67, v64) )\n            {\n              v293 = 0;\n              v74 = sub_42F0B0((unsigned int)v67, (unsigned int)v64, &v293);\n              if ( v74 >= *((_DWORD *)&xmmword_954FD0 + 19 * v64 + 1) )\n              {\n                if ( v74 == 3 )\n                  sub_421FC0(v67, v64, v293);\n                else\n                  sub_422400(v67, v64, v74);\n              }\n            }\n            goto LABEL_163;\n          }\n          v293 = 0;\n          v75 = sub_42EAE0((unsigned int)v67, (unsigned int)v64, (__int64)&v293);\n          if ( v75 >= *((_DWORD *)&xmmword_954FE0 + 19 * v64 + 1) )\n          {\n            if ( v75 == 2 )\n              sub_4220D0(v67, v64, v293);\n            else\n              sub_4224A0(v67, v64, v75);\n          }\n        }\nLABEL_163:\n        ++v67;\n        v66 += 141;\n      }\n      while ( v67 != 400 );\n    }\n    ++v64;\n  }\n  while ( v64 != 400 );\n  a5 = 1.0;\n  a2 = (__int64)\"  find_more_owl_attack_and_defense_moves\";\n  sub_44E0B0(2LL, (__int64)\"  find_more_owl_attack_and_defense_moves\", 0, 1.0);\n  v5 = v250;\n  v44 = v262;\nLABEL_166:\n  dword_88C268 = v44 - (v44 > 0);\n  sub_44E060(3LL, a2, a5);\n  v76 = 21LL;\n  while ( 2 )\n  {\n    if ( byte_98A1B0[v76] != 3 )\n    {\n      v77 = 0LL;\n      v78 = 0;\n      v79 = 0;\n      while ( 2 )\n      {\n        v80 = dword_8B2378[141 * v76 + v77];\n        if ( v80 != -1 )\n        {\n          v81 = 4 * v80;\n          v82 = dword_97ABB0[(unsigned __int64)(3 * v81) / 4];\n          v256 = 1;\n          v83 = dword_97ABB4[(unsigned __int64)(3 * v81) / 4];\n          v84 = v83;\n          switch ( __ROR4__(v82 - 2, 1) )\n          {\n            case 0:\n            case 1:\n            case 2:\n            case 0xC:\n            case 0xD:\n            case 0xE:\n            case 0x1D:\n              if ( (signed int)v82 <= 5 )\n              {\n                if ( v82 != 2 && v82 != 4 )\n                {\nLABEL_176:\n                  v85 = (float *)((char *)&xmmword_954FC0 + 76 * v83);\n                  goto LABEL_185;\n                }\n                goto LABEL_179;\n              }\n              if ( v82 != 60 )\n              {\n                if ( v82 != 6 )\n                  goto LABEL_176;\nLABEL_179:\n                v86 = 95LL * v83;\n                goto LABEL_184;\n              }\n              v83 = dword_98696C[4 * v83];\n              v86 = 95LL * dword_98696C[4 * v84];\nLABEL_184:\n              v85 = (float *)&dword_8E9478[v86];\nLABEL_185:\n              if ( (signed int)*v85 > 7 )\n                goto LABEL_255;\n              if ( v82 <= 6 && (v87 = 84, _bittest(&v87, v82)) )\n              {\n                v88 = sub_40A7D0(v83, (__int64)&v294);\n                v89 = v79;\n                if ( v88 <= 0 )\n                {\n                  v92 = 0;\n                  v91 = 0;\n                }\n                else\n                {\n                  v90 = 0LL;\n                  v91 = 0;\n                  v92 = 0;\n                  do\n                  {\n                    v93 = (signed int)*(&v294 + v90);\n                    if ( (unsigned __int8)byte_98A1B0[v93] == v250 )\n                    {\n                      if ( v90 )\n                      {\n                        v94 = 0LL;\n                        do\n                        {\n                          if ( *((_DWORD *)&xmmword_954FB0 + 19 * (signed int)*(&v294 + v94) + 1) == *((_DWORD *)&xmmword_954FB0 + 19 * v93 + 1) )\n                            break;\n                          ++v94;\n                        }\n                        while ( v94 < v90 );\n                      }\n                      else\n                      {\n                        LODWORD(v94) = 0;\n                      }\n                      if ( v90 == (unsigned int)v94 )\n                        v91 = v93;\n                      v92 += v90 == v94;\n                    }\n                    ++v90;\n                  }\n                  while ( v90 != v88 );\n                }\n              }\n              else\n              {\n                v95 = 104LL * *((signed int *)&xmmword_954FB0 + 19 * v83 + 1);\n                v96 = *(signed int *)((char *)ptr + v95 + 44);\n                if ( v96 <= 0 )\n                {\n                  v97 = 0;\n                  goto LABEL_232;\n                }\n                v97 = *((_DWORD *)ptr + 26 * *(signed int *)((char *)ptr + v95 + 4));\n                v98 = 19LL * (signed int)v97;\n                v92 = 0;\n                if ( *(_DWORD *)((char *)&xmmword_954FB0 + v98 * 4) == v250 )\n                {\n                  v99 = dword_954FF0[v98];\n                  if ( v99 == 1 )\n                    v79 = 1;\n                  if ( v99 == 1 )\n                    v78 = 1;\n                  v92 = 1;\n                  if ( (signed int)v96 < 2 )\n                    goto LABEL_232;\n                }\n                else\n                {\n                  v97 = 0;\n                  if ( (signed int)v96 < 2 )\n                    goto LABEL_232;\n                }\n                v89 = v79;\n                v104 = v96 - 1;\n                v105 = (signed int *)((char *)ptr + v95 + 8);\n                do\n                {\n                  v91 = *((_DWORD *)ptr + 26 * *v105);\n                  v106 = 19LL * (signed int)v91;\n                  if ( *(_DWORD *)((char *)&xmmword_954FB0 + v106 * 4) == v250 )\n                  {\n                    ++v92;\n                    v107 = dword_954FF0[v106];\n                    if ( v107 == 1 )\n                      v89 = 1;\n                    if ( v107 == 1 )\n                      v78 = 1;\n                    v97 = *((_DWORD *)ptr + 26 * *v105);\n                  }\n                  else\n                  {\n                    v91 = v97;\n                  }\n                  ++v105;\n                  --v104;\n                }\n                while ( v104 );\n              }\n              v97 = v91;\n              v79 = v89;\n              if ( v92 > 1 )\n                goto LABEL_246;\nLABEL_232:\n              v108 = (unsigned __int8)byte_98A1B0[dword_5641B0[0] + (signed __int64)(signed int)v76];\n              v109 = (signed int)v76 + (signed __int64)dword_5641B0[0];\n              if ( v108 != v250 )\n                v109 = v97;\n              if ( v108 != v250 )\n              {\n                v110 = (unsigned __int8)byte_98A1B0[dword_5641B4 + (signed __int64)(signed int)v76];\n                if ( v110 == v250 )\n                  v109 = (unsigned int)(v76 + dword_5641B4);\n                if ( v110 != v250 )\n                {\n                  v111 = (unsigned __int8)byte_98A1B0[dword_5641B8 + (signed __int64)(signed int)v76];\n                  if ( v111 == v250 )\n                    v109 = (unsigned int)(v76 + dword_5641B8);\n                  if ( v111 != v250\n                    && (unsigned __int8)byte_98A1B0[dword_5641BC + (signed __int64)(signed int)v76] == v250 )\n                  {\n                    v109 = (unsigned int)(dword_5641BC + v76);\n                  }\n                }\n              }\n              if ( (_DWORD)v109\n                && dword_954FF0[19 * (signed int)v109] != 1\n                && !(unsigned int)sub_42EAE0((unsigned int)v76, v109, 0LL) )\n              {\n                goto LABEL_246;\n              }\n              break;\n            case 3:\n            case 4:\n            case 5:\n              if ( dword_954FF0[19 * v83] == 1 || (unsigned int)sub_42EAE0((unsigned int)v76, (unsigned int)v83, 0LL) )\n                goto LABEL_247;\n              goto LABEL_246;\n            case 6:\n              v100 = *((signed int *)&xmmword_954FB0 + 19 * dword_983560[v83] + 2);\n              v101 = *((signed int *)&xmmword_954FB0 + 19 * dword_984470[v83] + 2);\n              if ( (_DWORD)v100 == (_DWORD)v101 )\n                goto LABEL_249;\n              v102 = *((_DWORD *)&xmmword_954FC0 + 19 * v100 + 3);\n              if ( v102 == 1 )\n                goto LABEL_255;\n              v103 = *((_DWORD *)&xmmword_954FC0 + 19 * v101 + 3);\n              if ( v103 == 1 || v102 == 4 && *((_DWORD *)&xmmword_954FC0 + 19 * v100 + 1) == 1 )\n                goto LABEL_255;\n              if ( v103 == 4 && *((_DWORD *)&xmmword_954FC0 + 19 * v101 + 1) == 1\n                || (unsigned int)sub_42F3C0((unsigned int)v76, v100, v101) )\n              {\n                goto LABEL_255;\n              }\n              goto LABEL_246;\n            case 7:\n            case 0x12:\n            case 0x13:\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x17:\n            case 0x1A:\n            case 0x1B:\n            case 0x1C:\n            case 0x1F:\n            case 0x20:\n            case 0x21:\n            case 0x22:\n            case 0x23:\n            case 0x24:\n            case 0x25:\n            case 0x26:\n            case 0x27:\n            case 0x28:\n            case 0x29:\n            case 0x2A:\n            case 0x2B:\n            case 0x2C:\n            case 0x2D:\n            case 0x2E:\n            case 0x2F:\n            case 0x30:\nLABEL_246:\n              if ( v78 == 1 )\n                goto LABEL_247;\n              goto LABEL_249;\n            case 8:\n            case 0xF:\n            case 0x10:\n            case 0x11:\n            case 0x18:\n            case 0x19:\n            case 0x1E:\n            case 0x31:\n            case 0x32:\n              goto LABEL_255;\n            case 9:\n            case 0xA:\n            case 0xB:\n              goto LABEL_247;\n            default:\n              v256 = 1;\n              if ( v78 != 1 )\n                goto LABEL_249;\nLABEL_247:\n              if ( v79 == 1 )\n                goto LABEL_255;\n              v78 = 1;\n              if ( (unsigned int)sub_43F100(v76, v250) )\n                goto LABEL_251;\nLABEL_249:\n              if ( (unsigned __int64)++v77 >= 0x78 )\n                goto LABEL_250;\n              continue;\n          }\n          goto LABEL_255;\n        }\n        break;\n      }\nLABEL_250:\n      if ( v78 != 1 )\n      {\nLABEL_254:\n        v256 = 0;\n        goto LABEL_255;\n      }\nLABEL_251:\n      if ( v79 )\n      {\n        v256 = 1;\n        goto LABEL_255;\n      }\n      v256 = 1;\n      if ( !(unsigned int)sub_43F100(v76, v250) )\n        goto LABEL_254;\nLABEL_255:\n      dword_8B2558[141 * v76] = v256;\n      sub_44E0B0(3LL, (__int64)\"    examine_move_safety: \", v76, 1.0);\n      v5 = v250;\n    }\n    if ( ++v76 != 400 )\n      continue;\n    break;\n  }\n  sub_44E0B0(2LL, (__int64)\"  examine_move_safety\", 0, 1.0);\n  dword_88C268 = v262;\n  v283 = 3 - v5;\n  v112 = 21LL;\n  while ( 2 )\n  {\n    v253 = v112;\n    if ( byte_98A1B0[v112] == 3 )\n      goto LABEL_330;\n    v284 = (unsigned int)v112 / 0x14;\n    v276 = (unsigned int)v112 % 0x14;\n    v285 = 141 * v112;\n    v280 = &dword_8B2558[141 * v112];\n    v113 = 0LL;\n    while ( 2 )\n    {\n      v114 = dword_8B2378[v113 + v285];\n      if ( v114 < 0 )\n        break;\n      v289 = v113;\n      v115 = 3 * v114;\n      v257 = dword_97ABB0[3 * v114];\n      switch ( v257 )\n      {\n        case 2:\n        case 8:\n          v116 = dword_97ABB4[3 * v114];\n          v117 = 3 - (unsigned __int8)byte_98A1B0[v116];\n          if ( v257 != 2 )\n            v117 = (unsigned __int8)byte_98A1B0[v116];\n          v267 = v117;\n          if ( !dword_8E9524[95 * v116]\n            || *((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * v116 + 1) + 15) == 5\n            || v257 != 2 && !*v280 )\n          {\n            goto LABEL_329;\n          }\n          v118 = sub_40AA00(v116, (__int64)&v294, 1);\n          if ( (signed int)v118 <= 0 )\n            goto LABEL_329;\n          v268 = (signed int)v118;\n          v274 = v118;\n          v263 = v118 - 1LL;\n          v259 = &v295;\n          v119 = 0LL;\n          break;\n        case 14:\n          if ( (unsigned int)sub_44AE30(v253, v283) )\n          {\n            v130 = dword_97ABB4[v115];\n            v131 = dword_983560[v130];\n            v132 = dword_984470[v130];\n            v133 = 21LL;\n            do\n            {\n              if ( !byte_98A1B0[v133] )\n              {\n                if ( (unsigned int)sub_44AE30(v133, v283) )\n                {\n                  v134 = v284\n                       + ((unsigned __int64)(-1717986919LL * (signed int)v133) >> 63)\n                       + (-1717986919LL * (signed int)v133 >> 35);\n                  if ( v134 * v134 + (v276 - (unsigned int)v133 % 0x14) * (v276 - (unsigned int)v133 % 0x14) <= 5 )\n                  {\n                    v135 = 4611686018427387896LL;\n                    do\n                    {\n                      v136 = dword_5641D0[v135];\n                      v137 = (unsigned __int8)byte_98A1B0[v136 + (signed int)v133];\n                      if ( v137 != 3 && v137 == v250 )\n                      {\n                        v138 = v133 + v136;\n                        if ( !(unsigned int)sub_456290(v138, v131)\n                          && !(unsigned int)sub_456290(v138, v132)\n                          && (unsigned int)sub_406880(v253, v250, \"induce_secondary_move_reasons-B\", v131, 0, 0) )\n                        {\n                          if ( !(unsigned int)sub_434BB0(v138, v131, 0LL) )\n                            sub_421440(v253, v138, v131);\n                          if ( !(unsigned int)sub_434BB0(v138, v132, 0LL) )\n                            sub_421440(v253, v138, v132);\n                          sub_407030();\n                        }\n                      }\n                      ++v135;\n                    }\n                    while ( v135 * 4 );\n                  }\n                }\n              }\n              ++v133;\n            }\n            while ( v133 != 400 );\n          }\n          goto LABEL_329;\n        case 26:\n          v139 = (signed int *)ptr;\n          v140 = *((_DWORD *)&xmmword_954FB0 + 19 * dword_97ABB4[v115] + 1);\n          v141 = v140;\n          if ( *((_DWORD *)ptr + 26 * v140 + 11) > 0 )\n          {\n            v142 = (int *)(76LL * dword_97ABB4[v115] + 9785268);\n            v143 = 0LL;\n            do\n            {\n              v144 = v139[26 * v139[26 * v141 + 1 + v143]];\n              if ( *((_DWORD *)&xmmword_954FB0 + 19 * v144) == v250 && !dword_8E94D4[95 * v144] )\n              {\n                sub_422380(v253, v144);\n                v139 = (signed int *)ptr;\n                v140 = *v142;\n              }\n              ++v143;\n              v141 = v140;\n            }\n            while ( v143 < v139[26 * v140 + 11] );\n          }\n          goto LABEL_329;\n        default:\n          goto LABEL_329;\n      }\n      while ( 2 )\n      {\n        v271 = v119 + 1;\n        if ( v119 + 1 < v268 )\n        {\n          v120 = v259;\n          v121 = v263;\n          do\n          {\n            v122 = *(signed int *)v120;\n            v123 = (signed int)*(&v294 + v119);\n            v124 = byte_98A1B0[v123];\n            if ( v124 == byte_98A1B0[v122] )\n            {\n              v125 = byte_98A1B0[v116];\n              if ( v257 == 2 )\n              {\n                if ( v124 == v125\n                  || !(unsigned int)sub_434BB0((unsigned int)v123, (unsigned int)v122, 0LL)\n                  || byte_98A1B0[v123] == byte_98A1B0[v116] )\n                {\n                  goto LABEL_300;\n                }\n              }\n              else\n              {\n                if ( v124 == v125 )\n                  goto LABEL_489;\n                if ( !(unsigned int)sub_434520((unsigned int)v123, (unsigned int)v122, 0LL) )\n                  goto LABEL_300;\n                if ( byte_98A1B0[v123] == byte_98A1B0[v116] )\n                {\nLABEL_489:\n                  if ( !(unsigned int)sub_434BB0((unsigned int)v123, (unsigned int)v122, 0LL) )\n                    goto LABEL_300;\n                }\n              }\n              if ( (unsigned int)sub_406880(v253, v267, \"induce_secondary_move_reasons\", v116, 0, 0) )\n              {\n                v126 = byte_98A1B0[v123];\n                v127 = byte_98A1B0[v116];\n                if ( v257 == 2 )\n                {\n                  if ( v126 != v127 && !(unsigned int)sub_434BB0((unsigned int)v123, (unsigned int)v122, 0LL) )\n                  {\n                    if ( dword_88C264 & 0x800 )\n                    {\n                      v128 = \"Connection move at %1m induced for %1m/%1m due to attack of %1m\\n\";\n                      goto LABEL_297;\n                    }\n                    goto LABEL_298;\n                  }\n                }\n                else\n                {\n                  if ( v126 != v127 && !(unsigned int)sub_434520((unsigned int)v123, (unsigned int)v122, 0LL) )\n                  {\n                    v129 = v253;\n                    if ( dword_88C264 & 0x800 )\n                    {\n                      sub_433F90(\n                        \"Cut move at %1m induced for %1m/%1m due to defense of %1m\\n\",\n                        (unsigned int)v253,\n                        (unsigned int)v123,\n                        (unsigned int)v122,\n                        (unsigned int)v116,\n                        1.0);\n                      v129 = v253;\n                    }\n                    sub_4215F0(v129, v123, v122);\n                  }\n                  if ( byte_98A1B0[v123] == byte_98A1B0[v116]\n                    && !(unsigned int)sub_434BB0((unsigned int)v123, (unsigned int)v122, 0LL) )\n                  {\n                    if ( dword_88C264 & 0x800 )\n                    {\n                      v128 = \"Connection move at %1m induced for %1m/%1m due to defense of %1m\\n\";\nLABEL_297:\n                      sub_433F90(v128, v253, (unsigned int)v123, (unsigned int)v122, (unsigned int)v116, 1.0);\n                    }\nLABEL_298:\n                    sub_421440(v253, v123, v122);\n                  }\n                }\n                sub_407030();\n                goto LABEL_300;\n              }\n            }\nLABEL_300:\n            v120 += 4;\n            --v121;\n          }\n          while ( v121 );\n        }\n        --v263;\n        v259 += 4;\n        ++v119;\n        if ( v271 != v274 )\n          continue;\n        break;\n      }\nLABEL_329:\n      v113 = v289 + 1;\n      if ( (unsigned __int64)(v289 + 1) < 0x78 )\n        continue;\n      break;\n    }\nLABEL_330:\n    v112 = v253 + 1;\n    if ( v253 != 399 )\n      continue;\n    break;\n  }\n  sub_44E0B0(2LL, (__int64)\"  induce_secondary_move_reasons\", 0, 1.0);\n  v146 = dword_88C268;\n  v147 = dword_88C268 | (unsigned int)dword_88C220;\n  v148 = v250;\n  if ( dword_88C268 | dword_88C220 )\n  {\n    sub_423890(v250);\n    v146 = dword_88C268;\n  }\n  if ( v146 )\n    sub_433F90(\"\\nMove valuation:\\n\", \"  induce_secondary_move_reasons\", v145, v147, 1.0);\n  v149 = dword_565C68;\n  if ( dword_565C68 > 0 )\n  {\n    v150 = 1;\n    v151 = 0;\n    do\n    {\n      if ( v149 > 0 )\n      {\n        v152 = v149 + 1LL;\n        v153 = v150 + 20 * v149;\n        do\n        {\n          sub_451040(v153, v148, v145, v147);\n          v154 = 141LL * (signed int)v153;\n          *(float *)((char *)&qword_8B2330 + v154 * 4) = v287;\n          if ( v287 != 0.0 )\n          {\n            v155 = v148;\n            v156 = (float *)((char *)&qword_8B2330 + v154 * 4);\n            if ( (unsigned int)sub_407B30(v153, v155) || (unsigned int)sub_407DC0(v153, v250) )\n            {\n              v157 = *v156 + *(float *)&dword_8B2374[v154] * (*(float *)&dword_8B2560[v154] * 0.01);\n              *v156 = v157;\n              v148 = v250;\n            }\n            else\n            {\n              *v156 = 0.0;\n              v148 = v250;\n              if ( dword_88C268 )\n                sub_433F90(\"Move at %1m wasn't legal.\\n\", v153);\n            }\n          }\n          --v152;\n          v153 -= 20;\n        }\n        while ( v152 > 1 );\n        v149 = dword_565C68;\n      }\n      ++v151;\n      ++v150;\n    }\n    while ( v151 < v149 );\n  }\n  sub_44E0B0(2LL, (__int64)\"  value_moves\", 0, 1.0);\n  sub_450C70(2LL, \"  value_moves\");\n  ((void (*)(void))sub_450DB0)();\n  memset(s, 0, 0x190uLL);\n  v158 = 21LL;\n  v159 = 0;\nLABEL_350:\n  v160 = 0.0;\n  v161 = v279;\n  while ( 2 )\n  {\n    v180 = 564 * v158;\n    *(_QWORD *)&v174 = *((unsigned int *)&qword_8B2330 + 141 * v158 + 1);\n    if ( (!v161 || *(_DWORD *)(v161 + 4 * v158))\n      && byte_98A1B0[v158] != 3\n      && *(float *)&v174 != 0.0\n      && *(float *)&v174 > v160 )\n    {\n      if ( (unsigned int)sub_407B30(v158, v148) || (unsigned int)sub_407DC0(v158, v148) )\n      {\n        v160 = *(float *)&v174;\n        v159 = v158;\nLABEL_378:\n        v161 = v279;\n        goto LABEL_379;\n      }\n      if ( dword_88C268 )\n        sub_433F90(\"Move at %1m would be suicide.\\n\", (unsigned int)v158);\n      v162 = 1LL;\n      v163 = 0LL;\n      v164 = 0LL;\n      while ( 2 )\n      {\n        if ( v158 == *((_DWORD *)xmmword_98A6D0 + v164) )\n        {\n          if ( v164 <= 8 )\n          {\n            v165 = 9 - v164;\n            v166 = v164;\n            if ( 9 - v164 < 8 )\n            {\n              do\n              {\nLABEL_366:\n                *((_DWORD *)xmmword_98A6D0 + v166) = *((_DWORD *)xmmword_98A6D0 + v166 + 1);\n                *((_DWORD *)xmmword_98A6A0 + v166) = *((_DWORD *)xmmword_98A6A0 + v166 + 1);\n                ++v166;\n              }\n              while ( v166 != 9 );\n            }\n            else\n            {\n              v167 = (1 - v164) >> 3;\n              v168 = v167 + 1;\n              if ( v167 )\n              {\n                v169 = (((unsigned __int8)(v162 >> 3) + 1) & 1) - 1LL - (v162 >> 3);\n                v170 = 0LL;\n                do\n                {\n                  v171 = *(_OWORD *)(v163 + 4 * v170 + 10004196);\n                  *(__int128 *)((char *)&xmmword_98A6D0[v170 / 4] + v163) = *(_OWORD *)(v163 + 4 * v170 + 10004180);\n                  *(__int128 *)((char *)&xmmword_98A6E0[v170 / 4] + v163) = v171;\n                  v172 = *(_OWORD *)(v163 + 4 * v170 + 10004148);\n                  *(__int128 *)((char *)&xmmword_98A6A0[v170 / 4] + v163) = *(_OWORD *)(v163 + 4 * v170 + 10004132);\n                  *(__int128 *)((char *)&xmmword_98A6B0[v170 / 4] + v163) = v172;\n                  v173 = *(__int128 *)((char *)&xmmword_98A700[v170 / 4] + v163 + 4);\n                  *(__int128 *)((char *)&xmmword_98A6F0[v170 / 4] + v163) = *(__int128 *)((char *)&xmmword_98A6F0[v170 / 4]\n                                                                                        + v163\n                                                                                        + 4);\n                  *(__int128 *)((char *)&xmmword_98A700[v170 / 4] + v163) = v173;\n                  v174 = *(_OWORD *)(v163 + 4 * v170 + 10004164);\n                  v175 = *(_OWORD *)(v163 + 4 * v170 + 10004180);\n                  *(__int128 *)((char *)&xmmword_98A6C0[v170 / 4] + v163) = v174;\n                  *(__int128 *)((char *)&xmmword_98A6D0[v170 / 4] + v163) = v175;\n                  v170 += 16LL;\n                  v169 += 2LL;\n                }\n                while ( v169 );\n              }\n              else\n              {\n                v170 = 0LL;\n              }\n              v176 = v165 & 0xFFFFFFFFFFFFFFF8LL;\n              if ( v168 & 1 )\n              {\n                v177 = v164 + v170;\n                v178 = *(__int128 *)((char *)xmmword_98A6E0 + 4 * v177 + 4);\n                *(__int128 *)((char *)xmmword_98A6D0 + 4 * v177) = *(__int128 *)((char *)xmmword_98A6D0 + 4 * v177 + 4);\n                *(__int128 *)((char *)xmmword_98A6E0 + 4 * v177) = v178;\n                v174 = *(__int128 *)((char *)xmmword_98A6A0 + 4 * v177 + 4);\n                v179 = *(__int128 *)((char *)xmmword_98A6B0 + 4 * v177 + 4);\n                *(__int128 *)((char *)xmmword_98A6A0 + 4 * v177) = v174;\n                *(__int128 *)((char *)xmmword_98A6B0 + 4 * v177) = v179;\n              }\n              if ( v165 != v176 )\n              {\n                v166 = v164 + v176;\n                goto LABEL_366;\n              }\n            }\n          }\n          DWORD1(xmmword_98A6F0[0]) = 0;\n          DWORD1(xmmword_98A6C0[0]) = 0;\n        }\n        ++v164;\n        v163 += 4LL;\n        --v162;\n        if ( v164 == 10 )\n        {\n          *(_DWORD *)((char *)&qword_8B2330 + v180) = 0;\n          *(_DWORD *)((char *)&qword_8B2330 + v180 + 4) = 0;\n          goto LABEL_378;\n        }\n        continue;\n      }\n    }\nLABEL_379:\n    if ( ++v158 != 400 )\n      continue;\n    break;\n  }\n  v181 = 0;\n  if ( v160 <= 0.0 )\n    return v181;\n  v182 = v148;\n  v260 = v159;\n  if ( (unsigned int)sub_407DC0(v159, v148) )\n  {\n    if ( dword_88C268 )\n    {\n      v182 = (unsigned int)v159;\n      sub_433F90(\"Move at %1m would be an illegal ko capture.\\n\", (unsigned int)v159, *(double *)&v174);\n    }\n    v277 = sub_4213C0(v159);\n    v184 = v159;\n    v281 = v159;\n    if ( byte_98A1B0[dword_5641B0[0] + (signed __int64)v159] == 3\n      || (v185 = v159 + (signed __int64)dword_5641B0[0], v186 = sub_4083A0(v185), v184 = v159, v186 != 1) )\n    {\n      if ( byte_98A1B0[dword_5641B4 + v184] == 3\n        || (v185 = v184 + dword_5641B4, v187 = sub_4083A0(v185), v184 = v159, v187 != 1) )\n      {\n        if ( byte_98A1B0[dword_5641B8 + v184] == 3\n          || (v185 = v184 + dword_5641B8, v188 = sub_4083A0(v185), v184 = v159, v188 != 1) )\n        {\n          v185 = dword_5641BC + v184;\n          if ( byte_98A1B0[v185] != 3 )\n            sub_4083A0(v185);\n        }\n      }\n    }\n    v275 = v185;\n    if ( (unsigned int)v185 > 0x1A4 || byte_98A1B0[(signed int)v185] == 3 )\n    {\n      v189 = (1717986919LL * (signed int)v185 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)v185) >> 63);\n      sub_4340E0(\n        (__int64)\"engine/value_moves.c\",\n        0xAB1u,\n        (__int64)\"ON_BOARD1(ko_stone)\",\n        v189 - 1,\n        v185 - 20 * v189 - 1);\n    }\n    if ( dword_88C268 )\n      sub_433F90(\"Reevaluating ko threats.\\n\", v182, v183, v184, *(double *)&v174);\n    v190 = dword_565C68;\n    v191 = 8724676608LL;\n    if ( dword_565C68 <= 0 )\n      goto LABEL_443;\n    v192 = (unsigned __int64)(1717986919LL * (signed int)v185) >> 63;\n    v193 = 1717986919LL * (signed int)v185 >> 35;\n    v290 = v193 + v192 - 1;\n    v278 = -20 * (v193 + v192) + v185 - 1;\n    v194 = (unsigned int)v159;\n    v195 = 0LL;\n    LODWORD(v182) = 21;\n    v196 = 0;\n    v269 = (unsigned int)v159;\nLABEL_399:\n    if ( v190 <= 0 )\n      goto LABEL_442;\n    v286 = v182;\n    v197 = &dword_8B2378[141 * (unsigned int)v182];\n    v288 = v195;\n    v198 = (20 * (_DWORD)v195 + 21) & 0xFFFFFFFD;\n    v199 = 0LL;\n    v264 = (20 * (_DWORD)v195 + 21) & 0xFFFFFFFD;\n    while ( 1 )\n    {\n      v200 = v199 + v198;\n      if ( v199 + v198 == v194 || *(float *)&dword_8B2338[141 * v200] <= 0.0 )\n        goto LABEL_440;\n      v272 = v196;\n      v201 = -1;\n      v202 = 0.0;\n      v203 = 0LL;\n      v204 = -1;\n      do\n      {\n        v205 = v197[v203];\n        if ( v205 < 0 )\n          break;\n        v206 = 3 * v205;\n        v207 = dword_97ABB0[3 * v205];\n        if ( v207 & 1 )\n        {\n          if ( v207 > 0x21 )\n            goto LABEL_415;\n          if ( _bittest64(&v191, v207) )\n          {\n            v208 = dword_97ABB4[v206];\n            v209 = *((float *)&xmmword_954FC0 + 19 * v208);\n            if ( v209 <= v202 )\n              goto LABEL_416;\n          }\n          else\n          {\n            v210 = 520LL;\n            if ( !_bittest64(&v210, v207) )\nLABEL_415:\n              sub_4340E0((__int64)\"engine/value_moves.c\", 0xAE1u, (__int64)\"0\", 0xFFFFFFFF, 0xFFFFFFFF);\n            v208 = dword_97ABB4[v206];\n            v209 = *(float *)&dword_8E9478[95 * v208];\n            if ( v209 <= v202 )\n              goto LABEL_416;\n          }\n          v204 = v207;\n          v201 = v208;\n          v202 = v209;\n        }\nLABEL_416:\n        ++v203;\n      }\n      while ( v203 < 0x78 );\n      if ( v204 == -1 )\n      {\n        v196 = 1;\n        v194 = v269;\n        v211 = (float *)&dword_8B2338[141 * v200];\n        goto LABEL_437;\n      }\n      if ( (unsigned int)sub_406880((unsigned int)v200, v250, \"reevaluate_ko_threats\", v260, 0, v260) )\n      {\n        if ( (unsigned int)v275 > 0x1A4 || byte_98A1B0[(signed int)v275] == 3 )\n          sub_4340E0((__int64)\"engine/value_moves.c\", 0xAEEu, (__int64)\"ON_BOARD1(ko_stone)\", v290, v278);\n        v196 = v272;\n        if ( (unsigned int)sub_43B6F0(v275, v275, &v294) )\n        {\n          if ( (unsigned int)sub_406880(v294, v283, \"reevaluate_ko_threats\", v260, 0, 0) )\n          {\n            switch ( v204 )\n            {\n              case 3:\n                v196 = sub_43B050(v201, 0LL);\n                break;\n              case 9:\n                if ( byte_98A1B0[v201] )\n                  v212 = (unsigned int)sub_43B6F0(v201, v201, 0LL) != 0;\n                else\n                  v212 = 0;\n                v196 = v212;\n                break;\n              case 27:\n              case 33:\n                v196 = v277 != v201;\n                break;\n              default:\n                break;\n            }\n            sub_407030();\n          }\n        }\n        else\n        {\n          v196 = 1;\n        }\n        v194 = v269;\n        sub_407030();\n        v191 = 8724676608LL;\n      }\n      else\n      {\n        v191 = 8724676608LL;\n        v194 = v269;\n        v196 = v272;\n      }\n      v211 = (float *)&dword_8B2338[141 * v200];\n      if ( v196 )\n      {\nLABEL_437:\n        v213 = (float *)((char *)&qword_8B2330 + 564 * v200);\n        if ( dword_88C268 )\n        {\n          sub_433F90(\"%1m: %f + %f = %f\\n\", (unsigned int)v200, *v213, *v211, (float)(*v213 + *v211));\n          v211 = (float *)&dword_8B2338[141 * v200];\n          v191 = 8724676608LL;\n        }\n        *v213 = *v211 + *v213;\n        v198 = v264;\n      }\n      else\n      {\n        v196 = 0;\n        v198 = v264;\n        if ( dword_88C264 & 0x800 )\n        {\n          v196 = 0;\n          sub_433F90(\"%1m: no additional ko value (threat does not work as ko threat)\\n\", (unsigned int)v200);\n          v191 = 8724676608LL;\n        }\n      }\nLABEL_440:\n      ++v199;\n      v190 = dword_565C68;\n      v197 += 141;\n      if ( v199 >= dword_565C68 )\n      {\n        v148 = v250;\n        v159 = v260;\n        v195 = v288;\n        LODWORD(v182) = v286;\nLABEL_442:\n        ++v195;\n        v182 = (unsigned int)(v182 + 20);\n        if ( v195 < v190 )\n          goto LABEL_399;\nLABEL_443:\n        sub_450C70(8724676608LL, v182);\n        v214 = (signed __int64)\"  reevaluate_ko_threats\";\n        sub_44E0B0(2LL, (__int64)\"  reevaluate_ko_threats\", 0, 1.0);\n        v216 = 1LL;\n        v217 = 0LL;\n        v218 = 0LL;\n        while ( 2 )\n        {\n          if ( *((_DWORD *)xmmword_98A6D0 + v218) == v159 )\n          {\n            if ( v218 <= 8 )\n            {\n              v214 = 9 - v218;\n              v215 = v218;\n              if ( 9 - v218 < 8 )\n              {\n                do\n                {\nLABEL_456:\n                  *((_DWORD *)xmmword_98A6D0 + v215) = *((_DWORD *)xmmword_98A6D0 + v215 + 1);\n                  v214 = *((unsigned int *)xmmword_98A6A0 + v215 + 1);\n                  *((_DWORD *)xmmword_98A6A0 + v215++) = v214;\n                }\n                while ( v215 != 9 );\n              }\n              else\n              {\n                v219 = (1 - v218) >> 3;\n                v220 = v219 + 1;\n                if ( v219 )\n                {\n                  v221 = (((unsigned __int8)(v216 >> 3) + 1) & 1) - 1LL - (v216 >> 3);\n                  v222 = 0LL;\n                  do\n                  {\n                    v223 = *(_OWORD *)(v217 + 4 * v222 + 10004196);\n                    *(__int128 *)((char *)&xmmword_98A6D0[v222 / 4] + v217) = *(_OWORD *)(v217 + 4 * v222 + 10004180);\n                    *(__int128 *)((char *)&xmmword_98A6E0[v222 / 4] + v217) = v223;\n                    v224 = *(_OWORD *)(v217 + 4 * v222 + 10004148);\n                    *(__int128 *)((char *)&xmmword_98A6A0[v222 / 4] + v217) = *(_OWORD *)(v217 + 4 * v222 + 10004132);\n                    *(__int128 *)((char *)&xmmword_98A6B0[v222 / 4] + v217) = v224;\n                    v225 = *(_OWORD *)(v217 + 4 * v222 + 10004228);\n                    *(__int128 *)((char *)&xmmword_98A6F0[v222 / 4] + v217) = *(_OWORD *)(v217 + 4 * v222 + 10004212);\n                    *(__int128 *)((char *)&xmmword_98A700[v222 / 4] + v217) = v225;\n                    v226 = *(_OWORD *)(v217 + 4 * v222 + 10004180);\n                    *(__int128 *)((char *)&xmmword_98A6C0[v222 / 4] + v217) = *(_OWORD *)(v217 + 4 * v222 + 10004164);\n                    *(__int128 *)((char *)&xmmword_98A6D0[v222 / 4] + v217) = v226;\n                    v222 += 16LL;\n                    v221 += 2LL;\n                  }\n                  while ( v221 );\n                }\n                else\n                {\n                  v222 = 0LL;\n                }\n                v215 = v214 & 0xFFFFFFFFFFFFFFF8LL;\n                if ( v220 & 1 )\n                {\n                  v227 = v218 + v222;\n                  v228 = *(__int128 *)((char *)xmmword_98A6E0 + 4 * v227 + 4);\n                  *(__int128 *)((char *)xmmword_98A6D0 + 4 * v227) = *(__int128 *)((char *)xmmword_98A6D0 + 4 * v227 + 4);\n                  *(__int128 *)((char *)xmmword_98A6E0 + 4 * v227) = v228;\n                  v229 = *(__int128 *)((char *)xmmword_98A6B0 + 4 * v227 + 4);\n                  *(__int128 *)((char *)xmmword_98A6A0 + 4 * v227) = *(__int128 *)((char *)xmmword_98A6A0 + 4 * v227 + 4);\n                  *(__int128 *)((char *)xmmword_98A6B0 + 4 * v227) = v229;\n                }\n                if ( v214 != v215 )\n                {\n                  v215 += v218;\n                  goto LABEL_456;\n                }\n              }\n            }\n            DWORD1(xmmword_98A6F0[0]) = 0;\n            DWORD1(xmmword_98A6C0[0]) = 0;\n          }\n          ++v218;\n          v217 += 4LL;\n          --v216;\n          if ( v218 == 10 )\n          {\n            *(__int64 *)((char *)&qword_8B2330 + 564 * v281) = 0LL;\n            sub_450DB0(10LL, v214, v215, v217);\n            goto LABEL_349;\n          }\n          continue;\n        }\n      }\n    }\n  }\n  if ( !s[v159] )\n  {\n    sub_423710(v159, &v294);\n    sub_422E00(v159, &v293);\n    sub_4237B0(v148, v159, (__int64)&v294, (__int64)&v293, (__int64)&v297);\n    sub_44C130(v159, v148, 0LL, (__int64)&v297);\n    if ( *(float *)&v174 > 0.0 )\n    {\n      if ( dword_88C268 )\n        sub_433F90(\"Move at %1m is a blunder, subtracting %f.\\n\", (unsigned int)v159, *(float *)&v174);\n      v231 = 1LL;\n      v232 = 0LL;\n      v233 = 0LL;\n      while ( *((_DWORD *)xmmword_98A6D0 + v233) != v159 )\n      {\nLABEL_479:\n        ++v233;\n        v232 += 4LL;\n        --v231;\n        if ( v233 == 10 )\n        {\n          v246 = 564LL * v159;\n          *(float *)((char *)&qword_8B2330 + v246) = *((float *)&qword_8B2330 + 141 * v159) - *(float *)&v174;\n          v247 = *((float *)&qword_8B2330 + 141 * v159 + 1) - *(float *)&v174;\n          *(float *)(v246 + 9118516) = v247;\n          if ( dword_88C268 )\n          {\n            v248 = (float *)(v246 + 9118516);\n            sub_433F90(\"Move at %1m is now valued %f.\\n\", (unsigned int)v159, v230, v232, v247);\n            v247 = *v248;\n          }\n          sub_44E4B0(v159, v247);\n          s[v159] = 1;\nLABEL_349:\n          v159 = 0;\n          v158 = 21LL;\n          goto LABEL_350;\n        }\n      }\n      if ( v233 <= 8 )\n      {\n        v234 = 9 - v233;\n        v230 = v233;\n        if ( 9 - v233 >= 8 )\n        {\n          v235 = (1 - v233) >> 3;\n          v236 = v235 + 1;\n          if ( v235 )\n          {\n            v237 = (((unsigned __int8)(v231 >> 3) + 1) & 1) - 1LL - (v231 >> 3);\n            v238 = 0LL;\n            do\n            {\n              v239 = *(_OWORD *)(v232 + 4 * v238 + 10004196);\n              *(__int128 *)((char *)&xmmword_98A6D0[v238 / 4] + v232) = *(_OWORD *)(v232 + 4 * v238 + 10004180);\n              *(__int128 *)((char *)&xmmword_98A6E0[v238 / 4] + v232) = v239;\n              v240 = *(_OWORD *)(v232 + 4 * v238 + 10004148);\n              *(__int128 *)((char *)&xmmword_98A6A0[v238 / 4] + v232) = *(_OWORD *)(v232 + 4 * v238 + 10004132);\n              *(__int128 *)((char *)&xmmword_98A6B0[v238 / 4] + v232) = v240;\n              v241 = *(_OWORD *)(v232 + 4 * v238 + 10004228);\n              *(__int128 *)((char *)&xmmword_98A6F0[v238 / 4] + v232) = *(_OWORD *)(v232 + 4 * v238 + 10004212);\n              *(__int128 *)((char *)&xmmword_98A700[v238 / 4] + v232) = v241;\n              v242 = *(_OWORD *)(v232 + 4 * v238 + 10004180);\n              *(__int128 *)((char *)&xmmword_98A6C0[v238 / 4] + v232) = *(_OWORD *)(v232 + 4 * v238 + 10004164);\n              *(__int128 *)((char *)&xmmword_98A6D0[v238 / 4] + v232) = v242;\n              v238 += 16LL;\n              v237 += 2LL;\n            }\n            while ( v237 );\n          }\n          else\n          {\n            v238 = 0LL;\n          }\n          v230 = v234 & 0xFFFFFFFFFFFFFFF8LL;\n          if ( v236 & 1 )\n          {\n            v243 = v233 + v238;\n            v244 = *(__int128 *)((char *)xmmword_98A6E0 + 4 * v243 + 4);\n            *(__int128 *)((char *)xmmword_98A6D0 + 4 * v243) = *(__int128 *)((char *)xmmword_98A6D0 + 4 * v243 + 4);\n            *(__int128 *)((char *)xmmword_98A6E0 + 4 * v243) = v244;\n            v245 = *(__int128 *)((char *)xmmword_98A6B0 + 4 * v243 + 4);\n            *(__int128 *)((char *)xmmword_98A6A0 + 4 * v243) = *(__int128 *)((char *)xmmword_98A6A0 + 4 * v243 + 4);\n            *(__int128 *)((char *)xmmword_98A6B0 + 4 * v243) = v245;\n          }\n          if ( v234 == v230 )\n            goto LABEL_478;\n          v230 += v233;\n        }\n        do\n        {\n          *((_DWORD *)xmmword_98A6D0 + v230) = *((_DWORD *)xmmword_98A6D0 + v230 + 1);\n          *((_DWORD *)xmmword_98A6A0 + v230) = *((_DWORD *)xmmword_98A6A0 + v230 + 1);\n          ++v230;\n        }\n        while ( v230 != 9 );\n      }\nLABEL_478:\n      DWORD1(xmmword_98A6F0[0]) = 0;\n      DWORD1(xmmword_98A6C0[0]) = 0;\n      goto LABEL_479;\n    }\n  }\n  if ( v159 )\n  {\n    *v291 = v159;\n    *v292 = v160;\n    v181 = 1;\n  }\n  return v181;\n}\n", 
            "funcStartAddr": "0x44e830L", 
            "funcEndAddr": "0x450c67L", 
            "funcName": "sub_44E830"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_450C70(__int64 a1, __int64 a2, __int64 a3)\n{\n  signed __int64 result; // rax\n  _DWORD *v4; // rcx\n  signed __int64 v5; // r15\n  signed __int64 v6; // rbx\n  __int64 v7; // r14\n  __m128i v8; // xmm0\n  _DWORD *v9; // r12\n  __int64 v10; // [rsp-28h] [rbp-28h]\n\n  result = -378LL;\n  v4 = &unk_8B53AC;\n  if ( byte_98A33F[-378] != 3 )\n  {\nLABEL_4:\n    a3 = (unsigned int)*(v4 - 142);\n    *(v4 - 141) = a3;\n  }\n  while ( result )\n  {\n    if ( byte_98A340[result] != 3 )\n    {\n      a3 = (unsigned int)*(v4 - 1);\n      *v4 = a3;\n    }\n    v4 += 282;\n    result += 2LL;\n    if ( byte_98A33F[result] != 3 )\n      goto LABEL_4;\n  }\n  v10 = 0LL;\n  v5 = 4611686018427334465LL;\n  v6 = 21LL;\n  do\n  {\n    if ( byte_98A1B0[v6] != 3 )\n    {\n      v7 = dword_9888A0[v6];\n      if ( dword_9888A0[v6] )\n      {\n        if ( dword_88C268 )\n          sub_433F90(\"Redistributing points from %1m to %1m.\\n\", (unsigned int)v6, (unsigned int)v7, v4, v10);\n        result = 564 * v7;\n        v8 = _mm_cvtsi32_si128(dword_8E9474[v5]);\n        if ( *(float *)v8.m128i_i32 > *((float *)&qword_8B2330 + 141 * v7 + 1) )\n        {\n          v9 = (_DWORD *)(result + 9118516);\n          if ( dword_88C268 )\n          {\n            sub_433F90(\"%1m is now valued %f.\\n\", (unsigned int)v7, a3, v4, *(float *)v8.m128i_i32, v10);\n            result = (unsigned int)dword_8E9474[v5];\n          }\n          else\n          {\n            result = (unsigned int)_mm_cvtsi128_si32(v8);\n          }\n          *v9 = result;\n        }\n        if ( dword_88C268 )\n          result = sub_433F90(\"%1m is now valued 0.\\n\", (unsigned int)v6, a3, v4, v10);\n        dword_8E9474[v5] = 0;\n      }\n    }\n    ++v6;\n    v5 += 141LL;\n  }\n  while ( v5 * 4 );\n  return result;\n}\n", 
            "funcStartAddr": "0x450c70L", 
            "funcEndAddr": "0x450da4L", 
            "funcName": "sub_450C70"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_450DB0@<rax>(__int64 result@<rax>)\n{\n  double v1; // xmm0_8\n  signed __int64 v2; // r14\n  signed __int64 v3; // rbx\n  __int64 v4; // [rsp-8h] [rbp-18h]\n\n  v4 = result;\n  v1 = 0.0;\n  xmmword_98A6E0[0] = 0LL;\n  xmmword_98A6D0[0] = 0LL;\n  *(_QWORD *)&xmmword_98A6F0[0] = 0LL;\n  xmmword_98A6B0[0] = 0LL;\n  xmmword_98A6A0[0] = 0LL;\n  *(_QWORD *)&xmmword_98A6C0[0] = 0LL;\n  v2 = 4611686018427334465LL;\n  v3 = 21LL;\n  do\n  {\n    if ( byte_98A1B0[v3] != 3 )\n    {\n      *(_QWORD *)&v1 = (unsigned int)dword_8E9474[v2];\n      if ( *(float *)&v1 > 0.0 )\n        result = sub_44E4B0(v3, *(float *)&v1);\n    }\n    ++v3;\n    v2 += 141LL;\n  }\n  while ( v2 * 4 );\n  if ( dword_88C268 > 0 || dword_88C264 & 0x400000 )\n  {\n    result = sub_433F90(\"\\nTop moves:\\n\", v1, 0.0, v4);\n    if ( *(float *)xmmword_98A6A0 > 0.0 )\n    {\n      result = sub_433F90(\"%d. %1M %f\\n\", 1LL, LODWORD(xmmword_98A6D0[0]), *(float *)xmmword_98A6A0);\n      if ( *((float *)xmmword_98A6A0 + 1) > 0.0 )\n      {\n        result = sub_433F90(\"%d. %1M %f\\n\", 2LL, DWORD1(xmmword_98A6D0[0]), *((float *)xmmword_98A6A0 + 1));\n        if ( *((float *)xmmword_98A6A0 + 2) > 0.0 )\n        {\n          result = sub_433F90(\"%d. %1M %f\\n\", 3LL, DWORD2(xmmword_98A6D0[0]), *((float *)xmmword_98A6A0 + 2));\n          if ( *((float *)xmmword_98A6A0 + 3) > 0.0 )\n          {\n            result = sub_433F90(\"%d. %1M %f\\n\", 4LL, HIDWORD(xmmword_98A6D0[0]), *((float *)xmmword_98A6A0 + 3));\n            if ( *(float *)xmmword_98A6B0 > 0.0 )\n            {\n              result = sub_433F90(\"%d. %1M %f\\n\", 5LL, LODWORD(xmmword_98A6E0[0]), *(float *)xmmword_98A6B0);\n              if ( *((float *)xmmword_98A6B0 + 1) > 0.0 )\n              {\n                result = sub_433F90(\"%d. %1M %f\\n\", 6LL, DWORD1(xmmword_98A6E0[0]), *((float *)xmmword_98A6B0 + 1));\n                if ( *((float *)xmmword_98A6B0 + 2) > 0.0 )\n                {\n                  result = sub_433F90(\"%d. %1M %f\\n\", 7LL, DWORD2(xmmword_98A6E0[0]), *((float *)xmmword_98A6B0 + 2));\n                  if ( *((float *)xmmword_98A6B0 + 3) > 0.0 )\n                  {\n                    result = sub_433F90(\"%d. %1M %f\\n\", 8LL, HIDWORD(xmmword_98A6E0[0]), *((float *)xmmword_98A6B0 + 3));\n                    if ( *(float *)xmmword_98A6C0 > 0.0 )\n                    {\n                      result = sub_433F90(\"%d. %1M %f\\n\", 9LL, LODWORD(xmmword_98A6F0[0]), *(float *)xmmword_98A6C0);\n                      if ( *((float *)xmmword_98A6C0 + 1) > 0.0 )\n                        result = sub_433F90(\n                                   \"%d. %1M %f\\n\",\n                                   10LL,\n                                   DWORD1(xmmword_98A6F0[0]),\n                                   *((float *)xmmword_98A6C0 + 1));\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x450db0L", 
            "funcEndAddr": "0x451033L", 
            "funcName": "sub_450DB0"
        }, 
        {
            "decompiledFuncCode": "int *__usercall sub_451040@<rax>(int a1@<edi>, unsigned int a2@<esi>, float a3@<xmm0>, __m128 a4@<xmm1>, __int64 a5@<xmm8>)\n{\n  unsigned int v5; // er15\n  unsigned int v6; // er13\n  int *result; // rax\n  __int64 v8; // rbp\n  signed __int64 v9; // rcx\n  int *v10; // rdi\n  unsigned __int64 v11; // rax\n  signed __int64 v12; // rbp\n  signed __int64 v13; // rsi\n  int v14; // ecx\n  __m128 v15; // xmm2\n  __m128 v16; // xmm0\n  __m128 v17; // xmm3\n  __m128 v18; // xmm3\n  __int64 v19; // r14\n  float v20; // xmm1_4\n  __int64 v21; // rax\n  signed __int64 v22; // rax\n  int *v23; // r12\n  int *v24; // rax\n  signed int v25; // ebx\n  __int64 v26; // rbp\n  signed __int64 v27; // rax\n  float v28; // xmm0_4\n  int v29; // eax\n  double v30; // xmm1_8\n  __int64 v31; // rbp\n  int v32; // eax\n  float v33; // xmm0_4\n  int v34; // eax\n  double v35; // xmm1_8\n  signed __int64 v36; // rcx\n  __int64 v37; // rbp\n  unsigned int v38; // eax\n  float v39; // xmm1_4\n  float v40; // xmm0_4\n  double v41; // xmm0_8\n  char *v42; // rdi\n  float v43; // xmm0_4\n  signed int v44; // ecx\n  signed __int64 v45; // rbx\n  float v46; // xmm0_4\n  float *v47; // rbx\n  __int64 v48; // rbx\n  int v49; // edx\n  bool v50; // zf\n  unsigned int v51; // er12\n  __int64 v52; // rax\n  __int64 v53; // rbp\n  int v54; // edx\n  float v55; // xmm0_4\n  float v56; // xmm0_4\n  unsigned int v57; // ebx\n  signed __int64 v58; // rbp\n  double v59; // xmm0_8\n  char *v60; // rdi\n  __int64 v61; // r15\n  signed __int64 v62; // rsi\n  float v63; // xmm0_4\n  signed int *v64; // rax\n  int v65; // ecx\n  __int64 v66; // rdx\n  signed __int64 v67; // rdi\n  bool v68; // sf\n  int *v69; // r12\n  signed __int64 v70; // rbp\n  signed __int64 v71; // rdx\n  __int64 v72; // rsi\n  signed __int64 v73; // rbp\n  __int64 v74; // rsi\n  __int64 v75; // rdx\n  float v76; // xmm0_4\n  float v77; // xmm1_4\n  float *v78; // rbx\n  float v79; // xmm0_4\n  double v80; // xmm0_8\n  char *v81; // rdi\n  float v82; // xmm0_4\n  float v83; // xmm0_4\n  float v84; // xmm0_4\n  double v85; // xmm0_8\n  char *v86; // rdi\n  float v87; // xmm0_4\n  signed int v88; // ebx\n  signed int v89; // eax\n  float v90; // xmm0_4\n  float v91; // xmm0_4\n  float v92; // xmm0_4\n  double v93; // xmm0_8\n  char *v94; // rdi\n  float v95; // xmm0_4\n  float v96; // xmm2_4\n  float v97; // xmm1_4\n  __int64 v98; // rax\n  __int64 v99; // rax\n  __int64 v100; // rax\n  __int64 v101; // rax\n  __int64 v102; // rbp\n  float v103; // xmm1_4\n  int *v104; // rbx\n  signed int v105; // er12\n  unsigned __int64 v106; // rax\n  float v107; // xmm0_4\n  int v108; // ebx\n  float v109; // xmm0_4\n  float v110; // xmm2_4\n  int v111; // eax\n  float v112; // xmm0_4\n  __int64 v113; // rbx\n  int v114; // eax\n  int v115; // xmm0_4\n  char v116; // al\n  unsigned int v117; // ecx\n  int v118; // eax\n  unsigned int v119; // ebx\n  void *v120; // rdi\n  float v121; // xmm0_4\n  float v122; // xmm1_4\n  float v123; // xmm2_4\n  float v124; // xmm0_4\n  char *v125; // rdi\n  unsigned __int64 v126; // r15\n  signed __int64 v127; // rsi\n  __m128 v128; // xmm0\n  __m128 v129; // xmm0\n  __m128 v130; // xmm0\n  __m128 v131; // xmm1\n  __m128 v132; // xmm1\n  __m128 v133; // t1\n  __m128 v134; // xmm4\n  __m128d v135; // xmm1\n  __m128d v136; // xmm3\n  __m128d v137; // xmm5\n  __m128d v138; // xmm5\n  __m128 v139; // xmm1\n  __m128 v140; // xmm1\n  __int64 v141; // rax\n  signed __int64 v142; // rbp\n  int v143; // eax\n  __int64 v144; // r14\n  signed __int64 v145; // rbx\n  signed int v146; // ecx\n  float v147; // xmm1_4\n  unsigned int v148; // eax\n  double v149; // xmm0_8\n  __int64 v150; // rbp\n  __int64 v151; // rbx\n  float v152; // xmm0_4\n  double v153; // xmm0_8\n  signed __int64 v154; // rcx\n  float v155; // xmm1_4\n  float v156; // xmm1_4\n  int v157; // eax\n  int v158; // eax\n  int v159; // edx\n  int v160; // eax\n  int v161; // eax\n  unsigned int v162; // eax\n  signed int v163; // ecx\n  __int64 v164; // r12\n  float v165; // xmm0_4\n  signed int *v166; // rax\n  int v167; // ecx\n  __int64 v168; // rdx\n  float v169; // xmm1_4\n  signed int v170; // ebx\n  signed __int64 v171; // rbp\n  signed __int64 v172; // rdx\n  __int64 v173; // rsi\n  __int64 v174; // rdx\n  __int64 v175; // rax\n  __int64 v176; // rbx\n  __int64 v177; // r14\n  float v178; // xmm0_4\n  signed __int64 v179; // rbp\n  char *v180; // rbp\n  signed __int64 v181; // rbx\n  signed __int64 v182; // rax\n  __int64 v183; // rbx\n  __int64 v184; // r14\n  float v185; // xmm1_4\n  signed __int64 v186; // rax\n  __int64 v187; // r14\n  __int64 v188; // rbx\n  float v189; // xmm1_4\n  float v190; // xmm2_4\n  float v191; // xmm3_4\n  float v192; // xmm3_4\n  __int64 v193; // rax\n  __int64 v194; // r14\n  unsigned int v195; // ebx\n  signed __int64 v196; // r12\n  __int64 v197; // rax\n  unsigned int v198; // ebx\n  unsigned __int64 v199; // rbp\n  __int64 v200; // r15\n  unsigned int v201; // er12\n  int v202; // eax\n  double v203; // xmm0_8\n  char *v204; // rdi\n  float v205; // xmm2_4\n  float v206; // xmm1_4\n  unsigned int v207; // ebp\n  void *v208; // r14\n  __int64 v209; // rbx\n  int v210; // edx\n  int v211; // esi\n  int v212; // eax\n  __int64 v213; // rbx\n  __int64 v214; // r10\n  __int64 v215; // rcx\n  signed __int64 v216; // rcx\n  char v217; // dl\n  __int64 v218; // rdi\n  signed int v219; // er8\n  _BOOL4 v220; // edx\n  unsigned int v221; // esi\n  signed int v222; // esi\n  signed __int64 v223; // rcx\n  int v224; // edx\n  signed __int64 v225; // rsi\n  int v226; // er10\n  signed __int64 v227; // r10\n  int v228; // esi\n  __int64 v229; // rdi\n  signed __int64 v230; // rdx\n  int v231; // edi\n  char v232; // dl\n  __m128 v233; // xmm0\n  __int128 v234; // xmm1\n  signed __int64 v235; // rbx\n  float v236; // xmm1_4\n  int v237; // edx\n  int v238; // eax\n  int v239; // eax\n  double v240; // xmm0_8\n  double v241; // xmm4_8\n  double v242; // xmm5_8\n  double v243; // xmm3_8\n  double v244; // xmm7_8\n  float v245; // xmm1_4\n  double v246; // xmm6_8\n  float v247; // xmm0_4\n  float v248; // xmm0_4\n  float v249; // xmm6_4\n  unsigned int *v250; // rbp\n  double v251; // xmm1_8\n  double v252; // xmm0_8\n  double v253; // xmm6_8\n  float v254; // xmm0_4\n  double v255; // xmm1_8\n  int v256; // ebp\n  int v257; // eax\n  int v258; // er14\n  double v259; // xmm2_8\n  double v260; // xmm4_8\n  float v261; // xmm5_4\n  double v262; // xmm1_8\n  float v263; // xmm0_4\n  float v264; // xmm0_4\n  float v265; // xmm0_4\n  double v266; // xmm2_8\n  int *v267; // rbp\n  double v268; // xmm1_8\n  float v269; // xmm4_4\n  float v270; // xmm0_4\n  float v271; // [rsp+Ch] [rbp-B3Ch]\n  __int128 v272; // [rsp+10h] [rbp-B38h]\n  double v273; // [rsp+28h] [rbp-B20h]\n  unsigned int v274; // [rsp+34h] [rbp-B14h]\n  __int64 v275; // [rsp+38h] [rbp-B10h]\n  unsigned int v276; // [rsp+40h] [rbp-B08h]\n  bool v277; // [rsp+47h] [rbp-B01h]\n  __int64 v278; // [rsp+48h] [rbp-B00h]\n  bool v279; // [rsp+57h] [rbp-AF1h]\n  float v280; // [rsp+58h] [rbp-AF0h]\n  float v281; // [rsp+5Ch] [rbp-AECh]\n  int *v282; // [rsp+60h] [rbp-AE8h]\n  _DWORD *v283; // [rsp+68h] [rbp-AE0h]\n  __m128d v284; // [rsp+70h] [rbp-AD8h]\n  __m128 v285; // [rsp+80h] [rbp-AC8h]\n  float v286; // [rsp+90h] [rbp-AB8h]\n  unsigned int v287; // [rsp+94h] [rbp-AB4h]\n  __int64 v288; // [rsp+98h] [rbp-AB0h]\n  __m128 v289; // [rsp+A0h] [rbp-AA8h]\n  __m128 v290; // [rsp+B0h] [rbp-A98h]\n  char v291[400]; // [rsp+C0h] [rbp-A88h]\n  int v292[21]; // [rsp+250h] [rbp-8F8h]\n  int s[379]; // [rsp+2A4h] [rbp-8A4h]\n  unsigned int v294; // [rsp+890h] [rbp-2B8h]\n\n  v290 = a4;\n  v286 = a3;\n  v5 = a2;\n  v6 = a1;\n  if ( dword_98A7F4 )\n    sub_4340E0((__int64)\"engine/value_moves.c\", 0x957u, (__int64)\"stackp == 0\", 0xFFFFFFFF, 0xFFFFFFFF);\n  result = (int *)sub_423F30(a1);\n  if ( (_DWORD)result )\n    return result;\n  v8 = a1;\n  v278 = a1;\n  if ( dword_88C260 && !dword_88C21C )\n    goto LABEL_452;\n  v9 = 141LL * a1;\n  if ( dword_8B2378[141 * a1] < 0 && *(float *)&dword_8B236C[v9] <= 0.0 )\n    goto LABEL_452;\n  v10 = &dword_8B2378[v9];\n  v11 = 0LL;\n  v12 = 564LL * (signed int)v6;\n  do\n  {\n    v13 = v11 + 1;\n    if ( v11 > 0x77 )\n      break;\n    v14 = v10[v11++];\n  }\n  while ( v14 >= 0 );\n  v282 = v10;\n  sub_4938C0(v10, v13 - 1, 4LL, sub_453E10);\n  sub_423D80(v6);\n  v271 = 0.0;\n  v276 = 3 - v5;\n  sub_414850(3 - v5, (__int64)v291, (__int64)v292);\n  v15.m128_i32[0] = 0;\n  v283 = (int *)((char *)dword_8B2558 + v12);\n  v277 = v290.m128_f32[0] > 0.0 && v5 == 2 || v290.m128_f32[0] < 0.0 && v5 == 1;\n  v16 = (__m128)0x3F000000u;\n  v16.m128_f32[0] = 0.5 * v290.m128_f32[0];\n  v17.m128_f32[0] = 0.5 * v290.m128_f32[0];\n  v18 = _mm_cmplt_ss(v17, v15);\n  v289 = _mm_or_ps(_mm_and_ps(v18, _mm_xor_ps((__m128)xmmword_4AE070, v16)), _mm_andnot_ps(v18, v16));\n  v279 = v290.m128_f32[0] < 0.0 && v5 == 2 || v290.m128_f32[0] > 0.0 && v5 == 1;\n  v19 = 0LL;\n  v20 = 0.0;\n  v285.m128_i32[0] = 0;\n  *(float *)&v274 = 0.0;\n  LODWORD(v273) = v5;\n  v275 = 564LL * (signed int)v6;\n  while ( 2 )\n  {\n    v21 = *(int *)((char *)&dword_8B2378[v19] + v12);\n    if ( v21 >= 0 )\n    {\n      v22 = 3 * v21;\n      if ( dword_97ABB8[v22] & 1 )\n        goto LABEL_186;\n      v271 = 0.0;\n      v23 = &dword_97ABB0[v22];\n      switch ( dword_97ABB0[v22] )\n      {\n        case 2:\n        case 4:\n        case 6:\n          *(float *)&v272 = v20;\n          v26 = dword_97ABB4[v22];\n          if ( (unsigned __int8)byte_98A1B0[v26] == v5 )\n            sub_4340E0((__int64)\"engine/value_moves.c\", 0x538u, (__int64)\"board[aa] != color\", 0xFFFFFFFF, 0xFFFFFFFF);\n          v27 = 95 * v26;\n          if ( !dword_8E9524[95 * v26] )\n          {\n            v47 = (float *)&dword_8E9478[v27];\n            if ( dword_88C264 & 0x800 )\n              sub_433F90(\"  %1m:   %f (secondary) - attack on %1m (defenseless)\\n\", v6, (unsigned int)v26, *v47);\n            v285.m128_f32[0] = v285.m128_f32[0] + *v47;\n            v274 = 1;\n            goto LABEL_184;\n          }\n          v28 = *(float *)&dword_8E9478[v27] + *(float *)&dword_8E9478[v27];\n          v271 = *(float *)&dword_8E9478[v27] + *(float *)&dword_8E9478[v27];\n          if ( !dword_954FF0[19 * v26] )\n          {\n            if ( dword_88C264 & 0x800 )\n            {\n              sub_433F90(\"  %1m:   %f (secondary) - attack on %1m (dead)\\n\", v6, (unsigned int)v26, v28 * 0.2);\n              v28 = v271;\n            }\n            v12 = v275;\n            v91 = v285.m128_f32[0] + v28 * 0.2;\n            v285.m128_f32[0] = v91;\n            v274 = 1;\n            goto LABEL_185;\n          }\n          sub_423630(v26, (__int64)v291, (__int64)v292, 0);\n          if ( dword_88C268 )\n            sub_433F90(\"  %1m: attack on worm %1m\\n\", v6, (unsigned int)v26);\n          v29 = *v23;\n          if ( *v23 == 6 )\n          {\n            v92 = v271 * 0.5;\n            v271 = v271 * 0.5;\n            *(_QWORD *)&v30 = (unsigned int)v272;\n            if ( !dword_88C268 )\n              goto LABEL_157;\n            v93 = v92;\n            v94 = \"  %1m: -%f - attack on worm %1m only with bad ko\\n\";\nLABEL_156:\n            sub_433F90(v94, v6, (unsigned int)v26, v93, v30);\n            LODWORD(v30) = v272;\n            goto LABEL_157;\n          }\n          *(_QWORD *)&v30 = (unsigned int)v272;\n          if ( v29 == 4 )\n          {\n            v95 = v271 * 0.3;\n            v271 = v95;\n            if ( !dword_88C268 )\n              goto LABEL_157;\n            v93 = v95;\n            v94 = \"  %1m: -%f - attack on worm %1m only with good ko\\n\";\n            goto LABEL_156;\n          }\n          if ( v29 == 2 )\n            v271 = 0.0;\nLABEL_157:\n          v20 = *(float *)&v30 - v271;\n          v274 = 1;\n          v12 = v275;\nLABEL_186:\n          if ( (unsigned __int64)++v19 >= 0x78 )\n            break;\n          continue;\n        case 3:\n          *(float *)&v272 = v20;\n          v48 = dword_97ABB4[v22];\n          if ( v276 != (unsigned __int8)byte_98A1B0[v48] )\n          {\n            v49 = (1717986919 * v48 >> 35) + ((unsigned __int64)(1717986919 * v48) >> 63);\n            sub_4340E0(\n              (__int64)\"engine/value_moves.c\",\n              0x5AAu,\n              (__int64)\"board[aa] == other\",\n              v49 - 1,\n              v48 - 20 * v49 - 1);\n          }\n          if ( !dword_954FF0[19 * v48] )\n          {\n            if ( dword_88C264 & 0x800 )\n              sub_433F90(\"    %1m: 0.0 - threatens to capture %1m (dead)\\n\", v6, (unsigned int)v48);\n            goto LABEL_185;\n          }\n          if ( !(unsigned int)sub_406880(v6, v5, \"estimate_territorial_value-A\", 0, 0, 0) )\n            goto LABEL_185;\n          v280 = *(float *)&dword_8E9478[95 * v48];\n          v281 = 0.0;\n          v50 = byte_98A1B0[v48] == 0;\n          v288 = v48;\n          if ( v50 )\n          {\n            v96 = 0.0;\n            goto LABEL_203;\n          }\n          v51 = sub_40A7D0(v48, (__int64)&v294);\n          if ( byte_98A1B0[v48] )\n          {\n            v52 = (__int64)v283;\n            if ( *v283 == 1 )\n              goto LABEL_523;\n            if ( byte_98A1B0[dword_5641B0[0] + v278] != 3 )\n            {\n              v98 = v278 + dword_5641B0[0];\n              if ( dword_8E9470[95 * v98] == v5 )\n              {\n                v52 = 76 * v98;\n                if ( *(int *)((char *)dword_954FF0 + v52) )\n                  goto LABEL_523;\n              }\n            }\n            if ( byte_98A1B0[dword_5641B4 + v278] != 3\n              && (v99 = v278 + dword_5641B4, dword_8E9470[95 * v99] == v5)\n              && (v52 = 76 * v99, *(int *)((char *)dword_954FF0 + v52))\n              || byte_98A1B0[dword_5641B8 + v278] != 3\n              && (v100 = v278 + dword_5641B8, dword_8E9470[95 * v100] == v5)\n              && (v52 = 76 * v100, *(int *)((char *)dword_954FF0 + v52))\n              || byte_98A1B0[dword_5641BC + v278] != 3\n              && (v101 = v278 + dword_5641BC, dword_8E9470[95 * v101] == v5)\n              && (v52 = 76 * v101, *(int *)((char *)dword_954FF0 + v52)) )\n            {\nLABEL_523:\n              if ( (unsigned int)sub_43B6F0(v52, v48, &v287) == 5\n                && v287\n                && (unsigned int)sub_406880(v287, v276, \"estimate_territorial_value-b\", 0, 0, 0) )\n              {\n                if ( !byte_98A1B0[v278] || (unsigned int)sub_43B050(v6, 0LL) == 5 )\n                {\n                  sub_407030();\n                  sub_407030();\n                  goto LABEL_185;\n                }\n                sub_407030();\n              }\n            }\n          }\n          v96 = 0.0;\n          if ( (signed int)v51 <= 0 )\n            goto LABEL_203;\n          v102 = v51;\n          v103 = 0.0;\n          v104 = (int *)&v294;\n          v281 = 0.0;\n          while ( 1 )\n          {\n            *(float *)v284.m128d_f64 = v103;\n            v105 = *v104;\n            if ( !(unsigned int)sub_40B5B0(v6, *v104) )\n              break;\n            v96 = *(float *)v284.m128d_f64;\nLABEL_202:\n            ++v104;\n            v103 = v96;\n            if ( !--v102 )\n            {\nLABEL_203:\n              *(float *)v284.m128d_f64 = v96;\n              sub_407030();\n              v108 = dword_88C268;\n              if ( dword_88C268 > 0 )\n                --dword_88C268;\n              v12 = v275;\n              v20 = *(float *)&v272;\n              v109 = v280;\n              v110 = *(float *)v284.m128d_f64;\n              if ( *v283\n                || (v111 = sub_42F8F0(v288), v110 = *(float *)v284.m128d_f64, v109 = v280, v20 = *(float *)&v272, v111) )\n              {\n                v112 = (float)((float)(v109 + v109) + v281) - v110;\n                dword_88C268 = v108;\n                if ( v112 > 0.0 )\n                {\n                  v280 = v112;\n                  sub_422820(v6, v112);\n                  v20 = *(float *)&v272;\n                  if ( dword_88C268 )\n                  {\n                    sub_433F90(\"%1m:   %f (followup) - threatens to capture %1m\\n\", v6, v288, v280, COERCE_DOUBLE(v272));\n                    goto LABEL_185;\n                  }\n                }\n              }\n              else\n              {\n                dword_88C268 = v108;\n              }\n              goto LABEL_186;\n            }\n          }\n          v106 = 76LL * v105;\n          v107 = *(float *)v284.m128d_f64;\n          if ( *(_DWORD *)((char *)&xmmword_954FB0 + v106) != v5 )\n            goto LABEL_199;\n          if ( !dword_954FF0[v106 / 4]\n            && (float)(*(float *)((char *)&xmmword_954FC0 + v106) + *(float *)((char *)&xmmword_954FC0 + v106)) > v281 )\n          {\n            v281 = *(float *)((char *)&xmmword_954FC0 + v106) + *(float *)((char *)&xmmword_954FC0 + v106);\n          }\n          if ( (unsigned int)sub_43B050(v105, 0LL) )\n          {\n            v96 = *(float *)&dword_8E9478[95 * v105] + *(float *)&dword_8E9478[95 * v105];\n            v107 = *(float *)v284.m128d_f64;\n            if ( v96 <= *(float *)v284.m128d_f64 )\nLABEL_199:\n              v96 = v107;\n          }\n          else\n          {\n            v96 = *(float *)v284.m128d_f64;\n          }\n          v5 = LODWORD(v273);\n          goto LABEL_202;\n        case 8:\n        case 10:\n        case 12:\n          v31 = dword_97ABB4[v22];\n          v32 = (unsigned __int8)byte_98A1B0[v31];\n          *(float *)&v272 = v20;\n          if ( v32 != v5 )\n            sub_4340E0((__int64)\"engine/value_moves.c\", 0x56Du, (__int64)\"board[aa] == color\", 0xFFFFFFFF, 0xFFFFFFFF);\n          v33 = *(float *)&dword_8E9478[95 * v31] + *(float *)&dword_8E9478[95 * v31];\n          v271 = *(float *)&dword_8E9478[95 * v31] + *(float *)&dword_8E9478[95 * v31];\n          if ( !dword_954FF0[19 * v31] )\n          {\n            if ( dword_88C264 & 0x800 )\n            {\n              sub_433F90(\"  %1m:   %f (secondary) - defense of %1m (dead)\\n\", v6, (unsigned int)v31, v33 * 0.2);\n              v33 = v271;\n            }\n            v5 = LODWORD(v273);\n            v12 = v275;\n            v83 = v285.m128_f32[0] + v33 * 0.2;\n            v285.m128_f32[0] = v83;\n            goto LABEL_185;\n          }\n          sub_423630(v31, (__int64)v291, (__int64)v292, 2);\n          if ( dword_88C268 )\n            sub_433F90(\"  %1m: defense of worm %1m\\n\", v6, (unsigned int)v31);\n          v34 = *v23;\n          if ( *v23 == 12 )\n          {\n            v84 = v271 * 0.5;\n            v271 = v271 * 0.5;\n            *(_QWORD *)&v35 = (unsigned int)v272;\n            if ( dword_88C268 )\n            {\n              v85 = v84;\n              v86 = \"  %1m: -%f - defense of worm %1m with bad ko\\n\";\nLABEL_130:\n              sub_433F90(v86, v6, (unsigned int)v31, v85, v35);\n              LODWORD(v35) = v272;\n              goto LABEL_131;\n            }\n          }\n          else\n          {\n            *(_QWORD *)&v35 = (unsigned int)v272;\n            if ( v34 != 10 )\n            {\n              if ( v34 == 8 )\n                v271 = 0.0;\n              goto LABEL_131;\n            }\n            v87 = v271 * 0.3;\n            v271 = v87;\n            if ( dword_88C268 )\n            {\n              v85 = v87;\n              v86 = \"  %1m: -%f - defense of worm %1m with good ko\\n\";\n              goto LABEL_130;\n            }\n          }\nLABEL_131:\n          v20 = *(float *)&v35 - v271;\n          v274 = 1;\n          if ( *((_DWORD *)&xmmword_954FC0 + 19 * v31 + 3) != 2 )\n            goto LABEL_137;\n          *(float *)&v272 = v20;\n          v88 = sub_420BD0(v6, v31);\n          if ( v88 >= (signed int)sub_4207C0(v6, v31) )\n          {\n            v5 = LODWORD(v273);\n            goto LABEL_184;\n          }\n          v46 = (float)(*(float *)&dword_8E9478[95 * v31] + *(float *)&dword_8E9478[95 * v31]) * 0.45;\n          v271 = v46;\n          if ( dword_88C268 )\n          {\n            sub_433F90(\"  %1m: -%f - suspected ineffective defense of worm %1m\\n\", v6, (unsigned int)v31, v46);\n            v46 = v271;\n          }\n          v5 = LODWORD(v273);\n          goto LABEL_136;\n        case 9:\n          *(float *)&v272 = v20;\n          v53 = dword_97ABB4[v22];\n          if ( (unsigned __int8)byte_98A1B0[v53] != v5 )\n          {\n            v54 = (1717986919 * v53 >> 35) + ((unsigned __int64)(1717986919 * v53) >> 63);\n            sub_4340E0(\n              (__int64)\"engine/value_moves.c\",\n              0x626u,\n              (__int64)\"board[aa] == color\",\n              v54 - 1,\n              v53 - 20 * v54 - 1);\n          }\n          if ( !(unsigned int)sub_406880(v6, v5, \"estimate_territorial_value-A\", 0, 0, 0) )\n            goto LABEL_180;\n          if ( *v283 != 1\n            || (unsigned int)sub_43B050(v53, &v294) != 5\n            || !v294\n            || !(unsigned int)sub_406880(v294, v276, \"estimate_territorial_value-b\", 0, 0, 0) )\n          {\n            goto LABEL_179;\n          }\n          if ( !byte_98A1B0[v278] || (unsigned int)sub_43B050(v6, 0LL) == 5 )\n          {\n            sub_407030();\n            sub_407030();\n            goto LABEL_184;\n          }\n          sub_407030();\nLABEL_179:\n          sub_407030();\nLABEL_180:\n          sub_422820(v6, *(float *)&dword_8E9478[95 * v53] + *(float *)&dword_8E9478[95 * v53]);\n          if ( !dword_88C268 )\n            goto LABEL_184;\n          v59 = (float)(*(float *)&dword_8E9478[95 * v53] + *(float *)&dword_8E9478[95 * v53]);\n          v60 = \"  %1m: %f (followup) - threatens to defend %1m\\n\";\n          goto LABEL_182;\n        case 14:\n        case 16:\n        case 20:\n        case 22:\n        case 24:\n        case 44:\n        case 46:\n          v274 = 1;\n          goto LABEL_186;\n        case 18:\n          v55 = *((float *)&xmmword_954FC0 + 19 * dword_97ABB4[v22]);\n          v56 = v55 + v55;\n          v271 = v56;\n          if ( dword_88C268 )\n          {\n            *(float *)&v272 = v20;\n            sub_433F90(\"  %1m: %f - semeai involving %1m\\n\", v6, v56);\n            v20 = *(float *)&v272;\n            v56 = v271;\n          }\n          v20 = v20 + v56;\n          goto LABEL_186;\n        case 19:\n          *(float *)&v272 = v20;\n          v57 = dword_97ABB4[v22];\n          v58 = 76LL * dword_97ABB4[v22];\n          sub_422820(v6, *(float *)((char *)&xmmword_954FC0 + v58) + *(float *)((char *)&xmmword_954FC0 + v58));\n          if ( !dword_88C268 )\n            goto LABEL_184;\n          v59 = (float)(*(float *)((char *)&xmmword_954FC0 + v58) + *(float *)((char *)&xmmword_954FC0 + v58));\n          v60 = \"  %1m: %f (followup) - threatens to win semeai for %1m\\n\";\n          goto LABEL_110;\n        case 26:\n        case 28:\n        case 30:\n        case 32:\n        case 34:\n        case 36:\n          v24 = &dword_97ABB4[v22];\n          v25 = 0;\n          goto LABEL_37;\n        case 27:\n          v61 = dword_97ABB4[v22];\n          v62 = 76 * v61;\n          if ( !dword_954FF0[19 * v61] )\n          {\n            if ( dword_88C264 & 0x800 )\n            {\n              *(float *)&v272 = v20;\n              sub_433F90(\"    %1m: 0.0 - threatens to owl attack %1m (dead)\\n\", v6, (unsigned int)v61);\n              v20 = *(float *)&v272;\n            }\n            v5 = LODWORD(v273);\n            goto LABEL_186;\n          }\n          v63 = *(float *)((char *)&xmmword_954FC0 + v62) + *(float *)((char *)&xmmword_954FC0 + v62);\n          v64 = (signed int *)ptr;\n          v65 = *((_DWORD *)&xmmword_954FB0 + 19 * v61 + 1);\n          v66 = v65;\n          v67 = 104LL * v65;\n          v50 = *(_DWORD *)((char *)ptr + v67 + 44) == 0;\n          v68 = *(_DWORD *)((char *)ptr + v67 + 44) < 0;\n          *(float *)&v272 = v20;\n          if ( !v68 && !v50 )\n          {\n            v69 = (int *)(v62 + 9785268);\n            v70 = 0LL;\n            do\n            {\n              v71 = 26LL * v64[26 * v66 + 1 + v70];\n              v72 = v64[v71];\n              if ( *((_DWORD *)&xmmword_954FB0 + 19 * v72) == LODWORD(v273)\n                && dword_954FF0[19 * v72] == 2\n                && v64[v71 + 15] != 5 )\n              {\n                *(float *)v284.m128d_f64 = v63;\n                v63 = 0.0;\n                if ( (unsigned int)sub_420BD0(v6, v72) )\n                  v63 = *(float *)v284.m128d_f64;\n                v64 = (signed int *)ptr;\n                v65 = *v69;\n                v20 = *(float *)&v272;\n              }\n              ++v70;\n              v66 = v65;\n            }\n            while ( v70 < v64[26 * v65 + 11] );\n          }\n          if ( v63 <= 0.0 )\n          {\nLABEL_137:\n            v5 = LODWORD(v273);\n            v12 = v275;\n            goto LABEL_186;\n          }\n          *(float *)v284.m128d_f64 = v63;\n          sub_422820(v6, v63);\n          v12 = v275;\n          if ( dword_88C268 )\n            sub_433F90(\n              \"  %1m: %f (followup) - threatens to owl attack %1m\\n\",\n              v6,\n              (unsigned int)v61,\n              *(float *)v284.m128d_f64);\n          v5 = LODWORD(v273);\n          goto LABEL_185;\n        case 33:\n          *(float *)&v272 = v20;\n          v57 = dword_97ABB4[v22];\n          v73 = 76LL * dword_97ABB4[v22];\n          sub_422820(v6, *(float *)((char *)&xmmword_954FC0 + v73) + *(float *)((char *)&xmmword_954FC0 + v73));\n          if ( !dword_88C268 )\n            goto LABEL_184;\n          v59 = (float)(*(float *)((char *)&xmmword_954FC0 + v73) + *(float *)((char *)&xmmword_954FC0 + v73));\n          v60 = \"  %1m: %f (followup) - threatens to owl defend %1m\\n\";\nLABEL_110:\n          v74 = v6;\n          v75 = v57;\n          goto LABEL_183;\n        case 38:\n          *(float *)&v272 = v20;\n          v53 = dword_97ABB4[v22];\n          if ( dword_88C2FC )\n            goto LABEL_112;\n          v89 = sub_407AA0(v5);\n          if ( (unsigned int)sub_414710(v89, v53) )\n          {\n            v90 = *((float *)&xmmword_954FC0 + 19 * v53) * 1.5;\n            v271 = *((float *)&xmmword_954FC0 + 19 * v53) * 1.5;\n            if ( dword_88C268 )\n            {\n              sub_433F90(\"  %1m: %f - attack last move played, although it seems dead\\n\", v6, v90);\n              goto LABEL_162;\n            }\n            goto LABEL_163;\n          }\n          if ( (v279 && dword_88C2FC == 0) == 1 )\n          {\n            v97 = fmin(\n                    *((float *)&xmmword_954FC0 + 19 * v53) * 0.9,\n                    (float)((float)(v289.m128_f32[0] - (float)(dword_565C68 / 2)) + -1.0));\n            v90 = fmaxf(0.0, v97);\n            v271 = v90;\n            if ( dword_88C268 )\n            {\n              sub_433F90(\n                \"  %1m: %f - attack %1m, although it seems dead, as we are ahead\\n\",\n                v6,\n                (unsigned int)v53,\n                v90);\nLABEL_162:\n              v90 = v271;\n            }\nLABEL_163:\n            v12 = v275;\n            v20 = *(float *)&v272 + v90;\n            goto LABEL_186;\n          }\nLABEL_112:\n          v76 = *((float *)&xmmword_954FC0 + 19 * v53) + *((float *)&xmmword_954FC0 + 19 * v53);\n          v77 = 0.0;\n          if ( !v277 )\n            v77 = fminf(v76, v289.m128_f32[0]);\n          v78 = (float *)((char *)&xmmword_954FC0 + 76 * v53);\n          v271 = v77;\n          sub_4228B0(v6, v76);\n          if ( (unsigned __int8)byte_98A1B0[v53] == v5 )\n          {\n            if ( !dword_88C268 )\n              goto LABEL_184;\n            v59 = (float)(*v78 + *v78);\n            v60 = \"  %1m: %f (reverse followup) - prevent threat to attack %1m\\n\";\n          }\n          else\n          {\n            if ( !dword_88C268 )\n              goto LABEL_184;\n            v59 = (float)(*v78 + *v78);\n            v60 = \"  %1m: %f (reverse followup) - prevent threat to defend %1m\\n\";\n          }\nLABEL_182:\n          v74 = v6;\n          v75 = (unsigned int)v53;\nLABEL_183:\n          sub_433F90(v60, v74, v75, v59);\nLABEL_184:\n          v12 = v275;\nLABEL_185:\n          v20 = *(float *)&v272;\n          goto LABEL_186;\n        case 50:\n          v79 = (double)dword_97ABB4[v22] + 1.0;\n          v271 = v79;\n          v20 = v20 + v79;\n          if ( !dword_88C268 )\n            goto LABEL_186;\n          v80 = v79;\n          v81 = \"  %1m: %f - combination attack kills one of several worms\\n\";\n          goto LABEL_121;\n        case 52:\n          v82 = (float)dword_97ABB4[v22];\n          v271 = v82;\n          v20 = v20 + v82;\n          if ( !dword_88C268 )\n            goto LABEL_186;\n          v80 = v82;\n          v81 = \"  %1m: %f - defends against combination attack on several worms\\n\";\nLABEL_121:\n          *(float *)&v272 = v20;\n          sub_433F90(v81, v6, v80);\n          goto LABEL_185;\n        case 60:\n        case 62:\n          v36 = 4LL * dword_97ABB4[v22];\n          v24 = &dword_986964[v36];\n          v25 = dword_98696C[v36];\nLABEL_37:\n          *(float *)&v272 = v20;\n          v37 = *v24;\n          if ( *((_DWORD *)&xmmword_954FB0 + 19 * v37 + 3) == 1\n            && (unsigned int)sub_40B8D0(v37)\n            && (unsigned int)sub_40B0A0(v6, v37) )\n          {\n            if ( dword_88C268 )\n              sub_433F90(\"  %1m: -0.5 - penalty for ko stone %1m (workaround)\\n\", v6, (unsigned int)v37);\n            *(float *)&v272 = *(float *)&v272 + -0.5;\n          }\n          sub_422F30(v6, LODWORD(v273), v37, v25, *v23, (__int64)v291, (__int64)v292, (int *)&v271);\n          v271 = v271 + v271;\n          if ( dword_88C268 )\n            sub_433F90(\"  %1m: owl attack/defend for %1m\\n\", v6, (unsigned int)v37);\n          v38 = *v23;\n          v39 = *(float *)&v272;\n          switch ( __ROR4__(*v23 - 26, 1) )\n          {\n            case 0:\n            case 3:\n            case 0x11:\n            case 0x12:\n              v271 = 0.0;\n              goto LABEL_52;\n            case 1:\n            case 4:\n              v40 = v271 * 0.3;\n              v271 = v40;\n              if ( !dword_88C268 )\n                goto LABEL_52;\n              v41 = v40;\n              v42 = \"  %1m: -%f - owl attack/defense of %1m only with good ko\\n\";\n              goto LABEL_51;\n            case 2:\n            case 5:\n              v43 = v271 * 0.5;\n              v271 = v271 * 0.5;\n              if ( dword_88C268 )\n              {\n                v41 = v43;\n                v42 = \"  %1m: -%f - owl attack/defense of %1m only with bad ko\\n\";\nLABEL_51:\n                sub_433F90(v42, v6, (unsigned int)v37, v41, COERCE_DOUBLE(v272));\n                v39 = *(float *)&v272;\n              }\nLABEL_52:\n              v38 = *v23;\n              break;\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 0xA:\n            case 0xB:\n            case 0xC:\n            case 0xD:\n            case 0xE:\n            case 0xF:\n            case 0x10:\n              break;\n            default:\n              v39 = *(float *)&v272;\n              break;\n          }\n          v20 = v39 - v271;\n          v274 = 1;\n          if ( v38 > 0x1E )\n            goto LABEL_137;\n          v44 = 1409286144;\n          if ( !_bittest(&v44, v38) )\n            goto LABEL_137;\n          v45 = 95 * v37;\n          if ( *((_DWORD *)&xmmword_954FB0 + 19 * v37 + 3) != dword_8E9474[95 * v37] )\n            goto LABEL_137;\n          v5 = LODWORD(v273);\n          if ( dword_8E94D4[v45] == 5 )\n          {\n            *(float *)&v272 = v20;\n            if ( (unsigned int)sub_420590(v6, v37) == 5 )\n              goto LABEL_184;\n            v46 = (float)(*(float *)&dword_8E9478[v45] + *(float *)&dword_8E9478[v45]) * 0.05;\n            v271 = v46;\n            if ( dword_88C268 )\n            {\n              sub_433F90(\"  %1m: -%f - suspected ineffective owl attack of worm %1m\\n\", v6, (unsigned int)v37, v46);\n              v46 = v271;\n            }\nLABEL_136:\n            v12 = v275;\n            v20 = *(float *)&v272 - v46;\n          }\n          else\n          {\n            v12 = v275;\n          }\n          goto LABEL_186;\n        default:\n          goto LABEL_186;\n      }\n    }\n    break;\n  }\n  v271 = 0.0;\n  v113 = v278;\n  if ( *v283 != 1 || (*(float *)&v272 = v20, v114 = sub_43F100(v6, v5), v20 = *(float *)&v272, v114 != 5) )\n  {\n    v115 = 0;\n    v116 = 0;\n  }\n  else\n  {\n    v115 = 1120403456;\n    v116 = 2;\n  }\n  v117 = v274;\n  v291[v113] = v116;\n  v292[v113] = v115;\n  if ( !v117 )\n    goto LABEL_228;\n  if ( !*v283 )\n    goto LABEL_228;\n  *(float *)&v272 = v20;\n  v118 = sub_406E60(v6, v5, \"estimate_territorial_value\", 0, 0);\n  v20 = *(float *)&v272;\n  if ( !v118 )\n    goto LABEL_228;\n  if ( !(unsigned int)sub_41CA30(v6, v5, &v271, (int *)((char *)dword_8B2358 + v12)) )\n  {\n    v119 = v276;\n    sub_419D50(v276, (__int64)v291, (__int64)v292, (__int64)&unk_93EC18);\n    sub_41ADB0(&unk_93EC18, &unk_91C2B0, v6, (__int64)\"followup\");\n    v120 = &unk_927B28;\n    if ( v119 == 1 )\n      v120 = &unk_9333A0;\n    LODWORD(v271) = sub_41CCC0((__int64)v120, (__int64)&unk_93EC18, v5, v6);\n    LODWORD(v121) = sub_41CCC0((__int64)&unk_93EC18, (__int64)&unk_91C2B0, v5, v6);\n    *(float *)((char *)dword_8B2358 + v12) = v121;\n    sub_41CB40(v6, v5, v271, v121);\n  }\n  sub_407030();\n  if ( v271 == 0.0 )\n  {\n    v20 = *(float *)&v272;\n    if ( dword_88C264 & 0x800 )\n    {\n      sub_433F90(\"  %1m: 0.00 - change in territory\\n\", v6, COERCE_DOUBLE(LODWORD(v271)), COERCE_DOUBLE(v272));\n      goto LABEL_227;\n    }\n  }\n  else\n  {\n    v20 = *(float *)&v272;\n    if ( dword_88C268 )\n    {\n      sub_433F90(\"  %1m: %f - change in territory\\n\", v6, v271, COERCE_DOUBLE(v272));\nLABEL_227:\n      v20 = *(float *)&v272;\n      goto LABEL_228;\n    }\n  }\nLABEL_228:\n  v122 = v20 + v271;\n  v123 = *(float *)((char *)dword_8B236C + v12);\n  if ( v123 > v122 && v123 > 0.0 )\n  {\n    if ( dword_88C268 )\n    {\n      LODWORD(v272) = *(int *)((char *)dword_8B236C + v12);\n      sub_433F90(\"  %1m:   %f - revised to meet minimum territory value\\n\", v6, v123);\n      v122 = *(float *)&v272;\n    }\n    else\n    {\n      v122 = *(float *)((char *)dword_8B236C + v12);\n    }\n  }\n  v124 = *(float *)((char *)dword_8B2370 + v12);\n  if ( v122 > v124 )\n  {\n    if ( dword_88C268 )\n    {\n      LODWORD(v272) = *(int *)((char *)dword_8B2370 + v12);\n      sub_433F90(\"  %1m:   %f - revised to meet maximum territory value\\n\", v6, v124);\n      v122 = *(float *)&v272;\n    }\n    else\n    {\n      v122 = *(float *)((char *)dword_8B2370 + v12);\n    }\n  }\n  *(float *)((char *)dword_8B233C + v12) = v122;\n  *(float *)((char *)dword_8B2360 + v12) = v285.m128_f32[0] + *(float *)((char *)dword_8B2360 + v12);\n  v125 = (char *)s;\n  v126 = 0LL;\n  v127 = 0LL;\n  memset(s, 0, 0x5ECuLL);\n  v128.m128_i32[0] = v290.m128_i32[0];\n  *(float *)&v274 = 0.0;\n  v129 = _mm_cmplt_ss(v128, (__m128)0LL);\n  v130 = _mm_or_ps(_mm_and_ps(v129, _mm_xor_ps((__m128)xmmword_4AE070, v290)), _mm_andnot_ps(v129, v290));\n  if ( LODWORD(v273) == 2 )\n  {\n    v132.m128_i32[0] = v290.m128_i32[0];\n    v133.m128_i32[0] = -1046478848;\n    v131 = _mm_and_ps(_mm_cmplt_ss(v132, v133), v130);\n  }\n  else\n  {\n    v131 = 0LL;\n  }\n  v285 = v131;\n  v134.m128_i32[0] = v290.m128_i32[0];\n  v135 = 0LL;\n  v135.m128d_f64[0] = v290.m128_f32[0] * 0.65;\n  v136.m128d_f64[0] = 0.0;\n  v137.m128d_f64[0] = v290.m128_f32[0] * 0.65;\n  v138 = _mm_cmplt_sd(v137, v136);\n  v284 = _mm_or_pd(_mm_and_pd(v138, _mm_xor_pd((__m128d)xmmword_4AE140, v135)), _mm_andn_pd(v138, v135));\n  if ( LODWORD(v273) == 1 )\n  {\n    v139.m128_i32[0] = 1101004800;\n    v140 = _mm_cmplt_ss(v139, v134);\n    v130 = _mm_and_ps(v130, v140);\n    v285 = _mm_or_ps(_mm_andnot_ps(v140, v285), v130);\n  }\n  v290.m128_u64[0] = (unsigned __int64)dword_8B233C + v12;\n  do\n  {\n    v141 = *(int *)((char *)&dword_8B2378[v126] + v12);\n    if ( v141 < 0 )\n      break;\n    v142 = 3 * v141;\n    if ( !(dword_97ABB8[3 * v141] & 2) )\n    {\n      v143 = dword_97ABB0[3 * v141];\n      switch ( v143 )\n      {\n        case 2:\n        case 4:\n        case 6:\n        case 8:\n        case 10:\n        case 12:\n          v144 = dword_97ABB4[v142];\n          v145 = 95 * v144;\n          if ( !dword_8E9524[95 * v144] )\n            goto LABEL_335;\n          v146 = *(_DWORD *)((char *)&qword_8E9494 + v145 * 4 + 4);\n          v147 = 0.0;\n          if ( v146 >= 2 )\n          {\n            v148 = v143 - 4;\n            v149 = 1.0;\n            if ( v148 <= 8 )\n              v149 = qword_4B0020[v148];\n            v147 = (double)(v146 - 1) * 10.0 * v149;\n            if ( dword_88C268 )\n            {\n              v125 = \"  %1m: %f - %1m cutstone\\n\";\n              v127 = v6;\n              *(float *)&v272 = (double)(v146 - 1) * 10.0 * v149;\n              sub_433F90(\"  %1m: %f - %1m cutstone\\n\", v6, (unsigned int)v144, v147);\n              v147 = *(float *)&v272;\n            }\n          }\n          v130.m128_f32[0] = *(float *)&v274 + v147;\n          *(float *)&v274 = *(float *)&v274 + v147;\n          if ( *((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * v144 + 1) + 15) == 5\n            || dword_8E94A0[v145]\n            || dword_98A7D4 <= 0 )\n          {\n            goto LABEL_335;\n          }\n          v150 = 0LL;\n          break;\n        case 14:\n          if ( !dword_88C2FC )\n          {\n            v193 = dword_97ABB4[v142];\n            v194 = *((signed int *)&xmmword_954FB0 + 19 * dword_983560[v193] + 2);\n            *(_QWORD *)&v272 = *((signed int *)&xmmword_954FB0 + 19 * dword_984470[v193] + 2);\n            v125 = (char *)LODWORD(v273);\n            v195 = sub_407AA0(SLODWORD(v273));\n            if ( v195 )\n            {\n              v196 = 19LL * (signed int)v195;\n              if ( !dword_954FF0[v196] )\n              {\n                v125 = (char *)(unsigned int)v194;\n                v127 = v195;\n                if ( (unsigned int)sub_416160(v194, v195) )\n                {\n                  v125 = (char *)v272;\n                  v127 = v195;\n                  if ( (unsigned int)sub_416160(v272, v195) )\n                  {\n                    v130.m128_u64[0] = 4609884578576439706LL;\n                    if ( (_DWORD)v194 != (_DWORD)v272 )\n                    {\n                      v130.m128_u64[0] = 4605380978949069210LL;\n                      if ( *((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * v194 + 1) + 15) != 5 )\n                        v130.m128_u64[0] = qword_4AE150[*((_DWORD *)ptr\n                                                        + 26 * *((signed int *)&xmmword_954FB0 + 19 * v272 + 1)\n                                                        + 15) == 5];\n                    }\n                    v130.m128_f32[0] = *(float *)((char *)&xmmword_954FC0 + v196 * 4) * *(double *)v130.m128_u64;\n                    v197 = *((signed int *)&xmmword_954FB0 + 19 * (signed int)v195 + 2);\n                    if ( v130.m128_f32[0] > *(float *)&v292[v197] )\n                    {\n                      v292[v197] = v130.m128_i32[0];\n                      if ( dword_88C264 & 0x800 )\n                      {\n                        *(double *)v130.m128_u64 = v130.m128_f32[0];\n                        v125 = \"  %1m:   %f - connect %1m and %1m to attack thrashing dragon %1m\\n\";\n                        v127 = v6;\n                        sub_433F90(\n                          \"  %1m:   %f - connect %1m and %1m to attack thrashing dragon %1m\\n\",\n                          v6,\n                          (unsigned int)v194,\n                          (_QWORD)v272,\n                          v195,\n                          *(double *)v130.m128_u64);\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n          if ( *v283 )\n            goto LABEL_300;\n          goto LABEL_335;\n        case 16:\nLABEL_300:\n          if ( !dword_88C2FC || *v283 )\n          {\n            v175 = dword_97ABB4[v142];\n            v176 = *((signed int *)&xmmword_954FB0 + 19 * dword_983560[v175] + 2);\n            v177 = *((signed int *)&xmmword_954FB0 + 19 * dword_984470[v175] + 2);\n            if ( (_DWORD)v176 != (_DWORD)v177 )\n            {\n              v178 = v285.m128_f32[0];\n              sub_4541F0((unsigned int)v176, (unsigned int)v177, v6);\n              if ( v178 > *(float *)&v292[v176] )\n              {\n                *(float *)&v292[v176] = v178;\n                if ( dword_88C264 & 0x800 )\n                  sub_433F90(\"  %1m:   %f - %1m cut/connect strategic value\\n\", v6, (unsigned int)v176, v178);\n              }\n              v125 = (char *)(unsigned int)v177;\n              v127 = (unsigned int)v176;\n              v130.m128_i32[0] = v285.m128_i32[0];\n              sub_4541F0((unsigned int)v177, (unsigned int)v176, v6);\n              if ( v130.m128_f32[0] > *(float *)&v292[v177] )\n              {\n                v292[v177] = v130.m128_i32[0];\n                if ( dword_88C264 & 0x800 )\n                {\n                  *(double *)v130.m128_u64 = v130.m128_f32[0];\n                  v125 = \"  %1m:   %f - %1m cut/connect strategic value\\n\";\n                  v127 = v6;\n                  sub_433F90(\n                    \"  %1m:   %f - %1m cut/connect strategic value\\n\",\n                    v6,\n                    (unsigned int)v177,\n                    *(double *)v130.m128_u64);\n                }\n              }\n            }\n          }\n          goto LABEL_335;\n        case 42:\n          v174 = dword_97ABB4[v142];\n          v179 = 104LL * *((signed int *)&xmmword_954FB0 + 19 * v174 + 1);\n          v127 = *(signed int *)((char *)ptr + v179 + 44);\n          if ( v127 <= 0 )\n            goto LABEL_524;\n          v125 = (char *)(dword_954FF0[19 * *((signed int *)ptr + 26 * *(signed int *)((char *)ptr + v179 + 4))] == 2);\n          if ( (_DWORD)v127 != 1 )\n          {\n            v180 = (char *)ptr + v179 + 8;\n            v181 = 1LL;\n            do\n            {\n              if ( dword_954FF0[19 * *((signed int *)ptr + 26 * *(signed int *)&v180[4 * v181 - 4])] == 2 )\n                v125 = (char *)1;\n              ++v181;\n            }\n            while ( v181 < v127 );\n          }\n          if ( !(_DWORD)v125 )\n          {\nLABEL_524:\n            v130.m128_i32[0] = 0;\n            if ( !v277 )\n              v130.m128_f32[0] = fmin(\n                                   (float)(*((float *)&xmmword_954FC0 + 19 * v174)\n                                         + *((float *)&xmmword_954FC0 + 19 * v174)),\n                                   v284.m128d_f64[0]);\n            if ( v130.m128_f32[0] > *(float *)&v292[v174] )\n            {\n              v292[v174] = v130.m128_i32[0];\n              if ( dword_88C264 & 0x800 )\n              {\n                *(double *)v130.m128_u64 = v130.m128_f32[0];\n                v125 = \"  %1m:   %f - %1m uncertain owl defense bonus\\n\";\n                v127 = v6;\n                goto LABEL_321;\n              }\n            }\n          }\n          goto LABEL_335;\n        case 44:\n        case 46:\n          v164 = dword_97ABB4[v142];\n          v165 = *((float *)&xmmword_954FC0 + 19 * v164);\n          sub_493C80(v125, v127);\n          *(double *)v130.m128_u64 = v165 * 1.8;\n          v166 = (signed int *)ptr;\n          v167 = *((_DWORD *)&xmmword_954FB0 + 19 * v164 + 1);\n          v168 = v167;\n          v127 = 104LL * v167;\n          v125 = (char *)*(unsigned int *)((char *)ptr + v127 + 60);\n          v169 = 0.0;\n          if ( (unsigned int)v125 > 6 || (v170 = 97, !_bittest(&v170, (unsigned int)v125)) )\n          {\n            if ( (_DWORD)v125 != 1 || (v125 = (char *)(unsigned int)dword_88C2FC, !dword_88C2FC) )\n              v169 = *(float *)((char *)ptr + v127 + 64);\n          }\n          v130.m128_f32[0] = *(double *)v130.m128_u64 * v169;\n          if ( dword_97ABB0[v142] == 44 && *(_DWORD *)((char *)ptr + v127 + 44) > 0 )\n          {\n            v171 = 0LL;\n            do\n            {\n              v172 = 26LL * v166[26 * v168 + 1 + v171];\n              v173 = v166[v172];\n              v125 = (char *)(76 * v173);\n              if ( *((_DWORD *)&xmmword_954FB0 + 19 * v173) == LODWORD(v273)\n                && *(int *)((char *)dword_954FF0 + (_QWORD)v125) == 2\n                && v166[v172 + 15] != 5 )\n              {\n                LODWORD(v272) = v130.m128_i32[0];\n                v125 = (char *)v6;\n                v130.m128_i32[0] = 0;\n                if ( (unsigned int)sub_420BD0(v6, v173) )\n                  v130.m128_i32[0] = v272;\n                v166 = (signed int *)ptr;\n                v167 = *((_DWORD *)&xmmword_954FB0 + 19 * v164 + 1);\n              }\n              ++v171;\n              v168 = v167;\n              v127 = v166[26 * v167 + 11];\n            }\n            while ( v171 < v127 );\n          }\n          if ( v130.m128_f32[0] > *(float *)&v292[v164] )\n          {\n            v292[v164] = v130.m128_i32[0];\n            if ( dword_88C264 & 0x800 )\n            {\n              *(double *)v130.m128_u64 = v130.m128_f32[0];\n              v125 = \"  %1m:   %f - %1m strategic attack/defend\\n\";\n              v127 = v6;\n              v174 = (unsigned int)v164;\nLABEL_321:\n              sub_433F90(v125, v127, v174, *(double *)v130.m128_u64);\n            }\n          }\n          goto LABEL_335;\n        case 100:\n          v182 = 4LL * dword_97ABB4[v142];\n          v183 = dword_986964[v182];\n          v184 = dword_98696C[v182];\n          if ( dword_954FF0[19 * v183] || dword_954FF0[19 * v184] )\n          {\n            v127 = 50LL;\n            v125 = (char *)v6;\n            if ( !(unsigned int)sub_4204E0(v6, 50, -1) )\n            {\n              sub_4540C0(v6, (unsigned int)v183);\n              LODWORD(v272) = v130.m128_i32[0];\n              v125 = (char *)v6;\n              v127 = (unsigned int)v184;\n              sub_4540C0(v6, (unsigned int)v184);\n              v185 = fminf(*(float *)&v272, v130.m128_f32[0]);\n              if ( dword_88C268 )\n              {\n                v289.m128_f32[0] = v185;\n                v125 = \"  %1m: %f - either attacks %1m (%f) or attacks %1m (%f)\\n\";\n                v127 = v6;\n                sub_433F90(\n                  \"  %1m: %f - either attacks %1m (%f) or attacks %1m (%f)\\n\",\n                  v6,\n                  (unsigned int)v183,\n                  (unsigned int)v184,\n                  v185,\n                  *(float *)&v272,\n                  v130.m128_f32[0]);\n                v185 = v289.m128_f32[0];\n              }\n              v130.m128_f32[0] = *(float *)&v274 + v185;\n              goto LABEL_334;\n            }\n          }\n          goto LABEL_335;\n        case 102:\n          v186 = 4LL * dword_97ABB4[v142];\n          v187 = dword_98632C[v186];\n          v188 = dword_986324[v186];\n          if ( dword_954FF0[19 * v188] || dword_954FF0[19 * v187] )\n          {\n            v127 = 52LL;\n            v125 = (char *)v6;\n            if ( !(unsigned int)sub_4204E0(v6, 52, -1) )\n            {\n              v189 = *(float *)&dword_8E9478[95 * v188];\n              v190 = *(float *)&dword_8E9478[95 * v187];\n              v191 = fminf(*(float *)&dword_8E9478[95 * v188], v190);\n              v192 = v191 + v191;\n              if ( dword_88C268 )\n              {\n                v125 = \"  %1m: %f - both defends %1m (%f) and defends %1m (%f)\\n\";\n                v127 = v6;\n                *(float *)&v272 = v192;\n                sub_433F90(\n                  \"  %1m: %f - both defends %1m (%f) and defends %1m (%f)\\n\",\n                  v6,\n                  (unsigned int)v188,\n                  (unsigned int)v187,\n                  v192,\n                  v189,\n                  v190);\n                v192 = *(float *)&v272;\n              }\n              v130.m128_f32[0] = *(float *)&v274 + v192;\nLABEL_334:\n              v274 = v130.m128_u32[0];\n            }\n          }\n          goto LABEL_335;\n        default:\n          goto LABEL_335;\n      }\n      while ( 2 )\n      {\n        if ( dword_989850[v150] == (_DWORD)v144 )\n        {\n          v151 = dword_989490[v150];\n          v152 = *((float *)&xmmword_954FC0 + 19 * v151);\n          sub_493C80(v125, v127);\n          v153 = v152 * 1.8;\n          v154 = 104LL * *((signed int *)&xmmword_954FB0 + 19 * v151 + 1);\n          if ( *(_DWORD *)((char *)ptr + v154 + 60) != 1 || (v155 = 0.0, !dword_88C2FC) )\n            v155 = *(float *)((char *)ptr + v154 + 64);\n          *(double *)v130.m128_u64 = v153 * v155;\n          v156 = *(double *)v130.m128_u64;\n          if ( dword_954FF0[19 * v151] )\n          {\n            if ( *((_DWORD *)&xmmword_954FB0 + 19 * v151 + 3) == dword_8E9474[95 * v151] )\n            {\n              v125 = (char *)v6;\n              v127 = (unsigned int)v151;\n              *(float *)&v272 = *(double *)v130.m128_u64;\n              if ( (unsigned int)sub_420590(v6, v151)\n                || (v125 = (char *)v6,\n                    v127 = (unsigned int)v151,\n                    v157 = sub_4207C0(v6, v151),\n                    v156 = *(float *)&v272,\n                    v157) )\n              {\n                v156 = 0.0;\n              }\n            }\n          }\n          if ( dword_8E94D4[95 * v151] )\n          {\n            v158 = (unsigned __int8)byte_98A1B0[v151];\n            v159 = LODWORD(v273);\n            *(float *)&v272 = v156;\n            if ( v158 == LODWORD(v273) )\n            {\n              v125 = (char *)v6;\n              v127 = (unsigned int)v151;\n              v160 = sub_44B0A0(v6, v151);\n              v156 = *(float *)&v272;\n              if ( v160 )\n              {\n                v158 = (unsigned __int8)byte_98A1B0[v151];\n                v159 = LODWORD(v273);\n                goto LABEL_269;\n              }\nLABEL_271:\n              v156 = 0.0;\n            }\n            else\n            {\nLABEL_269:\n              if ( 3 - v158 == v159 )\n              {\n                v125 = (char *)v6;\n                v127 = (unsigned int)v151;\n                v161 = sub_44AE70(v6, v151);\n                v156 = *(float *)&v272;\n                if ( !v161 )\n                  goto LABEL_271;\n              }\n            }\n          }\n          if ( dword_88C2FC )\n          {\n            v130.m128_i32[0] = 0;\n            if ( *(float *)v290.m128_u64[0] < 0.0 )\n            {\n              v162 = *((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * v151 + 1) + 15);\n              if ( v162 <= 9 )\n              {\n                v163 = 770;\n                if ( _bittest(&v163, v162) )\n                  v156 = 0.0;\n              }\n            }\n          }\n          if ( v156 > *(float *)&v292[v151] )\n          {\n            if ( dword_88C264 & 0x800 )\n            {\n              *(double *)v130.m128_u64 = v156;\n              v125 = \"  %1m:   %f - %1m attacked/defended\\n\";\n              v127 = v6;\n              *(float *)&v272 = v156;\n              sub_433F90(\"  %1m:   %f - %1m attacked/defended\\n\", v6, (unsigned int)v151, v156);\n              v156 = *(float *)&v272;\n            }\n            *(float *)&v292[v151] = v156;\n          }\n        }\n        if ( ++v150 >= dword_98A7D4 )\n          break;\n        continue;\n      }\n    }\nLABEL_335:\n    ++v126;\n    v12 = v275;\n  }\n  while ( v126 < 0x78 );\n  v198 = 21;\n  v199 = 0LL;\n  v200 = 0LL;\n  do\n  {\n    if ( *(float *)&s[v200] == 0.0 )\n      goto LABEL_378;\n    LODWORD(v272) = s[v200];\n    v201 = v200 + 21;\n    if ( v200 + 21 != dword_9555F4[v199 / 4] )\n      sub_4340E0(\n        (__int64)\"engine/value_moves.c\",\n        0x8FAu,\n        (__int64)\"dragon[aa].origin == aa\",\n        ((signed int)v200 + 21) / 0x14u - 1,\n        v200 + 20 - 20 * (v198 / 0x14));\n    v202 = dword_95562C[v199 / 4];\n    if ( v202 == 2 )\n    {\n      if ( !(unsigned int)sub_420DB0(v6, v201) )\n      {\n        if ( dword_88C264 & 0x800 )\n          sub_433F90(\"  %1m: 0.0 - disregarding strategic effect on %1m (critical dragon)\\n\", v6, v201);\n        goto LABEL_378;\n      }\n      v202 = dword_95562C[v199 / 4];\n    }\n    if ( v202\n      && dword_9555F8[v199 / 4] == dword_8EB3A0[5 * v199 / 4]\n      && ((unsigned int)sub_420590(v6, v201) || (unsigned int)sub_4207C0(v6, v201)) )\n    {\n      if ( !dword_88C268 )\n        goto LABEL_378;\n      v203 = *(float *)&v272;\n      v204 = \"  %1m:   %f - %1m strategic value already counted - A.\\n\";\nLABEL_372:\n      sub_433F90(v204, v6, v201, v203);\n      goto LABEL_378;\n    }\n    if ( (unsigned int)sub_4209F0(v6, v201)\n      || (unsigned int)sub_420BD0(v6, v201)\n      || (unsigned int)sub_4204E0(v6, 18, v201) )\n    {\n      v205 = *(float *)&v272 - (float)(*(float *)&dword_9555FC[v199 / 4] + *(float *)&dword_9555FC[v199 / 4]);\n      if ( v205 <= 0.0 )\n      {\n        if ( !dword_88C268 )\n          goto LABEL_378;\n        v203 = *(float *)&v272;\n        v204 = \"  %1m:   %f - %1m strategic value already counted - B.\\n\";\n        goto LABEL_372;\n      }\n      if ( dword_88C268 )\n      {\n        *(float *)&v272 = *(float *)&v272\n                        - (float)(*(float *)&dword_9555FC[v199 / 4] + *(float *)&dword_9555FC[v199 / 4]);\n        sub_433F90(\"  %1m: %f - strategic bonus for %1m\\n\", v6, v201, v205);\n        v205 = *(float *)&v272;\n      }\n      *(float *)&v274 = *(float *)&v274 + v205;\n    }\n    else\n    {\n      v206 = *(float *)&v272;\n      if ( dword_88C268 )\n      {\n        sub_433F90(\"  %1m: %f - strategic effect on %1m\\n\", v6, v201, *(float *)&v272);\n        v206 = *(float *)&v272;\n      }\n      *(float *)&v274 = *(float *)&v274 + v206;\n    }\nLABEL_378:\n    ++v200;\n    v199 += 76LL;\n    ++v198;\n  }\n  while ( v200 != 379 );\n  v207 = v276;\n  v208 = &unk_927B28;\n  if ( v276 == 1 )\n    v208 = &unk_9333A0;\n  v209 = v278;\n  if ( !byte_98A1B0[dword_5641B0[0] + v278]\n    && (unsigned int)sub_41A570((__int64)v208, (signed int)v278 + dword_5641B0[0]) != v207\n    || !byte_98A1B0[dword_5641B4 + v209]\n    && (unsigned int)sub_41A570((__int64)v208, (signed int)v209 + dword_5641B4) != v207\n    || !byte_98A1B0[dword_5641B8 + v209]\n    && (unsigned int)sub_41A570((__int64)v208, (signed int)v209 + dword_5641B8) != v207\n    || !byte_98A1B0[dword_5641BC + v209]\n    && (unsigned int)sub_41A570((__int64)v208, (signed int)v209 + dword_5641BC) != v207\n    || (unsigned int)sub_41A570((__int64)v208, v6) != v207 )\n  {\n    goto LABEL_451;\n  }\n  v210 = (1717986919 * v209 >> 35) + ((unsigned __int64)(1717986919 * v209) >> 63);\n  v211 = dword_565C68 - v210;\n  if ( v210 <= dword_565C68 - v210 )\n    v211 = v210 - 1;\n  v212 = dword_565C68 - (v6 - 20 * v210);\n  if ( (signed int)(v6 - 20 * v210) <= v212 )\n    v212 = v6 - 20 * v210 - 1;\n  if ( v211 <= v212 )\n    v212 = v211;\n  *(_QWORD *)&v272 = dword_5641BC;\n  v213 = 0LL;\n  v214 = (__int64)v282;\n  while ( 2 )\n  {\n    v215 = *(signed int *)(v214 + 4 * v213);\n    if ( v215 < 0 )\n      goto LABEL_447;\n    v216 = 3 * v215;\n    switch ( dword_97ABB0[v216] )\n    {\n      case 8:\n        v217 = 7;\n        if ( *((_DWORD *)&xmmword_954FB0 + 19 * dword_97ABB4[v216] + 3) > 1 )\n          v217 = 1;\n        goto LABEL_445;\n      case 22:\n      case 24:\n      case 44:\n        goto LABEL_446;\n      case 32:\n        v218 = dword_97ABB4[v216];\n        if ( *((_DWORD *)&xmmword_954FB0 + 19 * v218 + 3) > 1\n          || *((_DWORD *)&qword_8E9494 + 95 * v218) > 0\n          || v212 < 3\n          || *((_DWORD *)&qword_8E9494 + 95 * v218 + 1) > 0 )\n        {\n          goto LABEL_451;\n        }\n        v219 = 0;\n        v220 = 0;\n        v221 = v276;\n        if ( v276 != (unsigned __int8)byte_98A1B0[v218 + dword_5641B0[0]] )\n          goto LABEL_415;\n        if ( *((_DWORD *)&xmmword_954FB0 + 19 * (v218 + dword_5641B0[0]) + 3) == 1 )\n        {\n          v222 = 1;\n          v219 = 0;\n          goto LABEL_441;\n        }\n        v223 = 104LL * *((signed int *)&xmmword_954FB0 + 19 * (v218 + dword_5641B0[0]) + 1);\n        v224 = *(_DWORD *)((char *)ptr + v223 + 60);\n        if ( (unsigned int)(v224 - 8) >= 2 )\n        {\n          if ( v224 == 1 )\n          {\n            v219 = 0;\n            v220 = *(float *)((char *)ptr + v223 + 64) > 0.4;\n          }\n          else\n          {\n            v220 = 1;\n            v219 = 0;\n          }\n        }\n        else\n        {\n          v220 = 0;\n          v219 = 1;\n        }\n        v221 = v276;\nLABEL_415:\n        if ( v221 != (unsigned __int8)byte_98A1B0[v218 + dword_5641B4] )\n          goto LABEL_424;\n        v222 = 1;\n        if ( *((_DWORD *)&xmmword_954FB0 + 19 * (v218 + dword_5641B4) + 3) == 1 )\n          goto LABEL_441;\n        v225 = 104LL * *((signed int *)&xmmword_954FB0 + 19 * (v218 + dword_5641B4) + 1);\n        v226 = *(_DWORD *)((char *)ptr + v225 + 60);\n        if ( (unsigned int)(v226 - 8) < 2 )\n        {\n          v219 = 1;\nLABEL_423:\n          v214 = (__int64)v282;\n          goto LABEL_424;\n        }\n        if ( v226 != 1 )\n        {\n          v220 = 1;\n          goto LABEL_423;\n        }\n        v214 = (__int64)v282;\n        if ( *(float *)((char *)ptr + v225 + 64) > 0.4 )\n          v220 = 1;\nLABEL_424:\n        if ( v276 != (unsigned __int8)byte_98A1B0[v218 + dword_5641B8] )\n        {\n          v222 = v220;\n          goto LABEL_434;\n        }\n        v222 = 1;\n        if ( *((_DWORD *)&xmmword_954FB0 + 19 * (v218 + dword_5641B8) + 3) == 1 )\n          goto LABEL_441;\n        v227 = 104LL * *((signed int *)&xmmword_954FB0 + 19 * (v218 + dword_5641B8) + 1);\n        v228 = *(_DWORD *)((char *)ptr + v227 + 60);\n        if ( (unsigned int)(v228 - 8) < 2 )\n        {\n          v219 = 1;\nLABEL_428:\n          v222 = v220;\n          goto LABEL_433;\n        }\n        if ( v228 == 1 && *(float *)((char *)ptr + v227 + 64) <= 0.4 )\n          goto LABEL_428;\n        v222 = 1;\nLABEL_433:\n        v214 = (__int64)v282;\nLABEL_434:\n        if ( v276 != (unsigned __int8)byte_98A1B0[v218 + (_QWORD)v272] )\n          goto LABEL_441;\n        v229 = v272 + v218;\n        if ( *((_DWORD *)&xmmword_954FB0 + 19 * v229 + 3) == 1 )\n          goto LABEL_440;\n        v230 = 104LL * *((signed int *)&xmmword_954FB0 + 19 * v229 + 1);\n        v231 = *(_DWORD *)((char *)ptr + v230 + 60);\n        if ( (unsigned int)(v231 - 8) >= 2 )\n        {\n          if ( v231 != 1 || *(float *)((char *)ptr + v230 + 64) > 0.4 )\nLABEL_440:\n            v222 = 1;\n        }\n        else\n        {\n          v219 = 1;\n        }\nLABEL_441:\n        v217 = 1;\n        if ( !v222 )\n          v217 = 7;\n        if ( !v219 )\n          v217 = 1;\nLABEL_445:\n        v232 = v217 & 7;\n        if ( v232 == 7 )\n        {\nLABEL_446:\n          if ( (unsigned __int64)++v213 >= 0x78 )\n            goto LABEL_447;\n          continue;\n        }\n        if ( v232 == 5 )\n        {\nLABEL_447:\n          v233 = sub_41ABD0((__int64)v208, v6, v276);\n          v234 = 0LL;\n          *(float *)&v234 = fmax((float)(v233.m128_f32[0] * 12.0), 0.0);\n          if ( *(float *)&v234 > 0.0 )\n          {\n            if ( dword_88C268 )\n            {\n              v272 = v234;\n              sub_433F90(\n                \"  %1m: %f - strategic penalty, considered as invasion.\\n\",\n                v6,\n                COERCE_FLOAT(xmmword_4AE070 ^ v234));\n              LODWORD(v234) = v272;\n            }\n            *(float *)&v274 = *(float *)&v274 - *(float *)&v234;\n          }\n        }\nLABEL_451:\n        *(int *)((char *)dword_8B2340 + v275) = v274;\n        v5 = LODWORD(v273);\n        v8 = v278;\nLABEL_452:\n        v235 = 141 * v8;\n        *(float *)&v273 = *(float *)&dword_8B233C[141 * v8] + *(float *)&dword_8B2340[141 * v8];\n        v236 = *(float *)&dword_8B2344[141 * v8] - *(float *)&dword_8B2348[141 * v8];\n        if ( v6 > 0x1A4 || byte_98A1B0[v8] == 3 )\n        {\n          v237 = (1717986919 * v8 >> 35) + ((unsigned __int64)(1717986919 * v8) >> 63);\n          *(float *)&v272 = *(float *)&dword_8B2344[141 * v8] - *(float *)&dword_8B2348[141 * v8];\n          sub_4340E0((__int64)\"engine/value_moves.c\", 0x442u, (__int64)\"ON_BOARD1(pos)\", v237 - 1, -20 * v237 + v6 - 1);\n        }\n        v238 = dword_8B234C[v235];\n        if ( v238 >= 2 )\n          v236 = v236 + (float)(v238 - 1);\n        v239 = dword_8B2350[v235];\n        if ( v239 >= 2 )\n          v236 = v236 - (float)(v239 - 1);\n        v240 = pow(1.05, v236);\n        v242 = 0.0;\n        if ( *(float *)&v273 <= -0.001 )\n          *(_QWORD *)&v242 = LODWORD(v273);\n        v243 = 0.001;\n        if ( *(float *)&v273 >= 0.001 )\n          *(_QWORD *)&v242 = LODWORD(v273);\n        *(float *)&a5 = v240;\n        *(_QWORD *)&v244 = (unsigned int)dword_8B2354[v235];\n        if ( *(float *)&v242 <= 0.0 )\n        {\n          *(float *)&dword_8B2338[v235] = (float)(fminf(*(float *)&v244, *(float *)&dword_8B235C[v235]) + *(float *)&v244)\n                                        * *(float *)&a5;\n        }\n        else\n        {\n          v245 = *(float *)&dword_8B2358[v235];\n          *(float *)&v244 = *(float *)&v244 + v245;\n          *(float *)&v272 = v240;\n          if ( dword_88C268 )\n          {\n            LODWORD(v273) = LODWORD(v242);\n            LODWORD(v275) = LODWORD(v244);\n            sub_433F90(\n              \"  %1m:   %f - total followup value, added %f as territorial followup\\n\",\n              v6,\n              *(float *)&v244,\n              v245);\n            *(_QWORD *)&v244 = (unsigned int)v275;\n            a5 = (unsigned int)v272;\n            *(_QWORD *)&v242 = LODWORD(v273);\n          }\n          v246 = *(float *)&v242;\n          v247 = *(float *)&dword_8B235C[v235];\n          if ( *(float *)&v242 >= 0.5 || v247 >= 1.0 )\n          {\n            v241 = v246 + *(float *)&v244;\n            v249 = fmin(fmin(0.5 * v247 + *(float *)&v244 * 0.5, v241), v246 * 1.1 + v247);\n            HIDWORD(v243) = HIDWORD(v242);\n            *(float *)&v243 = *(float *)&v242 + v249;\n            if ( dword_88C268 )\n            {\n              v241 = 0.0;\n              if ( v249 != 0.0 )\n              {\n                LODWORD(v273) = LODWORD(v242);\n                LODWORD(v275) = LODWORD(v244);\n                *(float *)&v274 = *(float *)&v242 + v249;\n                sub_433F90(\"  %1m: %f - added due to followup (%f) and reverse followup values (%f)\\n\", v6, v249);\n                *(_QWORD *)&v243 = v274;\n                *(_QWORD *)&v244 = (unsigned int)v275;\n                a5 = (unsigned int)v272;\n                *(_QWORD *)&v242 = LODWORD(v273);\n                v247 = *(float *)&dword_8B235C[v235];\n              }\n            }\n            v246 = *(float *)&v243;\n            *(float *)&v243 = *(float *)&v243 - *(float *)&v242;\n            *(float *)&v244 = (float)(*(float *)&v244 + v247) - *(float *)&v243;\n            v248 = fmaxf(0.0, *(float *)&v244);\n          }\n          else\n          {\n            v248 = (float)(v247 + *(float *)&dword_8B2354[v235]) * *(float *)&a5;\n          }\n          *(float *)&dword_8B2338[v235] = v248;\n          v250 = (unsigned int *)&dword_8B234C[v235];\n          *(_QWORD *)&v251 = (unsigned int)dword_8B2360[v235];\n          v252 = *(float *)&v251 * 0.05;\n          v253 = v246 + v252;\n          if ( *(float *)&v251 != 0.0 && dword_88C268 )\n          {\n            v273 = v253;\n            sub_433F90(\"  %1m: %f - secondary\\n\", v6, v252, v251, 0.0, v243, v241, v242, v253, v244);\n            v253 = v273;\n            a5 = (unsigned int)v272;\n          }\n          v254 = v253;\n          if ( (unsigned __int8)(((signed int)(*v250 + v250[1]) < 0) ^ __OFADD__(*v250, v250[1])) | (*v250 + v250[1] == 0) )\n          {\n            *(float *)&v273 = v253;\n          }\n          else\n          {\n            HIDWORD(v255) = HIDWORD(a5);\n            *(float *)&v273 = *(float *)&a5 * v254;\n            if ( dword_88C268 )\n            {\n              *(float *)&v255 = (float)(*(float *)&a5 * v254) - v254;\n              sub_433F90(\"  %1m: %f - shape \", v6, *(float *)&v255, v255, 0.0, v243, v241, v242, v253, v244);\n              fprintf(\n                stderr,\n                \"(shape values +%4.2f(%d) -%4.2f(%d), shape factor %5.3f)\\n\",\n                *v250,\n                v250[1],\n                *(float *)&dword_8B2344[v235],\n                *(float *)&dword_8B2344[v235 + 1],\n                *(float *)&v272);\n            }\n          }\n          v256 = sub_453E40(v6, v5);\n          v257 = sub_453E40(v6, 3 - v5);\n          v258 = v256 + v257;\n          if ( (unsigned __int8)((v256 + v257 < 0) ^ __OFADD__(v256, v257)) | (v256 + v257 == 0) )\n          {\n            v8 = v278;\n            LODWORD(v242) = LODWORD(v273);\n          }\n          else\n          {\n            HIDWORD(v259) = 0;\n            *(float *)&v259 = pow(1.02, (float)v258) + -1.0;\n            v261 = *(float *)&v273;\n            v262 = fmax(1.0, fmin(*(float *)&v273, 5.0));\n            v263 = v262;\n            v264 = v263 * *(float *)&v259;\n            if ( dword_88C268 )\n            {\n              *(float *)&v272 = v264;\n              LODWORD(v275) = LODWORD(v259);\n              sub_433F90(\n                \"  %1m: %f - connects strings \",\n                v6,\n                v264,\n                v262,\n                v259,\n                v243,\n                v260,\n                COERCE_DOUBLE(LODWORD(v273)),\n                v253,\n                v244);\n              fprintf(stderr, \"(connect value %d, shape factor %5.3f)\\n\", (unsigned int)v258, *(float *)&v275);\n              v264 = *(float *)&v272;\n              v261 = *(float *)&v273;\n            }\n            *(float *)&v242 = v261 + v264;\n            v8 = v278;\n          }\n        }\n        if ( v286 > 0.0 && v286 >= *(float *)&v242 )\n        {\n          if ( dword_8B255C[v235] )\n          {\n            if ( !byte_98A1B0[v8] )\n            {\n              v265 = *(float *)&dword_8B2338[v235];\n              if ( v265 > 0.0 )\n              {\n                LODWORD(v273) = LODWORD(v242);\n                if ( (unsigned int)sub_407B30(v6, v5)\n                  && (sub_423710(v6, v291),\n                      sub_422E00(v6, v292),\n                      sub_4237B0(v5, v6, (__int64)v291, (__int64)v292, (__int64)&v294),\n                      sub_44C130(v6, v5, 0LL, (__int64)&v294),\n                      v265 == 0.0) )\n                {\n                  v269 = *(float *)&v273;\n                  v270 = fmin(v286, *(float *)&dword_8B2338[v235] * 0.25 + *(float *)&v273);\n                  *(float *)&v242 = v270 * ((float)(v286 - *(float *)&v273) * -0.1 / v286 + 1.0);\n                  if ( *(float *)&v242 <= *(float *)&v273 )\n                  {\n                    LODWORD(v242) = LODWORD(v273);\n                  }\n                  else if ( dword_88C268 )\n                  {\n                    *(float *)&v273 = v270 * ((float)(v286 - *(float *)&v273) * -0.1 / v286 + 1.0);\n                    sub_433F90(\n                      \"  %1m: %f - carry out threat or defend against threat\\n\",\n                      v6,\n                      (float)(*(float *)&v242 - v269));\n                    goto LABEL_493;\n                  }\n                }\n                else\n                {\nLABEL_493:\n                  LODWORD(v242) = LODWORD(v273);\n                }\n              }\n            }\n          }\n        }\n        *(_QWORD *)&v266 = (unsigned int)dword_8B2364[v235];\n        v267 = &dword_8B2368[v235];\n        *(_QWORD *)&v268 = (unsigned int)dword_8B2368[v235];\n        if ( *(float *)&v266 > *(float *)&v268 )\n        {\n          *v267 = LODWORD(v266);\n          v268 = v266;\n        }\n        if ( *(float *)&v266 < 25.0 )\n        {\n          *(float *)&v266 = *(float *)&v266 + (float)(*(float *)&v242 / 200.0);\n          dword_8B2364[v235] = LODWORD(v266);\n        }\n        if ( *(float *)&v266 <= *(float *)&v242 || *(float *)&v266 <= 0.0 )\n        {\n          LODWORD(v266) = LODWORD(v242);\n          if ( *(float *)&v242 > *(float *)&v268 )\n            goto LABEL_503;\n        }\n        else\n        {\n          if ( dword_88C268 )\n          {\n            LODWORD(v273) = LODWORD(v266);\n            sub_433F90(\"  %1m:   %f - minimum accepted value\\n\", v6, *(float *)&v266, v268);\n            LODWORD(v266) = LODWORD(v273);\n            LODWORD(v268) = *v267;\n          }\n          if ( *(float *)&v266 > *(float *)&v268 )\n          {\nLABEL_503:\n            if ( dword_88C268 )\n            {\n              LODWORD(v273) = LODWORD(v268);\n              sub_433F90(\"  %1m:   %f - maximum accepted value\\n\", v6, *(float *)&v268);\n              LODWORD(v266) = LODWORD(v273);\n            }\n            else\n            {\n              LODWORD(v266) = LODWORD(v268);\n            }\n          }\n        }\n        if ( *(float *)&v266 > 0.0\n          || *(float *)&dword_8B233C[v235] > 0.0\n          || (result = &dword_8B2340[v235], *(float *)&dword_8B2340[v235] > 0.0) )\n        {\n          LODWORD(v273) = LODWORD(v266);\n          if ( dword_88C268 )\n          {\n            sub_433F90(\"Move generation values %1m to %f\\n\", v6, *(float *)&v266);\n            LODWORD(v266) = LODWORD(v273);\n          }\n          result = (int *)sub_419A10(v6, *(float *)&v266);\n        }\n        return result;\n      default:\n        goto LABEL_451;\n    }\n  }\n}\n", 
            "funcStartAddr": "0x451040L", 
            "funcEndAddr": "0x453e0bL", 
            "funcName": "sub_451040"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_453E10(signed int *a1, signed int *a2)\n{\n  __int64 result; // rax\n\n  result = (unsigned int)(dword_97ABB0[3 * *a2] - dword_97ABB0[3 * *a1]);\n  if ( dword_97ABB0[3 * *a2] == dword_97ABB0[3 * *a1] )\n    result = (unsigned int)(dword_97ABB4[3 * *a2] - dword_97ABB4[3 * *a1]);\n  return result;\n}\n", 
            "funcStartAddr": "0x453e10L", 
            "funcEndAddr": "0x453e3dL", 
            "funcName": "sub_453E10"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_453E40@<rax>(int a1@<edi>, int a2@<esi>, int a3@<r12d>)\n{\n  char v3; // al\n  signed int v4; // ebx\n  char v5; // al\n  int v6; // eax\n  int v7; // er12\n  char v8; // al\n  int v9; // eax\n  int v10; // ecx\n  char v11; // al\n  int v12; // eax\n  int v13; // ecx\n  __int64 v14; // r14\n  int *v15; // r15\n  int v16; // er13\n  __int64 v17; // rbp\n  signed int v18; // ebx\n  signed int v19; // ebx\n  signed int v20; // er12\n  int v21; // er13\n  signed int v22; // ecx\n  int v23; // esi\n  int v24; // eax\n  int v26; // [rsp+10h] [rbp-58h]\n  int v27; // [rsp+14h] [rbp-54h]\n  int v28; // [rsp+18h] [rbp-50h]\n  int v29; // [rsp+1Ch] [rbp-4Ch]\n  int v30; // [rsp+20h] [rbp-48h]\n  int v31; // [rsp+24h] [rbp-44h]\n  __int64 v32; // [rsp+28h] [rbp-40h]\n  int v33; // [rsp+34h] [rbp-34h]\n\n  v33 = a1;\n  v3 = byte_98A1B0[dword_5641B0[0] + (signed __int64)a1];\n  v4 = 0;\n  if ( v3 && v3 != 3 )\n  {\n    a3 = sub_40AD00(a1 + dword_5641B0[0]);\n    v26 = a3;\n    v4 = 1;\n  }\n  v5 = byte_98A1B0[dword_5641B4 + (signed __int64)a1];\n  if ( v5 )\n  {\n    if ( v5 != 3 )\n    {\n      v6 = sub_40AD00(a1 + dword_5641B4);\n      if ( (v4 != 0 && a3 != v6) == v4 )\n        *(&v26 + (unsigned int)v4++) = v6;\n    }\n  }\n  v7 = a2;\n  v8 = byte_98A1B0[dword_5641B8 + (signed __int64)a1];\n  if ( v8 && v8 != 3 )\n  {\n    v9 = sub_40AD00(a1 + dword_5641B8);\n    v10 = 0;\n    if ( v4 > 0 && v26 != v9 )\n    {\n      v10 = 1;\n      if ( v4 > 1 && v27 != v9 )\n      {\n        v10 = 2;\n        if ( v4 >= 3 )\n          v10 = 3 - (v28 == v9);\n      }\n    }\n    if ( v10 == v4 )\n      *(&v26 + v4++) = v9;\n  }\n  v11 = byte_98A1B0[dword_5641BC + (signed __int64)a1];\n  if ( v11 && v11 != 3 )\n  {\n    v12 = sub_40AD00(a1 + dword_5641BC);\n    v13 = 0;\n    if ( v4 > 0 && v26 != v12 )\n    {\n      v13 = 1;\n      if ( v4 > 1 && v27 != v12 )\n      {\n        v13 = 2;\n        if ( v4 >= 3 && v28 != v12 )\n        {\n          v13 = 3;\n          if ( v4 >= 4 && v29 != v12 )\n          {\n            v13 = 4;\n            if ( v4 >= 5 && v30 != v12 )\n            {\n              v13 = 5;\n              if ( v4 >= 6 && v31 != v12 )\n              {\n                v13 = 6;\n                if ( v4 >= 7 )\n                  v13 = 7 - ((_DWORD)v32 == v12);\n              }\n            }\n          }\n        }\n      }\n    }\n    if ( v13 == v4 )\n      *(&v26 + v4++) = v12;\n  }\n  if ( v4 <= 0 )\n  {\n    v23 = 0;\n    v16 = 0;\n    goto LABEL_47;\n  }\n  v14 = (unsigned int)v4;\n  v32 = 0LL;\n  v15 = &v26;\n  v16 = 0;\n  do\n  {\n    v17 = *v15;\n    if ( (unsigned __int8)byte_98A1B0[v17] == v7 )\n    {\n      v18 = sub_4093D0(v33, v7, 241, 0LL);\n      v32 = (unsigned int)(v32 + 1);\n      if ( v18 < (signed int)sub_4083A0(v17) )\n        goto LABEL_43;\n      v19 = 3;\n      v20 = 5;\n    }\n    else\n    {\n      v19 = 2;\n      v20 = 3;\n    }\n    v21 = ((signed int)sub_4083A0(v17) < v20) + v16;\n    v16 = ((signed int)sub_4083A0(v17) < v19) + v21;\n    v7 = a2;\nLABEL_43:\n    ++v15;\n    --v14;\n  }\n  while ( v14 );\n  v22 = 4;\n  v23 = v32;\n  if ( v16 <= 3 )\nLABEL_47:\n    v22 = v16;\n  v24 = 0;\n  if ( v22 | v23 ^ 1 )\n    v24 = v23;\n  return (unsigned int)(v22 + v24);\n}\n", 
            "funcStartAddr": "0x453e40L", 
            "funcEndAddr": "0x4540b8L", 
            "funcName": "sub_453E40"
        }, 
        {
            "decompiledFuncCode": "float __fastcall sub_4540C0(unsigned int a1, int a2)\n{\n  char *v2; // rbx\n  unsigned int v3; // eax\n  __int64 v4; // rbp\n  signed int v5; // er15\n  __int64 v6; // rsi\n  signed __int64 v7; // rax\n  signed __int64 v8; // r13\n  float v9; // xmm0_4\n  float v11; // [rsp+4h] [rbp-2C4h]\n  float v12; // [rsp+8h] [rbp-2C0h]\n  float v13; // [rsp+Ch] [rbp-2BCh]\n  char v14; // [rsp+10h] [rbp-2B8h]\n\n  v12 = *(float *)&dword_8E9478[95 * a2] + *(float *)&dword_8E9478[95 * a2];\n  v2 = &v14;\n  v3 = sub_40A7D0(a2, (__int64)&v14);\n  if ( (signed int)v3 <= 0 )\n  {\n    v11 = 0.0;\nLABEL_16:\n    v9 = v12;\n    return fmaxf(v9 - v11, 0.0);\n  }\n  v4 = v3;\n  v5 = 0;\n  v11 = 0.0;\n  v13 = 0.0;\n  do\n  {\n    v6 = *(signed int *)v2;\n    if ( dword_954FF0[19 * v6] )\n      v5 = 1;\n    if ( !dword_954FF0[19 * v6] )\n    {\n      v7 = 76 * v6;\n      if ( (float)(*(float *)((char *)&xmmword_954FC0 + v7) + *(float *)((char *)&xmmword_954FC0 + v7)) > v13 )\n        v13 = *(float *)((char *)&xmmword_954FC0 + v7) + *(float *)((char *)&xmmword_954FC0 + v7);\n    }\n    if ( dword_8E94D4[95 * v6] )\n    {\n      if ( !(unsigned int)sub_44B0A0(a1, v6) )\n      {\n        v8 = 95 * v6;\n        if ( (float)(*(float *)&dword_8E9478[v8] + *(float *)&dword_8E9478[v8]) > v11 )\n          v11 = *(float *)&dword_8E9478[v8] + *(float *)&dword_8E9478[v8];\n      }\n    }\n    v2 += 4;\n    --v4;\n  }\n  while ( v4 );\n  if ( !v5 )\n    goto LABEL_16;\n  v9 = v12 + v13;\n  return fmaxf(v9 - v11, 0.0);\n}\n", 
            "funcStartAddr": "0x4540c0L", 
            "funcEndAddr": "0x4541ebL", 
            "funcName": "sub_4540C0"
        }, 
        {
            "decompiledFuncCode": "float __fastcall sub_4541F0(int a1, int a2, int a3, float a4)\n{\n  int v4; // er12\n  unsigned __int8 *v5; // rbx\n  signed __int64 v6; // r14\n  signed __int64 v7; // r13\n  unsigned int v8; // ebp\n  unsigned __int8 *v9; // r15\n  float v10; // xmm2_4\n  float v11; // xmm1_4\n  float result; // xmm0_4\n  signed int v13; // eax\n  signed int v14; // eax\n  int *v15; // r14\n  __int64 v16; // r12\n  _BOOL4 v17; // edx\n  __int64 v18; // rdi\n  float v19; // xmm0_4\n  double v20; // xmm1_8\n  double v21; // xmm0_8\n  float v22; // xmm1_4\n  double v23; // xmm1_8\n  float v24; // ST18_4\n  double v25; // ST08_8\n  float v26; // xmm0_4\n  float v27; // xmm0_4\n  float v28; // xmm1_4\n  float v29; // [rsp+0h] [rbp-68h]\n  float v30; // [rsp+4h] [rbp-64h]\n  unsigned int v31; // [rsp+8h] [rbp-60h]\n  float v32; // [rsp+14h] [rbp-54h]\n  float v33; // [rsp+18h] [rbp-50h]\n  char v34; // [rsp+20h] [rbp-48h]\n  float v35; // [rsp+28h] [rbp-40h]\n  float v36; // [rsp+2Ch] [rbp-3Ch]\n  __int64 v37; // [rsp+30h] [rbp-38h]\n\n  v33 = a4;\n  v4 = a3;\n  v5 = (unsigned __int8 *)ptr;\n  v6 = 19LL * a1;\n  v30 = *(float *)((char *)&xmmword_954FC0 + v6 * 4);\n  v32 = *((float *)&xmmword_954FC0 + 19 * a2);\n  v7 = 104LL * *((signed int *)&xmmword_954FB0 + 19 * a1 + 1);\n  v8 = *(_DWORD *)((char *)ptr + v7 + 60);\n  v37 = 104LL * *((signed int *)&xmmword_954FB0 + 19 * a2 + 1);\n  v31 = *(_DWORD *)((char *)ptr + v37 + 60);\n  v9 = (unsigned __int8 *)ptr + v7 + 76;\n  v10 = sub_414520(\n          v8,\n          (__int64)v9,\n          *(_DWORD *)((char *)ptr + v7 + 84) != 0,\n          *(float *)((char *)ptr + v7 + 56),\n          (float)*(signed int *)((char *)ptr + v7 + 72));\n  v11 = *(float *)&dword_8B233C[141 * v4];\n  result = 0.0;\n  if ( v11 >= 0.0\n    || !dword_88C2FC\n    || v8 > 9\n    || (v13 = 770, !_bittest(&v13, v8))\n    || v31 > 9\n    || (v14 = 770, !_bittest(&v14, v31)) )\n  {\n    if ( v10 != 0.0 && dword_954FF0[v6] )\n    {\n      v35 = v10;\n      v15 = &dword_954FF0[v6];\n      v36 = fmaxf(0.0, v11);\n      v16 = v37;\n      sub_426E70(v9, &v5[v37 + 76], &v34);\n      v17 = 1;\n      if ( !*(_DWORD *)&v5[v7 + 84] )\n        v17 = *(_DWORD *)&v5[v16 + 84] != 0;\n      v29 = fminf(20.0, v33);\n      v18 = v31;\n      v19 = sub_414520(\n              v31,\n              (__int64)&v34,\n              v17,\n              v36 + (float)(*(float *)&v5[v7 + 56] + *(float *)&v5[v16 + 56]),\n              (float)*(signed int *)&v5[v7 + 72]);\n      if ( *v15 == 2 )\n      {\n        v20 = v19 * -0.3 + 0.2;\n        v21 = v30;\n        v22 = v20 * v30;\n        if ( v29 > 0.0 && v22 > 0.0 )\n          v22 = (v29 * 0.05 + 1.0) * v22;\n        v23 = v22 + v21 + v21;\n      }\n      else\n      {\n        v24 = v19;\n        v25 = v35 + v35;\n        sub_493C80(v18, &v34);\n        v26 = v30 * v25;\n        *(float *)&v25 = v26;\n        sub_493C80(v18, &v34);\n        v27 = v30 * ((float)(v32 + v30) * (v24 + v24)) / (float)(v32 + v30);\n        v28 = (float)(*(float *)&v25 - v27) * 1.05;\n        if ( v29 <= 0.0 )\n          return fmaxf(0.0, v28);\n        v23 = v28 * (v29 * 0.02 + 1.0);\n      }\n      v28 = v23;\n      return fmaxf(0.0, v28);\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4541f0L", 
            "funcEndAddr": "0x454514L", 
            "funcName": "sub_4541F0"
        }, 
        {
            "decompiledFuncCode": "char sub_454520()\n{\n  signed __int64 v0; // rax\n  _DWORD *v1; // rcx\n  signed __int64 v2; // rbp\n  signed __int64 v3; // rbx\n  int v4; // eax\n  __int64 v5; // rdx\n  __int64 v6; // rcx\n  __int64 v7; // rax\n  signed __int64 v8; // rax\n  _DWORD *v9; // rcx\n  char v10; // dl\n  int v11; // esi\n  unsigned __int64 v12; // rsi\n  signed __int64 v13; // rax\n  _DWORD *v14; // rcx\n  __int64 v15; // rdx\n  unsigned __int64 v16; // rbp\n  signed __int64 v17; // rbx\n  unsigned int v18; // er13\n  unsigned int v19; // er15\n  int v20; // er12\n  signed __int64 v21; // rbp\n  signed __int64 v22; // rbx\n  __int64 v23; // rax\n  unsigned int v24; // er15\n  int v25; // eax\n  unsigned int v26; // er15\n  signed __int64 v27; // rbx\n  unsigned int v28; // er13\n  signed __int64 v29; // r14\n  unsigned int v30; // eax\n  int *v31; // r12\n  int *v32; // rbp\n  __int64 v33; // r14\n  int v34; // eax\n  unsigned int v35; // er15\n  int v36; // er12\n  __int64 v37; // rax\n  unsigned int v38; // er13\n  __int64 v39; // rbp\n  signed __int64 v40; // rbx\n  unsigned int v41; // er12\n  signed __int64 v42; // r14\n  unsigned int v43; // er13\n  __int64 v44; // rax\n  __int64 v45; // rdx\n  int *v46; // rcx\n  __int64 v47; // rax\n  int v48; // eax\n  signed __int64 v49; // rcx\n  int v50; // edx\n  int v51; // edx\n  int v52; // edx\n  int v53; // edx\n  __int64 v54; // rdx\n  __int64 v55; // rcx\n  signed __int64 v56; // rbx\n  unsigned __int8 v57; // al\n  unsigned int v58; // er12\n  unsigned int v59; // er14\n  unsigned int *v60; // r13\n  signed __int64 v61; // r15\n  unsigned int v62; // ebp\n  __int64 v63; // rdx\n  char v64; // cl\n  __int64 v65; // rcx\n  char v66; // al\n  __int64 v67; // rcx\n  char v68; // al\n  __int64 v69; // rcx\n  char v70; // al\n  unsigned int *v71; // r15\n  signed __int64 v72; // rbx\n  signed __int64 v73; // r15\n  __int64 v74; // rsi\n  __int64 v75; // rdx\n  __int64 v76; // rcx\n  int v77; // er13\n  signed __int64 v78; // r14\n  signed __int64 v79; // rbp\n  char v80; // al\n  signed __int64 v81; // rsi\n  unsigned __int64 v82; // rax\n  signed __int64 v83; // rcx\n  int v84; // edx\n  signed __int64 v85; // r13\n  int v86; // ebx\n  unsigned int v87; // er14\n  unsigned int v88; // ebp\n  unsigned __int64 v89; // r15\n  signed __int64 v90; // rbx\n  __int64 v91; // rax\n  int v92; // er12\n  int v93; // eax\n  int v94; // ecx\n  unsigned int v95; // er13\n  int v96; // ebp\n  signed int v97; // er12\n  signed int v98; // eax\n  __int64 v99; // rax\n  signed int v100; // ecx\n  __int64 v101; // rdi\n  signed __int64 v102; // rax\n  int *v103; // rcx\n  int *v104; // r8\n  __int64 v105; // rdx\n  unsigned int v106; // ebp\n  signed __int64 v107; // rbx\n  unsigned int v108; // er14\n  signed __int64 v109; // rbp\n  signed __int64 v110; // rbx\n  unsigned int v111; // er14\n  signed __int64 v112; // rbp\n  signed __int64 v113; // rbx\n  signed __int64 v114; // r15\n  int *v115; // r13\n  int v116; // er12\n  signed __int64 v117; // rbp\n  int *v118; // r14\n  __int64 v119; // rcx\n  __int64 v120; // rdx\n  __int64 v121; // rax\n  __int64 v122; // rax\n  __int64 v123; // rax\n  __int64 v124; // rax\n  __int64 v125; // rax\n  __int64 v126; // rax\n  __int64 v127; // rax\n  __int64 v128; // rax\n  signed __int64 v129; // rax\n  int v130; // eax\n  signed __int64 v131; // r13\n  unsigned int v132; // er14\n  signed __int64 v133; // rbx\n  unsigned int v134; // eax\n  int *v135; // r15\n  __int64 v136; // rbx\n  unsigned int v137; // ebp\n  __int64 v138; // rax\n  unsigned int v139; // eax\n  signed __int64 v140; // r12\n  __int64 v141; // rbp\n  __int64 v142; // rax\n  unsigned int v143; // ebp\n  __int64 v144; // rax\n  unsigned int v145; // eax\n  signed __int64 v146; // rbp\n  signed __int64 v147; // rbx\n  unsigned int v148; // eax\n  unsigned __int64 v149; // rsi\n  __int64 v150; // rdx\n  __int64 v151; // rcx\n  int v152; // er12\n  char result; // al\n  int *v154; // [rsp+8h] [rbp-10D0h]\n  unsigned int v155; // [rsp+8h] [rbp-10D0h]\n  __int64 v156; // [rsp+8h] [rbp-10D0h]\n  int *v157; // [rsp+10h] [rbp-10C8h]\n  signed __int64 v158; // [rsp+10h] [rbp-10C8h]\n  signed __int64 v159; // [rsp+10h] [rbp-10C8h]\n  int v160; // [rsp+1Ch] [rbp-10BCh]\n  int v161; // [rsp+20h] [rbp-10B8h]\n  int v162; // [rsp+24h] [rbp-10B4h]\n  __int64 v163; // [rsp+28h] [rbp-10B0h]\n  unsigned int v164; // [rsp+30h] [rbp-10A8h]\n  unsigned int v165; // [rsp+34h] [rbp-10A4h]\n  int *v166; // [rsp+38h] [rbp-10A0h]\n  int *v167; // [rsp+40h] [rbp-1098h]\n  int *v168; // [rsp+48h] [rbp-1090h]\n  int s[400]; // [rsp+50h] [rbp-1088h]\n  int v170; // [rsp+690h] [rbp-A48h]\n  int v171; // [rsp+694h] [rbp-A44h]\n  int v172; // [rsp+698h] [rbp-A40h]\n  int v173[241]; // [rsp+69Ch] [rbp-A3Ch]\n  int v174[400]; // [rsp+A60h] [rbp-678h]\n  int v175[14]; // [rsp+10A0h] [rbp-38h]\n\n  memset(dword_8E9470, 0, 0x251C0uLL);\n  v0 = -378LL;\n  v1 = &unk_8EB524;\n  if ( byte_98A33F[-378] != 3 )\nLABEL_4:\n    *(v1 - 95) = 0;\n  while ( v0 )\n  {\n    if ( byte_98A340[v0] != 3 )\n      *v1 = 0;\n    v1 += 190;\n    v0 += 2LL;\n    if ( byte_98A33F[v0] != 3 )\n      goto LABEL_4;\n  }\n  v2 = 4611686018427351899LL;\n  v3 = 21LL;\n  do\n  {\n    v4 = (unsigned __int8)byte_98A1B0[v3];\n    if ( v4 != 3 && !dword_90E63C[v2] )\n    {\n      dword_90E630[v2] = v4;\n      dword_90E63C[v2] = v3;\n      *(__int64 *)((char *)&qword_90E660 + v2 * 4) = 0LL;\n      dword_90E668[v2] = 3;\n      dword_90E638[v2] = 0;\n      if ( (unsigned __int8)(v4 - 1) <= 1u )\n      {\n        dword_90E640[v2] = sub_4083A0(v3);\n        dword_90E634[v2] = sub_40A5F0(v3);\n        sub_456130((unsigned int)v3, 0LL, v5, v6);\n      }\n    }\n    ++v3;\n    v2 += 95LL;\n  }\n  while ( v2 * 4 );\n  LODWORD(v7) = sub_40BBB0(3);\n  if ( (_DWORD)v7 )\n  {\n    sub_456E80(3LL, &unk_980C90, &unk_988260, 3LL);\n    sub_456E80(2LL, dword_97DA90, dword_9875E0, 5LL);\n    sub_456E80(1LL, dword_97F390, dword_987C20, 5LL);\n    sub_44CFE0(v174, 1);\n    v8 = -379LL;\n    v9 = &unk_8EB3D4;\n    do\n    {\n      v10 = byte_98A340[v8];\n      if ( v10 != 3 )\n      {\n        v11 = v175[v8];\n        if ( v11 )\n        {\n          if ( v10 == 1 )\n          {\n            *v9 = 1;\n            if ( v11 == 1 )\n              *(v9 - 1) = 1;\n          }\n          else if ( v10 )\n          {\n            *v9 = 0;\n          }\n          else\n          {\n            *v9 = 4;\n          }\n        }\n      }\n      v9 += 95;\n      ++v8;\n    }\n    while ( v8 );\n    v12 = 2LL;\n    sub_44CFE0(v174, 2);\n    v13 = -379LL;\n    v14 = &unk_8EB3D4;\n    do\n    {\n      v15 = (unsigned __int8)byte_98A340[v13];\n      if ( (_BYTE)v15 != 3 )\n      {\n        v12 = (unsigned int)v175[v13];\n        if ( (_DWORD)v12 )\n        {\n          if ( (_BYTE)v15 == 2 )\n          {\n            *v14 = 1;\n            if ( (_DWORD)v12 == 1 )\n              *(v14 - 1) = 1;\n          }\n          else if ( (_BYTE)v15 )\n          {\n            *v14 = 0;\n          }\n          else\n          {\n            *v14 = 5;\n          }\n        }\n      }\n      v14 += 95;\n      ++v13;\n    }\n    while ( v13 );\n    if ( dword_98A7F4 )\n      sub_4340E0((__int64)\"engine/worm.c\", 0x2D2u, (__int64)\"stackp == 0\", 0xFFFFFFFF, 0xFFFFFFFF);\n    v16 = -144020LL;\n    v17 = 21LL;\n    do\n    {\n      if ( (unsigned __int8)(byte_98A1B0[v17] - 1) <= 1u && v17 == dword_90E63C[v16 / 4] )\n      {\n        if ( dword_88C268 )\n        {\n          v12 = (unsigned int)v17;\n          sub_433F90(\"considering attack of %1m\\n\", (unsigned int)v17, v15, v14);\n        }\n        *(__int128 *)((char *)&xmmword_90E6FC + v16) = 0LL;\n        *(__int128 *)((char *)&xmmword_90E6EC + v16) = 0LL;\n        *(__int128 *)((char *)&xmmword_90E6DC + v16) = 0LL;\n        *(__int128 *)((char *)&xmmword_90E6CC + v16) = 0LL;\n        *(__int128 *)((char *)&xmmword_90E6BC + v16) = 0LL;\n        *(__int128 *)((char *)&xmmword_90E6AC + v16) = 0LL;\n        *(__int128 *)((char *)&xmmword_90E69C + v16) = 0LL;\n        *(__int128 *)((char *)&xmmword_90E68C + v16) = 0LL;\n        *(__int128 *)((char *)&xmmword_90E67C + v16) = 0LL;\n        *(__int128 *)((char *)&xmmword_90E66C + v16) = 0LL;\n        sub_456130((unsigned int)v17, v12, v15, v14);\n        v12 = (unsigned __int64)s;\n        v18 = sub_43B050(v17, (unsigned int *)s);\n        if ( v18 )\n        {\n          v19 = s[0];\n          if ( dword_88C264 & 0x400 )\n          {\n            sub_433F90(\"worm at %1m can be attacked at %1m\\n\", (unsigned int)v17, (unsigned int)s[0]);\n            v19 = s[0];\n            v20 = dword_90E63C[v16 / 4];\n            if ( dword_88C264 & 0x400 )\n              sub_433F90(\"change_attack: %1m %1m %d\\n\", (unsigned int)v20, (unsigned int)s[0], v18);\n          }\n          else\n          {\n            v20 = dword_90E63C[v16 / 4];\n          }\n          v12 = v19;\n          sub_456350(v20, v19, v18, &dword_8E94AC[95 * v20], &dword_8E94D4[95 * v20]);\n        }\n      }\n      ++v17;\n      v16 += 380LL;\n    }\n    while ( v16 );\n    if ( dword_98A7F4 )\n      sub_4340E0((__int64)\"engine/worm.c\", 0x2FCu, (__int64)\"stackp == 0\", 0xFFFFFFFF, 0xFFFFFFFF);\n    sub_41EFF0((__int64)sub_4572F0, 7LL, (__int64)&unk_5D64E0, 0LL, 0LL);\n    if ( dword_98A7F4 )\n      sub_4340E0((__int64)\"engine/worm.c\", 0x300u, (__int64)\"stackp == 0\", 0xFFFFFFFF, 0xFFFFFFFF);\n    v21 = 4611686018427351899LL;\n    v22 = 21LL;\n    do\n    {\n      if ( (unsigned __int8)(byte_98A1B0[v22] - 1) <= 1u )\n      {\n        v23 = (unsigned int)dword_90E63C[v21];\n        if ( v22 == v23 )\n        {\n          if ( *(_DWORD *)(v21 * 4 + 9496212) )\n          {\n            if ( dword_88C268 )\n              v23 = sub_433F90(\"considering defense of %1m\\n\", (unsigned int)v22);\n            v24 = sub_43B6F0(v23, v22, v174);\n            if ( v24 )\n            {\n              if ( dword_88C268 )\n                sub_433F90(\"worm at %1m can be defended at %1m\\n\", (unsigned int)v22, (unsigned int)v174[0]);\n              if ( v174[0] )\n                sub_456350(\n                  dword_90E63C[v21],\n                  (unsigned int)v174[0],\n                  v24,\n                  &dword_8E94FC[95 * dword_90E63C[v21]],\n                  &dword_8E9524[95 * dword_90E63C[v21]]);\n            }\n            else\n            {\n              s[0] = *(_DWORD *)((char *)&xmmword_90E66C + v21 * 4);\n              if ( !(unsigned int)sub_40B0A0(s[0], v22)\n                && (unsigned int)sub_406880((unsigned int)s[0], (unsigned int)dword_90E630[v21], \"make_worms\", 0, 0, 0) )\n              {\n                v25 = sub_43B050(v22, 0LL);\n                if ( v25 != 5 )\n                {\n                  v26 = 5 - v25;\n                  sub_456350(\n                    dword_90E63C[v21],\n                    (unsigned int)s[0],\n                    (unsigned int)(5 - v25),\n                    &dword_8E94FC[95 * dword_90E63C[v21]],\n                    &dword_8E9524[95 * dword_90E63C[v21]]);\n                  if ( dword_88C268 )\n                    sub_433F90(\n                      \"worm at %1m can be defended at %1m with code %d\\n\",\n                      (unsigned int)v22,\n                      (unsigned int)s[0],\n                      v26);\n                }\n                sub_407030();\n              }\n            }\n          }\n        }\n      }\n      ++v22;\n      v21 += 95LL;\n    }\n    while ( v21 * 4 );\n    if ( dword_98A7F4 )\n      sub_4340E0((__int64)\"engine/worm.c\", 0x324u, (__int64)\"stackp == 0\", 0xFFFFFFFF, 0xFFFFFFFF);\n    sub_41EFF0((__int64)sub_457540, 6LL, (__int64)&unk_5D8058, 0LL, 0LL);\n    if ( dword_98A7F4 )\n      sub_4340E0((__int64)\"engine/worm.c\", 0x328u, (__int64)\"stackp == 0\", 0xFFFFFFFF, 0xFFFFFFFF);\n    v27 = 21LL;\n    do\n    {\n      v28 = (unsigned __int8)byte_98A1B0[v27];\n      if ( (unsigned __int8)(byte_98A1B0[v27] - 1) <= 1u )\n      {\n        v29 = 95 * v27;\n        if ( v27 == dword_8E947C[95 * v27] )\n        {\n          if ( dword_8E94D4[v29] )\n          {\n            v30 = sub_408410(v27, 241, (unsigned __int64)dword_88BA70);\n            if ( (signed int)v30 > 0 )\n            {\n              v166 = &dword_8E947C[v29];\n              v165 = 3 - v28;\n              v31 = &dword_8E94D4[v29];\n              v32 = &dword_8E94AC[v29];\n              v157 = &dword_8E94FC[v29];\n              v154 = &dword_8E9524[v29];\n              v163 = v30;\n              v33 = 0LL;\n              v164 = v28;\n              v168 = v31;\n              v167 = v32;\n              do\n              {\n                v35 = dword_88BA70[v33];\n                if ( !(unsigned int)sub_4241B0(dword_88BA70[v33], 10, (__int64)v32, (__int64)v31)\n                  && (unsigned int)sub_406880(v35, v165, \"make_worms\", v27, 0, 0) )\n                {\n                  v36 = 0;\n                  if ( !byte_98A1B0[v27]\n                    || (v37 = sub_43B050(v27, 0LL), (_DWORD)v37)\n                    && (!byte_98A1B0[v27] || (v36 = sub_43B6F0(v37, v27, 0LL), v36 != 5)) )\n                  {\n                    v38 = 5 - v36;\n                    v39 = *v166;\n                    if ( dword_88C264 & 0x400 )\n                      sub_433F90(\"change_attack: %1m %1m %d\\n\", (unsigned int)v39, v35, v38);\n                    sub_456350((unsigned int)v39, v35, v38, &dword_8E94AC[95 * v39], &dword_8E94D4[95 * v39]);\n                    v28 = v164;\n                  }\n                  sub_407030();\n                  v31 = v168;\n                  v32 = v167;\n                }\n                if ( !(unsigned int)sub_4241B0(v35, 10, (__int64)v157, (__int64)v154)\n                  && *v154\n                  && (unsigned int)sub_406880(v35, v28, \"make_worms\", 0, 0, 0) )\n                {\n                  v34 = sub_43B050(v27, 0LL);\n                  if ( v34 != 5 )\n                    sub_456350(\n                      *v166,\n                      v35,\n                      (unsigned int)(5 - v34),\n                      &dword_8E94FC[95 * *v166],\n                      &dword_8E9524[95 * *v166]);\n                  sub_407030();\n                }\n                ++v33;\n              }\n              while ( v163 != v33 );\n            }\n          }\n        }\n      }\n      ++v27;\n    }\n    while ( v27 != 400 );\n    if ( dword_98A7F4 )\n      sub_4340E0((__int64)\"engine/worm.c\", 0x35Cu, (__int64)\"stackp == 0\", 0xFFFFFFFF, 0xFFFFFFFF);\n    v40 = 21LL;\n    while ( 1 )\n    {\n      v41 = (unsigned __int8)byte_98A1B0[v40];\n      if ( (unsigned __int8)(byte_98A1B0[v40] - 1) <= 1u )\n      {\n        v42 = 95 * v40;\n        if ( v40 == dword_8E947C[95 * v40] )\n          break;\n      }\nLABEL_130:\n      if ( ++v40 == 400 )\n      {\n        if ( dword_98A7F4 )\n          sub_4340E0((__int64)\"engine/worm.c\", 0x7Eu, (__int64)\"stackp == 0\", 0xFFFFFFFF, 0xFFFFFFFF);\n        v56 = 21LL;\n        while ( 1 )\n        {\n          v57 = byte_98A1B0[v56];\n          if ( (unsigned __int8)(v57 - 1) > 1u || v56 != dword_8E947C[95 * v56] )\n            goto LABEL_181;\n          v158 = 380 * v56;\n          v155 = (unsigned int)v56 / 0x14 - 1;\n          v58 = (unsigned int)v56 % 0x14 - 1;\n          v59 = 0;\n          v60 = (unsigned int *)dword_8EB3A8;\n          v61 = 21LL;\n          v62 = 0;\n          while ( 1 )\n          {\n            if ( 3 - v57 == (unsigned __int8)byte_98A1B0[v61] )\n            {\n              v63 = (signed int)v61 + dword_5641B0[0];\n              v64 = byte_98A1B0[v63];\n              if ( v64 != 3 && v56 == dword_8E947C[95 * v63] )\n              {\n                if ( v64 != v57 )\n                  sub_4340E0(\n                    (__int64)\"engine/worm.c\",\n                    0xCAu,\n                    (__int64)\"board[pos2 + delta[k]] == board[pos]\",\n                    v155,\n                    v58);\n                if ( v62 )\n                {\n                  if ( *v60 != dword_8E947C[95 * v62] )\n                    v59 = *v60;\n                }\n                else\n                {\n                  v62 = *v60;\n                }\n              }\n              v65 = (signed int)v61 + dword_5641B4;\n              v66 = byte_98A1B0[v65];\n              if ( v66 != 3 && v56 == dword_8E947C[95 * v65] )\n              {\n                if ( v66 != byte_98A1B0[v56] )\n                  sub_4340E0(\n                    (__int64)\"engine/worm.c\",\n                    0xCAu,\n                    (__int64)\"board[pos2 + delta[k]] == board[pos]\",\n                    v155,\n                    v58);\n                if ( v62 )\n                {\n                  if ( *v60 != dword_8E947C[95 * v62] )\n                    v59 = *v60;\n                }\n                else\n                {\n                  v62 = *v60;\n                }\n              }\n              v67 = (signed int)v61 + dword_5641B8;\n              v68 = byte_98A1B0[v67];\n              if ( v68 != 3 && v56 == dword_8E947C[95 * v67] )\n              {\n                if ( v68 != byte_98A1B0[v56] )\n                  sub_4340E0(\n                    (__int64)\"engine/worm.c\",\n                    0xCAu,\n                    (__int64)\"board[pos2 + delta[k]] == board[pos]\",\n                    v155,\n                    v58);\n                if ( v62 )\n                {\n                  if ( *v60 != dword_8E947C[95 * v62] )\n                    v59 = *v60;\n                }\n                else\n                {\n                  v62 = *v60;\n                }\n              }\n              v69 = (signed int)v61 + dword_5641BC;\n              v70 = byte_98A1B0[v69];\n              if ( v70 != 3 && v56 == dword_8E947C[95 * v69] )\n                break;\n            }\nLABEL_173:\n            if ( v61 == 399 )\n              goto LABEL_176;\nLABEL_137:\n            ++v61;\n            v57 = byte_98A1B0[v56];\n            v60 += 95;\n          }\n          if ( v70 != byte_98A1B0[v56] )\n            sub_4340E0((__int64)\"engine/worm.c\", 0xCAu, (__int64)\"board[pos2 + delta[k]] == board[pos]\", v155, v58);\n          if ( v62 )\n            break;\n          v62 = *v60;\n          if ( v61 != 399 )\n            goto LABEL_137;\nLABEL_176:\n          if ( v59 )\n          {\n            v71 = (unsigned int *)((char *)&qword_8E9494 + v158);\n            *(_DWORD *)((char *)&qword_8E9494 + v158) = 2;\n            if ( (signed int)sub_408FD0(v62, v59) > 0 )\n              *v71 = 1;\n            if ( dword_88C264 & 0x400 )\n              sub_433F90(\"Worm at %1m has w1 %1m and w2 %1m, cutstone %d\\n\", (unsigned int)v56, v62, v59, *v71);\n          }\nLABEL_181:\n          if ( ++v56 == 400 )\n          {\n            if ( dword_98A7F4 )\n              sub_4340E0((__int64)\"engine/worm.c\", 0xE8u, (__int64)\"stackp == 0\", 0xFFFFFFFF, 0xFFFFFFFF);\n            v72 = 21LL;\n            do\n            {\n              if ( (unsigned __int8)(byte_98A1B0[v72] - 1) <= 1u )\n              {\n                v73 = 95 * v72;\n                if ( v72 == dword_8E947C[95 * v72] )\n                {\n                  v74 = 0LL;\n                  memset(v174, 0, 0x640uLL);\n                  v77 = -1;\n                  v78 = 4611686018427351899LL;\n                  v79 = 21LL;\n                  do\n                  {\n                    v80 = byte_98A1B0[v79];\n                    if ( v80 != 3 && !v174[v79] && (!v80 || dword_90E63C[v78] != dword_8E947C[v73]) )\n                    {\n                      v74 = (unsigned int)v79;\n                      sub_457900((unsigned int)v72, (unsigned int)v79, v174);\n                      ++v77;\n                    }\n                    ++v79;\n                    v78 += 95LL;\n                  }\n                  while ( v78 * 4 );\n                  dword_8E949C[v73] = v77;\n                  sub_456130((unsigned int)v72, v74, v75, v76);\n                }\n              }\n              ++v72;\n            }\n            while ( v72 != 400 );\n            if ( dword_98A7F4 )\n              sub_4340E0((__int64)\"engine/worm.c\", 0xF1u, (__int64)\"stackp == 0\", 0xFFFFFFFF, 0xFFFFFFFF);\n            v81 = 0LL;\n            memset(s, 0, 0x640uLL);\n            v82 = -144020LL;\n            v83 = 21LL;\n            do\n            {\n              v84 = (unsigned __int8)byte_98A1B0[v83];\n              if ( (unsigned __int8)(byte_98A1B0[v83] - 1) <= 1u )\n              {\n                v81 = (unsigned int)dword_90E63C[v82 / 4];\n                if ( v83 == v81 )\n                {\n                  s[*(signed int *)((char *)&xmmword_90E6BC + v82)] |= v84;\n                  v81 = (unsigned int)(3 - v84);\n                  s[*(signed int *)((char *)&xmmword_90E66C + v82)] |= v81;\n                }\n              }\n              ++v83;\n              v82 += 380LL;\n            }\n            while ( v82 );\n            v85 = 21LL;\n            while ( byte_98A1B0[v85] == 3 )\n            {\nLABEL_246:\n              if ( ++v85 == 400 )\n              {\n                if ( dword_98A7F4 )\n                  sub_4340E0((__int64)\"engine/worm.c\", 0x17Eu, (__int64)\"stackp == 0\", 0xFFFFFFFF, 0xFFFFFFFF);\n                v107 = 4611686018427351899LL;\n                v108 = 21;\n                v109 = 41LL;\n                do\n                {\n                  if ( (unsigned __int8)(byte_98A19C[v109] - 1) <= 1u\n                    && (unsigned __int8)(byte_98A1B0[v109] - 1) <= 1u\n                    && dword_90E63C[v107] != dword_9103EC[v107]\n                    && *(_DWORD *)(v107 * 4 + 9496212)\n                    && dword_910444[v107] )\n                  {\n                    if ( !*(_DWORD *)(v107 * 4 + 9496292) )\n                    {\n                      v81 = v108;\n                      if ( (unsigned int)sub_44B0A0(dword_91041C[v107], v108) )\n                      {\n                        v81 = (unsigned int)dword_91041C[v107];\n                        sub_456350(\n                          dword_90E63C[v107],\n                          v81,\n                          5LL,\n                          &dword_8E94FC[95 * dword_90E63C[v107]],\n                          &dword_8E9524[95 * dword_90E63C[v107]]);\n                      }\n                    }\n                    if ( !dword_910494[v107] )\n                    {\n                      v81 = (unsigned int)v109;\n                      if ( (unsigned int)sub_44B0A0(*(_DWORD *)((char *)&xmmword_90E66C + v107 * 4), v109) )\n                      {\n                        v81 = *(unsigned int *)((char *)&xmmword_90E66C + v107 * 4);\n                        sub_456350(\n                          dword_9103EC[v107],\n                          v81,\n                          5LL,\n                          &dword_8E94FC[95 * dword_9103EC[v107]],\n                          &dword_8E9524[95 * dword_9103EC[v107]]);\n                      }\n                    }\n                  }\n                  ++v109;\n                  ++v108;\n                  v107 += 95LL;\n                }\n                while ( v107 * 4 );\n                v110 = 4611686018427351899LL;\n                v111 = 22;\n                v112 = 21LL;\n                do\n                {\n                  if ( (unsigned __int8)(byte_98A1B0[v112] - 1) <= 1u\n                    && (unsigned __int8)(byte_98A1B1[v112] - 1) <= 1u\n                    && dword_90E63C[v110] != dword_90E7B8[v110]\n                    && *(_DWORD *)(v110 * 4 + 9496212)\n                    && dword_90E810[v110] )\n                  {\n                    if ( !*(_DWORD *)(v110 * 4 + 9496292) )\n                    {\n                      v81 = (unsigned int)v112;\n                      if ( (unsigned int)sub_44B0A0(dword_90E7E8[v110], v112) )\n                      {\n                        v81 = (unsigned int)dword_90E7E8[v110];\n                        sub_456350(\n                          dword_90E63C[v110],\n                          v81,\n                          5LL,\n                          &dword_8E94FC[95 * dword_90E63C[v110]],\n                          &dword_8E9524[95 * dword_90E63C[v110]]);\n                      }\n                    }\n                    if ( !dword_90E860[v110] )\n                    {\n                      v81 = v111;\n                      if ( (unsigned int)sub_44B0A0(*(_DWORD *)((char *)&xmmword_90E66C + v110 * 4), v111) )\n                      {\n                        v81 = *(unsigned int *)((char *)&xmmword_90E66C + v110 * 4);\n                        sub_456350(\n                          dword_90E7B8[v110],\n                          v81,\n                          5LL,\n                          &dword_8E94FC[95 * dword_90E7B8[v110]],\n                          &dword_8E9524[95 * dword_90E7B8[v110]]);\n                      }\n                    }\n                  }\n                  ++v112;\n                  ++v111;\n                  v110 += 95LL;\n                }\n                while ( v110 * 4 );\n                if ( dword_98A7F4 )\n                  sub_4340E0((__int64)\"engine/worm.c\", 0x1BBu, (__int64)\"stackp == 0\", 0xFFFFFFFF, 0xFFFFFFFF);\n                v113 = 21LL;\n                do\n                {\n                  if ( (unsigned __int8)(byte_98A1B0[v113] - 1) <= 1u )\n                  {\n                    v114 = 95 * v113;\n                    if ( v113 == dword_8E947C[95 * v113] )\n                    {\n                      if ( dword_98A7F4 )\n                        sub_4340E0(\n                          (__int64)\"engine/worm.c\",\n                          0x3C3u,\n                          (__int64)\"stackp == 0\",\n                          (unsigned int)v113 / 0x14 - 1,\n                          (unsigned int)v113 % 0x14 - 1);\n                      v115 = &dword_8E947C[v114];\n                      v116 = 0;\n                      v117 = -379LL;\n                      v118 = dword_8EB3A8;\n                      do\n                      {\n                        v119 = (unsigned __int8)byte_98A1B0[v113];\n                        v120 = (unsigned int)(3 - v119);\n                        if ( (_DWORD)v120 == (unsigned __int8)byte_98A340[v117] )\n                        {\n                          v121 = dword_5641B0[0] + (signed int)v117 + 400;\n                          if ( byte_98A1B0[v121] != 3 && dword_8E947C[95 * v121] == *v115 )\n                            goto LABEL_359;\n                          if ( (v122 = dword_5641B4 + (signed int)v117 + 400, byte_98A1B0[v122] != 3)\n                            && dword_8E947C[95 * v122] == *v115\n                            || (v123 = dword_5641B8 + (signed int)v117 + 400, byte_98A1B0[v123] != 3)\n                            && dword_8E947C[95 * v123] == *v115\n                            || (v124 = dword_5641BC + (signed int)v117 + 400, byte_98A1B0[v124] != 3)\n                            && dword_8E947C[95 * v124] == *v115\n                            || (v125 = dword_5641C0[0] + (signed int)v117 + 400, byte_98A1B0[v125] != 3)\n                            && dword_8E947C[95 * v125] == *v115\n                            || (v126 = dword_5641C4 + (signed int)v117 + 400, byte_98A1B0[v126] != 3)\n                            && dword_8E947C[95 * v126] == *v115\n                            || (v127 = dword_5641C8 + (signed int)v117 + 400, byte_98A1B0[v127] != 3)\n                            && dword_8E947C[95 * v127] == *v115\n                            || (v128 = dword_5641CC + (signed int)v117 + 400, byte_98A1B0[v128] != 3)\n                            && dword_8E947C[95 * v128] == *v115 )\n                          {\nLABEL_359:\n                            if ( v118[22] )\n                            {\n                              if ( !(unsigned int)sub_40B8D0((signed int)v117 + 400) )\n                              {\n                                if ( !v116\n                                  || (v129 = 95LL * v116,\n                                      v119 = *(unsigned int *)((char *)&qword_8E9494 + v129 * 4),\n                                      v118[6] > (signed int)v119)\n                                  || v118[6] == (_DWORD)v119\n                                  && (v119 = (unsigned int)v118[1], (signed int)v119 < dword_8E9480[v129]) )\n                                {\n                                  v116 = *v118;\n                                }\n                              }\n                            }\n                          }\n                        }\n                        v118 += 95;\n                        ++v117;\n                      }\n                      while ( v117 );\n                      v130 = 0;\n                      if ( v116 )\n                      {\n                        v119 = dword_8E94D4[95 * v116] & 0xFFFFFFFE;\n                        if ( (_DWORD)v119 == 4 )\n                        {\n                          if ( dword_88C264 & 0x400 )\n                          {\n                            v81 = (unsigned int)v113;\n                            sub_433F90(\"lunch found for %1m at %1m\\n\", (unsigned int)v113, (unsigned int)v116);\n                          }\n                          v130 = v116;\n                        }\n                      }\n                      dword_8E9490[v114] = v130;\n                      sub_456130((unsigned int)v113, v81, v120, v119);\n                    }\n                  }\n                  ++v113;\n                }\n                while ( v113 != 400 );\n                if ( !dword_88C2F4 )\n                {\n                  v131 = 21LL;\n                  do\n                  {\n                    v132 = (unsigned __int8)byte_98A1B0[v131];\n                    if ( (unsigned __int8)(byte_98A1B0[v131] - 1) <= 1u )\n                    {\n                      v133 = 95 * v131;\n                      if ( v131 == dword_8E947C[95 * v131] )\n                      {\n                        if ( dword_8E94D4[v133]\n                          || (sub_43F210(v131, 10, (__int64)&dword_8E954C[v133], (__int64)&unk_8E9574 + v133 * 4),\n                              dword_8E94D4[v133]) )\n                        {\n                          if ( !dword_8E9524[v133] )\n                          {\n                            v134 = sub_408410(v131, 241, (unsigned __int64)dword_88BE40);\n                            if ( (signed int)v134 > 0 )\n                            {\n                              v135 = &dword_8E947C[v133];\n                              v156 = v134;\n                              v136 = 0LL;\n                              do\n                              {\n                                v137 = dword_88BE40[v136];\n                                if ( (unsigned int)sub_406880(\n                                                     (unsigned int)dword_88BE40[v136],\n                                                     v132,\n                                                     \"threaten defense\",\n                                                     0,\n                                                     0,\n                                                     0) )\n                                {\n                                  v138 = sub_43B050(v131, 0LL);\n                                  if ( (_DWORD)v138 == 5 )\n                                  {\n                                    v139 = sub_43B6F0(v138, v131, 0LL);\n                                    if ( v139 )\n                                      sub_456350(\n                                        *v135,\n                                        v137,\n                                        v139,\n                                        &dword_8E959C[95 * *v135],\n                                        (char *)&unk_8E95C4 + 380 * *v135);\n                                  }\n                                  sub_407030();\n                                }\n                                v140 = 4611686018427387900LL;\n                                do\n                                {\n                                  v141 = dword_5641C0[v140];\n                                  v142 = dword_88BE40[v136];\n                                  if ( (unsigned __int8)(byte_98A1B0[v141 + v142] - 1) >= 3u )\n                                  {\n                                    v143 = v142 + v141;\n                                    if ( !(unsigned int)sub_40B0A0(v143, v131) )\n                                    {\n                                      if ( (unsigned int)sub_406880(v143, v132, \"threaten defense\", v131, 0, 0) )\n                                      {\n                                        v144 = sub_43B050(v131, 0LL);\n                                        if ( (_DWORD)v144 == 5 )\n                                        {\n                                          v145 = sub_43B6F0(v144, v131, 0LL);\n                                          if ( v145 )\n                                            sub_456350(\n                                              *v135,\n                                              v143,\n                                              v145,\n                                              &dword_8E959C[95 * *v135],\n                                              (char *)&unk_8E95C4 + 380 * *v135);\n                                        }\n                                        sub_407030();\n                                      }\n                                    }\n                                  }\n                                  ++v140;\n                                }\n                                while ( v140 * 4 );\n                                ++v136;\n                              }\n                              while ( v136 != v156 );\n                            }\n                          }\n                        }\n                      }\n                    }\n                    ++v131;\n                  }\n                  while ( v131 != 400 );\n                }\n                v146 = 4611686018427351899LL;\n                v147 = 21LL;\n                do\n                {\n                  LOBYTE(v7) = byte_98A1B0[v147] - 1;\n                  if ( (unsigned __int8)v7 <= 1u )\n                  {\n                    v7 = (unsigned int)dword_90E63C[v146];\n                    if ( v147 == v7\n                      && !dword_90E65C[v146]\n                      && !dword_90E644[v146]\n                      && !dword_90E654[v146]\n                      && !dword_90E650[v146] )\n                    {\n                      s[0] = 0;\n                      memset(v174, 0, 0x640uLL);\n                      v170 = 0;\n                      v148 = sub_40AD00(v147);\n                      v149 = (unsigned __int64)v174;\n                      sub_457A30((unsigned int)v147, v174, s, &v170, v148);\n                      LOBYTE(v7) = s[0];\n                      switch ( (unsigned __int64)(unsigned int)s[0] )\n                      {\n                        case 0uLL:\n                          v152 = sub_40BBB0(3);\n                          LODWORD(v7) = sub_40A5F0(v147);\n                          if ( v152 != (_DWORD)v7 )\n                            goto LABEL_349;\n                          break;\n                        case 1uLL:\n                        case 2uLL:\n                          if ( v170 <= 2 )\n                          {\n                            if ( dword_88C264 & 0x400 )\n                            {\n                              v149 = (unsigned int)v147;\n                              sub_433F90(\"Worm %1m identified as inessential.\\n\", (unsigned int)v147);\n                            }\n                            *(_DWORD *)((char *)&qword_90E660 + v146 * 4) = 1;\n                            LOBYTE(v7) = sub_456130((unsigned int)v147, v149, v150, v151);\n                          }\n                          break;\n                        case 3uLL:\n                          break;\n                        default:\nLABEL_349:\n                          sub_4340E0(\n                            (__int64)\"engine/worm.c\",\n                            0x5B6u,\n                            (__int64)\"border_color == 0 && ((pos == 0 && stones_on_board(2 | 1) == 0) || (pos != 0 && sto\"\n                                     \"nes_on_board(2 | 1) == countstones(pos)))\",\n                            0xFFFFFFFF,\n                            0xFFFFFFFF);\n                          return result;\n                      }\n                    }\n                  }\n                  ++v147;\n                  v146 += 95LL;\n                }\n                while ( v146 * 4 );\n                return v7;\n              }\n            }\n            v86 = s[v85];\n            v87 = 1;\n            v159 = v85;\n            LODWORD(v163) = s[v85];\n            while ( 1 )\n            {\n              if ( v87 & v86 )\n              {\n                v81 = v87;\n                if ( (unsigned int)sub_406880((unsigned int)v85, v87, \"make_worms\", 0, 0, 0) )\n                  break;\n              }\nLABEL_245:\n              if ( ++v87 == 3 )\n                goto LABEL_246;\n            }\n            if ( dword_88C264 & 0x400 )\n            {\n              v81 = (unsigned int)v85;\n              sub_433F90(\"trying %1m\\n\", (unsigned int)v85);\n            }\n            sub_44B020();\n            v88 = 3 - v87;\n            v89 = -144020LL;\n            v90 = 21LL;\n            while ( 2 )\n            {\n              if ( (unsigned __int8)(byte_98A1B0[v90] - 1) > 1u || v90 != dword_90E63C[v89 / 4] )\n                goto LABEL_243;\n              v91 = (unsigned int)dword_90E630[v89 / 4];\n              if ( (_DWORD)v91 == v88 && *(_DWORD *)(v89 + 9496212) && *(_DWORD *)(v89 + 9496292) )\n              {\n                v81 = 0LL;\n                v92 = sub_43B6F0(v91, v90, 0LL);\n                v93 = *(_DWORD *)(v89 + 9496292);\n                if ( v92 >= v93 )\n                  goto LABEL_243;\n                if ( v93\n                  && (unsigned int)sub_406880(\n                                     *(unsigned int *)((char *)&xmmword_90E6BC + v89),\n                                     v88,\n                                     \"make_worms\",\n                                     0,\n                                     0,\n                                     0) )\n                {\n                  v81 = 0LL;\n                  v94 = 5 - (unsigned __int64)sub_43B050(v90, 0LL);\n                  if ( v94 <= v92 || (v92 = v94, v94 < *(_DWORD *)(v89 + 9496292)) )\n                  {\n                    sub_407030();\n                    goto LABEL_223;\n                  }\nLABEL_211:\n                  sub_407030();\nLABEL_243:\n                  ++v90;\n                  v89 += 380LL;\n                  if ( !v89 )\n                  {\n                    sub_44B060();\n                    sub_407030();\n                    v86 = v163;\n                    goto LABEL_245;\n                  }\n                  continue;\n                }\nLABEL_223:\n                v95 = 5 - v92;\n                if ( dword_88C264 & 0x400 )\n                {\n                  sub_433F90(\n                    \"adding point of attack of %1m at %1m with code %d\\n\",\n                    (unsigned int)v90,\n                    (unsigned int)v159,\n                    v95);\n                  v96 = dword_90E63C[v89 / 4];\n                  if ( dword_88C264 & 0x400 )\n                    sub_433F90(\"change_attack: %1m %1m %d\\n\", (unsigned int)v96, (unsigned int)v159, v95);\n                }\n                else\n                {\n                  v96 = dword_90E63C[v89 / 4];\n                }\n                v101 = v96;\n                v102 = 95LL * v96;\n                v103 = &dword_8E94AC[v102];\n                v104 = &dword_8E94D4[v102];\n                v81 = v159;\n                v105 = v95;\n                v85 = v159;\nLABEL_242:\n                sub_456350(v101, v81, v105, v103, v104);\n                v88 = 3 - v87;\n                goto LABEL_243;\n              }\n              break;\n            }\n            if ( (_DWORD)v91 != v87 )\n              goto LABEL_243;\n            if ( !*(_DWORD *)(v89 + 9496212) )\n              goto LABEL_243;\n            v81 = 0LL;\n            v97 = sub_43B050(v90, 0LL);\n            v98 = *(_DWORD *)(v89 + 9496212);\n            if ( v97 >= v98 )\n              goto LABEL_243;\n            if ( v98 )\n            {\n              v81 = v88;\n              v99 = sub_406880(*(unsigned int *)((char *)&xmmword_90E66C + v89), v88, \"make_worms\", 0, 0, 0);\n              if ( (_DWORD)v99 )\n              {\n                if ( byte_98A1B0[v90] )\n                {\n                  v81 = 0LL;\n                  v100 = 5 - (unsigned __int64)sub_43B6F0(v99, v90, 0LL);\n                  if ( v100 <= v97 )\n                    goto LABEL_238;\n                }\n                else\n                {\n                  v100 = 5;\n                  if ( v97 >= 5 )\n                    goto LABEL_238;\n                }\n                v97 = v100;\n                if ( v100 >= *(_DWORD *)(v89 + 9496212) )\n                  goto LABEL_211;\nLABEL_238:\n                sub_407030();\n              }\n            }\n            v106 = 5 - v97;\n            if ( dword_88C264 & 0x400 )\n              sub_433F90(\n                \"adding point of defense of %1m at %1m with code %d\\n\",\n                (unsigned int)v90,\n                (unsigned int)v85,\n                v106);\n            v101 = dword_90E63C[v89 / 4];\n            v103 = &dword_8E94FC[95 * v101];\n            v104 = &dword_8E9524[95 * v101];\n            v81 = (unsigned int)v85;\n            v105 = v106;\n            goto LABEL_242;\n          }\n        }\n        if ( *v60 != dword_8E947C[95 * v62] )\n          v59 = *v60;\n        goto LABEL_173;\n      }\n    }\n    memset(s, 0, 0x640uLL);\n    v43 = sub_408410(v40, 241, (unsigned __int64)&v170);\n    if ( (signed int)v43 > 0 )\n    {\n      v44 = v43 & 3;\n      if ( (unsigned __int64)v43 - 1 < 3 )\n      {\n        v45 = 0LL;\n        if ( !(v43 & 3) )\n          goto LABEL_113;\n        goto LABEL_111;\n      }\n      v45 = 0LL;\n      do\n      {\n        s[*(&v170 + v45)] = 1;\n        s[*(&v171 + v45)] = 1;\n        s[*(&v172 + v45)] = 1;\n        s[v173[v45]] = 1;\n        v45 += 4LL;\n      }\n      while ( v43 - v44 != v45 );\n      if ( v43 & 3 )\n      {\nLABEL_111:\n        v46 = &v170 + v45;\n        v47 = -v44;\n        do\n        {\n          s[*v46] = 1;\n          ++v46;\n          ++v47;\n        }\n        while ( v47 );\n        goto LABEL_113;\n      }\n    }\nLABEL_113:\n    v48 = 3 - v41;\n    v49 = -379LL;\n    do\n    {\n      while ( 1 )\n      {\n        if ( byte_98A340[v49] != 3 && *(&v170 + v49) )\n        {\n          v50 = (unsigned __int8)byte_98A354[v49];\n          if ( v50 == 3 || v48 == v50 )\n          {\n            v51 = (unsigned __int8)byte_98A32C[v49];\n            if ( v51 == 3 || v48 == v51 )\n              break;\n          }\n          v52 = (unsigned __int8)byte_98A33F[v49];\n          if ( v52 == 3 || v48 == v52 )\n          {\n            v53 = (unsigned __int8)byte_98A341[v49];\n            if ( v53 == 3 || v48 == v53 )\n              break;\n          }\n        }\n        if ( !++v49 )\n          goto LABEL_127;\n      }\n      *(&v170 + v49++) = 0;\n    }\n    while ( v49 );\nLABEL_127:\n    v162 = 0;\n    memset(v174, 0, 0x640uLL);\n    sub_457750((unsigned int)v40, &v162, s, v174, v41);\n    v161 = 0;\n    memset(v174, 0, 0x640uLL);\n    sub_457750((unsigned int)v40, &v161, s, v174, v41);\n    v160 = 0;\n    memset(v174, 0, 0x640uLL);\n    sub_457750((unsigned int)v40, &v160, s, v174, v41);\n    if ( dword_8E9480[v42] != v43 )\n      sub_4340E0((__int64)\"engine/worm.c\", 0x74u, (__int64)\"worm[pos].liberties == lib1\", 0xFFFFFFFF, 0xFFFFFFFF);\n    dword_8E9484[v42] = v162;\n    dword_8E9488[v42] = v161;\n    dword_8E948C[v42] = v160;\n    *(__int64 *)((char *)&qword_8E9494 + v42 * 4) = 0LL;\n    sub_456130((unsigned int)v40, &v160, v54, v55);\n    goto LABEL_130;\n  }\n  return v7;\n}\n", 
            "funcStartAddr": "0x454520L", 
            "funcEndAddr": "0x456103L", 
            "funcName": "sub_454520"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_456110(int a1, int a2)\n{\n  return dword_8E947C[95 * a1] == a2;\n}\n", 
            "funcStartAddr": "0x456110L", 
            "funcEndAddr": "0x456126L", 
            "funcName": "sub_456110"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_456130(signed int a1)\n{\n  int v1; // edx\n  __int64 result; // rax\n  int *v3; // r14\n  __int64 v4; // r15\n  __int64 v5; // rbx\n  __int64 v6; // r13\n  __int64 v7; // rax\n  int v8; // [rsp+0h] [rbp-5D8h]\n  int v9[373]; // [rsp+4h] [rbp-5D4h]\n\n  if ( dword_98A7F4 )\n    sub_4340E0((__int64)\"engine/worm.c\", 0x496u, (__int64)\"stackp == 0\", 0xFFFFFFFF, 0xFFFFFFFF);\n  if ( (unsigned __int8)(byte_98A1B0[a1] - 1) >= 2u )\n  {\n    v1 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0((__int64)\"engine/worm.c\", 0x497u, (__int64)\"IS_STONE(board[pos])\", v1 - 1, a1 - 20 * v1 - 1);\n  }\n  result = sub_40A6C0(a1, 361, (__int64)&v8);\n  if ( (signed int)result > 0 )\n  {\n    v3 = &dword_8E9470[95 * a1];\n    v4 = result & 1;\n    if ( (_DWORD)result == 1 )\n    {\n      v5 = 0LL;\n      if ( !(result & 1) )\n        return result;\n      goto LABEL_16;\n    }\n    v6 = (unsigned int)result - v4;\n    v5 = 0LL;\n    do\n    {\n      v7 = *(&v8 + v5);\n      if ( (_DWORD)v7 != a1 )\n        memcpy(&dword_8E9470[95 * v7], v3, 0x17CuLL);\n      result = v9[v5];\n      if ( (_DWORD)result != a1 )\n        result = (__int64)memcpy(&dword_8E9470[95 * result], v3, 0x17CuLL);\n      v5 += 2LL;\n    }\n    while ( v6 != v5 );\n    if ( v4 )\n    {\nLABEL_16:\n      result = *(&v8 + v5);\n      if ( (_DWORD)result != a1 )\n        result = (__int64)memcpy(&dword_8E9470[95 * result], v3, 0x17CuLL);\n      return result;\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x456130L", 
            "funcEndAddr": "0x45628cL", 
            "funcName": "sub_456130"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_456290(int a1, int a2)\n{\n  return dword_8E947C[95 * a1] == dword_8E947C[95 * a2];\n}\n", 
            "funcStartAddr": "0x456290L", 
            "funcEndAddr": "0x4562b6L", 
            "funcName": "sub_456290"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4562C0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // rbx\n\n  v3 = a3;\n  v4 = dword_8E947C[95 * a1];\n  if ( dword_88C264 & 0x400 )\n    sub_433F90(\"change_attack: %1m %1m %d\\n\", (unsigned int)v4, a2, a3);\n  return sub_456350((unsigned int)v4, a2, v3, &dword_8E94AC[95 * v4], &dword_8E94D4[95 * v4]);\n}\n", 
            "funcStartAddr": "0x4562c0L", 
            "funcEndAddr": "0x456318L", 
            "funcName": "sub_4562C0"
        }, 
        {
            "decompiledFuncCode": "unsigned __int64 __fastcall sub_456350(signed int a1, int a2, int a3, __int64 a4, __int64 a5)\n{\n  signed __int64 v5; // r14\n  int v6; // edx\n  unsigned __int64 result; // rax\n  int v8; // edx\n  int *v9; // r12\n  int *v10; // r14\n  char v11; // r15\n  signed __int64 v12; // rbp\n  unsigned int *v13; // rbx\n\n  if ( byte_98A1B0[a1] == 3 )\n    sub_4340E0((__int64)\"engine/worm.c\", 0x480u, (__int64)\"(board[str] != 3)\", 0xFFFFFFFF, 0xFFFFFFFF);\n  v5 = 95LL * a1;\n  if ( dword_8E947C[95 * a1] != a1 )\n    sub_4340E0((__int64)\"engine/worm.c\", 0x481u, (__int64)\"str == worm[str].origin\", 0xFFFFFFFF, 0xFFFFFFFF);\n  sub_4241E0(a2, a3, 10, a4, a5);\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v6 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0((__int64)\"engine/worm.c\", 0x4AAu, (__int64)\"ON_BOARD1(str)\", v6 - 1, a1 - 20 * v6 - 1);\n  }\n  result = (unsigned int)(dword_8E9470[v5] - 1);\n  if ( (unsigned int)result >= 2 )\n  {\n    v8 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0((__int64)\"engine/worm.c\", 0x4ABu, (__int64)\"IS_STONE(worm[str].color)\", v8 - 1, a1 - 20 * v8 - 1);\n  }\n  v9 = &dword_8E947C[v5];\n  v10 = &dword_8E9470[v5];\n  v11 = byte_98A1B0[a1];\n  v12 = -378LL;\n  v13 = (unsigned int *)&unk_8EB524;\n  if ( byte_98A33F[-378] == v11 )\n  {\nLABEL_13:\n    result = *(v13 - 95);\n    if ( (_DWORD)result == *v9 )\n      result = (unsigned __int64)memcpy(v13 - 98, v10, 0x17CuLL);\n  }\n  while ( v12 )\n  {\n    if ( byte_98A340[v12] == v11 )\n    {\n      result = *v13;\n      if ( (_DWORD)result == *v9 )\n        result = (unsigned __int64)memcpy(v13 - 3, v10, 0x17CuLL);\n    }\n    v13 += 190;\n    v12 += 2LL;\n    if ( byte_98A33F[v12] == v11 )\n      goto LABEL_13;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x456350L", 
            "funcEndAddr": "0x45651cL", 
            "funcName": "sub_456350"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_456640(int a1)\n{\n  signed __int64 v1; // rbx\n  _DWORD *v2; // r12\n  _DWORD *v3; // r13\n  signed __int64 result; // rax\n  signed __int64 v5; // rbp\n  int v6; // edx\n  signed __int64 v7; // rbp\n  int v8; // edx\n\n  v1 = 21LL;\n  v2 = &unk_8EB4A0;\n  v3 = &unk_8EB4F0;\n  do\n  {\n    result = (unsigned __int8)byte_98A1B0[v1];\n    if ( byte_98A1B0[v1] && (_BYTE)result != 3 && v1 == dword_8E947C[95 * v1] )\n    {\n      if ( 3 - a1 == (_DWORD)result )\n      {\n        v5 = -10LL;\n        do\n        {\n          v6 = v2[v5 - 30];\n          if ( v6 )\n            sub_420DE0(v2[v5 - 40], v1, v6);\n          if ( v2[v5 + 10] )\n            sub_4210D0(v2[v5], v1);\n          ++v5;\n        }\n        while ( v5 );\n        LOBYTE(result) = byte_98A1B0[v1];\n      }\n      result = (unsigned __int8)result;\n      if ( (unsigned __int8)result == a1 )\n      {\n        v7 = -10LL;\n        do\n        {\n          v8 = v3[v7 - 30];\n          if ( v8 )\n            result = sub_421030(v3[v7 - 40], v1, v8);\n          if ( v3[v7 + 10] )\n            result = sub_421280(v3[v7], v1);\n          ++v7;\n        }\n        while ( v7 );\n      }\n    }\n    ++v1;\n    v2 += 95;\n    v3 += 95;\n  }\n  while ( v1 != 400 );\n  return result;\n}\n", 
            "funcStartAddr": "0x456640L", 
            "funcEndAddr": "0x45676eL", 
            "funcName": "sub_456640"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_456770(int a1, void *a2)\n{\n  signed int v2; // ebp\n  signed __int64 v3; // rbx\n  unsigned __int64 v4; // rbx\n  signed __int64 v5; // rbp\n  __int64 result; // rax\n\n  memset(a2, 0, 0x190uLL);\n  v2 = 20;\n  v3 = 21LL;\n  do\n  {\n    if ( *((_BYTE *)a2 + v3) )\n      sub_4340E0(\n        (__int64)\"engine/worm.c\",\n        0x693u,\n        (__int64)\"safe_stones[ii] == 0\",\n        (unsigned int)v3 / 0x14 - 1,\n        v2 - 20 * ((unsigned int)v3 / 0x14));\n    ++v3;\n    ++v2;\n  }\n  while ( v3 != 400 );\n  v4 = -144020LL;\n  v5 = 21LL;\n  do\n  {\n    result = (unsigned __int8)byte_98A1B0[v5];\n    if ( (unsigned __int8)(byte_98A1B0[v5] - 1) <= 1u\n      && v5 == dword_90E63C[v4 / 4]\n      && (!*(_DWORD *)(v4 + 9496212) || (_DWORD)result == a1 && *(_DWORD *)(v4 + 9496292)) )\n    {\n      result = sub_40BAB0(v5, (__int64)a2, 1);\n    }\n    ++v5;\n    v4 += 380LL;\n  }\n  while ( v4 );\n  return result;\n}\n", 
            "funcStartAddr": "0x456770L", 
            "funcEndAddr": "0x456866L", 
            "funcName": "sub_456770"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_456870()\n{\n  signed int v0; // ebp\n  signed __int64 v1; // rbx\n  unsigned __int64 v2; // rbp\n  signed __int64 v3; // rbx\n  signed int v4; // ebx\n  signed __int64 v5; // rbp\n  unsigned __int64 v6; // rbp\n  signed __int64 v7; // rbx\n  char v9[424]; // [rsp+0h] [rbp-1A8h]\n\n  memset(v9, 0, 0x190uLL);\n  v0 = 20;\n  v1 = 21LL;\n  do\n  {\n    if ( v9[v1] )\n      sub_4340E0(\n        (__int64)\"engine/worm.c\",\n        0x693u,\n        (__int64)\"safe_stones[ii] == 0\",\n        (unsigned int)v1 / 0x14 - 1,\n        v0 - 20 * ((unsigned int)v1 / 0x14));\n    ++v1;\n    ++v0;\n  }\n  while ( v1 != 400 );\n  v2 = -144020LL;\n  v3 = 21LL;\n  do\n  {\n    if ( (unsigned __int8)(byte_98A1B0[v3] - 1) <= 1u\n      && v3 == dword_90E63C[v2 / 4]\n      && (!*(_DWORD *)(v2 + 9496212) || byte_98A1B0[v3] == 2 && *(_DWORD *)(v2 + 9496292)) )\n    {\n      sub_40BAB0(v3, (__int64)v9, 1);\n    }\n    ++v3;\n    v2 += 380LL;\n  }\n  while ( v2 );\n  sub_419D50(2, (__int64)v9, 0LL, (__int64)&unk_927B28);\n  memset(v9, 0, 0x190uLL);\n  v4 = 20;\n  v5 = 21LL;\n  do\n  {\n    if ( v9[v5] )\n      sub_4340E0(\n        (__int64)\"engine/worm.c\",\n        0x693u,\n        (__int64)\"safe_stones[ii] == 0\",\n        (unsigned int)v5 / 0x14 - 1,\n        v4 - 20 * ((unsigned int)v5 / 0x14));\n    ++v5;\n    ++v4;\n  }\n  while ( v5 != 400 );\n  v6 = -144020LL;\n  v7 = 21LL;\n  do\n  {\n    if ( (unsigned __int8)(byte_98A1B0[v7] - 1) <= 1u\n      && v7 == dword_90E63C[v6 / 4]\n      && (!*(_DWORD *)(v6 + 9496212) || byte_98A1B0[v7] == 1 && *(_DWORD *)(v6 + 9496292)) )\n    {\n      sub_40BAB0(v7, (__int64)v9, 1);\n    }\n    ++v7;\n    v6 += 380LL;\n  }\n  while ( v6 );\n  return sub_419D50(1, (__int64)v9, 0LL, (__int64)&unk_9333A0);\n}\n", 
            "funcStartAddr": "0x456870L", 
            "funcEndAddr": "0x456aa6L", 
            "funcName": "sub_456870"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __usercall sub_456AE0@<rax>(__int64 a1@<rax>, int a2@<edi>, int a3@<esi>)\n{\n  signed __int64 v3; // rbx\n  signed __int64 v4; // r14\n  const char *v5; // rsi\n  int *v6; // r15\n  unsigned int v7; // ebp\n  __int64 v8; // rbx\n  const char *v9; // rax\n  char *v10; // rdi\n  signed __int64 result; // rax\n  int *v12; // r15\n  unsigned int v13; // ebx\n  __int64 v14; // rbp\n  const char *v15; // rax\n  char *v16; // rdi\n  int *v17; // r15\n  unsigned int v18; // ebx\n  __int64 v19; // rbp\n  const char *v20; // rax\n  char *v21; // rdi\n  int *v22; // r15\n  unsigned int v23; // ebx\n  __int64 v24; // rbp\n  const char *v25; // rax\n  char *v26; // rdi\n  char *v27; // rdi\n  char *v28; // rdi\n  char *v29; // rdi\n\n  v3 = a3 + 20LL * a2 + 21;\n  if ( !byte_98A1C5[20 * a2 + a3] )\n    return sub_433F90(\"There is no worm at %1m\\n\", (unsigned int)v3);\n  sub_433F90(\"*** worm at %1m:\\n\", (unsigned int)v3, a1);\n  v4 = 95 * v3;\n  v5 = \"Black\";\n  if ( dword_8E9470[95 * v3] == 1 )\n    v5 = \"White\";\n  sub_433F90(\n    \"color: %s; origin: %1m; size: %d; effective size: %f\\n\",\n    v5,\n    (unsigned int)dword_8E947C[v4],\n    (unsigned int)dword_8E9474[v4],\n    *(float *)&dword_8E9478[v4]);\n  sub_433F90(\n    \"liberties: %d order 2 liberties:%d order 3:%d order 4:%d\\n\",\n    (unsigned int)dword_8E9480[v4],\n    (unsigned int)dword_8E9484[v4],\n    (unsigned int)dword_8E9488[v4],\n    (unsigned int)dword_8E948C[v4]);\n  if ( dword_8E94AC[v4] )\n  {\n    v6 = &dword_8E94AC[v4];\n    sub_433F90(\"attack point(s):\");\n    v7 = dword_8E94AC[v4];\n    if ( v7 )\n    {\n      v8 = 0LL;\n      do\n      {\n        if ( v8 )\n        {\n          sub_433F90(\",\");\n          v7 = v6[v8];\n        }\n        v9 = sub_434430(v6[v8 + 10]);\n        sub_433F90(\" %1m: %s\", v7, v9);\n        v7 = v6[v8++ + 1];\n      }\n      while ( v7 );\n    }\n    v10 = \"\\n;\";\n  }\n  else\n  {\n    v10 = \"no attack point, \";\n  }\n  sub_433F90(v10);\n  if ( dword_8E94FC[v4] )\n  {\n    v12 = &dword_8E94FC[v4];\n    sub_433F90(\"defense point(s):\");\n    v13 = dword_8E94FC[v4];\n    if ( v13 )\n    {\n      v14 = 0LL;\n      do\n      {\n        if ( v14 )\n        {\n          sub_433F90(\",\");\n          v13 = v12[v14];\n        }\n        v15 = sub_434430(v12[v14 + 10]);\n        sub_433F90(\" %1m: %s\", v13, v15);\n        v13 = v12[v14++ + 1];\n      }\n      while ( v13 );\n    }\n    v16 = \"\\n;\";\n  }\n  else\n  {\n    v16 = \"no defense point, \";\n  }\n  sub_433F90(v16);\n  if ( dword_8E954C[v4] )\n  {\n    v17 = &dword_8E954C[v4];\n    sub_433F90(\"attack threat point(s):\");\n    v18 = dword_8E954C[v4];\n    if ( v18 )\n    {\n      v19 = 0LL;\n      do\n      {\n        if ( v19 )\n        {\n          sub_433F90(\",\");\n          v18 = v17[v19];\n        }\n        v20 = sub_434430(v17[v19 + 10]);\n        sub_433F90(\" %1m: %s\", v18, v20);\n        v18 = v17[v19++ + 1];\n      }\n      while ( v18 );\n    }\n    v21 = \"\\n;\";\n  }\n  else\n  {\n    v21 = \"no attack threat point, \";\n  }\n  sub_433F90(v21);\n  if ( dword_8E959C[v4] )\n  {\n    v22 = &dword_8E959C[v4];\n    sub_433F90(\"defense threat point(s):\");\n    v23 = dword_8E959C[v4];\n    if ( v23 )\n    {\n      v24 = 0LL;\n      do\n      {\n        if ( v24 )\n        {\n          sub_433F90(\",\");\n          v23 = v22[v24];\n        }\n        v25 = sub_434430(v22[v24 + 10]);\n        sub_433F90(\" %1m: %s\", v23, v25);\n        v23 = v22[v24++ + 1];\n      }\n      while ( v23 );\n    }\n    v26 = \"\\n;\";\n  }\n  else\n  {\n    v26 = \"no defense threat point, \";\n  }\n  sub_433F90(v26);\n  if ( dword_8E9490[v4] )\n    sub_433F90(\"lunch at %1m\\n\");\n  sub_433F90(\n    \"cutstone: %d, cutstone2: %d\\n\",\n    *(unsigned int *)((char *)&qword_8E9494 + v4 * 4),\n    *(unsigned int *)(v4 * 4 + 9344152));\n  sub_433F90(\"genus: %d, \", (unsigned int)dword_8E949C[v4]);\n  if ( dword_8E94A0[v4] )\n    v27 = \"inessential: YES, \";\n  else\n    v27 = \"inessential: NO, \";\n  sub_433F90(v27);\n  if ( dword_8E94A4[v4] )\n    v28 = \"invincible: YES, \\n\";\n  else\n    v28 = \"invincible: NO, \\n\";\n  sub_433F90(v28);\n  result = (unsigned int)dword_8E94A8[v4];\n  switch ( result )\n  {\n    case 0LL:\n      v29 = \"unconditional status DEAD\\n\";\n      goto LABEL_51;\n    case 1LL:\n      v29 = \"unconditional status ALIVE\\n\";\n      goto LABEL_51;\n    case 3LL:\n      v29 = \"unconditional status UNKNOWN\\n\";\n      goto LABEL_51;\n    case 4LL:\n      v29 = \"unconditional status WHITE_BORDER\\n\";\n      goto LABEL_51;\n    case 5LL:\n      v29 = \"unconditional status BLACK_BORDER\\n\";\nLABEL_51:\n      result = sub_433F90(v29);\n      break;\n    default:\n      return result;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x456ae0L", 
            "funcEndAddr": "0x456e72L", 
            "funcName": "sub_456AE0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_456E80(int a1, __int64 a2, __int64 a3, int a4)\n{\n  int v4; // er14\n  size_t v5; // r13\n  __int64 v6; // rbx\n  int *v7; // r15\n  int *v8; // rbp\n  int v9; // er12\n  int v10; // ecx\n  _DWORD *v11; // r12\n  signed __int64 v12; // r14\n  __int64 v13; // r15\n  __int64 v14; // r13\n  __int64 v15; // r13\n  int v16; // eax\n  int v17; // ebx\n  signed __int64 v18; // rbp\n  __int64 v19; // rsi\n  int *v20; // rax\n  signed __int64 v21; // rcx\n  char v22; // dl\n  __int64 v23; // rsi\n  __int64 v24; // rdi\n  signed __int64 v25; // rdi\n  float v26; // xmm2_4\n  double v27; // xmm2_8\n  signed __int64 v28; // rdi\n  signed __int64 v29; // rbx\n  float v30; // xmm3_4\n  float v31; // xmm3_4\n  signed __int64 v32; // rbp\n  signed __int64 v33; // rdi\n  bool v34; // sf\n  unsigned __int8 v35; // of\n  signed __int64 v36; // rbx\n  signed __int64 v37; // rbp\n  signed __int64 v38; // rbx\n  signed __int64 result; // rax\n  _DWORD *v40; // rcx\n  int v41; // esi\n  signed __int64 v42; // rsi\n  int v43; // [rsp+Ch] [rbp-CDCh]\n  signed int v44; // [rsp+10h] [rbp-CD8h]\n  int v45; // [rsp+14h] [rbp-CD4h]\n  __int64 v46; // [rsp+18h] [rbp-CD0h]\n  __int64 v47; // [rsp+20h] [rbp-CC8h]\n  int v48; // [rsp+28h] [rbp-CC0h]\n  int v49[21]; // [rsp+30h] [rbp-CB8h]\n  int v50[379]; // [rsp+84h] [rbp-C64h]\n  int v51[21]; // [rsp+670h] [rbp-678h]\n  int v52[393]; // [rsp+6C4h] [rbp-624h]\n\n  v43 = a4;\n  v47 = a3;\n  v46 = a2;\n  v4 = 2 * dword_565C68 - 2;\n  v5 = 4LL * (unsigned int)(2 * dword_565C68 - 3) + 4;\n  v6 = 0LL;\n  v7 = dword_8EB3A8;\n  v8 = (int *)&unk_87E540;\n  do\n  {\n    v9 = (unsigned __int8)byte_98A1C5[v6];\n    if ( v9 != 3 )\n    {\n      if ( v4 > 0 )\n        memset(v8, 0, v5);\n      v50[v6] = 0;\n      if ( v9 & a1 )\n      {\n        v52[v6] = 0;\n        *v8 = *v7;\n        v50[v6] = 1;\n      }\n      else\n      {\n        v52[v6] = -1;\n      }\n    }\n    ++v6;\n    v7 += 95;\n    v8 += 36;\n  }\n  while ( v6 != 379 );\n  if ( v43 >= 0 )\n  {\n    v10 = 0;\n    do\n    {\n      v45 = v10 + 1;\n      v11 = &unk_87E540;\n      v12 = 21LL;\n      v44 = 0;\n      v48 = v10;\n      do\n      {\n        if ( byte_98A1B0[v12] != 3 && v51[v12] == -1 )\n        {\n          v13 = 0LL;\n          do\n          {\n            v14 = dword_5641B0[v13];\n            if ( byte_98A1B0[v14 + (signed int)v12] != 3 )\n            {\n              v15 = (signed int)v12 + v14;\n              if ( v51[v15] == v10 )\n              {\n                v51[v12] = v45;\n                v16 = v49[v15];\n                v44 = 1;\n                if ( v16 > 0 )\n                {\n                  v17 = v49[v12];\n                  v18 = 0LL;\n                  do\n                  {\n                    if ( v17 <= 0 )\n                    {\nLABEL_23:\n                      if ( v17 >= 2 * dword_565C68 - 2 )\n                        sub_4340E0(\n                          (__int64)\"engine/worm.c\",\n                          0x27Cu,\n                          (__int64)\"nworms[pos] < 2*(board_size-1)\",\n                          0xFFFFFFFF,\n                          0xFFFFFFFF);\n                      dword_87D970[36 * v12 + v17++] = dword_87D970[36 * v15 + v18];\n                      v49[v12] = v17;\n                      v16 = v49[v15];\n                    }\n                    else\n                    {\n                      v19 = 0LL;\n                      while ( v11[v19] != dword_87D970[36 * v15 + v18] )\n                      {\n                        if ( ++v19 >= v17 )\n                          goto LABEL_23;\n                      }\n                    }\n                    ++v18;\n                  }\n                  while ( v18 < v16 );\n                  v10 = v48;\n                }\n              }\n            }\n            ++v13;\n          }\n          while ( v13 != 4 );\n        }\n        ++v12;\n        v11 += 36;\n      }\n      while ( v12 != 400 );\n      if ( v10 >= v43 )\n        break;\n      v10 = v45;\n    }\n    while ( v44 );\n  }\n  if ( a1 == 3 )\n  {\n    v20 = dword_87D970;\n    v21 = 21LL;\n    do\n    {\n      v22 = byte_98A1B0[v21];\n      if ( v22 != 3 )\n      {\n        v23 = v49[v21];\n        if ( v23 > 0 )\n        {\n          v24 = dword_87D970[36 * v21];\n          if ( v22 )\n          {\n            v25 = 95 * v24;\n            v26 = *(float *)&dword_8E9478[v25] + 1.0;\n          }\n          else\n          {\n            v25 = 95 * v24;\n            v26 = *(float *)&dword_8E9478[v25] + 0.5 / (double)(signed int)v23;\n          }\n          *(float *)&dword_8E9478[v25] = v26;\n          if ( (signed int)v23 >= 2 )\n          {\n            v27 = 0.5 / (double)(signed int)v23;\n            v28 = 757LL;\n            do\n            {\n              v29 = 95LL * v20[v28];\n              v30 = *(float *)&dword_8E9478[v29];\n              if ( v22 )\n                v31 = v30 + 1.0;\n              else\n                v31 = v30 + v27;\n              *(float *)&dword_8E9478[v29] = v31;\n              v32 = v28 + 1;\n              v33 = v28 - 755;\n              v35 = __OFSUB__(v33, v23);\n              v34 = v33 - v23 < 0;\n              v28 = v32;\n            }\n            while ( v34 ^ v35 );\n          }\n        }\n      }\n      ++v21;\n      v20 += 36;\n    }\n    while ( v21 != 400 );\n    v36 = 4611686018427351899LL;\n    v37 = 21LL;\n    do\n    {\n      if ( (unsigned __int8)(byte_98A1B0[v37] - 1) <= 1u && v37 == dword_90E63C[v36] )\n        sub_456130(v37);\n      ++v37;\n      v36 += 95LL;\n    }\n    while ( v36 * 4 );\n  }\n  v38 = v46 + 336;\n  result = 21LL;\n  v40 = &unk_87E540;\n  do\n  {\n    if ( byte_98A1B0[result] != 3 )\n    {\n      v41 = v49[result];\n      if ( v41 > 4 )\n        v41 = 0;\n      *(_DWORD *)(v47 + 4 * result) = v41;\n      if ( v41 > 0 )\n      {\n        v42 = 0LL;\n        do\n        {\n          *(_DWORD *)(v38 + 4 * v42) = v40[v42];\n          ++v42;\n        }\n        while ( v42 < *(signed int *)(v47 + 4 * result) );\n      }\n    }\n    ++result;\n    v38 += 16LL;\n    v40 += 36;\n  }\n  while ( result != 400 );\n  return result;\n}\n", 
            "funcStartAddr": "0x456e80L", 
            "funcEndAddr": "0x4572edL", 
            "funcName": "sub_456E80"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4572F0(int a1, unsigned int a2, __int64 a3, unsigned int a4)\n{\n  __int64 v4; // rbx\n  signed __int64 result; // rax\n  signed __int64 v6; // r15\n  __int64 v7; // rax\n  int v8; // er12\n  int v9; // eax\n  unsigned int v10; // er12\n  __int64 v11; // r13\n  int v12; // ebp\n  signed __int64 v13; // r14\n  unsigned int v14; // [rsp+Ch] [rbp-4Ch]\n  unsigned int v15; // [rsp+10h] [rbp-48h]\n  __int64 v16; // [rsp+20h] [rbp-38h]\n\n  v4 = a3;\n  v15 = a4;\n  v16 = (signed int)a4;\n  v14 = a1 + dword_94A490[8 * *(signed int *)(a3 + 52) + a4];\n  if ( !(*(_BYTE *)(a3 + 152) & 1)\n    || (result = (*(__int64 (__fastcall **)(_QWORD, _QWORD, _QWORD, _QWORD))(a3 + 168))(a4, v14, a2, 0LL), (_DWORD)result) )\n  {\n    result = *(_QWORD *)(v4 + 160);\n    if ( result\n      && (result = ((__int64 (__fastcall *)(__int64, _QWORD, _QWORD, _QWORD))result)(v4, v15, v14, a2), !(_DWORD)result) )\n    {\n      if ( dword_88C264 & 0x400 )\n        result = sub_433F90(\"Attack pattern %s+%d rejected by helper at %1m\\n\", *(_QWORD *)(v4 + 16), v15, v14);\n    }\n    else if ( *(_DWORD *)(v4 + 8) > 0 )\n    {\n      v6 = 0LL;\n      do\n      {\n        if ( *(_DWORD *)(*(_QWORD *)v4 + 8 * v6 + 4) == 1 )\n        {\n          v12 = dword_8E947C[95 * (a1 + (signed __int64)dword_94A490[8 * *(signed int *)(*(_QWORD *)v4 + 8 * v6) + v16])];\n          if ( (signed int)sub_4083A0(v12) <= 4 )\n          {\n            v13 = 95LL * v12;\n            if ( !(unsigned int)sub_4241B0(v14, 10, (__int64)&dword_8E94AC[v13], (__int64)&dword_8E94D4[v13]) )\n            {\n              if ( (unsigned int)sub_406880(v14, a2, \"attack_callback\", v12, 0, 0) )\n              {\n                if ( !byte_98A1B0[v12] )\n                {\n                  sub_407030();\n                  v9 = 0;\nLABEL_13:\n                  v10 = 5 - v9;\n                  if ( 5 - v9 >= dword_8E94D4[v13] )\n                  {\n                    v11 = dword_8E947C[v13];\n                    if ( dword_88C264 & 0x400 )\n                      sub_433F90(\"change_attack: %1m %1m %d\\n\", (unsigned int)v11, v14, v10);\n                    sub_456350(v11, v14, v10, (__int64)&dword_8E94AC[95 * v11], (__int64)&dword_8E94D4[95 * v11]);\n                    if ( dword_88C264 & 0x400 )\n                      sub_433F90(\n                        \"Attack pattern %s+%d found attack on %1m at %1m with code %d\\n\",\n                        *(_QWORD *)(v4 + 16),\n                        v15,\n                        (unsigned int)v12,\n                        v14,\n                        v10);\n                  }\n                  goto LABEL_22;\n                }\n                v7 = sub_43B050(v12, 0LL);\n                if ( (_DWORD)v7 )\n                {\n                  v8 = sub_43B6F0(v7, v12, 0LL);\n                  sub_407030();\n                  v9 = v8;\n                  if ( v8 != 5 )\n                    goto LABEL_13;\n                }\n                else\n                {\n                  sub_407030();\n                }\n              }\n            }\n          }\n        }\nLABEL_22:\n        ++v6;\n        result = *(signed int *)(v4 + 8);\n      }\n      while ( v6 < result );\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4572f0L", 
            "funcEndAddr": "0x45753dL", 
            "funcName": "sub_4572F0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_457540(int a1, unsigned int a2, __int64 a3, unsigned int a4)\n{\n  __int64 v4; // rbx\n  unsigned int v5; // er12\n  signed __int64 result; // rax\n  signed __int64 v7; // r15\n  int v8; // er14\n  unsigned int v9; // er14\n  __int64 v10; // rbp\n  signed __int64 v11; // r13\n  unsigned int v12; // [rsp+8h] [rbp-50h]\n  __int64 v13; // [rsp+20h] [rbp-38h]\n\n  v4 = a3;\n  v12 = a4;\n  v13 = (signed int)a4;\n  v5 = a1 + dword_94A490[8 * *(signed int *)(a3 + 52) + a4];\n  if ( !(*(_BYTE *)(a3 + 152) & 1)\n    || (result = (*(__int64 (__fastcall **)(_QWORD, _QWORD, _QWORD, _QWORD))(a3 + 168))(a4, v5, a2, 0LL), (_DWORD)result) )\n  {\n    result = *(_QWORD *)(v4 + 160);\n    if ( result\n      && (result = ((__int64 (__fastcall *)(__int64, _QWORD, _QWORD, _QWORD))result)(v4, v12, v5, a2), !(_DWORD)result) )\n    {\n      if ( dword_88C264 & 0x400 )\n        result = sub_433F90(\"Defense pattern %s+%d rejected by helper at %1m\\n\", *(_QWORD *)(v4 + 16), v12, v5);\n    }\n    else if ( *(_DWORD *)(v4 + 8) > 0 )\n    {\n      v7 = 0LL;\n      do\n      {\n        if ( *(_DWORD *)(*(_QWORD *)v4 + 8 * v7 + 4) == 2 )\n        {\n          v10 = dword_8E947C[95 * (a1 + (signed __int64)dword_94A490[8 * *(signed int *)(*(_QWORD *)v4 + 8 * v7) + v13])];\n          v11 = 95 * v10;\n          if ( dword_8E94D4[95 * v10] )\n          {\n            if ( !(unsigned int)sub_4241B0(v5, 10, (__int64)&dword_8E94FC[v11], (__int64)&dword_8E9524[v11]) )\n            {\n              if ( (unsigned int)sub_406880(v5, a2, \"defense_callback\", v10, 0, 0) )\n              {\n                v8 = sub_43B050(v10, 0LL);\n                sub_407030();\n                if ( v8 < dword_8E94D4[v11] )\n                {\n                  v9 = 5 - v8;\n                  sub_456350(\n                    dword_8E947C[v11],\n                    v5,\n                    v9,\n                    (__int64)&dword_8E94FC[95 * dword_8E947C[v11]],\n                    (__int64)&dword_8E9524[95 * dword_8E947C[v11]]);\n                  if ( dword_88C264 & 0x400 )\n                    sub_433F90(\n                      \"Defense pattern %s+%d found defense of %1m at %1m with code %d\\n\",\n                      *(_QWORD *)(v4 + 16),\n                      v12,\n                      (unsigned int)v10,\n                      v5,\n                      v9);\n                }\n              }\n            }\n          }\n        }\n        ++v7;\n        result = *(signed int *)(v4 + 8);\n      }\n      while ( v7 < result );\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x457540L", 
            "funcEndAddr": "0x45774cL", 
            "funcName": "sub_457540"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_457750(__int64 a1, _DWORD *a2, __int64 a3, __int64 a4, unsigned int a5)\n{\n  unsigned int v5; // er14\n  __int64 v6; // r12\n  __int64 v7; // rbp\n  __int64 v8; // rbx\n  int v9; // eax\n  signed __int64 v10; // rcx\n  __int64 v11; // rdx\n  __int64 v12; // rdx\n  signed __int64 result; // rax\n  int v14; // eax\n  signed __int64 v15; // rdi\n  int v16; // eax\n  __int64 v17; // rdi\n  int v18; // eax\n  __int64 v19; // rdi\n\n  while ( 1 )\n  {\n    v5 = a5;\n    v6 = a4;\n    v7 = a3;\n    v8 = (signed int)a1;\n    *(_DWORD *)(a4 + 4LL * (signed int)a1) = 1;\n    v9 = 3 - a5;\n    v10 = 4611686018427387900LL;\n    do\n    {\n      v11 = dword_5641C0[v10];\n      if ( !byte_98A1B0[v11 + (signed int)a1] )\n      {\n        v12 = (signed int)a1 + v11;\n        if ( !*(_DWORD *)(v7 + 4 * v12)\n          && !*(_DWORD *)(v6 + 4 * v12)\n          && v9 != (unsigned __int8)byte_98A1C4[v12]\n          && v9 != (unsigned __int8)byte_98A1AF[v12]\n          && v9 != (unsigned __int8)byte_98A19C[v12]\n          && v9 != (unsigned __int8)byte_98A1B1[v12] )\n        {\n          ++*a2;\n          *(_DWORD *)(v6 + 4 * v12) = 1;\n          *(_DWORD *)(v7 + 4 * v12) = 1;\n        }\n      }\n      ++v10;\n    }\n    while ( v10 * 4 );\n    result = sub_40B8D0(a1);\n    if ( (_DWORD)result )\n      break;\n    v14 = (unsigned __int8)byte_98A1B0[dword_5641B0[0] + (signed __int64)(signed int)a1];\n    if ( v14 != 3 )\n    {\n      v15 = (signed int)a1 + (signed __int64)dword_5641B0[0];\n      if ( !*(_DWORD *)(v6 + 4 * v15) && (v14 == v5 || *(_DWORD *)(v7 + 4 * v15) == 1) )\n        sub_457750(v15, a2, v7, v6, v5);\n    }\n    v16 = (unsigned __int8)byte_98A1B0[dword_5641B4 + v8];\n    if ( v16 != 3 )\n    {\n      v17 = v8 + dword_5641B4;\n      if ( !*(_DWORD *)(v6 + 4 * v17) && (v16 == v5 || *(_DWORD *)(v7 + 4 * v17) == 1) )\n        sub_457750(v17, a2, v7, v6, v5);\n    }\n    v18 = (unsigned __int8)byte_98A1B0[dword_5641B8 + v8];\n    if ( v18 != 3 )\n    {\n      v19 = v8 + dword_5641B8;\n      if ( !*(_DWORD *)(v6 + 4 * v19) && (v18 == v5 || *(_DWORD *)(v7 + 4 * v19) == 1) )\n        sub_457750(v19, a2, v7, v6, v5);\n    }\n    result = (unsigned __int8)byte_98A1B0[dword_5641BC + v8];\n    if ( (_DWORD)result == 3 )\n      break;\n    a1 = v8 + dword_5641BC;\n    if ( *(_DWORD *)(v6 + 4 * a1) || (_DWORD)result != v5 && *(_DWORD *)(v7 + 4 * a1) != 1 )\n      break;\n    a3 = v7;\n    a4 = v6;\n    a5 = v5;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x457750L", 
            "funcEndAddr": "0x457900L", 
            "funcName": "sub_457750"
        }, 
        {
            "decompiledFuncCode": "char __fastcall sub_457900(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v3; // rbx\n  __int64 v4; // rbp\n  int *v5; // r14\n  char v6; // al\n  signed __int64 v7; // rsi\n  char v8; // al\n  __int64 v9; // rsi\n  char v10; // al\n  __int64 v11; // rsi\n  int v12; // eax\n\n  while ( 1 )\n  {\n    v3 = a3;\n    v4 = (signed int)a2;\n    *(_DWORD *)(a3 + 4LL * (signed int)a2) = 1;\n    v5 = &dword_8E947C[95 * a1];\n    v6 = byte_98A1B0[dword_5641B0[0] + (signed __int64)(signed int)a2];\n    if ( v6 != 3 )\n    {\n      v7 = (signed int)a2 + (signed __int64)dword_5641B0[0];\n      if ( !*(_DWORD *)(a3 + 4 * v7) && (!v6 || dword_8E947C[95 * v7] != *v5) )\n        sub_457900(a1, v7, a3);\n    }\n    v8 = byte_98A1B0[dword_5641B4 + v4];\n    if ( v8 != 3 )\n    {\n      v9 = v4 + dword_5641B4;\n      if ( !*(_DWORD *)(v3 + 4 * v9) && (!v8 || dword_8E947C[95 * v9] != *v5) )\n        sub_457900(a1, v9, v3);\n    }\n    v10 = byte_98A1B0[dword_5641B8 + v4];\n    if ( v10 != 3 )\n    {\n      v11 = v4 + dword_5641B8;\n      if ( !*(_DWORD *)(v3 + 4 * v11) && (!v10 || dword_8E947C[95 * v11] != *v5) )\n        sub_457900(a1, v11, v3);\n    }\n    LOBYTE(v12) = byte_98A1B0[dword_5641BC + v4];\n    if ( (_BYTE)v12 == 3 )\n      break;\n    a2 = v4 + dword_5641BC;\n    if ( *(_DWORD *)(v3 + 4 * a2) )\n      break;\n    if ( (_BYTE)v12 )\n    {\n      v12 = dword_8E947C[95 * a2];\n      if ( v12 == *v5 )\n        break;\n    }\n    a3 = v3;\n  }\n  return v12;\n}\n", 
            "funcStartAddr": "0x457900L", 
            "funcEndAddr": "0x457a2dL", 
            "funcName": "sub_457900"
        }, 
        {
            "decompiledFuncCode": "char __fastcall sub_457A30(signed int a1, __int64 a2, _DWORD *a3, _DWORD *a4, unsigned int a5)\n{\n  unsigned int v5; // er12\n  _DWORD *v6; // r15\n  _DWORD *v7; // r14\n  int v8; // edx\n  char v9; // al\n  signed __int64 v10; // rbx\n  char v11; // al\n  signed __int64 v12; // rbx\n  char v13; // al\n  signed __int64 v14; // rbx\n  int v15; // eax\n  signed __int64 v16; // rbx\n\n  while ( 1 )\n  {\n    v5 = a5;\n    v6 = a4;\n    v7 = a3;\n    if ( *(_DWORD *)(a2 + 4LL * a1) )\n    {\n      v8 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n      sub_4340E0((__int64)\"engine/worm.c\", 0x5D2u, (__int64)\"mx[pos] == 0\", v8 - 1, a1 - 20 * v8 - 1);\n    }\n    *(_DWORD *)(a2 + 4LL * a1) = 1;\n    if ( (unsigned int)sub_408320(a1) && !byte_98A1B0[a1] )\n      ++*v6;\n    v9 = byte_98A1B0[dword_5641B0[0] + (signed __int64)a1];\n    if ( v9 != 3 )\n    {\n      v10 = a1 + (signed __int64)dword_5641B0[0];\n      if ( !*(_DWORD *)(a2 + 4 * v10) )\n      {\n        if ( v9 && (unsigned int)sub_40AD00(v10) != v5 )\n          *v7 |= (unsigned __int8)byte_98A1B0[v10];\n        else\n          sub_457A30((unsigned int)v10, a2, v7, v6, v5);\n      }\n    }\n    v11 = byte_98A1B0[dword_5641B4 + (signed __int64)a1];\n    if ( v11 != 3 )\n    {\n      v12 = a1 + (signed __int64)dword_5641B4;\n      if ( !*(_DWORD *)(a2 + 4 * v12) )\n      {\n        if ( v11 && (unsigned int)sub_40AD00(v12) != v5 )\n          *v7 |= (unsigned __int8)byte_98A1B0[v12];\n        else\n          sub_457A30((unsigned int)v12, a2, v7, v6, v5);\n      }\n    }\n    v13 = byte_98A1B0[dword_5641B8 + (signed __int64)a1];\n    if ( v13 != 3 )\n    {\n      v14 = a1 + (signed __int64)dword_5641B8;\n      if ( !*(_DWORD *)(a2 + 4 * v14) )\n      {\n        if ( v13 && (unsigned int)sub_40AD00(v14) != v5 )\n          *v7 |= (unsigned __int8)byte_98A1B0[v14];\n        else\n          sub_457A30((unsigned int)v14, a2, v7, v6, v5);\n      }\n    }\n    LOBYTE(v15) = byte_98A1B0[dword_5641BC + (signed __int64)a1];\n    if ( (_BYTE)v15 == 3 )\n      break;\n    v16 = a1 + (signed __int64)dword_5641BC;\n    if ( *(_DWORD *)(a2 + 4 * v16) )\n      break;\n    if ( (_BYTE)v15 && (unsigned int)sub_40AD00(v16) != v5 )\n    {\n      v15 = (unsigned __int8)byte_98A1B0[v16];\n      *v7 |= v15;\n      return v15;\n    }\n    a1 = v16;\n    a3 = v7;\n    a4 = v6;\n    a5 = v5;\n  }\n  return v15;\n}\n", 
            "funcStartAddr": "0x457a30L", 
            "funcEndAddr": "0x457bffL", 
            "funcName": "sub_457A30"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_457C00()\n{\n  __int64 result; // rax\n  signed int v1; // er15\n  _BOOL4 v2; // ebp\n  __int64 v3; // rdi\n  _BOOL4 v4; // er13\n  int v5; // er12\n  bool v6; // r13\n  unsigned int v7; // ecx\n  __int64 v8; // rdi\n  signed __int64 v9; // rbx\n  int v10; // ecx\n  int v11; // ecx\n  unsigned __int8 v12; // r13\n  __int64 v13; // rdi\n  int v14; // ecx\n  unsigned __int8 v15; // r13\n  __int64 v16; // rdi\n  int v17; // ecx\n  signed __int64 v18; // rbx\n  int *v19; // r14\n  __int64 v20; // rdi\n  signed __int64 v21; // rbx\n  int v22; // ebp\n\n  if ( dword_98A7F4 )\n    sub_4340E0((__int64)\"engine/persistent.c\", 0xD9u, (__int64)\"stackp == 0\", 0xFFFFFFFF, 0xFFFFFFFF);\n  result = (unsigned int)dword_98A7F0;\n  if ( dword_565C90 != dword_98A7F0 )\n  {\n    dword_565C90 = dword_98A7F0;\n    if ( dword_88C330 > 0 )\n    {\n      v1 = 0;\n      do\n      {\n        v18 = 119LL * v1;\n        v19 = &dword_88C340[v18];\n        result = (unsigned int)dword_88C340[v18];\n        v2 = 0;\n        if ( (_DWORD)result == dword_565C68 )\n        {\n          v20 = dword_88C4F4[v18];\n          v2 = 0;\n          if ( !dword_88C4F4[v18] )\n          {\nLABEL_14:\n            v9 = 21LL;\n            while ( 1 )\n            {\n              result = (unsigned __int8)byte_98A1B0[v9];\n              if ( (_DWORD)result != 3 )\n              {\n                v10 = *((char *)v19 + v9 + 4);\n                if ( v10 != 3 )\n                {\n                  if ( (v10 & 3) != (_DWORD)result )\n                    goto LABEL_34;\n                  if ( v10 & 4 )\n                  {\n                    result = sub_4083A0(v9);\n                    if ( (signed int)result < 5 )\n                      goto LABEL_34;\n                  }\n                }\n              }\n              if ( (unsigned __int64)++v9 >= 0x190 )\n                goto LABEL_37;\n            }\n          }\n          if ( !byte_98A1B0[v20] )\n          {\n            result = sub_406880(v20, (unsigned int)dword_88C508[v18], \"purge_persistent_reading_cache\", 0, 0, 0);\n            v2 = result != 0;\n            if ( (_DWORD)result && (v3 = dword_88C4F8[v18]) != 0 )\n            {\n              if ( byte_98A1B0[v3] )\n                goto LABEL_34;\n              result = sub_406880(v3, (unsigned int)dword_88C50C[v18], \"purge_persistent_reading_cache\", 0, 0, 0);\n              v4 = result != 0;\n              v5 = v2 + v4;\n              v6 = v2 && v4;\n              v7 = v6;\n              if ( (_DWORD)result )\n              {\n                v8 = dword_88C4FC[v18];\n                if ( dword_88C4FC[v18] )\n                {\n                  if ( byte_98A1B0[v8] )\n                    goto LABEL_12;\n                  result = sub_406880(v8, (unsigned int)dword_88C510[v18], \"purge_persistent_reading_cache\", 0, 0, 0);\n                  v11 = result != 0;\n                  v5 += v11;\n                  v12 = v11 & v6;\n                  v7 = v12;\n                  if ( (_DWORD)result )\n                  {\n                    v13 = dword_88C500[v18];\n                    if ( dword_88C500[v18] )\n                    {\n                      if ( byte_98A1B0[v13] )\n                        goto LABEL_12;\n                      result = sub_406880(\n                                 v13,\n                                 (unsigned int)dword_88C514[v18],\n                                 \"purge_persistent_reading_cache\",\n                                 0,\n                                 0,\n                                 0);\n                      v14 = result != 0;\n                      v5 += v14;\n                      v15 = v14 & v12;\n                      v7 = v15;\n                      if ( (_DWORD)result )\n                      {\n                        v16 = dword_88C504[v18];\n                        if ( dword_88C504[v18] )\n                        {\n                          if ( byte_98A1B0[v16] )\n                          {\nLABEL_12:\n                            v2 = v5;\n                            goto LABEL_34;\n                          }\n                          result = sub_406880(\n                                     v16,\n                                     (unsigned int)dword_88C518[v18],\n                                     \"purge_persistent_reading_cache\",\n                                     0,\n                                     0,\n                                     0);\n                          v17 = result != 0;\n                          v5 += v17;\n                          v7 = (unsigned __int8)(v17 & v15);\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              v2 = v5;\n              if ( v7 )\n                goto LABEL_14;\n            }\n            else if ( (_DWORD)result != 0 )\n            {\n              goto LABEL_14;\n            }\n          }\n        }\nLABEL_34:\n        v21 = dword_88C330 - 1LL;\n        if ( v1 < (signed int)v21 )\n          result = (__int64)memcpy(v19, &dword_88C340[119 * v21], 0x1DCuLL);\n        --v1;\n        dword_88C330 = v21;\nLABEL_37:\n        if ( v2 > 0 )\n        {\n          v22 = v2 + 1;\n          do\n          {\n            result = sub_407030();\n            --v22;\n          }\n          while ( v22 > 1 );\n        }\n        ++v1;\n      }\n      while ( v1 < dword_88C330 );\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x457c00L", 
            "funcEndAddr": "0x457eddL", 
            "funcName": "sub_457C00"
        }, 
        {
            "decompiledFuncCode": "void sub_457EE0()\n{\n  dword_88C330 = 0;\n}\n", 
            "funcStartAddr": "0x457ee0L", 
            "funcEndAddr": "0x457eebL", 
            "funcName": "sub_457EE0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_457EF0(int a1, unsigned int a2, _DWORD *a3, _DWORD *a4)\n{\n  _DWORD *v4; // rbx\n  _DWORD *v5; // rbp\n  unsigned int v6; // er14\n  int v7; // eax\n  signed __int64 v8; // r12\n  __int64 v9; // r8\n  int v10; // edx\n  unsigned int v11; // ebx\n  int v12; // er9\n  __int64 v13; // rcx\n  const char *v14; // rsi\n\n  v4 = a4;\n  v5 = a3;\n  v6 = a2;\n  v7 = sub_458030();\n  if ( v7 == -1 )\n  {\n    v11 = 0;\n  }\n  else\n  {\n    v8 = 119LL * v7;\n    dword_88C4DC[v8] += dword_88C4D8[v8];\n    if ( v5 )\n      *v5 = dword_88C4EC[v8];\n    if ( v4 )\n      *v4 = dword_88C4F0[v8];\n    if ( dword_88C4EC[v8] )\n    {\n      v9 = dword_88C4F0[v8];\n      if ( dword_88C4F0[v8] )\n      {\n        if ( byte_98A1B0[v9] == 3 )\n        {\n          v10 = (1717986919 * v9 >> 35) + ((unsigned __int64)(1717986919 * v9) >> 63);\n          sub_4340E0(\n            (__int64)\"engine/persistent.c\",\n            0x153u,\n            (__int64)\"entry->result == 0 || entry->move == NO_MOVE || ON_BOARD(entry->move)\",\n            v10 - 1,\n            v9 - 20 * v10 - 1);\n        }\n      }\n    }\n    v11 = 1;\n    if ( (dword_88C264 & 0x8000u) != 0 )\n    {\n      v12 = dword_88C4D8[v8];\n      if ( v12 >= 1000 )\n      {\n        v13 = (unsigned int)dword_88C4EC[v8];\n        v14 = \"defend\";\n        if ( a1 == 4 )\n          v14 = \"attack\";\n        if ( (_DWORD)v13 )\n          sub_433F90(\"%o%s %1m = %d %1m, cached (%d nodes) \", v14, v6, v13, (unsigned int)dword_88C4F0[v8]);\n        else\n          sub_433F90(\"%o%s %1m = %d, cached (%d nodes) \", v14, v6, 0LL, (unsigned int)v12);\n        sub_407180();\n      }\n    }\n  }\n  return v11;\n}\n", 
            "funcStartAddr": "0x457ef0L", 
            "funcEndAddr": "0x45802cL", 
            "funcName": "sub_457EF0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_458030(int a1, int a2)\n{\n  int v2; // er15\n  int v3; // edx\n  int v4; // eax\n  unsigned int v5; // er14\n  int *v6; // r13\n  signed __int64 v7; // rbp\n  signed __int64 v8; // rcx\n  __int64 v9; // rdx\n  int v10; // esi\n  __int64 v11; // rdx\n  int v12; // esi\n  __int64 v13; // rdx\n  int v14; // esi\n  __int64 v15; // rdx\n  int v16; // esi\n  __int64 v17; // rdx\n  int v18; // ecx\n  signed __int64 v19; // rbx\n  int v20; // eax\n  int v21; // ecx\n\n  v2 = a2;\n  if ( (unsigned int)sub_40AD00(a2) != a2 )\n  {\n    v3 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0((__int64)\"engine/persistent.c\", 0x11Cu, (__int64)\"str == find_origin(str)\", v3 - 1, a2 - 20 * v3 - 1);\n  }\n  v4 = dword_88C330;\n  v5 = -1;\n  if ( dword_88C330 > 0 )\n  {\n    v6 = dword_88C340;\n    v7 = 0LL;\n    do\n    {\n      v8 = 119 * v7;\n      if ( dword_88C4E4[119 * v7] == a1\n        && dword_88C4E8[v8] == v2\n        && dword_88C4E0[v8] >= dword_98A76C - dword_98A7F4\n        && dword_88C340[v8] == dword_565C68 )\n      {\n        v9 = dword_88C4F4[v8];\n        if ( !dword_88C4F4[v8] )\n          goto LABEL_37;\n        v10 = byte_88C344[v8 * 4 + v9];\n        if ( v10 == 3 || (unsigned __int8)byte_98A1B0[v9] == v10 )\n        {\n          v11 = dword_88C4F8[v8];\n          if ( !dword_88C4F8[v8]\n            || ((v12 = byte_88C344[v8 * 4 + v11], v12 == 3) || (unsigned __int8)byte_98A1B0[v11] == v12)\n            && ((v13 = dword_88C4FC[v8]) == 0\n             || ((v14 = byte_88C344[v8 * 4 + v13], v14 == 3) || (unsigned __int8)byte_98A1B0[v13] == v14)\n             && ((v15 = dword_88C500[v8]) == 0\n              || ((v16 = byte_88C344[v8 * 4 + v15], v16 == 3) || (unsigned __int8)byte_98A1B0[v15] == v16)\n              && ((v17 = dword_88C504[v8]) == 0\n               || (v18 = byte_88C344[v8 * 4 + v17], v18 == 3)\n               || (unsigned __int8)byte_98A1B0[v17] == v18))) )\n          {\nLABEL_37:\n            v19 = 21LL;\n            while ( 1 )\n            {\n              v20 = (unsigned __int8)byte_98A1B0[v19];\n              if ( v20 != 3 )\n              {\n                v21 = *((char *)v6 + v19 + 4);\n                if ( v21 != 3 && ((v21 & 3) != v20 || v21 & 4 && (signed int)sub_4083A0(v19) < 5) )\n                  break;\n              }\n              if ( (unsigned __int64)++v19 >= 0x190 )\n                return (unsigned int)v7;\n            }\n            v4 = dword_88C330;\n          }\n        }\n      }\n      ++v7;\n      v6 += 119;\n    }\n    while ( v7 < v4 );\n  }\n  return v5;\n}\n", 
            "funcStartAddr": "0x458030L", 
            "funcEndAddr": "0x45825eL", 
            "funcName": "sub_458030"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_458260(int a1, int a2, int a3, int a4, int a5)\n{\n  int v5; // ebp\n  int v6; // er13\n  int v7; // er12\n  int v8; // er15\n  int v9; // edx\n  int v10; // er14\n  signed int v11; // eax\n  signed int v12; // eax\n  unsigned __int64 v13; // rcx\n  int *v14; // rdx\n  int v15; // esi\n  int v16; // edi\n  int v17; // ebx\n  signed int v18; // edi\n  signed __int64 v19; // rbx\n  int *v20; // rsi\n  int *v21; // rsi\n  int *v22; // rsi\n  int *v23; // rsi\n  int *v24; // rsi\n  signed __int64 v25; // rbp\n  char v26; // al\n  signed __int64 v27; // rax\n  _DWORD *i; // rcx\n  signed __int64 v29; // rax\n  signed __int64 v30; // rax\n  __int64 v31; // rax\n  __int64 v32; // rdx\n  __int64 v33; // rcx\n  int *v34; // rsi\n  signed int *v35; // rcx\n  __int64 v36; // rax\n  char *v37; // rax\n  signed __int64 j; // rcx\n  char v39; // bl\n  char v40; // bl\n  int v41; // [rsp+Ch] [rbp-1CCh]\n  char v42[21]; // [rsp+10h] [rbp-1C8h]\n  char dest; // [rsp+25h] [rbp-1B3h]\n  char v44[19]; // [rsp+18Ch] [rbp-4Ch]\n  char v45; // [rsp+19Fh] [rbp-39h]\n  char v46; // [rsp+1A0h] [rbp-38h]\n  char v47[19]; // [rsp+1A1h] [rbp-37h]\n  char v48[36]; // [rsp+1B4h] [rbp-24h]\n\n  v5 = a5;\n  v6 = a4;\n  v7 = a3;\n  v41 = a2;\n  v8 = a1;\n  if ( a3 && a4 && byte_98A1B0[a4] == 3 )\n  {\n    v9 = (1717986919LL * a4 >> 35) + ((unsigned __int64)(1717986919LL * a4) >> 63);\n    sub_4340E0(\n      (__int64)\"engine/persistent.c\",\n      0x171u,\n      (__int64)\"result == 0 || (move == 0) || ON_BOARD(move)\",\n      v9 - 1,\n      -20 * v9 + a4 - 1);\n  }\n  v10 = dword_98A7F4;\n  if ( dword_98A7F4 <= 5 )\n  {\n    v11 = dword_88C330;\n    if ( dword_88C330 != 100 )\n      goto LABEL_25;\n    v12 = -1;\n    v13 = 1LL;\n    v14 = (int *)&unk_88CA70;\n    v15 = a5;\n    do\n    {\n      v16 = *(v14 - 238);\n      v17 = *(v14 - 119);\n      if ( v16 < v15 )\n        v12 = v13;\n      if ( v16 <= v15 )\n        v15 = *(v14 - 238);\n      v18 = v13 + 1;\n      if ( v17 >= v15 )\n        v18 = v12;\n      if ( v17 <= v15 )\n        v15 = *(v14 - 119);\n      v12 = v13 + 2;\n      if ( *v14 >= v15 )\n        v12 = v18;\n      if ( *v14 <= v15 )\n        v15 = *v14;\n      v13 += 3LL;\n      v14 += 357;\n    }\n    while ( v13 < 0x64 );\n    if ( v12 != -1 )\n    {\n      if ( v12 <= 98 )\n        memcpy(&dword_88C340[119 * v12], &unk_897B54, 0x1DCuLL);\n      dword_88C330 = 99;\n      v11 = 99;\nLABEL_25:\n      v19 = 119LL * v11;\n      dword_88C340[v19] = dword_565C68;\n      dword_88C4D4[v19] = dword_98A7C0;\n      dword_88C4D8[v19] = v5;\n      dword_88C4DC[v19] = v5;\n      dword_88C4E0[v19] = dword_98A76C - v10;\n      dword_88C4E4[v19] = v8;\n      dword_88C4E8[v19] = v41;\n      dword_88C4EC[v19] = v7;\n      dword_88C4F0[v19] = v6;\n      v20 = &dword_88C4F4[v19];\n      if ( v10 <= 0 )\n      {\n        *v20 = 0;\n        dword_88C508[v19] = 0;\n        v21 = &dword_88C4F8[v19];\n      }\n      else\n      {\n        sub_40BB60(0, v20, &dword_88C508[v19]);\n        v21 = &dword_88C4F8[v19];\n        if ( dword_98A7F4 > 1 )\n        {\n          sub_40BB60(1, v21, &dword_88C50C[v19]);\n          v22 = &dword_88C4FC[v19];\n          if ( dword_98A7F4 > 2 )\n          {\n            sub_40BB60(2, v22, &dword_88C510[v19]);\n            v23 = &dword_88C500[v19];\n            if ( dword_98A7F4 > 3 )\n            {\n              sub_40BB60(3, v23, &dword_88C514[v19]);\n              v24 = &dword_88C504[v19];\n              if ( dword_98A7F4 > 4 )\n              {\n                sub_40BB60(4, v24, &dword_88C518[v19]);\n                goto LABEL_36;\n              }\nLABEL_35:\n              *v24 = 0;\n              dword_88C518[v19] = 0;\nLABEL_36:\n              memcpy(&dest, &unk_98A525, 0x17BuLL);\n              sub_40BAB0(v41, (__int64)v42, 1);\n              if ( v7 && v6 )\n                v42[v6] = 1;\n              v25 = -379LL;\n              do\n              {\n                while ( 1 )\n                {\n                  while ( 1 )\n                  {\n                    v26 = byte_98A340[v25];\n                    if ( v26 != 3\n                      && !*(&v46 + v25)\n                      && (byte_98A354[v25] != 3 && v48[v25] == 1\n                       || byte_98A33F[v25] != 3 && *(&v45 + v25) == 1\n                       || byte_98A32C[v25] != 3 && v44[v25] == 1\n                       || byte_98A341[v25] != 3 && v47[v25] == 1) )\n                    {\n                      break;\n                    }\n                    if ( !++v25 )\n                      goto LABEL_56;\n                  }\n                  if ( (unsigned __int8)(v26 - 1) > 1u )\n                    break;\n                  sub_40BAB0(v25++ + 400, (__int64)v42, 2);\n                  if ( !v25 )\n                    goto LABEL_56;\n                }\n                *(&v46 + v25++) = 2;\n              }\n              while ( v25 );\nLABEL_56:\n              v27 = -378LL;\n              for ( i = &unk_8EB54C; ; i += 190 )\n              {\n                if ( (unsigned __int8)(byte_98A33F[v27] - 1) <= 1u && *(i - 95) )\n                  *(&v45 + v27) = 0;\n                if ( !v27 )\n                  break;\n                if ( (unsigned __int8)(byte_98A340[v27] - 1) <= 1u )\n                {\n                  if ( *i )\n                    *(&v46 + v27) = 0;\n                }\n                v27 += 2LL;\n              }\n              v29 = -379LL;\n              do\n              {\n                if ( (unsigned __int8)(byte_98A340[v29] - 1) >= 2u\n                  && !*(&v46 + v29)\n                  && (!byte_98A354[v29] && v48[v29] == 2\n                   || !byte_98A33F[v29] && *(&v45 + v29) == 2\n                   || !byte_98A32C[v29] && v44[v29] == 2\n                   || !byte_98A341[v29] && v47[v29] == 2) )\n                {\n                  *(&v46 + v29) = 3;\n                }\n                ++v29;\n              }\n              while ( v29 );\n              v30 = -379LL;\n              do\n              {\n                if ( byte_98A340[v30] != 3\n                  && !*(&v46 + v30)\n                  && (byte_98A354[v30] != 3 && (unsigned __int8)(v48[v30] - 1) < 3u\n                   || byte_98A33F[v30] != 3 && (unsigned __int8)(*(&v45 + v30) - 1) < 3u\n                   || byte_98A32C[v30] != 3 && (unsigned __int8)(v44[v30] - 1) < 3u\n                   || byte_98A341[v30] != 3 && (unsigned __int8)(v47[v30] - 1) <= 2u) )\n                {\n                  *(&v46 + v30) = 4;\n                }\n                ++v30;\n              }\n              while ( v30 );\n              if ( dword_98A7F4 <= 0LL )\n                goto LABEL_100;\n              v31 = dword_98A7F4 & 3;\n              if ( (unsigned __int64)(dword_98A7F4 - 1LL) >= 3 )\n              {\n                v33 = dword_98A7F4 - v31;\n                v34 = &dword_88C500[v19];\n                v32 = 0LL;\n                do\n                {\n                  v42[v34[v32 - 3]] = 5;\n                  v42[v34[v32 - 2]] = 5;\n                  v42[v34[v32 - 1]] = 5;\n                  v42[v34[v32]] = 5;\n                  v32 += 4LL;\n                }\n                while ( v33 != v32 );\n                if ( !v31 )\n                {\nLABEL_100:\n                  v37 = (char *)&unk_88C35A + v19 * 4;\n                  for ( j = -378LL; ; j += 2LL )\n                  {\n                    if ( byte_98A33F[j] != 3 )\n                    {\n                      v39 = 3;\n                      if ( *(&v45 + j) )\n                        v39 = byte_98A33F[j];\n                      v37[j + 377] = v39;\n                    }\n                    if ( !j )\n                      break;\n                    if ( byte_98A340[j] != 3 )\n                    {\n                      v40 = 3;\n                      if ( *(&v46 + j) )\n                        v40 = byte_98A340[j];\n                      v37[j + 378] = v40;\n                    }\n                  }\n                  ++dword_88C330;\n                  return;\n                }\n              }\n              else\n              {\n                v32 = 0LL;\n                if ( !(dword_98A7F4 & 3) )\n                  goto LABEL_100;\n              }\n              v35 = (signed int *)(v19 * 4 + 4 * v32 + 8963316);\n              v36 = -v31;\n              do\n              {\n                v42[*v35] = 5;\n                ++v35;\n                ++v36;\n              }\n              while ( v36 );\n              goto LABEL_100;\n            }\nLABEL_34:\n            *v23 = 0;\n            dword_88C514[v19] = 0;\n            v24 = &dword_88C504[v19];\n            goto LABEL_35;\n          }\nLABEL_33:\n          *v22 = 0;\n          dword_88C510[v19] = 0;\n          v23 = &dword_88C500[v19];\n          goto LABEL_34;\n        }\n      }\n      *v21 = 0;\n      dword_88C50C[v19] = 0;\n      v22 = &dword_88C4FC[v19];\n      goto LABEL_33;\n    }\n  }\n}\n", 
            "funcStartAddr": "0x458260L", 
            "funcEndAddr": "0x458886L", 
            "funcName": "sub_458260"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_458890(int a1, int a2)\n{\n  int v2; // ebp\n  int *v3; // rdi\n  signed __int64 v4; // rax\n  int v5; // eax\n  __int64 result; // rax\n\n  v2 = a1;\n  while ( 1 )\n  {\n    v5 = sub_40AD00(a2);\n    result = sub_458030(v2, v5);\n    if ( (_DWORD)result == -1 )\n      break;\n    v3 = &dword_88C340[119 * (signed int)result];\n    v4 = dword_88C330-- - 1LL;\n    memcpy(v3, &dword_88C340[119 * v4], 0x1DCuLL);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x458890L", 
            "funcEndAddr": "0x4588f5L", 
            "funcName": "sub_458890"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_458900(__int64 a1)\n{\n  __int64 v1; // r12\n  signed __int64 v2; // r14\n  signed __int64 v3; // rbp\n  signed int v4; // ebx\n  __int64 result; // rax\n  __int64 v6; // rcx\n  __int64 v7; // rsi\n  signed int v8; // edx\n  _DWORD *v9; // rbp\n  int *v10; // rsi\n  __int64 v11; // rcx\n  signed __int64 v12; // rdx\n  __int64 v13; // rax\n  __int64 v14; // rcx\n  __int64 v15; // rax\n  __int64 v16; // rax\n  __int64 v17; // rax\n  __int64 v18; // rax\n  __int64 v19; // rcx\n  int v20; // esi\n  signed __int64 v21; // rax\n  __int64 v22; // rsi\n  int v23; // eax\n  __int64 v24; // r15\n  signed __int64 v25; // rbp\n  signed __int64 v26; // r14\n  signed __int64 v27; // r12\n  int v28; // ebx\n  int v29; // er13\n  signed __int64 v30; // rdi\n  int v31; // eax\n  int v32; // er13\n  signed __int64 v33; // rdi\n  signed __int64 v34; // rdi\n  signed __int64 v35; // rdi\n  signed __int64 v36; // rdi\n  int v37; // ebx\n  int v38; // er13\n  signed __int64 v39; // rdi\n  signed __int64 v40; // rdi\n  signed __int64 v41; // rdi\n  int v42; // er13\n  float v43; // [rsp+4h] [rbp-54h]\n  float v44; // [rsp+10h] [rbp-48h]\n  signed __int64 v45; // [rsp+18h] [rbp-40h]\n  __int64 v46; // [rsp+20h] [rbp-38h]\n\n  v1 = a1;\n  v2 = dword_565C68;\n  if ( dword_565C68 > 0LL )\n  {\n    memset((void *)(a1 + 84), 0, 4LL * (unsigned int)dword_565C68);\n    if ( (_DWORD)v2 != 1 )\n    {\n      v3 = 1LL;\n      v4 = 41;\n      do\n      {\n        memset((void *)(a1 + 4LL * (v4 & 0xFFFFFFFD)), 0, 4LL * (unsigned int)v2);\n        ++v3;\n        v4 += 20;\n      }\n      while ( v3 < v2 );\n    }\n  }\n  result = dword_88C330;\n  if ( dword_88C330 <= 0LL )\n    return result;\n  v6 = dword_88C330 & 3;\n  if ( (unsigned __int64)(dword_88C330 - 1LL) < 3 )\n  {\n    v7 = 0LL;\n    v8 = 0;\n    if ( !(dword_88C330 & 3) )\n      goto LABEL_14;\n    goto LABEL_12;\n  }\n  v7 = 0LL;\n  v9 = &unk_88CA6C;\n  v8 = 0;\n  do\n  {\n    v8 += *v9 + *(v9 - 119) + *(v9 - 238) + *(v9 - 357);\n    v7 += 4LL;\n    v9 += 476;\n  }\n  while ( dword_88C330 - v6 != v7 );\n  if ( dword_88C330 & 3 )\n  {\nLABEL_12:\n    v10 = &dword_88C4D8[119 * v7];\n    v11 = -v6;\n    do\n    {\n      v8 += *v10;\n      v10 += 119;\n      ++v11;\n    }\n    while ( v11 );\n  }\nLABEL_14:\n  if ( v8 >= 101 && dword_88C330 > 0 )\n  {\n    v44 = (float)v8;\n    v12 = 0LL;\n    v46 = a1;\n    do\n    {\n      v21 = 119 * v12;\n      v45 = v12;\n      if ( (unsigned int)(dword_88C4E4[119 * v12] - 3) > 1 )\n        sub_4340E0((__int64)\"engine/persistent.c\", 0x276u, (__int64)\"0\", 0xFFFFFFFF, 0xFFFFFFFF);\n      v43 = (float)dword_88C4D8[v21] / v44;\n      v22 = dword_88C4E8[v21];\n      if ( !byte_98A1B0[v22] )\n      {\n        LODWORD(v13) = v22 - 20;\n        v14 = (signed int)v22 - 21;\n        if ( !byte_98A1B0[v14] )\n          *(float *)(v1 + 4 * v14) = *(float *)(v1 + 4 * v14) + v43;\n        v13 = (signed int)v13;\n        if ( !byte_98A1B0[(signed int)v13] )\n          *(float *)(v1 + 4 * v13) = *(float *)(v1 + 4 * v13) + v43;\n        v15 = (signed int)v22 - 19;\n        if ( !byte_98A1B0[v15] )\n          *(float *)(v1 + 4 * v15) = *(float *)(v1 + 4 * v15) + v43;\n        v16 = (signed int)v22 - 1;\n        if ( byte_98A1B0[v16] )\n        {\n          if ( byte_98A1B0[v22] )\n          {\nLABEL_25:\n            v17 = (signed int)v22 + 1;\n            if ( !byte_98A1B0[v17] )\n              *(float *)(v1 + 4 * v17) = *(float *)(v1 + 4 * v17) + v43;\n            LODWORD(v18) = v22 + 20;\n            v19 = (signed int)v22 + 19;\n            if ( !byte_98A1B0[v19] )\n              *(float *)(v1 + 4 * v19) = *(float *)(v1 + 4 * v19) + v43;\n            v18 = (signed int)v18;\n            if ( !byte_98A1B0[(signed int)v18] )\n              *(float *)(v1 + 4 * v18) = *(float *)(v1 + 4 * v18) + v43;\n            v20 = v22 + 21;\n            if ( !byte_98A1B0[v20] )\n              *(float *)(v1 + 4LL * v20) = v43 + *(float *)(v1 + 4LL * v20);\n            goto LABEL_70;\n          }\n        }\n        else\n        {\n          *(float *)(v1 + 4 * v16) = *(float *)(v1 + 4 * v16) + v43;\n          if ( byte_98A1B0[v22] )\n            goto LABEL_25;\n        }\n        *(float *)(v1 + 4 * v22) = *(float *)(v1 + 4 * v22) + v43;\n        goto LABEL_25;\n      }\n      v23 = dword_565C68;\n      if ( dword_565C68 <= 0 )\n        goto LABEL_70;\n      LODWORD(v24) = 21;\n      v25 = 0LL;\n      do\n      {\n        v24 = (unsigned int)v24;\n        if ( v23 <= 0 )\n          goto LABEL_67;\n        v26 = v1 + 4 * v24;\n        v27 = 0LL;\n        do\n        {\n          if ( byte_98A1B0[v24 + v27] )\n            goto LABEL_65;\n          v33 = v27 + (unsigned int)(dword_564190[0] + 20 * (v25 + dword_564170[0])) + 21;\n          if ( (unsigned __int8)(byte_98A1B0[(signed int)v33] - 1) <= 1u && (unsigned int)sub_40B5B0(v33, v22)\n            || (v34 = v27 + (unsigned int)(dword_564194 + 20 * (v25 + dword_564174)) + 21,\n                (unsigned __int8)(byte_98A1B0[(signed int)v34] - 1) < 2u)\n            && (unsigned int)sub_40B5B0(v34, v22)\n            || (v35 = v27 + (unsigned int)(dword_564198 + 20 * (v25 + dword_564178)) + 21,\n                (unsigned __int8)(byte_98A1B0[(signed int)v35] - 1) <= 1u)\n            && (unsigned int)sub_40B5B0(v35, v22)\n            || (v36 = v27 + (unsigned int)(dword_56419C + 20 * (v25 + dword_56417C)) + 21,\n                (unsigned __int8)(byte_98A1B0[(signed int)v36] - 1) <= 1u)\n            && (unsigned int)sub_40B5B0(v36, v22) )\n          {\nLABEL_64:\n            *(float *)(v26 + 4 * v27) = *(float *)(v26 + 4 * v27) + v43;\n            goto LABEL_65;\n          }\n          v37 = dword_564180;\n          v38 = dword_5641A0;\n          v39 = v27 + (unsigned int)(dword_5641A0 + 20 * (dword_564180 + v25)) + 21;\n          if ( (unsigned __int8)(byte_98A1B0[(signed int)v39] - 1) <= 1u && (unsigned int)sub_40B5B0(v39, v22)\n            || (v37 = dword_564184,\n                v38 = dword_5641A4,\n                v40 = v27 + (unsigned int)(dword_5641A4 + 20 * (dword_564184 + v25)) + 21,\n                (unsigned __int8)(byte_98A1B0[(signed int)v40] - 1) <= 1u)\n            && (unsigned int)sub_40B5B0(v40, v22)\n            || (v37 = dword_564188,\n                v38 = dword_5641A8,\n                v41 = v27 + (unsigned int)(dword_5641A8 + 20 * (dword_564188 + v25)) + 21,\n                (unsigned __int8)(byte_98A1B0[(signed int)v41] - 1) <= 1u)\n            && (unsigned int)sub_40B5B0(v41, v22) )\n          {\n            v31 = 20 * (v25 + v37) + 21;\n            v32 = v27 + v38;\n          }\n          else\n          {\n            v28 = dword_56418C;\n            v29 = dword_5641AC[0];\n            v30 = v27 + (unsigned int)(dword_5641AC[0] + 20 * (dword_56418C + v25)) + 21;\n            if ( (unsigned __int8)(byte_98A1B0[(signed int)v30] - 1) > 1u || !(unsigned int)sub_40B5B0(v30, v22) )\n              goto LABEL_65;\n            v31 = 20 * (v25 + v28) + 21;\n            v32 = v27 + v29;\n          }\n          if ( !byte_98A1B0[(signed int)v27 + v31] )\n            goto LABEL_64;\n          if ( (signed int)sub_4083A0((signed int)v27 + v31) < 3 )\n            goto LABEL_64;\n          v42 = 20 * v25 + 21 + v32;\n          if ( !byte_98A1B0[v42] || (signed int)sub_4083A0(v42) <= 2 )\n            goto LABEL_64;\nLABEL_65:\n          ++v27;\n          v23 = dword_565C68;\n        }\n        while ( v27 < dword_565C68 );\n        v1 = v46;\nLABEL_67:\n        ++v25;\n        LODWORD(v24) = v24 + 20;\n      }\n      while ( v25 < v23 );\nLABEL_70:\n      v12 = v45 + 1;\n      result = dword_88C330;\n    }\n    while ( v45 + 1 < dword_88C330 );\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x458900L", 
            "funcEndAddr": "0x458f07L", 
            "funcName": "sub_458900"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_458F10()\n{\n  __int64 result; // rax\n  int v1; // ebx\n  int v2; // ebp\n  signed __int64 v3; // rax\n  int *v4; // r14\n  signed __int64 v5; // rbx\n  int v6; // ecx\n\n  if ( dword_98A7F4 )\n    sub_4340E0((__int64)\"engine/persistent.c\", 0x28Bu, (__int64)\"stackp == 0\", 0xFFFFFFFF, 0xFFFFFFFF);\n  result = (unsigned int)dword_98A7F0;\n  if ( dword_565C94 != dword_98A7F0 )\n  {\n    dword_565C94 = result;\n    v1 = dword_897D30;\n    if ( dword_897D30 > 0 )\n    {\n      v2 = 0;\n      do\n      {\n        v3 = 111LL * v2;\n        v4 = &dword_897D40[v3];\n        result = (unsigned int)dword_897D40[v3];\n        if ( (_DWORD)result == dword_565C68 )\n        {\n          v5 = 21LL;\n          while ( 1 )\n          {\n            result = (unsigned __int8)byte_98A1B0[v5];\n            if ( (_DWORD)result != 3 )\n            {\n              v6 = *((char *)v4 + v5 + 4);\n              if ( v6 != 3 )\n              {\n                if ( (v6 & 3) != (_DWORD)result )\n                  break;\n                if ( v6 & 4 )\n                {\n                  result = sub_4083A0(v5);\n                  if ( (signed int)result < 5 )\n                    break;\n                }\n              }\n            }\n            if ( (unsigned __int64)++v5 >= 0x190 )\n            {\n              v1 = dword_897D30;\n              goto LABEL_19;\n            }\n          }\n          v1 = dword_897D30;\n        }\n        if ( v2 < --v1 )\n          result = (__int64)memcpy(v4, &dword_897D40[111 * v1], 0x1BCuLL);\n        --v2;\n        dword_897D30 = v1;\nLABEL_19:\n        ++v2;\n      }\n      while ( v2 < v1 );\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x458f10L", 
            "funcEndAddr": "0x459039L", 
            "funcName": "sub_458F10"
        }, 
        {
            "decompiledFuncCode": "void sub_459040()\n{\n  dword_897D30 = 0;\n}\n", 
            "funcStartAddr": "0x459040L", 
            "funcEndAddr": "0x45904bL", 
            "funcName": "sub_459040"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_459050(unsigned int a1, unsigned int a2, int a3, unsigned int a4, _DWORD *a5, _DWORD *a6, _DWORD *a7, _DWORD *a8)\n{\n  unsigned int v8; // er15\n  int v9; // eax\n  int *v10; // r14\n  signed __int64 v11; // r12\n  signed __int64 v12; // rcx\n  unsigned __int64 v13; // rbx\n  int v14; // eax\n  int v15; // ecx\n  unsigned int v16; // ebx\n  signed __int64 v17; // rax\n  unsigned int *v18; // r14\n  const char *v19; // r12\n  const char *v20; // rax\n  __int64 v22; // [rsp+0h] [rbp-48h]\n  _DWORD *v23; // [rsp+8h] [rbp-40h]\n  _DWORD *v24; // [rsp+10h] [rbp-38h]\n\n  v8 = a4;\n  LODWORD(v22) = a3;\n  if ( (unsigned int)dword_98A7F4 >= 2 )\n    sub_4340E0((__int64)\"engine/persistent.c\", 0x2ADu, (__int64)\"stackp == 0 || stackp == 1\", 0xFFFFFFFF, 0xFFFFFFFF);\n  v9 = dword_897D30;\n  if ( dword_897D30 <= 0 )\n  {\nLABEL_19:\n    v16 = 0;\n  }\n  else\n  {\n    v23 = a5;\n    v24 = a6;\n    v10 = dword_897D40;\n    v11 = 0LL;\n    while ( 1 )\n    {\n      v12 = 111 * v11;\n      if ( dword_897EDC[111 * v11] == a1\n        && dword_897EE0[v12] == a2\n        && dword_897EE4[v12] == a3\n        && dword_897EE8[v12] == v8 )\n      {\n        break;\n      }\nLABEL_18:\n      ++v11;\n      v10 += 111;\n      if ( v11 >= v9 )\n        goto LABEL_19;\n    }\n    HIDWORD(v22) = v8;\n    v13 = 21LL;\n    do\n    {\n      v14 = (unsigned __int8)byte_98A1B0[v13];\n      if ( v14 != 3 )\n      {\n        v15 = *((char *)v10 + v13 + 4);\n        if ( v15 != 3 && ((v15 & 3) != v14 || v15 & 4 && (signed int)sub_4083A0(v13) < 5) )\n        {\n          v9 = dword_897D30;\n          a3 = v22;\n          goto LABEL_18;\n        }\n      }\n      ++v13;\n    }\n    while ( v13 < 0x190 );\n    v17 = 111LL * (unsigned int)v11;\n    *v23 = dword_897EEC[v17];\n    if ( v24 )\n      *v24 = dword_897EF4[v17];\n    if ( a7 )\n      *a7 = dword_897EF8[v17];\n    if ( a8 )\n      *a8 = dword_897EF0[v17];\n    v16 = 1;\n    if ( dword_88C264 & 0x200000 )\n    {\n      v18 = (unsigned int *)&dword_897EEC[v17];\n      v19 = sub_434410(a1);\n      v20 = sub_434430(*v18);\n      sub_433F90(\"persistent owl cache hit: routine %s at %1m result %d\\n\", v19, a2, (unsigned int)v22, v8, v20, v22);\n    }\n  }\n  return v16;\n}\n", 
            "funcStartAddr": "0x459050L", 
            "funcEndAddr": "0x459223L", 
            "funcName": "sub_459050"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_459230(int a1, int a2, int a3, int a4, int a5, int a6, __int64 a7, int a8, int a9, int *a10, int a11)\n{\n  int v11; // er14\n  int v12; // ebx\n  int v13; // ebp\n  int v14; // er15\n  int v15; // er13\n  int v16; // edx\n  signed __int64 v17; // rax\n  int v18; // esi\n  unsigned __int64 v19; // rcx\n  int v20; // er15\n  signed __int64 v21; // rdx\n  signed __int64 v22; // rdx\n  signed int v23; // ebp\n  char v24; // r12\n  signed __int64 v25; // rbx\n  int v26; // eax\n  __int64 v27; // rbp\n  __int64 v28; // rax\n  int v29; // ecx\n  __int64 v30; // rax\n  int v31; // ecx\n  __int64 v32; // rax\n  int v33; // ecx\n  __int64 v34; // rax\n  signed __int64 v35; // rbx\n  unsigned int v36; // eax\n  __int64 v37; // rcx\n  unsigned __int64 v38; // rdx\n  __int64 v39; // rax\n  __int64 v40; // rdx\n  __int64 v41; // rcx\n  int *v42; // rcx\n  __int64 v43; // rax\n  __int64 v44; // r13\n  __int64 v45; // rbp\n  unsigned __int64 v46; // rdx\n  signed __int64 v47; // rbx\n  char v48; // bp\n  signed __int64 v49; // rbp\n  const char *v50; // rax\n  __int64 v51; // rax\n  bool v52; // r14\n  __int64 v53; // rax\n  int v54; // er12\n  int v55; // eax\n  unsigned int v56; // ebp\n  unsigned int v57; // ebx\n  int v58; // er15\n  unsigned int v59; // er12\n  __int64 v60; // r12\n  __int64 v61; // r14\n  signed __int64 v62; // r13\n  __int64 v63; // rax\n  signed int v64; // ecx\n  FILE *v65; // rdi\n  const char *v66; // rsi\n  int v68; // [rsp+0h] [rbp-488h]\n  int v69; // [rsp+4h] [rbp-484h]\n  int v70; // [rsp+8h] [rbp-480h]\n  int v71[2]; // [rsp+Ch] [rbp-47Ch]\n  int v72; // [rsp+14h] [rbp-474h]\n  unsigned int v73; // [rsp+18h] [rbp-470h]\n  unsigned int v74; // [rsp+1Ch] [rbp-46Ch]\n  __int64 v75; // [rsp+20h] [rbp-468h]\n  __int64 v76; // [rsp+28h] [rbp-460h]\n  __int64 v77; // [rsp+30h] [rbp-458h]\n  __int64 v78; // [rsp+38h] [rbp-450h]\n  char v79[21]; // [rsp+40h] [rbp-448h]\n  char v80[359]; // [rsp+55h] [rbp-433h]\n  char v81[19]; // [rsp+1BCh] [rbp-2CCh]\n  char v82; // [rsp+1CFh] [rbp-2B9h]\n  int v83[5]; // [rsp+1D0h] [rbp-2B8h]\n  char v84[676]; // [rsp+1E4h] [rbp-2A4h]\n\n  v11 = a6;\n  v12 = a5;\n  v13 = a4;\n  v14 = a3;\n  v15 = a2;\n  if ( dword_98A7F4 )\n    sub_4340E0((__int64)\"engine/persistent.c\", 0x2D2u, (__int64)\"stackp == 0\", 0xFFFFFFFF, 0xFFFFFFFF);\n  v16 = dword_897D30;\n  if ( dword_897D30 == 150 )\n  {\n    LODWORD(v17) = sub_458F10();\n    v16 = dword_897D30;\n    if ( dword_897D30 == 150 )\n    {\n      if ( dword_88C264 & 0x1000 )\n        LODWORD(v17) = sub_433F90(\"Persistent owl cache full.\\n\");\n      return v17;\n    }\n  }\n  v18 = v14;\n  v19 = (unsigned __int64)a10;\n  v20 = 3 - a11;\n  v21 = 111LL * v16;\n  dword_897D40[v21] = dword_565C68;\n  dword_897EDC[v21] = a1;\n  dword_897EE0[v21] = v15;\n  dword_897EE4[v21] = v18;\n  dword_897EE8[v21] = v13;\n  dword_897EEC[v21] = v12;\n  dword_897EF0[v21] = a8;\n  dword_897EF4[v21] = v11;\n  dword_897EF8[v21] = a7;\n  dword_897ED8[v21] = a9;\n  dword_897ED4[v21] = dword_98A7C0;\n  v22 = -378LL;\n  if ( byte_98A33F[-378] != 3 )\nLABEL_10:\n    *(&v82 + v22) = *((_BYTE *)a10 + v22 + 399) != 0;\n  while ( v22 )\n  {\n    if ( byte_98A340[v22] != 3 )\n      *((_BYTE *)v83 + v22) = *((_BYTE *)a10 + v22 + 400) != 0;\n    v22 += 2LL;\n    if ( byte_98A33F[v22] != 3 )\n      goto LABEL_10;\n  }\n  if ( (unsigned int)v11 <= 0x1A4 )\n  {\n    v19 = v11;\n    if ( byte_98A1B0[v11] != 3 )\n      v79[v11] = 1;\n  }\n  if ( (unsigned int)a7 <= 0x1A4 && byte_98A1B0[(signed int)a7] != 3 )\n    v79[(signed int)a7] = 1;\n  v23 = 1;\n  do\n  {\n    v24 = v23 + 1;\n    v25 = -379LL;\n    do\n    {\n      while ( 1 )\n      {\n        v26 = (unsigned __int8)byte_98A340[v25];\n        if ( v26 == 3 || v20 == v26 || *((_BYTE *)v83 + v25) )\n          goto LABEL_35;\n        if ( byte_98A354[v25] == 3 || (v19 = (unsigned int)v84[v25], v23 != (_DWORD)v19) )\n        {\n          if ( byte_98A33F[v25] == 3 || (v19 = (unsigned int)*(&v82 + v25), v23 != (_DWORD)v19) )\n          {\n            if ( byte_98A32C[v25] == 3 || (v19 = (unsigned int)v81[v25], v23 != (_DWORD)v19) )\n            {\n              if ( byte_98A341[v25] == 3 )\n                goto LABEL_35;\n              v19 = (unsigned int)*((char *)v83 + v25 + 1);\n              if ( v23 != (_DWORD)v19 )\n                goto LABEL_35;\n            }\n          }\n        }\n        if ( !(_BYTE)v26 )\n          break;\n        sub_40BAB0(v25 + 400, (__int64)v79, v24);\nLABEL_35:\n        if ( !++v25 )\n          goto LABEL_38;\n      }\n      *((_BYTE *)v83 + v25++) = v24;\n    }\n    while ( v25 );\nLABEL_38:\n    ++v23;\n  }\n  while ( v23 != 5 );\n  v27 = 0LL;\n  do\n  {\n    if ( v20 == (unsigned __int8)byte_98A1C5[v27] && !v80[v27] )\n    {\n      v28 = dword_5641B0[0] + (signed int)v27 + 21;\n      v29 = (unsigned __int8)byte_98A1B0[v28];\n      if ( v29 != 3 && v20 != v29 && v79[v28] )\n        goto LABEL_120;\n      if ( (v30 = dword_5641B4 + (signed int)v27 + 21, v31 = (unsigned __int8)byte_98A1B0[v30], v31 != 3)\n        && v20 != v31\n        && v79[v30]\n        || (v32 = dword_5641B8 + (signed int)v27 + 21, v33 = (unsigned __int8)byte_98A1B0[v32], v33 != 3)\n        && v20 != v33\n        && v79[v32]\n        || (v34 = dword_5641BC + (signed int)v27 + 21, v19 = (unsigned __int8)byte_98A1B0[v34], (_DWORD)v19 != 3)\n        && v20 != (_DWORD)v19\n        && v79[v34] )\n      {\nLABEL_120:\n        sub_40BAB0(v27 + 21, (__int64)v79, 1);\n      }\n    }\n    ++v27;\n  }\n  while ( v27 != 379 );\n  v35 = 21LL;\n  while ( 2 )\n  {\n    LODWORD(v17) = (unsigned __int8)byte_98A1B0[v35];\n    if ( v20 == (_DWORD)v17 )\n    {\n      if ( v79[v35] )\n      {\n        LODWORD(v17) = sub_4083A0(v35);\n        if ( (signed int)v17 <= 4 )\n        {\n          v36 = sub_408410(v35, 4, (unsigned __int64)&v68);\n          if ( (signed int)v36 <= 0 )\n            goto LABEL_69;\n          v37 = v36;\n          v38 = v36 - 1LL;\n          v39 = v36 & 3;\n          if ( v38 >= 3 )\n          {\n            v41 = v37 - v39;\n            v40 = 0LL;\n            do\n            {\n              v79[*(&v68 + v40)] = 1;\n              v79[*(&v69 + v40)] = 1;\n              v79[*(&v70 + v40)] = 1;\n              v79[v71[v40]] = 1;\n              v40 += 4LL;\n            }\n            while ( v41 != v40 );\n            if ( v39 )\n              goto LABEL_67;\n          }\n          else\n          {\n            v40 = 0LL;\n            if ( !v39 )\n              goto LABEL_69;\nLABEL_67:\n            v42 = &v68 + v40;\n            v43 = -v39;\n            do\n            {\n              v79[*v42] = 1;\n              ++v42;\n              ++v43;\n            }\n            while ( v43 );\n          }\nLABEL_69:\n          LODWORD(v17) = sub_40A7D0(v35, (__int64)v83);\n          if ( (signed int)v17 > 0 )\n          {\n            v44 = (unsigned int)v17;\n            v45 = 0LL;\n            while ( 1 )\n            {\n              LODWORD(v17) = sub_4083A0(v83[v45]);\n              if ( (signed int)v17 > 3 )\n                goto LABEL_81;\n              LODWORD(v17) = sub_408410(v83[v45], 3, (unsigned __int64)&v68);\n              if ( (signed int)v17 <= 0 )\n                goto LABEL_81;\n              v19 = (unsigned int)v17;\n              v46 = (unsigned int)v17 - 1LL;\n              v17 &= 3u;\n              if ( v46 >= 3 )\n                break;\n              v22 = 0LL;\n              if ( v17 )\n                goto LABEL_79;\nLABEL_81:\n              if ( ++v45 == v44 )\n                goto LABEL_82;\n            }\n            v19 -= v17;\n            v22 = 0LL;\n            do\n            {\n              v79[*(&v68 + v22)] = 1;\n              v79[*(&v69 + v22)] = 1;\n              v79[*(&v70 + v22)] = 1;\n              v79[v71[v22]] = 1;\n              v22 += 4LL;\n            }\n            while ( v19 != v22 );\n            if ( !v17 )\n              goto LABEL_81;\nLABEL_79:\n            v19 = (unsigned __int64)(&v68 + v22);\n            v17 = -v17;\n            do\n            {\n              v22 = *(signed int *)v19;\n              v79[v22] = 1;\n              v19 += 4LL;\n              ++v17;\n            }\n            while ( v17 );\n            goto LABEL_81;\n          }\n        }\n      }\n    }\nLABEL_82:\n    if ( ++v35 != 400 )\n      continue;\n    break;\n  }\n  v47 = -379LL;\n  do\n  {\n    v48 = byte_98A340[v47];\n    if ( v48 != 3 )\n    {\n      if ( *((_BYTE *)v83 + v47) )\n      {\n        if ( (unsigned __int8)(v48 - 1) <= 1u && (signed int)sub_4083A0((signed int)v47 + 400) > 4 )\n          v48 |= 4u;\n      }\n      else\n      {\n        v48 = 3;\n      }\n      v17 = 444LL * dword_897D30;\n      *((_BYTE *)dword_897ED4 + v17 + v47) = v48;\n    }\n    ++v47;\n  }\n  while ( v47 );\n  if ( dword_88C264 & 0x200000 )\n  {\n    sub_433F90(\"%o Stored result in cache (entry %d):\\n\", (unsigned int)dword_897D30, v22, v19);\n    v49 = 111LL * dword_897D30;\n    sub_433F90(\"%omovenum         = %d\\n\", (unsigned int)dword_897ED4[v49]);\n    sub_433F90(\"%otactical_nodes  = %d\\n\", (unsigned int)dword_897ED8[v49]);\n    v50 = sub_434410(dword_897EDC[v49]);\n    sub_433F90(\"%oroutine         = %s\\n\", v50);\n    sub_433F90(\"%o(apos)          = %1m\\n\", (unsigned int)dword_897EE0[v49]);\n    sub_433F90(\"%o(bpos)          = %1m\\n\", (unsigned int)dword_897EE4[v49]);\n    sub_433F90(\"%o(cpos)          = %1m\\n\", (unsigned int)dword_897EE8[v49]);\n    sub_433F90(\"%oresult          = %d\\n\", (unsigned int)dword_897EEC[v49]);\n    sub_433F90(\"%o(move)          = %1m\\n\", (unsigned int)dword_897EF4[v49]);\n    sub_433F90(\"%o(move2)         = %1m\\n\", (unsigned int)dword_897EF8[v49]);\n    v51 = (unsigned int)dword_897EE0[v49];\n    v75 = v51;\n    v52 = v51 != 0;\n    LODWORD(v53) = sub_44A2C0((__int64)\"%o(move2)         = %1m\\n\");\n    v54 = dword_565C68;\n    if ( dword_565C68 > 0 )\n    {\n      v55 = 32 * v52;\n      v72 = v55 + 79;\n      v78 = v55 | 0x58u;\n      v76 = (unsigned int)(v75 - 20);\n      v77 = (__int64)&unk_897D44 + v49 * 4;\n      v56 = 32;\n      v57 = 21;\n      v58 = 0;\n      do\n      {\n        v59 = v54 - v58;\n        fprintf(stderr, \"\\n%2d\", v59);\n        v74 = v57;\n        v73 = v59;\n        if ( dword_565C68 > 0 )\n        {\n          v60 = v75 - v57;\n          v61 = v77 + v57;\n          v62 = 0LL;\n          do\n          {\n            v63 = *(unsigned __int8 *)(v61 + v62);\n            v64 = 46;\n            switch ( v63 )\n            {\n              case 0LL:\n                break;\n              case 1LL:\n                v64 = v72;\n                break;\n              case 2LL:\n                v64 = v78;\n                break;\n              case 5LL:\n                v64 = 79;\n                break;\n              case 6LL:\n                v64 = 88;\n                break;\n              default:\n                v64 = v56;\n                break;\n            }\n            v56 = v64;\n            if ( (_BYTE)v63 == 3 )\n              v56 = 63;\n            if ( v60 == v62 )\n            {\n              v65 = stderr;\n              v66 = (const char *)&off_49CD52;\n            }\n            else if ( v62 && (_DWORD)v76 == (_DWORD)v62 )\n            {\n              v65 = stderr;\n              v66 = (const char *)&off_49CD56;\n            }\n            else\n            {\n              v65 = stderr;\n              v66 = off_499B43;\n            }\n            fprintf(v65, v66, v56);\n            ++v62;\n          }\n          while ( v62 < dword_565C68 );\n        }\n        LODWORD(v53) = fprintf(stderr, off_499B47, v73);\n        ++v58;\n        v54 = dword_565C68;\n        v76 -= 20LL;\n        v57 = v74 + 20;\n      }\n      while ( dword_565C68 > v58 );\n    }\n    LODWORD(v17) = sub_44A570(v53);\n  }\n  ++dword_897D30;\n  return v17;\n}\n", 
            "funcStartAddr": "0x459230L", 
            "funcEndAddr": "0x459a66L", 
            "funcName": "sub_459230"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_459A70(__int64 a1)\n{\n  __int64 v1; // r12\n  signed int v2; // ebx\n  __int64 result; // rax\n  signed __int64 v4; // rcx\n  __int64 v5; // rdx\n  _DWORD *v6; // rdi\n  int *v7; // rdx\n  signed __int64 v8; // r13\n  __int64 v9; // rsi\n  __int64 v10; // rdi\n  char *v11; // rdx\n  unsigned int v12; // eax\n  unsigned __int64 v13; // rdx\n  __int64 v14; // rax\n  int *v15; // rdx\n  __int64 v16; // rax\n  signed __int64 v17; // rbx\n  float v18; // xmm1_4\n  unsigned int *v19; // r15\n  float v20; // ST08_4\n  float v21; // [rsp+Ch] [rbp-3FCh]\n  int v22; // [rsp+10h] [rbp-3F8h]\n  int v23; // [rsp+14h] [rbp-3F4h]\n  int v24; // [rsp+18h] [rbp-3F0h]\n  int v25[251]; // [rsp+1Ch] [rbp-3ECh]\n\n  v1 = a1;\n  v2 = 0;\n  memset((void *)(a1 + 84), 0, 0x5ECuLL);\n  result = dword_897D30;\n  if ( dword_897D30 <= 0LL )\n    return result;\n  v4 = dword_897D30 & 3;\n  if ( (unsigned __int64)(dword_897D30 - 1LL) < 3 )\n  {\n    v5 = 0LL;\n    if ( !(dword_897D30 & 3) )\n      goto LABEL_10;\n    goto LABEL_8;\n  }\n  v5 = 0LL;\n  v6 = &unk_89840C;\n  v2 = 0;\n  do\n  {\n    v2 += *v6 + *(v6 - 111) + *(v6 - 222) + *(v6 - 333);\n    v5 += 4LL;\n    v6 += 444;\n  }\n  while ( dword_897D30 - v4 != v5 );\n  if ( dword_897D30 & 3 )\n  {\nLABEL_8:\n    v7 = &dword_897ED8[111 * v5];\n    v4 = -v4;\n    do\n    {\n      v2 += *v7;\n      v7 += 111;\n      ++v4;\n    }\n    while ( v4 );\n  }\nLABEL_10:\n  if ( v2 >= 101 && dword_897D30 > 0 )\n  {\n    v21 = (float)v2;\n    v8 = 0LL;\n    while ( 1 )\n    {\n      v17 = 111 * v8;\n      v18 = (float)dword_897ED8[111 * v8] / v21;\n      v19 = (unsigned int *)&dword_897EDC[111 * v8];\n      if ( dword_88C264 & 0x200000 )\n      {\n        v20 = (float)dword_897ED8[111 * v8] / v21;\n        sub_433F90(\"Owl hotspots: %d %1m %f\\n\", *v19, (unsigned int)dword_897EE0[v17], v4, v18);\n        v18 = v20;\n      }\n      switch ( (unsigned __int64)*v19 )\n      {\n        case 0uLL:\n        case 1uLL:\n        case 2uLL:\n        case 3uLL:\n          v9 = (unsigned int)dword_897EE0[v17];\n          goto LABEL_30;\n        case 4uLL:\n        case 5uLL:\n        case 8uLL:\n          v9 = (unsigned int)dword_897EE4[v17];\nLABEL_30:\n          v11 = (char *)&unk_897D44 + v17 * 4;\n          v10 = v1;\n          goto LABEL_31;\n        case 6uLL:\n          sub_459D50(v1, (unsigned int)dword_897EE4[v17], (char *)&unk_897D44 + v17 * 4);\n          v9 = (unsigned int)dword_897EE8[v17];\n          v10 = v1;\n          v11 = (char *)&unk_897D44 + v17 * 4;\nLABEL_31:\n          sub_459D50(v10, v9, v11);\n          goto LABEL_32;\n        case 7uLL:\n          v12 = sub_408410(dword_897EE0[v17], 241, (unsigned __int64)&v22);\n          if ( (signed int)v12 <= 0 )\n            goto LABEL_32;\n          v4 = v12;\n          v13 = v12 - 1LL;\n          v14 = v12 & 3;\n          if ( v13 < 3 )\n          {\n            v15 = 0LL;\n            if ( !v14 )\n              goto LABEL_32;\nLABEL_22:\n            v4 = (signed __int64)(&v22 + (_QWORD)v15);\n            v16 = -v14;\n            do\n            {\n              *(float *)(v1 + 4LL * *(signed int *)v4) = *(float *)(v1 + 4LL * *(signed int *)v4) + v18;\n              v4 += 4LL;\n              ++v16;\n            }\n            while ( v16 );\n            goto LABEL_32;\n          }\n          v4 -= v14;\n          v15 = 0LL;\n          do\n          {\n            *(float *)(v1 + 4LL * *(&v22 + (_QWORD)v15)) = *(float *)(v1 + 4LL * *(&v22 + (_QWORD)v15)) + v18;\n            *(float *)(v1 + 4LL * *(&v23 + (_QWORD)v15)) = *(float *)(v1 + 4LL * *(&v23 + (_QWORD)v15)) + v18;\n            *(float *)(v1 + 4LL * *(&v24 + (_QWORD)v15)) = *(float *)(v1 + 4LL * *(&v24 + (_QWORD)v15)) + v18;\n            *(float *)(v1 + 4LL * v25[(_QWORD)v15]) = *(float *)(v1 + 4LL * v25[(_QWORD)v15]) + v18;\n            ++v15;\n          }\n          while ( (int *)v4 != v15 );\n          if ( v14 )\n            goto LABEL_22;\nLABEL_32:\n          ++v8;\n          result = dword_897D30;\n          if ( v8 >= dword_897D30 )\n            return result;\n          break;\n        default:\n          sub_4340E0((__int64)\"engine/persistent.c\", 0x3D1u, (__int64)\"0\", 0xFFFFFFFF, 0xFFFFFFFF);\n          return result;\n      }\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x459a70L", 
            "funcEndAddr": "0x459d4dL", 
            "funcName": "sub_459A70"
        }, 
        {
            "decompiledFuncCode": "char __fastcall sub_459D50(__int64 a1, signed int a2, __int64 a3, float a4)\n{\n  __int64 v4; // rax\n  int v5; // edx\n  signed __int64 v6; // r13\n  __int64 v7; // r14\n  __int64 v8; // rbx\n  __int64 v9; // rbx\n  double v10; // xmm0_8\n  float v11; // xmm0_4\n  float v12; // xmm0_4\n  __int64 v13; // rdi\n  __int64 v14; // rbx\n  __int64 v15; // rbx\n  float v16; // xmm0_4\n  float v18; // [rsp+Ch] [rbp-4Ch]\n  double v19; // [rsp+10h] [rbp-48h]\n  __int64 v20; // [rsp+18h] [rbp-40h]\n  __int64 v21; // [rsp+20h] [rbp-38h]\n\n  v21 = a3;\n  v18 = a4;\n  v20 = a1;\n  LOBYTE(v4) = byte_98A1B0[a2] - 1;\n  if ( (unsigned __int8)v4 >= 2u )\n  {\n    v5 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0((__int64)\"engine/persistent.c\", 0x368u, (__int64)\"IS_STONE(board[dr])\", v5 - 1, a2 - 20 * v5 - 1);\n  }\n  v19 = a4 * 0.5;\n  v6 = 21LL;\n  do\n  {\n    if ( !byte_98A1B0[v6] )\n    {\n      v7 = 0LL;\n      while ( 1 )\n      {\n        v8 = dword_5641B0[v7];\n        LOBYTE(v4) = v6;\n        if ( (unsigned __int8)(byte_98A1B0[v8 + (signed int)v6] - 1) <= 1u )\n        {\n          v9 = (signed int)v6 + v8;\n          if ( (unsigned int)sub_414710(v9, a2)\n            || (LODWORD(v4) = sub_416160(v9, a2), (_DWORD)v4)\n            && (LOBYTE(v4) = byte_98A1B0[v9], (_BYTE)v4 == byte_98A1B0[a2]) )\n          {\n            if ( (signed int)sub_4083A0(v9) < 5 )\n              break;\n            LODWORD(v4) = sub_408320(v6);\n            if ( (_DWORD)v4 )\n              break;\n          }\n        }\n        if ( (unsigned __int64)++v7 >= 8 )\n        {\n          if ( (_DWORD)v7 == 8 )\n          {\n            LOBYTE(v4) = v21;\n            if ( !*(_BYTE *)(v21 + v6) )\n            {\n              v4 = v20;\n              v10 = *(float *)(v20 + 4 * v6) - v19;\nLABEL_25:\n              v16 = v10;\n              *(float *)(v4 + 4 * v6) = v16;\n              goto LABEL_28;\n            }\n          }\n          goto LABEL_28;\n        }\n      }\n      if ( (unsigned int)v7 > 3 )\n      {\n        v13 = dword_5641B0[v7 & 3];\n        if ( !byte_98A1B0[v13 + (signed int)v6]\n          || (v14 = dword_5641B0[((_BYTE)v7 + 1) & 3], (signed int)sub_4083A0((signed int)v6 + (signed int)v13) < 3)\n          || (v15 = (signed int)v6 + v14, !byte_98A1B0[v15])\n          || (LODWORD(v4) = sub_4083A0(v15), (signed int)v4 <= 2) )\n        {\n          v4 = v20;\n          v10 = *(float *)(v20 + 4 * v6) + v19;\n          goto LABEL_25;\n        }\n      }\n      else\n      {\n        LODWORD(v4) = sub_414710(v9, a2);\n        v11 = *(float *)(v20 + 4 * v6);\n        if ( (_DWORD)v4 )\n          v12 = v11 + v18;\n        else\n          v12 = v11 + v19;\n        *(float *)(v20 + 4 * v6) = v12;\n      }\n    }\nLABEL_28:\n    ++v6;\n  }\n  while ( v6 != 400 );\n  return v4;\n}\n", 
            "funcStartAddr": "0x459d50L", 
            "funcEndAddr": "0x459f8aL", 
            "funcName": "sub_459D50"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_459F90(signed int a1)\n{\n  int v1; // er15\n  bool v2; // bl\n  unsigned int v3; // ebp\n  int v4; // er13\n  int v5; // eax\n  int v6; // er15\n  __int64 v7; // r12\n  unsigned __int64 v8; // rbx\n  signed __int64 v9; // r14\n  int v10; // eax\n  int v11; // ecx\n  signed __int64 v12; // rax\n  unsigned __int8 v13; // cf\n\n  v1 = 0;\n  v2 = dword_565C68 > 11;\n  v3 = 0;\n  if ( a1 >= 2 )\n  {\n    v4 = dword_565C68 / 2;\n    v3 = 9;\n    if ( dword_565C68 % 2 != 1 )\n      v3 = 4 * (dword_565C68 > 6);\n    if ( dword_565C68 <= 8 )\n      v3 = 4 * (dword_565C68 > 6);\n    if ( (signed int)v3 > a1 )\n      v3 = a1;\n    v5 = v3;\n    if ( (v3 | 2) == 7 )\n    {\n      sub_407220(21 * v4 + 21, 2u);\n      v5 = v3 - 1;\n    }\n    if ( v5 > 0 )\n    {\n      LOBYTE(v1) = v2;\n      v6 = v1 | 2;\n      v7 = (unsigned int)v5;\n      v8 = 0LL;\n      v9 = 22LL;\n      while ( 1 )\n      {\n        v12 = 69LL;\n        v13 = _bittest64(&v12, v8);\n        v10 = v6;\n        if ( !v13 )\n          v10 = dword_4B0140[2 * v8];\n        if ( v10 == -2 )\n          v10 = -v6;\n        v11 = v6;\n        if ( !_bittest64(&v9, v8) )\n          v11 = dword_4B0144[2 * v8];\n        if ( v11 == -2 )\n          v11 = -v6;\n        if ( !v10 )\n          v10 = v4;\n        if ( !v11 )\n          v11 = v4;\n        if ( v10 >= 0 )\n          break;\n        v10 = v10 + dword_565C68 - 1;\n        if ( v11 < 0 )\n          goto LABEL_13;\nLABEL_28:\n        sub_407220(v11 + 20 * v10 + 21, 2u);\n        if ( v7 == ++v8 )\n          return v3;\n      }\n      if ( v11 >= 0 )\n        goto LABEL_28;\nLABEL_13:\n      v11 = v11 + dword_565C68 - 1;\n      goto LABEL_28;\n    }\n  }\n  return v3;\n}\n", 
            "funcStartAddr": "0x459f90L", 
            "funcEndAddr": "0x45a0d6L", 
            "funcName": "sub_459F90"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_45A0E0@<rax>(__int64 a1@<rax>, signed int a2@<edi>, __m128i a3@<xmm0>, __m128i a4@<xmm1>)\n{\n  signed int v4; // er15\n  unsigned __int64 v5; // rdi\n  signed __int64 v6; // rsi\n  signed __int64 v7; // r14\n  int v8; // ebx\n  int v9; // esi\n  signed __int64 v10; // rax\n  signed __int64 v11; // rcx\n  __m128i v12; // xmm0\n  signed __int64 v13; // rcx\n  const __m128i *v14; // rsi\n  __m128i v15; // xmm1\n  __m128d v16; // xmm4\n  __m128d v17; // xmm5\n  __m128d v18; // xmm2\n  __m128d v19; // xmm3\n  __m128i v20; // xmm2\n  __m128i v21; // xmm2\n  __m128i v22; // xmm0\n  __m128i v23; // xmm1\n  __m128i v24; // xmm1\n  __m128i v25; // xmm2\n  signed __int64 v26; // rcx\n  int *v27; // rax\n  char v28; // r10\n  __int64 v29; // r8\n  __int64 (__fastcall *v30)(); // r9\n  int *v31; // rdx\n  signed int v32; // er11\n  signed int v33; // ebp\n  int v34; // ebp\n  signed int v35; // ebx\n  signed __int64 v36; // rax\n  signed int v37; // edx\n  int v38; // eax\n  int v39; // edx\n  int *v40; // rax\n  int v41; // er13\n  __int64 v42; // rbp\n  __int64 v43; // rbx\n  int v44; // eax\n  int v45; // ecx\n  signed __int64 v46; // r14\n  __int64 v47; // rax\n  signed int v48; // ecx\n  unsigned int v49; // er15\n  __int64 v51; // [rsp-4h] [rbp-38h]\n\n  v51 = a1;\n  v4 = a2;\n  if ( a2 && a2 <= 1 )\n    sub_4340E0((__int64)\"engine/handicap.c\", 0xDDu, (__int64)\"handicap == 0 || handicap >= 2\", 0xFFFFFFFF, 0xFFFFFFFF);\n  if ( a2 )\n  {\n    dword_565C98 = a2;\n    dword_565C9C = a2;\n    sub_407220(21, 2u);\n    sub_407220(dword_565C68 + 20, 2u);\n    sub_407220(20 * dword_565C68 | 1, 2u);\n    sub_407220(21 * dword_565C68, 2u);\n    if ( dword_565C9C > 0 )\n    {\n      do\n      {\n        dword_8A8170 = 0;\n        v5 = (unsigned __int64)sub_45A600;\n        v6 = 2LL;\n        sub_41EFF0((__int64)sub_45A600, 2LL, (__int64)&unk_74BC70, 0LL, 0LL);\n        if ( !dword_8A8170 )\n          break;\n        LODWORD(v7) = 0;\n        v8 = 0;\n        if ( dword_8A8170 > 0 )\n        {\n          if ( (unsigned int)dword_8A8170 >= 9 )\n          {\n            v11 = dword_8A8170 & 7;\n            if ( !(dword_8A8170 & 7) )\n              v11 = 8LL;\n            v10 = (unsigned int)dword_8A8170 - v11;\n            v12 = _mm_cmpeq_epi32(a3, a3);\n            v13 = (unsigned int)dword_8A8170 - v11;\n            v14 = (const __m128i *)dword_8A8180;\n            v15 = _mm_cmpeq_epi32(a4, a4);\n            do\n            {\n              v16 = (__m128d)_mm_unpacklo_epi32(_mm_shuffle_epi32(v14[3], 80), _mm_shuffle_epi32(v14[4], 250));\n              v16.m128d_f64[0] = COERCE_DOUBLE(_mm_unpacklo_epi32(_mm_load_si128(v14), _mm_shuffle_epi32(v14[1], 78)));\n              v17 = (__m128d)_mm_unpacklo_epi32(_mm_shuffle_epi32(v14[9], 80), _mm_shuffle_epi32(v14[10], 250));\n              v17.m128d_f64[0] = COERCE_DOUBLE(_mm_unpacklo_epi32(_mm_load_si128(v14 + 6), _mm_shuffle_epi32(v14[7], 78)));\n              v18 = (__m128d)_mm_cmpgt_epi32((__m128i)v16, v12);\n              v19 = (__m128d)_mm_cmpgt_epi32((__m128i)v17, v15);\n              v12 = _mm_or_si128(_mm_andnot_si128((__m128i)v18, v12), (__m128i)_mm_and_pd(v16, v18));\n              v15 = _mm_or_si128(_mm_andnot_si128((__m128i)v19, v15), (__m128i)_mm_and_pd(v17, v19));\n              v14 += 12;\n              v13 -= 8LL;\n            }\n            while ( v13 );\n            v20 = _mm_cmpgt_epi32(v12, v15);\n            v21 = _mm_or_si128(_mm_andnot_si128(v20, v15), _mm_and_si128(v12, v20));\n            v22 = _mm_shuffle_epi32(v21, 78);\n            v23 = _mm_cmpgt_epi32(v21, v22);\n            v24 = _mm_or_si128(_mm_andnot_si128(v23, v22), _mm_and_si128(v21, v23));\n            a3 = _mm_shuffle_epi32(v24, 229);\n            v25 = _mm_cmpgt_epi32(v24, a3);\n            a4 = _mm_and_si128(v24, v25);\n            v9 = _mm_cvtsi128_si32(_mm_or_si128(_mm_andnot_si128(v25, a3), a4));\n          }\n          else\n          {\n            v9 = -1;\n            v10 = 0LL;\n          }\n          v26 = (unsigned int)dword_8A8170 - v10;\n          v27 = &dword_8A8180[6 * v10];\n          do\n          {\n            if ( v9 < *v27 )\n              v9 = *v27;\n            v27 += 6;\n            --v26;\n          }\n          while ( v26 );\n          v28 = 10 - v9;\n          v6 = (unsigned int)(v9 - 10);\n          v29 = dword_8A8170 & 1;\n          if ( dword_8A8170 != 1 )\n          {\n            v30 = (__int64 (__fastcall *)())((unsigned int)dword_8A8170 - v29);\n            v5 = 0LL;\n            v31 = dword_8A8180;\n            v8 = 0;\n            do\n            {\n              v32 = v31[6];\n              v33 = 1 << (v28 + *v31);\n              if ( *v31 < (signed int)v6 )\n                v33 = 0;\n              *v31 = v33;\n              v34 = v8 + v33;\n              v35 = 1 << (v28 + v32);\n              if ( v32 < (signed int)v6 )\n                v35 = 0;\n              v31[6] = v35;\n              v8 = v34 + v35;\n              v5 += 2LL;\n              v31 += 12;\n            }\n            while ( v30 != (__int64 (__fastcall *)())v5 );\n            if ( !v29 )\n              goto LABEL_32;\nLABEL_29:\n            v36 = 3 * v5;\n            v37 = dword_8A8180[6 * v5];\n            v5 = (unsigned int)(1 << (v37 + v28));\n            if ( v37 < (signed int)v6 )\n              v5 = 0LL;\n            dword_8A8180[2 * v36] = v5;\n            v8 += v5;\n            goto LABEL_32;\n          }\n          v5 = 0LL;\n          v8 = 0;\n          if ( dword_8A8170 & 1 )\n            goto LABEL_29;\n        }\nLABEL_32:\n        v38 = sub_493F30(v5, v6);\n        if ( dword_8A8170 > 0LL )\n        {\n          v39 = v38 % v8;\n          v40 = dword_8A8180;\n          v7 = 0LL;\n          do\n          {\n            v39 -= *v40;\n            if ( v39 < 0 )\n              break;\n            ++v7;\n            v40 += 6;\n          }\n          while ( v7 < dword_8A8170 );\n        }\n        v41 = dword_8A8184[6 * (unsigned int)v7];\n        v42 = qword_8A8188[3 * (unsigned int)v7];\n        v43 = dword_8A8190[6 * (unsigned int)v7];\n        sub_407220(v41 + dword_94A490[8 * *(signed int *)(v42 + 52) + v43], 2u);\n        v44 = dword_565C9C-- - 1;\n        v45 = *(_DWORD *)(v42 + 8);\n        if ( v45 > 0 )\n        {\n          v46 = 0LL;\n          do\n          {\n            if ( *(_DWORD *)(*(_QWORD *)v42 + 8 * v46 + 4) == 7 )\n            {\n              sub_407220(v41 + dword_94A490[8 * *(signed int *)(*(_QWORD *)v42 + 8 * v46) + v43], 2u);\n              v44 = dword_565C9C-- - 1;\n              v45 = *(_DWORD *)(v42 + 8);\n            }\n            ++v46;\n          }\n          while ( v46 < v45 );\n        }\n      }\n      while ( v44 > 0 );\n    }\n    sub_407380(21);\n    sub_407380(dword_565C68 + 20);\n    sub_407380(20 * dword_565C68 | 1);\n    sub_407380(21 * dword_565C68);\n    v47 = (unsigned int)dword_565C9C;\n    if ( dword_565C9C > 0 )\n    {\n      while ( 1 )\n      {\n        sub_419910(v47, 2u, 0LL, 0LL);\n        if ( (signed int)sub_403E50((_DWORD *)&v51 + 1, 2u, 0LL, 0) <= 0 )\n          break;\n        sub_407220(SHIDWORD(v51), 2u);\n        v48 = dword_565C9C;\n        v47 = (unsigned int)(dword_565C9C-- - 1);\n        if ( v48 <= 1 )\n          goto LABEL_48;\n      }\n      LODWORD(v47) = dword_565C9C;\n    }\nLABEL_48:\n    v49 = v4 - v47;\n    dword_565C98 = -1;\n    dword_565C9C = -1;\n  }\n  else\n  {\n    v49 = 0;\n  }\n  return v49;\n}\n", 
            "funcStartAddr": "0x45a0e0L", 
            "funcEndAddr": "0x45a57bL", 
            "funcName": "sub_45A0E0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_45A580()\n{\n  __int64 result; // rax\n\n  result = (unsigned int)dword_565C9C;\n  if ( dword_565C9C < 0 )\n    sub_4340E0((__int64)\"engine/handicap.c\", 0x19Eu, (__int64)\"remaining_handicap_stones >= 0\", 0xFFFFFFFF, 0xFFFFFFFF);\n  return result;\n}\n", 
            "funcStartAddr": "0x45a580L", 
            "funcEndAddr": "0x45a5abL", 
            "funcName": "sub_45A580"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_45A5C0()\n{\n  __int64 result; // rax\n\n  result = (unsigned int)dword_565C98;\n  if ( dword_565C98 < 0 )\n    sub_4340E0((__int64)\"engine/handicap.c\", 0x1A5u, (__int64)\"total_handicap_stones >= 0\", 0xFFFFFFFF, 0xFFFFFFFF);\n  return result;\n}\n", 
            "funcStartAddr": "0x45a5c0L", 
            "funcEndAddr": "0x45a5ebL", 
            "funcName": "sub_45A5C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_45A600(int a1, unsigned int a2, __int64 a3, unsigned int a4)\n{\n  unsigned int v4; // er15\n  __int64 v5; // r12\n  __int64 result; // rax\n  int v7; // er14\n  __int64 v8; // rsi\n  signed __int64 v9; // rcx\n  __int64 v10; // rdx\n  int v11; // ebp\n  signed __int64 v12; // rdi\n  signed __int64 v13; // rbp\n  __m128 *v14; // rbp\n  __m128i v15; // xmm1\n  __m128i v16; // xmm0\n  __m128i v17; // xmm2\n  signed __int64 v18; // rbx\n  __m128i v19; // xmm0\n  __m128i v20; // xmm1\n  unsigned int v21; // er13\n  int v22; // ecx\n  int v23; // ebx\n  __int64 v24; // r9\n  bool v25; // r8\n  unsigned int v26; // esi\n  signed __int64 v27; // rdx\n  int *v28; // rbp\n  int v29; // edi\n  int v30; // ebx\n  unsigned int v31; // edi\n  int v32; // eax\n  int *v33; // rbp\n  __int64 v34; // r9\n  int v35; // edi\n  signed __int64 v36; // rcx\n\n  v4 = a4;\n  v5 = a3;\n  result = a2;\n  v7 = a1;\n  v8 = (unsigned int)(a1 + dword_94A490[8 * *(signed int *)(a3 + 52) + a4]);\n  v9 = *(signed int *)(a3 + 8);\n  if ( v9 <= 0 )\n  {\n    if ( dword_565C9C < 1 )\n      return result;\n  }\n  else\n  {\n    v10 = *(_QWORD *)a3;\n    if ( (unsigned int)v9 >= 9 )\n    {\n      v13 = 8LL;\n      if ( v9 & 7 )\n        v13 = v9 & 7;\n      v12 = v9 - v13;\n      v14 = (__m128 *)(v10 + 36);\n      v15 = _mm_cvtsi32_si128(1u);\n      v16 = 0LL;\n      v17 = _mm_load_si128((const __m128i *)&xmmword_4AE160);\n      v18 = v12;\n      do\n      {\n        v15 = _mm_sub_epi32(v15, _mm_cmpeq_epi32((__m128i)_mm_shuffle_ps(v14[-2], v14[-1], 136), v17));\n        v16 = _mm_sub_epi32(v16, _mm_cmpeq_epi32((__m128i)_mm_shuffle_ps(*v14, v14[1], 136), v17));\n        v14 += 4;\n        v18 -= 8LL;\n      }\n      while ( v18 );\n      v19 = _mm_add_epi32(v16, v15);\n      v20 = _mm_add_epi32(_mm_shuffle_epi32(v19, 78), v19);\n      v11 = _mm_cvtsi128_si32(_mm_add_epi32(_mm_shuffle_epi32(v20, 229), v20));\n    }\n    else\n    {\n      v11 = 1;\n      v12 = 0LL;\n    }\n    do\n      v11 += *(_DWORD *)(v10 + 8 * v12++ + 4) == 7;\n    while ( v12 < v9 );\n    if ( v11 > dword_565C9C )\n      return result;\n  }\n  if ( !(*(_BYTE *)(v5 + 152) & 1)\n    || (result = (*(__int64 (__fastcall **)(_QWORD, __int64, _QWORD, _QWORD))(v5 + 168))(\n                   v4,\n                   v8,\n                   (unsigned int)result,\n                   0LL),\n        (_DWORD)result) )\n  {\n    v21 = dword_8A8170;\n    if ( dword_8A8170 > 39 )\n    {\n      v22 = dword_8A8180[0];\n      v23 = dword_8A8180[0] + 1;\n      v24 = ((_BYTE)dword_8A8170 + 3) & 3;\n      if ( (unsigned __int64)(unsigned int)dword_8A8170 - 2 >= 3 )\n      {\n        v25 = 1;\n        v26 = 0;\n        v27 = 1LL;\n        v28 = (int *)&unk_8A81E0;\n        do\n        {\n          if ( !v25 )\n            v22 = v23;\n          v29 = *(v28 - 18);\n          v30 = *(v28 - 12);\n          if ( v29 < v22 )\n            v26 = v27;\n          if ( v29 <= v22 )\n            v22 = *(v28 - 18);\n          v31 = v27 + 1;\n          if ( v30 >= v22 )\n            v31 = v26;\n          if ( v30 <= v22 )\n            v22 = *(v28 - 12);\n          v32 = *(v28 - 6);\n          v26 = v27 + 2;\n          if ( v32 >= v22 )\n            v26 = v31;\n          v23 = v22;\n          if ( v32 <= v22 )\n            v23 = *(v28 - 6);\n          v22 = *v28;\n          v25 = *v28 < v23;\n          if ( *v28 < v23 )\n            v26 = v27 + 3;\n          v27 += 4LL;\n          v28 += 24;\n        }\n        while ( (unsigned int)dword_8A8170 - v24 != v27 );\n      }\n      else\n      {\n        v25 = 1;\n        v26 = 0;\n        v27 = 1LL;\n      }\n      v21 = v26;\n      if ( ((_BYTE)dword_8A8170 + 3) & 3 )\n      {\n        v33 = &dword_8A8180[6 * v27];\n        v34 = -v24;\n        do\n        {\n          v35 = v22;\n          if ( !v25 )\n            v35 = v23;\n          v22 = *v33;\n          v25 = *v33 < v35;\n          v21 = v27;\n          if ( *v33 >= v35 )\n            v21 = v26;\n          LODWORD(v27) = v27 + 1;\n          v33 += 6;\n          v26 = v21;\n          v23 = v35;\n          ++v34;\n        }\n        while ( v34 );\n      }\n      if ( v21 < 0x28 )\n        goto LABEL_47;\n    }\n    else\n    {\n      ++dword_8A8170;\n      if ( v21 < 0x28 )\n      {\nLABEL_47:\n        result = (unsigned int)(signed int)*(float *)(v5 + 124);\n        v36 = 8LL * (signed int)v21;\n        dword_8A8180[(unsigned __int64)(3 * v36) / 4] = result;\n        dword_8A8184[(unsigned __int64)(3 * v36) / 4] = v7;\n        qword_8A8188[(unsigned __int64)(3 * v36) / 8] = v5;\n        dword_8A8190[(unsigned __int64)(3 * v36) / 4] = v4;\n        return result;\n      }\n    }\n    sub_4340E0((__int64)\"engine/handicap.c\", 0x194u, (__int64)\"r >= 0 && r < 40\", 0xFFFFFFFF, 0xFFFFFFFF);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x45a600L", 
            "funcEndAddr": "0x45a89eL", 
            "funcName": "sub_45A600"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_45A8A0(signed int a1, int a2, int a3, _DWORD *a4)\n{\n  int v4; // er12\n  int v5; // er13\n  __int64 v6; // r14\n  signed __int64 v7; // rbx\n  signed __int64 v8; // rbp\n  signed int *v9; // rax\n  int v10; // ecx\n  __int64 v11; // rdx\n  signed __int64 v12; // rdi\n  signed __int64 v13; // r12\n  __int64 v14; // rbp\n  signed __int64 v15; // rbx\n  signed __int64 v16; // r14\n  int v17; // eax\n  signed __int64 v18; // r8\n  signed __int64 v19; // rdx\n  unsigned int v20; // esi\n  __int64 v21; // rdi\n  signed __int64 v22; // rbx\n  char *v23; // rdx\n  __int64 v24; // rsi\n  unsigned int v25; // edi\n  __int64 v26; // rbp\n  bool v27; // zf\n  bool v28; // sf\n  unsigned __int8 v29; // of\n  unsigned int v30; // er13\n  signed int v31; // esi\n  signed __int64 v32; // rbp\n  int v33; // er13\n  __int64 v34; // r15\n  signed __int64 v35; // r14\n  int v36; // edx\n  int v37; // er8\n  __int64 v38; // rcx\n  int v39; // er11\n  char *v40; // r12\n  int v41; // er9\n  __int128 v42; // xmm0\n  __int64 v43; // rdx\n  signed int v44; // ebp\n  char *v45; // rdi\n  int v46; // esi\n  __int128 v47; // xmm2\n  bool v48; // al\n  signed __int64 v49; // rdx\n  signed __int64 v50; // rcx\n  char *v51; // rdx\n  signed int v52; // esi\n  int v53; // er12\n  __int64 v54; // r15\n  int v55; // er8\n  __int64 v56; // rdi\n  signed int v57; // er9\n  int v58; // er11\n  char *v59; // rbx\n  int v60; // ebp\n  __int128 v61; // xmm0\n  int v62; // ecx\n  signed int v63; // esi\n  __int64 v64; // rax\n  __int128 v65; // xmm2\n  bool v66; // r14\n  __int64 v67; // rax\n  int v68; // ecx\n  int v69; // edx\n  int v70; // edx\n  int v71; // eax\n  int v72; // ecx\n  unsigned __int64 v73; // r13\n  unsigned __int64 v74; // r14\n  signed __int64 v75; // r15\n  __int64 v76; // r8\n  int v77; // er12\n  __int64 v78; // rsi\n  unsigned __int64 v79; // r8\n  signed __int64 v80; // rbp\n  float v81; // xmm1_4\n  signed int v82; // ebx\n  double v83; // xmm0_8\n  signed int v84; // er11\n  signed int v85; // edx\n  __int64 v86; // rdx\n  __int64 v87; // rsi\n  unsigned __int64 v88; // rbp\n  __int64 v89; // r10\n  unsigned __int64 v90; // rax\n  signed __int64 v91; // rdi\n  signed int v92; // ecx\n  __int64 v93; // rsi\n  unsigned __int64 v94; // rbp\n  __int64 v95; // r10\n  unsigned __int64 v96; // rax\n  signed __int64 v97; // rdi\n  signed int v98; // ecx\n  __int64 v99; // rsi\n  unsigned __int64 v100; // r8\n  signed __int64 v101; // rbp\n  float v102; // xmm1_4\n  double v103; // xmm0_8\n  char v104; // r15\n  int v105; // er12\n  int v106; // esi\n  int v107; // edx\n  int v108; // ecx\n  int v109; // eax\n  __int64 v110; // rdi\n  int v111; // er14\n  __int64 v112; // rbp\n  __int64 v113; // rbp\n  __int64 v114; // rbp\n  __int64 v115; // rbp\n  signed __int64 v116; // rbx\n  char v117; // al\n  signed __int64 v118; // rbp\n  unsigned int v119; // ecx\n  signed __int64 v120; // rdx\n  __int64 v121; // rbp\n  char v122; // bl\n  signed __int64 v123; // rax\n  char v124; // cl\n  int v125; // ecx\n  int v126; // ecx\n  char v127; // cl\n  int v128; // ecx\n  int v129; // ecx\n  char v130; // cl\n  int v131; // ecx\n  int v132; // ecx\n  char v133; // cl\n  int v134; // ecx\n  int v135; // ecx\n  __int64 v136; // rax\n  __int64 v137; // rbx\n  signed __int64 v138; // r14\n  signed __int64 v139; // rbp\n  __int64 v140; // rax\n  int v141; // ecx\n  char v142; // dl\n  unsigned int v143; // edx\n  int v144; // ebx\n  signed __int64 v145; // rbp\n  _DWORD *v146; // rdx\n  int v147; // eax\n  signed __int64 v148; // rcx\n  char v150[8]; // [rsp+0h] [rbp-448h]\n  __int64 v151; // [rsp+8h] [rbp-440h]\n  __int64 v152; // [rsp+10h] [rbp-438h]\n  __int64 v153; // [rsp+18h] [rbp-430h]\n  unsigned int v154; // [rsp+20h] [rbp-428h]\n  int v155; // [rsp+24h] [rbp-424h]\n  int v156; // [rsp+28h] [rbp-420h]\n  int v157; // [rsp+2Ch] [rbp-41Ch]\n  __int64 v158; // [rsp+30h] [rbp-418h]\n  int *v159; // [rsp+38h] [rbp-410h]\n  _DWORD *v160; // [rsp+40h] [rbp-408h]\n  __int64 v161; // [rsp+48h] [rbp-400h]\n  char src[2]; // [rsp+50h] [rbp-3F8h]\n  char v163[2]; // [rsp+51h] [rbp-3F7h]\n  char v164; // [rsp+64h] [rbp-3E4h]\n  char v165[19]; // [rsp+65h] [rbp-3E3h]\n  char v166[359]; // [rsp+78h] [rbp-3D0h]\n  char v167; // [rsp+1DFh] [rbp-269h]\n  int v168[20]; // [rsp+1E0h] [rbp-268h]\n  int v169[20]; // [rsp+230h] [rbp-218h]\n  char s[456]; // [rsp+280h] [rbp-1C8h]\n\n  v160 = a4;\n  v4 = a3;\n  v5 = a2;\n  v154 = a1;\n  v6 = a1;\n  v155 = (unsigned __int8)byte_98A1B0[a1];\n  memset(s, 0, 0x190uLL);\n  memset(src, 0, 0x190uLL);\n  v7 = 4611686018427351899LL;\n  v8 = 21LL;\n  do\n  {\n    if ( byte_98A1B0[v8] != 3 && v8 == dword_90E63C[v7] && (unsigned int)sub_414710(v8, v154) )\n      sub_40BAB0(v8, (__int64)s, 1);\n    ++v8;\n    v7 += 95LL;\n  }\n  while ( v7 * 4 );\n  v9 = (signed int *)ptr;\n  v10 = *((_DWORD *)&xmmword_954FB0 + 19 * a1 + 1);\n  v11 = v10;\n  v12 = 104LL * v10;\n  if ( !*(_DWORD *)((char *)ptr + v12 + 48) )\n    return 0;\n  v156 = v4;\n  v159 = (int *)(76 * v6 + 9785268);\n  if ( *(_DWORD *)((char *)ptr + v12 + 44) > 0 )\n  {\n    v13 = 0LL;\n    do\n    {\n      v14 = *((signed int *)&xmmword_954FB0 + 19 * v9[26 * v9[26 * v11 + 1 + v13]] + 2);\n      if ( byte_98A1B0[v14] != (_BYTE)v155 )\n      {\n        v15 = 4611686018427351899LL;\n        v16 = 21LL;\n        do\n        {\n          if ( byte_98A1B0[v16] != 3 && v16 == dword_90E63C[v15] && (unsigned int)sub_414710(v16, v14) )\n            sub_40BAB0(v16, (__int64)src, 1);\n          ++v16;\n          v15 += 95LL;\n        }\n        while ( v15 * 4 );\n        v9 = (signed int *)ptr;\n        v10 = *v159;\n      }\n      ++v13;\n      v11 = v10;\n    }\n    while ( v13 < v9[26 * v10 + 11] );\n  }\n  if ( a2 )\n  {\n    if ( byte_98A1B0[a2] == 3 )\n      sub_4340E0((__int64)\"engine/surround.c\", 0x7Cu, (__int64)\"(board[apos] != 3)\", 0xFFFFFFFF, 0xFFFFFFFF);\n    src[a2] = 1;\n  }\n  v17 = dword_565C68;\n  v18 = 0xFFFFFFFFLL;\n  if ( dword_565C68 <= 0LL )\n  {\n    v22 = 0xFFFFFFFFLL;\n  }\n  else\n  {\n    v19 = 0LL;\n    v20 = 21;\n    do\n    {\n      v21 = 0LL;\n      while ( !src[v20 + v21] )\n      {\n        if ( ++v21 >= dword_565C68 )\n        {\n          v22 = 0xFFFFFFFFLL;\n          goto LABEL_30;\n        }\n      }\n      v10 = v20 + v21;\n      v22 = (unsigned int)v19;\n      if ( (_DWORD)v19 != -1 )\n        break;\nLABEL_30:\n      ++v19;\n      v20 += 20;\n    }\n    while ( v19 < dword_565C68 );\n    v169[0] = v10;\n    if ( dword_565C68 > 0 )\n    {\n      v23 = &v163[20 * dword_565C68];\n      v24 = dword_565C68;\n      do\n      {\n        v25 = v24 - 1;\n        v26 = 0LL;\n        while ( !v23[v26] )\n        {\n          if ( ++v26 >= dword_565C68 )\n          {\n            v18 = 0xFFFFFFFFLL;\n            goto LABEL_38;\n          }\n        }\n        v18 = v25;\n        if ( v25 != -1 )\n          break;\nLABEL_38:\n        v23 -= 20;\n        v29 = __OFSUB__(v24, 1LL);\n        v27 = v24 == 1;\n        v28 = v24-- - 1 < 0;\n      }\n      while ( !((unsigned __int8)(v28 ^ v29) | v27) );\n    }\n  }\n  v31 = ((unsigned __int64)(1717986919LL * v10) >> 63) + (1717986919LL * v10 >> 35);\n  v32 = 1LL;\n  v151 = v18;\n  v157 = v5;\n  v158 = v22;\n  if ( v31 <= (signed int)v18 )\n  {\n    v34 = (signed int)v18;\n    v35 = 1LL;\n    do\n    {\n      v33 = 0;\n      if ( v31 <= (signed int)v18 )\n      {\n        v36 = v10 - 20 * (((unsigned __int64)(1717986919LL * v10) >> 63) + (1717986919LL * v10 >> 35));\n        v37 = 1 - v31;\n        v38 = v31;\n        v39 = 20 * v31 + 21;\n        v40 = &v165[20 * v31];\n        v41 = 1 - v36;\n        v42 = 0LL;\n        v33 = 0;\n        do\n        {\n          if ( dword_565C68 > 0 )\n          {\n            v43 = (unsigned int)dword_565C68;\n            v44 = v41;\n            v45 = v40;\n            v46 = v39;\n            do\n            {\n              if ( *v45 )\n              {\n                v47 = 0LL;\n                *(float *)&v47 = (float)v44 / (float)(v37 + v38);\n                v48 = v33 == 0 || *(float *)&v42 > *(float *)&v47;\n                if ( !v48 )\n                  v47 = v42;\n                if ( v48 )\n                  v33 = v46;\n                v42 = v47;\n              }\n              ++v46;\n              ++v45;\n              ++v44;\n              --v43;\n            }\n            while ( v43 );\n          }\n          v39 += 20;\n          v40 += 20;\n          v29 = __OFSUB__(v38, v34);\n          v28 = v38++ - v34 < 0;\n        }\n        while ( v28 ^ v29 );\n      }\n      if ( byte_98A1B0[v33] == 3 )\n        sub_4340E0((__int64)\"engine/surround.c\", 0xAFu, (__int64)\"(board[best_found] != 3)\", 0xFFFFFFFF, 0xFFFFFFFF);\n      v169[v35++] = v33;\n      v31 = ((unsigned __int64)(1717986919LL * v33) >> 63) + (1717986919LL * v33 >> 35);\n      v10 = v33;\n      LODWORD(v18) = v151;\n    }\n    while ( v31 <= (signed int)v151 );\n    v17 = dword_565C68;\n    v32 = v35;\n    LODWORD(v22) = v158;\n    if ( dword_565C68 <= 0 )\n      goto LABEL_67;\nLABEL_62:\n    v49 = 20LL * (signed int)v22;\n    v50 = v17 + 1LL;\n    v17 += v49 + 20;\n    v51 = &v150[v49 + 101];\n    while ( !v51[v50 - 2] )\n    {\n      --v50;\n      --v17;\n      if ( v50 < 2 )\n        goto LABEL_67;\n    }\n    v168[0] = v17;\n    goto LABEL_67;\n  }\n  v33 = v10;\n  if ( dword_565C68 > 0 )\n    goto LABEL_62;\nLABEL_67:\n  v52 = ((unsigned __int64)(1717986919LL * v17) >> 63) + (1717986919LL * v17 >> 35);\n  v152 = v32;\n  if ( v52 <= (signed int)v18 )\n  {\n    v54 = (signed int)v18;\n    v153 = 1LL;\n    do\n    {\n      v53 = 0;\n      if ( v52 <= (signed int)v18 )\n      {\n        v55 = 1 - v52;\n        v56 = v52;\n        v57 = dword_565C68 - (v17 - 20 * (((unsigned __int64)(1717986919LL * v17) >> 63) + (1717986919LL * v17 >> 35)));\n        v58 = dword_565C68 + 20 * v52 + 20;\n        v59 = &v164 + 20 * v52;\n        v60 = 0;\n        v61 = 0LL;\n        do\n        {\n          if ( dword_565C68 <= 0 )\n          {\n            v53 = v60;\n          }\n          else\n          {\n            v62 = v58;\n            v63 = v57;\n            v64 = dword_565C68;\n            do\n            {\n              v27 = v59[v64--] == 0;\n              if ( v27 )\n              {\n                v53 = v60;\n              }\n              else\n              {\n                v65 = 0LL;\n                *(float *)&v65 = (float)v63 / (float)(v55 + v56);\n                v66 = v60 == 0 || *(float *)&v65 > *(float *)&v61;\n                v53 = v62;\n                if ( !v66 )\n                  v53 = v60;\n                if ( !v66 )\n                  v65 = v61;\n                v61 = v65;\n                v60 = v53;\n              }\n              --v63;\n              --v62;\n            }\n            while ( v64 + 1 > 1 );\n          }\n          v58 += 20;\n          v59 += 20;\n          v29 = __OFSUB__(v56, v54);\n          v28 = v56++ - v54 < 0;\n          v60 = v53;\n        }\n        while ( v28 ^ v29 );\n      }\n      if ( byte_98A1B0[v53] == 3 )\n        sub_4340E0((__int64)\"engine/surround.c\", 0xCFu, (__int64)\"(board[best_found] != 3)\", 0xFFFFFFFF, 0xFFFFFFFF);\n      v67 = v153;\n      v168[v153] = v53;\n      v153 = v67 + 1;\n      v52 = ((unsigned __int64)(1717986919LL * v53) >> 63) + (1717986919LL * v53 >> 35);\n      v17 = v53;\n      LODWORD(v18) = v151;\n    }\n    while ( v52 <= (signed int)v151 );\n    v17 = v168[0];\n    LODWORD(v32) = v152;\n    LODWORD(v22) = v158;\n  }\n  else\n  {\n    v153 = 1LL;\n    v53 = v17;\n  }\n  v68 = v169[0] - 20 * (((unsigned __int64)(1717986919LL * v169[0]) >> 63) + (1717986919LL * v169[0] >> 35));\n  v69 = v17 - 20 * (((unsigned __int64)(1717986919LL * v17) >> 63) + (1717986919LL * v17 >> 35));\n  v29 = __OFSUB__(v69, v68);\n  v70 = v69 - v68;\n  if ( !((v70 < 0) ^ v29) )\n  {\n    memset(&v164 + v68 + (signed __int64)(20 * (signed int)v22), 1, (unsigned int)v70 + 1LL);\n    LODWORD(v18) = v151;\n  }\n  v71 = v33 - 20 * (((unsigned __int64)(1717986919LL * v33) >> 63) + (1717986919LL * v33 >> 35));\n  v72 = 20 * (((unsigned __int64)(1717986919LL * v53) >> 63) + (1717986919LL * v53 >> 35));\n  if ( v53 - v72 >= v71 )\n  {\n    memset(&v164 + v71 + (signed __int64)(20 * (signed int)v18), 1, (unsigned int)(v53 - v72 - v71) + 1LL);\n    LODWORD(v18) = v151;\n  }\n  if ( (signed int)v22 + 1 < (signed int)v18 )\n  {\n    v73 = (unsigned int)v32;\n    v74 = (unsigned int)v153;\n    v161 = (unsigned int)(20 * v22 + 41);\n    v75 = (signed int)v22 + 1;\n    v76 = (unsigned int)(v18 - 1 - v22);\n    v77 = 0;\n    v151 = v76;\n    do\n    {\n      v85 = -1;\n      v84 = -1;\n      if ( (unsigned int)v32 < 2 )\n      {\n        if ( (unsigned int)v153 >= 2 )\n          goto LABEL_104;\n      }\n      else\n      {\n        v87 = 0LL;\n        v88 = 1LL;\n        while ( 1 )\n        {\n          v89 = v169[v88];\n          v90 = (unsigned __int64)(1717986919 * v89) >> 63;\n          v91 = 1717986919 * v89 >> 35;\n          v92 = v91 + v90 - 1;\n          if ( v75 < v92 )\n            break;\n          ++v88;\n          v87 += 0x100000000LL;\n          if ( v88 >= v73 )\n          {\n            v84 = -1;\n            goto LABEL_109;\n          }\n        }\n        v99 = *(int *)((char *)v169 + (v87 >> 30));\n        v100 = (unsigned __int64)(1717986919 * v99) >> 63;\n        v101 = 1717986919 * v99 >> 35;\n        v102 = (float)(v99 - 20 * (v100 + v101) - 1);\n        v103 = ceil(\n                 (float)((float)((float)((float)(v89 - 20 * (v90 + v91) - 1) - v102)\n                               * (float)((float)(signed int)v75 - (float)((signed int)v100 + v101 - 1)))\n                       / (float)((float)v92 - (float)((signed int)v100 + v101 - 1)))\n               + v102\n               + -0.001);\n        v85 = -1;\n        LODWORD(v76) = v151;\n        v84 = (signed int)v103;\nLABEL_109:\n        LODWORD(v32) = v152;\n        if ( (unsigned int)v153 >= 2 )\n        {\nLABEL_104:\n          v93 = 0LL;\n          v94 = 1LL;\n          while ( 1 )\n          {\n            v95 = v168[v94];\n            v96 = (unsigned __int64)(1717986919 * v95) >> 63;\n            v97 = 1717986919 * v95 >> 35;\n            v98 = v97 + v96 - 1;\n            if ( v75 < v98 )\n              break;\n            ++v94;\n            v93 += 0x100000000LL;\n            if ( v94 >= v74 )\n              goto LABEL_96;\n          }\n          v78 = *(int *)((char *)v168 + (v93 >> 30));\n          v79 = (unsigned __int64)(1717986919 * v78) >> 63;\n          v80 = 1717986919 * v78 >> 35;\n          v81 = (float)(v78 - 20 * (v79 + v80) - 1);\n          v82 = v84;\n          v83 = floor(\n                  (float)((float)((float)((float)(v95 - 20 * (v96 + v97) - 1) - v81)\n                                * (float)((float)(signed int)v75 - (float)((signed int)v79 + v80 - 1)))\n                        / (float)((float)v98 - (float)((signed int)v79 + v80 - 1)))\n                + v81\n                + 0.001);\n          v84 = v82;\n          LODWORD(v76) = v151;\n          v85 = (signed int)v83;\nLABEL_96:\n          LODWORD(v32) = v152;\n          v29 = __OFSUB__(v85, v84);\n          v86 = (unsigned int)(v85 - v84);\n          if ( ((signed int)v86 < 0) ^ v29 )\n            goto LABEL_112;\nLABEL_111:\n          memset(&src[20 * v77 + (signed int)v161 + (signed __int64)v84], 1, v86 + 1);\n          LODWORD(v76) = v151;\n          goto LABEL_112;\n        }\n      }\n      v86 = (unsigned int)(-1 - v84);\n      if ( v84 <= -1 )\n        goto LABEL_111;\nLABEL_112:\n      ++v75;\n      ++v77;\n    }\n    while ( v77 != (_DWORD)v76 );\n  }\n  v104 = v155;\n  v105 = 3 - v155;\n  v106 = dword_5641BC + 21;\n  v107 = dword_5641B8 + 21;\n  v108 = dword_5641B4 + 21;\n  v109 = dword_5641B0[0] + 21;\n  v110 = 0LL;\n  v111 = v156;\n  do\n  {\n    if ( byte_98A1C5[v110] != 3 && v165[v110] == 1 )\n    {\n      v112 = v109 + (signed int)v110;\n      if ( byte_98A1B0[v112] != 3 && !src[v112] )\n        src[v112] = 2;\n      v113 = v108 + (signed int)v110;\n      if ( byte_98A1B0[v113] != 3 && !src[v113] )\n        src[v113] = 2;\n      v114 = v107 + (signed int)v110;\n      if ( byte_98A1B0[v114] != 3 && !src[v114] )\n        src[v114] = 2;\n      v115 = v106 + (signed int)v110;\n      if ( byte_98A1B0[v115] != 3 && !src[v115] )\n        src[v115] = 2;\n    }\n    ++v110;\n  }\n  while ( v110 != 379 );\n  v116 = 21LL;\n  do\n  {\n    v117 = byte_98A1B0[v116];\n    if ( v117 != 3 && v117 == v104 && src[v116] == 1 )\n    {\n      v110 = v154;\n      if ( (unsigned int)sub_416160(v154, v116) )\n      {\n        if ( !s[v116] )\n        {\n          v118 = 21LL;\n          do\n          {\n            if ( byte_98A1B0[v118] != 3 )\n            {\n              v110 = (unsigned int)v118;\n              if ( (unsigned int)sub_414710(v118, v116) )\n                s[v118] = 2;\n            }\n            ++v118;\n          }\n          while ( v118 != 400 );\n        }\n      }\n    }\n    ++v116;\n  }\n  while ( v116 != 400 );\n  v30 = 1;\n  if ( dword_565C68 <= 0LL )\n    goto LABEL_152;\n  v119 = 21;\n  v120 = 0LL;\n  do\n  {\n    v110 = (__int64)&s[v119];\n    v121 = 0LL;\n    while ( 1 )\n    {\n      if ( *(_BYTE *)(v110 + v121) )\n      {\n        v122 = src[v119 + v121];\n        if ( v122 == 2 )\n        {\n          v30 = 2;\n          goto LABEL_149;\n        }\n        if ( !v122 )\n          break;\n      }\nLABEL_149:\n      if ( ++v121 >= dword_565C68 )\n        goto LABEL_150;\n    }\n    v30 = 0;\nLABEL_150:\n    ++v120;\n    v119 += 20;\n  }\n  while ( v120 < dword_565C68 );\n  if ( v30 )\n  {\nLABEL_152:\n    v123 = 21LL;\n    while ( 1 )\n    {\n      if ( byte_98A1B0[v123] != 3 && s[v123] )\n      {\n        if ( !byte_98A19C[v123] )\n        {\n          v124 = byte_98A188[v123];\n          if ( v124 != 3 && v124 == v104 && *((_BYTE *)&v156 + v123) != 1 )\n          {\n            v125 = (unsigned __int8)byte_98A19D[v123];\n            if ( v125 != 3 && v105 != v125 )\n            {\n              v126 = (unsigned __int8)byte_98A19B[v123];\n              if ( v126 != 3 && v105 != v126 )\n                break;\n            }\n          }\n        }\n        if ( !byte_98A1C4[v123] )\n        {\n          v127 = byte_98A1D8[v123];\n          if ( v127 != 3 && v127 == v104 && v166[v123] != 1 )\n          {\n            v128 = (unsigned __int8)byte_98A1C5[v123];\n            if ( v128 != 3 && v105 != v128 )\n            {\n              v129 = (unsigned __int8)byte_98A1C3[v123];\n              if ( v129 != 3 && v105 != v129 )\n                break;\n            }\n          }\n        }\n        if ( !byte_98A1B1[v123] )\n        {\n          v130 = byte_98A1B2[v123];\n          if ( v130 != 3 && v130 == v104 && v163[v123 + 1] != 1 )\n          {\n            v131 = (unsigned __int8)byte_98A19D[v123];\n            if ( v131 != 3 && v105 != v131 )\n            {\n              v132 = (unsigned __int8)byte_98A1C5[v123];\n              if ( v132 != 3 && v105 != v132 )\n                break;\n            }\n          }\n        }\n        if ( !byte_98A1AF[v123] )\n        {\n          v133 = byte_98A1AE[v123];\n          if ( v133 != 3 && v133 == v104 && *((_BYTE *)&v161 + v123 + 6) != 1 )\n          {\n            v134 = (unsigned __int8)byte_98A19B[v123];\n            if ( v134 != 3 && v105 != v134 )\n            {\n              v135 = (unsigned __int8)byte_98A1C3[v123];\n              if ( v135 != 3 && v105 != v135 )\n                break;\n            }\n          }\n        }\n      }\n      if ( (unsigned __int64)++v123 >= 0x190 )\n        goto LABEL_195;\n    }\n    v30 = 0;\n    if ( v111 == 1 )\n      goto LABEL_198;\nLABEL_196:\n    if ( v111 == 2 && v30 )\n      goto LABEL_198;\n  }\n  else\n  {\n    v30 = 0;\nLABEL_195:\n    if ( v111 != 1 )\n      goto LABEL_196;\nLABEL_198:\n    sub_44A2C0(v110);\n    v136 = (unsigned int)dword_565C68;\n    if ( dword_565C68 > 0 )\n    {\n      LODWORD(v137) = 21;\n      v138 = 0LL;\n      do\n      {\n        v137 = (unsigned int)v137;\n        if ( (signed int)v136 > 0 )\n        {\n          v139 = 0LL;\n          do\n          {\n            v140 = (unsigned __int8)src[v137 + v139];\n            if ( s[v137 + v139] )\n            {\n              v141 = 1;\n              if ( (_BYTE)v140 != 1 )\n                v141 = ((_BYTE)v140 == 2) | 2;\n            }\n            else\n            {\n              v141 = 4;\n              if ( (_BYTE)v140 != 1 )\n              {\n                v141 = 0;\n                if ( (_BYTE)v140 == 2 )\n                  v141 = 6;\n              }\n            }\n            v142 = byte_98A1B0[v137 + v139];\n            if ( v142 == 2 )\n            {\n              v143 = 88;\n            }\n            else if ( v142 == 1 )\n            {\n              v143 = 79;\n            }\n            else\n            {\n              v143 = 4 * ((_BYTE)v140 == 0) + 42;\n            }\n            sub_44A340(v140, v143, v141, v138, v139++);\n            v136 = dword_565C68;\n          }\n          while ( v139 < dword_565C68 );\n        }\n        ++v138;\n        LODWORD(v137) = v137 + 20;\n      }\n      while ( v138 < (signed int)v136 );\n    }\n    sub_44A570(v136);\n  }\n  if ( !v157 )\n  {\n    if ( v30 )\n    {\n      v144 = dword_98A7FC;\n      if ( dword_98A7FC <= 9 )\n      {\n        v145 = 101LL * dword_98A7FC;\n        memcpy((char *)&unk_982594 + v145 * 4, src, 0x190uLL);\n        dword_982590[v145] = *v159;\n        dword_98A7FC = v144 + 1;\n      }\n    }\n  }\n  v146 = v160;\n  if ( v160 )\n  {\n    *v160 = 0;\n    v147 = 0;\n    v148 = -378LL;\n    if ( byte_98A33F[-378] == 3 )\n      goto LABEL_226;\nLABEL_222:\n    if ( *(&v167 + v148) == 1 )\n    {\n      *v146 = ++v147;\n      if ( v148 )\n        goto LABEL_227;\n    }\n    else\n    {\nLABEL_226:\n      while ( v148 )\n      {\nLABEL_227:\n        if ( byte_98A340[v148] != 3 && *((_BYTE *)v168 + v148) == 1 )\n          *v146 = ++v147;\n        v148 += 2LL;\n        if ( byte_98A33F[v148] != 3 )\n          goto LABEL_222;\n      }\n    }\n  }\n  return v30;\n}\n", 
            "funcStartAddr": "0x45a8a0L", 
            "funcEndAddr": "0x45b8a1L", 
            "funcName": "sub_45A8A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_45B8D0(int a1, signed int a2)\n{\n  __int64 result; // rax\n\n  if ( *((_DWORD *)ptr + 26 * *((signed int *)&xmmword_954FB0 + 19 * a2 + 1) + 24) )\n    result = 0LL;\n  else\n    result = sub_45A8A0(a2, a1, 0, 0LL);\n  return result;\n}\n", 
            "funcStartAddr": "0x45b8d0L", 
            "funcEndAddr": "0x45b902L", 
            "funcName": "sub_45B8D0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_45B920(int a1, int a2)\n{\n  signed __int64 result; // rax\n  int *v3; // rdx\n  int v4; // edi\n  signed __int64 v5; // rcx\n\n  result = 0xFFFFFFFFLL;\n  if ( dword_98A7FC > 0LL )\n  {\n    v3 = dword_982590;\n    v4 = *((_DWORD *)&xmmword_954FB0 + 19 * a1 + 1);\n    v5 = 0LL;\n    while ( *v3 != v4 )\n    {\n      ++v5;\n      v3 += 101;\n      if ( v5 >= dword_98A7FC )\n        return result;\n    }\n    result = (unsigned int)*((char *)v3 + a2 + 4);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x45b920L", 
            "funcEndAddr": "0x45b96eL", 
            "funcName": "sub_45B920"
        }, 
        {
            "decompiledFuncCode": "char *__fastcall sub_45B970(const char **a1, FILE *a2)\n{\n  FILE *v2; // r15\n  const char **v3; // rbp\n  char *result; // rax\n  __int64 v5; // rcx\n  char *v6; // rsi\n  char v7; // dl\n  char v8; // bl\n  char *v9; // r14\n  const char *v10; // rsi\n  int v11; // ebx\n  const char **v12; // rbx\n  char *v13; // r14\n  const char **v14; // rbp\n  bool v15; // zf\n  char v16; // [rsp+0h] [rbp-818h]\n  int v17; // [rsp+4h] [rbp-814h]\n  const char **v18; // [rsp+8h] [rbp-810h]\n  char s[1008]; // [rsp+10h] [rbp-808h]\n  char s1; // [rsp+400h] [rbp-418h]\n\n  v2 = a2;\n  v3 = a1;\n  v18 = a1 + 2;\n  while ( 1 )\n  {\n    result = fgets(s, 1000, v2);\n    if ( !result )\n      return result;\n    v5 = 0LL;\n    v6 = s;\n    while ( 1 )\n    {\n      while ( 1 )\n      {\n        v7 = s[v5];\n        if ( !v7 )\n          goto LABEL_13;\n        v8 = 32;\n        if ( v7 == 9 )\n          goto LABEL_8;\n        if ( (unsigned __int8)(v7 - 1) >= 9u && v7 != 127 && (unsigned __int8)(v7 - 11) >= 0x15u )\n          break;\nLABEL_4:\n        ++v5;\n      }\n      v8 = s[v5];\n      if ( v7 != 35 )\n      {\nLABEL_8:\n        *v6++ = v8;\n        goto LABEL_4;\n      }\nLABEL_13:\n      *v6 = 0;\n      if ( (unsigned int)__isoc99_sscanf(s, \"%d%n\", &dword_8A8540) == 1 )\n      {\n        v9 = &s[v17];\n      }\n      else\n      {\n        dword_8A8540 = -1;\n        v9 = s;\n      }\n      if ( (signed int)__isoc99_sscanf(v9, \" %s %n\", &s1) > 0 )\n        break;\n      result = fgets(s, 1000, v2);\n      v5 = 0LL;\n      v6 = s;\n      if ( !result )\n        return result;\n    }\n    v10 = *v3;\n    v11 = 0;\n    if ( !*v3 )\n      goto LABEL_25;\n    v12 = v3;\n    v13 = &v9[v17];\n    v14 = v18;\n    while ( strcmp(&s1, v10) )\n    {\n      v10 = *v14;\n      v14 += 2;\n      if ( !v10 )\n      {\n        v3 = v12;\n        v11 = 0;\n        goto LABEL_25;\n      }\n    }\n    result = (char *)((__int64 (__fastcall *)(char *))*(v14 - 1))(v13);\n    v15 = *(v14 - 2) == 0LL;\n    v3 = v12;\n    v11 = (signed int)result;\n    if ( v15 )\n    {\nLABEL_25:\n      result = (char *)sub_45BB40(\"unknown command\", v16);\n      if ( !v11 )\n        continue;\nLABEL_26:\n      if ( v11 == 1 )\n        result = (char *)sub_45BF90(\"! panic\\n\\n\", v16);\n      return result;\n    }\n    if ( (_DWORD)result )\n      goto LABEL_26;\n  }\n}\n", 
            "funcStartAddr": "0x45b970L", 
            "funcEndAddr": "0x45bb37L", 
            "funcName": "sub_45B970"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_45BB40(char *format, ...)\n{\n  gcc_va_list va; // [rsp+0h] [rbp-D8h]\n\n  sub_45BF90(\"?\", va[0].gp_offset);\n  if ( dword_8A8540 < 0 )\n    sub_45BF90(\" \", va[0].gp_offset);\n  else\n    sub_45BF90(\"%d \", va[0].gp_offset);\n  va_start(va, format);\n  vfprintf(stdout, format, va);\n  sub_45BF90(\"\\n\\n\", va[0].gp_offset);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x45bb40L", 
            "funcEndAddr": "0x45bc1dL", 
            "funcName": "sub_45BB40"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_45BC30(int a1)\n{\n  dword_565CA0 = a1;\n}\n", 
            "funcStartAddr": "0x45bc30L", 
            "funcEndAddr": "0x45bc37L", 
            "funcName": "sub_45BC30"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_45BC40(__int64 a1, __int64 a2)\n{\n  qword_8A8548 = a1;\n  qword_8A8550 = a2;\n}\n", 
            "funcStartAddr": "0x45bc40L", 
            "funcEndAddr": "0x45bc4fL", 
            "funcName": "sub_45BC40"
        }, 
        {
            "decompiledFuncCode": "signed int sub_45BC50(char *a1, ...)\n{\n  char *v1; // rbx\n  signed int result; // eax\n  int v3; // edi\n  __int64 v4; // rdx\n  int *v5; // rax\n  FILE *v6; // rdi\n  const char *v7; // rsi\n  int *v8; // rax\n  unsigned int *v9; // rax\n  double *v10; // rax\n  __int64 v11; // rcx\n  unsigned int v12; // edx\n  int v13; // eax\n  int *v14; // rdx\n  const char **v15; // rax\n  int v16; // eax\n  FILE *v17; // rcx\n  const char *v18; // rdi\n  int *v19; // rax\n  int v20; // ecx\n  gcc_va_list va; // [rsp+0h] [rbp-E8h]\n  int v22; // [rsp+18h] [rbp-D0h]\n  int v23; // [rsp+1Ch] [rbp-CCh]\n\n  va_start(va, a1);\n  v1 = a1;\n  result = 8;\n  while ( 1 )\n  {\n    while ( 1 )\n    {\n      v3 = *v1;\n      if ( v3 != 37 )\n        break;\n      v4 = (unsigned int)(v1++)[1];\n      switch ( (_DWORD)v4 )\n      {\n        case 0x43:\n          if ( (unsigned __int64)(signed int)va[0].gp_offset > 0x28 )\n          {\n            v5 = (int *)va[0].overflow_arg_area;\n            va[0].overflow_arg_area = (char *)va[0].overflow_arg_area + 8;\n          }\n          else\n          {\n            v5 = (int *)((char *)va[0].reg_save_area + (signed int)va[0].gp_offset);\n            va[0].gp_offset += 8;\n          }\n          v16 = *v5;\n          if ( v16 == 1 )\n          {\n            v17 = stdout;\n            v18 = \"white\";\n          }\n          else\n          {\n            v17 = stdout;\n            if ( v16 == 2 )\n              v18 = \"black\";\n            else\n              v18 = \"empty\";\n          }\n          result = fwrite(v18, 5uLL, 1uLL, v17);\n          ++v1;\n          continue;\n        case 0x63:\n          if ( (unsigned __int64)(signed int)va[0].gp_offset > 0x28 )\n          {\n            v8 = (int *)va[0].overflow_arg_area;\n            va[0].overflow_arg_area = (char *)va[0].overflow_arg_area + 8;\n          }\n          else\n          {\n            v8 = (int *)((char *)va[0].reg_save_area + (signed int)va[0].gp_offset);\n            va[0].gp_offset += 8;\n          }\n          v3 = *v8;\n          goto LABEL_2;\n        case 0x64:\n          if ( (unsigned __int64)(signed int)va[0].gp_offset > 0x28 )\n          {\n            v9 = (unsigned int *)va[0].overflow_arg_area;\n            va[0].overflow_arg_area = (char *)va[0].overflow_arg_area + 8;\n          }\n          else\n          {\n            v9 = (unsigned int *)((char *)va[0].reg_save_area + (signed int)va[0].gp_offset);\n            va[0].gp_offset += 8;\n          }\n          v4 = *v9;\n          v6 = stdout;\n          v7 = \"%d\";\n          goto LABEL_28;\n        case 0x66:\n          if ( (unsigned __int64)(signed int)va[0].fp_offset > 0xA0 )\n          {\n            v10 = (double *)va[0].overflow_arg_area;\n            va[0].overflow_arg_area = (char *)va[0].overflow_arg_area + 8;\n          }\n          else\n          {\n            v10 = (double *)((char *)va[0].reg_save_area + (signed int)va[0].fp_offset);\n            va[0].fp_offset += 16;\n          }\n          result = fprintf(stdout, \"%f\", *v10, *(_QWORD *)&va[0].gp_offset);\n          ++v1;\n          continue;\n        case 0x6D:\n          v11 = (signed int)va[0].gp_offset;\n          if ( (unsigned __int64)(signed int)va[0].gp_offset >= 0x29 )\n          {\n            v19 = (int *)va[0].overflow_arg_area;\n            va[0].overflow_arg_area = (char *)va[0].overflow_arg_area + 8;\n            v13 = *v19;\n          }\n          else\n          {\n            v12 = va[0].gp_offset + 8;\n            va[0].gp_offset = v12;\n            v13 = *(_DWORD *)((char *)va[0].reg_save_area + v11);\n            if ( v12 <= 0x28 )\n            {\n              v14 = (int *)((char *)va[0].reg_save_area + (signed int)v12);\n              va[0].gp_offset = v11 + 16;\n              goto LABEL_33;\n            }\n          }\n          v14 = (int *)va[0].overflow_arg_area;\n          va[0].overflow_arg_area = (char *)va[0].overflow_arg_area + 8;\nLABEL_33:\n          v20 = *v14;\n          v23 = v13;\n          v22 = v20;\n          result = sub_45C460(1LL, &v23, &v22);\n          ++v1;\n          break;\n        case 0x73:\n          if ( (unsigned __int64)(signed int)va[0].gp_offset > 0x28 )\n          {\n            v15 = (const char **)va[0].overflow_arg_area;\n            va[0].overflow_arg_area = (char *)va[0].overflow_arg_area + 8;\n          }\n          else\n          {\n            v15 = (const char **)((char *)va[0].reg_save_area + (signed int)va[0].gp_offset);\n            va[0].gp_offset += 8;\n          }\n          result = fputs(*v15, stdout);\n          ++v1;\n          continue;\n        default:\n          v6 = stdout;\n          v7 = \"\\n\\nUnknown format character '%c'\\n\";\nLABEL_28:\n          result = fprintf(v6, v7, v4, *(_QWORD *)&va[0].gp_offset);\n          ++v1;\n          continue;\n      }\n    }\n    if ( !(_BYTE)v3 )\n      return result;\nLABEL_2:\n    result = _IO_putc(v3, stdout);\n    ++v1;\n  }\n}\n", 
            "funcStartAddr": "0x45bc50L", 
            "funcEndAddr": "0x45bf6bL", 
            "funcName": "sub_45BC50"
        }, 
        {
            "decompiledFuncCode": "unsigned __int64 __fastcall sub_45BF70(unsigned int a1, unsigned int a2)\n{\n  unsigned __int64 v3; // [rsp+0h] [rbp-8h]\n\n  v3 = __PAIR__(a1, a2);\n  sub_45C460(1LL, (char *)&v3 + 4, &v3);\n  return v3;\n}\n", 
            "funcStartAddr": "0x45bf70L", 
            "funcEndAddr": "0x45bf8cL", 
            "funcName": "sub_45BF70"
        }, 
        {
            "decompiledFuncCode": "int sub_45BF90(char *format, ...)\n{\n  gcc_va_list va; // [rsp+0h] [rbp-D8h]\n\n  va_start(va, format);\n  return vfprintf(stdout, format, va);\n}\n", 
            "funcStartAddr": "0x45bf90L", 
            "funcEndAddr": "0x45c02dL", 
            "funcName": "sub_45BF90"
        }, 
        {
            "decompiledFuncCode": "int __usercall sub_45C030@<eax>(__int64 a1@<rax>, int a2@<edi>)\n{\n  char *v2; // rdi\n  int result; // eax\n\n  if ( a2 )\n    v2 = \"?\";\n  else\n    v2 = \"=\";\n  sub_45BF90(v2, a1);\n  if ( dword_8A8540 < 0 )\n    result = sub_45BF90(\" \");\n  else\n    result = sub_45BF90(\"%d \");\n  return result;\n}\n", 
            "funcStartAddr": "0x45c030L", 
            "funcEndAddr": "0x45c06cL", 
            "funcName": "sub_45C030"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_45C070@<rax>(__int64 a1@<rax>)\n{\n  sub_45BF90(\"\\n\\n\", a1);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x45c070L", 
            "funcEndAddr": "0x45c081L", 
            "funcName": "sub_45C070"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_45C090(char *format, ...)\n{\n  gcc_va_list va; // [rsp+0h] [rbp-D8h]\n\n  sub_45BF90(\"=\");\n  if ( dword_8A8540 < 0 )\n    sub_45BF90(\" \");\n  else\n    sub_45BF90(\"%d \");\n  va_start(va, format);\n  vfprintf(stdout, format, va);\n  sub_45BF90(\"\\n\\n\", format);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x45c090L", 
            "funcEndAddr": "0x45c16dL", 
            "funcName": "sub_45C090"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_45C170(__int64 a1, signed int *a2)\n{\n  unsigned int v2; // er15\n  signed __int64 v3; // rbp\n  __int32_t v4; // ebx\n  signed int v5; // ebx\n  char s[7]; // [rsp+5h] [rbp-33h]\n  unsigned int v8; // [rsp+Ch] [rbp-2Ch]\n\n  v2 = 0;\n  if ( (unsigned int)__isoc99_sscanf(a1, \"%6s%n\", s) == 1 )\n  {\n    if ( (signed int)strlen(s) > 0 )\n    {\n      v3 = 0LL;\n      do\n      {\n        v4 = s[v3];\n        if ( (unsigned int)(v4 + 128) <= 0x17F )\n          v4 = (*__ctype_tolower_loc())[v4];\n        s[v3++] = v4;\n      }\n      while ( v3 < (signed int)strlen(s) );\n    }\n    v5 = 2;\n    if ( !strcmp(s, \"b\") || !strcmp(s, \"black\") || (v5 = 1, !strcmp(s, \"w\")) || !strcmp(s, \"white\") )\n    {\n      *a2 = v5;\n      v2 = v8;\n    }\n  }\n  return v2;\n}\n", 
            "funcStartAddr": "0x45c170L", 
            "funcEndAddr": "0x45c264L", 
            "funcName": "sub_45C170"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_45C270(__int64 a1, _DWORD *a2, _DWORD *a3)\n{\n  _DWORD *v3; // r14\n  unsigned int v4; // er12\n  __int32_t v5; // ebp\n  __int64 v6; // r13\n  unsigned int v7; // er15\n  __int32_t v8; // ebx\n  signed int v10; // eax\n  int v11; // ecx\n  __int64 v12; // rdi\n  _DWORD *v13; // rdx\n  __int64 v14; // rsi\n  char v15; // [rsp+7h] [rbp-41h]\n  unsigned int v16; // [rsp+8h] [rbp-40h]\n  int v17; // [rsp+Ch] [rbp-3Ch]\n  _DWORD *v18; // [rsp+10h] [rbp-38h]\n\n  v3 = a3;\n  v4 = 0;\n  if ( (unsigned int)__isoc99_sscanf(a1, \" %c%d%n\", &v15) == 2 )\n  {\n    v18 = a2;\n    v5 = v15;\n    v6 = v15;\n    v7 = v15 + 128;\n    v8 = v15;\n    if ( v7 <= 0x17F )\n      v8 = (*__ctype_tolower_loc())[v6];\n    if ( v8 != 105 )\n    {\n      *v3 = v8 - 97;\n      if ( v7 <= 0x17F )\n        v5 = (*__ctype_tolower_loc())[v6];\n      if ( v5 >= 106 )\n        *v3 = v8 - 98;\n      v10 = dword_565CA0;\n      v11 = v17;\n      v12 = (unsigned int)(dword_565CA0 - v17);\n      v13 = v18;\n      *v18 = v12;\n      if ( v11 > 0 && (signed int)v12 >= 0 )\n      {\n        v14 = (unsigned int)*v3;\n        if ( (signed int)v14 >= 0 && (signed int)v14 < v10 )\n        {\n          if ( qword_8A8548 )\n            qword_8A8548(v12, v14, v13, v3);\n          v4 = v16;\n        }\n      }\n    }\n  }\n  return v4;\n}\n", 
            "funcStartAddr": "0x45c270L", 
            "funcEndAddr": "0x45c34fL", 
            "funcName": "sub_45C270"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_45C350(__int64 a1, signed int *a2, _DWORD *a3, _DWORD *a4)\n{\n  _DWORD *v4; // r14\n  _DWORD *v5; // r15\n  int v6; // eax\n  int v7; // er12\n  __int64 v8; // rbp\n  int v9; // ebx\n  unsigned int v10; // ebx\n  signed __int64 v11; // rbp\n  __int32_t v12; // er14\n  bool v13; // zf\n  _DWORD *v14; // rax\n  char s[6]; // [rsp+6h] [rbp-42h]\n  int v17; // [rsp+Ch] [rbp-3Ch]\n  _DWORD *v18; // [rsp+10h] [rbp-38h]\n\n  v4 = a4;\n  v5 = a3;\n  v6 = sub_45C170(a1, a2);\n  v7 = v6;\n  if ( !v6 )\n    return 0;\n  v8 = v6 + a1;\n  v9 = sub_45C270(v8, v5, v4);\n  v17 = v9;\n  if ( v9 )\n    return (unsigned int)(v7 + v9);\n  v10 = 0;\n  if ( (unsigned int)__isoc99_sscanf(v8, \"%5s%n\", s) == 1 )\n  {\n    v18 = v4;\n    if ( (signed int)strlen(s) > 0 )\n    {\n      v11 = 0LL;\n      do\n      {\n        v12 = s[v11];\n        if ( (unsigned int)(v12 + 128) <= 0x17F )\n          v12 = (*__ctype_tolower_loc())[v12];\n        s[v11++] = v12;\n      }\n      while ( v11 < (signed int)strlen(s) );\n    }\n    v13 = strcmp(s, \"pass\") == 0;\n    v14 = v18;\n    if ( v13 )\n    {\n      *v5 = -1;\n      *v14 = -1;\n      v9 = v17;\n      return (unsigned int)(v7 + v9);\n    }\n  }\n  return v10;\n}\n", 
            "funcStartAddr": "0x45c350L", 
            "funcEndAddr": "0x45c459L", 
            "funcName": "sub_45C350"
        }, 
        {
            "decompiledFuncCode": "int __usercall sub_45C460@<eax>(unsigned __int64 a1@<rax>, _DWORD *a2@<rdx>, signed int a3@<edi>, __int64 a4@<rsi>)\n{\n  _DWORD *v4; // r14\n  __int64 v5; // r15\n  __int64 v6; // r9\n  __int64 v7; // rcx\n  _DWORD *v8; // rsi\n  __int64 v9; // rbp\n  signed int v10; // edx\n  _DWORD *v11; // rbx\n  bool v12; // zf\n  bool v13; // sf\n  unsigned __int8 v14; // of\n  __int64 v15; // r13\n  __int64 v16; // rbp\n  char *v17; // rdi\n  __int64 v18; // rdi\n  int v19; // edx\n  __int64 v20; // rsi\n  unsigned __int64 v22; // [rsp+0h] [rbp-38h]\n\n  v22 = a1;\n  v4 = a2;\n  v5 = a4;\n  if ( a3 >= 2 )\n  {\n    v6 = (unsigned int)(a3 - 1);\n    v7 = a3;\n    do\n    {\n      v8 = v4;\n      v9 = 0LL;\n      do\n      {\n        v10 = *(_DWORD *)(v5 + 4 * v9);\n        LODWORD(a1) = *(_DWORD *)(v5 + 4 * v7 - 4);\n        v11 = v8;\n        if ( v10 > (signed int)a1 )\n          goto LABEL_5;\n        if ( v10 == (_DWORD)a1 && *v8 > v4[v7 - 1] )\n        {\n          v11 = &v4[v9];\nLABEL_5:\n          *(_DWORD *)(v5 + 4 * v7 - 4) = v10;\n          *(_DWORD *)(v5 + 4 * v9) = a1;\n          LODWORD(a1) = v4[v7 - 1];\n          v4[v7 - 1] = *v11;\n          *v11 = a1;\n        }\n        ++v9;\n        ++v8;\n      }\n      while ( v6 != v9 );\n      --v6;\n      v14 = __OFSUB__(v7, 2LL);\n      v12 = v7 == 2;\n      v13 = v7-- - 2 < 0;\n    }\n    while ( !((unsigned __int8)(v13 ^ v14) | v12) );\n  }\n  if ( a3 > 0 )\n  {\n    v15 = (unsigned int)a3;\n    v16 = 0LL;\n    while ( 1 )\n    {\n      if ( v16 )\n        sub_45BF90(\" \", v22);\n      v18 = *(unsigned int *)(v5 + 4 * v16);\n      if ( (_DWORD)v18 != -1 )\n        break;\n      if ( v4[v16] != -1 )\n        goto LABEL_26;\n      v17 = \"PASS\";\nLABEL_27:\n      LODWORD(a1) = sub_45BF90(v17, v22);\nLABEL_28:\n      if ( v15 == ++v16 )\n        return a1;\n    }\n    if ( (signed int)v18 >= 0 )\n    {\n      v19 = dword_565CA0;\n      if ( (signed int)v18 < dword_565CA0 )\n      {\n        v20 = (unsigned int)v4[v16];\n        if ( (signed int)v20 >= 0 && (signed int)v20 < dword_565CA0 )\n        {\n          if ( qword_8A8550 )\n          {\n            qword_8A8550(v18, v20, (char *)&v22 + 4, &v22);\n            LODWORD(v20) = v22;\n            v19 = dword_565CA0;\n            LODWORD(v18) = HIDWORD(v22);\n          }\n          else\n          {\n            v22 = __PAIR__(v18, (unsigned int)v20);\n          }\n          LODWORD(a1) = sub_45BF90(\n                          \"%c%d\",\n                          (unsigned int)v20 + ((signed int)v20 > 7) + 65,\n                          (unsigned int)(v19 - v18),\n                          v22);\n          goto LABEL_28;\n        }\n      }\n    }\nLABEL_26:\n    v17 = \"??\";\n    goto LABEL_27;\n  }\n  return a1;\n}\n", 
            "funcStartAddr": "0x45c460L", 
            "funcEndAddr": "0x45c5dfL", 
            "funcName": "sub_45C460"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall main(int a1, char **a2, char **a3)\n{\n  char **v3; // r13\n  int v4; // er12\n  double v5; // xmm0_8\n  char *v6; // r15\n  signed int v7; // ebp\n  int v8; // ebx\n  const char *v9; // rbx\n  const char *v10; // rbx\n  const char *v11; // rbx\n  const char *v12; // r14\n  int v13; // eax\n  int v14; // eax\n  int v15; // eax\n  int v16; // edx\n  char *v17; // rax\n  int v18; // ecx\n  const char *v19; // rbx\n  unsigned int v20; // eax\n  unsigned int v21; // ecx\n  char *v22; // rbp\n  char *v23; // rdi\n  const char *v24; // rsi\n  const char *v25; // rbx\n  unsigned int v26; // ebx\n  const char *v27; // rdi\n  char *v28; // r14\n  int v29; // ebp\n  unsigned int v30; // ebx\n  char *v31; // r12\n  int v32; // eax\n  unsigned int v33; // ebx\n  unsigned __int64 v34; // rsi\n  FILE *v35; // rcx\n  const char *v36; // rdi\n  size_t v37; // rsi\n  FILE *v39; // rax\n  FILE *v40; // rcx\n  const char *v41; // rdi\n  size_t v42; // rsi\n  unsigned int v43; // edi\n  unsigned int v44; // edi\n  char *v45; // rbp\n  FILE *v46; // rdi\n  unsigned int v47; // edi\n  char v48; // al\n  FILE *v49; // rcx\n  const char *v50; // rdi\n  size_t v51; // rsi\n  FILE *v52; // rdi\n  const char *v53; // rsi\n  void *v54; // rdx\n  FILE *v55; // rdi\n  char *v56; // rdx\n  const char *v57; // rsi\n  FILE *v58; // rdi\n  const char *v59; // rsi\n  FILE *v60; // rcx\n  const char *v61; // rdi\n  size_t v62; // rsi\n  unsigned int v63; // [rsp+8h] [rbp-D0h]\n  unsigned int v64; // [rsp+Ch] [rbp-CCh]\n  unsigned int v65; // [rsp+10h] [rbp-C8h]\n  unsigned int v66; // [rsp+14h] [rbp-C4h]\n  unsigned int v67; // [rsp+18h] [rbp-C0h]\n  char dest; // [rsp+1Ch] [rbp-BCh]\n  int v69; // [rsp+24h] [rbp-B4h]\n  const char *v70; // [rsp+28h] [rbp-B0h]\n  __int64 v71; // [rsp+30h] [rbp-A8h]\n  __int64 v72; // [rsp+38h] [rbp-A0h]\n  char *v73; // [rsp+40h] [rbp-98h]\n  unsigned int v74; // [rsp+48h] [rbp-90h]\n  unsigned int v75; // [rsp+4Ch] [rbp-8Ch]\n  __int128 v76; // [rsp+50h] [rbp-88h]\n  unsigned int v77; // [rsp+60h] [rbp-78h]\n  __int128 v78; // [rsp+68h] [rbp-70h]\n  __int64 v79; // [rsp+78h] [rbp-60h]\n  const char *v80; // [rsp+80h] [rbp-58h]\n  char *v81; // [rsp+88h] [rbp-50h]\n  char *v82; // [rsp+90h] [rbp-48h]\n  __int64 v83; // [rsp+98h] [rbp-40h]\n  char *filename; // [rsp+A0h] [rbp-38h]\n\n  v3 = a2;\n  v4 = a1;\n  v69 = 0;\n  dword_98A788 = 0;\n  dword_565C78 = 10;\n  dword_565C80 = 250;\n  dword_98A79C = -1;\n  dword_98A794 = -1;\n  dword_98A790 = -1;\n  dword_98A7B8 = -1;\n  dword_98A7A0 = -1;\n  dword_98A7A4 = -1;\n  dword_98A798 = -1;\n  dword_98A7AC = -1;\n  dword_98A7A8 = -1;\n  dword_98A7B4 = -1;\n  dword_98A7B0 = -1;\n  dword_98A78C = -1;\n  dword_88C264 = 0;\n  dword_565C70 = 1;\n  dword_88C248 = 0;\n  dword_565C74 = 1;\n  dword_88C300 = 0;\n  dword_88C304 = 0;\n  dword_88C308 = 0;\n  dword_565C7C = 1;\n  dword_565C84 = 1;\n  dword_88C30C = 0;\n  qword_88C310 = 0LL;\n  sub_4016F0(&v78);\n  *(_QWORD *)&v5 = (unsigned int)dword_98A788;\n  sub_41E5F0((__int64)&v74, dword_565C68, *(float *)&dword_98A788);\n  v71 = 0LL;\n  v73 = 0LL;\n  v70 = 0LL;\n  v81 = 0LL;\n  filename = 0LL;\n  v82 = 0LL;\n  v80 = 0LL;\n  v6 = 0LL;\n  v79 = 0LL;\n  v7 = 0;\n  v72 = 0LL;\n  v83 = 0LL;\n  v67 = 0;\nLABEL_3:\n  while ( 2 )\n  {\n    v8 = v7;\n    v7 = 16;\n    switch ( (unsigned int)sub_493700(\n                             (unsigned int)v4,\n                             v3,\n                             \"-ab:B:d:D:EF:gh::H:K:l:L:M:m:o:O:p:r:fsStTvw\",\n                             &off_4B09A0,\n                             0LL)\n           + 1 )\n    {\n      case 0u:\n        v28 = v73;\n        v29 = 2 * (v73 != 0LL) + 3;\n        if ( v8 )\n          v29 = v8;\n        if ( v29 != 3 && !dword_88C214 )\n        {\n          fputc(10, stderr);\n          fprintf(stderr, \"GNU Go Version %s\\n\", \"3.3.14\", v5);\n          fwrite(\n            \"\\n\"\n            \"\\n\"\n            \"This is GNU GO, a Go program. Contact gnugo@gnu.org, or see\\n\"\n            \"http://www.gnu.org/software/gnugo/ for more information.\\n\"\n            \"\\n\"\n            \"Copyright 1999, 2000, 2001, 2002 by the Free Software Foundation.\\n\"\n            \"\\n\"\n            \"This program is free software; you can redistribute it and/or\\n\"\n            \"modify it under the terms of the GNU General Public License\\n\"\n            \"as published by the Free Software Foundation - version 2.\\n\"\n            \"\\n\"\n            \"This program is distributed in the hope that it will be\\n\"\n            \"useful, but WITHOUT ANY WARRANTY; without even the implied\\n\"\n            \"warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n\"\n            \"PURPOSE.  See the GNU General Public License in file COPYING\\n\"\n            \"for more details.\\n\"\n            \"\\n\"\n            \"You should have received a copy of the GNU General Public\\n\"\n            \"License along with this program; if not, write to the Free\\n\"\n            \"Software Foundation, Inc., 59 Temple Place - Suite 330,\\n\"\n            \"Boston, MA 02111, USA.\\n\"\n            \"\\n\",\n            0x330uLL,\n            1uLL,\n            stderr);\n        }\n        v30 = 1;\n        if ( (_DWORD)v83 )\n          v30 = v83;\n        sub_493D80(v30);\n        dword_88C240 = v30;\n        sub_41DFA0(v30);\n        v31 = filename;\n        if ( v28 )\n        {\n          v32 = sub_401700((__int64)&v78, v28);\n          v33 = v72;\n          if ( !v32 )\n          {\n            v52 = stderr;\n            v53 = \"Cannot open or parse '%s'\\n\";\n            v54 = v28;\n            goto LABEL_237;\n          }\n          v34 = (unsigned __int64)&v78;\n          sub_41E890(&v74, (__int64 *)&v78, v70, v72);\n        }\n        else\n        {\n          v34 = (unsigned int)dword_565C68;\n          sub_401880((__int64 *)&v78, dword_565C68);\n          v33 = v72;\n        }\n        v5 = *(double *)&v78;\n        v76 = v78;\n        if ( (_BYTE)v69 )\n        {\n          sub_434450(dword_565C68, (char *)&v69, &v64, (int *)&v63);\n          v34 = v63;\n          sub_41CED0(v64, v63);\n        }\n        if ( v31 && v29 != 7 )\n        {\n          v34 = (unsigned __int64)\"w\";\n          v39 = fopen(v31, \"w\");\n          if ( !v39 )\n          {\n            v52 = stderr;\n            v53 = \"Error: could not open '%s' for writing\\n\";\n            v54 = v31;\n            goto LABEL_237;\n          }\n          fclose(v39);\n        }\n        switch ( v29 )\n        {\n          case 2:\n            if ( v67 )\n              v77 = v67 ^ 3;\n            sub_4601F0(&v78, &v74, v28, v70);\n            goto LABEL_129;\n          case 3:\n            v45 = v82;\n            if ( v82 )\n            {\n              v46 = fopen(v82, (const char *)&a4R[2]);\n              if ( !v46 )\n              {\n                fprintf(stderr, \"gnugo: Cannot open file %s\\n\", v45);\n                return 1;\n              }\n            }\n            else\n            {\n              v46 = stdin;\n            }\n            sub_460200(v46, v33);\n            goto LABEL_129;\n          case 5:\n            if ( v67 )\n              v75 = v67;\n            if ( !v28 )\n            {\n              v60 = stderr;\n              v61 = \"You must use -l infile with load and analyze mode.\\n\";\n              v62 = 51LL;\n              goto LABEL_234;\n            }\n            sub_465020(&v74, v34);\n            goto LABEL_129;\n          case 6:\n            if ( v67 )\n              v75 = v67;\n            if ( !v28 )\n            {\n              v60 = stderr;\n              v61 = \"gnugo: --score must be used with -l\\n\";\n              v62 = 36LL;\n              goto LABEL_234;\n            }\n            sub_4650F0(&v78, &v74, v81);\n            goto LABEL_129;\n          case 7:\n            if ( !v28 )\n            {\n              v60 = stderr;\n              v61 = \"gnugo: --printsgf must be used with -l\\n\";\n              v62 = 39LL;\n              goto LABEL_234;\n            }\n            v44 = v67;\n            if ( v67 )\n              v75 = v67;\n            else\n              v44 = v75;\n            sub_448F50(v44, v80);\n            goto LABEL_129;\n          case 8:\n            sub_464C30(&v74, v79);\n            goto LABEL_129;\n          case 9:\n            if ( !v28 )\n            {\n              v60 = stderr;\n              v61 = \"You must use -l infile with replay mode.\\n\";\n              goto LABEL_233;\n            }\n            sub_465510(&v74, v71);\n            goto LABEL_129;\n          case 10:\n            if ( v28 )\n            {\n              if ( (unsigned int)sub_434450(dword_565C68, &dest, &v64, (int *)&v63) )\n              {\n                sub_493CA0(v64, v63, &v64, &v63, (unsigned int)dword_565C68, v33);\n                sub_447BE0(v63 + 20 * v64 + 21);\n                goto LABEL_129;\n              }\n              v40 = stderr;\n              v41 = \"gnugo: --decide-string: strange coordinate \\n\";\n              v42 = 44LL;\n            }\n            else\n            {\n              v40 = stderr;\n              v41 = \"gnugo: --decide-string must be used with -l\\n\";\n              v42 = 44LL;\n            }\n            goto LABEL_145;\n          case 11:\n            if ( v28 )\n            {\n              if ( (unsigned int)sub_434450(dword_565C68, &dest, &v64, (int *)&v63)\n                && (unsigned int)sub_434450(dword_565C68, v6, &v66, (int *)&v65) )\n              {\n                sub_493CA0(v64, v63, &v64, &v63, (unsigned int)dword_565C68, v33);\n                sub_493CA0(v66, v65, &v66, &v65, (unsigned int)dword_565C68, v33);\n                sub_447D70(v63 + 20 * v64 + 21, v65 + 20 * v66 + 21);\n                goto LABEL_198;\n              }\n              v49 = stderr;\n              v50 = \"usage: --decide-connection [first string]/[second string]\\n\";\n              v51 = 58LL;\n            }\n            else\n            {\n              v49 = stderr;\n              v50 = \"gnugo: --decide-connection must be used with -l\\n\";\n              v51 = 48LL;\n            }\n            goto LABEL_220;\n          case 12:\n            if ( v28 )\n            {\n              if ( (unsigned int)sub_434450(dword_565C68, &dest, &v64, (int *)&v63) )\n              {\n                sub_493CA0(v64, v63, &v64, &v63, (unsigned int)dword_565C68, v33);\n                sub_447FF0(v63 + 20 * v64 + 21);\n                goto LABEL_129;\n              }\n              v40 = stderr;\n              v41 = \"gnugo: --decide-dragon: strange coordinate \\n\";\n              v42 = 44LL;\n            }\n            else\n            {\n              v40 = stderr;\n              v41 = \"gnugo: --decide-dragon must be used with -l\\n\";\n              v42 = 44LL;\n            }\n            goto LABEL_145;\n          case 13:\n            if ( v28 )\n            {\n              if ( (unsigned int)sub_434450(dword_565C68, &dest, &v64, (int *)&v63) )\n              {\n                sub_493CA0(v64, v63, &v64, &v63, (unsigned int)dword_565C68, v33);\n                sub_448260(v63 + 20 * v64 + 21);\n                goto LABEL_129;\n              }\n              v40 = stderr;\n              v41 = \"gnugo: --decide-dragon-data: strange coordinate \\n\";\n              v42 = 49LL;\n            }\n            else\n            {\n              v40 = stderr;\n              v41 = \"gnugo: --decide-dragon-data must be used with -l\\n\";\n              v42 = 49LL;\n            }\n            goto LABEL_145;\n          case 14:\n            if ( v28 )\n            {\n              if ( (unsigned int)sub_434450(dword_565C68, &dest, &v64, (int *)&v63)\n                && (unsigned int)sub_434450(dword_565C68, v6, &v66, (int *)&v65) )\n              {\n                sub_493CA0(v64, v63, &v64, &v63, (unsigned int)dword_565C68, v33);\n                sub_493CA0(v66, v65, &v66, &v65, (unsigned int)dword_565C68, v33);\n                sub_4482C0(v63 + 20 * v64 + 21, v65 + 20 * v66 + 21);\n                goto LABEL_198;\n              }\n              v49 = stderr;\n              v50 = \"usage: --decide-semeai [first dragon]/[second dragon]\\n\";\n              v51 = 54LL;\n            }\n            else\n            {\n              v49 = stderr;\n              v50 = \"gnugo: --decide-semeai must be used with -l\\n\";\n              v51 = 44LL;\n            }\n            goto LABEL_220;\n          case 15:\n            if ( !v28 )\n            {\n              v49 = stderr;\n              v50 = \"gnugo: --decide-tactical-semeai must be used with -l\\n\";\n              v51 = 53LL;\n              goto LABEL_220;\n            }\n            if ( !(unsigned int)sub_434450(dword_565C68, &dest, &v64, (int *)&v63)\n              || !(unsigned int)sub_434450(dword_565C68, v6, &v66, (int *)&v65) )\n            {\n              v49 = stderr;\n              v50 = \"usage: --decide-tactical-semeai [first dragon]/[second dragon]\\n\";\n              v51 = 63LL;\nLABEL_220:\n              fwrite(v50, v51, 1uLL, v49);\n              v26 = 1;\n              v48 = 0;\n              goto LABEL_199;\n            }\n            sub_493CA0(v64, v63, &v64, &v63, (unsigned int)dword_565C68, v33);\n            sub_493CA0(v66, v65, &v66, &v65, (unsigned int)dword_565C68, v33);\n            sub_448460(v63 + 20 * v64 + 21, v65 + 20 * v66 + 21);\nLABEL_198:\n            v26 = 0;\n            v48 = 1;\nLABEL_199:\n            if ( v48 )\nLABEL_129:\n              v26 = 0;\n            return v26;\n          case 16:\n            if ( !v28 )\n            {\n              v40 = stderr;\n              v41 = \"gnugo: --decide-position must be used with -l\\n\";\n              v42 = 46LL;\n              goto LABEL_145;\n            }\n            v43 = v67;\n            if ( !v67 )\n              v43 = v75;\n            sub_448600(v43);\n            goto LABEL_129;\n          case 17:\n            if ( v28 )\n            {\n              if ( (unsigned int)sub_434450(dword_565C68, &dest, &v64, (int *)&v63) )\n              {\n                sub_493CA0(v64, v63, &v64, &v63, (unsigned int)dword_565C68, v33);\n                sub_4488A0(v63 + 20 * v64 + 21);\n                goto LABEL_129;\n              }\n              v40 = stderr;\n              v41 = \"gnugo: --decide-eye: strange coordinate \\n\";\n              v42 = 41LL;\n            }\n            else\n            {\n              v40 = stderr;\n              v41 = \"gnugo: --decide-eye must be used with -l\\n\";\n              v42 = 41LL;\n            }\n            goto LABEL_145;\n          case 18:\n            if ( !v28 )\n            {\n              v40 = stderr;\n              v41 = \"gnugo: --decide-combination must be used with -l\\n\";\n              v42 = 49LL;\n              goto LABEL_145;\n            }\n            v47 = v67;\n            if ( !v67 )\n              v47 = v75;\n            sub_448A30(v47);\n            goto LABEL_129;\n          case 19:\n            if ( (unsigned int)sub_434450(dword_565C68, &dest, &v64, (int *)&v63) )\n            {\n              sub_493CA0(v64, v63, &v64, &v63, (unsigned int)dword_565C68, v33);\n              sub_448B20(v63 + 20 * v64 + 21);\n              goto LABEL_129;\n            }\n            v40 = stderr;\n            v41 = \"usage: --decide-surrounded [pos]\\n\";\n            v42 = 33LL;\n            goto LABEL_145;\n          default:\n            if ( v67 )\n              v77 = v67 ^ 3;\n            sub_45DD40(&v78, &v74, v28, v70);\n            goto LABEL_129;\n        }\n      case 2u:\n      case 0x6Du:\n        v73 = nptr;\n        v7 = v8;\n        continue;\n      case 0x43u:\n        dword_98A794 = strtol(nptr, 0LL, 10);\n        v7 = v8;\n        continue;\n      case 0x45u:\n        dword_98A79C = strtol(nptr, 0LL, 10);\n        v7 = v8;\n        continue;\n      case 0x46u:\n        dword_88C228 = 2;\n        v7 = v8;\n        continue;\n      case 0x47u:\n        dword_98A7A0 = strtol(nptr, 0LL, 10);\n        v7 = v8;\n        continue;\n      case 0x49u:\n        dword_565C6C = strtol(nptr, 0LL, 0);\n        v7 = v8;\n        continue;\n      case 0x4Cu:\n        dword_98A7A4 = strtol(nptr, 0LL, 10);\n        v7 = v8;\n        continue;\n      case 0x4Du:\n        v70 = nptr;\n        v7 = v8;\n        continue;\n      case 0x50u:\n        dword_88C2F0 = 0;\n        v7 = v8;\n        if ( !nptr )\n          continue;\n        LOBYTE(v16) = *nptr;\n        v7 = v8;\n        if ( !*nptr )\n          continue;\n        v17 = nptr + 1;\n        v18 = 0;\n        break;\n      case 0x54u:\n        dword_88C218 = 1;\n        v7 = v8;\n        continue;\n      case 0x55u:\n        ++dword_88C228;\n        v7 = v8;\n        continue;\n      case 0x62u:\n        dword_88C21C = 1;\n        v7 = v8;\n        continue;\n      case 0x63u:\n        v79 = strtol(nptr, 0LL, 10);\n        v7 = 8;\n        continue;\n      case 0x65u:\n        dword_88C264 ^= strtol(nptr, 0LL, 0);\n        v7 = v8;\n        continue;\n      case 0x69u:\n        v26 = 0;\n        fprintf(stderr, \"GNU Go Version %s\\n\", \"3.3.14\", v5);\n        v27 = nptr;\n        if ( nptr )\n          goto LABEL_112;\n        if ( dword_751E88 >= v4 )\n        {\n          sub_44BD40(10);\n          v73 = (char *)(unsigned int)dword_98A768;\n          v26 = 0;\n          fprintf(\n            stderr,\n            \"\\n\"\n            \"Usage: gnugo [-opts]\\n\"\n            \"\\n\"\n            \"Main Options:\\n\"\n            \"       --mode <mode>     Force the playing mode ('ascii' or 'gtp').\\n\"\n            \"                         Default is GTP.\\n\"\n            \"       --quiet           Don't print copyright and informational messages\\n\"\n            \"       --gtp-input <file>Read gtp commands from file instead of stdin\\n\"\n            \"   -l, --infile <file>   Load name sgf file\\n\"\n            \"   -L, --until <move>    Stop loading just before move is played. <move>\\n\"\n            \"                         can be the move number or location (eg L10).\\n\"\n            \"   -o, --outfile <file>  Write sgf output to file\\n\"\n            \"   --printsgf <file>     Write position as a diagram to file (use with -l)\\n\"\n            \"\\n\"\n            \"Options that affect strength (higher = stronger, slower):\\n\"\n            \"   -D, --depth <depth>          deep reading cutoff (default %d)\\n\"\n            \"   -B, --backfill-depth <depth> deep reading cutoff (default %d)\\n\"\n            \"   -F, --fourlib-depth <depth>  deep reading cutoff (default %d)\\n\"\n            \"   -K, --ko-depth <depth>       deep reading cutoff (default %d)\\n\"\n            \"   --branch-depth <depth>       deep reading cutoff (default %d)\\n\"\n            \"   --backfill2-depth <depth>    deep reading cutoff (default %d)\\n\"\n            \"   --superstring-depth <depth>  deep reading cutoff (default %d)\\n\"\n            \"   --aa-depth <depth>           deep reading cutoff (default %d)\\n\"\n            \"   --owl-distrust <depth>       owl distrust depth (default %d)\\n\"\n            \"   --owl-branch <depth>         owl branching depth (default %d)\\n\"\n            \"   --owl-reading <depth>        owl reading depth (default %d)\\n\"\n            \"   --owl-node-limit <limit>     max nodes for owl reading (default %d)\\n\"\n            \"   --level <amount>             strength (default %d, up to 10 supported)\\n\",\n            (unsigned int)dword_98A76C,\n            (unsigned int)dword_98A75C,\n            (unsigned int)dword_98A770,\n            (unsigned int)dword_98A784,\n            (unsigned int)dword_98A768,\n            (unsigned int)dword_98A758,\n            (unsigned int)dword_98A7F8,\n            (unsigned int)dword_98A754,\n            (unsigned int)dword_98A7E4,\n            (unsigned int)dword_98A7E0,\n            (unsigned int)dword_98A7EC,\n            (unsigned int)dword_98A7E8,\n            10LL);\n          fprintf(\n            stderr,\n            \"\\n\"\n            \"Experimental options:\\n\"\n            \"   --nofusekidb            turn off fuseki database\\n\"\n            \"   --nofuseki              turn off fuseki moves entirely\\n\"\n            \"   --nojosekidb            turn off joseki database\\n\"\n            \"   --mirror                try to play mirror go\\n\"\n            \"   --mirror-limit <n>      stop mirroring when n stones on board\\n\"\n            \"Scoring:\\n\"\n            \"   --score estimate        estimate score at loaded position\\n\"\n            \"   --score finish          generate moves to finish game, then score\\n\"\n            \"   --score aftermath       generate moves to finish, use best algorithm\\n\"\n            \"   --score aftermath --capture-all-dead --chinese-rules   Tromp-Taylor score\\n\"\n            \"\\n\"\n            \"Game Options: (--mode ascii)\\n\"\n            \"       --boardsize num   Set the board size to use (%d--%d)\\n\"\n            \"       --color <color>   Choose your color ('black' or 'white')\\n\"\n            \"       --handicap <num>  Set the number of handicap stones (0--%d)\\n\"\n            \"       --komi <num>      Set the komi\\n\"\n            \"\\n\"\n            \"Informative Output:\\n\"\n            \"   -v, --version         Display the version of GNU Go\\n\"\n            \"   --options             Display configure options\\n\"\n            \"   -h, --help            Display this help message\\n\"\n            \"       --help debug      Display help about debugging options\\n\"\n            \"       --copyright       Display copyright notice\\n\"\n            \"\\n\",\n            5LL,\n            19LL,\n            9LL);\n        }\n        else\n        {\n          v27 = v3[dword_751E88];\nLABEL_112:\n          if ( !strncmp(v27, \"debug\", 5uLL) )\n            fwrite(\n              \"\\n\"\n              \"Debugging Options:\\n\"\n              \"\\n\"\n              \"       --replay <color> replay the moves in a game for color.\\n\"\n              \"                        (requires -l)\\n\"\n              \"                     white: replay only white moves\\n\"\n              \"                     black: replay only black moves\\n\"\n              \"                     both:  replay all moves\\n\"\n              \"   -a, --allpats                 test all patterns\\n\"\n              \"   -T, --printboard              colored display of dragons\\n\"\n              \"   -E, --printeyes               colored display of eye spaces\\n\"\n              \"   -d, --debug <flags>           debugging output (see next item for bits)\\n\"\n              \"   --debug-flags                 print the debug flags for previous item\\n\"\n              \"   -H, --hash <level>            hash (see gnugo.h for bits)\\n\"\n              \"   -w, --worms                   print worm and dragon data and move reasons\\n\"\n              \"   -m, --moyo <level>            moyo debugging, show moyo board\\n\"\n              \"   -b, --benchmark num           benchmarking mode - can be used with -l\\n\"\n              \"   -S, --statistics              print statistics (for debugging purposes)\\n\"\n              \"\\n\"\n              \"   -t, --trace                   verbose tracing\\n\"\n              \"   -O, --output-flags <flags>    optional output (use with -o)\\n\"\n              \"                    d: mark dead and critical dragons\\n\"\n              \"                    v: show values of considered moves\\n\"\n              \"                    specify either 'd', 'v' or 'dv' (nothing by default)\\n\"\n              \"   --showtime                    print timing diagnostic\\n\"\n              \"   --replay <color>              replay game. Use with -o.\\n\"\n              \"   --showscore                   print estimated score\\n\"\n              \"   -r, --seed number             set random number seed\\n\"\n              \"       --decide-string <string>  can this string live? (try with -o)\\n\"\n              \"       --decide-connection <str/str> can these strings connect? (try with -o)\\n\"\n              \"       --decide-dragon <dragon>  can this dragon live? (try with -o or -t)\\n\"\n              \"       --decide-position         evaluate all dragons (try with -o or -t)\\n\"\n              \"       --decide-eye <string>     evaluate the eye\\n\"\n              \"       --decide-combination      search for combination attack (try with -o)\\n\"\n              \"       --genmove <color>         generate a move for color\\n\"\n              \"       --nofusekidb              turn off fuseki database\\n\"\n              \"       --nofuseki                turn off fuseki moves entirely\\n\"\n              \"       --nojosekidb              turn off joseki database\\n\"\n              \"       --debuginfluence <move>   print influence map after making a move\\n\"\n              \"       --score <end|last|move>   count or estimate territory\\n\"\n              \"       --profile-patterns        print statistics for pattern usage\\n\"\n              \"       --attack-by-pattern       use pattern-based tactical reading for attack\\n\"\n              \"       --defend-by-pattern       use pattern-based tactical reading for defense\\n\",\n              0x9B8uLL,\n              1uLL,\n              stderr);\n        }\n        return v26;\n      case 0x6Eu:\n        dword_88C224 = strtol(nptr, 0LL, 0);\n        v7 = v8;\n        continue;\n      case 0x70u:\n        v24 = nptr;\n        v23 = &::dest;\n        filename = nptr;\n        goto LABEL_87;\n      case 0x73u:\n        v83 = strtol(nptr, 0LL, 10);\n        v7 = v8;\n        continue;\n      case 0x75u:\n        ++dword_88C268;\n        v7 = v8;\n        continue;\n      case 0x77u:\n        v26 = 0;\n        fprintf(stderr, \"GNU Go Version %s\\n\", \"3.3.14\", v5);\n        return v26;\n      case 0x78u:\n        dword_88C220 = 1;\n        v7 = v8;\n        continue;\n      case 0x80u:\n        v21 = strtol(nptr, 0LL, 10);\n        if ( v21 - 5 >= 0xF )\n        {\n          v58 = stderr;\n          v59 = \"Illegal board size: %d.\\n\";\n          goto LABEL_229;\n        }\n        sub_41DFC0(v21);\n        v7 = v8;\n        continue;\n      case 0x81u:\n        v20 = strtol(nptr, 0LL, 10);\n        v21 = v20;\n        if ( v20 >= 0xA )\n        {\n          v58 = stderr;\n          v59 = \"Illegal handicap: %d.\\n\";\nLABEL_229:\n          fprintf(v58, v59, v21, v5);\nLABEL_232:\n          v60 = stderr;\n          v61 = \"Try `gnugo --help' for more information.\\n\";\nLABEL_233:\n          v62 = 41LL;\nLABEL_234:\n          fwrite(v61, v62, 1uLL, v60);\n          exit(1);\n        }\n        v74 = v20;\n        v7 = v8;\n        continue;\n      case 0x82u:\n        v12 = nptr;\n        v67 = 1;\n        v7 = v8;\n        if ( !strcmp(nptr, \"white\") )\n          continue;\n        v67 = 2;\n        v7 = v8;\n        if ( !strcmp(v12, \"black\") )\n          continue;\n        v55 = stderr;\n        v57 = \"Invalid color selection: %s\\n\";\n        goto LABEL_230;\n      case 0x83u:\n        v7 = v8;\n        if ( (unsigned int)__isoc99_sscanf(nptr, \"%f\", &dword_98A788) == 1 )\n          continue;\n        v55 = stderr;\n        v56 = nptr;\n        v57 = \"Invalid komi selection: %s\\n\";\n        goto LABEL_231;\n      case 0x88u:\n        v11 = nptr;\n        v7 = 1;\n        if ( !strcmp(nptr, \"ascii\") )\n          continue;\n        v7 = 2;\n        if ( !strcmp(v11, \"emacs\") )\n          continue;\n        v7 = 3;\n        if ( !strcmp(v11, off_49CFBD) )\n          continue;\n        v55 = stderr;\n        v57 = \"Invalid mode selection: %s\\n\";\n        v56 = (char *)v11;\n        goto LABEL_231;\n      case 0x8Bu:\n        dword_88C214 = 1;\n        v7 = v8;\n        continue;\n      case 0x8Cu:\n        v82 = nptr;\n        v7 = v8;\n        continue;\n      case 0x8Du:\n        v7 = v8;\n        v72 = strtol(nptr, 0LL, 10);\n        if ( (unsigned int)v72 < 8 )\n          continue;\n        fprintf(stderr, \"Illegal orientation: %d.\\n\", v72, v5);\n        goto LABEL_232;\n      case 0x8Eu:\n        dword_565C8C = strtol(nptr, 0LL, 10);\n        v7 = v8;\n        continue;\n      case 0x8Fu:\n        v35 = stderr;\n        v36 = \"\\n\"\n              \"\\n\"\n              \"This is GNU GO, a Go program. Contact gnugo@gnu.org, or see\\n\"\n              \"http://www.gnu.org/software/gnugo/ for more information.\\n\"\n              \"\\n\"\n              \"Copyright 1999, 2000, 2001, 2002 by the Free Software Foundation.\\n\"\n              \"\\n\"\n              \"This program is free software; you can redistribute it and/or\\n\"\n              \"modify it under the terms of the GNU General Public License\\n\"\n              \"as published by the Free Software Foundation - version 2.\\n\"\n              \"\\n\"\n              \"This program is distributed in the hope that it will be\\n\"\n              \"useful, but WITHOUT ANY WARRANTY; without even the implied\\n\"\n              \"warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\\n\"\n              \"PURPOSE.  See the GNU General Public License in file COPYING\\n\"\n              \"for more details.\\n\"\n              \"\\n\"\n              \"You should have received a copy of the GNU General Public\\n\"\n              \"License along with this program; if not, write to the Free\\n\"\n              \"Software Foundation, Inc., 59 Temple Place - Suite 330,\\n\"\n              \"Boston, MA 02111, USA.\\n\"\n              \"\\n\";\n        v37 = 816LL;\n        goto LABEL_128;\n      case 0x90u:\n        v12 = nptr;\n        v13 = strcmp(nptr, \"white\");\n        v7 = 9;\n        v71 = 1LL;\n        if ( !v13 )\n          continue;\n        v14 = strcmp(v12, \"black\");\n        v71 = 2LL;\n        if ( !v14 )\n          continue;\n        v15 = strcmp(v12, \"both\");\n        v71 = 3LL;\n        if ( !v15 )\n          continue;\n        v55 = stderr;\n        v57 = \"Invalid replay color: %s\\n\";\nLABEL_230:\n        v56 = (char *)v12;\nLABEL_231:\n        fprintf(v55, v57, v56, v5);\n        goto LABEL_232;\n      case 0x91u:\n        v9 = nptr;\n        if ( strlen(nptr) >= 4 )\n          goto LABEL_236;\n        strcpy(&dest, v9);\n        v7 = 10;\n        continue;\n      case 0x92u:\n        v10 = nptr;\n        if ( strlen(nptr) < 8 )\n        {\n          strcpy(&dest, v10);\n          strtok(&dest, \"/\");\n          v6 = strtok(0LL, \"/\");\n          v7 = 11;\n          if ( v6 )\n            continue;\n        }\n        v40 = stderr;\n        v41 = \"usage: --decide-connection [first string]/[second string]\\n\";\n        v42 = 58LL;\n        goto LABEL_145;\n      case 0x93u:\n        v9 = nptr;\n        if ( strlen(nptr) >= 4 )\n          goto LABEL_236;\n        strcpy(&dest, v9);\n        v7 = 12;\n        continue;\n      case 0x94u:\n        v9 = nptr;\n        if ( strlen(nptr) >= 4 )\n          goto LABEL_236;\n        strcpy(&dest, v9);\n        v7 = 13;\n        continue;\n      case 0x95u:\n        v25 = nptr;\n        if ( strlen(nptr) < 8 )\n        {\n          strcpy(&dest, v25);\n          strtok(&dest, \"/\");\n          v6 = strtok(0LL, \"/\");\n          v7 = 14;\n          if ( v6 )\n            continue;\n        }\n        v40 = stderr;\n        v41 = \"usage: --decide-semeai [first dragon]/[second dragon]\\n\";\n        v42 = 54LL;\n        goto LABEL_145;\n      case 0x96u:\n        v9 = nptr;\n        if ( strlen(nptr) >= 4 )\n          goto LABEL_236;\n        strcpy(&dest, v9);\n        v7 = 19;\n        continue;\n      case 0x97u:\n        v19 = nptr;\n        if ( strlen(nptr) < 8 )\n        {\n          strcpy(&dest, v19);\n          strtok(&dest, \"/\");\n          v6 = strtok(0LL, \"/\");\n          v7 = 15;\n          if ( v6 )\n            continue;\n        }\n        v40 = stderr;\n        v41 = \"usage: --decide-tactical-semeai [first dragon]/[second dragon]\\n\";\n        v42 = 63LL;\nLABEL_145:\n        fwrite(v41, v42, 1uLL, v40);\n        return 1;\n      case 0x98u:\n        dword_565C7C = 1;\n        v7 = v8;\n        continue;\n      case 0x99u:\n        dword_88C308 = 1;\n        v7 = v8;\n        continue;\n      case 0x9Au:\n        dword_565C80 = strtol(nptr, 0LL, 10);\n        v7 = v8;\n        continue;\n      case 0x9Bu:\n        dword_565C84 = 1;\n        v7 = v8;\n        continue;\n      case 0x9Du:\n        fwrite(\"configure option enabled: experimental connections\\n\", 0x33uLL, 1uLL, stderr);\n        fwrite(\"configure option enabled: experimental semeai\\n\", 0x2EuLL, 1uLL, stderr);\n        v26 = 0;\n        fprintf(stderr, \"Owl node limit: %d\\n\", 1000LL, v5);\n        return v26;\n      case 0x9Eu:\n        dword_565C7C = 0;\n        v7 = v8;\n        continue;\n      case 0x9Fu:\n        dword_565C84 = 0;\n        v7 = v8;\n        continue;\n      case 0xA1u:\n        continue;\n      case 0xA2u:\n        v9 = nptr;\n        if ( strlen(nptr) < 4 )\n        {\n          strcpy(&dest, v9);\n          v7 = 17;\n          continue;\n        }\nLABEL_236:\n        v52 = stderr;\n        v53 = \"Invalid board coordinate: %s\\n\";\n        v54 = (void *)v9;\n        goto LABEL_237;\n      case 0xA3u:\n        v7 = 18;\n        continue;\n      case 0xA4u:\n        dword_98A798 = strtol(nptr, 0LL, 10);\n        v7 = v8;\n        continue;\n      case 0xA5u:\n        dword_98A790 = strtol(nptr, 0LL, 10);\n        v7 = v8;\n        continue;\n      case 0xA6u:\n        dword_98A7B8 = strtol(nptr, 0LL, 10);\n        v7 = v8;\n        continue;\n      case 0xA7u:\n        dword_98A78C = strtol(nptr, 0LL, 10);\n        goto LABEL_2;\n      case 0xA8u:\n        v35 = stderr;\n        v36 = \"DEBUG_INFLUENCE             0x0001\\n\"\n              \"DEBUG_EYES                  0x0002\\n\"\n              \"DEBUG_OWL                   0x0004\\n\"\n              \"DEBUG_ESCAPE                0x0008\\n\"\n              \"DEBUG_MATCHER               0x0010\\n\"\n              \"DEBUG_DRAGONS               0x0020\\n\"\n              \"DEBUG_SEMEAI                0x0040\\n\"\n              \"DEBUG_LOADSGF               0x0080\\n\"\n              \"DEBUG_HELPER                0x0100\\n\"\n              \"DEBUG_READING               0x0200\\n\"\n              \"DEBUG_WORMS                 0x0400\\n\"\n              \"DEBUG_MOVE_REASONS          0x0800\\n\"\n              \"DEBUG_OWL_PERFORMANCE       0x1000\\n\"\n              \"DEBUG_LIFE                  0x2000\\n\"\n              \"DEBUG_FILLLIB               0x4000\\n\"\n              \"DEBUG_READING_PERFORMANCE   0x8000\\n\"\n              \"DEBUG_SCORING               0x010000\\n\"\n              \"DEBUG_AFTERMATH             0x020000\\n\"\n              \"DEBUG_ATARI_ATARI           0x040000\\n\"\n              \"DEBUG_READING_CACHE         0x080000\\n\"\n              \"DEBUG_TERRITORY             0x100000\\n\"\n              \"DEBUG_OWL_PERSISTENT_CACHE  0X200000\\n\"\n              \"DEBUG_TOP_MOVES             0x400000\\n\"\n              \"DEBUG_MISCELLANEOUS         0x800000\\n\";\n        v37 = 856LL;\nLABEL_128:\n        fwrite(v36, v37, 1uLL, v35);\n        goto LABEL_129;\n      case 0xA9u:\nLABEL_2:\n        dword_98A7AC = strtol(nptr, 0LL, 10);\n        v7 = v8;\n        continue;\n      case 0xAAu:\n        dword_98A7A8 = strtol(nptr, 0LL, 10);\n        v7 = v8;\n        continue;\n      case 0xABu:\n        dword_98A7B4 = strtol(nptr, 0LL, 10);\n        v7 = v8;\n        continue;\n      case 0xACu:\n        dword_98A7B0 = strtol(nptr, 0LL, 10);\n        v7 = v8;\n        continue;\n      case 0xADu:\n        dword_565C70 = 0;\n        v7 = v8;\n        continue;\n      case 0xAEu:\n        dword_88C248 = 1;\n        v7 = v8;\n        continue;\n      case 0xAFu:\n        dword_565C74 = 0;\n        v7 = v8;\n        continue;\n      case 0xB0u:\n        dword_565C78 = strtol(nptr, 0LL, 10);\n        v7 = v8;\n        continue;\n      case 0xB1u:\n        dword_88C24C = 1;\n        v7 = v8;\n        continue;\n      case 0xB2u:\n        dword_88C250 = 1;\n        v7 = v8;\n        continue;\n      case 0xB3u:\n        v22 = nptr;\n        if ( strlen(nptr) >= 4 )\n        {\n          v52 = stderr;\n          v53 = \"Invalid board coordinate: %s\\n\";\n          v54 = v22;\nLABEL_237:\n          fprintf(v52, v53, v54, v5);\n          exit(1);\n        }\n        v23 = (char *)&v69;\n        v24 = v22;\nLABEL_87:\n        strcpy(v23, v24);\n        v7 = v8;\n        continue;\n      case 0xB4u:\n        v81 = nptr;\n        v7 = 6;\n        if ( v8 )\n          v7 = v8;\n        continue;\n      case 0xB5u:\n        v7 = 7;\n        v80 = nptr;\n        continue;\n      case 0xB6u:\n        dword_88C300 = 1;\n        v7 = v8;\n        continue;\n      case 0xB7u:\n        dword_88C304 = 1;\n        v7 = v8;\n        continue;\n      case 0xB8u:\n        dword_88C304 = 0;\n        v7 = v8;\n        continue;\n      case 0xB9u:\n        dword_88C300 = 0;\n        v7 = v8;\n        continue;\n      case 0xBAu:\n        dword_88C30C = 1;\n        v7 = v8;\n        continue;\n      case 0xBBu:\n        LODWORD(qword_88C310) = 1;\n        v7 = v8;\n        continue;\n      case 0xBCu:\n        HIDWORD(qword_88C310) = 1;\n        v7 = v8;\n        continue;\n      case 0xBDu:\n        dword_88C318 = 1;\n        v7 = v8;\n        continue;\n      case 0xBEu:\n        dword_565C88 = strtol(nptr, 0LL, 10);\n        v7 = v8;\n        continue;\n      default:\n        goto LABEL_232;\n    }\n    break;\n  }\n  while ( 1 )\n  {\n    v16 = (char)v16;\n    if ( (char)v16 == 118 )\n      break;\n    if ( v16 == 100 )\n    {\n      v18 |= 1u;\nLABEL_49:\n      dword_88C2F0 = v18;\n    }\n    LOBYTE(v16) = *v17++;\n    if ( !(_BYTE)v16 )\n    {\n      v7 = v8;\n      goto LABEL_3;\n    }\n  }\n  v18 |= 2u;\n  goto LABEL_49;\n}\n", 
            "funcStartAddr": "0x45c5e0L", 
            "funcEndAddr": "0x45dd31L", 
            "funcName": "main"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_45DD40(__m128i *a1, unsigned int *a2, __int64 a3, const char *a4, double a5, __m128i a6, double a7, double a8, double a9, double a10, double a11)\n{\n  const char *v11; // r14\n  __int64 v12; // rbx\n  unsigned int *v13; // r13\n  __m128i v14; // xmm0\n  const char *v15; // rsi\n  unsigned int *v16; // r15\n  char v17; // al\n  char *v18; // rdi\n  const char *v19; // rax\n  char *v20; // rax\n  char *v21; // rbp\n  char *v22; // rdi\n  __int64 v23; // rax\n  __int64 v24; // rsi\n  __int64 v25; // rax\n  signed __int64 v26; // rcx\n  int v27; // eax\n  signed int v28; // ebx\n  bool v29; // sf\n  unsigned __int8 v30; // of\n  signed int v31; // eax\n  const char *v32; // rdi\n  bool v33; // zf\n  __int64 v34; // rax\n  int v35; // edi\n  const char *v36; // rsi\n  __int64 v37; // rax\n  int v38; // edi\n  const char *v39; // rsi\n  __int64 v40; // rax\n  int v41; // ebx\n  char *v42; // rax\n  const char *v43; // rbp\n  char *v44; // rax\n  __int64 v45; // rax\n  const char *v46; // rdi\n  char *v47; // rax\n  char *v48; // rbp\n  __int64 v49; // rdi\n  char *v50; // rsi\n  __int64 v51; // rax\n  unsigned int v52; // eax\n  const char *v53; // rdi\n  __int64 v54; // rdx\n  unsigned __int64 v55; // rcx\n  signed __int64 v56; // rax\n  signed __int64 v57; // rbx\n  const unsigned __int16 **v58; // r14\n  __int64 v59; // rbp\n  __int64 v60; // rax\n  unsigned int v61; // ebp\n  __int64 v62; // rax\n  int v63; // eax\n  __int64 v64; // rsi\n  __int64 v65; // rdx\n  __int64 v66; // rcx\n  __int64 v67; // r8\n  char *v68; // rdi\n  __int64 v69; // rax\n  int v70; // eax\n  __int64 v71; // rsi\n  __int64 v72; // rax\n  unsigned int v73; // eax\n  char *v74; // rdi\n  bool v75; // cf\n  unsigned int v76; // eax\n  __int64 v77; // rdi\n  __int64 v78; // rdi\n  double v79; // xmm4_8\n  double v80; // xmm5_8\n  __int64 v81; // rax\n  char *v82; // rax\n  char *v83; // rbp\n  signed int v84; // ebx\n  char *v85; // rax\n  const char *v86; // rbp\n  __int64 v87; // rax\n  const unsigned __int16 **v88; // r14\n  signed __int64 v89; // rbx\n  __int64 v90; // rbp\n  const char *v91; // rsi\n  const char *v92; // rdi\n  __int64 v93; // rdi\n  const char *v94; // rdi\n  __int128 v95; // xmm0\n  __int64 v96; // rax\n  unsigned int v98; // [rsp+0h] [rbp-698h]\n  int v99; // [rsp+4h] [rbp-694h]\n  unsigned int v100; // [rsp+8h] [rbp-690h]\n  unsigned int v101; // [rsp+Ch] [rbp-68Ch]\n  int v102; // [rsp+10h] [rbp-688h]\n  unsigned int v103; // [rsp+14h] [rbp-684h]\n  unsigned int v104; // [rsp+18h] [rbp-680h]\n  int v105; // [rsp+1Ch] [rbp-67Ch]\n  unsigned int s1[20]; // [rsp+20h] [rbp-678h]\n  char s[76]; // [rsp+70h] [rbp-628h]\n  int v108; // [rsp+BCh] [rbp-5DCh]\n  unsigned int v109[3]; // [rsp+C0h] [rbp-5D8h]\n  char v110[1484]; // [rsp+CCh] [rbp-5CCh]\n\n  v11 = a4;\n  v12 = a3;\n  v13 = a2;\n  v99 = 0;\n  setbuf(stdout, 0LL);\n  v14 = *a1;\n  *(__m128i *)&xmmword_8A8560 = *a1;\n  if ( v12 )\n  {\n    sub_41E730(a2, (__int64 **)xmmword_8A8560);\n    v15 = (const char *)&xmmword_8A8560;\n    v16 = v13 + 1;\n    v13[1] = sub_41EE30(v13, (__int64 *)&xmmword_8A8560, v11);\n    v17 = 1;\n  }\n  else\n  {\n    v15 = \"SZ\";\n    if ( (unsigned int)sub_401E10((__int64 **)xmmword_8A8560, \"SZ\", &v103) )\n      sub_41DFC0(v103);\n    if ( *v13 )\n    {\n      *v13 = sub_41E3E0();\n      v16 = v13 + 1;\n      v13[1] = 1;\n    }\n    else\n    {\n      v16 = v13 + 1;\n      v13[1] = 2;\n    }\n    v17 = 0;\n  }\n  byte_8A8570 = v17;\n  do\n  {\n    dword_565CA4 = 4711;\n    puts(\"\\nBeginning ASCII mode game.\\n\");\n    v18 = (char *)v13;\n    sub_41E670(v13);\n    if ( v13[6] != v13[1] || (v18 = (char *)v13, v15 = (const char *)&v99, sub_45F2B0(v13, &v99), v99 <= 1) )\n    {\n      do\n      {\n        if ( dword_565CA8 )\n          sub_45F420(v18, v15);\n        v19 = sub_4341A0(*v16);\n        sub_434040(\"%s(%d): \", v19, (unsigned int)(dword_98A7C0 + 1));\n        if ( !fgets(s, 80, stdin) )\n        {\nLABEL_208:\n          v94 = \"\\nThanks! for playing GNU Go.\\n\";\n          return puts(v94);\n        }\n        v15 = \";\";\n        v18 = s;\n        while ( 1 )\n        {\n          v20 = strtok(v18, \";\");\n          v21 = v20;\n          if ( !v20 )\n            break;\n          v22 = v20;\n          switch ( (unsigned int)sub_45F9B0(v20) )\n          {\n            case 0u:\n            case 1u:\n            case 2u:\n              goto LABEL_208;\n            case 3u:\n              printf(\"\\nGNU Go wins by resignation.\");\n              v95 = (unsigned int)dword_4AE3C0[*v16 == 1];\n              v96 = sub_401AB0(&xmmword_8A8560);\n              sub_448D20(v96, (__int64 *)&xmmword_8A8560);\n              goto LABEL_208;\n            case 4u:\n              ++v99;\n              if ( !byte_8A8570 )\n              {\n                byte_8A8570 = 1;\n                v14 = (__m128i)(unsigned int)dword_98A788;\n                sub_402BA0(\n                  (__int64 **)xmmword_8A8560,\n                  1,\n                  (unsigned int)dword_88C240,\n                  (unsigned int)dword_565C78,\n                  dword_88C300);\n                sub_401FC0(xmmword_8A8560, \"HA\", *v13);\n                if ( (signed int)*v13 > 0 )\n                  sub_41E3F0();\n              }\n              sub_41E040(-1, -1, v13[1]);\n              sub_448BB0(*(&xmmword_8A8560 + 1), 0);\n              v24 = v13[1];\n              v25 = sub_401820((__int64 *)&xmmword_8A8560);\n              sub_448D20(v25, (__int64 *)&xmmword_8A8560);\n              v13[1] = 3 - v13[1];\n              goto LABEL_47;\n            case 5u:\n              v26 = 0LL;\n              goto LABEL_32;\n            case 6u:\n              v21 += 6;\n              v27 = sub_45F9B0(v21);\n              if ( v27 == 4 )\n              {\n                ++v99;\n                if ( !byte_8A8570 )\n                {\n                  byte_8A8570 = 1;\n                  v14 = (__m128i)(unsigned int)dword_98A788;\n                  sub_402BA0(\n                    (__int64 **)xmmword_8A8560,\n                    1,\n                    (unsigned int)dword_88C240,\n                    (unsigned int)dword_565C78,\n                    dword_88C300);\n                  sub_401FC0(xmmword_8A8560, \"HA\", *v13);\n                  if ( (signed int)*v13 > 0 )\n                    sub_41E3F0();\n                }\n                sub_41E040(-1, -1, v13[1]);\n                sub_448BB0(*(&xmmword_8A8560 + 1), 0);\n                v71 = v13[1];\n                v72 = sub_401820((__int64 *)&xmmword_8A8560);\n                sub_448D20(v72, (__int64 *)&xmmword_8A8560);\n                v13[1] = 3 - v13[1];\n                v13[6] = 3 - v13[6];\n                sub_4018D0((__int64 *)&xmmword_8A8560);\n              }\n              else if ( v27 == 5 )\n              {\n                v26 = 1LL;\nLABEL_32:\n                sub_460050(v13, v21, &v99, v26);\n              }\n              else\n              {\n                v73 = sub_45F9B0(v21);\n                printf(\"Illegal forced move: %s %d\\n\", v21, v73);\n              }\n              goto LABEL_16;\n            case 7u:\n              v13[6] = 3 - v13[6];\n              goto LABEL_47;\n            case 8u:\n              if ( (unsigned int)__isoc99_sscanf(v21 + 5, \"%d\", &v100) != 1 )\n                goto LABEL_137;\n              if ( (v100 & 0x80000000) != 0 )\n              {\n                v32 = \"\\nInvalid number of moves specified: %d\\n\";\n                goto LABEL_157;\n              }\n              if ( v100 )\n              {\n                v28 = 1;\n                do\n                {\n                  v13[6] = 3 - v13[6];\n                  sub_45F2B0(v13, &v99);\n                  if ( v99 > 1 )\n                    break;\n                  v30 = __OFSUB__(v28, v100);\n                  v29 = (signed int)(v28++ - v100) < 0;\n                }\n                while ( v29 ^ v30 );\n              }\n              goto LABEL_16;\n            case 9u:\n              v31 = v13[6];\n              if ( v31 != 1 )\n                goto LABEL_46;\n              v13[6] = 2;\n              if ( *v16 == 2 )\n                goto LABEL_47;\n              goto LABEL_16;\n            case 0xAu:\n              v31 = v13[6];\n              if ( v31 == 2 )\n              {\n                v13[6] = 1;\n                v31 = 1;\n              }\nLABEL_46:\n              if ( v31 == *v16 )\nLABEL_47:\n                sub_45F2B0(v13, &v99);\n              goto LABEL_16;\n            case 0xBu:\n              if ( byte_8A8570 == 1 )\n                goto LABEL_105;\n              if ( (unsigned int)__isoc99_sscanf(v21 + 9, \"%d\", &v100) != 1 )\n                goto LABEL_137;\n              if ( v100 < 0xA )\n              {\n                sub_41DFC0(dword_565C68);\n                v76 = sub_41E3E0();\n                *v13 = v76;\n                printf(\"\\nSet handicap to %d\\n\", v76);\n                v75 = *v13 < 1;\n                goto LABEL_162;\n              }\n              v32 = \"\\nInvalid handicap: %d\\n\";\nLABEL_157:\n              printf(v32);\n              goto LABEL_16;\n            case 0xCu:\n              if ( byte_8A8570 == 1 )\n              {\n                puts(\"Boardsize cannot be changed after record is started!\");\n                goto LABEL_16;\n              }\n              if ( (unsigned int)__isoc99_sscanf(v21 + 10, \"%d\", &v100) != 1 )\n                goto LABEL_137;\n              if ( v100 - 5 >= 0xF )\n              {\n                printf(\"\\nInvalid board size: %d\\n\", v100);\n                goto LABEL_16;\n              }\n              v103 = v100;\n              sub_41DFC0(v100);\n              v77 = *v13;\n              *v13 = sub_41E3E0();\n              sub_401FC0(xmmword_8A8560, \"SZ\", v103);\n              goto LABEL_95;\n            case 0xDu:\n              if ( byte_8A8570 == 1 )\n              {\n                puts(\"Komi cannot be modified after game record is started!\");\n                goto LABEL_16;\n              }\n              if ( (unsigned int)__isoc99_sscanf(v21 + 5, \"%f\", &v104) != 1 )\n                goto LABEL_137;\n              v14 = (__m128i)v104;\n              dword_98A788 = v104;\n              *(double *)v14.m128i_i64 = *(float *)&v104;\n              printf(\"\\nSet Komi to %.1f\\n\", \"%f\", *(float *)&v104);\n              goto LABEL_16;\n            case 0xEu:\n              if ( (unsigned int)__isoc99_sscanf(v21 + 6, \"%d\", &v100) != 1 )\n                goto LABEL_137;\n              dword_98A79C = v100;\n              v32 = \"\\nSet depth to %d\\n\";\n              goto LABEL_157;\n            case 0xFu:\n              putchar(10);\n              sub_41E670(v13);\n              goto LABEL_16;\n            case 0x10u:\n              if ( !dword_565CA8 )\n                sub_45F420(v22, \";\");\n              goto LABEL_16;\n            case 0x11u:\n              dword_565CA8 = dword_565CA8 == 0;\n              goto LABEL_16;\n            case 0x12u:\n              puts(\"\\nCommands:\");\n              puts(\" back                Take back your last move\");\n              puts(\" boardsize           Set boardsize (on move 1 only)\");\n              puts(\" comment             Write a comment to outputfile\");\n              puts(\" depth <num>         Set depth for reading\");\n              puts(\" display             Display game board\");\n              puts(\" exit                Exit GNU Go\");\n              puts(\" force <move>        Force a move for current color\");\n              puts(\" forward             Go to next node in game tree\");\n              puts(\" goto <movenum>      Go to movenum in game tree\");\n              puts(\" level <amount>      Playing level (default = 10)\");\n              puts(\" handicap <num>      Set fixed handicap (on move 1 only)\");\n              puts(\" freehandicap <num>  Place free handicap (on move 1 only)\");\n              puts(\"                     Omit <num> to place handicap yourself\");\n              puts(\" help                Display this help menu\");\n              puts(\" helpdebug           Display debug help menu\");\n              puts(\" info                Display program settings\");\n              puts(\" komi                Set komi (on move 1 only)\");\n              puts(\" last                Goto last node in game tree\");\n              puts(\" pass                Pass on your move\");\n              puts(\" play <num>          Play <num> moves\");\n              puts(\" playblack           Play as Black (switch if White)\");\n              puts(\" playwhite           Play as White (switch if Black)\");\n              puts(\" quit                Exit GNU Go\");\n              puts(\" resign              Resign the current game\");\n              puts(\" save <file>         Save the current game\");\n              puts(\" load <file>         Load a game from file\");\n              puts(\" score               Toggle display of score On/Off\");\n              puts(\" showboard           Toggle display of board On/Off\");\n              puts(\" switch              Switch the color you are playing\");\n              puts(\" undo                Take the last move back (same as back)\");\n              printf(\" <move>              A move of the format <letter><number>\");\n              putchar(10);\n              goto LABEL_16;\n            case 0x13u:\n            case 0x17u:\n              if ( (unsigned int)sub_41E050(1) )\n              {\n                sub_4018D0((__int64 *)&xmmword_8A8560);\n                sub_401740((__int64 *)&xmmword_8A8560);\n                *v16 = 3 - *v16;\n              }\n              else\n              {\n                puts(\"\\nCan't undo.\");\n              }\n              goto LABEL_16;\n            case 0x14u:\n              puts(\"\\nEnter comment. Press ENTER when ready.\");\n              fgets(s, 80, stdin);\n              sub_4018D0((__int64 *)&xmmword_8A8560);\n              goto LABEL_16;\n            case 0x15u:\n              v33 = dword_88C250 == 0;\n              dword_88C250 = dword_88C250 == 0;\n              if ( !v33 )\n                dword_565CA4 = 4711;\n              goto LABEL_16;\n            case 0x16u:\n              dword_8A8574 = dword_8A8574 == 0;\n              goto LABEL_16;\n            case 0x18u:\n              v34 = sub_4017A0((__int64 *)&xmmword_8A8560);\n              if ( (_DWORD)v34 )\n                *v16 = sub_41E060(v34, (__int64 *)*(&xmmword_8A8560 + 1), *v16);\n              else\n                puts(\"\\nEnd of game tree.\");\n              goto LABEL_16;\n            case 0x19u:\n              while ( 1 )\n              {\n                v23 = sub_4017A0((__int64 *)&xmmword_8A8560);\n                if ( !(_DWORD)v23 )\n                  break;\n                *v16 = sub_41E060(v23, (__int64 *)*(&xmmword_8A8560 + 1), *v16);\n              }\n              goto LABEL_16;\n            case 0x1Au:\n              strtok(v21, \" \");\n              v35 = 0;\n              v36 = \" \";\n              v37 = (__int64)strtok(0LL, \" \");\n              if ( v37 )\n              {\n                if ( !(unsigned int)sub_434450(dword_565C68, (char *)v37, v109, (int *)s1) )\n                  goto LABEL_76;\n                v35 = v109[0];\n                v37 = 5LL * (signed int)v109[0];\n                LODWORD(v36) = s1[0];\n                if ( !byte_98A1C5[20 * v109[0] + s1[0]] )\n                  goto LABEL_76;\n              }\n              v63 = sub_41E430(v37, &v98, &v101, v35, (int)v36);\n              v64 = v109[0];\n              v65 = s1[0];\n              if ( v63 )\n              {\n                v66 = v98;\n                v67 = v101;\n                v68 = \"\\nSuccessfull attack of %m at %m\\n\";\n                goto LABEL_144;\n              }\n              v74 = \"\\n%m cannot be attacked\\n\";\n              goto LABEL_160;\n            case 0x1Bu:\n              strtok(v21, \" \");\n              v38 = 0;\n              v39 = \" \";\n              v40 = (__int64)strtok(0LL, \" \");\n              if ( !v40\n                || (unsigned int)sub_434450(dword_565C68, (char *)v40, v109, (int *)s1)\n                && (v38 = v109[0],\n                    v40 = 5LL * (signed int)v109[0],\n                    LODWORD(v39) = s1[0],\n                    byte_98A1C5[20 * v109[0] + s1[0]]) )\n              {\n                v69 = sub_41E430(v40, &v98, &v101, v38, (int)v39);\n                if ( (_DWORD)v69 )\n                {\n                  v70 = sub_41E4B0(v69, &v98, &v101, v109[0], s1[0]);\n                  v64 = v109[0];\n                  v65 = s1[0];\n                  if ( v70 )\n                  {\n                    v66 = v98;\n                    v67 = v101;\n                    v68 = \"\\nSuccessfull defense of %m at %m\\n\";\nLABEL_144:\n                    sub_434040(v68, v64, v65, v66, v67);\n                  }\n                  else\n                  {\n                    v74 = \"\\n%m cannot be defended\\n\";\nLABEL_160:\n                    sub_434040(v74, v64, v65);\n                  }\n                }\n                else\n                {\n                  sub_434040(\"\\nThere is no need to defend %m\\n\", v109[0], s1[0]);\n                }\n              }\n              else\n              {\nLABEL_76:\n                puts(\"\\ninvalid point!\");\n              }\n              goto LABEL_16;\n            case 0x1Cu:\n              puts(\n                \"capture <pos>    try to capture indicated group\\n\"\n                \"dead             Toggle display of dead stones\\n\"\n                \"defend <pos>     try to defend indicated group\\n\"\n                \"listdragons      print dragon info \\n\"\n                \"showarea         display area\\n\"\n                \"showdragons      display dragons\\n\"\n                \"showmoyo         display moyo\\n\"\n                \"showterri        display territory\");\n              goto LABEL_16;\n            case 0x1Du:\n              v41 = dword_88C224;\n              dword_88C224 = 4;\n              goto LABEL_81;\n            case 0x1Eu:\n              v41 = dword_88C224;\n              dword_88C224 = 2;\n              goto LABEL_81;\n            case 0x1Fu:\n              v41 = dword_88C224;\n              dword_88C224 = 1;\nLABEL_81:\n              sub_418580(*v16, (const char *)4);\n              sub_445360();\n              dword_88C224 = v41;\n              goto LABEL_16;\n            case 0x20u:\n              strtok(v21, \" \");\n              v42 = strtok(0LL, \" \");\n              v43 = v42;\n              if ( v42 )\n              {\n                if ( !strncmp(v42, \"last\", 4uLL) )\n                {\n                  v43 = \"9999\";\n                }\n                else if ( !strncmp(v43, \"first\", 4uLL) )\n                {\n                  v43 = \"1\";\n                }\n                printf(\"goto %s\\n\", v43);\n                sub_41EE30(v13, (__int64 *)&xmmword_8A8560, v43);\n              }\n              goto LABEL_16;\n            case 0x21u:\n              strtok(v21, \" \");\n              v44 = strtok(0LL, \" \");\n              v21 = v44;\n              if ( v44 )\n              {\n                v45 = strlen(v44);\n                v21[v45 - 1] = 0;\n                LOBYTE(v45) = byte_8A8570;\n                if ( !byte_8A8570 )\n                {\n                  byte_8A8570 = 1;\n                  v14 = (__m128i)(unsigned int)dword_98A788;\n                  sub_402BA0(\n                    (__int64 **)xmmword_8A8560,\n                    1,\n                    (unsigned int)dword_88C240,\n                    (unsigned int)dword_565C78,\n                    dword_88C300);\n                  v45 = (__int64)sub_401FC0(xmmword_8A8560, \"HA\", *v13);\n                  if ( (signed int)*v13 > 0 )\n                    v45 = sub_41E3F0();\n                }\n                sub_4033B0(v45, (__int64)xmmword_8A8560, v21);\n                printf(\"You may resume the game\", v21);\n                printf(\" with -l %s --mode ascii\\n\", v21);\n                v46 = \"or load %s\\n\";\nLABEL_103:\n                printf(v46, v21);\n              }\n              else\n              {\n                puts(\"Please specify filename\");\n              }\n              goto LABEL_16;\n            case 0x22u:\n              strtok(v21, \" \");\n              v47 = strtok(0LL, \" \");\n              v48 = v47;\n              if ( v47 )\n              {\n                v47[strlen(v47) - 1] = 0;\n                if ( (unsigned int)sub_401700((__int64)&xmmword_8A8560, v48) )\n                {\n                  byte_8A8570 = 1;\n                  sub_41E730(v13, (__int64 **)xmmword_8A8560);\n                  sub_41EE30(v13, (__int64 *)&xmmword_8A8560, 0LL);\nLABEL_95:\n                  sub_401FC0(xmmword_8A8560, \"HA\", *v13);\n                }\n                else\n                {\n                  fprintf(stderr, \"Cannot open or parse '%s'\\n\", v48);\n                }\n              }\n              else\n              {\n                puts(\"Please specify a filename\");\n              }\n              goto LABEL_16;\n            case 0x23u:\n              sub_418580(*v16, (const char *)4);\n              sub_44A610(1LL);\n              goto LABEL_16;\n            case 0x24u:\n              v49 = *v16;\n              sub_418580(v49, (const char *)4);\n              sub_414B60(v49, 4LL);\n              goto LABEL_16;\n            case 0x25u:\n              if ( (unsigned int)__isoc99_sscanf(v21 + 6, \"%d\", &v100) != 1 )\n                goto LABEL_137;\n              dword_565C78 = 10 - v100;\n              v32 = \"\\nSet hurry to %d\\n\";\n              goto LABEL_157;\n            case 0x26u:\n              if ( (unsigned int)__isoc99_sscanf(v21 + 6, \"%d\", &v100) != 1 )\n                goto LABEL_137;\n              dword_565C78 = v100;\n              v32 = \"\\nSet level to %d\\n\";\n              goto LABEL_157;\n            case 0x29u:\n              if ( byte_8A8570 )\n              {\nLABEL_105:\n                puts(\"Handicap cannot be changed after game is started!\");\n                goto LABEL_16;\n              }\n              while ( ((unsigned __int8)*v21 | 0x20) != 32 )\n                ++v21;\n              v50 = \"%d\";\n              if ( (unsigned int)__isoc99_sscanf(v21, \"%d\", &v98) != 1 )\n              {\n                while ( 1 )\n                {\n                  v53 = (const char *)(unsigned int)dword_565C68;\n                  sub_41DFC0(dword_565C68);\n                  v98 = 0;\n                  while ( 1 )\n                  {\n                    while ( 1 )\n                    {\n                      sub_45F420(v53, v50);\n                      puts(\"\\nType in coordinates of next handicap stone, or one of the following commands:\");\n                      puts(\"  undo        take back the last stone placed\");\n                      puts(\"  clear       remove all the stones placed so far\");\n                      puts(\"  done        finish placing handicap\\n\");\n                      printf(\"You have placed %d handicap stone(s) so far.\\n\\n\", v98);\n                      if ( !fgets((char *)s1, 80, stdin) )\n                        goto LABEL_16;\n                      v57 = -80LL;\n                      v58 = __ctype_b_loc();\n                      do\n                      {\n                        v59 = s[v57];\n                        if ( (*v58)[v59] & 0x100 )\n                          LODWORD(v59) = (*__ctype_tolower_loc())[v59];\n                        s[v57++] = v59;\n                      }\n                      while ( v57 );\n                      v50 = \"undo\";\n                      if ( strncmp((const char *)s1, \"undo\", 4uLL) )\n                        break;\n                      v60 = (signed int)v98;\n                      if ( v98 )\n                      {\n                        --v98;\n                        sub_407380(*(&v108 + v60));\n                        v54 = (signed int)v109[v98];\n                        v55 = (unsigned __int64)(1717986919 * v54) >> 63;\n                        v56 = 1717986919 * v54 >> 35;\n                        v50 = (char *)(unsigned int)(v56 + v55 - 1);\n                        v53 = \"\\nRemoved the stone at %m.\\n\";\n                        sub_433F90(\"\\nRemoved the stone at %m.\\n\", v50, (unsigned int)(v54 - 20 * (v56 + v55) - 1));\n                      }\n                      else\n                      {\n                        v53 = \"\\nNothing to undo.\";\n                        puts(\"\\nNothing to undo.\");\n                      }\n                    }\n                    v50 = \"clear\";\n                    if ( !strncmp((const char *)s1, \"clear\", 5uLL) )\n                      break;\n                    v50 = \"done\";\n                    if ( !strncmp((const char *)s1, \"done\", 4uLL) )\n                    {\n                      v52 = v98;\n                      if ( v98 != 1 )\n                        goto LABEL_158;\n                      v53 = \"\\nHandicap cannot be one stone. Either add some more, or delete the only stone.\";\n                      puts(\"\\nHandicap cannot be one stone. Either add some more, or delete the only stone.\");\n                    }\n                    else\n                    {\n                      v50 = (char *)s1;\n                      if ( (unsigned int)sub_434450(dword_565C68, (char *)s1, &v101, &v105) )\n                      {\n                        if ( byte_98A1C5[20 * v101 + v105] )\n                        {\n                          v53 = \"\\nThere's already a stone there.\";\n                          puts(\"\\nThere's already a stone there.\");\n                        }\n                        else\n                        {\n                          v61 = v105 + 20 * v101 + 21;\n                          v50 = (char *)2;\n                          v53 = (const char *)v61;\n                          sub_407220(v61, 2u);\n                          v62 = (signed int)v98++;\n                          v109[v62] = v61;\n                        }\n                      }\n                      else\n                      {\n                        v50 = (char *)s1;\n                        v53 = \"\\nInvalid command: %s\";\n                        printf(\"\\nInvalid command: %s\", s1);\n                      }\n                    }\n                  }\n                }\n              }\n              if ( (v98 & 0x80000000) != 0 || v98 == 1 )\n              {\nLABEL_137:\n                puts(\"\\nInvalid command syntax!\");\n                goto LABEL_16;\n              }\n              LOBYTE(v51) = sub_41DFC0(dword_565C68);\n              v98 = sub_45A0E0(v51, v98, v14, a6);\n              printf(\"\\nPlaced %d stones of free handicap.\\n\", v98, *(_QWORD *)&v98);\n              v52 = v98;\nLABEL_158:\n              *v13 = v52;\n              v75 = v52 < 1;\nLABEL_162:\n              *v16 = v75 + 1;\nLABEL_16:\n              v18 = 0LL;\n              v15 = \";\";\n              break;\n            default:\n              v46 = \"\\nInvalid command: %s\";\n              goto LABEL_103;\n          }\n        }\n      }\n      while ( v99 < 2 );\n    }\n    v78 = v13[6];\n    sub_41E530();\n    puts(\"\\nIf you disagree, we may count the game together.\");\n    puts(\"You may optionally save the game as an SGF file.\");\n    sub_445420(0LL, 0LL, *(double *)v14.m128i_i64, *(double *)a6.m128i_i64, a7, a8, v79, v80, a11);\n    sub_401AB0(&xmmword_8A8560);\nLABEL_167:\n    while ( 2 )\n    {\n      putchar(10);\n      puts(\"Type \\\"save <filename>\\\" to save,\");\n      puts(\"     \\\"count\\\" to recount,\");\n      puts(\"     \\\"quit\\\" to quit\");\n      puts(\" or  \\\"game\\\" to play again\");\n      v81 = (__int64)fgets(s, 80, stdin);\n      if ( v81 )\n      {\n        v82 = strtok(s, &byte_494DEA);\n        v83 = v82;\n        v81 = (unsigned int)sub_45F9B0(v82) - 2;\n        v84 = 1;\n        switch ( (_DWORD)v81 )\n        {\n          case 0:\n            v84 = 2;\n            goto LABEL_170;\n          case 0x1F:\n            strtok(v83, \" \");\n            v85 = strtok(0LL, \" \");\n            v86 = v85;\n            if ( v85 )\n            {\n              v87 = strlen(v85);\n              v86[v87 - 1] = 0;\n              LOBYTE(v87) = byte_8A8570;\n              if ( !byte_8A8570 )\n              {\n                byte_8A8570 = 1;\n                sub_402BA0(\n                  (__int64 **)xmmword_8A8560,\n                  1,\n                  (unsigned int)dword_88C240,\n                  (unsigned int)dword_565C78,\n                  dword_88C300);\n                v87 = (__int64)sub_401FC0(xmmword_8A8560, \"HA\", *v13);\n                if ( (signed int)*v13 > 0 )\n                  v87 = sub_41E3F0();\n              }\n              sub_4033B0(v87, (__int64)xmmword_8A8560, v86);\n            }\n            else\n            {\n              puts(\"Please specify filename\");\n            }\n            continue;\n          case 0x25:\nLABEL_170:\n            if ( v84 )\n              goto LABEL_205;\n            continue;\n          case 0x26:\n            puts(\"\\nGame over. Let's count!.\");\n            dword_8A8574 = 1;\n            sub_45F420(\"\\nGame over. Let's count!.\", &byte_494DEA);\n            puts(\"Dead stones are marked with small letters (x,o).\");\n            puts(\"\\nIf you don't agree, enter the location of a group\");\n            puts(\"to toggle its state or \\\"done\\\".\");\n            if ( !fgets((char *)v109, 12, stdin) )\n              continue;\n            v102 = 1;\n            v88 = __ctype_b_loc();\n            break;\n          default:\n            continue;\n        }\n        while ( 1 )\n        {\n          s1[0] = 0;\n          v89 = -12LL;\n          do\n          {\n            v90 = v110[v89];\n            if ( (*v88)[v90] & 0x100 )\n              LODWORD(v90) = (*__ctype_tolower_loc())[v90];\n            v110[v89] = v90;\n            s1[0] = v89++ + 13;\n          }\n          while ( v89 );\n          if ( !strncmp((const char *)v109, \"done\", 4uLL) )\n          {\n            v93 = v13[6];\n            sub_41E530();\n            goto LABEL_167;\n          }\n          if ( !strncmp((const char *)v109, \"quit\", 4uLL) )\n            goto LABEL_167;\n          if ( !strncmp((const char *)v109, \"xyzzy\", 5uLL) )\n          {\n            if ( v102 )\n            {\n              puts(\"\\nYou are in a debris room filled with stuff washed in from the\");\n              puts(\"surface.  A low wide passage with cobbles becomes plugged\");\n              puts(\"with mud and debris here, but an awkward canyon leads\");\n              puts(\"upward and west.  A note on the wall says:\");\n              puts(\"   Magic Word \\\"XYZZY\\\"\\n\");\n              v102 = 0;\n            }\n            else\n            {\n              puts(\"You are inside a building, a well house for a large spring.\\n\");\n              v102 = 1;\n            }\n            goto LABEL_200;\n          }\n          if ( !strncmp((const char *)v109, \"help\", 4uLL) )\n          {\n            puts(\"\\nIf there are dead stones on the board I will remove them.\");\n            puts(\"You must tell me where they are. Type the coordinates of a\");\n            puts(\"dead group, or type \\\"done\\\"\");\n          }\n          else\n          {\n            v91 = \"undo\";\n            if ( !strncmp((const char *)v109, \"undo\", 4uLL) )\n            {\n              puts(\"UNDO not allowed anymore. The status of the stones now\");\n              v92 = \"toggles after entering the location of it.\";\n              puts(\"toggles after entering the location of it.\");\n              goto LABEL_199;\n            }\n            if ( (unsigned int)sub_434450(dword_565C68, (char *)v109, s1, (int *)&v98) && byte_98A1C5[20 * s1[0] + v98] )\n            {\n              v91 = (const char *)((unsigned int)sub_416230(v98 + 20 * s1[0] + 21) == 0);\n              v92 = (const char *)(v98 + 20 * s1[0] + 21);\n              sub_44AD70((int)v92, (int)v91);\nLABEL_199:\n              sub_45F420(v92, v91);\n              goto LABEL_200;\n            }\n            puts(\"\\ninvalid!\");\n          }\nLABEL_200:\n          puts(\"Dead stones are marked with small letters (x,o).\");\n          puts(\"\\nIf you don't agree, enter the location of a group\");\n          puts(\"to toggle its state or \\\"done\\\".\");\n          if ( !fgets((char *)v109, 12, stdin) )\n            goto LABEL_167;\n        }\n      }\n      break;\n    }\n    v84 = 0;\nLABEL_205:\n    sub_448D20(v81, (__int64 *)&xmmword_8A8560);\n    v99 = 0;\n    sub_44E180();\n    sub_401BB0(xmmword_8A8560);\n    sub_4016F0(&xmmword_8A8560);\n    sub_401880((__int64 *)&xmmword_8A8560, dword_565C68);\n    byte_8A8570 = 0;\n    v15 = (const char *)(unsigned int)dword_565C68;\n    v14 = (__m128i)(unsigned int)dword_98A788;\n    sub_41E5F0((__int64)v13, dword_565C68, *(float *)&dword_98A788);\n  }\n  while ( v84 == 1 );\n  v94 = \"\\nThanks for playing GNU Go.\\n\";\n  return puts(v94);\n}\n", 
            "funcStartAddr": "0x45dd40L", 
            "funcEndAddr": "0x45f2aeL", 
            "funcName": "sub_45DD40"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_45F2B0@<rax>(__int64 a1@<rax>, unsigned int *a2@<rdi>, int *a3@<rsi>)\n{\n  int v3; // er15\n  const char *v4; // rax\n  int v5; // ebp\n  __int64 v6; // rsi\n  __int64 v7; // rax\n  __int64 result; // rax\n  __int64 v9; // [rsp+0h] [rbp-28h]\n\n  v9 = a1;\n  if ( !byte_8A8570 )\n  {\n    byte_8A8570 = 1;\n    sub_402BA0((__int64 **)xmmword_8A8560, 1, (unsigned int)dword_88C240, (unsigned int)dword_565C78, dword_88C300);\n    sub_401FC0(xmmword_8A8560, \"HA\", *a2);\n    if ( (signed int)*a2 > 0 )\n      sub_41E3F0();\n  }\n  v3 = sub_41E420((_DWORD *)&v9 + 1, &v9, a2[1]);\n  if ( dword_88C250 )\n  {\n    sub_41E540((__int64)&dword_88C258, (__int64)&dword_88C25C);\n    dword_565CA4 = (signed int)((float)(*(float *)&dword_88C258 + *(float *)&dword_88C25C) * 0.5);\n  }\n  dword_8A857C = HIDWORD(v9);\n  dword_8A8580 = v9;\n  v4 = sub_4341A0(a2[1]);\n  v5 = 0;\n  sub_434040(\"%s(%d): %m\\n\", v4, (unsigned int)(dword_98A7C0 + 1), HIDWORD(v9), (unsigned int)v9, v9);\n  if ( (unsigned int)sub_407B20((signed int)v9 + 20 * HIDWORD(v9) + 21) )\n    v5 = *a3 + 1;\n  *a3 = v5;\n  sub_41E040(SHIDWORD(v9), v9, a2[1]);\n  sub_448BB0(*(&xmmword_8A8560 + 1), v3);\n  v6 = a2[1];\n  v7 = sub_401820((__int64 *)&xmmword_8A8560);\n  sub_448D20(v7, (__int64 *)&xmmword_8A8560);\n  result = 3 - a2[1];\n  a2[1] = result;\n  return result;\n}\n", 
            "funcStartAddr": "0x45f2b0L", 
            "funcEndAddr": "0x45f420L", 
            "funcName": "sub_45F2B0"
        }, 
        {
            "decompiledFuncCode": "int sub_45F420()\n{\n  int v0; // er12\n  int v1; // ebp\n  const char *v2; // rdi\n  const char *v3; // rdi\n  __int64 v4; // rax\n  signed __int64 v5; // rcx\n  signed __int64 v6; // rcx\n  char *v7; // rsi\n  int v8; // esi\n  unsigned int v9; // er15\n  __int64 v10; // r12\n  signed __int64 v11; // rbx\n  signed int v12; // ebp\n  int v13; // er14\n  bool v14; // al\n  int v15; // er14\n  int v16; // edi\n  __int64 v17; // rsi\n  signed __int64 v18; // rsi\n  __int64 v19; // rsi\n  const char *v20; // rdi\n  __int64 v22; // rax\n  signed __int64 v23; // rdx\n  __int64 v24; // rax\n  signed __int64 v25; // rdx\n  __int64 v26; // rcx\n  signed __int64 v27; // rsi\n  char *v28; // [rsp+8h] [rbp-100h]\n  char dest[4]; // [rsp+10h] [rbp-F8h]\n  char v30; // [rsp+50h] [rbp-B8h]\n  char v31; // [rsp+51h] [rbp-B7h]\n  char src[2]; // [rsp+90h] [rbp-78h]\n\n  v0 = dword_565C68;\n  if ( dword_565C68 >= 26 )\n  {\n    strcpy(dest, \"   \");\n  }\n  else\n  {\n    strcpy(src, \" \");\n    strcpy(dest, \"   \");\n    if ( dword_565C68 <= 0 )\n    {\n      if ( dword_8A86FC == dword_565C68 )\n        goto LABEL_11;\n      goto LABEL_9;\n    }\n  }\n  v1 = 0;\n  do\n  {\n    strcat(dest, src);\n    v30 = ((unsigned int)(v1 + 65) > 0x48) + v1 + 65;\n    v31 = 0;\n    strcat(dest, &v30);\n    ++v1;\n  }\n  while ( v0 != v1 );\n  v0 = dword_565C68;\n  if ( dword_8A86FC != dword_565C68 )\n  {\nLABEL_9:\n    dword_8A86FC = v0;\n    memset(byte_8A8590, 46, 0x169uLL);\n    if ( v0 == 5 )\n    {\n      byte_8A85A4 = 43;\n      byte_8A85CA = 43;\n      byte_8A85A6 = 43;\n      byte_8A85CC = 43;\n      byte_8A85B8 = 43;\n    }\n    else\n    {\n      LODWORD(v4) = v0 - 3;\n      if ( v0 & 1 )\n      {\n        if ( (unsigned int)v4 > 8 )\n        {\n          byte_8A85CC = 43;\n          v24 = v0;\n          v25 = 19 * (v0 - 4LL);\n          byte_8A8593[v25] = 43;\n          byte_8A85C5[v24] = 43;\n          byte_8A858C[v25 + v24] = 43;\n          v26 = v0 / 2;\n          byte_8A85C9[v26] = 43;\n          v27 = 19 * v26;\n          byte_8A8593[v27] = 43;\n          byte_8A858C[v27 + v24] = 43;\n          byte_8A8590[v25 + v26] = 43;\n          byte_8A8590[v27 + v26] = 43;\n        }\n        else\n        {\n          byte_8A85B8 = 43;\n          v4 = (signed int)v4;\n          v6 = 19LL * (signed int)v4;\n          byte_8A8592[v6] = 43;\n          byte_8A85B6[v4] = 43;\n          byte_8A8590[v6 + v4] = 43;\n          byte_8A8590[20 * ((unsigned int)v0 >> 1)] = 43;\n        }\n      }\n      else if ( (unsigned int)v4 > 8 )\n      {\n        byte_8A85CC = 43;\n        v22 = v0;\n        v23 = 19 * (v0 - 4LL);\n        byte_8A8593[v23] = 43;\n        byte_8A85C5[v22] = 43;\n        byte_8A858C[v23 + v22] = 43;\n      }\n      else\n      {\n        byte_8A85B8 = 43;\n        v4 = (signed int)v4;\n        v5 = 19LL * (signed int)v4;\n        byte_8A8592[v5] = 43;\n        byte_8A85B6[v4] = 43;\n        byte_8A8590[v5 + v4] = 43;\n      }\n    }\n  }\nLABEL_11:\n  putchar(10);\n  printf(\"    White has captured %d pieces\\n\", (unsigned int)qword_98A760);\n  printf(\"    Black has captured %d pieces\\n\", (unsigned int)dword_98A800);\n  if ( dword_88C250 )\n  {\n    if ( dword_565CA4 == 4711 )\n    {\n      v2 = \"    No score estimate is available yet.\";\nLABEL_14:\n      puts(v2);\n      goto LABEL_25;\n    }\n    if ( dword_565CA4 < 0 )\n    {\n      v3 = \"    Estimated score: Black is ahead by %d\\n\";\n    }\n    else\n    {\n      if ( !dword_565CA4 )\n      {\n        v2 = \"    Estimated score: Even!\";\n        goto LABEL_14;\n      }\n      v3 = \"    Estimated score: White is ahead by %d\\n\";\n    }\n    printf(v3);\n  }\nLABEL_25:\n  putchar(10);\n  fflush(stdout);\n  v7 = &byte_494DEA;\n  if ( byte_8A8578 )\n    v7 = \"EMACS1\\n\";\n  printf(\"%s%s\\n\", v7, dest);\n  fflush(stdout);\n  v8 = dword_565C68;\n  if ( dword_565C68 <= 0 )\n    goto LABEL_64;\n  v28 = byte_8A8590;\n  v9 = 21;\n  v10 = 0LL;\n  do\n  {\n    printf(\" %2d\", (unsigned int)(v8 - v10));\n    if ( dword_565C68 <= 0 )\n    {\n      v19 = (unsigned int)(dword_565C68 - v10);\nLABEL_61:\n      v20 = \" %1d\";\n      goto LABEL_63;\n    }\n    v11 = 0LL;\n    v12 = 0;\n    do\n    {\n      v13 = ((v10 ^ (unsigned int)dword_8A857C | v11 ^ (unsigned int)dword_8A8580) == 0) << 7;\n      v14 = (unsigned int)sub_416230(v9 + (unsigned int)v11) == 0 && dword_8A8574 != 0;\n      v15 = (unsigned __int8)byte_98A1B0[v9 + v11] + v12 + v13;\n      if ( v15 <= 128 )\n      {\n        if ( v15 > 1 )\n        {\n          if ( v15 == 2 )\n          {\n            v17 = 32 * v14 | 0x58u;\nLABEL_47:\n            v12 = 0;\n            printf(off_499B43, v17);\n            goto LABEL_54;\n          }\n          if ( v15 != 128 )\n            goto LABEL_68;\n        }\n        else if ( v15 )\n        {\n          if ( v15 != 1 )\n            goto LABEL_68;\n          v17 = 32 * v14 | 0x4Fu;\n          goto LABEL_47;\n        }\n        v17 = (unsigned int)v28[v11];\n        goto LABEL_47;\n      }\n      if ( v15 <= 255 )\n      {\n        if ( v15 == 129 )\n        {\n          v18 = 79LL;\n        }\n        else\n        {\n          if ( v15 != 130 )\n          {\nLABEL_68:\n            fprintf(stderr, \"Illegal board value %d\\n\");\n            exit(1);\n          }\n          v18 = 88LL;\n        }\n        printf(\"(%c)\", v18);\n        v12 = 256;\n      }\n      else\n      {\n        switch ( v15 )\n        {\n          case 256:\n            v16 = v28[v11];\n            break;\n          case 257:\n            v16 = 32 * v14 | 0x4F;\n            break;\n          case 258:\n            v16 = 32 * v14 | 0x58;\n            break;\n          default:\n            goto LABEL_68;\n        }\n        putchar(v16);\n        v12 = 0;\n      }\nLABEL_54:\n      ++v11;\n    }\n    while ( v11 < dword_565C68 );\n    v19 = (unsigned int)(dword_565C68 - v10);\n    if ( !v12 )\n    {\n      if ( dword_565C68 >= 11 )\n      {\n        v20 = \" %2d\";\n        goto LABEL_63;\n      }\n      goto LABEL_61;\n    }\n    if ( dword_565C68 < 11 )\n      v20 = off_49F523;\n    else\n      v20 = off_494546;\nLABEL_63:\n    printf(v20, v19);\n    putchar(10);\n    ++v10;\n    v8 = dword_565C68;\n    v9 += 20;\n    v28 += 19;\n  }\n  while ( dword_565C68 > (signed int)v10 );\nLABEL_64:\n  fflush(stdout);\n  printf(\"%s\\n\\n\", dest);\n  return fflush(stdout);\n}\n", 
            "funcStartAddr": "0x45f420L", 
            "funcEndAddr": "0x45f9a7L", 
            "funcName": "sub_45F420"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_45F9B0@<rax>(char *s1@<rdi>, __int64 a2@<rax>)\n{\n  char *v2; // rbx\n  __int32_t v3; // ebp\n  char v4; // r14\n  unsigned int v5; // er15\n  signed int v6; // ebp\n  __int64 v8; // [rsp-2h] [rbp-28h]\n\n  v8 = a2;\n  v2 = s1;\n  if ( (unsigned int)__isoc99_sscanf(s1, \"%c%d\", (char *)&v8 + 3) != 2 )\n    goto LABEL_99;\n  v3 = SBYTE3(v8);\n  if ( (unsigned int)(SBYTE3(v8) + 128) <= 0x17F )\n    LOBYTE(v3) = (*__ctype_toupper_loc())[v3];\n  BYTE3(v8) = v3;\n  if ( (char)v3 < 65 )\n    goto LABEL_99;\n  v3 = (unsigned __int8)v3;\n  if ( (unsigned int)(unsigned __int8)v3 + 128 <= 0x17F )\n    v3 = (*__ctype_toupper_loc())[v3];\n  BYTE3(v8) = v3;\n  v6 = v3 << 24;\n  if ( v6 > 1509949440 || (v5 = 5, v6 == 1224736768) )\n  {\nLABEL_99:\n    v4 = *s1;\n    v5 = 18;\n    if ( *s1 != 63 )\n    {\n      while ( v4 == 32 )\n        v4 = (v2++)[1];\n      if ( !strncmp(v2, \"playblack\", 9uLL) )\n      {\n        v5 = 9;\n      }\n      else if ( !strncmp(v2, \"playwhite\", 9uLL) )\n      {\n        v5 = 10;\n      }\n      else if ( !strncmp(v2, \"showboard\", 9uLL) )\n      {\n        v5 = 17;\n      }\n      else if ( !strncmp(v2, \"showdragons\", 9uLL) )\n      {\n        v5 = 35;\n      }\n      else if ( !strncmp(v2, \"listdragons\", 9uLL) )\n      {\n        v5 = 36;\n      }\n      else if ( !strncmp(v2, \"boardsize\", 9uLL) )\n      {\n        v5 = 12;\n      }\n      else if ( !strncmp(v2, \"freehandicap\", 9uLL) )\n      {\n        v5 = 41;\n      }\n      else if ( !strncmp(v2, \"handicap\", 5uLL) )\n      {\n        v5 = 11;\n      }\n      else if ( !strncmp(v2, \"display\", 7uLL) )\n      {\n        v5 = 16;\n      }\n      else if ( !strncmp(v2, \"helpdebug\", 7uLL) )\n      {\n        v5 = 28;\n      }\n      else if ( !strncmp(v2, \"resign\", 6uLL) )\n      {\n        v5 = 3;\n      }\n      else if ( !strncmp(v2, \"showmoyo\", 6uLL) )\n      {\n        v5 = 30;\n      }\n      else if ( !strncmp(v2, \"showterri\", 6uLL) )\n      {\n        v5 = 31;\n      }\n      else if ( !strncmp(v2, \"showarea\", 6uLL) )\n      {\n        v5 = 29;\n      }\n      else if ( !strncmp(v2, \"depth\", 5uLL) )\n      {\n        v5 = 14;\n      }\n      else if ( !strncmp(v2, \"switch\", 5uLL) )\n      {\n        v5 = 7;\n      }\n      else if ( !strncmp(v2, \"komi\", 4uLL) )\n      {\n        v5 = 13;\n      }\n      else if ( !strncmp(v2, \"play\", 4uLL) )\n      {\n        v5 = 8;\n      }\n      else if ( !strncmp(v2, \"info\", 4uLL) )\n      {\n        v5 = 15;\n      }\n      else if ( !strncmp(v2, \"force\", 4uLL) )\n      {\n        v5 = 6;\n      }\n      else if ( !strncmp(v2, \"hurry\", 5uLL) )\n      {\n        v5 = 37;\n      }\n      else if ( !strncmp(v2, \"level\", 5uLL) )\n      {\n        v5 = 38;\n      }\n      else if ( !strncmp(v2, \"pass\", 4uLL) )\n      {\n        v5 = 4;\n      }\n      else if ( !strncmp(v2, \"save\", 3uLL) )\n      {\n        v5 = 33;\n      }\n      else if ( !strncmp(v2, \"load\", 3uLL) )\n      {\n        v5 = 34;\n      }\n      else if ( !strncmp(v2, off_49F5CB, 3uLL) )\n      {\n        v5 = 0;\n      }\n      else if ( !strncmp(v2, \"move\", 3uLL) )\n      {\n        v5 = 5;\n      }\n      else if ( !strncmp(v2, \"undo\", 3uLL) )\n      {\n        v5 = 19;\n      }\n      else if ( !strncmp(v2, \"comment\", 3uLL) )\n      {\n        v5 = 20;\n      }\n      else if ( !strncmp(v2, \"score\", 3uLL) )\n      {\n        v5 = 21;\n      }\n      else if ( !strncmp(v2, \"dead\", 3uLL) )\n      {\n        v5 = 22;\n      }\n      else if ( !strncmp(v2, \"capture\", 3uLL) )\n      {\n        v5 = 26;\n      }\n      else if ( !strncmp(v2, \"defend\", 3uLL) )\n      {\n        v5 = 27;\n      }\n      else if ( !strncmp(v2, \"exit\", 4uLL) )\n      {\n        v5 = 1;\n      }\n      else if ( !strncmp(v2, \"quit\", 4uLL) )\n      {\n        v5 = 2;\n      }\n      else if ( v4 != 104 )\n      {\n        if ( !strncmp(v2, \"back\", 2uLL) )\n        {\n          v5 = 23;\n        }\n        else if ( !strncmp(v2, \"forward\", 2uLL) )\n        {\n          v5 = 24;\n        }\n        else if ( !strncmp(v2, \"last\", 2uLL) )\n        {\n          v5 = 25;\n        }\n        else if ( !strncmp(v2, \"goto\", 2uLL) )\n        {\n          v5 = 32;\n        }\n        else if ( !strncmp(v2, \"game\", 2uLL) )\n        {\n          v5 = 39;\n        }\n        else\n        {\n          v5 = -((unsigned int)strncmp(v2, \"count\", 2uLL) >= 1) | 0x28;\n        }\n      }\n    }\n  }\n  return v5;\n}\n", 
            "funcStartAddr": "0x45f9b0L", 
            "funcEndAddr": "0x460043L", 
            "funcName": "sub_45F9B0"
        }, 
        {
            "decompiledFuncCode": "int __usercall sub_460050@<eax>(__int64 a1@<rax>, int *a2@<rdx>, int a3@<ecx>, unsigned int *a4@<rdi>, char *a5@<rsi>)\n{\n  int v5; // er15\n  int *v6; // r14\n  __int64 v7; // rsi\n  __int64 v8; // rax\n  int result; // eax\n  const char *v10; // rdi\n  __int64 v11; // rax\n  __int64 v12; // [rsp+0h] [rbp-28h]\n\n  v12 = a1;\n  v5 = a3;\n  v6 = a2;\n  if ( !(unsigned int)sub_434450(dword_565C68, a5, (_DWORD *)&v12 + 1, (int *)&v12) )\n  {\n    v10 = \"\\nInvalid move: %s\\n\";\n    return printf(v10, a5);\n  }\n  if ( !(unsigned int)sub_41E3C0(SHIDWORD(v12), v12, a4[1]) )\n  {\n    v10 = \"\\nIllegal move: %s\";\n    return printf(v10, a5);\n  }\n  *v6 = 0;\n  if ( dword_88C268 )\n    sub_433F90(\"\\nyour move: %m\\n\\n\", HIDWORD(v12), (unsigned int)v12);\n  if ( !byte_8A8570 )\n  {\n    byte_8A8570 = 1;\n    sub_402BA0((__int64 **)xmmword_8A8560, 1, (unsigned int)dword_88C240, (unsigned int)dword_565C78, dword_88C300);\n    sub_401FC0(xmmword_8A8560, \"HA\", *a4);\n    if ( (signed int)*a4 > 0 )\n      sub_41E3F0();\n  }\n  sub_41E040(SHIDWORD(v12), v12, a4[1]);\n  sub_448BB0(*(&xmmword_8A8560 + 1), 0);\n  v7 = a4[1];\n  v8 = sub_401820((__int64 *)&xmmword_8A8560);\n  sub_448D20(v8, (__int64 *)&xmmword_8A8560);\n  dword_8A857C = HIDWORD(v12);\n  dword_8A8580 = v12;\n  if ( dword_565CA8 && !(byte_8A8578 & 1) )\n  {\n    sub_45F420();\n    puts(\"GNU Go is thinking...\");\n  }\n  if ( v5 )\n  {\n    a4[6] = 3 - a4[6];\n    a4[1] = 3 - a4[1];\n    result = sub_4018D0((__int64 *)&xmmword_8A8560);\n  }\n  else\n  {\n    v11 = 3 - a4[1];\n    a4[1] = v11;\n    result = sub_45F2B0(v11, a4, v6);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x460050L", 
            "funcEndAddr": "0x4601e8L", 
            "funcName": "sub_460050"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_4601F0(__m128i *a1, unsigned int *a2, __int64 a3, const char *a4, double a5, __m128i a6, double a7, double a8, double a9, double a10, double a11)\n{\n  byte_8A8578 = 1;\n  return sub_45DD40(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n}\n", 
            "funcStartAddr": "0x4601f0L", 
            "funcEndAddr": "0x4601fcL", 
            "funcName": "sub_4601F0"
        }, 
        {
            "decompiledFuncCode": "char *__fastcall sub_460200(FILE *a1, int a2)\n{\n  setbuf(stdout, 0LL);\n  sub_45BC30(dword_565C68);\n  dword_8A8700 = a2;\n  sub_45BC40((__int64)sub_460250, (__int64)sub_460270);\n  sub_418500();\n  return sub_45B970((const char **)&off_565CB0, a1);\n}\n", 
            "funcStartAddr": "0x460200L", 
            "funcEndAddr": "0x460250L", 
            "funcName": "sub_460200"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_460250(__int64 a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  return sub_493CA0(a1, a2, a3, a4, (unsigned int)dword_565C68, (unsigned int)dword_8A8700);\n}\n", 
            "funcStartAddr": "0x460250L", 
            "funcEndAddr": "0x460263L", 
            "funcName": "sub_460250"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_460270(int a1, int a2, int *a3, int *a4)\n{\n  int v4; // er8\n  __int64 result; // rax\n  int v6; // er8\n  int v7; // er8\n\n  v4 = dword_565C68;\n  result = a1 & (unsigned int)a2;\n  if ( dword_8A8700 == 3 )\n  {\n    if ( (_DWORD)result != -1 )\n    {\n      v7 = dword_565C68 - 1;\nLABEL_7:\n      *a3 = v7 - a2;\n      a2 = a1;\n      goto LABEL_17;\n    }\n    goto LABEL_10;\n  }\n  if ( dword_8A8700 == 1 )\n  {\n    if ( (_DWORD)result != -1 )\n    {\n      *a3 = a2;\n      v6 = v4 - 1 - a1;\nLABEL_16:\n      a2 = v6;\n      goto LABEL_17;\n    }\n    goto LABEL_10;\n  }\n  if ( (_DWORD)result == -1 )\n  {\nLABEL_10:\n    *a3 = a1;\nLABEL_17:\n    *a4 = a2;\n    return result;\n  }\n  v7 = dword_565C68 - 1;\n  result = (unsigned int)dword_8A8700;\n  switch ( dword_8A8700 )\n  {\n    case 0:\n      goto LABEL_10;\n    case 1:\n      goto LABEL_7;\n    case 2:\n      result = (unsigned int)(v7 - a1);\n      *a3 = result;\n      goto LABEL_15;\n    case 4:\n      *a3 = a2;\n      a2 = a1;\n      goto LABEL_17;\n    case 5:\n      *a3 = v7 - a1;\n      goto LABEL_17;\n    case 6:\n      result = (unsigned int)(v7 - a2);\n      *a3 = result;\n      v6 = v7 - a1;\n      goto LABEL_16;\n    case 7:\n      *a3 = a1;\nLABEL_15:\n      v6 = v7 - a2;\n      goto LABEL_16;\n    default:\n      return result;\n  }\n  return result;\n}\n\n__int64 __fastcall sub_460270(int a1, int a2, int *a3, int *a4)\n{\n  int v4; // er8\n  __int64 result; // rax\n  int v6; // er8\n  int v7; // er8\n\n  v4 = dword_565C68;\n  result = a1 & (unsigned int)a2;\n  if ( dword_8A8700 == 3 )\n  {\n    if ( (_DWORD)result != -1 )\n    {\n      v7 = dword_565C68 - 1;\nLABEL_7:\n      *a3 = v7 - a2;\n      a2 = a1;\n      goto LABEL_17;\n    }\n    goto LABEL_10;\n  }\n  if ( dword_8A8700 == 1 )\n  {\n    if ( (_DWORD)result != -1 )\n    {\n      *a3 = a2;\n      v6 = v4 - 1 - a1;\nLABEL_16:\n      a2 = v6;\n      goto LABEL_17;\n    }\n    goto LABEL_10;\n  }\n  if ( (_DWORD)result == -1 )\n  {\nLABEL_10:\n    *a3 = a1;\nLABEL_17:\n    *a4 = a2;\n    return result;\n  }\n  v7 = dword_565C68 - 1;\n  result = (unsigned int)dword_8A8700;\n  switch ( dword_8A8700 )\n  {\n    case 0:\n      goto LABEL_10;\n    case 1:\n      goto LABEL_7;\n    case 2:\n      result = (unsigned int)(v7 - a1);\n      *a3 = result;\n      goto LABEL_15;\n    case 4:\n      *a3 = a2;\n      a2 = a1;\n      goto LABEL_17;\n    case 5:\n      *a3 = v7 - a1;\n      goto LABEL_17;\n    case 6:\n      result = (unsigned int)(v7 - a2);\n      *a3 = result;\n      v6 = v7 - a1;\n      goto LABEL_16;\n    case 7:\n      *a3 = a1;\nLABEL_15:\n      v6 = v7 - a2;\n      goto LABEL_16;\n    default:\n      return result;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x493d00L", 
            "funcEndAddr": "0x493d7eL", 
            "funcName": "sub_460270"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_460270(int a1, int a2, int *a3, int *a4)\n{\n  int v4; // er8\n  __int64 result; // rax\n  int v6; // er8\n  int v7; // er8\n\n  v4 = dword_565C68;\n  result = a1 & (unsigned int)a2;\n  if ( dword_8A8700 == 3 )\n  {\n    if ( (_DWORD)result != -1 )\n    {\n      v7 = dword_565C68 - 1;\nLABEL_7:\n      *a3 = v7 - a2;\n      a2 = a1;\n      goto LABEL_17;\n    }\n    goto LABEL_10;\n  }\n  if ( dword_8A8700 == 1 )\n  {\n    if ( (_DWORD)result != -1 )\n    {\n      *a3 = a2;\n      v6 = v4 - 1 - a1;\nLABEL_16:\n      a2 = v6;\n      goto LABEL_17;\n    }\n    goto LABEL_10;\n  }\n  if ( (_DWORD)result == -1 )\n  {\nLABEL_10:\n    *a3 = a1;\nLABEL_17:\n    *a4 = a2;\n    return result;\n  }\n  v7 = dword_565C68 - 1;\n  result = (unsigned int)dword_8A8700;\n  switch ( dword_8A8700 )\n  {\n    case 0:\n      goto LABEL_10;\n    case 1:\n      goto LABEL_7;\n    case 2:\n      result = (unsigned int)(v7 - a1);\n      *a3 = result;\n      goto LABEL_15;\n    case 4:\n      *a3 = a2;\n      a2 = a1;\n      goto LABEL_17;\n    case 5:\n      *a3 = v7 - a1;\n      goto LABEL_17;\n    case 6:\n      result = (unsigned int)(v7 - a2);\n      *a3 = result;\n      v6 = v7 - a1;\n      goto LABEL_16;\n    case 7:\n      *a3 = a1;\nLABEL_15:\n      v6 = v7 - a2;\n      goto LABEL_16;\n    default:\n      return result;\n  }\n  return result;\n}\n\n__int64 __fastcall sub_460270(int a1, int a2, int *a3, int *a4)\n{\n  int v4; // er8\n  __int64 result; // rax\n  int v6; // er8\n  int v7; // er8\n\n  v4 = dword_565C68;\n  result = a1 & (unsigned int)a2;\n  if ( dword_8A8700 == 3 )\n  {\n    if ( (_DWORD)result != -1 )\n    {\n      v7 = dword_565C68 - 1;\nLABEL_7:\n      *a3 = v7 - a2;\n      a2 = a1;\n      goto LABEL_17;\n    }\n    goto LABEL_10;\n  }\n  if ( dword_8A8700 == 1 )\n  {\n    if ( (_DWORD)result != -1 )\n    {\n      *a3 = a2;\n      v6 = v4 - 1 - a1;\nLABEL_16:\n      a2 = v6;\n      goto LABEL_17;\n    }\n    goto LABEL_10;\n  }\n  if ( (_DWORD)result == -1 )\n  {\nLABEL_10:\n    *a3 = a1;\nLABEL_17:\n    *a4 = a2;\n    return result;\n  }\n  v7 = dword_565C68 - 1;\n  result = (unsigned int)dword_8A8700;\n  switch ( dword_8A8700 )\n  {\n    case 0:\n      goto LABEL_10;\n    case 1:\n      goto LABEL_7;\n    case 2:\n      result = (unsigned int)(v7 - a1);\n      *a3 = result;\n      goto LABEL_15;\n    case 4:\n      *a3 = a2;\n      a2 = a1;\n      goto LABEL_17;\n    case 5:\n      *a3 = v7 - a1;\n      goto LABEL_17;\n    case 6:\n      result = (unsigned int)(v7 - a2);\n      *a3 = result;\n      v6 = v7 - a1;\n      goto LABEL_16;\n    case 7:\n      *a3 = a1;\nLABEL_15:\n      v6 = v7 - a2;\n      goto LABEL_16;\n    default:\n      return result;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x493d00L", 
            "funcEndAddr": "0x493d7eL", 
            "funcName": "sub_460270"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_460290(__int64 a1)\n{\n  int v1; // eax\n  __int64 v3; // rax\n  unsigned int v4; // ebx\n  __int64 v5; // rax\n  int v6; // [rsp+Ch] [rbp-34Ch]\n  int v7; // [rsp+10h] [rbp-348h]\n  int v8; // [rsp+14h] [rbp-344h]\n  int v9; // [rsp+18h] [rbp-340h]\n  unsigned int v10; // [rsp+1Ch] [rbp-33Ch]\n  char v11; // [rsp+20h] [rbp-338h]\n  char v12; // [rsp+1B0h] [rbp-1A8h]\n\n  v9 = 0;\n  v8 = 0;\n  v1 = sub_45C350(a1, (signed int *)&v10, &v7, &v6);\n  if ( !v1 || v6 + 20 * v7 == -21 )\n    return sub_45BB40(\"invalid color or coordinate\", &v10);\n  __isoc99_sscanf(v1 + a1, \"%d\", &v9);\n  sub_418860(0LL, 0LL, v10);\n  sub_423710(v6 + 20 * v7 + 21, &v12);\n  sub_422E00(v6 + 20 * v7 + 21, &v11);\n  v3 = sub_410540(v10, (unsigned int)(v6 + 20 * v7 + 21), (__int64)&v8, v9, (__int64)&v12, (__int64)&v11);\n  v4 = v3;\n  sub_45C030(v3, 0);\n  LODWORD(v5) = sub_45BC50(\"%d\", v4);\n  if ( !v4 )\n    LODWORD(v5) = sub_45BC50(\n                    (char *)&off_49FD05,\n                    (unsigned int)(1717986919LL * v8 >> 35) + ((unsigned __int64)(1717986919LL * v8) >> 63) - 1,\n                    v8\n                  - 20 * ((unsigned int)(1717986919LL * v8 >> 35) + ((unsigned __int64)(1717986919LL * v8) >> 63))\n                  - 1);\n  return sub_45C070(v5);\n}\n", 
            "funcStartAddr": "0x460290L", 
            "funcEndAddr": "0x4603d7L", 
            "funcName": "sub_460290"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4603E0(__int64 a1)\n{\n  __int64 v1; // rax\n  signed __int64 v2; // r15\n  unsigned int v3; // er12\n  signed int v4; // er14\n  signed __int64 v5; // rbp\n  __int64 v6; // rax\n  unsigned __int64 v8; // rax\n  __int64 v9; // rax\n  unsigned int v10; // [rsp+Ch] [rbp-B8Ch]\n  int v11[364]; // [rsp+10h] [rbp-B88h]\n  int v12[374]; // [rsp+5C0h] [rbp-5D8h]\n\n  if ( !(unsigned int)sub_45C170(a1, (signed int *)&v10) )\n    return sub_45BB40(\"invalid color\", &v10);\n  v1 = (unsigned int)dword_565C68;\n  if ( dword_565C68 <= 0 )\n  {\n    v4 = 0;\n  }\n  else\n  {\n    v2 = 0LL;\n    v3 = 21;\n    v4 = 0;\n    do\n    {\n      if ( (signed int)v1 > 0 )\n      {\n        v5 = 0LL;\n        do\n        {\n          if ( !byte_98A1B0[v3 + v5] )\n          {\n            if ( (unsigned int)sub_407B30(v3 + (unsigned int)v5, v10) )\n            {\n              v6 = v4;\n              v12[v6] = v2;\n              ++v4;\n              v11[v6] = v5;\n            }\n          }\n          ++v5;\n          v1 = dword_565C68;\n        }\n        while ( v5 < dword_565C68 );\n      }\n      ++v2;\n      v3 += 20;\n    }\n    while ( v2 < (signed int)v1 );\n  }\n  LODWORD(v8) = sub_45C030(v1, 0);\n  LODWORD(v9) = sub_45C460(v8, v11, v4, (__int64)v12);\n  return sub_45C070(v9);\n}\n", 
            "funcStartAddr": "0x4603e0L", 
            "funcEndAddr": "0x4604c2L", 
            "funcName": "sub_4603E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4604D0(__int64 a1)\n{\n  __int64 v1; // rax\n  int v2; // ebx\n  __int64 v3; // rax\n  char *v5; // rdi\n  int v6; // [rsp+4h] [rbp-14h]\n  int v7; // [rsp+8h] [rbp-10h]\n  int v8; // [rsp+Ch] [rbp-Ch]\n\n  if ( !(unsigned int)sub_45C270(a1, &v8, &v7) )\n  {\n    v5 = \"invalid coordinate\";\n    return sub_45BB40(v5, &v8);\n  }\n  if ( !byte_98A1C5[20 * v8 + v7] )\n  {\n    v5 = \"vertex must not be empty\";\n    return sub_45BB40(v5, &v8);\n  }\n  v1 = sub_43B050(v7 + 20 * v8 + 21, (unsigned int *)&v6);\n  v2 = v1;\n  sub_45C030(v1, 0);\n  LODWORD(v3) = sub_45BF90(\"%d\", (unsigned int)dword_4B26D0[v2]);\n  if ( v2 > 0 )\n  {\n    sub_45BF90(\" \");\n    v3 = sub_45BF70(\n           (1717986919LL * v6 >> 35) + ((unsigned __int64)(1717986919LL * v6) >> 63) - 1,\n           v6 - 20 * ((1717986919LL * v6 >> 35) + ((unsigned __int64)(1717986919LL * v6) >> 63)) - 1);\n  }\n  return sub_45C070(v3);\n}\n", 
            "funcStartAddr": "0x4604d0L", 
            "funcEndAddr": "0x460594L", 
            "funcName": "sub_4604D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4605A0(__int64 a1)\n{\n  int *v1; // rsi\n  int v2; // eax\n  __int64 v3; // rax\n  int v4; // ebx\n  __int64 v5; // rax\n  char *v7; // rdi\n  int v8; // [rsp+0h] [rbp-18h]\n  int v9; // [rsp+4h] [rbp-14h]\n  int v10; // [rsp+8h] [rbp-10h]\n  int v11; // [rsp+Ch] [rbp-Ch]\n\n  v1 = &v9;\n  v2 = sub_45C270(a1, &v9, &v8);\n  if ( !v2 )\n    goto LABEL_12;\n  if ( !byte_98A1C5[20 * v9 + v8] )\n  {\n    v7 = \"string vertex must be empty\";\n    return sub_45BB40(v7, v1);\n  }\n  v1 = &v11;\n  if ( (unsigned int)sub_45C270(v2 + a1, &v11, &v10) )\n  {\n    if ( byte_98A1C5[20 * v11 + v10] )\n    {\n      v3 = sub_43E4A0(v8 + 20 * v9 + 21, v10 + 20 * v11 + 21);\n      v4 = v3;\n      sub_45C030(v3, 0);\n      LODWORD(v5) = sub_45BF90(\"%d\", (unsigned int)dword_4B26D0[v4]);\n      return sub_45C070(v5);\n    }\n    v7 = \"string vertex must not be empty\";\n  }\n  else\n  {\nLABEL_12:\n    v7 = \"invalid coordinate\";\n  }\n  return sub_45BB40(v7, v1);\n}\n", 
            "funcStartAddr": "0x4605a0L", 
            "funcEndAddr": "0x460669L", 
            "funcName": "sub_4605A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_460670(char *s1)\n{\n  char v1; // al\n  char *v2; // rbx\n  __int32_t v3; // ebp\n  int *v4; // rsi\n  signed int v5; // edi\n  int v6; // eax\n  char *v8; // rdi\n  int v9; // [rsp+8h] [rbp-20h]\n  int v10; // [rsp+Ch] [rbp-1Ch]\n\n  v1 = *s1;\n  if ( *s1 )\n  {\n    v2 = s1 + 1;\n    do\n    {\n      LOBYTE(v3) = v1;\n      if ( (unsigned int)(v1 + 128) <= 0x17F )\n        v3 = (*__ctype_tolower_loc())[v1];\n      *(v2 - 1) = v3;\n      v1 = *v2++;\n    }\n    while ( v1 );\n  }\n  if ( !strncmp(s1, \"pass\", 4uLL) )\n  {\n    v10 = -1;\n    v9 = -1;\n    v6 = 1;\n    v5 = -1;\n  }\n  else\n  {\n    v4 = &v10;\n    if ( !(unsigned int)sub_45C270((__int64)s1, &v10, &v9) )\n    {\n      v8 = \"invalid coordinate\";\n      return sub_45BB40(v8, v4);\n    }\n    v5 = v9;\n    v6 = 20 * v10 + 21;\n  }\n  v4 = (int *)2;\n  if ( (unsigned int)sub_407B30(v6 + v5, 2u) )\n  {\n    sub_4074F0(v9 + 20 * v10 + 21, 2u);\n    return sub_45C090(&byte_494DEA, 2LL);\n  }\n  v8 = \"illegal move\";\n  return sub_45BB40(v8, v4);\n}\n", 
            "funcStartAddr": "0x460670L", 
            "funcEndAddr": "0x46076bL", 
            "funcName": "sub_460670"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_460770@<rax>(__int64 a1@<rax>, __int64 a2@<rdi>)\n{\n  char *v2; // rdi\n  __int64 v4; // [rsp-4h] [rbp-8h]\n  __int64 v5; // [rsp-4h] [rbp-8h]\n  __int64 v6; // [rsp-4h] [rbp-8h]\n\n  v4 = a1;\n  if ( (signed int)__isoc99_sscanf(a2, \"%d\", (char *)&v4 + 4) <= 0 )\n  {\n    v2 = \"boardsize not an integer\";\n    return sub_45BB40(v2, \"%d\", v6);\n  }\n  if ( (unsigned int)(HIDWORD(v4) - 5) >= 0xF )\n  {\n    if ( dword_565C8C == 1 )\n      v2 = \"unacceptable boardsize\";\n    else\n      v2 = \"unacceptable size\";\n    return sub_45BB40(v2, \"%d\", v6);\n  }\n  if ( (signed int)sub_40BBB0(3) > 0 )\n    sub_44E180();\n  dword_565C68 = HIDWORD(v4);\n  sub_4066E0();\n  sub_45BC30(SHIDWORD(v4));\n  sub_418500();\n  return sub_45C090(&byte_494DEA, \"%d\", v5);\n}\n", 
            "funcStartAddr": "0x460770L", 
            "funcEndAddr": "0x4607f5L", 
            "funcName": "sub_460770"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_460800@<rax>(__int64 a1@<rax>, __int64 a2@<rdi>)\n{\n  __int64 v2; // rsi\n  __int64 v4; // [rsp-4h] [rbp-8h]\n  __int64 v5; // [rsp-4h] [rbp-8h]\n  __int64 v6; // [rsp-4h] [rbp-8h]\n\n  v4 = a1;\n  if ( !(unsigned int)sub_45C170(a2, (signed int *)&v4 + 1) )\n    return sub_45BB40(\"invalid color\", (char *)&v4 + 4, v5);\n  if ( HIDWORD(v4) == 2 )\n    v2 = (unsigned int)dword_98A800;\n  else\n    v2 = (unsigned int)qword_98A760;\n  return sub_45C090(\"%d\", v2, v6);\n}\n", 
            "funcStartAddr": "0x460800L", 
            "funcEndAddr": "0x460840L", 
            "funcName": "sub_460800"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_460840@<rax>(__int64 a1@<rax>, __int64 a2@<rsi>)\n{\n  __int64 v2; // rdx\n  __int64 v4; // [rsp-8h] [rbp-8h]\n\n  v4 = a1;\n  if ( (signed int)sub_40BBB0(3) > 0 )\n    sub_44E180();\n  sub_4066E0();\n  return sub_45C090(&byte_494DEA, a2, v2, v4);\n}\n", 
            "funcStartAddr": "0x460840L", 
            "funcEndAddr": "0x460866L", 
            "funcName": "sub_460840"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_460870@<rax>(__int64 a1@<rax>, __int64 a2@<rsi>)\n{\n  __int64 v2; // ST00_8\n  __int64 v3; // rdx\n\n  v2 = a1;\n  sub_457EE0();\n  sub_459040();\n  return sub_45C090(&byte_494DEA, a2, v3, v2);\n}\n", 
            "funcStartAddr": "0x460870L", 
            "funcEndAddr": "0x460888L", 
            "funcName": "sub_460870"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_460890@<rax>(__int64 a1@<rax>, __int64 a2@<rdi>)\n{\n  char *v2; // rax\n  __int64 v4; // [rsp+0h] [rbp-8h]\n\n  v4 = a1;\n  if ( !(unsigned int)sub_45C270(a2, (_DWORD *)&v4 + 1, &v4) )\n    return sub_45BB40(\"invalid coordinate\", (char *)&v4 + 4);\n  v2 = (char *)sub_4341A0((unsigned __int8)byte_98A1C5[20 * SHIDWORD(v4) + (signed int)v4]);\n  return sub_45C090(v2, (char *)&v4 + 4);\n}\n", 
            "funcStartAddr": "0x460890L", 
            "funcEndAddr": "0x4608d9L", 
            "funcName": "sub_460890"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4608E0@<rax>(__int64 a1@<rax>, __int64 a2@<rdi>)\n{\n  __int64 v2; // rax\n  __int64 v3; // rax\n  __int64 v5; // [rsp+0h] [rbp-8h]\n\n  v5 = a1;\n  if ( !(unsigned int)sub_45C170(a2, (signed int *)&v5 + 1) )\n    return sub_45BB40(\"invalid color\", (char *)&v5 + 4, v5);\n  sub_4187D0(2u, (const char *)0x63);\n  v2 = sub_40F720(HIDWORD(v5), &v5, 0LL, dword_88C268);\n  if ( !(_DWORD)v2 )\n    LODWORD(v5) = 0;\n  sub_45C030(v2, 0);\n  v3 = sub_45BF70(\n         (1717986919LL * (signed int)v5 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)v5) >> 63) - 1,\n         v5\n       - 20 * ((1717986919LL * (signed int)v5 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)v5) >> 63))\n       - 1);\n  return sub_45C070(v3);\n}\n", 
            "funcStartAddr": "0x4608e0L", 
            "funcEndAddr": "0x460968L", 
            "funcName": "sub_4608E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_460970(__int64 a1)\n{\n  int *v1; // rsi\n  int v2; // eax\n  char v3; // bl\n  char v4; // dl\n  __int64 v5; // rax\n  int v6; // ebx\n  __int64 v7; // rax\n  char *v9; // rdi\n  int v10; // [rsp+Ch] [rbp-1Ch]\n  int v11; // [rsp+10h] [rbp-18h]\n  int v12; // [rsp+14h] [rbp-14h]\n  int v13; // [rsp+18h] [rbp-10h]\n  int v14; // [rsp+1Ch] [rbp-Ch]\n\n  v10 = 0;\n  v1 = &v14;\n  v2 = sub_45C270(a1, &v14, &v13);\n  if ( !v2 || (v1 = &v12, !(unsigned int)sub_45C270(v2 + a1, &v12, &v11)) )\n  {\n    v9 = \"invalid coordinate\";\n    return sub_45BB40(v9, v1);\n  }\n  v3 = byte_98A1C5[20 * v14 + v13];\n  if ( !v3 || (v1 = (int *)v11, (v4 = byte_98A1C5[20 * v12 + v11]) == 0) )\n  {\n    v9 = \"vertex must not be empty\";\n    return sub_45BB40(v9, v1);\n  }\n  if ( v3 != v4 )\n  {\n    v9 = \"vertices must have same color\";\n    return sub_45BB40(v9, v1);\n  }\n  v5 = sub_434520((unsigned int)(v13 + 20 * v14 + 21), (unsigned int)(v11 + 20 * v12 + 21), (char *)&v10);\n  v6 = v5;\n  sub_45C030(v5, 0);\n  LODWORD(v7) = sub_45BF90(\"%d\", (unsigned int)dword_4B26D0[v6]);\n  if ( v6 )\n    LODWORD(v7) = sub_45BC50(\n                    (char *)&off_49FD05,\n                    (unsigned int)(1717986919LL * v10 >> 35) + ((unsigned __int64)(1717986919LL * v10) >> 63) - 1,\n                    v10\n                  - 20 * ((unsigned int)(1717986919LL * v10 >> 35) + ((unsigned __int64)(1717986919LL * v10) >> 63))\n                  - 1);\n  return sub_45C070(v7);\n}\n", 
            "funcStartAddr": "0x460970L", 
            "funcEndAddr": "0x460a92L", 
            "funcName": "sub_460970"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_460AA0@<rax>(__int64 a1@<rax>, __int64 a2@<rdi>)\n{\n  unsigned int v2; // eax\n  char *v4; // rdi\n  __int64 v5; // [rsp+0h] [rbp-8h]\n\n  v5 = a1;\n  if ( (unsigned int)sub_45C270(a2, (_DWORD *)&v5 + 1, &v5) )\n  {\n    if ( byte_98A1C5[20 * SHIDWORD(v5) + (signed int)v5] )\n    {\n      v2 = sub_4083A0((signed int)v5 + 20 * HIDWORD(v5) + 21);\n      return sub_45C090(\"%d\", v2);\n    }\n    v4 = \"vertex must not be empty\";\n  }\n  else\n  {\n    v4 = \"invalid coordinate\";\n  }\n  return sub_45BB40(v4, (char *)&v5 + 4);\n}\n", 
            "funcStartAddr": "0x460aa0L", 
            "funcEndAddr": "0x460afcL", 
            "funcName": "sub_460AA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_460B00@<rax>(__int64 a1@<rax>, __int64 a2@<rdi>, __int64 a3@<rsi>)\n{\n  __int64 v3; // ST00_8\n  __int64 v4; // rdx\n\n  v3 = a1;\n  sub_493870(a2, a3);\n  return sub_45C090(\"%.3f\", a3, v4, v3);\n}\n", 
            "funcStartAddr": "0x460b00L", 
            "funcEndAddr": "0x460b13L", 
            "funcName": "sub_460B00"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_460B20@<rax>(__int64 a1@<rax>, __int64 a2@<rsi>)\n{\n  __int64 v2; // ST00_8\n  __int64 v3; // rdx\n\n  v2 = a1;\n  sub_44B060();\n  return sub_45C090(&byte_494DEA, a2, v3, v2);\n}\n", 
            "funcStartAddr": "0x460b20L", 
            "funcEndAddr": "0x460b33L", 
            "funcName": "sub_460B20"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_460B40(__int64 a1)\n{\n  __int64 v1; // rax\n  int v2; // ebx\n  __int64 v3; // rax\n  char *v5; // rdi\n  int v6; // [rsp+4h] [rbp-14h]\n  int v7; // [rsp+8h] [rbp-10h]\n  int v8; // [rsp+Ch] [rbp-Ch]\n\n  if ( !(unsigned int)sub_45C270(a1, &v8, &v7) )\n  {\n    v5 = \"invalid coordinate\";\n    return sub_45BB40(v5, &v8);\n  }\n  if ( !byte_98A1C5[20 * v8 + v7] )\n  {\n    v5 = \"vertex must not be empty\";\n    return sub_45BB40(v5, &v8);\n  }\n  v1 = sub_43B6F0(5LL * v8, v7 + 20 * v8 + 21, &v6);\n  v2 = v1;\n  sub_45C030(v1, 0);\n  LODWORD(v3) = sub_45BF90(\"%d\", (unsigned int)dword_4B26D0[v2]);\n  if ( v2 > 0 )\n  {\n    sub_45BF90(\" \");\n    v3 = sub_45BF70(\n           (1717986919LL * v6 >> 35) + ((unsigned __int64)(1717986919LL * v6) >> 63) - 1,\n           v6 - 20 * ((1717986919LL * v6 >> 35) + ((unsigned __int64)(1717986919LL * v6) >> 63)) - 1);\n  }\n  return sub_45C070(v3);\n}\n", 
            "funcStartAddr": "0x460b40L", 
            "funcEndAddr": "0x460c04L", 
            "funcName": "sub_460B40"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_460C10(__int64 a1)\n{\n  int *v1; // rsi\n  int v2; // eax\n  __int64 v3; // rax\n  int v4; // ebx\n  __int64 v5; // rax\n  char *v7; // rdi\n  int v8; // [rsp+0h] [rbp-18h]\n  int v9; // [rsp+4h] [rbp-14h]\n  int v10; // [rsp+8h] [rbp-10h]\n  int v11; // [rsp+Ch] [rbp-Ch]\n\n  v1 = &v9;\n  v2 = sub_45C270(a1, &v9, &v8);\n  if ( !v2 )\n    goto LABEL_12;\n  if ( !byte_98A1C5[20 * v9 + v8] )\n  {\n    v7 = \"string vertex must be empty\";\n    return sub_45BB40(v7, v1);\n  }\n  v1 = &v11;\n  if ( (unsigned int)sub_45C270(v2 + a1, &v11, &v10) )\n  {\n    if ( byte_98A1C5[20 * v11 + v10] )\n    {\n      v3 = sub_43E680(v8 + 20 * v9 + 21, v10 + 20 * v11 + 21);\n      v4 = v3;\n      sub_45C030(v3, 0);\n      LODWORD(v5) = sub_45BF90(\"%d\", (unsigned int)dword_4B26D0[v4]);\n      return sub_45C070(v5);\n    }\n    v7 = \"string vertex must not be empty\";\n  }\n  else\n  {\nLABEL_12:\n    v7 = \"invalid coordinate\";\n  }\n  return sub_45BB40(v7, v1);\n}\n", 
            "funcStartAddr": "0x460c10L", 
            "funcEndAddr": "0x460cd9L", 
            "funcName": "sub_460C10"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_460CE0(__int64 a1)\n{\n  int *v1; // rsi\n  int v2; // eax\n  char v3; // bl\n  char v4; // dl\n  __int64 v5; // rax\n  int v6; // ebx\n  __int64 v7; // rax\n  char *v9; // rdi\n  int v10; // [rsp+Ch] [rbp-1Ch]\n  int v11; // [rsp+10h] [rbp-18h]\n  int v12; // [rsp+14h] [rbp-14h]\n  int v13; // [rsp+18h] [rbp-10h]\n  int v14; // [rsp+1Ch] [rbp-Ch]\n\n  v10 = 0;\n  v1 = &v14;\n  v2 = sub_45C270(a1, &v14, &v13);\n  if ( !v2 || (v1 = &v12, !(unsigned int)sub_45C270(v2 + a1, &v12, &v11)) )\n  {\n    v9 = \"invalid coordinate\";\n    return sub_45BB40(v9, v1);\n  }\n  v3 = byte_98A1C5[20 * v14 + v13];\n  if ( !v3 || (v1 = (int *)v11, (v4 = byte_98A1C5[20 * v12 + v11]) == 0) )\n  {\n    v9 = \"vertex must not be empty\";\n    return sub_45BB40(v9, v1);\n  }\n  if ( v3 != v4 )\n  {\n    v9 = \"vertices must have same color\";\n    return sub_45BB40(v9, v1);\n  }\n  v5 = sub_434BB0((unsigned int)(v13 + 20 * v14 + 21), (unsigned int)(v11 + 20 * v12 + 21), (char *)&v10);\n  v6 = v5;\n  sub_45C030(v5, 0);\n  LODWORD(v7) = sub_45BF90(\"%d\", (unsigned int)dword_4B26D0[v6]);\n  if ( v6 )\n    LODWORD(v7) = sub_45BC50(\n                    (char *)&off_49FD05,\n                    (unsigned int)(1717986919LL * v10 >> 35) + ((unsigned __int64)(1717986919LL * v10) >> 63) - 1,\n                    v10\n                  - 20 * ((unsigned int)(1717986919LL * v10 >> 35) + ((unsigned __int64)(1717986919LL * v10) >> 63))\n                  - 1);\n  return sub_45C070(v7);\n}\n", 
            "funcStartAddr": "0x460ce0L", 
            "funcEndAddr": "0x460e02L", 
            "funcName": "sub_460CE0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_460E10(__int64 a1, __int64 a2, __int64 a3)\n{\n  unsigned int *v3; // rsi\n  char *v4; // rdi\n  __int64 v5; // rax\n  int v6; // eax\n  signed int v7; // er15\n  signed int v8; // er14\n  __int64 v9; // rbx\n  __int64 v10; // rdx\n  signed int v11; // ebp\n  unsigned int v12; // ebx\n  unsigned int v14; // [rsp+8h] [rbp-30h]\n  unsigned int v15; // [rsp+Ch] [rbp-2Ch]\n\n  v15 = -1;\n  v14 = -1;\n  v3 = (unsigned int *)&off_49FDF1;\n  if ( (signed int)__isoc99_sscanf(a1, &off_49FDF1, a3) >= 0 )\n  {\n    v3 = &v15;\n    if ( !(unsigned int)sub_45C270(a1, &v15, &v14) )\n    {\n      v4 = \"invalid coordinate\";\n      return (unsigned int)sub_45BB40(v4, v3);\n    }\n  }\n  if ( dword_98A7F4 > 0 )\n  {\n    v4 = \"dragon data unavailable when stackp > 0\";\n    return (unsigned int)sub_45BB40(v4, v3);\n  }\n  LOBYTE(v5) = sub_418580(0, (const char *)7);\n  sub_45C030(v5, 0);\n  v6 = dword_565C68;\n  if ( v15 >= dword_565C68 || v14 >= dword_565C68 || byte_98A1C5[20 * v15 + v14] )\n  {\n    if ( dword_565C68 > 0 )\n    {\n      v7 = 21;\n      v8 = 0;\n      while ( v6 <= 0 )\n      {\nLABEL_21:\n        ++v8;\n        v7 += 20;\n        if ( v8 >= v6 )\n          goto LABEL_22;\n      }\n      v9 = 0LL;\n      while ( 1 )\n      {\n        if ( v8 != v15 || v9 != v14 )\n        {\n          if ( v15 != -1 )\n            goto LABEL_20;\n          v10 = (unsigned int)(v7 + v9);\n          if ( !byte_98A1B0[v10] || v7 + (_DWORD)v9 != *((_DWORD *)&xmmword_954FB0 + 19 * v10 + 2) )\n            goto LABEL_20;\n          v11 = v9 + 20 * v8 + 21;\n        }\n        else\n        {\n          v11 = v7 + v9;\n        }\n        sub_45BF70(v8, v9);\n        sub_45BF90(\":\\n\", (unsigned int)v9);\n        sub_4162A0((char)stdout, v11);\n        v6 = dword_565C68;\nLABEL_20:\n        if ( ++v9 >= v6 )\n          goto LABEL_21;\n      }\n    }\n  }\n  else\n  {\n    sub_45BC50(\"%m empty\\n\");\n  }\nLABEL_22:\n  v12 = 0;\n  sub_45BF90(\"\\n\");\n  return v12;\n}\n", 
            "funcStartAddr": "0x460e10L", 
            "funcEndAddr": "0x460fb1L", 
            "funcName": "sub_460E10"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_460FC0@<rax>(__int64 a1@<rax>, __int64 a2@<rdi>)\n{\n  void *__ptr32 *v2; // rsi\n  __int64 v3; // rdx\n  __int64 v4; // r14\n  char *v5; // rdi\n  signed __int64 v6; // rsi\n  __int64 v7; // rax\n  signed __int64 v8; // rbx\n  int *v9; // r15\n  char v10; // al\n  int v11; // eax\n  char *v12; // rdi\n  __int64 v13; // rdx\n  unsigned __int64 v14; // rcx\n  signed __int64 v15; // rax\n  __int64 v16; // r8\n  int v17; // edi\n  unsigned int v18; // ebx\n  __int64 v20; // [rsp+0h] [rbp-28h]\n\n  v20 = a1;\n  v2 = (void *__ptr32 *)((char *)&v20 + 4);\n  if ( !(unsigned int)sub_45C270(a2, (_DWORD *)&v20 + 1, &v20) )\n  {\n    LODWORD(v4) = 0;\n    v2 = &off_49FE2A;\n    if ( (unsigned int)__isoc99_sscanf(a2, &off_49FE2A, v3) == -1 )\n      goto LABEL_6;\n    v5 = \"invalid coordinate\";\n    return (unsigned int)sub_45BB40(v5, v2);\n  }\n  if ( !byte_98A1C5[20 * SHIDWORD(v20) + (signed int)v20] )\n  {\n    v5 = \"vertex must not be empty\";\n    return (unsigned int)sub_45BB40(v5, v2);\n  }\n  LODWORD(v4) = v20 + 20 * HIDWORD(v20) + 21;\nLABEL_6:\n  v6 = 4LL;\n  LOBYTE(v7) = sub_4187D0(2u, (const char *)4);\n  sub_45C030(v7, 0);\n  v4 = (unsigned int)v4;\n  v8 = 21LL;\n  v9 = dword_95562C;\n  do\n  {\n    v10 = byte_98A1B0[v8];\n    if ( v10 == 3 )\n      goto LABEL_23;\n    if ( v4 != v8 )\n    {\n      if ( (_DWORD)v4 || !v10 || v8 != *(v9 - 14) )\n        goto LABEL_23;\nLABEL_14:\n      v6 = (unsigned int)v8 / 0x14 - 1;\n      sub_45BC50(\"%m: \", v6, (unsigned int)v8 + 20 - 20 * ((unsigned int)v8 / 0x14) - 21);\n      goto LABEL_15;\n    }\n    if ( !(_DWORD)v4 )\n      goto LABEL_14;\nLABEL_15:\n    v11 = *v9;\n    if ( !*v9 )\n    {\n      v12 = \"dead\\n\";\n      goto LABEL_21;\n    }\n    if ( v11 == 3 )\n    {\n      v12 = \"unknown\\n\";\n      goto LABEL_21;\n    }\n    if ( v11 == 1 )\n    {\n      v12 = \"alive\\n\";\nLABEL_21:\n      sub_45BF90(v12, v6);\n      goto LABEL_23;\n    }\n    v13 = *(v9 - 8);\n    v14 = (unsigned __int64)(1717986919 * v13) >> 63;\n    v15 = 1717986919 * v13 >> 35;\n    v6 = (unsigned int)(v15 + v14 - 1);\n    v16 = *(v9 - 4);\n    v17 = (1717986919 * v16 >> 35) + ((unsigned __int64)(1717986919 * v16) >> 63);\n    sub_45BC50(\n      \"critical %m %m\\n\",\n      v6,\n      (unsigned int)(v13 - 20 * (v15 + v14) - 1),\n      (unsigned int)(v17 - 1),\n      (unsigned int)(v16 - 20 * v17 - 1));\nLABEL_23:\n    ++v8;\n    v9 += 19;\n  }\n  while ( v8 != 400 );\n  v18 = 0;\n  sub_45BF90(\"\\n\", v6);\n  return v18;\n}\n", 
            "funcStartAddr": "0x460fc0L", 
            "funcEndAddr": "0x4611a1L", 
            "funcName": "sub_460FC0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4611B0(__int64 a1, __int64 a2, __int64 a3)\n{\n  int *v3; // rsi\n  signed __int64 v4; // rsi\n  __int64 v5; // rax\n  signed int v6; // eax\n  __int64 v7; // rdx\n  signed __int64 v8; // r13\n  signed __int64 v9; // r14\n  unsigned int v10; // er15\n  __int64 v11; // rbx\n  _DWORD *v12; // r12\n  signed __int64 v13; // rbp\n  __int64 v14; // rcx\n  __int64 v15; // rcx\n  char *v17; // rdi\n  unsigned int v18; // [rsp+Ch] [rbp-4Ch]\n  unsigned int v19; // [rsp+10h] [rbp-48h]\n  int v20; // [rsp+14h] [rbp-44h]\n  __int64 v21; // [rsp+18h] [rbp-40h]\n  __int64 v22; // [rsp+20h] [rbp-38h]\n\n  v19 = -1;\n  v18 = -1;\n  v20 = 0;\n  v3 = (int *)&off_49FDF1;\n  if ( (signed int)__isoc99_sscanf(a1, &off_49FDF1, a3) >= 0 )\n  {\n    v3 = (int *)&v19;\n    if ( !(unsigned int)sub_45C270(a1, &v19, &v18) )\n    {\n      v3 = &v20;\n      if ( !(unsigned int)sub_45C170(a1, &v20) )\n      {\n        v17 = \"invalid coordinate\";\n        return sub_45BB40(v17, v3);\n      }\n    }\n  }\n  if ( !byte_98A1C5[20 * v19 + v18] )\n  {\n    v17 = \"dragon_stones called on an empty vertex\";\n    return sub_45BB40(v17, v3);\n  }\n  v4 = 4LL;\n  LOBYTE(v5) = sub_418580(0, (const char *)4);\n  sub_45C030(v5, 0);\n  v6 = dword_565C68;\n  if ( dword_565C68 > 0 )\n  {\n    v7 = 0LL;\n    do\n    {\n      v21 = v7;\n      if ( v6 <= 0 )\n      {\n        v15 = v6;\n      }\n      else\n      {\n        v4 = (20 * (_DWORD)v7 + 21) & 0xFFFFFFFD;\n        v8 = 0LL;\n        v22 = (20 * (_DWORD)v7 + 21) & 0xFFFFFFFD;\n        do\n        {\n          if ( byte_98A1B0[v4 + v8] && (!v20 || v20 == (unsigned __int8)byte_98A1B0[v4 + v8]) )\n          {\n            v9 = v4 + v8;\n            if ( v4 + v8 == *((_DWORD *)&xmmword_954FB0 + 19 * (v4 + v8) + 2)\n              && (v19 >= v6\n               || v18 >= v6\n               || v9 == *((_DWORD *)&xmmword_954FB0 + 19 * (signed int)(v18 + 20 * v19 + 21) + 2)) )\n            {\n              if ( v6 > 0 )\n              {\n                v10 = 21;\n                v11 = 0LL;\n                do\n                {\n                  if ( v6 <= 0 )\n                  {\n                    v14 = v6;\n                  }\n                  else\n                  {\n                    v12 = (_DWORD *)(76LL * v10 + 9785272);\n                    v13 = 0LL;\n                    do\n                    {\n                      if ( v9 == *v12 )\n                      {\n                        sub_45BC50(\"%m \", (unsigned int)v11, (unsigned int)v13);\n                        v6 = dword_565C68;\n                      }\n                      ++v13;\n                      v14 = v6;\n                      v12 += 19;\n                    }\n                    while ( v13 < v6 );\n                  }\n                  ++v11;\n                  v10 += 20;\n                }\n                while ( v11 < v14 );\n              }\n              sub_45BF90(\"\\n\");\n              v6 = dword_565C68;\n              v4 = v22;\n            }\n          }\n          ++v8;\n          v15 = v6;\n        }\n        while ( v8 < v6 );\n      }\n      v7 = v21 + 1;\n    }\n    while ( v21 + 1 < v15 );\n  }\n  sub_45BF90(\"\\n\", v4);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x4611b0L", 
            "funcEndAddr": "0x461407L", 
            "funcName": "sub_4611B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_461410@<rax>(__int64 a1@<rax>, __int64 a2@<rsi>)\n{\n  __int64 v2; // ST00_8\n  __int64 v3; // rdx\n\n  v2 = a1;\n  sub_407180();\n  return sub_45C090(&byte_494DEA, a2, v3, v2);\n}\n", 
            "funcStartAddr": "0x461410L", 
            "funcEndAddr": "0x461423L", 
            "funcName": "sub_461410"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_461430(__int64 a1)\n{\n  return sub_45C090(\"%s\", a1);\n}\n", 
            "funcStartAddr": "0x461430L", 
            "funcEndAddr": "0x461442L", 
            "funcName": "sub_461430"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_461450(const char *a1)\n{\n  fputs(a1, stderr);\n  fflush(stdout);\n  fflush(stderr);\n  return sub_45C090(\"%s\", a1);\n}\n", 
            "funcStartAddr": "0x461450L", 
            "funcEndAddr": "0x461488L", 
            "funcName": "sub_461450"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_461490@<rax>(__int64 a1@<rax>, double a2@<xmm0>, double a3@<xmm1>, double a4@<xmm2>, double a5@<xmm3>, double a6@<xmm6>)\n{\n  double v6; // xmm4_8\n  double v7; // xmm5_8\n  __int64 v8; // rax\n  double v9; // xmm0_8\n  double v10; // xmm1_8\n  double v11; // xmm2_8\n  char *v12; // rdi\n  __int64 v14; // [rsp-8h] [rbp-8h]\n\n  v14 = a1;\n  sub_4187D0(1u, (const char *)4);\n  dword_88C254 = sub_445420(&dword_88C25C, (float *)&dword_88C258, a2, a3, a4, a5, v6, v7, a6);\n  sub_45C030(v8, 0);\n  if ( *(float *)&dword_88C254 >= 0.0 )\n  {\n    v9 = *(float *)&dword_88C254;\n    v10 = *(float *)&dword_88C25C;\n    v11 = *(float *)&dword_88C258;\n    v12 = \"W+%3.1f (upper bound: %3.1f, lower: %3.1f)\";\n    goto LABEL_5;\n  }\n  if ( *(float *)&dword_88C254 < 0.0 )\n  {\n    v9 = COERCE_FLOAT(dword_88C254 ^ xmmword_4AE070);\n    v10 = *(float *)&dword_88C25C;\n    v11 = *(float *)&dword_88C258;\n    v12 = \"B+%3.1f (upper bound: %3.1f, lower: %3.1f)\";\nLABEL_5:\n    sub_45BF90(v12, &dword_88C258, v9, v10, v11, v14);\n  }\n  return sub_45C070(v14);\n}\n", 
            "funcStartAddr": "0x461490L", 
            "funcEndAddr": "0x46152bL", 
            "funcName": "sub_461490"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_461530(__int64 a1)\n{\n  char *v1; // rdi\n  __int64 v3; // rax\n  signed int v4; // ebp\n  unsigned __int64 v5; // rax\n  __int64 v6; // rcx\n  __int64 v7; // rdx\n  unsigned __int64 v8; // rdi\n  signed __int64 v9; // rsi\n  __int64 v10; // rax\n  int v11; // [rsp+4h] [rbp-F44h]\n  int v12; // [rsp+8h] [rbp-F40h]\n  int v13; // [rsp+Ch] [rbp-F3Ch]\n  int v14[244]; // [rsp+10h] [rbp-F38h]\n  int v15[364]; // [rsp+3E0h] [rbp-B68h]\n  int v16[366]; // [rsp+990h] [rbp-5B8h]\n\n  if ( !(unsigned int)sub_45C350(a1, &v11, &v13, &v12) )\n  {\n    v1 = \"invalid color or coordinate\";\n    return sub_45BB40(v1, &v11);\n  }\n  if ( byte_98A1C5[20 * v13 + v12] )\n  {\n    v1 = \"vertex must be empty\";\n    return sub_45BB40(v1, &v11);\n  }\n  v3 = sub_4099C0(v12 + 20 * v13 + 21, v11, 241, (__int64)v14);\n  v4 = v3;\n  LODWORD(v5) = sub_45C030(v3, 0);\n  if ( v4 > 0 )\n  {\n    v5 = (unsigned int)v4;\n    v6 = 0LL;\n    do\n    {\n      v7 = v14[v6];\n      v8 = (unsigned __int64)(1717986919 * v7) >> 63;\n      v9 = 1717986919 * v7 >> 35;\n      v16[v6] = v9 + v8 - 1;\n      v15[v6++] = v7 - 20 * (v9 + v8) - 1;\n    }\n    while ( v4 != v6 );\n  }\n  LODWORD(v10) = sub_45C460(v5, v15, v4, (__int64)v16);\n  return sub_45C070(v10);\n}\n", 
            "funcStartAddr": "0x461530L", 
            "funcEndAddr": "0x461618L", 
            "funcName": "sub_461530"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_461620(__int64 a1)\n{\n  char *v1; // rdi\n  __int64 v3; // rax\n  signed int v4; // ebp\n  unsigned __int64 v5; // rax\n  __int64 v6; // rcx\n  __int64 v7; // rdx\n  unsigned __int64 v8; // rdi\n  signed __int64 v9; // rsi\n  __int64 v10; // rax\n  int v11; // [rsp+4h] [rbp-F44h]\n  int v12; // [rsp+8h] [rbp-F40h]\n  int v13; // [rsp+Ch] [rbp-F3Ch]\n  int v14[244]; // [rsp+10h] [rbp-F38h]\n  int v15[364]; // [rsp+3E0h] [rbp-B68h]\n  int v16[366]; // [rsp+990h] [rbp-5B8h]\n\n  if ( !(unsigned int)sub_45C350(a1, &v11, &v13, &v12) )\n  {\n    v1 = \"invalid color or coordinate\";\n    return sub_45BB40(v1, &v11);\n  }\n  if ( byte_98A1C5[20 * v13 + v12] )\n  {\n    v1 = \"vertex must be empty\";\n    return sub_45BB40(v1, &v11);\n  }\n  v3 = sub_4099C0(v12 + 20 * v13 + 21, v11, 241, (__int64)v14);\n  v4 = v3;\n  LODWORD(v5) = sub_45C030(v3, 0);\n  if ( v4 > 0 )\n  {\n    v5 = (unsigned int)v4;\n    v6 = 0LL;\n    do\n    {\n      v7 = v14[v6];\n      v8 = (unsigned __int64)(1717986919 * v7) >> 63;\n      v9 = 1717986919 * v7 >> 35;\n      v16[v6] = v9 + v8 - 1;\n      v15[v6++] = v7 - 20 * (v9 + v8) - 1;\n    }\n    while ( v4 != v6 );\n  }\n  LODWORD(v10) = sub_45C460(v5, v15, v4, (__int64)v16);\n  return sub_45C070(v10);\n}\n", 
            "funcStartAddr": "0x461620L", 
            "funcEndAddr": "0x461708L", 
            "funcName": "sub_461620"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_461710(__int64 a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)\n{\n  __int64 v8; // rax\n  float *v10; // rsi\n  double v11; // xmm4_8\n  double v12; // xmm5_8\n  float v13; // xmm0_4\n  unsigned int v14; // [rsp+Ch] [rbp-Ch]\n  float v15; // [rsp+10h] [rbp-8h]\n  float v16; // [rsp+14h] [rbp-4h]\n\n  if ( !(unsigned int)sub_45C170(a1, (signed int *)&v14) )\n    return sub_45BB40(\"invalid color\", &v14);\n  v8 = v14 - 1;\n  if ( (unsigned int)v8 >= 2 )\n    return sub_45BB40(\"invalid color\", &v14);\n  sub_419910(v8, v14, 0LL, 0LL);\n  v10 = &v15;\n  sub_445420(&v16, &v15, a2, a3, a4, a5, v11, v12, a8);\n  if ( dword_88C264 & 0x10000 )\n  {\n    v10 = (float *)\"upper = %3.1f, lower = %3.1f, best = %3.1f\\n\";\n    fprintf(stderr, \"upper = %3.1f, lower = %3.1f, best = %3.1f\\n\", v16, v15, *(float *)xmmword_98A6A0);\n    if ( v14 == 1 )\n      goto LABEL_6;\nLABEL_8:\n    v13 = v16 - *(float *)xmmword_98A6A0;\n    return sub_45C090(\"%3.1f\", v10, v13);\n  }\n  if ( v14 != 1 )\n    goto LABEL_8;\nLABEL_6:\n  v13 = v15 + *(float *)xmmword_98A6A0;\n  return sub_45C090(\"%3.1f\", v10, v13);\n}\n", 
            "funcStartAddr": "0x461710L", 
            "funcEndAddr": "0x4617d4L", 
            "funcName": "sub_461710"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4617E0(__int64 a1)\n{\n  __int64 v1; // rax\n  unsigned int v3; // ebp\n  unsigned int v4; // eax\n  __int64 v5; // rax\n  __int64 v6; // [rsp+0h] [rbp-28h]\n  int v7; // [rsp+8h] [rbp-20h]\n  int v8; // [rsp+Ch] [rbp-1Ch]\n  int v9; // [rsp+10h] [rbp-18h]\n  int v10; // [rsp+14h] [rbp-14h]\n\n  if ( !(unsigned int)sub_45C270(a1, &v10, &v9) )\n    return sub_45BB40(\"invalid coordinate\", &v10);\n  sub_4187D0(2u, (const char *)3);\n  if ( dword_96CAB0[9 * (v9 + 20LL * v10 + 21)] == 5 )\n  {\n    v1 = sub_425500(\n           dword_96CABC[9 * (v9 + 20LL * v10 + 21)],\n           &v6,\n           &v8,\n           &v7,\n           (__int64)dword_96CAB0,\n           (__int64)&unk_9634B0);\n  }\n  else\n  {\n    if ( dword_977370[9 * (v9 + 20LL * v10 + 21)] != 4 )\n      return sub_45C090(\"-1\", 3LL);\n    v1 = sub_425500(\n           dword_97737C[9 * (v9 + 20LL * v10 + 21)],\n           &v6,\n           &v8,\n           &v7,\n           (__int64)dword_977370,\n           (__int64)&unk_9634B0);\n  }\n  sub_45C030(v1, 0);\n  v3 = sub_426330((__int64)&v6);\n  v4 = sub_4263B0((__int64)&v6);\n  sub_45BF90(\"%d %d\", v3, v4);\n  v5 = sub_426FA0((char *)&v6);\n  if ( (signed int)v5 > 0 )\n  {\n    sub_45BF90(\" \");\n    sub_45BF70(\n      (1717986919LL * v8 >> 35) + ((unsigned __int64)(1717986919LL * v8) >> 63) - 1,\n      v8 - 20 * ((1717986919LL * v8 >> 35) + ((unsigned __int64)(1717986919LL * v8) >> 63)) - 1);\n    sub_45BF90(\" \");\n    v5 = sub_45BF70(\n           (1717986919LL * v7 >> 35) + ((unsigned __int64)(1717986919LL * v7) >> 63) - 1,\n           v7 - 20 * ((1717986919LL * v7 >> 35) + ((unsigned __int64)(1717986919LL * v7) >> 63)) - 1);\n  }\n  return sub_45C070(v5);\n}\n", 
            "funcStartAddr": "0x4617e0L", 
            "funcEndAddr": "0x461973L", 
            "funcName": "sub_4617E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_461980@<rax>(__int64 a1@<rax>, __int64 a2@<rdi>)\n{\n  __int64 v2; // rax\n  double v3; // xmm0_8\n  char *v4; // rdi\n  __int64 v5; // rax\n  __int64 v7; // [rsp-4h] [rbp-8h]\n  __int64 v8; // [rsp-4h] [rbp-8h]\n  __int64 v9; // [rsp-4h] [rbp-8h]\n\n  v7 = a1;\n  HIDWORD(v7) = 0;\n  __isoc99_sscanf(a2, \"%d\", (char *)&v7 + 4);\n  dword_88C240 = HIDWORD(v7);\n  v2 = sub_4648A0(HIDWORD(v7), \"%d\");\n  sub_45C030(v2, 0);\n  if ( *(float *)&dword_8A8704 <= 0.0 )\n  {\n    if ( *(float *)&dword_8A8704 >= 0.0 )\n    {\n      LODWORD(v5) = sub_45BF90(\"0\", v9);\n      return sub_45C070(v5);\n    }\n    v3 = COERCE_FLOAT(dword_8A8704 ^ xmmword_4AE070);\n    v4 = \"B+%3.1f\";\n  }\n  else\n  {\n    v3 = *(float *)&dword_8A8704;\n    v4 = \"W+%3.1f\";\n  }\n  LODWORD(v5) = sub_45BF90(v4, v3, v8);\n  return sub_45C070(v5);\n}\n", 
            "funcStartAddr": "0x461980L", 
            "funcEndAddr": "0x4619fcL", 
            "funcName": "sub_461980"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_461A00(__int64 a1)\n{\n  int v1; // eax\n  signed __int64 v2; // r14\n  __int64 v3; // rdx\n  unsigned int v5; // [rsp+Ch] [rbp-1Ch]\n  int v6; // [rsp+10h] [rbp-18h]\n  int v7; // [rsp+14h] [rbp-14h]\n\n  v1 = sub_45C270(a1, &v7, &v6);\n  if ( !v1 )\n    return sub_45BB40(\"invalid coordinate\", &v7);\n  v5 = 0;\n  v2 = 0LL;\n  __isoc99_sscanf(v1 + a1, \"%d\", &v5);\n  dword_88C240 = v5;\n  sub_4648A0(v5, \"%d\");\n  switch ( (unsigned __int64)(unsigned int)dword_8A8CC0[19 * v7 + v6] )\n  {\n    case 0uLL:\n      v2 = 1LL;\n      goto LABEL_9;\n    case 1uLL:\n      goto LABEL_9;\n    case 7uLL:\n      v2 = 2LL;\n      goto LABEL_9;\n    case 0xDuLL:\n      v2 = 4LL;\n      goto LABEL_9;\n    case 0xEuLL:\n      v2 = 3LL;\n      goto LABEL_9;\n    case 0xFuLL:\n      v2 = 5LL;\nLABEL_9:\n      v2 = (signed __int64)off_4B26F0[v2];\n      break;\n    default:\n      return sub_45C090((char *)v2, \"%d\", v3, v6);\n  }\n  return sub_45C090((char *)v2, \"%d\", v3, v6);\n}\n", 
            "funcStartAddr": "0x461a00L", 
            "funcEndAddr": "0x461ac0L", 
            "funcName": "sub_461A00"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_461AC0(__int64 a1)\n{\n  const char *v1; // rsi\n  int v2; // ebp\n  signed int v3; // ebx\n  signed int v4; // ebp\n  signed int v5; // er14\n  char *v6; // rdi\n  __int64 v8; // rax\n  __int64 v9; // rax\n  signed int v10; // er12\n  __int64 v11; // r13\n  __int64 v12; // r15\n  signed __int64 v13; // rbx\n  __int64 v14; // rax\n  __int64 v15; // rdx\n  __int64 v16; // rsi\n  unsigned __int64 v17; // rbp\n  signed __int64 v18; // rdi\n  unsigned int v19; // [rsp+8h] [rbp-1530h]\n  int v20; // [rsp+Ch] [rbp-152Ch]\n  char s1; // [rsp+10h] [rbp-1528h]\n  int v22[364]; // [rsp+400h] [rbp-1138h]\n  int v23[364]; // [rsp+9B0h] [rbp-B88h]\n  int v24[374]; // [rsp+F60h] [rbp-5D8h]\n\n  v1 = \"%s %n\";\n  if ( (unsigned int)__isoc99_sscanf(a1, \"%s %n\", &s1) != 1 )\n  {\n    v6 = \"missing status\";\n    return sub_45BB40(v6, v1);\n  }\n  v2 = 2 * (strcmp(&s1, \"alive\") != 0) + 1;\n  if ( !strcmp(&s1, \"dead\") )\n    v2 = 0;\n  v3 = 7;\n  if ( strcmp(&s1, \"seki\") )\n    v3 = v2;\n  v4 = 14;\n  if ( strcmp(&s1, \"white_territory\") )\n    v4 = v3;\n  v5 = 13;\n  if ( strcmp(&s1, \"black_territory\") )\n    v5 = v4;\n  v1 = \"dame\";\n  if ( !strcmp(&s1, \"dame\") )\n  {\n    v5 = 15;\n  }\n  else if ( v5 == 3 )\n  {\n    v6 = \"invalid status\";\n    return sub_45BB40(v6, v1);\n  }\n  v19 = 0;\n  __isoc99_sscanf(v20 + a1, \"%d\", &v19);\n  dword_88C240 = v19;\n  v8 = sub_4648A0(v19, \"%d\");\n  sub_45C030(v8, 0);\n  v9 = (unsigned int)dword_565C68;\n  if ( dword_565C68 > 0 )\n  {\n    v10 = 1;\n    v11 = 0LL;\n    while ( (signed int)v9 <= 0 )\n    {\nLABEL_34:\n      if ( ++v11 >= (signed int)v9 )\n        return sub_45C070(v9);\n    }\n    v12 = (20 * (_DWORD)v11 + 21) & 0xFFFFFFFD;\n    v13 = 0LL;\n    while ( 1 )\n    {\n      if ( dword_8A8CC0[19 * v11 + v13] == v5 )\n      {\n        if ( !byte_98A1B0[v12 + v13] )\n        {\n          if ( !v10 )\n            sub_45BF90(\" \");\n          sub_45BF70(v11, v13);\n          goto LABEL_32;\n        }\n        if ( v12 + v13 == (unsigned int)sub_40AD00((signed int)v12 + (signed int)v13) )\n        {\n          if ( !v10 )\n            sub_45BF90(\"\\n\");\n          v14 = sub_40A6C0((signed int)v12 + (signed int)v13, dword_565C68 * dword_565C68, (__int64)v22);\n          if ( (signed int)v14 > 0 )\n          {\n            v15 = 0LL;\n            do\n            {\n              v16 = v22[v15];\n              v17 = (unsigned __int64)(1717986919 * v16) >> 63;\n              v18 = 1717986919 * v16 >> 35;\n              v24[v15] = v18 + v17 - 1;\n              v23[v15++] = v16 - 20 * (v18 + v17) - 1;\n            }\n            while ( (unsigned int)v14 != v15 );\n          }\n          sub_45C460(v14, v23, v14, (__int64)v24);\nLABEL_32:\n          v10 = 0;\n          goto LABEL_33;\n        }\n      }\nLABEL_33:\n      ++v13;\n      v9 = dword_565C68;\n      if ( v13 >= dword_565C68 )\n        goto LABEL_34;\n    }\n  }\n  return sub_45C070(v9);\n}\n", 
            "funcStartAddr": "0x461ac0L", 
            "funcEndAddr": "0x461d47L", 
            "funcName": "sub_461AC0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_461D50(__int64 a1)\n{\n  __int64 v1; // rax\n  signed int v2; // ebp\n  unsigned __int64 v3; // rax\n  __int64 v4; // rcx\n  __int64 v5; // rdx\n  unsigned __int64 v6; // rdi\n  signed __int64 v7; // rsi\n  __int64 v8; // rax\n  char *v10; // rdi\n  int v11; // [rsp+8h] [rbp-F40h]\n  int v12; // [rsp+Ch] [rbp-F3Ch]\n  int v13[244]; // [rsp+10h] [rbp-F38h]\n  int v14[364]; // [rsp+3E0h] [rbp-B68h]\n  int v15[366]; // [rsp+990h] [rbp-5B8h]\n\n  if ( !(unsigned int)sub_45C270(a1, &v12, &v11) )\n  {\n    v10 = \"invalid coordinate\";\n    return sub_45BB40(v10, &v12);\n  }\n  if ( !byte_98A1C5[20 * v12 + v11] )\n  {\n    v10 = \"vertex must not be empty\";\n    return sub_45BB40(v10, &v12);\n  }\n  v1 = sub_408410(v11 + 20 * v12 + 21, 241, (unsigned __int64)v13);\n  v2 = v1;\n  LODWORD(v3) = sub_45C030(v1, 0);\n  if ( v2 > 0 )\n  {\n    v3 = (unsigned int)v2;\n    v4 = 0LL;\n    do\n    {\n      v5 = v13[v4];\n      v6 = (unsigned __int64)(1717986919 * v5) >> 63;\n      v7 = 1717986919 * v5 >> 35;\n      v15[v4] = v7 + v6 - 1;\n      v14[v4++] = v5 - 20 * (v7 + v6) - 1;\n    }\n    while ( v2 != v4 );\n  }\n  LODWORD(v8) = sub_45C460(v3, v14, v2, (__int64)v15);\n  return sub_45C070(v8);\n}\n", 
            "funcStartAddr": "0x461d50L", 
            "funcEndAddr": "0x461e3dL", 
            "funcName": "sub_461D50"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_461E40(__int64 a1)\n{\n  __int64 v2; // [rsp+0h] [rbp-3E8h]\n\n  if ( (signed int)__isoc99_sscanf(a1, \"%s\", &v2) <= 0 )\n    return sub_45BB40(\"missing filename\", \"%s\");\n  sub_448F00((const char *)&v2);\n  dword_88C22C = 0;\n  return sub_45C090(&byte_494DEA, \"%s\");\n}\n", 
            "funcStartAddr": "0x461e40L", 
            "funcEndAddr": "0x461e94L", 
            "funcName": "sub_461E40"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_461EA0@<rax>(__int64 a1@<rax>, __int64 a2@<rdi>)\n{\n  char *v2; // rdi\n  const char *v3; // rsi\n  __int64 v4; // rax\n  __int64 v5; // rax\n  signed int v6; // ebp\n  __int64 v7; // r15\n  __int64 v8; // r14\n  signed __int64 v9; // rbx\n  __int64 v10; // rcx\n  __int64 v12; // [rsp-4h] [rbp-28h]\n  __int64 v13; // [rsp-4h] [rbp-28h]\n  __int64 v14; // [rsp-4h] [rbp-28h]\n  __int64 v15; // [rsp-4h] [rbp-28h]\n\n  v12 = a1;\n  if ( dword_565C8C == 1 )\n  {\n    sub_4066E0();\n  }\n  else if ( (signed int)sub_40BBB0(3) > 0 )\n  {\n    v2 = \"board not empty\";\n    return sub_45BB40(v2, v15);\n  }\n  v3 = \"%d\";\n  if ( (signed int)__isoc99_sscanf(a2, \"%d\", (char *)&v12 + 4) <= 0 )\n  {\n    v2 = \"handicap not an integer\";\n    return sub_45BB40(v2, v15);\n  }\n  if ( SHIDWORD(v12) <= 1 && (HIDWORD(v12) || dword_565C8C >= 2) )\n    goto LABEL_25;\n  v4 = sub_459F90(SHIDWORD(v12));\n  if ( (_DWORD)v4 != HIDWORD(v12) )\n  {\n    sub_4066E0();\nLABEL_25:\n    v2 = \"invalid handicap\";\n    return sub_45BB40(v2, v15);\n  }\n  dword_8A9264 = v4;\n  sub_45C030(v4, 0);\n  v5 = (unsigned int)dword_565C68;\n  if ( dword_565C68 > 0 )\n  {\n    v6 = 1;\n    LODWORD(v7) = 21;\n    v8 = 0LL;\n    do\n    {\n      v7 = (unsigned int)v7;\n      if ( (signed int)v5 <= 0 )\n      {\n        v10 = (signed int)v5;\n      }\n      else\n      {\n        v9 = 0LL;\n        do\n        {\n          if ( byte_98A1B0[v7 + v9] )\n          {\n            if ( !v6 )\n              sub_45BF90(\" \", v3, v13);\n            v6 = 0;\n            v3 = (const char *)(unsigned int)v8;\n            sub_45BC50(\"%m\", (unsigned int)v8, (unsigned int)v9, v14);\n            v5 = (unsigned int)dword_565C68;\n          }\n          ++v9;\n          v10 = (signed int)v5;\n        }\n        while ( v9 < (signed int)v5 );\n      }\n      ++v8;\n      LODWORD(v7) = v7 + 20;\n    }\n    while ( v8 < v10 );\n  }\n  return sub_45C070(v5);\n}\n", 
            "funcStartAddr": "0x461ea0L", 
            "funcEndAddr": "0x461feaL", 
            "funcName": "sub_461EA0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_461FF0()\n{\n  return sub_45C090(\"%d\", (unsigned int)dword_8A9264);\n}\n", 
            "funcStartAddr": "0x461ff0L", 
            "funcEndAddr": "0x462002L", 
            "funcName": "sub_461FF0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_462010()\n{\n  return sub_45C090(\"%d\", (unsigned int)dword_88C240);\n}\n", 
            "funcStartAddr": "0x462010L", 
            "funcEndAddr": "0x462022L", 
            "funcName": "sub_462010"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_462030@<rax>(__int64 a1@<rax>, __int64 a2@<rdi>)\n{\n  __int64 v3; // [rsp-4h] [rbp-8h]\n  __int64 v4; // [rsp-4h] [rbp-8h]\n  __int64 v5; // [rsp-4h] [rbp-8h]\n\n  v3 = a1;\n  if ( (signed int)__isoc99_sscanf(a2, \"%d\", (char *)&v3 + 4) <= 0 )\n    return sub_45BB40(\"invalid seed\", \"%d\", v5);\n  dword_88C240 = HIDWORD(v3);\n  return sub_45C090(&byte_494DEA, \"%d\", v4);\n}\n", 
            "funcStartAddr": "0x462030L", 
            "funcEndAddr": "0x46206cL", 
            "funcName": "sub_462030"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_462070(__int64 a1)\n{\n  char *v1; // rdi\n  __int64 v3; // rax\n  __int64 v4; // rax\n  unsigned int v5; // [rsp+Ch] [rbp-Ch]\n  unsigned int v6; // [rsp+10h] [rbp-8h]\n  unsigned int v7; // [rsp+14h] [rbp-4h]\n\n  if ( !(unsigned int)sub_45C170(a1, (signed int *)&v5) )\n  {\n    v1 = \"invalid color\";\n    return sub_45BB40(v1, &v5);\n  }\n  if ( dword_98A7F4 > 0 )\n  {\n    v1 = \"genmove cannot be called when stackp > 0\";\n    return sub_45BB40(v1, &v5);\n  }\n  sub_418860(&v7, &v6, v5);\n  v3 = sub_4074F0(v6 + 20 * v7 + 21, v5);\n  sub_45C030(v3, 0);\n  v4 = sub_45BF70(v7, v6);\n  return sub_45C070(v4);\n}\n", 
            "funcStartAddr": "0x462070L", 
            "funcEndAddr": "0x4620eeL", 
            "funcName": "sub_462070"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4620F0@<rax>(__int64 a1@<rax>)\n{\n  signed int v2; // edi\n  __int64 v3; // rax\n  __int64 v4; // rax\n  __int64 v5; // [rsp+0h] [rbp-8h]\n\n  v5 = a1;\n  if ( dword_98A7F4 > 0 )\n    return sub_45BB40(\"genmove cannot be called when stackp > 0\", v5);\n  if ( (signed int)sub_418860((_DWORD *)&v5 + 1, &v5, 2u) < 0 )\n    v2 = 0;\n  else\n    v2 = v5 + 20 * HIDWORD(v5) + 21;\n  v3 = sub_4074F0(v2, 2u);\n  sub_45C030(v3, 0);\n  v4 = sub_45BF70(HIDWORD(v5), v5);\n  return sub_45C070(v4);\n}\n", 
            "funcStartAddr": "0x4620f0L", 
            "funcEndAddr": "0x462156L", 
            "funcName": "sub_4620F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_462160@<rax>(__int64 a1@<rax>)\n{\n  signed int v2; // edi\n  __int64 v3; // rax\n  __int64 v4; // rax\n  __int64 v5; // [rsp+0h] [rbp-8h]\n\n  v5 = a1;\n  if ( dword_98A7F4 > 0 )\n    return sub_45BB40(\"genmove cannot be called when stackp > 0\", v5);\n  if ( (signed int)sub_418860((_DWORD *)&v5 + 1, &v5, 1u) < 0 )\n    v2 = 0;\n  else\n    v2 = v5 + 20 * HIDWORD(v5) + 21;\n  v3 = sub_4074F0(v2, 1u);\n  sub_45C030(v3, 0);\n  v4 = sub_45BF70(HIDWORD(v5), v5);\n  return sub_45C070(v4);\n}\n", 
            "funcStartAddr": "0x462160L", 
            "funcEndAddr": "0x4621c6L", 
            "funcName": "sub_462160"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4621D0@<rax>(__int64 a1@<rax>)\n{\n  __int64 v1; // ST00_8\n  unsigned int v2; // eax\n  __int64 v3; // rdx\n\n  v1 = a1;\n  v2 = sub_4352D0();\n  return sub_45C090(\"%d\", v2, v3, v1);\n}\n", 
            "funcStartAddr": "0x4621d0L", 
            "funcEndAddr": "0x4621e7L", 
            "funcName": "sub_4621D0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_4621F0()\n{\n  return sub_45C090(\"0\");\n}\n", 
            "funcStartAddr": "0x4621f0L", 
            "funcEndAddr": "0x4621fcL", 
            "funcName": "sub_4621F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_462200@<rax>(__int64 a1@<rax>)\n{\n  __int64 v1; // ST00_8\n  unsigned int v2; // eax\n  __int64 v3; // rdx\n\n  v1 = a1;\n  v2 = sub_4310D0();\n  return sub_45C090(\"%d\", v2, v3, v1);\n}\n", 
            "funcStartAddr": "0x462200L", 
            "funcEndAddr": "0x462217L", 
            "funcName": "sub_462200"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_462220@<rax>(__int64 a1@<rax>)\n{\n  __int64 v1; // ST00_8\n  unsigned int v2; // eax\n  __int64 v3; // rdx\n\n  v1 = a1;\n  v2 = sub_43F970();\n  return sub_45C090(\"%d\", v2, v3, v1);\n}\n", 
            "funcStartAddr": "0x462220L", 
            "funcEndAddr": "0x462237L", 
            "funcName": "sub_462220"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_462240@<rax>(__int64 a1@<rax>)\n{\n  __int64 v1; // ST00_8\n  unsigned int v2; // eax\n  __int64 v3; // rdx\n\n  v1 = a1;\n  v2 = sub_40BCC0();\n  return sub_45C090(\"%d\", v2, v3, v1);\n}\n", 
            "funcStartAddr": "0x462240L", 
            "funcEndAddr": "0x462257L", 
            "funcName": "sub_462240"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_462260(__int64 a1)\n{\n  int v1; // eax\n  char *v2; // rdi\n  __int64 v4; // rax\n  __int64 v5; // rax\n  unsigned int v6; // [rsp+0h] [rbp-18h]\n  unsigned int v7; // [rsp+4h] [rbp-14h]\n  unsigned int v8; // [rsp+8h] [rbp-10h]\n  unsigned int v9; // [rsp+Ch] [rbp-Ch]\n\n  v1 = sub_45C170(a1, (signed int *)&v7);\n  if ( !v1 )\n  {\n    v2 = \"invalid color\";\n    return sub_45BB40(v2, &v7);\n  }\n  if ( dword_98A7F4 > 0 )\n  {\n    v2 = \"genmove cannot be called when stackp > 0\";\n    return sub_45BB40(v2, &v7);\n  }\n  v6 = 0;\n  __isoc99_sscanf(v1 + a1, \"%u\", &v6);\n  dword_88C240 = v6;\n  v4 = sub_419910(v6, v7, &v9, &v8);\n  sub_45C030(v4, 0);\n  v5 = sub_45BF70(v9, v8);\n  return sub_45C070(v5);\n}\n", 
            "funcStartAddr": "0x462260L", 
            "funcEndAddr": "0x4622edL", 
            "funcName": "sub_462260"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4622F0@<rax>(__int64 a1@<rax>, __int64 a2@<rdi>)\n{\n  char *v3; // rdi\n  __int64 v4; // [rsp-4h] [rbp-8h]\n  __int64 v5; // [rsp-4h] [rbp-8h]\n  __int64 v6; // [rsp-4h] [rbp-8h]\n\n  v4 = a1;\n  HIDWORD(v4) = 1;\n  __isoc99_sscanf(a2, \"%d\", (char *)&v4 + 4);\n  if ( v4 < 0 )\n  {\n    v3 = \"can't undo a negative number of moves\";\n  }\n  else\n  {\n    if ( (unsigned int)sub_4079D0(SHIDWORD(v4)) )\n    {\n      sub_418500();\n      return sub_45C090(&byte_494DEA, \"%d\", v5);\n    }\n    v3 = \"cannot undo\";\n  }\n  return sub_45BB40(v3, \"%d\", v6);\n}\n", 
            "funcStartAddr": "0x4622f0L", 
            "funcEndAddr": "0x462343L", 
            "funcName": "sub_4622F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_462350@<rax>(__int64 a1@<rax>)\n{\n  char **v1; // rbx\n  char *v2; // rsi\n\n  sub_45C030(a1, 0);\n  if ( off_565CB0 )\n  {\n    v1 = &off_565CC0;\n    do\n    {\n      sub_45BF90(\"%s\\n\");\n      v2 = *v1;\n      v1 += 2;\n    }\n    while ( v2 );\n  }\n  sub_45BF90(\"\\n\");\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x462350L", 
            "funcEndAddr": "0x462398L", 
            "funcName": "sub_462350"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4623A0@<rax>(__int64 a1@<rax>, __int64 a2@<rsi>)\n{\n  __int64 v2; // ST00_8\n  __int64 v3; // rdx\n\n  v2 = a1;\n  sub_44B020();\n  return sub_45C090(&byte_494DEA, a2, v3, v2);\n}\n", 
            "funcStartAddr": "0x4623a0L", 
            "funcEndAddr": "0x4623b3L", 
            "funcName": "sub_4623A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4623C0(__int64 a1)\n{\n  unsigned int v1; // eax\n  unsigned int v3; // [rsp+Ch] [rbp-Ch]\n  int v4; // [rsp+10h] [rbp-8h]\n  int v5; // [rsp+14h] [rbp-4h]\n\n  if ( !(unsigned int)sub_45C350(a1, (signed int *)&v3, &v5, &v4) )\n    return sub_45BB40(\"invalid color or coordinate\", &v3);\n  v1 = sub_407B30(v4 + 20 * v5 + 21, v3);\n  return sub_45C090(\"%d\", v1);\n}\n", 
            "funcStartAddr": "0x4623c0L", 
            "funcEndAddr": "0x46241cL", 
            "funcName": "sub_4623C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_462420(__int64 a1)\n{\n  const char *v1; // rsi\n  const char **v2; // rbx\n  char *v3; // r14\n  __int64 v5; // [rsp+0h] [rbp-408h]\n\n  if ( (unsigned int)__isoc99_sscanf(a1, \"%s\", &v5) == 1 && (v1 = off_565CB0) != 0LL )\n  {\n    v2 = (const char **)&off_565CC0;\n    v3 = \"false\";\n    while ( strcmp((const char *)&v5, v1) )\n    {\n      v1 = *v2;\n      v2 += 2;\n      if ( !v1 )\n        return sub_45C090(v3);\n    }\n    v3 = \"true\";\n  }\n  else\n  {\n    v3 = \"false\";\n  }\n  return sub_45C090(v3);\n}\n", 
            "funcStartAddr": "0x462420L", 
            "funcEndAddr": "0x46249fL", 
            "funcName": "sub_462420"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4624A0@<rax>(__int64 a1@<rax>, __int64 a2@<rdi>)\n{\n  __int64 v2; // rdx\n  __int64 result; // rax\n  __int64 v4; // [rsp-8h] [rbp-8h]\n\n  v4 = a1;\n  if ( (signed int)__isoc99_sscanf(a2, \"%f\", &dword_98A788) <= 0 )\n    result = sub_45BB40(\"komi not a float\", \"%f\", v2, v4);\n  else\n    result = sub_45C090(&byte_494DEA, \"%f\", v2, v4);\n  return result;\n}\n", 
            "funcStartAddr": "0x4624a0L", 
            "funcEndAddr": "0x4624d0L", 
            "funcName": "sub_4624A0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_4624D0()\n{\n  return sub_45C090(\"%4.1f\", *(float *)&dword_98A788);\n}\n", 
            "funcStartAddr": "0x4624d0L", 
            "funcEndAddr": "0x4624e8L", 
            "funcName": "sub_4624D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4624F0(__int64 a1)\n{\n  __int64 v1; // rax\n  int v2; // ebx\n  __int64 v3; // rax\n  char *v5; // rdi\n  int v6; // [rsp+4h] [rbp-14h]\n  int v7; // [rsp+8h] [rbp-10h]\n  int v8; // [rsp+Ch] [rbp-Ch]\n\n  if ( !(unsigned int)sub_45C270(a1, &v7, &v6) )\n  {\n    v5 = \"invalid coordinate\";\n    return sub_45BB40(v5, &v7);\n  }\n  if ( !byte_98A1C5[20 * v7 + v6] )\n  {\n    v5 = \"vertex must not be empty\";\n    return sub_45BB40(v5, &v7);\n  }\n  if ( (unsigned int)sub_4083A0(v6 + 20 * v7 + 21) != 2 )\n  {\n    v5 = \"string must have exactly 2 liberties\";\n    return sub_45BB40(v5, &v7);\n  }\n  v1 = sub_43FAB0((unsigned int)(v6 + 20 * v7 + 21), (__int64)&v8);\n  v2 = v1;\n  sub_45C030(v1, 0);\n  LODWORD(v3) = sub_45BF90(\"%d\", (unsigned int)dword_4B26D0[v2]);\n  if ( v2 > 0 )\n  {\n    sub_45BF90(\" \");\n    v3 = sub_45BF70(\n           (1717986919LL * v8 >> 35) + ((unsigned __int64)(1717986919LL * v8) >> 63) - 1,\n           v8 - 20 * ((1717986919LL * v8 >> 35) + ((unsigned __int64)(1717986919LL * v8) >> 63)) - 1);\n  }\n  return sub_45C070(v3);\n}\n", 
            "funcStartAddr": "0x4624f0L", 
            "funcEndAddr": "0x4625deL", 
            "funcName": "sub_4624F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4625E0@<rax>(__int64 a1@<rax>, __int64 a2@<rdi>)\n{\n  __int64 v3; // [rsp-4h] [rbp-8h]\n  __int64 v4; // [rsp-4h] [rbp-8h]\n  __int64 v5; // [rsp-4h] [rbp-8h]\n\n  v3 = a1;\n  if ( (signed int)__isoc99_sscanf(a2, \"%d\", (char *)&v3 + 4) <= 0 )\n    return sub_45BB40(\"level not an integer\", \"%d\", v5);\n  dword_565C78 = HIDWORD(v3);\n  return sub_45C090(&byte_494DEA, \"%d\", v4);\n}\n", 
            "funcStartAddr": "0x4625e0L", 
            "funcEndAddr": "0x46261cL", 
            "funcName": "sub_4625E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_462620(__int64 a1)\n{\n  __int64 v1; // rax\n  __int64 v2; // r9\n  int v3; // edx\n  __int64 v4; // r11\n  __int64 v5; // rsi\n  signed int v6; // ebx\n  __int64 v7; // rcx\n  __int64 v8; // rcx\n  __int64 v9; // rcx\n  unsigned __int64 v11; // rax\n  __int64 v12; // rax\n  int v13; // [rsp+Ch] [rbp-B6Ch]\n  int v14[364]; // [rsp+10h] [rbp-B68h]\n  int v15[366]; // [rsp+5C0h] [rbp-5B8h]\n\n  v13 = 0;\n  v1 = sub_45C170(a1, &v13);\n  if ( !(_DWORD)v1 )\n    return sub_45BB40(\"invalid color\", &v13);\n  v2 = dword_565C68;\n  if ( dword_565C68 <= 0LL )\n  {\n    v6 = 0;\n  }\n  else\n  {\n    v3 = v13;\n    v4 = 0LL;\n    LODWORD(v5) = 21;\n    v6 = 0;\n    do\n    {\n      v5 = (unsigned int)v5;\n      v1 = 0LL;\n      if ( (_DWORD)v2 != 1 )\n      {\n        do\n        {\n          if ( v3 == (unsigned __int8)byte_98A1B0[v5 + v1] )\n          {\n            v7 = v6;\n            v15[v7] = v4;\n            ++v6;\n            v14[v7] = v1;\n          }\n          if ( v3 == (unsigned __int8)byte_98A1B1[v5 + v1] )\n          {\n            v8 = v6;\n            v15[v8] = v4;\n            ++v6;\n            v14[v8] = v1 + 1;\n          }\n          v1 += 2LL;\n        }\n        while ( (unsigned int)v2 - (unsigned __int64)(v2 & 1) != v1 );\n      }\n      if ( v2 & 1 )\n      {\n        if ( v3 == (unsigned __int8)byte_98A1B0[((20 * (_DWORD)v4 + 21) & 0xFFFFFFFD) + v1] )\n        {\n          v9 = v6;\n          v15[v9] = v4;\n          ++v6;\n          v14[v9] = v1;\n        }\n      }\n      ++v4;\n      LODWORD(v5) = v5 + 20;\n    }\n    while ( v4 < v2 );\n  }\n  LODWORD(v11) = sub_45C030(v1, 0);\n  LODWORD(v12) = sub_45C460(v11, v14, v6, (__int64)v15);\n  return sub_45C070(v12);\n}\n", 
            "funcStartAddr": "0x462620L", 
            "funcEndAddr": "0x462744L", 
            "funcName": "sub_462620"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_462750(__int64 a1)\n{\n  int v1; // ebx\n  const char *v2; // rdx\n  unsigned int v4; // ebx\n  __int64 v5; // rax\n  __int64 v6; // rax\n  void *ptr; // [rsp+0h] [rbp-818h]\n  int v8; // [rsp+10h] [rbp-808h]\n  char v9; // [rsp+30h] [rbp-7E8h]\n  char v10; // [rsp+420h] [rbp-3F8h]\n\n  v1 = __isoc99_sscanf(a1, \"%s %s\", &v9);\n  if ( v1 <= 0 )\n    return sub_45BB40(\"missing filename\", \"%s %s\");\n  sub_4016F0(&ptr);\n  if ( !(unsigned int)sub_401700((__int64)&ptr, &v9) )\n    return sub_45BB40(\"cannot open or parse '%s'\", &v9);\n  sub_41E5F0((__int64)&v8, 19, 5.5);\n  sub_41E730((unsigned int *)&v8, (__int64 **)ptr);\n  if ( v1 == 1 )\n    v2 = 0LL;\n  else\n    v2 = &v10;\n  v4 = sub_41E890((unsigned int *)&v8, (__int64 *)&ptr, v2, dword_8A8700);\n  dword_8A9264 = v8;\n  sub_45BC30(dword_565C68);\n  sub_418500();\n  sub_401BB0(ptr);\n  sub_45C030(v5, 0);\n  LODWORD(v6) = sub_45BC50(\"%C\", v4, COERCE_DOUBLE(1085276160LL));\n  return sub_45C070(v6);\n}\n", 
            "funcStartAddr": "0x462750L", 
            "funcEndAddr": "0x46284aL", 
            "funcName": "sub_462750"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_462850()\n{\n  return sub_45C090(\"GNU Go\");\n}\n", 
            "funcStartAddr": "0x462850L", 
            "funcEndAddr": "0x46285cL", 
            "funcName": "sub_462850"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_462860(__int64 a1)\n{\n  int v1; // eax\n  int v2; // er14\n  int v3; // er15\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  __int64 v6; // rax\n  const char *v7; // rbx\n  const char *v8; // rax\n  __int64 v9; // rax\n  char *v11; // rdi\n  int v12; // [rsp+Ch] [rbp-2Ch]\n  int v13; // [rsp+10h] [rbp-28h]\n  int v14; // [rsp+14h] [rbp-24h]\n  unsigned int v15; // [rsp+18h] [rbp-20h]\n  unsigned int v16; // [rsp+1Ch] [rbp-1Ch]\n\n  v1 = sub_45C270(a1, &v13, &v12);\n  if ( !v1 )\n    goto LABEL_13;\n  v2 = 5 * v13;\n  v3 = v12;\n  if ( !byte_98A1C5[20 * v13 + v12] )\n  {\nLABEL_9:\n    v11 = \"vertex must not be empty\";\n    return sub_45BB40(v11, &v13);\n  }\n  if ( !(unsigned int)sub_45C270(v1 + a1, &v13, &v12) )\n  {\nLABEL_13:\n    v11 = \"invalid coordinate\";\n    return sub_45BB40(v11, &v13);\n  }\n  if ( !byte_98A1C5[20 * v13 + v12] )\n    goto LABEL_9;\n  v4 = v3 + 4 * v2 + 21;\n  v5 = v12 + 20 * v13 + 21;\n  sub_4187D0((unsigned __int8)byte_98A1C5[20 * v13 + v12], (const char *)3);\n  if ( qword_88C238 )\n    sub_40E710();\n  v6 = sub_428490(v4, v5, (__int64)&v16, (__int64)&v15, (__int64)&v14, 1u);\n  sub_45C030(v6, 0);\n  v7 = sub_4343F0(v16);\n  v8 = sub_4343F0(v15);\n  LODWORD(v9) = sub_45BC50(\n                  \"%s %s %m\",\n                  v7,\n                  v8,\n                  (unsigned int)(1717986919LL * v14 >> 35) + ((unsigned __int64)(1717986919LL * v14) >> 63) - 1,\n                  v14\n                - 20 * ((unsigned int)(1717986919LL * v14 >> 35) + ((unsigned __int64)(1717986919LL * v14) >> 63))\n                - 1);\n  return sub_45C070(v9);\n}\n", 
            "funcStartAddr": "0x462860L", 
            "funcEndAddr": "0x4629a3L", 
            "funcName": "sub_462860"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4629B0(__int64 a1)\n{\n  int v1; // eax\n  int v2; // er14\n  int v3; // er15\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  __int64 v6; // rax\n  const char *v7; // rbx\n  const char *v8; // rax\n  __int64 v9; // rax\n  char *v11; // rdi\n  int v12; // [rsp+Ch] [rbp-2Ch]\n  int v13; // [rsp+10h] [rbp-28h]\n  int v14; // [rsp+14h] [rbp-24h]\n  unsigned int v15; // [rsp+18h] [rbp-20h]\n  unsigned int v16; // [rsp+1Ch] [rbp-1Ch]\n\n  v1 = sub_45C270(a1, &v13, &v12);\n  if ( !v1 )\n    goto LABEL_13;\n  v2 = 5 * v13;\n  v3 = v12;\n  if ( !byte_98A1C5[20 * v13 + v12] )\n  {\nLABEL_9:\n    v11 = \"vertex must not be empty\";\n    return sub_45BB40(v11, &v13);\n  }\n  if ( !(unsigned int)sub_45C270(v1 + a1, &v13, &v12) )\n  {\nLABEL_13:\n    v11 = \"invalid coordinate\";\n    return sub_45BB40(v11, &v13);\n  }\n  if ( !byte_98A1C5[20 * v13 + v12] )\n    goto LABEL_9;\n  v4 = v3 + 4 * v2 + 21;\n  v5 = v12 + 20 * v13 + 21;\n  sub_4187D0((unsigned __int8)byte_98A1C5[20 * v13 + v12], (const char *)3);\n  if ( qword_88C238 )\n    sub_40E710();\n  v6 = sub_428490(v4, v5, (__int64)&v16, (__int64)&v15, (__int64)&v14, 0);\n  sub_45C030(v6, 0);\n  v7 = sub_4343F0(v16);\n  v8 = sub_4343F0(v15);\n  LODWORD(v9) = sub_45BC50(\n                  \"%s %s %m\",\n                  v7,\n                  v8,\n                  (unsigned int)(1717986919LL * v14 >> 35) + ((unsigned __int64)(1717986919LL * v14) >> 63) - 1,\n                  v14\n                - 20 * ((unsigned int)(1717986919LL * v14 >> 35) + ((unsigned __int64)(1717986919LL * v14) >> 63))\n                - 1);\n  return sub_45C070(v9);\n}\n", 
            "funcStartAddr": "0x4629b0L", 
            "funcEndAddr": "0x462af0L", 
            "funcName": "sub_4629B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_462AF0(__int64 a1)\n{\n  __int64 v1; // rax\n  int v2; // ebx\n  __int64 v3; // rax\n  char *v5; // rdi\n  int v6; // [rsp+Ch] [rbp-1Ch]\n  int v7; // [rsp+10h] [rbp-18h]\n  int v8; // [rsp+14h] [rbp-14h]\n  int v9; // [rsp+18h] [rbp-10h]\n  char v10; // [rsp+1Ch] [rbp-Ch]\n\n  if ( !(unsigned int)sub_45C270(a1, &v7, &v6) )\n  {\n    v5 = \"invalid coordinate\";\n    return sub_45BB40(v5, &v7);\n  }\n  if ( !byte_98A1C5[20 * v7 + v6] )\n  {\n    v5 = \"vertex must not be empty\";\n    return sub_45BB40(v5, &v7);\n  }\n  sub_4187D0((unsigned __int8)byte_98A1C5[20 * v7 + v6], (const char *)3);\n  if ( qword_88C238 )\n    sub_40E710();\n  v1 = sub_42AA60((unsigned int)(v6 + 20 * v7 + 21), &v9, &v8, &v10);\n  v2 = v1;\n  sub_45C030(v1, 0);\n  LODWORD(v3) = sub_45BF90(\"%d\", (unsigned int)dword_4B26D0[v2]);\n  if ( v2 > 0 )\n  {\n    sub_45BF90(\" \");\n    v3 = sub_45BF70(\n           (1717986919LL * v9 >> 35) + ((unsigned __int64)(1717986919LL * v9) >> 63) - 1,\n           v9 - 20 * ((1717986919LL * v9 >> 35) + ((unsigned __int64)(1717986919LL * v9) >> 63)) - 1);\n  }\n  if ( !v8 )\n  {\n    if ( byte_8A9268 & 1 )\n      LODWORD(v3) = sub_45BF90(\" uncertain\");\n  }\n  return sub_45C070(v3);\n}\n", 
            "funcStartAddr": "0x462af0L", 
            "funcEndAddr": "0x462c03L", 
            "funcName": "sub_462AF0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_462C10(__int64 a1)\n{\n  int *v1; // rsi\n  int v2; // eax\n  char *v3; // rdi\n  __int64 v4; // rbx\n  int v5; // eax\n  unsigned int v6; // edi\n  char v7; // al\n  __int64 v8; // rax\n  int v9; // ebx\n  __int64 v10; // rax\n  int v12; // [rsp+8h] [rbp-20h]\n  int v13; // [rsp+Ch] [rbp-1Ch]\n  int v14; // [rsp+10h] [rbp-18h]\n  int v15; // [rsp+14h] [rbp-14h]\n  int v16; // [rsp+18h] [rbp-10h]\n  int v17; // [rsp+1Ch] [rbp-Ch]\n\n  v1 = &v13;\n  v2 = sub_45C270(a1, &v13, &v12);\n  if ( !v2 )\n    goto LABEL_19;\n  if ( byte_98A1C5[20 * v13 + v12] )\n  {\n    v3 = \"move vertex must be empty\";\n    return sub_45BB40(v3, v1);\n  }\n  v4 = v2 + a1;\n  v1 = &v17;\n  v5 = sub_45C270(v4, &v17, &v16);\n  if ( !v5 || (v1 = &v15, !(unsigned int)sub_45C270(v5 + v4, &v15, &v14)) )\n  {\nLABEL_19:\n    v3 = \"invalid coordinate\";\n    return sub_45BB40(v3, v1);\n  }\n  v6 = (unsigned __int8)byte_98A1C5[20 * v17 + v16];\n  if ( !byte_98A1C5[20 * v17 + v16] || (v7 = byte_98A1C5[20 * v15 + v14]) == 0 )\n  {\n    v3 = \"dragon vertex must not be empty\";\n    return sub_45BB40(v3, v1);\n  }\n  if ( (_BYTE)v6 != v7 )\n  {\n    v3 = \"dragon vertices must have the same color\";\n    return sub_45BB40(v3, v1);\n  }\n  sub_4187D0(v6, (const char *)3);\n  if ( qword_88C238 )\n    sub_40E710();\n  v8 = sub_42F3C0((unsigned int)(v12 + 20 * v13 + 21), (unsigned int)(v16 + 20 * v17 + 21), v14 + 20 * v15 + 21);\n  v9 = v8;\n  sub_45C030(v8, 0);\n  LODWORD(v10) = sub_45BF90(\"%d\", (unsigned int)dword_4B26D0[v9]);\n  return sub_45C070(v10);\n}\n", 
            "funcStartAddr": "0x462c10L", 
            "funcEndAddr": "0x462d68L", 
            "funcName": "sub_462C10"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_462D70(__int64 a1)\n{\n  __int64 v1; // rax\n  int v2; // ebx\n  __int64 v3; // rax\n  char *v5; // rdi\n  int v6; // [rsp+Ch] [rbp-1Ch]\n  int v7; // [rsp+10h] [rbp-18h]\n  int v8; // [rsp+14h] [rbp-14h]\n  int v9; // [rsp+18h] [rbp-10h]\n  char v10; // [rsp+1Ch] [rbp-Ch]\n\n  if ( !(unsigned int)sub_45C270(a1, &v7, &v6) )\n  {\n    v5 = \"invalid coordinate\";\n    return sub_45BB40(v5, &v7);\n  }\n  if ( !byte_98A1C5[20 * v7 + v6] )\n  {\n    v5 = \"vertex must not be empty\";\n    return sub_45BB40(v5, &v7);\n  }\n  sub_4187D0((unsigned __int8)byte_98A1C5[20 * v7 + v6], (const char *)3);\n  if ( qword_88C238 )\n    sub_40E710();\n  v1 = sub_42CE50((unsigned int)(v6 + 20 * v7 + 21), &v9, &v8, &v10);\n  v2 = v1;\n  sub_45C030(v1, 0);\n  LODWORD(v3) = sub_45BF90(\"%d\", (unsigned int)dword_4B26D0[v2]);\n  if ( v2 > 0 )\n  {\n    sub_45BF90(\" \");\n    v3 = sub_45BF70(\n           (1717986919LL * v9 >> 35) + ((unsigned __int64)(1717986919LL * v9) >> 63) - 1,\n           v9 - 20 * ((1717986919LL * v9 >> 35) + ((unsigned __int64)(1717986919LL * v9) >> 63)) - 1);\n  }\n  if ( !v8 )\n  {\n    if ( byte_8A9268 & 1 )\n      LODWORD(v3) = sub_45BF90(\" uncertain\");\n  }\n  return sub_45C070(v3);\n}\n", 
            "funcStartAddr": "0x462d70L", 
            "funcEndAddr": "0x462e83L", 
            "funcName": "sub_462D70"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_462E90(__int64 a1)\n{\n  int *v1; // rsi\n  int v2; // eax\n  char *v3; // rdi\n  __int64 v4; // rax\n  int v5; // ebx\n  __int64 v6; // rax\n  int v8; // [rsp+Ch] [rbp-1Ch]\n  int v9; // [rsp+10h] [rbp-18h]\n  int v10; // [rsp+14h] [rbp-14h]\n  int v11; // [rsp+18h] [rbp-10h]\n  char v12; // [rsp+1Ch] [rbp-Ch]\n\n  v1 = &v9;\n  v2 = sub_45C270(a1, &v9, &v8);\n  if ( !v2 )\n    goto LABEL_15;\n  if ( byte_98A1C5[20 * v9 + v8] )\n  {\n    v3 = \"move vertex must be empty\";\n    return sub_45BB40(v3, v1);\n  }\n  v1 = &v11;\n  if ( !(unsigned int)sub_45C270(v2 + a1, &v11, &v10) )\n  {\nLABEL_15:\n    v3 = \"invalid coordinate\";\n    return sub_45BB40(v3, v1);\n  }\n  if ( !byte_98A1C5[20 * v11 + v10] )\n  {\n    v3 = \"dragon vertex must not be empty\";\n    return sub_45BB40(v3, v1);\n  }\n  sub_4187D0((unsigned __int8)byte_98A1C5[20 * v11 + v10], (const char *)3);\n  if ( qword_88C238 )\n    sub_40E710();\n  v4 = sub_42F0B0((unsigned int)(v8 + 20 * v9 + 21), (unsigned int)(v10 + 20 * v11 + 21), &v12);\n  v5 = v4;\n  sub_45C030(v4, 0);\n  LODWORD(v6) = sub_45BF90(\"%d\", (unsigned int)dword_4B26D0[v5]);\n  return sub_45C070(v6);\n}\n", 
            "funcStartAddr": "0x462e90L", 
            "funcEndAddr": "0x462f8eL", 
            "funcName": "sub_462E90"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_462F90(__int64 a1)\n{\n  int *v1; // rsi\n  int v2; // eax\n  char *v3; // rdi\n  __int64 v4; // rax\n  int v5; // ebx\n  __int64 v6; // rax\n  int v8; // [rsp+Ch] [rbp-1Ch]\n  int v9; // [rsp+10h] [rbp-18h]\n  int v10; // [rsp+14h] [rbp-14h]\n  int v11; // [rsp+18h] [rbp-10h]\n  char v12; // [rsp+1Ch] [rbp-Ch]\n\n  v1 = &v9;\n  v2 = sub_45C270(a1, &v9, &v8);\n  if ( !v2 )\n    goto LABEL_15;\n  if ( byte_98A1C5[20 * v9 + v8] )\n  {\n    v3 = \"move vertex must be empty\";\n    return sub_45BB40(v3, v1);\n  }\n  v1 = &v11;\n  if ( !(unsigned int)sub_45C270(v2 + a1, &v11, &v10) )\n  {\nLABEL_15:\n    v3 = \"invalid coordinate\";\n    return sub_45BB40(v3, v1);\n  }\n  if ( !byte_98A1C5[20 * v11 + v10] )\n  {\n    v3 = \"dragon vertex must not be empty\";\n    return sub_45BB40(v3, v1);\n  }\n  sub_4187D0((unsigned __int8)byte_98A1C5[20 * v11 + v10], (const char *)3);\n  if ( qword_88C238 )\n    sub_40E710();\n  v4 = sub_42EAE0((unsigned int)(v8 + 20 * v9 + 21), (unsigned int)(v10 + 20 * v11 + 21), (__int64)&v12);\n  v5 = v4;\n  sub_45C030(v4, 0);\n  LODWORD(v6) = sub_45BF90(\"%d\", (unsigned int)dword_4B26D0[v5]);\n  return sub_45C070(v6);\n}\n", 
            "funcStartAddr": "0x462f90L", 
            "funcEndAddr": "0x46308eL", 
            "funcName": "sub_462F90"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_463090@<rax>(__int64 a1@<rax>, __int64 a2@<rdi>)\n{\n  unsigned int v2; // eax\n  char *v4; // rdi\n  __int64 v5; // [rsp+0h] [rbp-8h]\n\n  v5 = a1;\n  if ( !(unsigned int)sub_45C270(a2, (_DWORD *)&v5 + 1, &v5) )\n  {\n    v4 = \"invalid coordinate\";\n    return sub_45BB40(v4, (char *)&v5 + 4);\n  }\n  if ( !byte_98A1C5[20 * SHIDWORD(v5) + (signed int)v5] )\n  {\n    v4 = \"vertex must not be empty\";\n    return sub_45BB40(v4, (char *)&v5 + 4);\n  }\n  sub_4187D0(3 - (unsigned __int8)byte_98A1C5[20 * SHIDWORD(v5) + (signed int)v5], (const char *)3);\n  if ( qword_88C238 )\n    sub_40E710();\n  v2 = sub_42F8F0((unsigned int)(v5 + 20 * HIDWORD(v5) + 21));\n  return sub_45C090(\"%d\", v2);\n}\n", 
            "funcStartAddr": "0x463090L", 
            "funcEndAddr": "0x463117L", 
            "funcName": "sub_463090"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_463120(__int64 a1)\n{\n  __int64 v1; // rax\n  int v2; // ebx\n  __int64 v3; // rax\n  char *v5; // rdi\n  int v6; // [rsp+0h] [rbp-18h]\n  int v7; // [rsp+4h] [rbp-14h]\n  int v8; // [rsp+8h] [rbp-10h]\n  int v9; // [rsp+Ch] [rbp-Ch]\n\n  if ( !(unsigned int)sub_45C270(a1, &v7, &v6) )\n  {\n    v5 = \"invalid coordinate\";\n    return sub_45BB40(v5, &v7);\n  }\n  if ( !byte_98A1C5[20 * v7 + v6] )\n  {\n    v5 = \"vertex must not be empty\";\n    return sub_45BB40(v5, &v7);\n  }\n  sub_4187D0((unsigned __int8)byte_98A1C5[20 * v7 + v6], (const char *)3);\n  if ( qword_88C238 )\n    sub_40E710();\n  v1 = sub_42C0C0((unsigned int)(v6 + 20 * v7 + 21), &v9, (unsigned int *)&v8);\n  v2 = v1;\n  sub_45C030(v1, 0);\n  LODWORD(v3) = sub_45BF90(\"%d\", (unsigned int)dword_4B26D0[v2]);\n  if ( v2 > 0 )\n  {\n    sub_45BF90(\" \");\n    sub_45BF70(\n      (1717986919LL * v9 >> 35) + ((unsigned __int64)(1717986919LL * v9) >> 63) - 1,\n      v9 - 20 * ((1717986919LL * v9 >> 35) + ((unsigned __int64)(1717986919LL * v9) >> 63)) - 1);\n    sub_45BF90(\" \");\n    v3 = sub_45BF70(\n           (1717986919LL * v8 >> 35) + ((unsigned __int64)(1717986919LL * v8) >> 63) - 1,\n           v8 - 20 * ((1717986919LL * v8 >> 35) + ((unsigned __int64)(1717986919LL * v8) >> 63)) - 1);\n  }\n  return sub_45C070(v3);\n}\n", 
            "funcStartAddr": "0x463120L", 
            "funcEndAddr": "0x46324aL", 
            "funcName": "sub_463120"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_463250(__int64 a1)\n{\n  __int64 v1; // rax\n  int v2; // ebx\n  __int64 v3; // rax\n  char *v5; // rdi\n  int v6; // [rsp+0h] [rbp-18h]\n  int v7; // [rsp+4h] [rbp-14h]\n  int v8; // [rsp+8h] [rbp-10h]\n  int v9; // [rsp+Ch] [rbp-Ch]\n\n  if ( !(unsigned int)sub_45C270(a1, &v7, &v6) )\n  {\n    v5 = \"invalid coordinate\";\n    return sub_45BB40(v5, &v7);\n  }\n  if ( !byte_98A1C5[20 * v7 + v6] )\n  {\n    v5 = \"vertex must not be empty\";\n    return sub_45BB40(v5, &v7);\n  }\n  sub_4187D0((unsigned __int8)byte_98A1C5[20 * v7 + v6], (const char *)3);\n  if ( qword_88C238 )\n    sub_40E710();\n  v1 = sub_42DEE0((unsigned int)(v6 + 20 * v7 + 21), (unsigned int *)&v9, (unsigned int *)&v8);\n  v2 = v1;\n  sub_45C030(v1, 0);\n  LODWORD(v3) = sub_45BF90(\"%d\", (unsigned int)dword_4B26D0[v2]);\n  if ( v2 > 0 )\n  {\n    sub_45BF90(\" \");\n    sub_45BF70(\n      (1717986919LL * v9 >> 35) + ((unsigned __int64)(1717986919LL * v9) >> 63) - 1,\n      v9 - 20 * ((1717986919LL * v9 >> 35) + ((unsigned __int64)(1717986919LL * v9) >> 63)) - 1);\n    sub_45BF90(\" \");\n    v3 = sub_45BF70(\n           (1717986919LL * v8 >> 35) + ((unsigned __int64)(1717986919LL * v8) >> 63) - 1,\n           v8 - 20 * ((1717986919LL * v8 >> 35) + ((unsigned __int64)(1717986919LL * v8) >> 63)) - 1);\n  }\n  return sub_45C070(v3);\n}\n", 
            "funcStartAddr": "0x463250L", 
            "funcEndAddr": "0x46337aL", 
            "funcName": "sub_463250"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_463380(__int64 a1)\n{\n  unsigned int *v1; // rsi\n  __int64 v2; // rsi\n  char *v4; // rdi\n  unsigned int v5; // [rsp+Ch] [rbp-Ch]\n  int v6; // [rsp+10h] [rbp-8h]\n  int v7; // [rsp+14h] [rbp-4h]\n\n  v1 = &v5;\n  if ( (unsigned int)sub_45C350(a1, (signed int *)&v5, &v7, &v6) )\n  {\n    v1 = (unsigned int *)v5;\n    if ( (unsigned int)sub_407B30(v6 + 20 * v7 + 21, v5) )\n    {\n      v2 = v5;\n      sub_4074F0(v6 + 20 * v7 + 21, v5);\n      return sub_45C090(&byte_494DEA, v2);\n    }\n    v4 = \"illegal move\";\n  }\n  else\n  {\n    v4 = \"invalid color or coordinate\";\n  }\n  return sub_45BB40(v4, v1);\n}\n", 
            "funcStartAddr": "0x463380L", 
            "funcEndAddr": "0x4633fdL", 
            "funcName": "sub_463380"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_463400@<rax>(__int64 a1@<rax>, __int64 a2@<rsi>)\n{\n  __int64 v2; // ST00_8\n  __int64 v3; // rdx\n\n  if ( !dword_98A7F4 )\n    return sub_45BB40(\"Stack empty.\\n\");\n  v2 = a1;\n  sub_407030();\n  return sub_45C090(&byte_494DEA, a2, v3, v2);\n}\n", 
            "funcStartAddr": "0x463400L", 
            "funcEndAddr": "0x463428L", 
            "funcName": "sub_463400"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_463430@<rax>(__int64 a1@<rax>, __int64 a2@<rdi>)\n{\n  char *v2; // rdi\n  __int64 v4; // [rsp-4h] [rbp-8h]\n  __int64 v5; // [rsp-4h] [rbp-8h]\n  __int64 v6; // [rsp-4h] [rbp-8h]\n\n  v4 = a1;\n  if ( (signed int)__isoc99_sscanf(a2, \"%d\", (char *)&v4 + 4) <= 0 )\n  {\n    v2 = \"orientation not an integer\";\n    return sub_45BB40(v2, \"%d\", v5);\n  }\n  if ( HIDWORD(v4) >= 8 )\n  {\n    v2 = \"unacceptable orientation\";\n    return sub_45BB40(v2, \"%d\", v5);\n  }\n  sub_4066E0();\n  dword_8A8700 = HIDWORD(v4);\n  sub_45BC40((__int64)sub_460250, (__int64)sub_460270);\n  return sub_45C090(&byte_494DEA, sub_460270, v6);\n}\n", 
            "funcStartAddr": "0x463430L", 
            "funcEndAddr": "0x46348eL", 
            "funcName": "sub_463430"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_463490@<rax>(__int64 a1@<rax>, __int64 a2@<rdi>, __m128i a3@<xmm0>, __m128i a4@<xmm1>)\n{\n  const char *v4; // rsi\n  __int64 v5; // rax\n  char *v6; // rdi\n  __int64 v8; // rax\n  __int64 v9; // rax\n  signed int v10; // ebp\n  __int64 v11; // r15\n  __int64 v12; // r14\n  signed __int64 v13; // rbx\n  __int64 v14; // rcx\n  __int64 v15; // [rsp-4h] [rbp-28h]\n  __int64 v16; // [rsp-4h] [rbp-28h]\n  __int64 v17; // [rsp-4h] [rbp-28h]\n  __int64 v18; // [rsp-4h] [rbp-28h]\n\n  v15 = a1;\n  v4 = \"%d\";\n  if ( (signed int)__isoc99_sscanf(a2, \"%d\", (char *)&v15 + 4) <= 0 )\n  {\n    v6 = \"handicap not an integer\";\n    return sub_45BB40(v6, \"%d\", v16);\n  }\n  v5 = sub_40BBB0(3);\n  if ( (signed int)v5 > 0 )\n  {\n    v6 = \"board not empty\";\n    return sub_45BB40(v6, \"%d\", v16);\n  }\n  if ( SHIDWORD(v15) <= 1 )\n  {\n    v6 = \"invalid handicap\";\n    return sub_45BB40(v6, \"%d\", v16);\n  }\n  v8 = sub_45A0E0(v5, SHIDWORD(v15), a3, a4);\n  dword_8A9264 = v8;\n  sub_45C030(v8, 0);\n  v9 = (unsigned int)dword_565C68;\n  if ( dword_565C68 > 0 )\n  {\n    v10 = 1;\n    LODWORD(v11) = 21;\n    v12 = 0LL;\n    do\n    {\n      v11 = (unsigned int)v11;\n      if ( (signed int)v9 <= 0 )\n      {\n        v14 = (signed int)v9;\n      }\n      else\n      {\n        v13 = 0LL;\n        do\n        {\n          if ( byte_98A1B0[v11 + v13] )\n          {\n            if ( !v10 )\n              sub_45BF90(\" \", v4, v17);\n            v10 = 0;\n            v4 = (const char *)(unsigned int)v12;\n            sub_45BC50(\"%m\", (unsigned int)v12, (unsigned int)v13, v18);\n            v9 = (unsigned int)dword_565C68;\n          }\n          ++v13;\n          v14 = (signed int)v9;\n        }\n        while ( v13 < (signed int)v9 );\n      }\n      ++v12;\n      LODWORD(v11) = v11 + 20;\n    }\n    while ( v12 < v14 );\n  }\n  return sub_45C070(v9);\n}\n", 
            "funcStartAddr": "0x463490L", 
            "funcEndAddr": "0x46359aL", 
            "funcName": "sub_463490"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_4635A0()\n{\n  return sub_45C090(\"%d\", (unsigned int)dword_565C8C);\n}\n", 
            "funcStartAddr": "0x4635a0L", 
            "funcEndAddr": "0x4635b2L", 
            "funcName": "sub_4635A0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_4635C0()\n{\n  return sub_45C090(\"%d\", (unsigned int)dword_565C68);\n}\n", 
            "funcStartAddr": "0x4635c0L", 
            "funcEndAddr": "0x4635d2L", 
            "funcName": "sub_4635C0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_4635E0()\n{\n  return sub_45C090(\"%d\", (unsigned int)dword_8A8700);\n}\n", 
            "funcStartAddr": "0x4635e0L", 
            "funcEndAddr": "0x4635f2L", 
            "funcName": "sub_4635E0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __usercall sub_463600@<rax>(__int64 a1@<rax>)\n{\n  sub_45C090(&byte_494DEA, a1);\n  return 0xFFFFFFFFLL;\n}\n", 
            "funcStartAddr": "0x463600L", 
            "funcEndAddr": "0x463614L", 
            "funcName": "sub_463600"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_463620(__int64 a1)\n{\n  signed int v1; // ebp\n  unsigned int *v2; // rsi\n  int v3; // eax\n  __int64 v4; // rbx\n  int v5; // eax\n  __int64 v6; // rdx\n  __int64 v7; // rax\n  char *v8; // rdi\n  __int64 v10; // rax\n  __int64 v11; // rax\n  unsigned int v12; // [rsp+4h] [rbp-674h]\n  unsigned int v13; // [rsp+8h] [rbp-670h]\n  unsigned int v14; // [rsp+Ch] [rbp-66Ch]\n  char s; // [rsp+10h] [rbp-668h]\n  int v16[389]; // [rsp+64h] [rbp-614h]\n\n  v1 = 0;\n  memset(&s, 0, 0x640uLL);\n  v2 = &v14;\n  v3 = sub_45C170(a1, (signed int *)&v14);\n  if ( !v3 )\n  {\n    v8 = \"invalid color\";\n    return sub_45BB40(v8, v2);\n  }\n  v4 = v3 + a1;\n  v5 = sub_45C270(v4, &v13, &v12);\n  if ( v5 > 0 )\n  {\n    do\n    {\n      v16[(signed int)v12 + 20LL * (signed int)v13] = 1;\n      v4 += v5;\n      v5 = sub_45C270(v4, &v13, &v12);\n    }\n    while ( v5 > 0 );\n    v1 = 1;\n  }\n  v2 = (unsigned int *)&off_49FE2A;\n  v7 = __isoc99_sscanf(v4, &off_49FE2A, v6);\n  if ( (_DWORD)v7 != -1 )\n  {\n    v8 = \"invalid coordinate\";\n    return sub_45BB40(v8, v2);\n  }\n  if ( !v1 )\n  {\n    v8 = \"no allowed vertex\";\n    return sub_45BB40(v8, v2);\n  }\n  if ( dword_98A7F4 > 0 )\n  {\n    v8 = \"genmove cannot be called when stackp > 0\";\n    return sub_45BB40(v8, v2);\n  }\n  dword_88C240 = 0;\n  v10 = sub_419990(v7, v14, (__int64)&s, &v13, &v12);\n  sub_45C030(v10, 0);\n  v11 = sub_45BF70(v13, v12);\n  return sub_45C070(v11);\n}\n", 
            "funcStartAddr": "0x463620L", 
            "funcEndAddr": "0x463743L", 
            "funcName": "sub_463620"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_463750(__int64 a1)\n{\n  __int64 v1; // rax\n  char *v2; // rdi\n  __int64 v4; // rax\n  __int64 v5; // rax\n  unsigned int v6; // [rsp+Ch] [rbp-Ch]\n  unsigned int v7; // [rsp+10h] [rbp-8h]\n  unsigned int v8; // [rsp+14h] [rbp-4h]\n\n  v1 = sub_45C170(a1, (signed int *)&v6);\n  if ( !(_DWORD)v1 )\n  {\n    v2 = \"invalid color\";\n    return sub_45BB40(v2, &v6);\n  }\n  if ( dword_98A7F4 > 0 )\n  {\n    v2 = \"genmove cannot be called when stackp > 0\";\n    return sub_45BB40(v2, &v6);\n  }\n  dword_88C240 = 0;\n  v4 = sub_419910(v1, v6, &v8, &v7);\n  sub_45C030(v4, 0);\n  v5 = sub_45BF70(v8, v7);\n  return sub_45C070(v5);\n}\n", 
            "funcStartAddr": "0x463750L", 
            "funcEndAddr": "0x4637beL", 
            "funcName": "sub_463750"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4637C0(char *s1)\n{\n  char *v1; // rsi\n\n  v1 = \"on\";\n  if ( !strncmp(s1, \"on\", 2uLL) )\n  {\n    byte_8A9268 = 1;\n  }\n  else\n  {\n    v1 = off_4A0193;\n    if ( strncmp(s1, off_4A0193, 3uLL) )\n      return sub_45BB40(\"invalid argument\", off_4A0193);\n    byte_8A9268 = 0;\n  }\n  return sub_45C090(&byte_494DEA, v1);\n}\n", 
            "funcStartAddr": "0x4637c0L", 
            "funcEndAddr": "0x463817L", 
            "funcName": "sub_4637C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_463820@<rax>(__int64 a1@<rax>, __int64 a2@<rsi>)\n{\n  __int64 v2; // ST00_8\n  __int64 v3; // rdx\n\n  v2 = a1;\n  sub_4352C0();\n  return sub_45C090(&byte_494DEA, a2, v3, v2);\n}\n", 
            "funcStartAddr": "0x463820L", 
            "funcEndAddr": "0x463833L", 
            "funcName": "sub_463820"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_463840()\n{\n  return sub_45C090(&byte_494DEA);\n}\n", 
            "funcStartAddr": "0x463840L", 
            "funcEndAddr": "0x46384cL", 
            "funcName": "sub_463840"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_463850@<rax>(__int64 a1@<rax>, __int64 a2@<rsi>)\n{\n  __int64 v2; // ST00_8\n  __int64 v3; // rdx\n\n  v2 = a1;\n  sub_4310C0();\n  return sub_45C090(&byte_494DEA, a2, v3, v2);\n}\n", 
            "funcStartAddr": "0x463850L", 
            "funcEndAddr": "0x463863L", 
            "funcName": "sub_463850"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_463870@<rax>(__int64 a1@<rax>, __int64 a2@<rsi>)\n{\n  __int64 v2; // ST00_8\n  __int64 v3; // rdx\n\n  v2 = a1;\n  sub_43F960();\n  return sub_45C090(&byte_494DEA, a2, v3, v2);\n}\n", 
            "funcStartAddr": "0x463870L", 
            "funcEndAddr": "0x463883L", 
            "funcName": "sub_463870"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_463890@<rax>(__int64 a1@<rax>, __int64 a2@<rsi>)\n{\n  __int64 v2; // ST00_8\n  __int64 v3; // rdx\n\n  v2 = a1;\n  sub_40BCB0();\n  return sub_45C090(&byte_494DEA, a2, v3, v2);\n}\n", 
            "funcStartAddr": "0x463890L", 
            "funcEndAddr": "0x4638a3L", 
            "funcName": "sub_463890"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4638B0(__int64 a1)\n{\n  int *v1; // rsi\n  int v2; // eax\n  char *v4; // rdi\n  int v5; // [rsp+0h] [rbp-18h]\n  int v6; // [rsp+4h] [rbp-14h]\n  int v7; // [rsp+8h] [rbp-10h]\n  int v8; // [rsp+Ch] [rbp-Ch]\n\n  v1 = &v8;\n  v2 = sub_45C270(a1, &v8, &v7);\n  if ( v2 && (v1 = &v6, (unsigned int)sub_45C270(v2 + a1, &v6, &v5)) )\n  {\n    if ( byte_98A1C5[20 * v8 + v7] && byte_98A1C5[20 * v6 + v5] )\n    {\n      sub_4187D0(2u, (const char *)3);\n      return sub_45C090(\"%d\", dword_9555F0[19 * (v7 + 20LL * v8)] == dword_9555F0[19 * (v5 + 20LL * v6)]);\n    }\n    v4 = \"vertex must not be empty\";\n  }\n  else\n  {\n    v4 = \"invalid coordinate\";\n  }\n  return sub_45BB40(v4, v1);\n}\n", 
            "funcStartAddr": "0x4638b0L", 
            "funcEndAddr": "0x46398eL", 
            "funcName": "sub_4638B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_463990(__int64 a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rdi\n  unsigned int v4; // er12\n  __int64 v5; // rdx\n  int v6; // ebp\n  void *__ptr32 *v7; // rsi\n  int v8; // [rsp+8h] [rbp-30h]\n  int v9; // [rsp+Ch] [rbp-2Ch]\n\n  v1 = a1;\n  if ( (signed int)sub_40BBB0(3) <= 0 )\n  {\n    v4 = 0;\n    while ( 1 )\n    {\n      v6 = sub_45C270(v1, &v9, &v8);\n      if ( v6 <= 0 )\n        break;\n      if ( byte_98A1C5[20 * v9 + v8] )\n      {\n        sub_4066E0();\n        v2 = \"repeated vertex\";\n        return sub_45BB40(v2);\n      }\n      v7 = (void *__ptr32 *)2;\n      sub_407220(v8 + 20 * v9 + 21, 2u);\n      v1 += v6;\n      if ( ++v4 >= 0x169 )\n      {\n        v4 = 361;\nLABEL_10:\n        dword_8A9264 = v4;\n        return sub_45C090(&byte_494DEA, v7);\n      }\n    }\n    v7 = &off_49FE2A;\n    if ( (unsigned int)__isoc99_sscanf(v1, &off_49FE2A, v5) == -1 )\n    {\n      if ( v4 > 1 )\n        goto LABEL_10;\n      sub_4066E0();\n      v2 = \"invalid handicap\";\n    }\n    else\n    {\n      v2 = \"invalid coordinate\";\n    }\n  }\n  else\n  {\n    v2 = \"board not empty\";\n  }\n  return sub_45BB40(v2);\n}\n", 
            "funcStartAddr": "0x463990L", 
            "funcEndAddr": "0x463a90L", 
            "funcName": "sub_463990"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_463A90@<rax>(__int64 a1@<rax>)\n{\n  __int64 v1; // ST00_8\n  __int64 v2; // ST00_8\n\n  v1 = a1;\n  sub_45C030(a1, 0);\n  sub_45BF90(\"\\n\", v1);\n  sub_44AB50(stdout);\n  return sub_45C070(v2);\n}\n", 
            "funcStartAddr": "0x463a90L", 
            "funcEndAddr": "0x463ab6L", 
            "funcName": "sub_463A90"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_463AC0@<rax>(__int64 a1@<rax>, __int64 a2@<rdi>)\n{\n  char *v3; // rdi\n  __int64 v4; // [rsp+0h] [rbp-8h]\n\n  v4 = a1;\n  if ( (unsigned int)sub_45C270(a2, (_DWORD *)&v4 + 1, &v4) )\n  {\n    if ( byte_98A1C5[20 * SHIDWORD(v4) + (signed int)v4] )\n    {\n      sub_4187D0((unsigned __int8)byte_98A1C5[20 * SHIDWORD(v4) + (signed int)v4], (const char *)4);\n      return sub_45C090(\n               \"%d\",\n               *((unsigned int *)ptr + 26 * dword_9555F0[19 * ((signed int)v4 + 20LL * SHIDWORD(v4))] + 24));\n    }\n    v3 = \"dragon vertex must be nonempty\";\n  }\n  else\n  {\n    v3 = \"invalid coordinate\";\n  }\n  return sub_45BB40(v3, (char *)&v4 + 4);\n}\n", 
            "funcStartAddr": "0x463ac0L", 
            "funcEndAddr": "0x463b43L", 
            "funcName": "sub_463AC0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_463B50(__int64 a1)\n{\n  int *v1; // rsi\n  int v2; // eax\n  char *v3; // rdi\n  unsigned int v4; // eax\n  int v6; // [rsp+0h] [rbp-18h]\n  int v7; // [rsp+4h] [rbp-14h]\n  int v8; // [rsp+8h] [rbp-10h]\n  int v9; // [rsp+Ch] [rbp-Ch]\n\n  v1 = &v9;\n  v2 = sub_45C270(a1, &v9, &v8);\n  if ( !v2 )\n    goto LABEL_13;\n  if ( byte_98A1C5[20 * v9 + v8] )\n  {\n    v3 = \"move vertex must be empty\";\n    return sub_45BB40(v3, v1);\n  }\n  v1 = &v7;\n  if ( !(unsigned int)sub_45C270(v2 + a1, &v7, &v6) )\n  {\nLABEL_13:\n    v3 = \"invalid coordinate\";\n    return sub_45BB40(v3, v1);\n  }\n  if ( byte_98A1C5[20 * v7 + v6] )\n  {\n    sub_4187D0((unsigned __int8)byte_98A1C5[20 * v7 + v6], (const char *)4);\n    v4 = sub_45B8D0(v8 + 20 * v9 + 21, v6 + 20 * v7 + 21);\n    return sub_45C090(\"%d\", v4);\n  }\n  v3 = \"dragon vertex must be nonempty\";\n  return sub_45BB40(v3, v1);\n}\n", 
            "funcStartAddr": "0x463b50L", 
            "funcEndAddr": "0x463c1bL", 
            "funcName": "sub_463B50"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_463C20(__int64 a1)\n{\n  int *v1; // rsi\n  int v2; // eax\n  unsigned int v3; // eax\n  char *v5; // rdi\n  int v6; // [rsp+0h] [rbp-18h]\n  int v7; // [rsp+4h] [rbp-14h]\n  int v8; // [rsp+8h] [rbp-10h]\n  int v9; // [rsp+Ch] [rbp-Ch]\n\n  v1 = &v7;\n  v2 = sub_45C270(a1, &v7, &v6);\n  if ( v2 )\n  {\n    if ( !byte_98A1C5[20 * v7 + v6] )\n    {\n      v5 = \"dragon vertex must not be empty\";\n      return sub_45BB40(v5, v1);\n    }\n    v1 = &v9;\n    if ( (unsigned int)sub_45C270(v2 + a1, &v9, &v8) )\n    {\n      sub_4187D0((unsigned __int8)byte_98A1C5[20 * v7 + v6], (const char *)4);\n      v3 = sub_45B920(v6 + 20 * v7 + 21, v8 + 20 * v9 + 21);\n      return sub_45C090(\"%d\", v3);\n    }\n  }\n  v5 = \"invalid coordinate\";\n  return sub_45BB40(v5, v1);\n}\n", 
            "funcStartAddr": "0x463c20L", 
            "funcEndAddr": "0x463cdfL", 
            "funcName": "sub_463C20"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_463CE0@<rax>(__int64 a1@<rax>, __int64 a2@<rsi>)\n{\n  __int64 v2; // ST00_8\n  __int64 v3; // rdx\n\n  v2 = a1;\n  sub_448D40(&unk_8A9270);\n  dword_88C22C = 1;\n  return sub_45C090(&byte_494DEA, a2, v3, v2);\n}\n", 
            "funcStartAddr": "0x463ce0L", 
            "funcEndAddr": "0x463d02L", 
            "funcName": "sub_463CE0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_463D10(__int64 a1)\n{\n  __int64 v1; // r14\n  int v2; // eax\n  __int64 v3; // rbx\n  int v5; // [rsp+8h] [rbp-5D0h]\n  int v6; // [rsp+Ch] [rbp-5CCh]\n  int v7[370]; // [rsp+10h] [rbp-5C8h]\n\n  v1 = a1;\n  v2 = sub_45C270(a1, &v6, &v5);\n  if ( v2 <= 0 )\n    return sub_45BB40(\"invalid coordinate\", &v6);\n  v3 = 0LL;\n  do\n  {\n    v7[v3++] = v5 + 20 * v6 + 21;\n    v1 += v2;\n    v2 = sub_45C270(v1, &v6, &v5);\n  }\n  while ( v2 > 0 );\n  if ( !(_DWORD)v3 )\n    return sub_45BB40(\"invalid coordinate\", &v6);\n  sub_426FE0(v3, v7);\n  return sub_45C090(&byte_494DEA, v7);\n}\n", 
            "funcStartAddr": "0x463d10L", 
            "funcEndAddr": "0x463da9L", 
            "funcName": "sub_463D10"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_463DB0(__int64 a1)\n{\n  const char *v1; // rsi\n  int v2; // eax\n  char *v3; // rdi\n  char v5; // [rsp+8h] [rbp-10h]\n  char v6; // [rsp+Ch] [rbp-Ch]\n\n  v1 = &v6;\n  v2 = sub_45C170(a1, (signed int *)&v6);\n  if ( !v2 )\n  {\n    v3 = \"invalid color\";\n    return sub_45BB40(v3, v1);\n  }\n  v1 = \"%d %d\";\n  if ( (signed int)__isoc99_sscanf(v2 + a1, \"%d %d\", &v5) <= 1 )\n  {\n    v3 = \"time and stones not two integers\";\n    return sub_45BB40(v3, v1);\n  }\n  return sub_45C090(&byte_494DEA, \"%d %d\");\n}\n", 
            "funcStartAddr": "0x463db0L", 
            "funcEndAddr": "0x463e10L", 
            "funcName": "sub_463DB0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_463E10(__int64 a1)\n{\n  __int64 result; // rax\n  char v2; // [rsp+14h] [rbp-4h]\n\n  if ( (signed int)__isoc99_sscanf(a1, \"%d %d %d\", &v2) > 2 )\n    result = sub_45C090(&byte_494DEA, \"%d %d %d\");\n  else\n    result = sub_45BB40(\"not three integers\", \"%d %d %d\");\n  return result;\n}\n", 
            "funcStartAddr": "0x463e10L", 
            "funcEndAddr": "0x463e56L", 
            "funcName": "sub_463E10"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_463E60@<rax>(__int64 a1@<rax>)\n{\n  signed __int64 v1; // rbx\n  double v2; // xmm0_8\n  __int64 v3; // rsi\n\n  sub_45C030(a1, 0);\n  v1 = -40LL;\n  do\n  {\n    *(_QWORD *)&v2 = *(unsigned int *)(v1 + 10004168);\n    if ( *(float *)&v2 > 0.0 )\n    {\n      v3 = *(signed int *)(v1 + 10004216);\n      sub_45BF70(\n        (1717986919 * v3 >> 35) + ((unsigned __int64)(1717986919 * v3) >> 63) - 1,\n        v3 - 20 * ((1717986919 * v3 >> 35) + ((unsigned __int64)(1717986919 * v3) >> 63)) - 1);\n      v2 = *(float *)(v1 + 10004168);\n      sub_45BF90(\" %.2f \", v2);\n    }\n    v1 += 4LL;\n  }\n  while ( v1 );\n  sub_45BF90(\"\\n\\n\", v2, 0.0);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x463e60L", 
            "funcEndAddr": "0x463ef0L", 
            "funcName": "sub_463E60"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_463EF0()\n{\n  __int64 v0; // rax\n  __int64 v1; // rax\n  signed __int64 v2; // rbx\n  __int64 v3; // rsi\n  char v5; // [rsp+8h] [rbp-10h]\n  char v6; // [rsp+Ch] [rbp-Ch]\n\n  v0 = sub_418860(&v6, &v5, 2u);\n  LODWORD(v1) = sub_45C030(v0, 0);\n  v2 = -40LL;\n  do\n  {\n    if ( *(float *)(v2 + 10004168) > 0.0 )\n    {\n      v3 = *(signed int *)(v2 + 10004216);\n      sub_45BF70(\n        (1717986919 * v3 >> 35) + ((unsigned __int64)(1717986919 * v3) >> 63) - 1,\n        v3 - 20 * ((1717986919 * v3 >> 35) + ((unsigned __int64)(1717986919 * v3) >> 63)) - 1);\n      LODWORD(v1) = sub_45BF90(\" %.2f \", *(float *)(v2 + 10004168));\n    }\n    v2 += 4LL;\n  }\n  while ( v2 );\n  return sub_45C070(v1);\n}\n", 
            "funcStartAddr": "0x463ef0L", 
            "funcEndAddr": "0x463f8bL", 
            "funcName": "sub_463EF0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_463F90()\n{\n  __int64 v0; // rax\n  __int64 v1; // rax\n  signed __int64 v2; // rbx\n  __int64 v3; // rsi\n  char v5; // [rsp+8h] [rbp-10h]\n  char v6; // [rsp+Ch] [rbp-Ch]\n\n  v0 = sub_418860(&v6, &v5, 1u);\n  LODWORD(v1) = sub_45C030(v0, 0);\n  v2 = -40LL;\n  do\n  {\n    if ( *(float *)(v2 + 10004168) > 0.0 )\n    {\n      v3 = *(signed int *)(v2 + 10004216);\n      sub_45BF70(\n        (1717986919 * v3 >> 35) + ((unsigned __int64)(1717986919 * v3) >> 63) - 1,\n        v3 - 20 * ((1717986919 * v3 >> 35) + ((unsigned __int64)(1717986919 * v3) >> 63)) - 1);\n      LODWORD(v1) = sub_45BF90(\" %.2f \", *(float *)(v2 + 10004168));\n    }\n    v2 += 4LL;\n  }\n  while ( v2 );\n  return sub_45C070(v1);\n}\n", 
            "funcStartAddr": "0x463f90L", 
            "funcEndAddr": "0x46402bL", 
            "funcName": "sub_463F90"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_464030(__int64 a1)\n{\n  int *v1; // rsi\n  char *v3; // rdi\n  unsigned int v4; // [rsp+Ch] [rbp-Ch]\n  int v5; // [rsp+10h] [rbp-8h]\n  int v6; // [rsp+14h] [rbp-4h]\n\n  v1 = (int *)&v4;\n  if ( (unsigned int)sub_45C350(a1, (signed int *)&v4, &v6, &v5) && v5 + 20 * v6 != -21 )\n  {\n    v1 = (int *)v4;\n    if ( (unsigned int)sub_406880((unsigned int)(v5 + 20 * v6 + 21), v4, \"gtp_trymove\", 0, 0, 0) )\n      return sub_45C090(&byte_494DEA, v1);\n    v3 = \"illegal move\";\n  }\n  else\n  {\n    v3 = \"invalid color or coordinate\";\n  }\n  return sub_45BB40(v3, v1);\n}\n", 
            "funcStartAddr": "0x464030L", 
            "funcEndAddr": "0x4640a2L", 
            "funcName": "sub_464030"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4640B0(__int64 a1)\n{\n  int *v1; // rsi\n  char *v3; // rdi\n  unsigned int v4; // [rsp+Ch] [rbp-Ch]\n  int v5; // [rsp+10h] [rbp-8h]\n  int v6; // [rsp+14h] [rbp-4h]\n\n  v1 = (int *)&v4;\n  if ( (unsigned int)sub_45C350(a1, (signed int *)&v4, &v6, &v5) && v5 + 20 * v6 != -21 )\n  {\n    v1 = (int *)v4;\n    if ( (unsigned int)sub_406E60((unsigned int)(v5 + 20 * v6 + 21), v4, \"gtp_tryko\", 0, 0) )\n      return sub_45C090(&byte_494DEA, v1);\n    v3 = \"illegal move\";\n  }\n  else\n  {\n    v3 = \"invalid color or coordinate\";\n  }\n  return sub_45BB40(v3, v1);\n}\n", 
            "funcStartAddr": "0x4640b0L", 
            "funcEndAddr": "0x46411fL", 
            "funcName": "sub_4640B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_464120(__int64 a1)\n{\n  __int64 v1; // r12\n  __int64 v2; // rbx\n  int v4; // [rsp+8h] [rbp-140h]\n  int v5; // [rsp+Ch] [rbp-13Ch]\n  int v6[78]; // [rsp+10h] [rbp-138h]\n\n  v1 = a1;\n  v2 = 0LL;\n  while ( (unsigned int)__isoc99_sscanf(v1, \"%d%n\", &v5) )\n  {\n    v6[v2] = v5;\n    v1 += v4;\n    if ( (unsigned __int64)++v2 >= 0x43 )\n    {\n      sub_43F580((__int64)v6);\n      return sub_45C090(&byte_494DEA, \"%d%n\");\n    }\n  }\n  return sub_45BB40(\"incorrect arguments, expected %d integers\", 67LL);\n}\n", 
            "funcStartAddr": "0x464120L", 
            "funcEndAddr": "0x4641abL", 
            "funcName": "sub_464120"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4641B0@<rax>(__int64 a1@<rax>, __int64 a2@<rsi>)\n{\n  __int64 v2; // rdx\n  __int64 v3; // rdx\n  __int64 v5; // [rsp-8h] [rbp-8h]\n\n  v5 = a1;\n  if ( !(unsigned int)sub_4079D0(1) )\n    return sub_45BB40(\"cannot undo\", a2, v2, v5);\n  sub_418500();\n  return sub_45C090(&byte_494DEA, a2, v3, v5);\n}\n", 
            "funcStartAddr": "0x4641b0L", 
            "funcEndAddr": "0x4641deL", 
            "funcName": "sub_4641B0"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_4641E0()\n{\n  return sub_45C090(\"3.3.14\");\n}\n", 
            "funcStartAddr": "0x4641e0L", 
            "funcEndAddr": "0x4641ecL", 
            "funcName": "sub_4641E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4641F0(char *s1)\n{\n  char v1; // al\n  char *v2; // rbx\n  __int32_t v3; // ebp\n  int *v4; // rsi\n  signed int v5; // edi\n  int v6; // eax\n  char *v8; // rdi\n  int v9; // [rsp+8h] [rbp-20h]\n  int v10; // [rsp+Ch] [rbp-1Ch]\n\n  v1 = *s1;\n  if ( *s1 )\n  {\n    v2 = s1 + 1;\n    do\n    {\n      LOBYTE(v3) = v1;\n      if ( (unsigned int)(v1 + 128) <= 0x17F )\n        v3 = (*__ctype_tolower_loc())[v1];\n      *(v2 - 1) = v3;\n      v1 = *v2++;\n    }\n    while ( v1 );\n  }\n  if ( !strncmp(s1, \"pass\", 4uLL) )\n  {\n    v10 = -1;\n    v9 = -1;\n    v6 = 1;\n    v5 = -1;\n  }\n  else\n  {\n    v4 = &v10;\n    if ( !(unsigned int)sub_45C270((__int64)s1, &v10, &v9) )\n    {\n      v8 = \"invalid coordinate\";\n      return sub_45BB40(v8, v4);\n    }\n    v5 = v9;\n    v6 = 20 * v10 + 21;\n  }\n  v4 = (int *)1;\n  if ( (unsigned int)sub_407B30(v6 + v5, 1u) )\n  {\n    sub_4074F0(v9 + 20 * v10 + 21, 1u);\n    return sub_45C090(&byte_494DEA, 1LL);\n  }\n  v8 = \"illegal move\";\n  return sub_45BB40(v8, v4);\n}\n", 
            "funcStartAddr": "0x4641f0L", 
            "funcEndAddr": "0x4642ebL", 
            "funcName": "sub_4641F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4642F0@<rax>(__int64 a1@<rax>, __int64 a2@<rdi>)\n{\n  char *v3; // rdi\n  __int64 v4; // [rsp+0h] [rbp-8h]\n\n  v4 = a1;\n  if ( (unsigned int)sub_45C270(a2, (_DWORD *)&v4 + 1, &v4) )\n  {\n    if ( byte_98A1C5[20 * SHIDWORD(v4) + (signed int)v4] )\n    {\n      sub_418580(0, (const char *)1);\n      return sub_45C090(off_499B47, (unsigned int)dword_8EB3C0[95 * ((signed int)v4 + 20LL * SHIDWORD(v4))]);\n    }\n    v3 = \"vertex must not be empty\";\n  }\n  else\n  {\n    v3 = \"invalid coordinate\";\n  }\n  return sub_45BB40(v3, (char *)&v4 + 4);\n}\n", 
            "funcStartAddr": "0x4642f0L", 
            "funcEndAddr": "0x464366L", 
            "funcName": "sub_4642F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_464370(__int64 a1, __int64 a2, __int64 a3)\n{\n  unsigned int v3; // er14\n  signed __int64 v4; // rsi\n  __int64 v5; // rax\n  int v6; // eax\n  signed int v7; // er15\n  __int64 v8; // r13\n  int *v9; // rbx\n  signed __int64 v10; // rbp\n  __int64 v11; // rdx\n  __int64 v12; // rdx\n  __int64 v13; // rdx\n  __int64 v14; // rdx\n  __int64 v15; // rcx\n  char v17[4]; // [rsp+0h] [rbp-38h]\n  int v18; // [rsp+4h] [rbp-34h]\n\n  v18 = -1;\n  *(_DWORD *)v17 = -1;\n  if ( (signed int)__isoc99_sscanf(a1, &off_49FDF1, a3) < 0 || (unsigned int)sub_45C270(a1, &v18, v17) )\n  {\n    v3 = 0;\n    v4 = 1LL;\n    LOBYTE(v5) = sub_418580(0, (const char *)1);\n    sub_45C030(v5, 0);\n    v6 = dword_565C68;\n    if ( dword_565C68 > 0 )\n    {\n      v7 = 21;\n      v8 = 0LL;\n      do\n      {\n        if ( v6 <= 0 )\n        {\n          v15 = v6;\n        }\n        else\n        {\n          v9 = &dword_8E9470[95 * v7];\n          v10 = 0LL;\n          do\n          {\n            if ( v18 == 0xFFFFFFFFLL || v8 == v18 && v10 == *(unsigned int *)v17 )\n            {\n              sub_45BF70(v8, v10);\n              sub_45BF90(\":\\n\", (unsigned int)v10, *(_QWORD *)v17);\n              sub_45BC50(\"color           %C\\n\", (unsigned int)*v9, *(_QWORD *)v17);\n              sub_45BF90(\"size            %d\\n\", (unsigned int)v9[1], *(_QWORD *)v17);\n              sub_45BF90(\"effective_size  %.2f\\n\", *((float *)v9 + 2), *(_QWORD *)v17);\n              v11 = v9[3];\n              sub_45BC50(\n                \"origin          %m\\n\",\n                ((signed int)((unsigned __int64)(1717986919 * v11) >> 32) >> 3)\n              + ((unsigned __int64)(1717986919 * v11) >> 63)\n              - 1,\n                (unsigned int)v11\n              - 20\n              * (((signed int)((unsigned __int64)(1717986919 * v11) >> 32) >> 3)\n               + ((unsigned __int64)(1717986919 * v11) >> 63))\n              - 1,\n                *(_QWORD *)v17);\n              sub_45BF90(\"liberties       %d\\n\", (unsigned int)v9[4], *(_QWORD *)v17);\n              sub_45BF90(\"liberties2      %d\\n\", (unsigned int)v9[5], *(_QWORD *)v17);\n              sub_45BF90(\"liberties3      %d\\n\", (unsigned int)v9[6], *(_QWORD *)v17);\n              sub_45BF90(\"liberties4      %d\\n\", (unsigned int)v9[7], *(_QWORD *)v17);\n              v12 = v9[15];\n              sub_45BC50(\n                \"attack_point    %m\\n\",\n                ((signed int)((unsigned __int64)(1717986919 * v12) >> 32) >> 3)\n              + ((unsigned __int64)(1717986919 * v12) >> 63)\n              - 1,\n                (unsigned int)v12\n              - 20\n              * (((signed int)((unsigned __int64)(1717986919 * v12) >> 32) >> 3)\n               + ((unsigned __int64)(1717986919 * v12) >> 63))\n              - 1,\n                *(_QWORD *)v17);\n              sub_45BF90(\"attack_code     %d\\n\", (unsigned int)v9[25], *(_QWORD *)v17);\n              v13 = v9[8];\n              sub_45BC50(\n                \"lunch           %m\\n\",\n                ((signed int)((unsigned __int64)(1717986919 * v13) >> 32) >> 3)\n              + ((unsigned __int64)(1717986919 * v13) >> 63)\n              - 1,\n                (unsigned int)v13\n              - 20\n              * (((signed int)((unsigned __int64)(1717986919 * v13) >> 32) >> 3)\n               + ((unsigned __int64)(1717986919 * v13) >> 63))\n              - 1,\n                *(_QWORD *)v17);\n              v14 = v9[35];\n              sub_45BC50(\n                \"defense_point   %m\\n\",\n                ((signed int)((unsigned __int64)(1717986919 * v14) >> 32) >> 3)\n              + ((unsigned __int64)(1717986919 * v14) >> 63)\n              - 1,\n                (unsigned int)v14\n              - 20\n              * (((signed int)((unsigned __int64)(1717986919 * v14) >> 32) >> 3)\n               + ((unsigned __int64)(1717986919 * v14) >> 63))\n              - 1,\n                *(_QWORD *)v17);\n              sub_45BF90(\"defense_code    %d\\n\", (unsigned int)v9[45], *(_QWORD *)v17);\n              sub_45BF90(\"cutstone        %d\\n\", (unsigned int)v9[9], *(_QWORD *)v17);\n              sub_45BF90(\"cutstone2       %d\\n\", (unsigned int)v9[10], *(_QWORD *)v17);\n              sub_45BF90(\"genus           %d\\n\", (unsigned int)v9[11], *(_QWORD *)v17);\n              v4 = (unsigned int)v9[12];\n              sub_45BF90(\"inessential     %d\\n\", v4, *(_QWORD *)v17);\n              v6 = dword_565C68;\n            }\n            ++v10;\n            v15 = v6;\n            v9 += 95;\n          }\n          while ( v10 < v6 );\n        }\n        ++v8;\n        v7 += 20;\n      }\n      while ( v8 < v15 );\n    }\n    sub_45BF90(\"\\n\", v4, *(_QWORD *)v17);\n  }\n  else\n  {\n    v3 = sub_45BB40(\"invalid color or coordinate\", &v18, *(_QWORD *)v17);\n  }\n  return v3;\n}\n", 
            "funcStartAddr": "0x464370L", 
            "funcEndAddr": "0x464663L", 
            "funcName": "sub_464370"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_464670(__int64 a1, __int64 a2, __int64 a3)\n{\n  int *v3; // rsi\n  int v4; // eax\n  signed int v5; // er15\n  signed __int64 v6; // rdx\n  __int64 v7; // rbx\n  signed __int64 v8; // rbp\n  unsigned int v9; // er14\n  int v10; // eax\n  unsigned int v11; // er12\n  signed __int64 v12; // r15\n  signed __int64 v13; // rbx\n  unsigned int v14; // ebx\n  char *v15; // rdi\n  unsigned int v17; // [rsp+Ch] [rbp-4Ch]\n  unsigned int v18; // [rsp+10h] [rbp-48h]\n  int v19; // [rsp+14h] [rbp-44h]\n  __int64 v20; // [rsp+18h] [rbp-40h]\n  __int64 v21; // [rsp+20h] [rbp-38h]\n\n  v18 = -1;\n  v17 = -1;\n  v19 = 0;\n  v3 = (int *)&off_49FDF1;\n  if ( (signed int)__isoc99_sscanf(a1, &off_49FDF1, a3) >= 0 )\n  {\n    v3 = (int *)&v18;\n    if ( !(unsigned int)sub_45C270(a1, &v18, &v17) )\n    {\n      v3 = &v19;\n      if ( !(unsigned int)sub_45C170(a1, &v19) )\n      {\n        v15 = \"invalid coordinate\";\n        return (unsigned int)sub_45BB40(v15, v3);\n      }\n    }\n  }\n  if ( !byte_98A1C5[20 * v18 + v17] )\n  {\n    v15 = \"worm_stones called on an empty vertex\";\n    return (unsigned int)sub_45BB40(v15, v3);\n  }\n  sub_45C030(5LL * (signed int)v18, 0);\n  v4 = dword_565C68;\n  if ( dword_565C68 <= 0 )\n    goto LABEL_31;\n  v5 = 1;\n  v6 = 0LL;\n  do\n  {\n    if ( v4 <= 0 )\n      goto LABEL_29;\n    v20 = v6;\n    v7 = (20 * (_DWORD)v6 + 21) & 0xFFFFFFFD;\n    v8 = 0LL;\n    v21 = (20 * (_DWORD)v6 + 21) & 0xFFFFFFFD;\n    do\n    {\n      if ( byte_98A1B0[v7 + v8] && (!v19 || v19 == (unsigned __int8)byte_98A1B0[v7 + v8]) )\n      {\n        v9 = v7 + v8;\n        v5 = 0;\n        if ( v7 + v8 == (unsigned int)sub_40AD00((signed int)v7 + (signed int)v8) )\n        {\n          v10 = dword_565C68;\n          if ( v18 < dword_565C68 && v17 < dword_565C68 )\n          {\n            v3 = (int *)(v17 + 20 * v18 + 21);\n            if ( !(unsigned int)sub_40B5B0(v9, (signed int)v3) )\n              goto LABEL_27;\n            v10 = dword_565C68;\n          }\n          if ( v10 > 0 )\n          {\n            v11 = 21;\n            v12 = 0LL;\n            do\n            {\n              if ( v10 > 0 )\n              {\n                v13 = 0LL;\n                do\n                {\n                  if ( byte_98A1B0[v11 + v13] )\n                  {\n                    v3 = (int *)v9;\n                    if ( (unsigned int)sub_40B5B0(v11 + (unsigned int)v13, v9) )\n                    {\n                      v3 = (int *)(unsigned int)v12;\n                      sub_45BC50(\"%m \", (unsigned int)v12, (unsigned int)v13);\n                    }\n                  }\n                  ++v13;\n                  v10 = dword_565C68;\n                }\n                while ( v13 < dword_565C68 );\n              }\n              ++v12;\n              v11 += 20;\n            }\n            while ( v12 < v10 );\n          }\n          v5 = 0;\n          sub_45BF90(\"\\n\", v3);\n          v7 = v21;\n        }\n      }\nLABEL_27:\n      ++v8;\n      v4 = dword_565C68;\n    }\n    while ( v8 < dword_565C68 );\n    v6 = v20;\nLABEL_29:\n    ++v6;\n  }\n  while ( v6 < v4 );\n  if ( v5 )\nLABEL_31:\n    sub_45BF90(\"\\n\", v3);\n  v14 = 0;\n  sub_45BF90(\"\\n\", v3);\n  return v14;\n}\n", 
            "funcStartAddr": "0x464670L", 
            "funcEndAddr": "0x4648a0L", 
            "funcName": "sub_464670"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4648A0(int a1)\n{\n  __int64 result; // rax\n  __int64 v2; // r9\n  __int64 v3; // rbp\n  __int64 v4; // rdi\n  _DWORD *v5; // rbx\n  __int64 v6; // rsi\n  int v7; // ecx\n  int v8; // ecx\n  int v9; // er10\n  __int64 v10; // rax\n  int v11; // ebx\n  signed int v12; // er13\n  unsigned int v13; // er14\n  unsigned int v14; // ebp\n  int v15; // xmm0_4\n  __int64 v16; // rbp\n  signed int v17; // eax\n  int v18; // ecx\n  int v19; // eax\n  __int64 v20; // rcx\n  signed __int64 v21; // rdx\n  __int64 v22; // r8\n  int *v23; // rdx\n  __int64 v24; // rdi\n  char *v25; // rbp\n  __int64 v26; // r9\n  __int64 v27; // rbx\n  int v28; // esi\n  int v29; // esi\n  int v30; // [rsp+0h] [rbp-1900h]\n  int v31; // [rsp+4h] [rbp-18FCh]\n  char v32[1456]; // [rsp+8h] [rbp-18F8h]\n  int v33[1234]; // [rsp+5B8h] [rbp-1348h]\n\n  result = 1LL;\n  if ( dword_566390 != a1 )\n  {\n    dword_566390 = a1;\n    result = 0LL;\n  }\n  v30 = 0;\n  v2 = dword_565C68;\n  if ( dword_565C68 > 0LL )\n  {\n    LODWORD(v3) = 21;\n    v4 = 0LL;\n    v5 = &unk_8A8714;\n    do\n    {\n      v3 = (unsigned int)v3;\n      v6 = 0LL;\n      if ( (_DWORD)v2 != 1 )\n      {\n        do\n        {\n          v7 = (unsigned __int8)byte_98A1B0[v3 + v6];\n          if ( v5[v6 - 1] != v7 )\n          {\n            v5[v6 - 1] = v7;\n            result = 0LL;\n          }\n          v8 = (unsigned __int8)byte_98A1B1[v3 + v6];\n          if ( v5[v6] != v8 )\n          {\n            v5[v6] = v8;\n            result = 0LL;\n          }\n          v6 += 2LL;\n        }\n        while ( (unsigned int)v2 - (unsigned __int64)(v2 & 1) != v6 );\n      }\n      if ( v2 & 1 )\n      {\n        v9 = (unsigned __int8)byte_98A1B0[((20 * (_DWORD)v4 + 21) & 0xFFFFFFFD) + v6];\n        if ( dword_8A8710[19 * v4 + v6] != v9 )\n        {\n          dword_8A8710[19 * v4 + v6] = v9;\n          result = 0LL;\n        }\n      }\n      ++v4;\n      LODWORD(v3) = v3 + 20;\n      v5 += 19;\n    }\n    while ( v4 < v2 );\n    v31 = v2;\n    v30 = v4;\n  }\n  if ( !(_DWORD)result )\n  {\n    dword_88C2FC = 1;\n    sub_405D30(v33);\n    v10 = sub_407B00();\n    if ( (_DWORD)v10 )\n    {\n      v10 = sub_407B00();\n      v11 = 3 - v10;\n    }\n    else\n    {\n      v11 = 2;\n    }\n    v12 = 0;\n    v13 = 0;\n    do\n    {\n      v14 = sub_419910(v10, v11, &v30, &v31);\n      sub_4074F0(v31 + 20 * v30 + 21, v11);\n      ++v12;\n      LODWORD(v10) = 0;\n      if ( (v14 & 0x80000000) == 0 )\n        v12 = 0;\n      v11 = 3 - v11;\n      if ( v12 > 1 )\n        break;\n      v13 += (v14 >> 31) ^ 1;\n      v10 = (unsigned int)(dword_565C68 * dword_565C68);\n    }\n    while ( v13 < (unsigned int)v10 );\n    v15 = dword_98A788;\n    LODWORD(v16) = 0;\n    sub_405510(v10, 0LL, dword_98A788);\n    dword_8A8704 = v15;\n    v30 = 0;\n    v17 = dword_565C68;\n    if ( dword_565C68 > 0 )\n    {\n      do\n      {\n        v31 = 0;\n        if ( v17 > 0 )\n        {\n          v18 = 0;\n          do\n          {\n            v19 = sub_405CB0(v11, v18 + 20 * (signed int)v16 + 21);\n            v16 = v30;\n            v20 = v31;\n            v21 = 19LL * v30;\n            dword_8A8CC0[v20 + v21] = v19;\n            *(_DWORD *)&v32[4 * v20 + v21 * 4] = (unsigned __int8)byte_98A1C5[20 * v16 + v20];\n            v18 = v20 + 1;\n            v31 = v18;\n            v17 = dword_565C68;\n          }\n          while ( v18 < dword_565C68 );\n        }\n        LODWORD(v16) = v16 + 1;\n        v30 = v16;\n      }\n      while ( (signed int)v16 < v17 );\n    }\n    result = sub_405FF0(v33);\n    dword_88C2FC = 0;\n    v30 = 0;\n    v22 = dword_565C68;\n    if ( dword_565C68 > 0LL )\n    {\n      v23 = dword_8A8CC0;\n      LODWORD(v24) = 21;\n      v25 = v32;\n      v26 = 0LL;\n      do\n      {\n        v24 = (unsigned int)v24;\n        v27 = 0LL;\n        do\n        {\n          v29 = (unsigned __int8)byte_98A1B0[v24 + v27];\n          result = *(unsigned int *)&v25[4 * v27];\n          if ( (_DWORD)result != v29 )\n          {\n            switch ( (_BYTE)v29 )\n            {\n              case 2:\n                result = (unsigned int)v23[v27];\n                if ( (_DWORD)result == 13 )\n                  goto LABEL_46;\n                if ( (_DWORD)result != 15 )\n                {\n                  v23[v27] = 0;\n                  break;\n                }\nLABEL_47:\n                v23[v27] = 7;\n                break;\n              case 1:\n                result = (unsigned int)v23[v27];\n                if ( (_DWORD)result != 15 )\n                {\n                  if ( (_DWORD)result != 14 )\n                  {\n                    v23[v27] = 0;\n                    break;\n                  }\nLABEL_46:\n                  v23[v27] = 1;\n                  break;\n                }\n                goto LABEL_47;\n              case 0:\n                v28 = v23[v27];\n                if ( v28 )\n                {\n                  if ( v28 == 7 || v28 == 1 )\n                    v23[v27] = 15;\n                }\n                else if ( (_DWORD)result == 2 )\n                {\n                  v23[v27] = 14;\n                }\n                else\n                {\n                  v23[v27] = 13;\n                }\n                break;\n            }\n          }\n          ++v27;\n        }\n        while ( (unsigned int)v22 != v27 );\n        ++v26;\n        LODWORD(v24) = v24 + 20;\n        v23 += 19;\n        v25 += 76;\n      }\n      while ( v26 < v22 );\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4648a0L", 
            "funcEndAddr": "0x464c21L", 
            "funcName": "sub_4648A0"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_464C30(__int64 a1, __int64 a2)\n{\n  __int64 v2; // r13\n  signed int v3; // ebp\n  int v4; // er14\n  int v5; // er12\n  const char *v6; // rdi\n  const char *v7; // rsi\n  int v8; // er15\n  int v9; // ebp\n  unsigned int *v10; // r13\n  int v11; // ebx\n  int v12; // ebx\n  __int64 v13; // rsi\n  bool v14; // zf\n  bool v15; // sf\n  unsigned __int8 v16; // of\n  unsigned int v17; // ebx\n  unsigned int v18; // er12\n  unsigned int v19; // er15\n  unsigned int v20; // ebp\n  signed int v21; // er14\n  int v22; // eax\n  __int64 v23; // rcx\n  int v24; // ebx\n  int v25; // er12\n  __int64 v26; // rsi\n  __int64 v27; // rax\n  int v28; // eax\n  int v29; // er12\n  signed int v30; // ebx\n  __int64 v31; // rax\n  unsigned int v33; // [rsp+8h] [rbp-70h]\n  unsigned int v34; // [rsp+Ch] [rbp-6Ch]\n  double v35; // [rsp+10h] [rbp-68h]\n  unsigned int v36; // [rsp+18h] [rbp-60h]\n  unsigned int v37; // [rsp+1Ch] [rbp-5Ch]\n  unsigned int v38; // [rsp+20h] [rbp-58h]\n  int v39; // [rsp+24h] [rbp-54h]\n  __int64 **v40; // [rsp+28h] [rbp-50h]\n  _QWORD *v41; // [rsp+30h] [rbp-48h]\n  double v42; // [rsp+38h] [rbp-40h]\n  __int64 v43; // [rsp+40h] [rbp-38h]\n\n  LODWORD(v35) = a2;\n  v2 = a1;\n  v3 = sub_41E5D0();\n  v4 = sub_493F30(a1, a2);\n  sub_41E000(5.5);\n  sub_4016F0(&v40);\n  v5 = sub_41E5D0();\n  sub_41E560();\n  sub_401880((__int64 *)&v40, v5);\n  v6 = (const char *)v40;\n  v7 = (const char *)1;\n  sub_402BA0(v40, 1, (unsigned int)dword_88C240, (unsigned int)dword_565C78, dword_88C300);\n  if ( v3 <= 6 )\n  {\n    v10 = (unsigned int *)(v2 + 4);\n  }\n  else\n  {\n    v8 = 2 * v4 - 5 * (((unsigned __int64)(3435973838LL * v4) >> 63) + (3435973838LL * v4 >> 33)) + 6;\n    v9 = v3 - 4;\n    v10 = (unsigned int *)(v2 + 4);\n    do\n    {\n      do\n      {\n        v11 = (signed int)sub_493F30(v6, v7) % 4;\n        v33 = v11 + (signed int)sub_493F30(v6, v7) % v9;\n        v12 = (signed int)sub_493F30(v6, v7) % 4;\n        v34 = v12 + (signed int)sub_493F30(v6, v7) % v9;\n        v6 = (const char *)v33;\n        v7 = (const char *)v34;\n      }\n      while ( !(unsigned int)sub_41E3C0(v33, v34, *v10) );\n      sub_41E040(v33, v34, *v10);\n      v13 = *v10;\n      sub_401820((__int64 *)&v40);\n      v7 = \"random move\";\n      v6 = (const char *)&v40;\n      sub_4018D0((__int64 *)&v40);\n      *v10 = 3 - *v10;\n      v16 = __OFSUB__(v8, 1);\n      v14 = v8 == 1;\n      v15 = v8-- - 1 < 0;\n    }\n    while ( !((unsigned __int8)(v15 ^ v16) | v14) );\n  }\n  v17 = 1;\n  sub_493870(v6, v7);\n  *(_QWORD *)&v42 = 1085276160LL;\n  v18 = 0;\n  v19 = 0;\n  v36 = 0;\n  v37 = 0;\n  v38 = 0;\n  v20 = 0;\n  v21 = 0;\n  v22 = LODWORD(v35);\n  do\n  {\n    v23 = v17;\n    v24 = v22;\n    if ( v22 <= 0 )\n      break;\n    v43 = v23;\n    LODWORD(v35) = v20;\n    v39 = v18;\n    sub_4310C0();\n    v25 = sub_41E420(&v33, &v34, *v10);\n    sub_41E040(v33, v34, *v10);\n    sub_448BB0(v41, v25);\n    v26 = *v10;\n    v27 = sub_401820((__int64 *)&v40);\n    sub_448D20(v27, (__int64 *)&v40);\n    v28 = 3 - *v10;\n    *v10 = v28;\n    if ( v25 < 0 )\n    {\n      ++v21;\n      v7 = \"White\";\n      if ( v28 == 2 )\n        v7 = \"Black\";\n      v6 = \"%s(%d): Pass\\n\";\n      printf(\"%s(%d): Pass\\n\", v7, (unsigned int)dword_98A7C0);\n    }\n    else\n    {\n      v7 = \"White\";\n      if ( v28 == 2 )\n        v7 = \"Black\";\n      v21 = 0;\n      v6 = \"%s(%d): %m\\n\";\n      sub_433F90(\"%s(%d): %m\\n\", v7, (unsigned int)dword_98A7C0, v33, v34);\n    }\n    v29 = v39;\n    v19 += xmmword_98A720;\n    v36 += DWORD1(xmmword_98A720);\n    v37 += DWORD2(xmmword_98A720);\n    v38 += HIDWORD(xmmword_98A720);\n    v20 = HIDWORD(qword_98A730) + LODWORD(v35);\n    v18 = (unsigned __int64)sub_4310D0() + v29;\n    v22 = v24 - 1;\n    LODWORD(v23) = v43;\n    v17 = v43 + 1;\n  }\n  while ( v21 < 2 );\n  v30 = v23;\n  sub_493870(v6, v7);\n  *(_QWORD *)&v35 = 1085276160LL;\n  sub_41E530();\n  sub_41E540((__int64)&dword_88C258, (__int64)&dword_88C25C);\n  dword_88C254 = 1085276160;\n  sub_402AB0(v40, 1, 5.5);\n  sub_448D20(v31, (__int64 *)&v40);\n  v35 = v35 - v42;\n  printf(\"%10d moves played in %0.3f seconds\\n\", (unsigned int)v30);\n  if ( v30 )\n    printf(\"%10.3f seconds/move\\n\", v35 / (double)v30);\n  printf(\"%10d nodes\\n\", v19);\n  printf(\"%10d positions entered\\n\", v36);\n  printf(\"%10d position hits\\n\", v37);\n  printf(\"%10d read results entered\\n\", v38);\n  printf(\"%10d hash collisions\\n\", v20);\n  return printf(\"%10d owl nodes\\n\", v18);\n}\n", 
            "funcStartAddr": "0x464c30L", 
            "funcEndAddr": "0x46501bL", 
            "funcName": "sub_464C30"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_465020(__int64 a1)\n{\n  unsigned int v1; // ebp\n  int v2; // er14\n  _BOOL4 v3; // eax\n  const char *v4; // rsi\n  __int64 v5; // rax\n  unsigned int v7; // [rsp+8h] [rbp-30h]\n  unsigned int v8; // [rsp+Ch] [rbp-2Ch]\n  __int128 v9; // [rsp+10h] [rbp-28h]\n\n  v1 = *(_DWORD *)(a1 + 4);\n  v9 = *(_OWORD *)(a1 + 8);\n  v2 = sub_41E420(&v8, &v7, v1);\n  v3 = sub_407B20(v7 + 20 * v8 + 21);\n  v4 = \"black (X)\";\n  if ( v1 == 1 )\n    v4 = \"white (O)\";\n  if ( v3 )\n    sub_433F90(\"%s move: PASS!\\n\", v4);\n  else\n    sub_433F90(\"%s move %m\\n\", v4, v8, v7);\n  sub_41E040(v8, v7, v1);\n  sub_401820((__int64 *)&v9);\n  sub_4018D0((__int64 *)&v9);\n  sub_448BB0(*((_QWORD **)&v9 + 1), v2);\n  return sub_448D20(v5, (__int64 *)&v9);\n}\n", 
            "funcStartAddr": "0x465020L", 
            "funcEndAddr": "0x4650e6L", 
            "funcName": "sub_465020"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_4650F0(__int64 a1, __int64 a2, char *a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)\n{\n  char *v10; // r15\n  double v11; // xmm0_8\n  unsigned int v12; // ebx\n  __int64 v13; // rax\n  unsigned int v14; // ebp\n  signed int v15; // er12\n  int v16; // ebp\n  const char *v17; // rdx\n  const char *v18; // rdx\n  __int64 v19; // rax\n  __int64 ***v20; // r12\n  signed int v21; // er14\n  FILE *v22; // rcx\n  const char *v23; // rdi\n  __int64 v24; // rax\n  int result; // eax\n  double v26; // xmm4_8\n  double v27; // xmm5_8\n  float v28; // xmm0_4\n  char *v29; // rdx\n  char v30; // [rsp+Bh] [rbp-16Dh]\n  unsigned int v31; // [rsp+Ch] [rbp-16Ch]\n  unsigned int v32; // [rsp+10h] [rbp-168h]\n  float v33; // [rsp+14h] [rbp-164h]\n  char *v34; // [rsp+18h] [rbp-160h]\n  __int64 **v35; // [rsp+20h] [rbp-158h]\n  _QWORD *v36; // [rsp+28h] [rbp-150h]\n  __int64 ***v37; // [rsp+30h] [rbp-148h]\n  char *s1; // [rsp+38h] [rbp-140h]\n  char s[4]; // [rsp+40h] [rbp-138h]\n\n  v10 = a3;\n  v34 = 0LL;\n  sub_4016F0(&v35);\n  *(_QWORD *)&v11 = (unsigned int)dword_98A788;\n  sub_401880((__int64 *)&v35, dword_565C68);\n  sub_448DB0((__int64)&v35);\n  v12 = *(_DWORD *)(a2 + 4);\n  dword_88C2FC = 1;\n  sub_418500();\n  LODWORD(v13) = strcmp(v10, \"finish\");\n  if ( (_DWORD)v13 )\n  {\n    LODWORD(v13) = strcmp(v10, \"aftermath\");\n    if ( (_DWORD)v13 )\n    {\n      v14 = v12;\n      goto LABEL_36;\n    }\n  }\n  v37 = (__int64 ***)a1;\n  s1 = v10;\n  v15 = 0;\n  do\n  {\n    v16 = sub_419910(v13, v12, &v32, &v31);\n    if ( v16 < 0 )\n    {\n      ++v15;\n      v18 = \"black (X)\";\n      if ( v12 == 1 )\n        v18 = \"white (O)\";\n      sub_433F90(\"%d %s move : PASS!\\n\", (unsigned int)dword_98A7C0, v18, v11);\n    }\n    else\n    {\n      v17 = \"black (X)\";\n      if ( v12 == 1 )\n        v17 = \"white (O)\";\n      v15 = 0;\n      sub_433F90(\"%d %s move %m\\n\", (unsigned int)dword_98A7C0, v17, v32, v31, v11);\n    }\n    sub_4074F0(v31 + 20 * v32 + 21, v12);\n    sub_448BB0(v36, v16);\n    v19 = sub_401820((__int64 *)&v35);\n    v13 = sub_448D20(v19, (__int64 *)&v35);\n    v14 = 3 - v12;\n    if ( v15 > 1 )\n      break;\n    v12 = 3 - v12;\n  }\n  while ( dword_98A7C0 < 10001 );\n  if ( v15 < 2 )\n  {\n    v10 = s1;\n    goto LABEL_36;\n  }\n  v10 = s1;\n  if ( !strcmp(s1, \"aftermath\") )\n  {\n    LODWORD(v11) = dword_98A788;\n    sub_405510(0, (__int64)&v35, dword_98A788);\n  }\n  else\n  {\n    sub_41E540((__int64)&dword_88C258, (__int64)&dword_88C25C);\n  }\n  v20 = v37;\n  dword_88C254 = LODWORD(v11);\n  a5 = 0.0;\n  if ( *(float *)&v11 >= 0.0 )\n  {\n    if ( *(float *)&v11 <= 0.0 )\n    {\n      strcpy(s, \"Jigo\\n\");\n      v21 = 48;\n    }\n    else\n    {\n      sprintf(s, \"White wins by %1.1f points\\n\", *(float *)&v11);\n      v21 = 87;\n    }\n  }\n  else\n  {\n    sprintf(s, \"Black wins by %1.1f points\\n\", COERCE_FLOAT(LODWORD(v11) ^ xmmword_4AE070));\n    v21 = 66;\n  }\n  fputs(s, stdout);\n  sub_4018D0((__int64 *)&v35);\n  if ( (unsigned int)sub_401EB0(*v20, \"RE\", &v34) )\n  {\n    if ( (unsigned int)__isoc99_sscanf(v34, \"%1c%f\", &v30) == 2 )\n    {\n      fprintf(stdout, \"Result from file: %1.1f\\n\", v33);\n      fwrite(\"GNU Go result and result from file are \", 0x27uLL, 1uLL, stdout);\n      *(_QWORD *)&a5 = dword_88C254 & (unsigned int)xmmword_4AE170;\n      if ( v33 == *(float *)&a5 && v21 == v30 )\n      {\n        v22 = stdout;\n        v23 = \"identical\\n\";\nLABEL_34:\n        fwrite(v23, 0xAuLL, 1uLL, v22);\n        goto LABEL_35;\n      }\n      v22 = stdout;\n      goto LABEL_33;\n    }\n    if ( v34[2] == 82 )\n    {\n      fwrite(\"Result from file: Resign\\n\", 0x19uLL, 1uLL, stdout);\n      fwrite(\"GNU Go result and result from file are \", 0x27uLL, 1uLL, stdout);\n      v22 = stdout;\n      if ( v21 == *v34 )\n      {\n        v23 = \"identical\\n\";\n        goto LABEL_34;\n      }\nLABEL_33:\n      v23 = \"different\\n\";\n      goto LABEL_34;\n    }\n  }\nLABEL_35:\n  *(_QWORD *)&v11 = (unsigned int)dword_88C254;\n  sub_402AB0(v35, 1, *(float *)&dword_88C254);\n  sub_448D20(v24, (__int64 *)&v35);\nLABEL_36:\n  dword_88C2FC = 0;\n  result = strcmp(v10, \"aftermath\");\n  if ( result )\n  {\n    sub_418580(v14, (const char *)0x63);\n    LODWORD(v28) = sub_445420(0LL, 0LL, v11, a5, a6, a7, v26, v27, a10);\n    dword_88C254 = LODWORD(v28);\n    v29 = off_494435 + 2;\n    if ( v28 < 0.0 )\n      v29 = off_494435;\n    if ( v28 < 0.0 )\n      LODWORD(v28) ^= xmmword_4AE070;\n    result = fprintf(stdout, \"\\n%s seems to win by %1.1f points\\n\", v29, v28);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4650f0L", 
            "funcEndAddr": "0x465508L", 
            "funcName": "sub_4650F0"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_465510(__int64 a1, int a2)\n{\n  __int64 v2; // r14\n  int result; // eax\n  __int64 v4; // rax\n  int v5; // er12\n  __int64 *v6; // rbx\n  __int64 v7; // r13\n  int v8; // ebp\n  int v9; // eax\n  unsigned int v10; // edx\n  unsigned int v11; // er15\n  unsigned int v12; // er12\n  unsigned int v13; // er13\n  __int64 v14; // rsi\n  float v15; // xmm0_4\n  unsigned int v16; // ecx\n  signed __int64 v17; // rbx\n  double v18; // xmm0_8\n  signed __int64 v19; // rbx\n  double v20; // xmm0_8\n  __int128 v21; // xmm0\n  __int64 v22; // rax\n  unsigned int v23; // [rsp+0h] [rbp-F8h]\n  unsigned int v24; // [rsp+4h] [rbp-F4h]\n  __int64 v25; // [rsp+8h] [rbp-F0h]\n  int v26; // [rsp+14h] [rbp-E4h]\n  int v27; // [rsp+18h] [rbp-E0h]\n  int v28; // [rsp+1Ch] [rbp-DCh]\n  __int128 v29; // [rsp+20h] [rbp-D8h]\n  double v30; // [rsp+38h] [rbp-C0h]\n  char v31; // [rsp+40h] [rbp-B8h]\n\n  v26 = a2;\n  v25 = 0LL;\n  v29 = *(_OWORD *)(a1 + 8);\n  v2 = v29;\n  if ( !(unsigned int)sub_401E10((__int64 **)v29, \"SZ\", &v28) )\n  {\n    fwrite(\"Couldn't find the size (SZ) attribute!\\n\", 0x27uLL, 1uLL, stderr);\n    exit(1);\n  }\n  sub_41DFC0(v28);\n  result = sub_401E60((__int64 **)v2, \"KM\", (float *)&v27);\n  if ( result )\n  {\n    result = v27;\n    dword_98A788 = v27;\n  }\n  if ( !dword_88C214 )\n  {\n    if ( (unsigned int)sub_401EB0((__int64 **)v2, \"RU\", &v25) )\n      printf(\"Ruleset:      %s\\n\", v25);\n    if ( (unsigned int)sub_401EB0((__int64 **)v2, \"GN\", &v25) )\n      printf(\"Game Name:    %s\\n\", v25);\n    if ( (unsigned int)sub_401EB0((__int64 **)v2, \"DT\", &v25) )\n      printf(\"Game Date:    %s\\n\", v25);\n    if ( (unsigned int)sub_401EB0((__int64 **)v2, \"GC\", &v25) )\n      printf(\"Game Comment: %s\\n\", v25);\n    if ( (unsigned int)sub_401EB0((__int64 **)v2, \"US\", &v25) )\n      printf(\"Game User:    %s\\n\", v25);\n    if ( (unsigned int)sub_401EB0((__int64 **)v2, \"PB\", &v25) )\n      printf(\"Black Player: %s\\n\", v25);\n    if ( (unsigned int)sub_401EB0((__int64 **)v2, \"PW\", &v25) )\n      printf(\"White Player: %s\\n\", v25);\n    result = sub_41E670((unsigned int *)a1);\n  }\n  if ( !v2 )\n    return result;\n  do\n  {\n    v4 = sub_41E5D0();\n    v5 = v4;\n    v6 = *(__int64 **)v2;\n    if ( !*(_QWORD *)v2 )\n      goto LABEL_54;\n    v7 = 0LL;\n    do\n    {\n      v4 = (unsigned int)*((signed __int16 *)v6 + 4);\n      if ( (signed int)v4 > 16960 )\n      {\n        if ( (_DWORD)v4 == 22337 )\n        {\n          v8 = sub_4012B0((__int64)v6, v5);\n          v9 = sub_401310((__int64)v6, v5);\n          v10 = 1;\n        }\n        else\n        {\n          if ( (_DWORD)v4 != 16961 )\n            goto LABEL_32;\n          v8 = sub_4012B0((__int64)v6, v5);\n          v9 = sub_401310((__int64)v6, v5);\n          v10 = 2;\n        }\n        LOBYTE(v4) = sub_41E010(v8, v9, v10);\n      }\n      else if ( (_DWORD)v4 == 8258 || (_DWORD)v4 == 8279 )\n      {\n        v7 = (__int64)v6;\n      }\nLABEL_32:\n      v6 = (__int64 *)*v6;\n    }\n    while ( v6 );\n    if ( v7 )\n    {\n      v11 = sub_4012B0(v7, v5);\n      v12 = sub_401310(v7, v5);\n      v13 = 2 - (*(_WORD *)(v7 + 8) == 8279);\n      if ( v26 == 3 || v13 == v26 )\n      {\n        sub_41E420(&v24, &v23, v13);\n        if ( v24 == v11 && v23 == v12 && dword_88C214 )\n          goto LABEL_60;\n        sub_434040(\"Move %d (%C): \", (unsigned int)(dword_98A7C0 + 1), v13);\n        sub_434040(\"GNU Go plays %m \", v24, v23);\n        v14 = v23;\n        if ( !(unsigned int)sub_41E030(v24, v23) )\n          printf(\"(%.2f) \", v14, *(float *)&dword_988EE0[19 * v24 + v23]);\n        sub_434040(\"- Game move %m \", v11, v12);\n        if ( !(unsigned int)sub_41E030(v11, v12) )\n        {\n          v15 = *(float *)&dword_988EE0[19 * v11 + v12];\n          if ( v15 > 0.0 )\n            printf(\"(%.2f) \", v12, v15);\n        }\n        putchar(10);\n        v16 = v24;\n        if ( v24 == v11 && (v16 = v11, v23 == v12) )\n        {\nLABEL_60:\n          v17 = sub_4341C0(v12 + 20 * v11 + 21);\n          if ( !(unsigned int)sub_41E030(v24, v23) )\n            v18 = *(float *)&dword_988EE0[19 * v24 + v23];\n          sub_4937C0(&v31, 127LL, \"GNU Go plays the same move %s (%.2f)\", v17);\n        }\n        else\n        {\n          v19 = sub_4341C0(v23 + 20 * v16 + 21);\n          v20 = 0.0;\n          if ( !(unsigned int)sub_41E030(v24, v23) )\n            v20 = *(float *)&dword_988EE0[19 * v24 + v23];\n          v30 = v20;\n          sub_4341C0(v12 + 20 * v11 + 21);\n          sub_41E030(v11, v12);\n          v21 = (unsigned int)dword_988EE0[19 * v11 + v12];\n          v22 = sub_4937C0(&v31, 127LL, \"GNU Go plays %s (%.2f) - Game move %s (%.2f)\", v19);\n          sub_402920(v22, v23, (_QWORD *)v2);\n        }\n        sub_402640((_QWORD *)v2, &v31);\n        sub_448BB0((_QWORD *)v2, 0);\n      }\n      v4 = sub_41E040(v11, v12, v13);\n    }\nLABEL_54:\n    result = sub_448D20(v4, (__int64 *)&v29);\n    v2 = *(_QWORD *)(v2 + 16);\n  }\n  while ( v2 );\n  return result;\n}\n", 
            "funcStartAddr": "0x465510L", 
            "funcEndAddr": "0x465a39L", 
            "funcName": "sub_465510"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_465A40()\n{\n  return sub_41EFF0((__int64)sub_465A60, 6LL, (__int64)&unk_57BBC0, 0LL, 0LL);\n}\n", 
            "funcStartAddr": "0x465a40L", 
            "funcEndAddr": "0x465a59L", 
            "funcName": "sub_465A40"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_465A60(__int64 a1, __int64 a2, __int64 a3)\n{\n  __int64 result; // rax\n\n  if ( *(_BYTE *)(a3 + 121) & 2 )\n    result = sub_465AD0();\n  return result;\n}\n", 
            "funcStartAddr": "0x465a60L", 
            "funcEndAddr": "0x465a69L", 
            "funcName": "sub_465A60"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_465A70()\n{\n  return sub_41EFF0((__int64)sub_465A90, 6LL, (__int64)&unk_57BBC0, 0LL, 0LL);\n}\n", 
            "funcStartAddr": "0x465a70L", 
            "funcEndAddr": "0x465a89L", 
            "funcName": "sub_465A70"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_465A90(__int64 a1, __int64 a2, __int64 a3)\n{\n  __int64 result; // rax\n\n  if ( !(*(_DWORD *)(a3 + 120) & 0x10200) )\n    result = sub_465AD0();\n  return result;\n}\n", 
            "funcStartAddr": "0x465a90L", 
            "funcEndAddr": "0x465a9cL", 
            "funcName": "sub_465A90"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_465AA0()\n{\n  return sub_41EFF0((__int64)sub_465AC0, 6LL, (__int64)&unk_57BBC0, 0LL, 0LL);\n}\n", 
            "funcStartAddr": "0x465aa0L", 
            "funcEndAddr": "0x465ab9L", 
            "funcName": "sub_465AA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_465AC0(__int64 a1, __int64 a2, __int64 a3)\n{\n  __int64 result; // rax\n\n  if ( *(_BYTE *)(a3 + 122) & 1 )\n    result = sub_465AD0();\n  return result;\n}\n", 
            "funcStartAddr": "0x465ac0L", 
            "funcEndAddr": "0x465ac9L", 
            "funcName": "sub_465AC0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_465AD0(unsigned int a1, unsigned int a2, __int64 *a3, unsigned int a4)\n{\n  __int64 *v4; // r14\n  __int64 result; // rax\n  unsigned int v6; // ebp\n  __int64 v7; // r13\n  __int64 v8; // r12\n  signed __int64 v9; // rbx\n  __int64 (__fastcall *v10)(__int64 *, _QWORD, _QWORD, _QWORD); // rax\n  int v11; // ecx\n  signed __int64 v12; // r15\n  signed __int64 v13; // rsi\n  __int64 v14; // rsi\n  char *v15; // rdi\n  __int64 v16; // rsi\n  __int64 v17; // rdx\n  __int64 v18; // rdx\n  __int64 v19; // rcx\n  __int64 v20; // rdx\n  int v21; // esi\n  int v22; // edi\n  signed __int64 v23; // rcx\n  signed __int64 v24; // rcx\n  signed __int64 v25; // r15\n  unsigned int v26; // ebx\n  __int64 v27; // rbp\n  unsigned int v28; // edx\n  unsigned int v29; // [rsp+8h] [rbp-40h]\n  unsigned int v30; // [rsp+Ch] [rbp-3Ch]\n  int v31; // [rsp+Ch] [rbp-3Ch]\n  unsigned int v32; // [rsp+10h] [rbp-38h]\n\n  v4 = a3;\n  result = *((unsigned int *)a3 + 30);\n  v6 = a4;\n  v29 = a2;\n  v30 = a1;\n  if ( ((dword_565C84 != 0) & (unsigned __int8)(*((_DWORD *)a3 + 30) >> 22) ^ (dword_565C84 != 0\n                                                                            || (signed int)result >= 0)) != 1 )\n    return result;\n  v7 = (signed int)a4;\n  v8 = (signed int)a1;\n  v9 = (signed int)a1 + (signed __int64)dword_94A490[8 * *((signed int *)a3 + 13) + a4];\n  v32 = a4;\n  if ( result & 0x200 )\n  {\n    result = sub_43F100(v9, 3 - a2);\n    if ( !(_DWORD)result )\n      return result;\n    LODWORD(result) = *((_DWORD *)v4 + 30);\n  }\n  if ( (result & 0x80u) == 0LL )\n    goto LABEL_6;\n  result = *((signed int *)v4 + 2);\n  if ( !dword_565C84 )\n  {\n    if ( (signed int)result <= 0 )\n      return result;\n    v16 = 0LL;\n    do\n    {\n      v17 = dword_94A490[8 * *(signed int *)(*v4 + 8 * v16) + v6];\n      if ( !byte_98A1B0[v17 + (signed int)a1] )\n      {\n        v18 = (signed int)a1 + v17;\n        if ( v29 == 2 )\n        {\n          if ( byte_96CACD[36 * v18] & 4 )\n            goto LABEL_37;\n        }\n        else if ( v29 == 1 && byte_97738D[36 * v18] & 4 )\n        {\nLABEL_37:\n          if ( dword_88C264 & 0x20 )\n            result = sub_433F90(\"Connection pattern of type %s inhibited at %1m\\n\", v4[2]);\n          return result;\n        }\n      }\n      ++v16;\n    }\n    while ( v16 < result );\n  }\n  if ( (signed int)result <= 0 )\n    return result;\n  v19 = *v4;\n  v20 = 0LL;\n  v21 = 0;\n  while ( 1 )\n  {\n    if ( *(_DWORD *)(v19 + 8 * v20 + 4) == 2 )\n    {\n      v22 = *((_DWORD *)&xmmword_954FB0\n            + 19 * ((signed int)v30 + (signed __int64)dword_94A490[8 * *(signed int *)(v19 + 8 * v20) + v6])\n            + 2);\n      if ( !v21 )\n      {\n        v21 = *((_DWORD *)&xmmword_954FB0\n              + 19 * ((signed int)v30 + (signed __int64)dword_94A490[8 * *(signed int *)(v19 + 8 * v20) + v6])\n              + 2);\n        goto LABEL_46;\n      }\n      if ( v22 != v21 )\n        break;\n    }\nLABEL_46:\n    if ( ++v20 >= result )\n      return result;\n  }\n  if ( !v22 )\n    return result;\nLABEL_6:\n  if ( !(v4[19] & 1)\n    || (result = ((__int64 (__fastcall *)(_QWORD, _QWORD, _QWORD, _QWORD))v4[21])(v6, (unsigned int)v9, v29, 0LL),\n        (_DWORD)result) )\n  {\n    v10 = (__int64 (__fastcall *)(__int64 *, _QWORD, _QWORD, _QWORD))v4[20];\n    if ( !v10 || (result = v10(v4, v6, (unsigned int)v9, v29), (_DWORD)result) )\n    {\n      v11 = *((_DWORD *)v4 + 30);\n      if ( v11 & 0x10200 )\n      {\n        if ( !(v11 & 0x10) )\n        {\n          result = *((unsigned int *)v4 + 2);\n          if ( (signed int)result > 0 )\n          {\n            v12 = 0LL;\n            do\n            {\n              if ( *(_DWORD *)(*v4 + 8 * v12 + 4) == 1 )\n              {\n                v13 = (signed int)v30 + (signed __int64)dword_94A490[8 * *(signed int *)(*v4 + 8 * v12) + v7];\n                if ( dword_8E94D4[95 * v13] == 5 )\n                {\n                  if ( !(_DWORD)v9 )\n                    return result;\n                  result = sub_44B0A0(v9, v13);\n                  v6 = v32;\n                  if ( !(_DWORD)result )\n                    return result;\n                  result = *((unsigned int *)v4 + 2);\n                }\n              }\n              ++v12;\n            }\n            while ( v12 < (signed int)result );\n            v11 = *((_DWORD *)v4 + 30);\n          }\n        }\n      }\n      if ( v11 & 0x200 )\n      {\n        if ( !(dword_88C264 & 0x20) )\n          goto LABEL_55;\n        sub_433F90(\"Cutting pattern %s+%d found at %1m\\n\", v4[2], v6, v30);\n        v6 = v32;\n        if ( !(dword_88C264 & 0x20) )\n          goto LABEL_55;\n        sub_433F90(\"cutting point %1m\\n\", (unsigned int)v9);\n      }\n      else\n      {\n        if ( (v11 & 0x80u) == 0 )\n        {\n          if ( v11 & 0x10000 && dword_88C264 & 0x20 )\n          {\n            v14 = v4[2];\n            v15 = \"Lunch invalidating pattern %s+%d found at %1m\\n\";\n            goto LABEL_53;\n          }\nLABEL_55:\n          if ( v4[19] & 2 )\n            ((void (__fastcall *)(_QWORD, _QWORD, _QWORD, signed __int64))v4[21])(v6, (unsigned int)v9, v29, 1LL);\n          result = *((unsigned int *)v4 + 30);\n          if ( !(result & 0x200) )\n          {\n            if ( (result & 0x80u) == 0LL )\n              return result;\n            goto LABEL_67;\n          }\n          if ( v29 == 1 )\n          {\n            v23 = 4 * v9;\n            byte_977390[9 * v23] = 1;\n            byte_97738D[9 * v23] |= 4u;\n            if ( dword_977370[9 * v9] == 4 )\n            {\n              byte_97738C[36 * v9] = 1;\n              if ( *((_DWORD *)v4 + 2) <= 0 )\n                return result;\nLABEL_68:\n              v25 = 1LL;\n              v26 = 0;\n              while ( 2 )\n              {\n                v27 = v8 + dword_94A490[8 * *(signed int *)(*v4 + 8 * v25 - 8) + v7];\n                if ( (result & 0x80u) == 0LL\n                  || (unsigned __int8)byte_98A1B0[v27] != v29\n                  || *(_DWORD *)(*v4 + 8 * v25 - 4) != 2\n                  || !(result & 0x10) && dword_8E94D4[95 * v27] )\n                {\nLABEL_81:\n                  if ( !(result & 0x200) )\n                    goto LABEL_91;\n                }\n                else\n                {\n                  v28 = *((_DWORD *)&xmmword_954FB0 + 19 * v27 + 2);\n                  if ( v26 )\n                  {\n                    if ( v28 != v26 )\n                    {\n                      v31 = *((_DWORD *)&xmmword_954FB0 + 19 * v27 + 2);\n                      if ( dword_88C268 || dword_88C264 & 0x20 )\n                        sub_433F90(\"Pattern %s joins %C dragons %1m, %1m\\n\", v4[2], v29, v26, v28);\n                      fflush(stdout);\n                      sub_415400(v31, v26);\n                      v26 = *((_DWORD *)&xmmword_954FB0 + 19 * v27 + 2);\n                      LODWORD(result) = *((_DWORD *)v4 + 30);\n                    }\n                    goto LABEL_81;\n                  }\n                  v26 = *((_DWORD *)&xmmword_954FB0 + 19 * v27 + 2);\n                  if ( !(result & 0x200) )\n                    goto LABEL_91;\n                }\n                result = *v4;\n                if ( *(_DWORD *)(*v4 + 8 * v25 - 4) != 7 )\n                  return result;\n                if ( v29 == 2 )\n                {\n                  if ( dword_96CAB0[9 * (signed int)v27] != 5 )\n                    goto LABEL_91;\n                  byte_96CACD[36 * (signed int)v27] |= 4u;\n                  if ( !(dword_88C264 & 0x20) )\n                    goto LABEL_91;\n                }\n                else\n                {\n                  if ( v29 != 1 )\n                    goto LABEL_91;\n                  if ( dword_977370[9 * (signed int)v27] != 4 )\n                    goto LABEL_91;\n                  byte_97738D[36 * (signed int)v27] |= 4u;\n                  if ( !(dword_88C264 & 0x20) )\n                    goto LABEL_91;\n                }\n                sub_433F90(\"inhibiting connection at %1m\\n\", (unsigned int)v27);\nLABEL_91:\n                result = *((signed int *)v4 + 2);\n                if ( v25 >= result )\n                  return result;\n                LODWORD(result) = *((_DWORD *)v4 + 30);\n                ++v25;\n                continue;\n              }\n            }\n          }\n          else\n          {\n            v24 = 4 * v9;\n            byte_96CAD0[9 * v24] = 1;\n            byte_96CACD[9 * v24] |= 4u;\n            if ( v29 == 2 && dword_96CAB0[9 * v9] == 5 )\n              byte_96CACC[36 * v9] = 1;\n          }\nLABEL_67:\n          if ( *((_DWORD *)v4 + 2) <= 0 )\n            return result;\n          goto LABEL_68;\n        }\n        if ( !(dword_88C264 & 0x20) )\n          goto LABEL_55;\n        v14 = v4[2];\n        v15 = \"Connecting pattern %s+%d found at %1m\\n\";\nLABEL_53:\n        sub_433F90(v15, v14, v6, v30);\n      }\n      v6 = v32;\n      goto LABEL_55;\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x465ad0L", 
            "funcEndAddr": "0x466023L", 
            "funcName": "sub_465AD0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_466030(_DWORD *a1)\n{\n  _DWORD *v1; // rbx\n  unsigned __int64 v2; // rax\n  signed __int64 v3; // rax\n  __int64 v4; // rax\n  __int64 v5; // rsi\n  signed __int64 v6; // rcx\n  _DWORD *v7; // rdx\n  signed __int64 v8; // rsi\n  __int64 result; // rax\n  signed __int64 v10; // rdx\n  __int64 v11; // rsi\n  signed int v12; // edi\n  int v13; // er9\n  int v14; // er10\n  int v15[83]; // [rsp+0h] [rbp-14C48h]\n  int v16; // [rsp+14Ch] [rbp-14AFCh]\n  int v17; // [rsp+150h] [rbp-14AF8h]\n  int v18[83]; // [rsp+154h] [rbp-14AF4h]\n  int v19[2121]; // [rsp+2A0h] [rbp-149A8h]\n  char v20[5460]; // [rsp+23C4h] [rbp-12884h]\n  int v21; // [rsp+3918h] [rbp-11330h]\n  __int128 v22; // [rsp+6F90h] [rbp-DCB8h]\n  __int128 v23; // [rsp+6FA0h] [rbp-DCA8h]\n  __int128 v24; // [rsp+6FB0h] [rbp-DC98h]\n  __int128 v25; // [rsp+6FC0h] [rbp-DC88h]\n  __int128 v26; // [rsp+6FD0h] [rbp-DC78h]\n  __int128 v27; // [rsp+6FE0h] [rbp-DC68h]\n  __int128 v28; // [rsp+6FF0h] [rbp-DC58h]\n  __int128 v29; // [rsp+7000h] [rbp-DC48h]\n  __int128 v30; // [rsp+7010h] [rbp-DC38h]\n  __int128 v31; // [rsp+7020h] [rbp-DC28h]\n  __int128 v32; // [rsp+7030h] [rbp-DC18h]\n  __int128 v33; // [rsp+7040h] [rbp-DC08h]\n  __int128 v34; // [rsp+7050h] [rbp-DBF8h]\n  __int128 v35[428]; // [rsp+7060h] [rbp-DBE8h]\n  int v36[12362]; // [rsp+8B20h] [rbp-C128h]\n\n  v1 = a1;\n  if ( dword_8A9280 >= 2 )\n    fwrite(\"Building spiral order\\n\", 0x16uLL, 1uLL, stderr);\n  v2 = -28224LL;\n  do\n  {\n    *(__int128 *)((char *)&v22 + v2) = xmmword_4AE0F0;\n    *(__int128 *)((char *)&v23 + v2) = xmmword_4AE0F0;\n    *(__int128 *)((char *)&v24 + v2) = xmmword_4AE0F0;\n    *(__int128 *)((char *)&v25 + v2) = xmmword_4AE0F0;\n    *(__int128 *)((char *)&v26 + v2) = xmmword_4AE0F0;\n    *(__int128 *)((char *)&v27 + v2) = xmmword_4AE0F0;\n    *(__int128 *)((char *)&v28 + v2) = xmmword_4AE0F0;\n    *(__int128 *)((char *)&v29 + v2) = xmmword_4AE0F0;\n    *(__int128 *)((char *)&v30 + v2) = xmmword_4AE0F0;\n    *(__int128 *)((char *)&v31 + v2) = xmmword_4AE0F0;\n    *(__int128 *)((char *)&v32 + v2) = xmmword_4AE0F0;\n    *(__int128 *)((char *)&v33 + v2) = xmmword_4AE0F0;\n    *(__int128 *)((char *)&v34 + v2) = xmmword_4AE0F0;\n    v35[v2 / 0x10] = xmmword_4AE0F0;\n    v2 += 224LL;\n  }\n  while ( v2 );\n  v3 = -14112LL;\n  do\n  {\n    *(_OWORD *)&v20[v3 + 12576] = 0LL;\n    *(_OWORD *)&v20[v3 + 12560] = 0LL;\n    *(_OWORD *)&v20[v3 + 12544] = 0LL;\n    *(_OWORD *)&v20[v3 + 12528] = 0LL;\n    *(_OWORD *)&v20[v3 + 12512] = 0LL;\n    *(_OWORD *)&v20[v3 + 12496] = 0LL;\n    *(_OWORD *)&v20[v3 + 12480] = 0LL;\n    *(_OWORD *)&v20[v3 + 12464] = 0LL;\n    *(_OWORD *)&v20[v3 + 12448] = 0LL;\n    *(_OWORD *)&v20[v3 + 12432] = 0LL;\n    *(_QWORD *)&v20[v3 + 12592] = 0LL;\n    *(_OWORD *)&v20[v3 + 12912] = 0LL;\n    *(_OWORD *)&v20[v3 + 12896] = 0LL;\n    *(_OWORD *)&v20[v3 + 12880] = 0LL;\n    *(_OWORD *)&v20[v3 + 12864] = 0LL;\n    *(_OWORD *)&v20[v3 + 12848] = 0LL;\n    *(_OWORD *)&v20[v3 + 12832] = 0LL;\n    *(_OWORD *)&v20[v3 + 12816] = 0LL;\n    *(_OWORD *)&v20[v3 + 12800] = 0LL;\n    *(_OWORD *)&v20[v3 + 12784] = 0LL;\n    *(_OWORD *)&v20[v3 + 12768] = 0LL;\n    *(_QWORD *)&v20[v3 + 12928] = 0LL;\n    *(_OWORD *)&v20[v3 + 13248] = 0LL;\n    *(_OWORD *)&v20[v3 + 13232] = 0LL;\n    *(_OWORD *)&v20[v3 + 13216] = 0LL;\n    *(_OWORD *)&v20[v3 + 13200] = 0LL;\n    *(_OWORD *)&v20[v3 + 13184] = 0LL;\n    *(_OWORD *)&v20[v3 + 13168] = 0LL;\n    *(_OWORD *)&v20[v3 + 13152] = 0LL;\n    *(_OWORD *)&v20[v3 + 13136] = 0LL;\n    *(_OWORD *)&v20[v3 + 13120] = 0LL;\n    *(_OWORD *)&v20[v3 + 13104] = 0LL;\n    *(_QWORD *)&v20[v3 + 13264] = 0LL;\n    *(_OWORD *)&v20[v3 + 13584] = 0LL;\n    *(_OWORD *)&v20[v3 + 13568] = 0LL;\n    *(_OWORD *)&v20[v3 + 13552] = 0LL;\n    *(_OWORD *)&v20[v3 + 13536] = 0LL;\n    *(_OWORD *)&v20[v3 + 13520] = 0LL;\n    *(_OWORD *)&v20[v3 + 13504] = 0LL;\n    *(_OWORD *)&v20[v3 + 13488] = 0LL;\n    *(_OWORD *)&v20[v3 + 13472] = 0LL;\n    *(_OWORD *)&v20[v3 + 13456] = 0LL;\n    *(_OWORD *)&v20[v3 + 13440] = 0LL;\n    *(_QWORD *)&v20[v3 + 13600] = 0LL;\n    *(_OWORD *)&v20[v3 + 13920] = 0LL;\n    *(_OWORD *)&v20[v3 + 13904] = 0LL;\n    *(_OWORD *)&v20[v3 + 13888] = 0LL;\n    *(_OWORD *)&v20[v3 + 13872] = 0LL;\n    *(_OWORD *)&v20[v3 + 13856] = 0LL;\n    *(_OWORD *)&v20[v3 + 13840] = 0LL;\n    *(_OWORD *)&v20[v3 + 13824] = 0LL;\n    *(_OWORD *)&v20[v3 + 13808] = 0LL;\n    *(_OWORD *)&v20[v3 + 13792] = 0LL;\n    *(_OWORD *)&v20[v3 + 13776] = 0LL;\n    *(_QWORD *)&v20[v3 + 13936] = 0LL;\n    *(_OWORD *)&v20[v3 + 14256] = 0LL;\n    *(_OWORD *)&v20[v3 + 14240] = 0LL;\n    *(_OWORD *)&v20[v3 + 14224] = 0LL;\n    *(_OWORD *)&v20[v3 + 14208] = 0LL;\n    *(_OWORD *)&v20[v3 + 14192] = 0LL;\n    *(_OWORD *)&v20[v3 + 14176] = 0LL;\n    *(_OWORD *)&v20[v3 + 14160] = 0LL;\n    *(_OWORD *)&v20[v3 + 14144] = 0LL;\n    *(_OWORD *)&v20[v3 + 14128] = 0LL;\n    *(_OWORD *)&v20[v3 + 14112] = 0LL;\n    *(_QWORD *)&v20[v3 + 14272] = 0LL;\n    v3 += 2016LL;\n  }\n  while ( v3 );\n  LODWORD(v22) = 3570;\n  v21 = 1;\n  LODWORD(v4) = 1;\n  LODWORD(v5) = 3570;\n  v6 = -1763LL;\n  v7 = a1;\n  while ( 1 )\n  {\n    *v7 = v5 - 3570;\n    v5 = (signed int)v5;\n    if ( !v19[(signed int)v5] )\n      break;\n    if ( !v18[v5] )\n      goto LABEL_16;\nLABEL_11:\n    if ( !v15[v5] )\n      goto LABEL_17;\nLABEL_12:\n    if ( !*(&v16 + v5) )\n      goto LABEL_18;\nLABEL_13:\n    if ( !v6 )\n      goto LABEL_19;\nLABEL_8:\n    LODWORD(v5) = v36[v6];\n    v7 += 8;\n    ++v6;\n  }\n  v4 = (signed int)v4;\n  *((_DWORD *)&v22 + v4) = v5 + 84;\n  *(&v17 + v5 + 84) = 1;\n  LODWORD(v4) = v4 + 1;\n  if ( v18[v5] )\n    goto LABEL_11;\nLABEL_16:\n  v4 = (signed int)v4;\n  *((_DWORD *)&v22 + v4) = v5 + 1;\n  *(&v17 + v5 + 1) = 1;\n  LODWORD(v4) = v4 + 1;\n  if ( v15[v5] )\n    goto LABEL_12;\nLABEL_17:\n  v4 = (signed int)v4;\n  *((_DWORD *)&v22 + v4) = v5 - 84;\n  *(&v17 + v5 - 84) = 1;\n  LODWORD(v4) = v4 + 1;\n  if ( *(&v16 + v5) )\n    goto LABEL_13;\nLABEL_18:\n  v8 = v5 - 1;\n  v4 = (signed int)v4;\n  *((_DWORD *)&v22 + v4) = v8;\n  *(&v17 + v8) = 1;\n  LODWORD(v4) = v4 + 1;\n  if ( v6 )\n    goto LABEL_8;\nLABEL_19:\n  result = 0LL;\n  v10 = 4611686018427373792LL;\n  do\n  {\n    v11 = (signed int)v1[v10 + 14112];\n    v12 = v11\n        - 84\n        * (((unsigned __int64)(818089009 * v11) >> 63) + ((signed int)((unsigned __int64)(818089009 * v11) >> 32) >> 4))\n        - 84;\n    if ( (signed int)(v1[v10 + 14112]\n                    - 84\n                    * (((unsigned __int64)(818089009 * v11) >> 63)\n                     + ((signed int)((unsigned __int64)(818089009 * v11) >> 32) >> 4))) <= 41 )\n      v12 = v1[v10 + 14112]\n          - 84\n          * (((unsigned __int64)(818089009 * v11) >> 63) + ((signed int)((unsigned __int64)(818089009 * v11) >> 32) >> 4));\n    v13 = v12 + 84;\n    if ( v12 >= -42 )\n      v13 = v12;\n    v14 = ((unsigned __int64)(818089009LL * ((signed int)v11 - v13)) >> 63)\n        + ((signed int)((unsigned __int64)(818089009LL * ((signed int)v11 - v13)) >> 32) >> 4);\n    v1[v10 + 14113] = 84 * v13 - v14;\n    v1[v10 + 14114] = -v13 - 84 * v14;\n    v1[v10 + 14115] = v14 - 84 * v13;\n    v1[v10 + 14116] = -v14 - 84 * v13;\n    v1[v10 + 14117] = v13 - 84 * v14;\n    v1[v10 + 14118] = v14 + 84 * v13;\n    v1[v10 + 14119] = 84 * v14 - v13;\n    v10 += 8LL;\n  }\n  while ( v10 * 4 );\n  return result;\n}\n", 
            "funcStartAddr": "0x466030L", 
            "funcEndAddr": "0x466673L", 
            "funcName": "sub_466030"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_4666A0(FILE *stream, __int64 a2)\n{\n  unsigned int *v2; // r14\n  unsigned __int64 v3; // rax\n  signed __int64 v4; // r15\n  __int64 v5; // rbx\n  unsigned int v6; // ebp\n  __int64 v7; // rax\n  unsigned int v8; // ebx\n  bool v9; // cf\n\n  v2 = (unsigned int *)a2;\n  fwrite(\"----------------------------------------------------\\n\", 0x35uLL, 1uLL, stream);\n  fprintf(stream, \" name : %s\\n\", a2);\n  fprintf(stream, \" Nb states :  %7d, max= %d\\n\", v2[25] + 1, v2[24]);\n  fprintf(stream, \" Nb Indexes : %7d, max= %d\\n\", v2[29], v2[28]);\n  fprintf(\n    stream,\n    \" memory needed : %d Mb\\n\",\n    (signed int)((unsigned __int64)((signed int)(4 * v2[29] + 10 * v2[25] + 14) + 104LL) >> 10) / 1024);\n  fwrite(\"----------------------------------------------------\\n\", 0x35uLL, 1uLL, stream);\n  v3 = (unsigned __int64)((signed int)(4 * v2[29] + 10 * v2[25] + 14) + 104LL) >> 10;\n  if ( (signed int)v3 <= 10000 )\n  {\n    fwrite(\" state  |   .    |   O    |   X    |   #    |  att \\n\", 0x34uLL, 1uLL, stream);\n    fwrite(\"----------------------------------------------------\\n\", 0x35uLL, 1uLL, stream);\n    if ( *(_DWORD *)(a2 + 100) )\n    {\n      v4 = 1LL;\n      do\n      {\n        v5 = *(_QWORD *)(a2 + 88);\n        fprintf(stream, \" %6d |\", (unsigned int)v4);\n        fprintf(\n          stream,\n          \" %6d | %6d | %6d |\",\n          *(unsigned int *)(v5 + 20 * v4 + 4),\n          *(unsigned int *)(v5 + 20 * v4 + 8),\n          *(unsigned int *)(v5 + 20 * v4 + 12));\n        fprintf(stream, \" %6d |\", *(unsigned int *)(v5 + 20 * v4 + 16));\n        v6 = *(_DWORD *)(*(_QWORD *)(a2 + 88) + 20 * v4);\n        fprintf(stream, \" %5d:\", v6);\n        if ( v6 )\n        {\n          v7 = *(_QWORD *)(a2 + 104);\n          v8 = 1;\n          do\n          {\n            fprintf(stream, \" %4d\", *(unsigned int *)(v7 + 8LL * (signed int)v6));\n            v7 = *(_QWORD *)(a2 + 104);\n            v6 = *(_DWORD *)(v7 + 8LL * (signed int)v6 + 4);\n            if ( !v6 )\n              break;\n            v9 = v8++ < 0xA;\n          }\n          while ( v9 );\n          if ( v6 )\n            fwrite(\" ...\", 4uLL, 1uLL, stream);\n        }\n        fputc(10, stream);\n      }\n      while ( v4++ != *(_DWORD *)(a2 + 100) );\n    }\n    fwrite(\"----------------------------------------------------\\n\", 0x35uLL, 1uLL, stream);\n    LODWORD(v3) = fflush(stream);\n  }\n  return v3;\n}\n", 
            "funcStartAddr": "0x4666a0L", 
            "funcEndAddr": "0x4668dbL", 
            "funcName": "sub_4666A0"
        }, 
        {
            "decompiledFuncCode": "void *__fastcall sub_4669C0(__int64 a1, signed int a2, signed int a3)\n{\n  signed int v3; // er14\n  char *v4; // r12\n  char *v5; // rax\n  char *v6; // r13\n  __int64 v7; // rax\n  void *result; // rax\n\n  v3 = a3;\n  if ( dword_8A9280 >= 2 )\n    fprintf(stderr, \"Resizing dfa %s\\n\", a1);\n  v4 = (char *)realloc(*(void **)(a1 + 88), 20LL * a2);\n  v5 = (char *)realloc(*(void **)(a1 + 104), 8LL * v3);\n  v6 = v5;\n  if ( !v4 || !v5 )\n  {\n    fprintf(stderr, \"No memory left for dfa: %s\", a1);\n    exit(1);\n  }\n  v7 = *(signed int *)(a1 + 96);\n  if ( (signed int)v7 < a2 )\n    memset(&v4[20 * v7], 0, 20LL * (unsigned int)(a2 - 1 - v7) + 20);\n  result = (void *)*(signed int *)(a1 + 112);\n  if ( (signed int)result < v3 )\n    result = memset(&v6[8 * (_QWORD)result], 0, 8LL * (unsigned int)(v3 - 1 - (_DWORD)result) + 8);\n  *(_QWORD *)(a1 + 88) = v4;\n  *(_DWORD *)(a1 + 96) = a2;\n  *(_QWORD *)(a1 + 104) = v6;\n  *(_DWORD *)(a1 + 112) = v3;\n  return result;\n}\n", 
            "funcStartAddr": "0x4669c0L", 
            "funcEndAddr": "0x466ac3L", 
            "funcName": "sub_4669C0"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_466AD0(__int64 a1)\n{\n  free(*(void **)(a1 + 88));\n  free(*(void **)(a1 + 104));\n  if ( dword_8A9280 > 1 )\n    fprintf(stderr, \"dfa %s is dead :(\\n\", a1);\n  *(_OWORD *)(a1 + 96) = 0LL;\n  *(_OWORD *)(a1 + 80) = 0LL;\n  *(_OWORD *)(a1 + 64) = 0LL;\n  *(_OWORD *)(a1 + 48) = 0LL;\n  *(_OWORD *)(a1 + 32) = 0LL;\n  *(_OWORD *)(a1 + 16) = 0LL;\n  *(_OWORD *)a1 = 0LL;\n  *(_QWORD *)(a1 + 112) = 0LL;\n}\n", 
            "funcStartAddr": "0x466ad0L", 
            "funcEndAddr": "0x466b2fL", 
            "funcName": "sub_466AD0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_466B30(__int64 a1, __int64 a2)\n{\n  _DWORD *v2; // r15\n  __int64 result; // rax\n\n  if ( *(_DWORD *)(a1 + 96) >= *(_DWORD *)(a2 + 100) )\n  {\n    v2 = (_DWORD *)(a1 + 112);\n  }\n  else\n  {\n    v2 = (_DWORD *)(a1 + 112);\n    sub_4669C0(a1, *(_DWORD *)(a2 + 96), *(_DWORD *)(a1 + 112));\n  }\n  if ( *v2 < *(_DWORD *)(a2 + 116) )\n    sub_4669C0(a1, *(_DWORD *)(a1 + 96), *(_DWORD *)(a2 + 112));\n  memset(*(void **)(a1 + 88), 0, 20LL * *(signed int *)(a1 + 96));\n  memset(*(void **)(a1 + 104), 0, 8LL * *(signed int *)(a1 + 112));\n  *(_DWORD *)(a1 + 100) = 1;\n  *(_DWORD *)(a1 + 116) = 0;\n  **(_DWORD **)(a1 + 104) = -1;\n  memcpy(*(void **)(a1 + 88), *(const void **)(a2 + 88), 20LL * *(signed int *)(a2 + 100) + 20);\n  memcpy(*(void **)(a1 + 104), *(const void **)(a2 + 104), 8LL * *(signed int *)(a2 + 116) + 8);\n  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);\n  result = *(unsigned int *)(a2 + 116);\n  *(_DWORD *)(a1 + 116) = result;\n  return result;\n}\n", 
            "funcStartAddr": "0x466b30L", 
            "funcEndAddr": "0x466c01L", 
            "funcName": "sub_466B30"
        }, 
        {
            "decompiledFuncCode": "size_t __fastcall sub_466C10(FILE *s, __int64 a2, __int64 a3)\n{\n  __int64 v3; // r12\n  __int64 v4; // r14\n  FILE *v5; // r15\n  __int64 v6; // rax\n  __int64 v7; // rax\n  _DWORD *v8; // rcx\n  signed int v9; // esi\n  __int64 v10; // rdx\n  signed int v11; // edi\n  signed int v12; // edi\n  signed int v13; // edi\n  signed int v14; // edi\n  signed __int64 v15; // rbx\n  unsigned int v16; // ebp\n  __int64 v17; // r13\n  int v18; // er14\n  int v19; // eax\n  __int64 v20; // rdx\n  int v21; // eax\n  __int64 v22; // rdx\n  int v23; // eax\n  __int64 v24; // rdx\n  int v25; // eax\n  __int64 v26; // rdx\n  const char *v27; // rdx\n  signed __int64 v28; // rbx\n  const char *v29; // r8\n  FILE *v32; // rcx\n  const char *v33; // rdi\n  size_t v34; // rsi\n  __int64 v35; // [rsp+10h] [rbp-38h]\n\n  v3 = a3;\n  v4 = a2;\n  v5 = s;\n  v6 = *(signed int *)(a3 + 100);\n  if ( v6 >= 0 )\n  {\n    v7 = ~v6;\n    v8 = (_DWORD *)(*(_QWORD *)(a3 + 88) + 16LL);\n    v9 = -1;\n    v10 = 0LL;\n    do\n    {\n      if ( *(v8 - 3) )\n      {\n        v11 = v10 + *(v8 - 3);\n        if ( v9 >= v11 )\n          v11 = v9;\n        v9 = v11;\n      }\n      if ( *(v8 - 2) )\n      {\n        v12 = v10 + *(v8 - 2);\n        if ( v9 >= v12 )\n          v12 = v9;\n        v9 = v12;\n      }\n      if ( *(v8 - 1) )\n      {\n        v13 = v10 + *(v8 - 1);\n        if ( v9 >= v13 )\n          v13 = v9;\n        v9 = v13;\n      }\n      if ( *v8 )\n      {\n        v14 = v10 + *v8;\n        if ( v9 >= v14 )\n          v14 = v9;\n        v9 = v14;\n      }\n      --v10;\n      v8 += 5;\n    }\n    while ( v7 != v10 );\n    if ( v9 >= 0x10000 )\n    {\n      fwrite(\"#error too many states\", 0x16uLL, 1uLL, v5);\n      v32 = stderr;\n      v33 = \"Error: The dfa states are too disperse. Can't fit delta into a short.\\n\";\n      v34 = 70LL;\n      goto LABEL_43;\n    }\n  }\n  if ( *(_DWORD *)(v3 + 116) >= 0xFFFF )\n  {\n    fwrite(\"#error too many states\", 0x16uLL, 1uLL, v5);\n    v32 = stderr;\n    v33 = \"Error: Too many index entries. Can't fit delta into a short.\\n\";\n    v34 = 61LL;\nLABEL_43:\n    fwrite(v33, v34, 1uLL, v32);\n    exit(1);\n  }\n  fwrite(\"\\n#include \\\"dfa.h\\\"\\n\", 0x12uLL, 1uLL, v5);\n  v35 = v4;\n  fprintf(v5, \"static const state_rt_t state_%s[%d] = {\\n\", v4, (unsigned int)(*(_DWORD *)(v3 + 100) + 1));\n  if ( *(_DWORD *)(v3 + 100) != -1 )\n  {\n    v15 = -1LL;\n    v16 = 1;\n    v17 = 0LL;\n    v18 = 0;\n    do\n    {\n      fprintf(v5, \"{%d,\", *(unsigned int *)(*(_QWORD *)(v3 + 88) + v17));\n      fputc(123, v5);\n      v19 = *(_DWORD *)(*(_QWORD *)(v3 + 88) + v17 + 4);\n      v20 = (unsigned int)(v18 + v19);\n      if ( !v19 )\n        v20 = 0LL;\n      fprintf(v5, \"%d\", v20);\n      fputc(44, v5);\n      v21 = *(_DWORD *)(*(_QWORD *)(v3 + 88) + v17 + 8);\n      v22 = (unsigned int)(v18 + v21);\n      if ( !v21 )\n        v22 = 0LL;\n      fprintf(v5, \"%d\", v22);\n      fputc(44, v5);\n      v23 = *(_DWORD *)(*(_QWORD *)(v3 + 88) + v17 + 12);\n      v24 = (unsigned int)(v18 + v23);\n      if ( !v23 )\n        v24 = 0LL;\n      fprintf(v5, \"%d\", v24);\n      fputc(44, v5);\n      v25 = *(_DWORD *)(*(_QWORD *)(v3 + 88) + v17 + 16);\n      v26 = (unsigned int)(v18 + v25);\n      if ( !v25 )\n        v26 = 0LL;\n      fprintf(v5, \"%d\", v26);\n      v27 = \"\\t\";\n      if ( 1 - 3 * (v16 / 3) == v18 )\n        v27 = \"\\n\";\n      fprintf(v5, \"}},%s\", v27);\n      ++v15;\n      --v18;\n      v17 += 20LL;\n      ++v16;\n    }\n    while ( v15 != *(_DWORD *)(v3 + 100) );\n  }\n  fwrite(\"};\\n\\n\", 4uLL, 1uLL, v5);\n  fprintf(v5, \"static const attrib_rt_t idx_%s[%d] = {\\n\", v35, (unsigned int)(*(_DWORD *)(v3 + 116) + 1));\n  if ( *(_DWORD *)(v3 + 116) != -1 )\n  {\n    v28 = 1LL;\n    do\n    {\n      v29 = \"\\t\";\n      if ( !(v28 & 3) )\n        v29 = \"\\n\";\n      fprintf(\n        v5,\n        \"{%d,%d},%s\",\n        *(unsigned int *)(*(_QWORD *)(v3 + 104) + 8 * v28 - 8),\n        *(unsigned int *)(*(_QWORD *)(v3 + 104) + 8 * v28 - 4),\n        v29);\n    }\n    while ( v28++ - 1 != *(_DWORD *)(v3 + 116) );\n  }\n  fwrite(\"};\\n\\n\", 4uLL, 1uLL, v5);\n  fprintf(v5, \"static dfa_rt_t dfa_%s = {\\n\", v35);\n  fprintf(v5, \" \\\"%s\\\",\\n\", v35);\n  fprintf(v5, \" %d,\\n\", *(unsigned int *)(v3 + 80));\n  fprintf(v5, \"state_%s,\\n\", v35);\n  fprintf(v5, \"idx_%s\", v35);\n  return fwrite(\"};\\n\", 3uLL, 1uLL, v5);\n}\n", 
            "funcStartAddr": "0x466c10L", 
            "funcEndAddr": "0x466fdcL", 
            "funcName": "sub_466C10"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_466FE0(__int64 a1, int a2, unsigned int a3)\n{\n  __int64 result; // rax\n  signed __int64 v4; // r8\n  __int64 v5; // rcx\n  signed __int64 v6; // r14\n  int v7; // ebp\n  int v8; // ebx\n  int v9; // ebx\n  int v10; // ebx\n  int v11; // ebx\n  int v12; // ebx\n  int v13; // ebx\n  int v14; // ebx\n  int v15; // ebx\n\n  result = -(a3 < 1) | 0x1869Fu;\n  v4 = *(signed int *)(a1 + 100);\n  if ( v4 >= 0 )\n  {\n    v5 = 0LL;\n    v6 = -1LL;\n    v7 = 0;\n    while ( 1 )\n    {\n      if ( a2 <= 0 )\n      {\n        v8 = *(_DWORD *)(*(_QWORD *)(a1 + 88) + v5 + 4);\n        if ( v8 )\n          break;\n      }\nLABEL_17:\n      if ( a2 < 0 || a2 == 1 )\n      {\n        v10 = *(_DWORD *)(*(_QWORD *)(a1 + 88) + v5 + 8);\n        if ( v10 )\n        {\n          v11 = v7 + v10;\n          if ( a3 )\n          {\n            if ( (signed int)result <= v11 )\nLABEL_21:\n              v11 = result;\n          }\n          else if ( (signed int)result >= v11 )\n          {\n            goto LABEL_21;\n          }\n          result = (unsigned int)v11;\n          goto LABEL_23;\n        }\n      }\nLABEL_23:\n      if ( a2 < 0 || a2 == 2 )\n      {\n        v12 = *(_DWORD *)(*(_QWORD *)(a1 + 88) + v5 + 12);\n        if ( v12 )\n        {\n          v13 = v7 + v12;\n          if ( a3 )\n          {\n            if ( (signed int)result <= v13 )\nLABEL_27:\n              v13 = result;\n          }\n          else if ( (signed int)result >= v13 )\n          {\n            goto LABEL_27;\n          }\n          result = (unsigned int)v13;\n          goto LABEL_29;\n        }\n      }\nLABEL_29:\n      if ( a2 >= 0 && a2 != 3 )\n        goto LABEL_35;\n      v14 = *(_DWORD *)(*(_QWORD *)(a1 + 88) + v5 + 16);\n      if ( !v14 )\n        goto LABEL_35;\n      v15 = v7 + v14;\n      if ( !a3 )\n      {\n        if ( (signed int)result < v15 )\n          goto LABEL_34;\nLABEL_33:\n        v15 = result;\n        goto LABEL_34;\n      }\n      if ( (signed int)result <= v15 )\n        goto LABEL_33;\nLABEL_34:\n      result = (unsigned int)v15;\nLABEL_35:\n      --v7;\n      ++v6;\n      v5 += 20LL;\n      if ( v6 >= v4 )\n        return result;\n    }\n    v9 = v7 + v8;\n    if ( a3 )\n    {\n      if ( (signed int)result > v9 )\n      {\nLABEL_16:\n        result = (unsigned int)v9;\n        goto LABEL_17;\n      }\n    }\n    else if ( (signed int)result < v9 )\n    {\n      goto LABEL_16;\n    }\n    v9 = result;\n    goto LABEL_16;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x466fe0L", 
            "funcEndAddr": "0x4670e8L", 
            "funcName": "sub_466FE0"
        }, 
        {
            "decompiledFuncCode": "_DWORD *__fastcall sub_4674D0(__int64 a1)\n{\n  __int64 v1; // rbx\n  _DWORD *v2; // r14\n  signed int *v3; // r15\n  _DWORD *v4; // r12\n  __int64 v5; // r13\n  _DWORD *v6; // rax\n  __int64 v7; // rcx\n  signed int v8; // edx\n  _DWORD *v9; // r9\n  __int64 v10; // rdi\n  __int64 v11; // r8\n  __int64 v12; // rsi\n  __int64 v13; // rbx\n  __int64 v14; // rbp\n  __int64 v15; // rbx\n  __int64 v16; // rbp\n  __int64 v17; // rbx\n  __int64 v18; // rbp\n  __int64 v19; // rbx\n  __int64 v20; // rbp\n  __int64 v21; // rbx\n  __int64 v22; // rbx\n  _DWORD *result; // rax\n  int v24; // er8\n  __int64 v25; // rdx\n  __int64 v26; // rsi\n  __int64 v27; // rdi\n  signed __int64 v28; // rcx\n  __int64 v29; // rcx\n  signed __int64 v30; // rbx\n  int v31; // ebp\n  int v32; // ebp\n  signed __int64 v33; // rsi\n  signed __int64 v34; // rcx\n  int v35; // edi\n  _DWORD *v36; // rcx\n  signed __int64 v37; // rdx\n  signed __int64 v38; // rsi\n\n  v1 = *(signed int *)(a1 + 100);\n  v2 = calloc(v1 + 1, 4uLL);\n  v3 = (signed int *)calloc(v1 + 1, 4uLL);\n  v4 = malloc(4 * v1 + 4);\n  v5 = a1;\n  v6 = malloc(4 * v1 + 4);\n  *v4 = 1;\n  v2[1] = 1;\n  v3[1] = 1;\n  LODWORD(v7) = 2;\n  v8 = 1;\n  do\n  {\n    v9 = v4;\n    if ( v8 <= 0 )\n      break;\n    v10 = *(_QWORD *)(v5 + 88);\n    v11 = (unsigned int)v8;\n    v12 = 0LL;\n    v8 = 0;\n    do\n    {\n      v13 = (signed int)v4[v12];\n      v14 = *(signed int *)(v10 + 20 * v13 + 4);\n      if ( *(_DWORD *)(v10 + 20 * v13 + 4) && !v2[v14] )\n      {\n        v2[v14] = v7;\n        v7 = (signed int)v7;\n        v3[v7] = v14;\n        LODWORD(v7) = v7 + 1;\n        v15 = v8++;\n        v6[v15] = v14;\n        v13 = (signed int)v4[v12];\n      }\n      v16 = *(signed int *)(v10 + 20 * v13 + 8);\n      if ( *(_DWORD *)(v10 + 20 * v13 + 8) && !v2[v16] )\n      {\n        v2[v16] = v7;\n        v7 = (signed int)v7;\n        v3[v7] = v16;\n        LODWORD(v7) = v7 + 1;\n        v17 = v8++;\n        v6[v17] = v16;\n        v13 = (signed int)v4[v12];\n      }\n      v18 = *(signed int *)(v10 + 20 * v13 + 12);\n      if ( *(_DWORD *)(v10 + 20 * v13 + 12) && !v2[v18] )\n      {\n        v2[v18] = v7;\n        v7 = (signed int)v7;\n        v3[v7] = v18;\n        LODWORD(v7) = v7 + 1;\n        v19 = v8++;\n        v6[v19] = v18;\n        v13 = (signed int)v4[v12];\n      }\n      v20 = *(signed int *)(v10 + 20 * v13 + 16);\n      if ( *(_DWORD *)(v10 + 20 * v13 + 16) && !v2[v20] )\n      {\n        v2[v20] = v7;\n        v7 = (signed int)v7;\n        v3[v7] = v20;\n        LODWORD(v7) = v7 + 1;\n        v21 = v8++;\n        v6[v21] = v20;\n      }\n      ++v12;\n    }\n    while ( v11 != v12 );\n    v4 = v6;\n    v6 = v9;\n  }\n  while ( v8 );\n  v22 = *(signed int *)(v5 + 100);\n  result = malloc(20 * v22 + 20);\n  if ( v22 > 0 )\n  {\n    v24 = v22;\n    v25 = *(_QWORD *)(v5 + 88);\n    v26 = v22 & 1;\n    if ( (_DWORD)v22 == 1 )\n    {\n      v27 = 0LL;\n      v28 = 1LL;\n      if ( !(v22 & 1) )\n        goto LABEL_26;\n    }\n    else\n    {\n      v29 = (unsigned int)v22 - v26;\n      v27 = 0LL;\n      v30 = 11LL;\n      do\n      {\n        v31 = *(_DWORD *)(v25 + v30 * 4 - 24);\n        *(_OWORD *)&result[v30 - 5] = *(_OWORD *)(v25 + v30 * 4 - 20);\n        result[v30 - 6] = v31;\n        v27 += 2LL;\n        v32 = *(_DWORD *)(v25 + v30 * 4 - 4);\n        *(_OWORD *)&result[v30] = *(_OWORD *)(v25 + v30 * 4);\n        result[v30 - 1] = v32;\n        v30 += 10LL;\n      }\n      while ( v29 != v27 );\n      v28 = v27 + 1;\n      if ( !v26 )\n      {\nLABEL_26:\n        if ( v24 > 0 )\n        {\n          v36 = (_DWORD *)(*(_QWORD *)(v5 + 88) + 36LL);\n          v37 = 0LL;\n          do\n          {\n            v38 = 5LL * v3[v37 + 1];\n            *(v36 - 3) = v2[result[5 * v3[v37 + 1] + 1]];\n            *(v36 - 2) = v2[result[v38 + 2]];\n            *(v36 - 1) = v2[result[v38 + 3]];\n            *v36 = v2[result[v38 + 4]];\n            *(v36 - 4) = result[v38];\n            ++v37;\n            v36 += 5;\n          }\n          while ( v37 < *(signed int *)(v5 + 100) );\n        }\n        return result;\n      }\n    }\n    v33 = 5 * v27;\n    v34 = 5 * v28;\n    v35 = *(_DWORD *)(v25 + v34 * 4);\n    *(_OWORD *)&result[v33 + 6] = *(_OWORD *)(v25 + v33 * 4 + 24);\n    result[v34] = v35;\n    goto LABEL_26;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4674d0L", 
            "funcEndAddr": "0x46776eL", 
            "funcName": "sub_4674D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_467770(__int64 a1)\n{\n  __int64 v1; // r14\n  int v2; // ebx\n  int v3; // er15\n  int v4; // ebp\n  char *v5; // rdi\n  char *v6; // rsi\n  int v7; // eax\n  int v8; // ebp\n  bool v9; // zf\n  bool v10; // sf\n  unsigned __int8 v11; // of\n  int v12; // eax\n  int v13; // ebx\n\n  v1 = a1;\n  v2 = dword_8AA280;\n  v3 = dword_8AA280 + 32;\n  do\n  {\n    if ( v2 >= v3 )\n    {\n      v12 = v2;\n    }\n    else\n    {\n      v4 = v2 + 2;\n      do\n      {\n        v5 = (char *)&unk_8A9290\n           + 120 * (signed int)(v2 - 33 * (((unsigned __int64)(1041204193LL * v2) >> 63) + (1041204193LL * v2 >> 35)));\n        v6 = (char *)&unk_8A9290\n           + 120\n           * (signed int)(-33 * (((unsigned __int64)(1041204193LL * (v4 - 1)) >> 63) + (1041204193LL * (v4 - 1) >> 35))\n                        + v4\n                        - 1);\n        if ( v4 == v2 )\n          sub_466B30((__int64)v5, (__int64)v6);\n        else\n          sub_4678E0(\n            v5,\n            v6,\n            (char *)&unk_8A9290\n          + 120 * (signed int)(v4 - 33 * (((unsigned __int64)(1041204193LL * v4) >> 63) + (1041204193LL * v4 >> 35))));\n        ++v2;\n        v7 = v4 + 2;\n        v8 = v4 + 1;\n        v11 = __OFSUB__(v8, v3);\n        v9 = v8 == v3;\n        v10 = v8 - v3 < 0;\n        v4 = v7;\n      }\n      while ( (unsigned __int8)(v10 ^ v11) | v9 );\n      v12 = dword_8AA280;\n    }\n    v13 = v2 - 1;\n    v3 = v13;\n    dword_8AA280 = v12 - 1;\n    v9 = v12 == v13;\n    v2 = v12 - 1;\n  }\n  while ( !v9 );\n  sub_466B30(\n    v1,\n    (__int64)&unk_8A9290\n  + 120 * (signed int)(v12 - 33 * (((unsigned __int64)(1041204193LL * v12) >> 63) + (1041204193LL * v12 >> 35))));\n  return sub_467A20(v1);\n}\n", 
            "funcStartAddr": "0x467770L", 
            "funcEndAddr": "0x4678d2L", 
            "funcName": "sub_467770"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_4678E0(__int64 a1, __int64 a2, __int64 a3)\n{\n  __int64 v3; // r14\n  _QWORD *v4; // rax\n  __int64 v5; // r14\n  _QWORD *v6; // rdi\n  _QWORD *v7; // rbx\n\n  v3 = a3;\n  *(_DWORD *)(a1 + 116) = 0;\n  if ( dword_8A9280 >= 3 )\n  {\n    fprintf(stderr, \"Product between %s and %s\\n\", a2, a3);\n    fprintf(stderr, \"result in %s\\n\", a1);\n  }\n  qword_8AA288 = a1;\n  qword_8AA290 = a2;\n  qword_8AA298 = v3;\n  memset(&qword_8AA2A0, 0, 0x8000uLL);\n  v4 = malloc(0x18uLL);\n  if ( !v4 )\n  {\n    fwrite(\"No memory left for new entry\\n\", 0x1DuLL, 1uLL, stderr);\n    exit(1);\n  }\n  v4[2] = 0LL;\n  *v4 = 4294967297LL;\n  *((_DWORD *)v4 + 2) = 1;\n  qword_8AA2B0 = (__int64)v4;\n  *(_DWORD *)(a1 + 100) = 1;\n  sub_468BF0(1LL, 1LL);\n  v5 = 0LL;\n  do\n  {\n    v6 = *(&qword_8AA2A0 + v5);\n    if ( v6 )\n    {\n      do\n      {\n        v7 = (_QWORD *)v6[2];\n        free(v6);\n        v6 = v7;\n      }\n      while ( v7 );\n    }\n    *(&qword_8AA2A0 + v5++) = 0LL;\n  }\n  while ( v5 != 4096 );\n}\n", 
            "funcStartAddr": "0x4678e0L", 
            "funcEndAddr": "0x467a19L", 
            "funcName": "sub_4678E0"
        }, 
        {
            "decompiledFuncCode": "void __fastcall sub_467A20(__int64 a1)\n{\n  __int64 v1; // r14\n  size_t v2; // r13\n  _DWORD *v3; // r12\n  signed int *v4; // r15\n  int v5; // ebp\n  signed int *v6; // rbx\n  signed __int64 v7; // rcx\n  __int64 v8; // rdx\n  __int64 v9; // rsi\n  __int64 v10; // rax\n  int v11; // edi\n  __int64 v12; // rsi\n  __int64 v13; // rcx\n  __int64 v14; // rbp\n  __int64 v15; // rax\n  __int64 v16; // rdx\n  __int64 v17; // rbp\n  signed int *v18; // rcx\n  __int64 v19; // rax\n  __int64 v20; // rdx\n  __int64 v21; // rcx\n  signed __int64 v22; // rdx\n  signed __int64 v23; // rax\n  __int64 v24; // rsi\n  signed __int64 v25; // rdx\n  signed int *v26; // rdi\n  signed int *v27; // rcx\n  signed __int64 v28; // rax\n  int v29; // [rsp+0h] [rbp-38h]\n\n  v1 = a1;\n  v29 = *(_DWORD *)(a1 + 116);\n  v2 = 4 * v29 + 4;\n  v3 = malloc(v2);\n  *v3 = 0;\n  v4 = (signed int *)malloc(v2);\n  v5 = 0;\n  memset(v4, 0, v2);\n  v6 = (signed int *)malloc(v2);\n  memset(v6, 0, v2);\n  if ( v29 > 0 )\n  {\n    v5 = 0;\n    v7 = 1LL;\n    while ( 1 )\n    {\n      v8 = *(_QWORD *)(v1 + 104);\n      v9 = *(signed int *)(v8 + 8 * v7);\n      v10 = v4[v9];\n      if ( !v4[v9] )\n        break;\n      v11 = *(_DWORD *)(v8 + 8 * v7 + 4);\n      if ( *(_DWORD *)(v8 + 8 * v10 + 4) != v11 )\n      {\n        while ( 1 )\n        {\n          v12 = v6[v10];\n          if ( !v6[v10] )\n            break;\n          v10 = v6[v10];\n          if ( *(_DWORD *)(v8 + 8 * v12 + 4) == v11 )\n          {\n            LODWORD(v10) = v12;\n            goto LABEL_8;\n          }\n        }\n        v6[v10] = ++v5;\n        goto LABEL_11;\n      }\nLABEL_8:\n      v3[v7] = v10;\nLABEL_12:\n      if ( ++v7 == v29 + 1 )\n        goto LABEL_13;\n    }\n    v4[v9] = ++v5;\nLABEL_11:\n    v3[v7] = v5;\n    *(_QWORD *)(v8 + 8LL * v5) = *(_QWORD *)(v8 + 8 * v7);\n    goto LABEL_12;\n  }\nLABEL_13:\n  free(v4);\n  free(v6);\n  if ( v5 < v29 )\n  {\n    *(_DWORD *)(v1 + 116) = v5;\n    if ( v5 < 0 )\n      goto LABEL_23;\n    v13 = *(_QWORD *)(v1 + 104);\n    v14 = (unsigned int)(v5 + 1);\n    v15 = v14 & 3;\n    if ( (unsigned __int64)(v14 - 1) >= 3 )\n    {\n      v17 = v14 - v15;\n      v16 = 0LL;\n      do\n      {\n        *(_DWORD *)(v13 + 8 * v16 + 4) = v3[*(signed int *)(v13 + 8 * v16 + 4)];\n        *(_DWORD *)(v13 + 8 * v16 + 12) = v3[*(signed int *)(v13 + 8 * v16 + 12)];\n        *(_DWORD *)(v13 + 8 * v16 + 20) = v3[*(signed int *)(v13 + 8 * v16 + 20)];\n        *(_DWORD *)(v13 + 8 * v16 + 28) = v3[*(signed int *)(v13 + 8 * v16 + 28)];\n        v16 += 4LL;\n      }\n      while ( v17 != v16 );\n      if ( !v15 )\n      {\nLABEL_23:\n        v20 = *(signed int *)(v1 + 100);\n        if ( v20 >= 0 )\n        {\n          v21 = *(_QWORD *)(v1 + 88);\n          v22 = v20 + 1;\n          v23 = v22 & 3;\n          if ( *(_DWORD *)(v1 + 100) >= 3u )\n          {\n            v25 = v22 - v23;\n            v24 = 0LL;\n            v26 = *(signed int **)(v1 + 88);\n            do\n            {\n              *v26 = v3[*v26];\n              v26[5] = v3[v26[5]];\n              v26[10] = v3[v26[10]];\n              v26[15] = v3[v26[15]];\n              v24 += 4LL;\n              v26 += 20;\n            }\n            while ( v25 != v24 );\n            if ( !v23 )\n              goto LABEL_32;\n          }\n          else\n          {\n            v24 = 0LL;\n            if ( !(v22 & 3) )\n              goto LABEL_32;\n          }\n          v27 = (signed int *)(v21 + 20 * v24);\n          v28 = -v23;\n          do\n          {\n            *v27 = v3[*v27];\n            v27 += 5;\n            ++v28;\n          }\n          while ( v28 );\n        }\nLABEL_32:\n        sub_467A20(v1);\n        goto LABEL_33;\n      }\n    }\n    else\n    {\n      v16 = 0LL;\n      if ( !(v14 & 3) )\n        goto LABEL_23;\n    }\n    v18 = (signed int *)(v13 + 8 * v16 + 4);\n    v19 = -v15;\n    do\n    {\n      *v18 = v3[*v18];\n      v18 += 2;\n      ++v19;\n    }\n    while ( v19 );\n    goto LABEL_23;\n  }\nLABEL_33:\n  free(v3);\n}\n", 
            "funcStartAddr": "0x467a20L", 
            "funcEndAddr": "0x467c71L", 
            "funcName": "sub_467A20"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_467C80(__int64 a1, const char *a2, unsigned int a3, unsigned int a4)\n{\n  unsigned int v4; // er12\n  unsigned int v5; // er13\n  int v6; // ebp\n  int v7; // er15\n  int v8; // er14\n  __int64 v9; // rcx\n  int v10; // esi\n  _DWORD *v11; // rdi\n  unsigned __int64 v12; // rdx\n  char *v13; // rcx\n  signed __int64 v14; // rax\n  bool v15; // zf\n  int v16; // eax\n  int v17; // ebx\n  __int64 v18; // rbp\n  __int64 v19; // r14\n  signed int v20; // eax\n  int v21; // ebx\n  signed __int64 v22; // r13\n  char v23; // al\n  signed int v24; // er14\n  signed __int64 v25; // r15\n  __int64 v26; // rbp\n  void *v27; // rax\n  int v28; // ebx\n  unsigned int v29; // er12\n  int v30; // eax\n  __int64 v31; // rax\n  __int64 v32; // rcx\n  __int64 result; // rax\n  unsigned __int64 v34; // rcx\n  unsigned int v35; // [rsp+8h] [rbp-E20h]\n  int v36; // [rsp+8h] [rbp-E20h]\n  __int64 v37; // [rsp+10h] [rbp-E18h]\n  signed __int64 v38; // [rsp+10h] [rbp-E18h]\n  __int64 v39; // [rsp+18h] [rbp-E10h]\n  char dest[1764]; // [rsp+20h] [rbp-E08h]\n  char v41; // [rsp+704h] [rbp-724h]\n  char s[1816]; // [rsp+710h] [rbp-718h]\n\n  v4 = a4;\n  v5 = a3;\n  v37 = a1;\n  v6 = dword_8AA280;\n  v7 = 33 * (((unsigned __int64)(1041204193LL * dword_8AA280) >> 63) + (1041204193LL * dword_8AA280 >> 35));\n  v8 = -33 * (((unsigned __int64)(1041204193LL * (dword_8AA280 + 1)) >> 63) + (1041204193LL * (dword_8AA280 + 1) >> 35));\n  if ( a4 )\n  {\n    v39 = (unsigned int)dword_8AA280;\n    v35 = a3;\n    memset(s, 36, 0x6E5uLL);\n    strcpy(s, a2);\n    s[strlen(a2)] = 36;\n    memset(dest, 36, 0x6E5uLL);\n    v9 = 0LL;\n    do\n    {\n      v10 = dword_90E630[8 * v9];\n      v11 = (_DWORD *)(4LL * (signed int)v4 + 9496240);\n      v12 = 0LL;\n      while ( v10 != *(v11 - 32) )\n      {\n        if ( v10 == *(v11 - 24) )\n        {\n          LODWORD(v12) = v12 + 1;\n          break;\n        }\n        if ( v10 == *(v11 - 16) )\n        {\n          LODWORD(v12) = v12 + 2;\n          break;\n        }\n        if ( v10 == *(v11 - 8) )\n        {\n          LODWORD(v12) = v12 + 3;\n          break;\n        }\n        if ( v10 == *v11 )\n        {\n          LODWORD(v12) = v12 + 4;\n          break;\n        }\n        v12 += 5LL;\n        v11 += 40;\n        if ( v12 >= 0x6E5 )\n          goto LABEL_16;\n      }\n      dest[v9] = s[(unsigned int)v12];\nLABEL_16:\n      ++v9;\n    }\n    while ( v9 != 882 );\n    v13 = &v41;\n    v14 = 7584912244736LL;\n    do\n    {\n      v14 -= 0x100000000LL;\n      v15 = *v13-- == 36;\n    }\n    while ( v15 );\n    dest[v14 >> 32] = 0;\n    v5 = v35;\n    v16 = v39;\n  }\n  else\n  {\n    v17 = dword_8AA280;\n    strcpy(dest, a2);\n    v16 = v17;\n  }\n  LODWORD(v18) = v6 - v7;\n  LODWORD(v19) = v16 + v8 + 1;\n  v20 = dword_8A9280;\n  if ( dword_8A9280 >= 2 )\n  {\n    fprintf(stderr, \"Adding to dfa %s the string: %s\\n\", v37, dest);\n    fprintf(stderr, \"  pat_ind: %d; rotation: %d at bin: %d\\n\", v5, v4, (unsigned int)dword_8AA280);\n    v20 = dword_8A9280;\n  }\n  v18 = (signed int)v18;\n  v19 = (signed int)v19;\n  v21 = v4 + 8 * v5;\n  if ( !*(_DWORD *)(v37 + 80) )\n    v21 = v5;\n  if ( v20 >= 2 )\n    fprintf(stderr, \"linear dfa in %s with string: %s\\n\", &xmmword_8AA208, dest);\n  v22 = 30 * v19;\n  memset(qword_8AA260, 0, 20LL * (signed int)xmmword_8AA268);\n  memset(*((void **)&xmmword_8AA268 + 1), 0, 8LL * (signed int)qword_8AA278);\n  DWORD1(xmmword_8AA268) = 1;\n  HIDWORD(qword_8AA278) = 0;\n  **((_DWORD **)&xmmword_8AA268 + 1) = -1;\n  v23 = dest[0];\n  v38 = 30 * v18;\n  v36 = v21;\n  if ( dest[0] )\n  {\n    v24 = 2;\n    v25 = 1LL;\n    v26 = 0LL;\n    while ( 1 )\n    {\n      v27 = memchr(\"$#+-|OoXx.?,!a*\", v23, 0x10uLL);\n      *(_OWORD *)((char *)qword_8AA260 + v26 + 24) = 0LL;\n      if ( !v27 )\n        break;\n      v28 = *((char *)&v39 + v25 + 7);\n      if ( memchr(\"$?.ox,a!*\", v28, 0xAuLL) )\n      {\n        *(_DWORD *)((char *)qword_8AA260 + v26 + 24) = v24;\n        v28 = *((char *)&v39 + v25 + 7);\n      }\n      if ( memchr(\"$?Oo\", v28, 5uLL) )\n      {\n        *(_DWORD *)((char *)qword_8AA260 + v26 + 28) = v24;\n        v28 = *((char *)&v39 + v25 + 7);\n      }\n      if ( memchr(\"$?Xx\", v28, 5uLL) )\n      {\n        *(_DWORD *)((char *)qword_8AA260 + v26 + 32) = v24;\n        v28 = *((char *)&v39 + v25 + 7);\n      }\n      v29 = v24;\n      if ( memchr(\"$#+-|\", v28, 6uLL) )\n      {\n        *(_DWORD *)((char *)qword_8AA260 + v26 + 36) = v24;\n        v29 = v25 + 1;\n      }\n      if ( (signed int)v29 >= (signed int)xmmword_8AA268 )\n        sub_4669C0((__int64)&xmmword_8AA208, xmmword_8AA268 + 20000, qword_8AA278);\n      v23 = dest[v25];\n      v26 += 20LL;\n      ++v24;\n      ++v25;\n      if ( !v23 )\n        goto LABEL_43;\n    }\n    v29 = v25;\n  }\n  else\n  {\n    v29 = 1;\nLABEL_43:\n    *(_OWORD *)((char *)qword_8AA260 + 20 * v29 + 4) = 0LL;\n  }\n  v30 = HIDWORD(qword_8AA278) + 1;\n  HIDWORD(qword_8AA278) = v30;\n  if ( v30 >= (signed int)qword_8AA278 )\n  {\n    sub_4669C0((__int64)&xmmword_8AA208, xmmword_8AA268, qword_8AA278 + 20000);\n    v30 = HIDWORD(qword_8AA278);\n  }\n  *(_QWORD *)(*((_QWORD *)&xmmword_8AA268 + 1) + 8LL * v30) = 0LL;\n  v31 = SHIDWORD(qword_8AA278);\n  *((_DWORD *)qword_8AA260 + 5 * v29) = HIDWORD(qword_8AA278);\n  v32 = *((_QWORD *)&xmmword_8AA268 + 1);\n  *(_DWORD *)(*((_QWORD *)&xmmword_8AA268 + 1) + 8 * v31) = v36;\n  *(_DWORD *)(v32 + 8 * v31 + 4) = 0;\n  DWORD1(xmmword_8AA268) = v29;\n  sub_4678E0((__int64)&unk_8A9290 + v38 * 4, (__int64)&unk_8A9290 + v22 * 4, (__int64)&xmmword_8AA208);\n  ++dword_8AA280;\n  result = (unsigned int)(4 * dword_8A9304[v22] + 10 * dword_8A92F4[v22] + 14);\n  v34 = (unsigned __int64)((signed int)result + 104LL) >> 10;\n  if ( (signed int)v34 > 0 )\n    result = (unsigned int)((signed int)((unsigned __int64)(4 * dword_8A9304[v38] + 10 * dword_8A92F4[v38] + 14 + 104LL) >> 10)\n                          / (signed int)v34);\n  return result;\n}\n", 
            "funcStartAddr": "0x467c80L", 
            "funcEndAddr": "0x4681afL", 
            "funcName": "sub_467C80"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4681B0(_DWORD *a1, __int64 a2, _BYTE *a3, int a4, int a5, int a6)\n{\n  int v6; // er13\n  int v7; // er15\n  __int64 v8; // r14\n  _DWORD *v9; // rbx\n  signed __int64 v10; // rax\n  int v11; // eax\n  int v12; // ebp\n  int v13; // esi\n  int v14; // er12\n  int v15; // edi\n  int v16; // ecx\n  size_t v17; // r12\n  int v18; // er13\n  __int64 v19; // rbp\n  int v20; // er15\n  __int64 v21; // rcx\n  char *v22; // rbx\n  __int64 v23; // r15\n  char *v24; // rbx\n  int v25; // er13\n  int v26; // ebx\n  int v27; // eax\n  __int64 v28; // rsi\n  char *v29; // rdi\n  char *v30; // rcx\n  int v31; // eax\n  int v32; // eax\n  int v33; // er15\n  size_t v34; // rbx\n  char *v35; // r12\n  signed __int64 v36; // rbp\n  int v37; // er13\n  int v38; // er12\n  size_t v39; // r15\n  __int64 v40; // rbp\n  __int64 v41; // rbx\n  __int64 v42; // rcx\n  char *v43; // rdi\n  __int64 v44; // r12\n  char *v45; // rbx\n  __int64 v46; // rbp\n  unsigned int v47; // edx\n  int v48; // esi\n  int v49; // er12\n  int v50; // ecx\n  int v51; // ebp\n  __int64 v52; // r13\n  __int64 v53; // rcx\n  char *v54; // rbx\n  __int64 v55; // r12\n  char *v56; // rbx\n  int v57; // ebp\n  _DWORD *v58; // r13\n  signed int *v59; // r14\n  __int64 v60; // rax\n  signed int v61; // er14\n  signed __int64 v62; // rbp\n  __int64 v63; // rsi\n  __int64 v64; // rax\n  signed int v65; // ecx\n  int v66; // er15\n  int v67; // er12\n  unsigned int v68; // eax\n  unsigned int v69; // ecx\n  unsigned int v70; // eax\n  int v71; // ebx\n  unsigned int v72; // eax\n  unsigned int v73; // ecx\n  unsigned int v74; // eax\n  unsigned int v75; // ecx\n  __int64 result; // rax\n  char *v77; // r15\n  signed __int64 v78; // rbp\n  signed __int64 v79; // rbx\n  int v80; // edi\n  char *v81; // r14\n  signed __int64 v82; // rbp\n  signed __int64 v83; // rbx\n  int v84; // edi\n  unsigned int v85; // [rsp+0h] [rbp-1C38h]\n  int v86; // [rsp+0h] [rbp-1C38h]\n  int v87; // [rsp+0h] [rbp-1C38h]\n  _DWORD *v88; // [rsp+8h] [rbp-1C30h]\n  unsigned int v89; // [rsp+8h] [rbp-1C30h]\n  signed __int64 n; // [rsp+10h] [rbp-1C28h]\n  int v91; // [rsp+18h] [rbp-1C20h]\n  int v92; // [rsp+18h] [rbp-1C20h]\n  int v93; // [rsp+20h] [rbp-1C18h]\n  char v94; // [rsp+20h] [rbp-1C18h]\n  __int64 v95; // [rsp+20h] [rbp-1C18h]\n  unsigned int v96; // [rsp+28h] [rbp-1C10h]\n  int v97; // [rsp+30h] [rbp-1C08h]\n  int v98; // [rsp+38h] [rbp-1C00h]\n  int v99; // [rsp+44h] [rbp-1BF4h]\n  int v100; // [rsp+48h] [rbp-1BF0h]\n  _BYTE *v101; // [rsp+50h] [rbp-1BE8h]\n  int v102; // [rsp+68h] [rbp-1BD0h]\n  char s[1700]; // [rsp+70h] [rbp-1BC8h]\n  char v104[1700]; // [rsp+119h] [rbp-1B1Fh]\n  char v105; // [rsp+714h] [rbp-1524h]\n  char v106[5159]; // [rsp+811h] [rbp-1427h]\n\n  v6 = a6;\n  v7 = a5;\n  v99 = a4;\n  v8 = a2;\n  v9 = a1;\n  v101 = a3;\n  memset(a3, 0, 0x6E4uLL);\n  memset(s, 35, 0x1B90uLL);\n  if ( dword_8A9280 > 0 )\n    fwrite(\"converting pattern into string.\\n\", 0x20uLL, 1uLL, stderr);\n  v98 = v7 + 42;\n  v96 = v6 + 42;\n  v10 = -3528LL;\n  do\n  {\n    *(_OWORD *)&v106[v10 + 3386] = xmmword_4AE190;\n    *(_OWORD *)&v106[v10 + 3376] = xmmword_4AE190;\n    *(_OWORD *)&v106[v10 + 3360] = xmmword_4AE190;\n    *(_OWORD *)&v106[v10 + 3470] = xmmword_4AE190;\n    *(_OWORD *)&v106[v10 + 3460] = xmmword_4AE190;\n    *(_OWORD *)&v106[v10 + 3444] = xmmword_4AE190;\n    *(_OWORD *)&v106[v10 + 3554] = xmmword_4AE190;\n    *(_OWORD *)&v106[v10 + 3544] = xmmword_4AE190;\n    *(_OWORD *)&v106[v10 + 3528] = xmmword_4AE190;\n    v10 += 252LL;\n  }\n  while ( v10 );\n  v11 = a1[8];\n  v100 = a1[6];\n  v12 = v100 + v98;\n  v91 = v100 + v98;\n  v88 = a1;\n  v97 = v6;\n  v102 = v7;\n  if ( v100 + v98 != v7 + v11 + 43 )\n  {\n    v93 = v7 + v11 + 43;\n    v13 = a1[7];\n    v14 = a1[9];\n    v15 = v6 + v14 + 43;\n    v16 = v11 + 1 - v100;\n    v17 = (unsigned int)(v14 - v13) + 1LL;\n    v18 = v16 & 3;\n    if ( (unsigned int)(v11 - v100) >= 3 )\n    {\n      v21 = (unsigned int)(v16 - v18);\n      v22 = &s[84 * v91 + v13 + v96];\n      v19 = 0LL;\n      v20 = v13 + v96;\n      do\n      {\n        if ( v20 != v15 )\n        {\n          v23 = v21;\n          memset(v22, 63, v17);\n          memset(v22 + 84, 63, v17);\n          memset(v22 + 168, 63, v17);\n          memset(v22 + 252, 63, v17);\n          v21 = v23;\n          v20 = v13 + v96;\n        }\n        v19 += 4LL;\n        v22 += 336;\n      }\n      while ( (_DWORD)v21 != (_DWORD)v19 );\n      if ( !v18 )\n        goto LABEL_18;\n    }\n    else\n    {\n      v19 = 0LL;\n      v20 = v13 + v96;\n      if ( !(v16 & 3) )\n      {\nLABEL_18:\n        v12 = v93;\n        v9 = v88;\n        v6 = v97;\n        goto LABEL_19;\n      }\n    }\n    v24 = &s[84 * (v91 + v19) + (signed int)(v13 + v96)];\n    v25 = -v18;\n    do\n    {\n      if ( v20 != v15 )\n        memset(v24, 63, v17);\n      v24 += 84;\n      ++v25;\n    }\n    while ( v25 );\n    goto LABEL_18;\n  }\nLABEL_19:\n  v26 = v9[12];\n  if ( v26 & 2 && v12 != 63 )\n  {\n    v27 = (63 - (_BYTE)v12) & 3;\n    if ( (unsigned int)(62 - v12) < 3 )\n    {\n      v28 = 0LL;\n      if ( !((63 - (_BYTE)v12) & 3) )\n        goto LABEL_29;\n      goto LABEL_27;\n    }\n    v29 = &s[84 * v12];\n    v28 = 0LL;\n    do\n    {\n      *(_OWORD *)(v29 + 47) = xmmword_4AE1A0;\n      *((_OWORD *)v29 + 2) = xmmword_4AE1A0;\n      *((_OWORD *)v29 + 1) = xmmword_4AE1A0;\n      *(_OWORD *)v29 = xmmword_4AE1A0;\n      *(_OWORD *)(v29 + 131) = xmmword_4AE1A0;\n      *(_OWORD *)(v29 + 116) = xmmword_4AE1A0;\n      *(_OWORD *)(v29 + 100) = xmmword_4AE1A0;\n      *(_OWORD *)(v29 + 84) = xmmword_4AE1A0;\n      *(_OWORD *)(v29 + 215) = xmmword_4AE1A0;\n      *(_OWORD *)(v29 + 200) = xmmword_4AE1A0;\n      *(_OWORD *)(v29 + 184) = xmmword_4AE1A0;\n      *(_OWORD *)(v29 + 168) = xmmword_4AE1A0;\n      *(_OWORD *)(v29 + 299) = xmmword_4AE1A0;\n      *(_OWORD *)(v29 + 284) = xmmword_4AE1A0;\n      *(_OWORD *)(v29 + 268) = xmmword_4AE1A0;\n      *(_OWORD *)(v29 + 252) = xmmword_4AE1A0;\n      v28 += 4LL;\n      v29 += 336;\n    }\n    while ( 63 - v12 - v27 != (_DWORD)v28 );\n    if ( (63 - (_BYTE)v12) & 3 )\n    {\nLABEL_27:\n      v30 = &s[84 * (v12 + v28)];\n      v31 = -v27;\n      do\n      {\n        *(_OWORD *)(v30 + 47) = xmmword_4AE1A0;\n        *((_OWORD *)v30 + 2) = xmmword_4AE1A0;\n        *((_OWORD *)v30 + 1) = xmmword_4AE1A0;\n        *(_OWORD *)v30 = xmmword_4AE1A0;\n        v30 += 84;\n        ++v31;\n      }\n      while ( v31 );\n      goto LABEL_29;\n    }\n  }\nLABEL_29:\n  v85 = v12;\n  v94 = v26;\n  if ( v26 & 4 )\n  {\n    v32 = v88[9];\n    v33 = v32 + v96 + 1;\n    v34 = (unsigned int)(19 - v32 - v6) + 1LL;\n    v35 = &v104[v32 + v96];\n    v36 = -5292LL;\n    do\n    {\n      if ( v33 != 63 )\n      {\n        memset(&v35[v36 + 5124], 124, v34);\n        memset(&v35[v36 + 5208], 124, v34);\n        memset(&v35[v36 + 5292], 124, v34);\n      }\n      v36 += 252LL;\n    }\n    while ( v36 );\n  }\n  if ( v94 & 1 && v91 )\n    memset(s, 45, 84LL * (unsigned int)(v100 + v102 + 41) + 84);\n  if ( !(v94 & 8) )\n    goto LABEL_65;\n  if ( v85 )\n  {\n    v37 = v88[7];\n    v38 = -42 - v97;\n    v39 = (unsigned int)(v97 + v37 + 41) + 1LL;\n    v40 = v85 & 3;\n    if ( (unsigned __int64)v85 - 1 >= 3 )\n    {\n      v42 = v85 - v40;\n      v41 = 0LL;\n      v43 = s;\n      v92 = v88[7];\n      do\n      {\n        if ( v37 != v38 )\n        {\n          v44 = v42;\n          memset(v43, 124, v39);\n          memset(v43 + 84, 124, v39);\n          memset(v43 + 168, 124, v39);\n          memset(v43 + 252, 124, v39);\n          v42 = v44;\n          v37 = v92;\n          v38 = -42 - v97;\n        }\n        v41 += 4LL;\n        v43 += 336;\n      }\n      while ( v42 != v41 );\n      if ( !(v85 & 3) )\n        goto LABEL_51;\n    }\n    else\n    {\n      v41 = 0LL;\n      if ( !(v85 & 3) )\n        goto LABEL_51;\n    }\n    v45 = &s[84 * v41];\n    v46 = -v40;\n    do\n    {\n      if ( v37 != v38 )\n        memset(v45, 124, v39);\n      v45 += 84;\n      ++v46;\n    }\n    while ( v46 );\n  }\nLABEL_51:\n  v47 = v85;\n  if ( v85 == 63 || v94 & 2 )\n    goto LABEL_65;\n  v48 = v88[7];\n  v49 = -42 - v97;\n  v50 = 63 - v85;\n  n = (unsigned int)(v48 + v97 + 41) + 1LL;\n  v51 = (63 - (_BYTE)v85) & 3;\n  v86 = v88[7];\n  v95 = (signed int)v47;\n  if ( 62 - v47 < 3 )\n  {\n    v52 = 0LL;\n    if ( !v51 )\n      goto LABEL_65;\n    goto LABEL_61;\n  }\n  v53 = (unsigned int)(v50 - v51);\n  v54 = &s[84 * v47];\n  v52 = 0LL;\n  do\n  {\n    if ( v48 != v49 )\n    {\n      v55 = v53;\n      memset(v54, 124, n);\n      memset(v54 + 84, 124, n);\n      memset(v54 + 168, 124, n);\n      memset(v54 + 252, 124, n);\n      v53 = v55;\n      v49 = -42 - v97;\n      v48 = v86;\n    }\n    v52 += 4LL;\n    v54 += 336;\n  }\n  while ( (_DWORD)v53 != (_DWORD)v52 );\n  if ( v51 )\n  {\nLABEL_61:\n    v56 = &s[84 * (v95 + v52)];\n    v57 = -v51;\n    do\n    {\n      if ( v48 != v49 )\n      {\n        memset(v56, 124, n);\n        v48 = v86;\n      }\n      v56 += 84;\n      ++v57;\n    }\n    while ( v57 );\n  }\nLABEL_65:\n  if ( dword_8A9280 >= 5 )\n  {\n    v77 = &v105;\n    v78 = 20LL;\n    do\n    {\n      v79 = -44LL;\n      do\n      {\n        if ( v78 != v98 || 20LL - v96 + v79 != -44 )\n          v80 = v77[v79 + 44];\n        else\n          v80 = 115;\n        fputc(v80, stderr);\n        ++v79;\n      }\n      while ( v79 );\n      fputc(10, stderr);\n      ++v78;\n      v77 += 84;\n    }\n    while ( v78 != 64 );\n    fputc(10, stderr);\n  }\n  v58 = v88;\n  v87 = v88[2];\n  if ( v88[2] )\n  {\n    v59 = (signed int *)(v8 + 8);\n    v60 = (unsigned int)v88[2];\n    do\n    {\n      s[84 * (*(v59 - 2) + 42) + 42 + *(v59 - 1)] = byte_4B2750[*v59];\n      v59 += 3;\n      --v60;\n    }\n    while ( v60 );\n  }\n  if ( dword_8A9280 >= 4 )\n  {\n    v81 = &v105;\n    v82 = 20LL;\n    do\n    {\n      v83 = -44LL;\n      do\n      {\n        if ( v82 != v98 || 20LL - v96 + v83 != -44 )\n          v84 = v81[v83 + 44];\n        else\n          v84 = 115;\n        fputc(v84, stderr);\n        ++v83;\n      }\n      while ( v83 );\n      fputc(10, stderr);\n      ++v82;\n      v81 += 84;\n    }\n    while ( v82 != 64 );\n    fputc(10, stderr);\n    v58 = v88;\n    v87 = v88[2];\n  }\n  v89 = v58[12];\n  v61 = 15;\n  v62 = 4611686018427373800LL;\n  v63 = 0LL;\n  do\n  {\n    if ( v87 <= 0 && v61 <= 0 && !v89 )\n      break;\n    v64 = dword_91C290[v99 + v62];\n    v65 = v64\n        - 84\n        * (((unsigned __int64)(818089009 * v64) >> 63) + ((signed int)((unsigned __int64)(818089009 * v64) >> 32) >> 4))\n        - 84;\n    if ( (signed int)(dword_91C290[v99 + v62]\n                    - 84\n                    * (((unsigned __int64)(818089009 * v64) >> 63)\n                     + ((signed int)((unsigned __int64)(818089009 * v64) >> 32) >> 4))) <= 41 )\n      v65 = dword_91C290[v99 + v62]\n          - 84\n          * (((unsigned __int64)(818089009 * v64) >> 63) + ((signed int)((unsigned __int64)(818089009 * v64) >> 32) >> 4));\n    v66 = v65 + 84;\n    if ( v65 >= -42 )\n      v66 = v65;\n    v67 = ((unsigned __int64)(818089009LL * ((signed int)v64 - v66)) >> 63)\n        + ((signed int)((unsigned __int64)(818089009LL * ((signed int)v64 - v66)) >> 32) >> 4);\n    v68 = v61 & 0xFFFFFFFD;\n    if ( v67 != v58[8] )\n      v68 = v61;\n    v69 = v68 & 0xFFFFFFFE;\n    if ( v67 != v58[6] )\n      v69 = v68;\n    v70 = v69 & 0xFFFFFFFB;\n    if ( v66 != v58[9] )\n      v70 = v69;\n    v61 = v70 & 0xFFFFFFF7;\n    if ( v66 != v58[7] )\n      v61 = v70;\n    v71 = s[84 * (v67 + v98) + v66 + v96];\n    v101[v63] = v71;\n    v87 = ((unsigned __int64)memchr(\"XOxo.,a!\", v71, 9uLL) < 1) + v87 - 1;\n    if ( memchr(\"#|-+\", v71, 5uLL) )\n    {\n      v72 = v89 & 0xFFFFFFFD;\n      if ( v67 <= v58[8] )\n        v72 = v89;\n      v73 = v72 & 0xFFFFFFFE;\n      if ( v67 >= v58[6] )\n        v73 = v72;\n      v74 = v73 & 0xFFFFFFFB;\n      if ( v66 <= v58[9] )\n        v74 = v73;\n      v75 = v74 & 0xFFFFFFF7;\n      if ( v66 >= v58[7] )\n        v75 = v74;\n      v89 = v75;\n    }\n    ++v63;\n    v62 += 8LL;\n  }\n  while ( v62 * 4 );\n  result = (unsigned int)v63;\n  v101[(unsigned int)v63] = 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x4681b0L", 
            "funcEndAddr": "0x468be3L", 
            "funcName": "sub_4681B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_468BF0(int a1, int a2)\n{\n  __int64 v2; // rbx\n  __int64 v3; // r13\n  int v4; // er14\n  __int64 v5; // r12\n  int v6; // ebp\n  int v7; // er15\n  int v8; // edx\n  __int64 v9; // rax\n  __int64 v10; // rsi\n  __int64 v11; // rdi\n  __int64 v12; // rax\n  signed __int64 v13; // r15\n  int v14; // ecx\n  __int64 v15; // rdx\n  __int64 v16; // rsi\n  int v17; // edx\n  int v18; // esi\n  __int64 v19; // rdx\n  __int64 v20; // rdi\n  __int64 v21; // r12\n  signed __int64 v22; // rsi\n  signed __int64 v23; // r15\n  signed __int64 v24; // r13\n  unsigned int v25; // ebx\n  unsigned int v26; // er14\n  __int64 v27; // rbp\n  __int64 v28; // rax\n  int v29; // ecx\n  __int64 v30; // rdx\n  int v31; // ecx\n  __int64 result; // rax\n  __int64 v33; // r15\n  int v34; // esi\n  int v35; // er13\n  _QWORD *v36; // rax\n  signed __int64 v37; // [rsp+8h] [rbp-50h]\n  signed __int64 v38; // [rsp+8h] [rbp-50h]\n  __int64 v39; // [rsp+10h] [rbp-48h]\n  _DWORD *v40; // [rsp+10h] [rbp-48h]\n  __int64 v41; // [rsp+18h] [rbp-40h]\n  signed __int64 v42; // [rsp+18h] [rbp-40h]\n  signed __int64 v43; // [rsp+20h] [rbp-38h]\n  signed __int64 v44; // [rsp+20h] [rbp-38h]\n\n  v2 = qword_8AA288;\n  v39 = *(signed int *)(qword_8AA288 + 100);\n  v3 = qword_8AA290;\n  v43 = 5LL * a1;\n  v4 = *(_DWORD *)(*(_QWORD *)(qword_8AA290 + 88) + 20LL * a1);\n  v41 = qword_8AA298;\n  v37 = 5LL * a2;\n  LODWORD(v5) = *(_DWORD *)(*(_QWORD *)(qword_8AA298 + 88) + 20LL * a2);\n  if ( !v4 )\n  {\n    v6 = 0;\n    if ( (_DWORD)v5 )\n      goto LABEL_7;\nLABEL_18:\n    v13 = v37;\n    goto LABEL_19;\n  }\n  v6 = *(_DWORD *)(qword_8AA288 + 116);\n  v7 = 0;\n  do\n  {\n    *(_DWORD *)(v2 + 116) = ++v6;\n    v8 = *(_DWORD *)(v2 + 112);\n    if ( v6 >= v8 )\n    {\n      sub_4669C0(v2, *(_DWORD *)(v2 + 96), v8 + 20000);\n      v6 = *(_DWORD *)(v2 + 116);\n    }\n    v9 = *(_QWORD *)(v3 + 104);\n    v10 = *(_QWORD *)(v2 + 104);\n    v11 = v6;\n    *(_DWORD *)(v10 + 8 * v11) = *(_DWORD *)(v9 + 8LL * v4);\n    *(_DWORD *)(v10 + 8 * v11 + 4) = v7;\n    v4 = *(_DWORD *)(v9 + 8LL * v4 + 4);\n    v7 = v6;\n  }\n  while ( v4 );\n  if ( !(_DWORD)v5 )\n    goto LABEL_18;\nLABEL_7:\n  v12 = *(_QWORD *)(v41 + 104);\n  v13 = v37;\n  do\n  {\n    v5 = (signed int)v5;\n    v14 = *(_DWORD *)(v12 + 8LL * (signed int)v5);\n    if ( v6 )\n    {\n      v15 = *(_QWORD *)(v2 + 104);\n      LODWORD(v16) = v6;\n      while ( 1 )\n      {\n        v16 = (signed int)v16;\n        if ( *(_DWORD *)(v15 + 8LL * (signed int)v16) == v14 )\n          break;\n        LODWORD(v16) = *(_DWORD *)(v15 + 8 * v16 + 4);\n        if ( !(_DWORD)v16 )\n          goto LABEL_12;\n      }\n    }\n    else\n    {\nLABEL_12:\n      v17 = *(_DWORD *)(v2 + 112);\n      v18 = *(_DWORD *)(v2 + 116) + 1;\n      *(_DWORD *)(v2 + 116) = v18;\n      if ( v18 >= v17 )\n      {\n        sub_4669C0(v2, *(_DWORD *)(v2 + 96), v17 + 20000);\n        v18 = *(_DWORD *)(v2 + 116);\n        v12 = *(_QWORD *)(v41 + 104);\n        v14 = *(_DWORD *)(v12 + 8 * v5);\n      }\n      v19 = *(_QWORD *)(v2 + 104);\n      v20 = v18;\n      *(_DWORD *)(v19 + 8 * v20) = v14;\n      *(_DWORD *)(v19 + 8 * v20 + 4) = v6;\n      v6 = v18;\n    }\n    LODWORD(v5) = *(_DWORD *)(v12 + 8 * v5 + 4);\n  }\n  while ( (_DWORD)v5 );\nLABEL_19:\n  *(_DWORD *)(*(_QWORD *)(qword_8AA288 + 88) + 20 * v39) = v6;\n  v21 = 0LL;\n  v22 = 4 * v43;\n  v23 = 4 * v13;\n  v24 = 20 * v39;\n  v44 = 4 * v43;\n  v38 = v23;\n  v42 = 20 * v39;\n  do\n  {\n    v25 = *(_DWORD *)(v22 + *(_QWORD *)(qword_8AA290 + 88) + 4 * v21 + 4);\n    v26 = *(_DWORD *)(v23 + *(_QWORD *)(qword_8AA298 + 88) + 4 * v21 + 4);\n    if ( v25 | *(_DWORD *)(v23 + *(_QWORD *)(qword_8AA298 + 88) + 4 * v21 + 4) )\n    {\n      v27 = (signed int)(v26 + v25) % 4096;\n      v28 = (__int64)*(&qword_8AA2A0 + v27);\n      if ( !v28 )\n        goto LABEL_46;\n      v29 = 0;\n      v30 = (__int64)*(&qword_8AA2A0 + v27);\n      do\n      {\n        if ( *(_DWORD *)v30 == v25 && *(_DWORD *)(v30 + 4) == v26 )\n          v29 = *(_DWORD *)(v30 + 8);\n        v30 = *(_QWORD *)(v30 + 16);\n      }\n      while ( v30 );\n      if ( v29 )\n      {\n        v31 = 0;\n        do\n        {\n          if ( *(_DWORD *)v28 == v25 && *(_DWORD *)(v28 + 4) == v26 )\n            v31 = *(_DWORD *)(v28 + 8);\n          v28 = *(_QWORD *)(v28 + 16);\n        }\n        while ( v28 );\n        result = v24 + *(_QWORD *)(qword_8AA288 + 88);\n        *(_DWORD *)(result + 4 * v21 + 4) = v31;\n      }\n      else\n      {\nLABEL_46:\n        v33 = qword_8AA288;\n        v34 = *(_DWORD *)(qword_8AA288 + 96);\n        v35 = *(_DWORD *)(qword_8AA288 + 100) + 1;\n        *(_DWORD *)(qword_8AA288 + 100) = v35;\n        if ( v35 >= v34 )\n        {\n          sub_4669C0(v33, v34 + 20000, *(_DWORD *)(v33 + 112));\n          v33 = qword_8AA288;\n          v40 = (_DWORD *)(qword_8AA288 + 100);\n          v35 = *(_DWORD *)(qword_8AA288 + 100);\n        }\n        else\n        {\n          v40 = (_DWORD *)(v33 + 100);\n        }\n        v36 = malloc(0x18uLL);\n        if ( !v36 )\n        {\n          fwrite(\"No memory left for new entry\\n\", 0x1DuLL, 1uLL, stderr);\n          exit(1);\n        }\n        v36[2] = *(&qword_8AA2A0 + v27);\n        *(_DWORD *)v36 = v25;\n        *((_DWORD *)v36 + 1) = v26;\n        *((_DWORD *)v36 + 2) = v35;\n        *(&qword_8AA2A0 + v27) = v36;\n        v24 = v42;\n        *(_DWORD *)(v42 + *(_QWORD *)(v33 + 88) + 4 * v21 + 4) = *v40;\n        result = sub_468BF0(v25, v26);\n        v22 = v44;\n        v23 = v38;\n      }\n    }\n    else\n    {\n      result = v24 + *(_QWORD *)(qword_8AA288 + 88);\n      *(_DWORD *)(result + 4 * v21 + 4) = 0;\n    }\n    ++v21;\n  }\n  while ( v21 != 4 );\n  return result;\n}\n", 
            "funcStartAddr": "0x468bf0L", 
            "funcEndAddr": "0x468f4aL", 
            "funcName": "sub_468BF0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_468F50(__int64 a1, int a2, signed int a3, int a4)\n{\n  unsigned int v4; // er14\n  __int64 v5; // rax\n  signed __int64 v6; // rbp\n  unsigned int v7; // er15\n  int v8; // eax\n  int v9; // esi\n  signed __int64 v10; // rbx\n  unsigned int v11; // er13\n  int v12; // edx\n  int v13; // edx\n  _BOOL8 v14; // rbp\n\n  v4 = a3;\n  v5 = dword_94F570[a2];\n  v6 = a3 + (signed __int64)dword_94F9F0[a2];\n  v7 = (unsigned __int8)byte_98A1B0[v5 + a3];\n  if ( !byte_98A1B0[v5 + a3] )\n  {\n    v8 = a3 + v5;\n    v9 = (1717986919LL * v8 >> 35) + ((unsigned __int64)(1717986919LL * v8) >> 63);\n    sub_4340E0((__int64)\"patterns/helpers.c\", 0x43u, (__int64)\"board[apos] != EMPTY\", v9 - 1, v8 - 20 * v9 - 1);\n  }\n  v10 = a3 + (signed __int64)dword_94F550[a2];\n  v11 = 3 - v7;\n  if ( byte_98A1B0[v6] != (_BYTE)v7 )\n  {\n    v12 = (1717986919LL * (signed int)v6 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)v6) >> 63);\n    sub_4340E0((__int64)\"patterns/helpers.c\", 0x44u, (__int64)\"board[bpos] == acolor\", v12 - 1, -20 * v12 + v6 - 1);\n  }\n  if ( v11 != (unsigned __int8)byte_98A1B0[v10] )\n  {\n    v13 = (1717986919LL * (signed int)v10 >> 35) + ((unsigned __int64)(1717986919LL * (signed int)v10) >> 63);\n    sub_4340E0((__int64)\"patterns/helpers.c\", 0x45u, (__int64)\"board[cpos] == ccolor\", v13 - 1, v10 - 20 * v13 - 1);\n  }\n  if ( !dword_8E94D4[95 * v10] || (LODWORD(v14) = 0, v11 != a4) && !(unsigned int)sub_40B8D0(v10) )\n  {\n    LODWORD(v14) = 0;\n    if ( !(unsigned int)sub_40B8D0(v4) )\n    {\n      LODWORD(v14) = 0;\n      if ( (unsigned int)sub_406880(v4, v11, \"helper\", 0, 0, 0) )\n      {\n        LODWORD(v14) = 0;\n        if ( (unsigned int)sub_43B050(v4, 0LL) != 5 && (unsigned int)sub_43B050(v10, 0LL) != 5 )\n        {\n          sub_407030();\n          v14 = (unsigned int)sub_43F100(v4, v7) != 0;\n        }\n        else\n        {\n          sub_407030();\n        }\n      }\n    }\n  }\n  return (unsigned int)v14;\n}\n", 
            "funcStartAddr": "0x468f50L", 
            "funcEndAddr": "0x46911aL", 
            "funcName": "sub_468F50"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_469120(__int64 a1, __int64 a2, signed int a3, int a4)\n{\n  int *v4; // rdi\n  bool v5; // bp\n  void *v6; // rdi\n\n  v4 = dword_96CAB0;\n  if ( a4 == 1 )\n    v4 = dword_977370;\n  v5 = v4[9 * a3] != 5 - (a4 == 1);\n  v6 = &unk_927B28;\n  if ( a4 == 2 )\n    v6 = &unk_9333A0;\n  return v5 & (unsigned __int8)((unsigned int)sub_41A570((__int64)v6, a3) != a4);\n}\n", 
            "funcStartAddr": "0x469120L", 
            "funcEndAddr": "0x469178L", 
            "funcName": "sub_469120"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_469180(__int64 a1, __int64 a2, signed int a3, int a4)\n{\n  int v4; // ebx\n  signed int v5; // er14\n  int v6; // ebp\n  void *v7; // rdi\n  int v8; // ecx\n  __int64 result; // rax\n  int *v10; // rdx\n  bool v11; // bp\n  void *v12; // rdi\n\n  v4 = a4;\n  v5 = a3;\n  v6 = 3 - a4;\n  v7 = &unk_927B28;\n  if ( a4 == 2 )\n    v7 = &unk_9333A0;\n  v8 = sub_41A570((__int64)v7, a3);\n  result = 0LL;\n  if ( v8 != v6 )\n  {\n    v10 = dword_96CAB0;\n    if ( v4 == 1 )\n      v10 = dword_977370;\n    v12 = &unk_927B28;\n    if ( v4 == 2 )\n      v12 = &unk_9333A0;\n    v11 = v10[9 * v5] != 5 - (v4 == 1);\n    result = v11 & (unsigned __int8)((unsigned int)sub_41A570((__int64)v12, v5) != v4);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x469180L", 
            "funcEndAddr": "0x469205L", 
            "funcName": "sub_469180"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_469240(__int64 a1, __int64 a2, unsigned int a3, unsigned int a4)\n{\n  unsigned int v4; // ebp\n  unsigned int v5; // er14\n  _BOOL8 v6; // rbx\n  int v7; // eax\n\n  v4 = a4;\n  v5 = a3;\n  LODWORD(v6) = 0;\n  if ( !dword_88C2FC )\n  {\n    LOBYTE(v7) = sub_416240(3 - a4);\n    if ( !v7 )\n      v6 = (unsigned int)sub_43F100(v5, v4) != 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x469240L", 
            "funcEndAddr": "0x46927cL", 
            "funcName": "sub_469240"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_469280(__int64 a1, int a2, signed int a3, unsigned int a4)\n{\n  unsigned int v4; // ebp\n  __int64 v5; // r13\n  signed __int64 v6; // rbx\n  int v7; // er14\n  unsigned int v8; // er12\n  _BOOL8 v9; // r15\n  __int64 v10; // rsi\n  signed __int64 v11; // rbx\n  unsigned int v13; // [rsp+4h] [rbp-44h]\n  unsigned int v14; // [rsp+8h] [rbp-40h]\n  unsigned int v15; // [rsp+Ch] [rbp-3Ch]\n  __int64 v16; // [rsp+10h] [rbp-38h]\n\n  v13 = a4;\n  v4 = a3;\n  v5 = a3;\n  v6 = a3 + (signed __int64)dword_94FEB0[a2];\n  v7 = dword_94FE90[a2];\n  v16 = dword_94FED0[a2];\n  sub_408410(v6, 2, (unsigned __int64)&v14);\n  v8 = v14;\n  if ( v14 == (_DWORD)v5 )\n    v8 = v15;\n  LODWORD(v9) = 0;\n  v10 = v13;\n  if ( (unsigned int)sub_406880(v4, v13, \"helper\", 0, 0, 0) )\n  {\n    LODWORD(v9) = 0;\n    v10 = 0LL;\n    if ( !(unsigned int)sub_43B050(v4 + v7, 0LL) )\n    {\n      if ( byte_98A1B0[v5 + v16] == 3\n        || (LODWORD(v9) = 0, v10 = 0LL, !(unsigned int)sub_43B050((signed int)v5 + (signed int)v16, 0LL)) )\n      {\n        v10 = 3 - v13;\n        if ( (unsigned int)sub_406880(v8, v10, \"helper\", 0, 0, 0) )\n        {\n          v10 = 0LL;\n          v9 = (unsigned int)sub_43B050(v6, 0LL) != 0;\n          sub_407030();\n        }\n        else\n        {\n          LODWORD(v9) = 1;\n        }\n      }\n    }\n    sub_407030();\n  }\n  v11 = 95 * v6;\n  sub_422820(v4, *(float *)&dword_8E9478[v11] + *(float *)&dword_8E9478[v11]);\n  if ( dword_88C268 )\n    sub_433F90(\"...followup value %f\\n\", v10, (float)(*(float *)&dword_8E9478[v11] + *(float *)&dword_8E9478[v11]));\n  return (unsigned int)v9;\n}\n", 
            "funcStartAddr": "0x469280L", 
            "funcEndAddr": "0x4693c9L", 
            "funcName": "sub_469280"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4693D0(signed int a1, signed int a2)\n{\n  signed __int64 v2; // rcx\n\n  if ( dword_8E9474[95 * a1] <= 2 )\n  {\n    sub_4203A0(a2, a1);\n    v2 = 104LL * *((signed int *)&xmmword_954FB0 + 19 * a2 + 1);\n    if ( *(_DWORD *)((char *)ptr + v2 + 84) == a1 )\n      *(_DWORD *)((char *)ptr + v2 + 84) = 0;\n  }\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x4693d0L", 
            "funcEndAddr": "0x469428L", 
            "funcName": "sub_4693D0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_469430(int a1)\n{\n  __int64 v1; // rcx\n  signed __int64 result; // rax\n  __int64 v3; // rdx\n  int v4[162]; // [rsp+0h] [rbp-288h]\n\n  LODWORD(v1) = sub_40A7D0(a1, (__int64)v4);\n  result = 1LL;\n  if ( (signed int)v1 > 0 )\n  {\n    v1 = (signed int)v1;\n    v3 = 0LL;\n    while ( !dword_8E94D4[95 * v4[v3]] )\n    {\n      if ( ++v3 >= v1 )\n        return result;\n    }\n    result = 0LL;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x469430L", 
            "funcEndAddr": "0x46947fL", 
            "funcName": "sub_469430"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4694B0(__int64 a1, int a2, signed int a3)\n{\n  unsigned int v3; // er15\n  __int64 v4; // r13\n  signed __int64 v5; // rbp\n  signed __int64 v6; // r12\n  __int64 v7; // rbx\n  __int64 v8; // r14\n  __int64 v9; // rbx\n  __int64 v10; // rdi\n  __int64 v12; // r14\n\n  v3 = a3;\n  v4 = a3;\n  v5 = a3 + (signed __int64)dword_94F550[a2];\n  v6 = 95 * v5;\n  if ( dword_8E9524[95 * v5] )\n  {\n    v7 = dword_94F9F0[a2];\n    v8 = dword_94F570[a2];\n    if ( (unsigned int)sub_406880((unsigned int)dword_8E94FC[v6], (unsigned __int8)byte_98A1B0[v5], \"helper\", 0, 0, 0) )\n    {\n      v9 = v4 + v7;\n      if ( !byte_98A1B0[v9]\n        || (unsigned int)sub_43B050(v9, 0LL)\n        || (v12 = v4 + v8, !byte_98A1B0[v12])\n        || (unsigned int)sub_43B050(v12, 0LL)\n        || (unsigned int)sub_43F100(v3, (unsigned __int8)byte_98A1B0[v5]) )\n      {\n        sub_407030();\n        v10 = dword_8E947C[v6];\n        ++*((_DWORD *)&qword_8E9494 + 95 * v10 + 1);\n        sub_456130(v10);\n      }\n      else\n      {\n        sub_407030();\n      }\n    }\n  }\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x4694b0L", 
            "funcEndAddr": "0x469595L", 
            "funcName": "sub_4694B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4695A0(int a1, unsigned int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er14\n  int v5; // edx\n  int v6; // edx\n  unsigned int v7; // ebx\n\n  v4 = a3;\n  if ( (unsigned __int8)(byte_98A1B0[a4] - 1) >= 2u )\n  {\n    v5 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      (__int64)\"patterns/helpers.c\",\n      0x16Fu,\n      (__int64)\"(color == BLACK || color == WHITE)\",\n      v5 - 1,\n      a1 - 20 * v5 - 1);\n  }\n  if ( !(unsigned int)sub_406880((unsigned int)a1, (unsigned __int8)byte_98A1B0[a4], \"helper\", 0, 0, 0) )\n    return 0LL;\n  if ( (unsigned int)sub_4083A0(a1) != 2 )\n  {\n    v6 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0((__int64)\"patterns/helpers.c\", 0x172u, (__int64)\"countlib(move) == 2\", v6 - 1, a1 - 20 * v6 - 1);\n  }\n  v7 = sub_469690((unsigned int)a1, a2, v4);\n  sub_407030();\n  return v7;\n}\n", 
            "funcStartAddr": "0x4695a0L", 
            "funcEndAddr": "0x469690L", 
            "funcName": "sub_4695A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_469690(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er15\n  unsigned int v4; // er12\n  int v5; // ebx\n  unsigned int v6; // ebp\n  unsigned int v7; // er13\n  signed __int64 v8; // rax\n  signed int v9; // ebx\n  unsigned int v10; // er14\n  unsigned int v12; // [rsp+10h] [rbp-38h]\n  unsigned int v13; // [rsp+14h] [rbp-34h]\n\n  v3 = a3;\n  v4 = (unsigned __int8)byte_98A1B0[a1];\n  v5 = sub_408410(a1, 2, (unsigned __int64)&v12);\n  if ( 2 - v4 >= 2 )\n    sub_4340E0((__int64)\"patterns/helpers.c\", 0x274u, (__int64)\"((color) == 1 || (color) == 2)\", 0xFFFFFFFF, 0xFFFFFFFF);\n  if ( v5 != 2 )\n    sub_4340E0((__int64)\"patterns/helpers.c\", 0x275u, (__int64)\"liberties == 2\", 0xFFFFFFFF, 0xFFFFFFFF);\n  v6 = 3 - v4;\n  v7 = v12;\n  if ( v12 == a2 )\n    v7 = v13;\n  if ( v6 == (unsigned __int8)byte_98A1B0[dword_5641B0[0] + (signed __int64)(signed int)v3]\n    && (unsigned int)sub_40B380(v3 + dword_5641B0[0], a1) )\n  {\n    v8 = 0LL;\n  }\n  else if ( v6 == (unsigned __int8)byte_98A1B0[dword_5641B4 + (signed __int64)(signed int)v3]\n         && (unsigned int)sub_40B380(v3 + dword_5641B4, a1) )\n  {\n    v8 = 1LL;\n  }\n  else if ( v6 == (unsigned __int8)byte_98A1B0[dword_5641B8 + (signed __int64)(signed int)v3]\n         && (unsigned int)sub_40B380(v3 + dword_5641B8, a1) )\n  {\n    v8 = 2LL;\n  }\n  else\n  {\n    if ( v6 != (unsigned __int8)byte_98A1B0[dword_5641BC + (signed __int64)(signed int)v3]\n      || !(unsigned int)sub_40B380(v3 + dword_5641BC, a1) )\n    {\nLABEL_20:\n      sub_4340E0((__int64)\"patterns/helpers.c\", 0x283u, (__int64)\"epos != 0\", 0xFFFFFFFF, 0xFFFFFFFF);\n    }\n    v8 = 3LL;\n  }\n  v9 = v3 + dword_5641B0[v8];\n  if ( !v9 )\n    goto LABEL_20;\n  v10 = 0;\n  if ( (unsigned int)sub_406880(a2, v6, \"helper\", 0, 0, 0) )\n  {\n    v10 = 0;\n    if ( (unsigned int)sub_406880(v7, v4, \"helper\", 0, 0, 0) )\n    {\n      v10 = 0;\n      if ( (unsigned int)sub_406880(v3, v4, \"helper\", 0, 0, 0) )\n      {\n        if ( !byte_98A1B0[a2] || !byte_98A1B0[v9] || (v10 = 0, !(unsigned int)sub_43E680(a2, v9)) )\n          v10 = 1;\n        sub_407030();\n      }\n      sub_407030();\n    }\n    sub_407030();\n  }\n  return v10;\n}\n", 
            "funcStartAddr": "0x469690L", 
            "funcEndAddr": "0x4698acL", 
            "funcName": "sub_469690"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4698B0(signed int a1, int a2)\n{\n  signed __int64 v2; // rbx\n  float v3; // xmm0_4\n  signed __int64 result; // rax\n\n  v2 = 95LL * a2;\n  v3 = *(float *)&dword_8E9478[v2] + *(float *)&dword_8E9478[v2] + 2.0;\n  result = sub_422820(a1, v3);\n  if ( dword_88C268 )\n    result = sub_433F90(\"...followup value %f\\n\", *(float *)&dword_8E9478[v2] + *(float *)&dword_8E9478[v2] + 2.0);\n  return result;\n}\n", 
            "funcStartAddr": "0x4698b0L", 
            "funcEndAddr": "0x46990fL", 
            "funcName": "sub_4698B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_469910(unsigned int a1, int a2)\n{\n  unsigned int v2; // er15\n  int v3; // eax\n  __int64 v4; // rbp\n  __int64 v5; // rbx\n  __int64 v6; // rsi\n  __int64 result; // rax\n  __int64 v8; // rsi\n  unsigned int v9; // [rsp+Ch] [rbp-2ACh]\n  int v10[170]; // [rsp+10h] [rbp-2A8h]\n\n  v2 = a2;\n  v3 = sub_40A880(a2, (__int64)v10, 1);\n  if ( v3 <= 0 )\n  {\nLABEL_6:\n    result = sub_406880(a1, 3 - (unsigned int)(unsigned __int8)byte_98A1B0[v2], \"helper\", 0, 0, 0);\n    if ( !(_DWORD)result )\n      return result;\n    v8 = (__int64)&v9;\n    if ( (unsigned int)sub_43B6F0(result, v2, &v9) )\n    {\n      if ( v9 )\n      {\n        v8 = (unsigned __int8)byte_98A1B0[v2];\n        if ( (unsigned int)sub_406880(v9, v8, \"helper\", 0, 0, 0) )\n        {\n          if ( !byte_98A1B0[a1] || (v8 = 0LL, (unsigned int)sub_43B050(a1, 0LL)) )\n          {\n            sub_407030();\n            return sub_407030();\n          }\n          sub_407030();\n        }\n      }\n    }\n    sub_407030();\n    result = sub_422820(a1, *(float *)&dword_8E9478[95 * v2] + *(float *)&dword_8E9478[95 * v2]);\n    if ( dword_88C268 )\n      result = sub_433F90(\n                 \"...followup value %f\\n\",\n                 v8,\n                 *(float *)&dword_8E9478[95 * v2] + *(float *)&dword_8E9478[95 * v2]);\n  }\n  else\n  {\n    v4 = v3;\n    v5 = 0LL;\n    while ( 1 )\n    {\n      v6 = v10[v5];\n      if ( dword_8E9524[95 * v6] )\n      {\n        result = sub_44B0A0(a1, v6);\n        if ( !(_DWORD)result )\n          break;\n      }\n      if ( ++v5 >= v4 )\n        goto LABEL_6;\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x469910L", 
            "funcEndAddr": "0x469a57L", 
            "funcName": "sub_469910"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_469A60(unsigned int a1, int a2)\n{\n  int v2; // er14\n  int v3; // edx\n  int v4; // eax\n  __int64 v5; // rbp\n  __int64 v6; // rbx\n  __int64 v7; // rsi\n  signed __int64 result; // rax\n  float *v9; // rbx\n  unsigned int v10; // [rsp+8h] [rbp-2B0h]\n  unsigned int v11; // [rsp+Ch] [rbp-2ACh]\n  int v12[170]; // [rsp+10h] [rbp-2A8h]\n\n  v2 = a2;\n  if ( (unsigned int)sub_4083A0(a2) != 2 )\n  {\n    v3 = (1717986919LL * a2 >> 35) + ((unsigned __int64)(1717986919LL * a2) >> 63);\n    sub_4340E0((__int64)\"patterns/helpers.c\", 0x1D0u, (__int64)\"countlib(str) == 2\", v3 - 1, a2 - 20 * v3 - 1);\n  }\n  v4 = sub_40A880(a2, (__int64)v12, 1);\n  if ( v4 <= 0 )\n  {\nLABEL_8:\n    sub_408410(v2, 2, (unsigned __int64)&v10);\n    if ( (unsigned int)sub_43F100(v10, 3 - (unsigned int)(unsigned __int8)byte_98A1B0[v2])\n      || (result = sub_43F100(v11, 3 - (unsigned int)(unsigned __int8)byte_98A1B0[v2]), (_DWORD)result) )\n    {\n      v9 = (float *)&dword_8E9478[95 * v2];\n      if ( dword_88C268 )\n        sub_433F90(\"...reverse followup value %f\\n\", *v9 + *v9);\n      result = sub_4228B0(a1, *v9 + *v9);\n    }\n  }\n  else\n  {\n    v5 = v4;\n    v6 = 0LL;\n    while ( 1 )\n    {\n      v7 = v12[v6];\n      if ( dword_8E9524[95 * v7] )\n      {\n        result = sub_44B0A0(a1, v7);\n        if ( !(_DWORD)result )\n          break;\n      }\n      if ( ++v6 >= v5 )\n        goto LABEL_8;\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x469a60L", 
            "funcEndAddr": "0x469babL", 
            "funcName": "sub_469A60"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_469BB0(signed int a1, signed int a2, signed int a3)\n{\n  signed int v3; // er14\n  signed __int64 result; // rax\n\n  v3 = a3;\n  result = sub_414710(a1, a2);\n  if ( !(_DWORD)result )\n  {\n    result = sub_414710(a2, v3);\n    if ( !(_DWORD)result )\n    {\n      if ( *((float *)&xmmword_954FC0 + 19 * a1) < *((float *)&xmmword_954FC0 + 19 * v3) )\n      {\n        a1 = a2;\n        a2 = v3;\n      }\n      result = sub_415400(a1, a2);\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x469bb0L", 
            "funcEndAddr": "0x469c0aL", 
            "funcName": "sub_469BB0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_469C10(int a1)\n{\n  int v1; // eax\n  __int64 v2; // r12\n  __int64 v3; // rbx\n  int v4; // ebp\n  int v6; // [rsp+Ch] [rbp-2ACh]\n  int v7[170]; // [rsp+10h] [rbp-2A8h]\n\n  v1 = sub_40A880(a1, (__int64)v7, 1);\n  if ( v1 <= 0 )\n    return 0LL;\n  v2 = v1;\n  v3 = 0LL;\n  while ( 1 )\n  {\n    v4 = v7[v3];\n    if ( (unsigned int)sub_40A5F0(v7[v3]) == 1 )\n    {\n      sub_408410(v4, 1, (unsigned __int64)&v6);\n      if ( (unsigned int)sub_408130(v6, (unsigned __int8)byte_98A1B0[a1], 0LL) )\n        break;\n    }\n    if ( ++v3 >= v2 )\n      return 0LL;\n  }\n  return 1LL;\n}\n", 
            "funcStartAddr": "0x469c10L", 
            "funcEndAddr": "0x469ca8L", 
            "funcName": "sub_469C10"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_469CB0(int a1)\n{\n  int v1; // edx\n  __int64 v2; // rbp\n  int v4[8]; // [rsp+8h] [rbp-20h]\n\n  if ( (unsigned int)sub_408410(a1, 2, (unsigned __int64)v4) != 2 )\n  {\n    v1 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0((__int64)\"patterns/helpers.c\", 0x223u, (__int64)\"liberties == 2\", v1 - 1, a1 - 20 * v1 - 1);\n  }\n  v2 = 0LL;\n  while ( !(unsigned int)sub_408130(v4[v2], 3 - (unsigned int)(unsigned __int8)byte_98A1B0[a1], 0LL) )\n  {\n    if ( ++v2 >= 2 )\n      return 0LL;\n  }\n  return 1LL;\n}\n", 
            "funcStartAddr": "0x469cb0L", 
            "funcEndAddr": "0x469d58L", 
            "funcName": "sub_469CB0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_469D60(__int64 a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // ebx\n  unsigned int v4; // ebp\n  __int64 v5; // rax\n  unsigned int v7; // [rsp+Ch] [rbp-1Ch]\n\n  v3 = a3;\n  v4 = (unsigned __int8)byte_98A1B0[a3];\n  v7 = 0;\n  if ( (unsigned int)sub_406880(a1, v4, \"helper\", 0, 0, 0) )\n  {\n    if ( (unsigned int)sub_406880(a2, 3 - v4, \"helper\", 0, 0, 0) )\n    {\n      v5 = sub_43B050(v3, 0LL);\n      if ( (_DWORD)v5 )\n      {\n        if ( (unsigned int)sub_43B6F0(v5, v3, &v7) )\n        {\n          sub_422940(v7, 0.1);\n          if ( dword_88C268 )\n            sub_433F90(\"%o...setting min move value of %1m to 0.1\\n\", v7, COERCE_DOUBLE(1036831949LL));\n        }\n      }\n      sub_407030();\n    }\n    sub_407030();\n  }\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x469d60L", 
            "funcEndAddr": "0x469e13L", 
            "funcName": "sub_469D60"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_469E20(int a1, int a2)\n{\n  signed __int64 v2; // rcx\n  signed __int64 result; // rax\n\n  v2 = 76LL * a2;\n  if ( *((_DWORD *)&xmmword_954FC0 + 19 * a2 + 3) != 2\n    || (result = 1LL, *(_DWORD *)((char *)&xmmword_954FD0 + v2) != a1) )\n  {\n    if ( *((_DWORD *)&xmmword_954FC0 + 19 * a2 + 2) != 11\n      || (result = 1LL, *(_DWORD *)((char *)&xmmword_954FD0 + v2) != a1)\n      && *((_DWORD *)&xmmword_954FD0 + 19 * a2 + 3) != a1 )\n    {\n      result = 0LL;\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x469e20L", 
            "funcEndAddr": "0x469e5eL", 
            "funcName": "sub_469E20"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_469E60@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, unsigned int a3@<ecx>, unsigned int a4@<edi>, unsigned int a5@<esi>)\n{\n  unsigned int v5; // er13\n  unsigned int v6; // er15\n  unsigned int v7; // er14\n  unsigned int v8; // ebp\n  signed __int64 v9; // rax\n  signed int v10; // ebx\n  __int64 v11; // rax\n  __int64 v13; // [rsp+0h] [rbp-38h]\n\n  v13 = a1;\n  v5 = a3;\n  v6 = a2;\n  if ( a3 - 1 >= 2 )\n    sub_4340E0((__int64)\"patterns/helpers.c\", 0x2ACu, (__int64)\"((color) == 1 || (color) == 2)\", 0xFFFFFFFF, 0xFFFFFFFF);\n  v7 = 0;\n  if ( (unsigned int)sub_406880(a4, a3, \"helper\", 0, 0, 0) )\n  {\n    v8 = 3 - v5;\n    if ( 3 - v5 == (unsigned __int8)byte_98A1B0[dword_5641B0[0] + (signed __int64)(signed int)v6]\n      && (unsigned int)sub_40B380(v6 + dword_5641B0[0], a4) )\n    {\n      v9 = 0LL;\n    }\n    else if ( v8 == (unsigned __int8)byte_98A1B0[dword_5641B4 + (signed __int64)(signed int)v6]\n           && (unsigned int)sub_40B380(v6 + dword_5641B4, a4) )\n    {\n      v9 = 1LL;\n    }\n    else if ( v8 == (unsigned __int8)byte_98A1B0[dword_5641B8 + (signed __int64)(signed int)v6]\n           && (unsigned int)sub_40B380(v6 + dword_5641B8, a4) )\n    {\n      v9 = 2LL;\n    }\n    else\n    {\n      if ( v8 != (unsigned __int8)byte_98A1B0[dword_5641BC + (signed __int64)(signed int)v6]\n        || !(unsigned int)sub_40B380(v6 + dword_5641BC, a4) )\n      {\nLABEL_17:\n        sub_4340E0((__int64)\"patterns/helpers.c\", 0x2B7u, (__int64)\"epos != 0\", 0xFFFFFFFF, 0xFFFFFFFF);\n      }\n      v9 = 3LL;\n    }\n    v10 = v6 + dword_5641B0[v9];\n    if ( !v10 )\n      goto LABEL_17;\n    v7 = 0;\n    v11 = sub_406880(a5, v8, \"helper\", 0, 0, 0);\n    if ( (_DWORD)v11 )\n    {\n      if ( !(unsigned int)sub_43B6F0(v11, a4, (_DWORD *)&v13 + 1) || !HIDWORD(v13) )\n      {\n        sub_407030();\n        sub_407030();\n        return 0;\n      }\n      v7 = 0;\n      if ( (unsigned int)sub_406880(HIDWORD(v13), v5, \"helper\", 0, 0, 0) )\n      {\n        v7 = 0;\n        if ( (unsigned int)sub_406880(v6, v5, \"helper\", 0, 0, 0) )\n        {\n          if ( !byte_98A1B0[a5] || !byte_98A1B0[v10] || (v7 = 0, !(unsigned int)sub_43E680(a5, v10)) )\n            v7 = 1;\n          sub_407030();\n        }\n        sub_407030();\n      }\n      sub_407030();\n    }\n    sub_407030();\n  }\n  return v7;\n}\n", 
            "funcStartAddr": "0x469e60L", 
            "funcEndAddr": "0x46a07cL", 
            "funcName": "sub_469E60"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_46A080(signed int a1)\n{\n  int v1; // edx\n  __int64 v2; // rcx\n  bool result; // al\n\n  if ( (unsigned int)a1 > 0x1A4 || byte_98A1B0[a1] == 3 )\n  {\n    v1 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0((__int64)\"patterns/helpers.c\", 0x2D8u, (__int64)\"ON_BOARD1(pos)\", v1 - 1, a1 - 20 * v1 - 1);\n  }\n  v2 = *((signed int *)&xmmword_954FB0 + 19 * a1 + 1);\n  result = 1;\n  if ( v2 >= 0 && (signed int)v2 < dword_98A7DC )\n    result = *((float *)ptr + 26 * v2 + 16) > 0.40001;\n  return result;\n}\n", 
            "funcStartAddr": "0x46a080L", 
            "funcEndAddr": "0x46a115L", 
            "funcName": "sub_46A080"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46A120(signed int a1, unsigned int a2, signed int a3, signed int a4)\n{\n  unsigned int v4; // er12\n  char v5; // al\n  int v6; // edx\n  int v7; // edx\n  int v8; // eax\n  int v9; // ebx\n  int v10; // edx\n  __int64 result; // rax\n  signed int v12; // [rsp+0h] [rbp-34h]\n\n  v12 = a4;\n  v4 = a3;\n  if ( (unsigned int)a1 > 0x1A4 || (v5 = byte_98A1B0[a1], v5 == 3) )\n  {\n    v6 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0((__int64)\"patterns/helpers.c\", 0x2E5u, (__int64)\"ON_BOARD1(move)\", v6 - 1, -20 * v6 + a1 - 1);\n  }\n  if ( v5 )\n  {\n    v7 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0((__int64)\"patterns/helpers.c\", 0x2E6u, (__int64)\"board[move] == EMPTY\", v7 - 1, -20 * v7 + a1 - 1);\n  }\n  v8 = (unsigned __int8)byte_98A1B0[a3];\n  v9 = 3 - a2;\n  if ( 3 - a2 != v8 || (_BYTE)v8 != byte_98A1B0[a4] )\n  {\n    v10 = (1717986919LL * a1 >> 35) + ((unsigned __int64)(1717986919LL * a1) >> 63);\n    sub_4340E0(\n      (__int64)\"patterns/helpers.c\",\n      0x2E8u,\n      (__int64)\"board[worma] == OTHER_COLOR(color) && board[wormb] == OTHER_COLOR(color)\",\n      v10 - 1,\n      -20 * v10 + a1 - 1);\n  }\n  result = sub_43E680(a3, a4);\n  if ( (_DWORD)result )\n  {\n    result = sub_406880((unsigned int)a1, a2, \"test_attack_either_move\", v4, 0, 0);\n    if ( (_DWORD)result )\n    {\n      if ( v9 == (unsigned __int8)byte_98A1B0[v4]\n        && v9 == (unsigned __int8)byte_98A1B0[v12]\n        && !(unsigned int)sub_43E680(v4, v12) )\n      {\n        sub_421B30(a1, 1, v4, 1, v12);\n      }\n      result = sub_407030();\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x46a120L", 
            "funcEndAddr": "0x46a2ceL", 
            "funcName": "sub_46A120"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_46A2D0()\n{\n  __int64 v0; // r9\n  char *v1; // r8\n  int v2; // esi\n  int v3; // ecx\n  int v4; // eax\n  int v5; // edx\n  int v6; // er11\n  int v7; // er10\n  int v8; // ecx\n  unsigned int v9; // er14\n  signed __int64 v10; // r15\n  char *v11; // rsi\n  signed __int64 v12; // rbx\n  __int64 result; // rax\n  int v14; // ebp\n\n  v0 = 0LL;\n  v1 = (char *)&unk_94A4B0;\n  do\n  {\n    v2 = dword_4B2760[4 * v0];\n    v3 = dword_4B2764[4 * v0];\n    v4 = dword_4B276C[4 * v0];\n    v5 = -360 * v3;\n    v6 = -17 * dword_4B2768[4 * v0] - 18 * v4 - 340 * v2;\n    v7 = v4 + 20 * v3;\n    v8 = 2 * dword_4B2768[4 * v0] + 40 * v2;\n    v9 = -18 * v4 - 18 * dword_4B2768[4 * v0] - 360 * v2;\n    v10 = -18LL;\n    v11 = v1;\n    do\n    {\n      v12 = -1152LL;\n      result = v9;\n      v14 = v6;\n      while ( 1 )\n      {\n        *(_DWORD *)&v11[v12 + 1120] = v5 + result;\n        if ( !v12 )\n          break;\n        *(_DWORD *)&v11[v12 + 1152] = v5 + v14;\n        v12 += 64LL;\n        v14 += v8;\n        result = (unsigned int)(v8 + result);\n      }\n      ++v10;\n      v6 += v7;\n      v11 += 1184;\n      v9 += v7;\n    }\n    while ( v10 != 19 );\n    ++v0;\n    v1 += 4;\n  }\n  while ( v0 != 8 );\n  return result;\n}\n", 
            "funcStartAddr": "0x46a2d0L", 
            "funcEndAddr": "0x46a3c1L", 
            "funcName": "sub_46A2D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46A410@<rax>(char a1@<al>, int a2@<edx>, int a3@<edi>, int a4@<esi>, __int64 a5@<r8>, __int64 a6@<r9>, __m128 a7@<xmm0>, __m128 a8@<xmm1>, __m128 a9@<xmm2>, __m128 a10@<xmm3>, __m128 a11@<xmm4>, __m128 a12@<xmm5>, __m128 a13@<xmm6>, __m128 a14@<xmm7>)\n{\n  int v14; // er14\n  int v15; // er15\n  _BOOL4 v16; // ebp\n  __int64 v17; // r8\n  __int64 v18; // r9\n  __m128 v19; // xmm4\n  __m128 v20; // xmm5\n  char v22; // [rsp-8h] [rbp-28h]\n\n  v14 = a2;\n  v15 = dword_94FE90[a3];\n  v16 = 1;\n  if ( !(unsigned int)sub_44B230(\n                        a2,\n                        0,\n                        1,\n                        (unsigned int)(a4 + dword_94F550[a3]),\n                        a5,\n                        a6,\n                        a7,\n                        a8,\n                        a9,\n                        a10,\n                        a11,\n                        a12,\n                        a13,\n                        a14,\n                        a1) )\n    v16 = (unsigned __int64)sub_44B230(\n                              v14,\n                              0,\n                              1,\n                              (unsigned int)(a4 + v15),\n                              v17,\n                              v18,\n                              a7,\n                              a8,\n                              a9,\n                              a10,\n                              v19,\n                              v20,\n                              a13,\n                              a14,\n                              v22) == 0;\n  return (unsigned int)v16;\n}\n", 
            "funcStartAddr": "0x46a410L", 
            "funcEndAddr": "0x46a476L", 
            "funcName": "sub_46A410"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46A4D0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebp\n  int v6; // er15\n  int v7; // er13\n  _BOOL4 v8; // ebx\n\n  v4 = a2;\n  v5 = a4 + dword_94F9F0[a3];\n  v6 = dword_94F9D0[a3];\n  v7 = dword_94F090[a3];\n  v8 = 1;\n  if ( !(unsigned int)sub_44B7B0(a2, 1, 2, a4, v5, v5, a1) )\n    v8 = (unsigned __int64)sub_44B7B0(v4, 1, 4, a4, v5, a4 + v6, a4 + v7, a4) == 0;\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x46a4d0L", 
            "funcEndAddr": "0x46a56aL", 
            "funcName": "sub_46A4D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46A570@<rax>(char a1@<al>, int a2@<edx>, int a3@<edi>, int a4@<esi>, __int64 a5@<r8>, __int64 a6@<r9>, __m128 a7@<xmm0>, __m128 a8@<xmm1>, __m128 a9@<xmm2>, __m128 a10@<xmm3>, __m128 a11@<xmm4>, __m128 a12@<xmm5>, __m128 a13@<xmm6>, __m128 a14@<xmm7>)\n{\n  signed __int64 v14; // rbx\n  _BOOL4 v15; // ebp\n  int v16; // eax\n\n  v14 = dword_94F0D0[a3] + (signed __int64)a4;\n  v15 = 1;\n  if ( (unsigned int)sub_44B230(3 - a2, 0, 1, (unsigned int)v14, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a1) )\n  {\n    if ( dword_98A7F4 )\n      v16 = sub_43B050(v14, 0LL);\n    else\n      v16 = dword_8E94D4[95 * v14];\n    v15 = v16 != 0;\n  }\n  return (unsigned int)v15;\n}\n", 
            "funcStartAddr": "0x46a570L", 
            "funcEndAddr": "0x46a5d6L", 
            "funcName": "sub_46A570"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46A740(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er13\n  int v4; // er15\n  __int64 v5; // rbp\n  __int64 v6; // r12\n  __int64 v7; // r14\n  __int64 v8; // r15\n  unsigned int v10; // [rsp+8h] [rbp-40h]\n  unsigned int v11; // [rsp+Ch] [rbp-3Ch]\n  __int64 v12; // [rsp+10h] [rbp-38h]\n\n  v3 = a2 + dword_94F530[a1];\n  v4 = dword_94F090[a1];\n  v11 = a2 + dword_94F9F0[a1];\n  v5 = a2 + dword_94FEB0[a1];\n  v12 = a2 + dword_94F0D0[a1];\n  v6 = a2 + dword_94FA30[a1];\n  v7 = a2 + dword_94F0B0[a1];\n  v10 = a3;\n  if ( (unsigned int)sub_4099C0(v3, 3 - a3, 20, 0LL) != 1 && (signed int)sub_4083A0(a2 + v4) < 3 )\n  {\n    LODWORD(v5) = 0;\n  }\n  else\n  {\n    v8 = v5;\n    LODWORD(v5) = 0;\n    if ( (signed int)sub_4083A0(v7) <= 3 )\n    {\n      LODWORD(v5) = 0;\n      if ( (signed int)sub_4099C0(v12, v10, 20, 0LL) >= 2 )\n      {\n        LODWORD(v5) = 0;\n        if ( (unsigned int)sub_44B7B0(v10, 1, 6, a2, v11, v3, v8, v12, v6, v7) )\n          v5 = (unsigned int)sub_44B7B0(v10, 0, 4, a2, v11, v3, v12, a2) != 0;\n      }\n    }\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x46a740L", 
            "funcEndAddr": "0x46a886L", 
            "funcName": "sub_46A740"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46A890(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // er15\n  int v5; // er12\n  unsigned int v6; // ebx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94F9F0[a1];\n  v5 = dword_94FE70[a1];\n  v6 = a2 + dword_94FE90[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94F9D0[a1]) <= 0 && (signed int)sub_430BC0(a2 + v5) <= 0 )\n    result = 1LL;\n  else\n    result = (unsigned int)sub_44B7B0(v3, 1, 2, a2, v4, v6) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46a890L", 
            "funcEndAddr": "0x46a912L", 
            "funcName": "sub_46A890"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_46A940@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er15\n  unsigned int v6; // ebx\n  signed int v7; // ecx\n  _BOOL8 result; // rax\n  __int64 v9; // [rsp-8h] [rbp-28h]\n\n  v9 = a1;\n  v4 = a2;\n  v5 = dword_94F570[a3];\n  v6 = a4 + dword_94F9F0[a3];\n  v7 = sub_4083A0(v6);\n  result = 0LL;\n  if ( v7 <= 3 )\n    result = (unsigned int)sub_44B7B0(v4, 1, 2, a4, a4 + v5, v6, v9) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46a940L", 
            "funcEndAddr": "0x46a9a3L", 
            "funcName": "sub_46A940"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46A9E0@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  __int64 v4; // r15\n  int v5; // er14\n  __int64 v6; // r12\n  unsigned int v7; // ebx\n  _BOOL4 v8; // er13\n\n  v4 = a4 + dword_94F570[a3];\n  v5 = dword_94F550[a3];\n  v6 = a4 + dword_94F9F0[a3];\n  v7 = 3 - a2;\n  v8 = 1;\n  if ( !(unsigned int)sub_44B7B0(3 - a2, 1, 2, a4, (unsigned int)v4, (unsigned int)v6, a1) )\n    v8 = (unsigned __int64)sub_44B980(v7, 0, 3, a4, (unsigned int)v4, a4 + v5, v4, v6) == 0;\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x46a9e0L", 
            "funcEndAddr": "0x46aa7eL", 
            "funcName": "sub_46A9E0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_46AAA0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  int v6; // er15\n  __int64 v8; // [rsp+0h] [rbp-28h]\n\n  HIDWORD(v8) = HIDWORD(a1);\n  v4 = a2;\n  v5 = a4 + dword_94FEB0[a3];\n  v6 = dword_94FA30[a3];\n  if ( (signed int)sub_430BC0(v5) <= 0 )\n    return 0LL;\n  LODWORD(v8) = a4;\n  return (unsigned int)sub_44B7B0(v4, 1, 3, a4, v5, a4 + v6, v8) == 0;\n}\n", 
            "funcStartAddr": "0x46aaa0L", 
            "funcEndAddr": "0x46ab05L", 
            "funcName": "sub_46AAA0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46AB40(int a1, int a2)\n{\n  signed int v2; // ebp\n  signed int v3; // ebx\n  int v4; // er14\n  int v5; // ebp\n  int v6; // eax\n\n  v2 = a2 + dword_94F0D0[a1];\n  v3 = dword_94F550[a1] + a2;\n  v4 = sub_430BC0(a2 + dword_94F0B0[a1]);\n  v5 = v4 + (unsigned __int64)sub_430BC0(v2);\n  v6 = sub_430BC0(v3);\n  return !((unsigned __int8)((v5 + v6 < 0) ^ __OFADD__(v5, v6)) | (v5 + v6 == 0));\n}\n", 
            "funcStartAddr": "0x46ab40L", 
            "funcEndAddr": "0x46ab8bL", 
            "funcName": "sub_46AB40"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46AB90(int a1, int a2)\n{\n  signed int v2; // ebx\n  int v3; // ebp\n  int v4; // eax\n\n  v2 = dword_94F550[a1] + a2;\n  v3 = sub_430BC0(a2 + dword_94F0B0[a1]);\n  v4 = sub_430BC0(v2);\n  return !((unsigned __int8)((v3 + v4 < 0) ^ __OFADD__(v3, v4)) | (v3 + v4 == 0));\n}\n", 
            "funcStartAddr": "0x46ab90L", 
            "funcEndAddr": "0x46abc6L", 
            "funcName": "sub_46AB90"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46ABD0(int a1, int a2)\n{\n  signed int v2; // ebx\n  int v3; // ebp\n  int v4; // eax\n\n  v2 = dword_94F9F0[a1] + a2;\n  v3 = sub_430BC0(a2 + dword_94F550[a1]);\n  v4 = sub_430BC0(v2);\n  return !((unsigned __int8)((v3 + v4 < 0) ^ __OFADD__(v3, v4)) | (v3 + v4 == 0));\n}\n", 
            "funcStartAddr": "0x46abd0L", 
            "funcEndAddr": "0x46ac06L", 
            "funcName": "sub_46ABD0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46AC30(int a1, int a2)\n{\n  signed int v2; // ebx\n  int v3; // ebp\n  int v4; // eax\n\n  v2 = dword_94F0F0[a1] + a2;\n  v3 = sub_430BC0(a2 + dword_94F0D0[a1]);\n  v4 = sub_430BC0(v2);\n  return !((unsigned __int8)((v3 + v4 < 0) ^ __OFADD__(v3, v4)) | (v3 + v4 == 0));\n}\n", 
            "funcStartAddr": "0x46ac30L", 
            "funcEndAddr": "0x46ac66L", 
            "funcName": "sub_46AC30"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46AD10(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // er15\n  unsigned int v5; // er12\n  __int128 v6; // cx\n  _QWORD v8[7]; // [rsp+0h] [rbp-38h]\n\n  v3 = a3;\n  v4 = a2 + dword_94F9F0[a1];\n  v5 = a2 + dword_94F550[a1];\n  LODWORD(v8[0]) = a2 + dword_94F550[a1];\n  v6 = a2;\n  if ( (unsigned int)sub_44B980(a3, 0, 2, (_QWORD)v6, v4, (_QWORD)v6, v8[0]) )\n    DWORD2(v6) = (unsigned __int64)sub_44B7B0(v3, 1, 2, a2, v4, v5) == 0;\n  return DWORD2(v6);\n}\n", 
            "funcStartAddr": "0x46ad10L", 
            "funcEndAddr": "0x46ad92L", 
            "funcName": "sub_46AD10"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_46ADE0(int a1, int a2, int a3)\n{\n  int v3; // ebp\n  signed int v4; // ecx\n  bool result; // al\n\n  v3 = a3;\n  v4 = sub_4083A0(a2 + dword_94F570[a1]);\n  result = 1;\n  if ( v4 >= 3 )\n    result = (signed int)sub_4099C0(a2, 3 - v3, 20, 0LL) > 2;\n  return result;\n}\n", 
            "funcStartAddr": "0x46ade0L", 
            "funcEndAddr": "0x46ae2aL", 
            "funcName": "sub_46ADE0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46AE30(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er15\n  __int64 v4; // r13\n  __int64 v5; // r14\n  _BOOL8 v6; // r12\n  unsigned int v8; // [rsp+14h] [rbp-3Ch]\n  int v9; // [rsp+18h] [rbp-38h]\n\n  v3 = a2 + dword_94F590[a1];\n  v4 = a2 + dword_94F570[a1];\n  v9 = dword_94FA30[a1];\n  v5 = a2 + dword_94F0F0[a1];\n  LODWORD(v6) = 0;\n  v8 = a3;\n  if ( (unsigned int)sub_44B980(a3, 0, 4, a2, v3, (unsigned int)v4, a2 + dword_94F0D0[a1], v5, v4) )\n    v6 = (unsigned int)sub_44B980(v8, 0, 4, a2, (unsigned int)v4, v3, a2 + v9, a2, v5) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x46ae30L", 
            "funcEndAddr": "0x46aeffL", 
            "funcName": "sub_46AE30"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46AF00(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r15\n  int v4; // er13\n  __int64 v5; // rbp\n  __int64 v6; // r14\n  _BOOL8 v7; // r12\n  unsigned int v9; // [rsp+8h] [rbp-40h]\n  unsigned int v10; // [rsp+Ch] [rbp-3Ch]\n\n  v9 = a3;\n  v10 = a2 + dword_94F590[a1];\n  v3 = a2 + dword_94F570[a1];\n  v4 = dword_94F0D0[a1];\n  v5 = a2 + dword_94FA30[a1];\n  v6 = a2 + dword_94F0F0[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94F9F0[a1]) <= 0 )\n  {\n    LODWORD(v7) = 0;\n  }\n  else\n  {\n    LODWORD(v7) = 0;\n    if ( (unsigned int)sub_44B980(v9, 0, 4, a2, v10, (unsigned int)v3, a2 + v4, v6, v3) )\n      v7 = (unsigned int)sub_44B980(v9, 0, 4, a2, (unsigned int)v3, v10, v5, a2, v6) != 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x46af00L", 
            "funcEndAddr": "0x46afedL", 
            "funcName": "sub_46AF00"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_46AFF0(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94F550[a1];\n  v3 = sub_430BC0(a2 + dword_94F9D0[a1]);\n  result = 1;\n  if ( v3 <= 0 )\n    result = (signed int)sub_430BC0(a2 + v2) > 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46aff0L", 
            "funcEndAddr": "0x46b031L", 
            "funcName": "sub_46AFF0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46B040@<rax>(char a1@<al>, int a2@<edx>, int a3@<edi>, int a4@<esi>, __m128 a5@<xmm0>, __m128 a6@<xmm1>, __m128 a7@<xmm2>, __m128 a8@<xmm3>, __m128 a9@<xmm6>, __m128 a10@<xmm7>)\n{\n  int v10; // er14\n  unsigned int v11; // ebp\n  unsigned int v12; // er12\n  unsigned int v13; // ebx\n  __int64 v14; // r9\n  __m128 v15; // xmm4\n  __m128 v16; // xmm5\n  __int64 v17; // r9\n  __m128 v18; // xmm4\n  __m128 v19; // xmm5\n  _BOOL4 v20; // er13\n  __int64 v21; // r8\n  __int64 v22; // r9\n  __m128 v23; // xmm4\n  __m128 v24; // xmm5\n  char v26; // [rsp-8h] [rbp-38h]\n  char v27; // [rsp-8h] [rbp-38h]\n  char v28; // [rsp-8h] [rbp-38h]\n\n  v26 = a1;\n  v10 = a2;\n  v11 = a4 + dword_94FED0[a3];\n  v12 = a4 + dword_950370[a3];\n  v13 = dword_950350[a3] + a4;\n  if ( (signed int)sub_430BC0(a4 + dword_94F9D0[a3]) <= 0 )\n  {\n    v20 = 0;\n  }\n  else\n  {\n    v20 = 1;\n    if ( (unsigned int)sub_44B230(3 - v10, 0, 2, v11, v12, v14, a5, a6, a7, a8, v15, v16, a9, a10, v26) )\n    {\n      if ( !(unsigned int)sub_44B230(v10, 0, 2, v11, v13, v17, a5, a6, a7, a8, v18, v19, a9, a10, v27) )\n      {\n        v20 = 0;\n        if ( (unsigned int)sub_44B230(v10, 0, 1, v12, v21, v22, a5, a6, a7, a8, v23, v24, a9, a10, v28) )\n          v20 = (unsigned __int64)sub_43F100(v13, 3 - v10) == 0;\n      }\n    }\n  }\n  return (unsigned int)v20;\n}\n", 
            "funcStartAddr": "0x46b040L", 
            "funcEndAddr": "0x46b111L", 
            "funcName": "sub_46B040"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46B120(int a1, unsigned int a2, int a3)\n{\n  int v3; // er12\n  unsigned int v4; // er14\n  int v5; // er13\n  __int64 v6; // r15\n  __int64 v7; // rbp\n  unsigned int v8; // ebp\n  _BOOL4 v9; // er12\n  __int64 v11; // [rsp+0h] [rbp-38h]\n\n  v3 = a3;\n  v4 = a2 + dword_94FED0[a1];\n  v5 = dword_94FEB0[a1];\n  v6 = a2 + dword_94FA30[a1];\n  v7 = a2 + dword_94FA50[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94FE90[a1]) <= 0 )\n  {\n    v9 = 0;\n  }\n  else\n  {\n    v11 = v7;\n    v8 = 3 - v3;\n    v9 = 1;\n    if ( !(unsigned int)sub_44B7B0(v8, 1, 4, v4, a2 + v5, a2, v6, v6) )\n      v9 = (unsigned __int64)sub_44B7B0(v8, 0, 4, a2, v4, (unsigned int)v6, v11, v11) == 0;\n  }\n  return (unsigned int)v9;\n}\n", 
            "funcStartAddr": "0x46b120L", 
            "funcEndAddr": "0x46b1f4L", 
            "funcName": "sub_46B120"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46B200(int a1, int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11)\n{\n  int v11; // er14\n  _BOOL4 v12; // ebp\n  int v13; // eax\n\n  v11 = dword_94F570[a1];\n  v12 = 0;\n  if ( (unsigned int)sub_44B230(\n                       a3,\n                       0,\n                       4,\n                       (unsigned int)(a2 + dword_94FA50[a1]),\n                       (unsigned int)(a2 + dword_94FEF0[a1]),\n                       (unsigned int)(a2 + dword_94FA70[a1]),\n                       a4,\n                       a5,\n                       a6,\n                       a7,\n                       a8,\n                       a9,\n                       a10,\n                       a11,\n                       (unsigned __int8)a2 + LOBYTE(dword_94FF10[a1])) )\n  {\n    v13 = sub_430BC0(a2 + v11);\n    v12 = v13 < 0;\n    LOBYTE(v12) = v13 > 0;\n  }\n  return (unsigned int)v12;\n}\n", 
            "funcStartAddr": "0x46b200L", 
            "funcEndAddr": "0x46b27bL", 
            "funcName": "sub_46B200"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46B280(int a1, int a2)\n{\n  signed int v2; // ebp\n  signed int v3; // ebx\n  int v4; // er14\n  int v5; // ebp\n  int v6; // eax\n\n  v2 = a2 + dword_94FE90[a1];\n  v3 = dword_950330[a1] + a2;\n  v4 = sub_430BC0(a2 + dword_94F9F0[a1]);\n  v5 = v4 + (unsigned __int64)sub_430BC0(v2);\n  v6 = sub_430BC0(v3);\n  return !((unsigned __int8)((v5 + v6 < 0) ^ __OFADD__(v5, v6)) | (v5 + v6 == 0));\n}\n", 
            "funcStartAddr": "0x46b280L", 
            "funcEndAddr": "0x46b2cbL", 
            "funcName": "sub_46B280"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46B2F0(int a1, int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, double a8, double a9, __m128 a10, __m128 a11)\n{\n  int v11; // er14\n  int v12; // ST24_4\n  unsigned int v13; // ebp\n  __int64 v14; // r12\n  __int64 v15; // r13\n  unsigned int v16; // ebx\n  __m128 v17; // xmm4\n  __m128 v18; // xmm5\n  __int64 v19; // r8\n  __int64 v20; // r9\n  __m128 v21; // xmm4\n  __m128 v22; // xmm5\n  int v23; // ecx\n  _BOOL8 result; // rax\n  int v25; // ecx\n  int v26; // [rsp+0h] [rbp-48h]\n  unsigned int v27; // [rsp+0h] [rbp-48h]\n  signed int v28; // [rsp+0h] [rbp-48h]\n  unsigned int v29; // [rsp+4h] [rbp-44h]\n  signed int v30; // [rsp+4h] [rbp-44h]\n  int v31; // [rsp+8h] [rbp-40h]\n  int v32; // [rsp+Ch] [rbp-3Ch]\n  int v33; // [rsp+10h] [rbp-38h]\n\n  v32 = a3;\n  v31 = dword_94F5B0[a1];\n  v11 = dword_94FA50[a1];\n  v12 = a2 + dword_950330[a1];\n  v26 = a2 + dword_9507D0[a1];\n  v13 = a2 + dword_950C70[a1];\n  v33 = a2 + dword_950350[a1];\n  v14 = (unsigned int)(a2 + dword_9507F0[a1]);\n  v15 = (unsigned int)(a2 + dword_950C90[a1]);\n  v16 = a2 + dword_94F590[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94F9D0[a1]) <= 0 )\n    goto LABEL_7;\n  if ( !(unsigned int)sub_44B230(\n                        v32,\n                        0,\n                        3,\n                        (unsigned int)(a2 + v31),\n                        (unsigned int)(a2 + v11),\n                        v16,\n                        a4,\n                        a5,\n                        a6,\n                        a7,\n                        v17,\n                        v18,\n                        a10,\n                        a11,\n                        v26)\n    || (v23 = sub_44B230(v32, 0, 6, v29, v27, v13, a4, a5, a6, a7, v21, v22, a10, a11, v33), result = 1LL, !v23) )\n  {\n    if ( (unsigned int)sub_44B230(v32, 0, 1, v16, v19, v20, a4, a5, a6, a7, v21, v22, a10, a11, v27) )\n    {\n      v25 = sub_430BC0(v30);\n      result = 0LL;\n      if ( !v25 )\n        result = (unsigned int)sub_430BC0(v28) == 0;\n      return result;\n    }\nLABEL_7:\n    result = 0LL;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x46b2f0L", 
            "funcEndAddr": "0x46b440L", 
            "funcName": "sub_46B2F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46B440(int a1, int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, double a8, double a9, __m128 a10, __m128 a11)\n{\n  int v11; // ebp\n  int v12; // er15\n  int v13; // er14\n  int v14; // er13\n  int v15; // er12\n  __m128 v16; // xmm4\n  __m128 v17; // xmm5\n  __int128 v18; // cx\n  __m128 v19; // xmm4\n  __m128 v20; // xmm5\n  unsigned int v22; // [rsp+0h] [rbp-48h]\n  unsigned int v23; // [rsp+4h] [rbp-44h]\n  unsigned int v24; // [rsp+8h] [rbp-40h]\n  int v25; // [rsp+Ch] [rbp-3Ch]\n  int v26; // [rsp+10h] [rbp-38h]\n\n  v25 = a3;\n  v24 = a2 + dword_950350[a1];\n  v23 = a2 + dword_9507F0[a1];\n  v22 = a2 + dword_950330[a1];\n  v26 = a2 + dword_9507D0[a1];\n  v11 = dword_94F590[a1];\n  v12 = dword_94F5B0[a1];\n  v13 = dword_94FA50[a1];\n  v14 = dword_94F5D0[a1];\n  v15 = dword_94FA70[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94F9D0[a1]) <= 0 )\n  {\n    DWORD2(v18) = 0;\n  }\n  else\n  {\n    v18 = (unsigned int)(a2 + v11);\n    if ( (unsigned int)sub_44B230(\n                         v25,\n                         0,\n                         5,\n                         v18,\n                         (unsigned int)(a2 + v12),\n                         (unsigned int)(a2 + v13),\n                         a4,\n                         a5,\n                         a6,\n                         a7,\n                         v16,\n                         v17,\n                         a10,\n                         a11,\n                         (unsigned __int8)a2 + (unsigned __int8)v14) )\n      *((_QWORD *)&v18 + 1) = (unsigned int)sub_44B230(\n                                              v25,\n                                              0,\n                                              4,\n                                              v24,\n                                              v23,\n                                              v22,\n                                              a4,\n                                              a5,\n                                              a6,\n                                              a7,\n                                              v19,\n                                              v20,\n                                              a10,\n                                              a11,\n                                              v26) != 0;\n  }\n  return DWORD2(v18);\n}\n", 
            "funcStartAddr": "0x46b440L", 
            "funcEndAddr": "0x46b54eL", 
            "funcName": "sub_46B440"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46B550(int a1, unsigned int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __int64 a12, __int64 a13, __int64 a14)\n{\n  __int64 v14; // r15\n  __int64 v15; // r12\n  int v16; // er14\n  unsigned int v17; // er13\n  __int64 v18; // r8\n  __int64 v19; // r9\n  __m128 v20; // xmm4\n  __m128 v21; // xmm5\n  _BOOL4 v22; // ebp\n  __int64 v23; // r8\n  __int64 v24; // r9\n  __m128 v25; // xmm4\n  __m128 v26; // xmm5\n  char v28; // [rsp+0h] [rbp-58h]\n  char v29; // [rsp+0h] [rbp-58h]\n  char v30; // [rsp+0h] [rbp-58h]\n  unsigned int v31; // [rsp+Ch] [rbp-4Ch]\n  unsigned int v32; // [rsp+10h] [rbp-48h]\n  unsigned int v33; // [rsp+14h] [rbp-44h]\n  __int64 v34; // [rsp+18h] [rbp-40h]\n  __int64 v35; // [rsp+20h] [rbp-38h]\n\n  v33 = a2 + dword_94F570[a1];\n  v32 = a2 + dword_94F550[a1];\n  v14 = a2 + dword_94F0B0[a1];\n  v15 = a2 + dword_94F090[a1];\n  v35 = a2 + dword_94F9F0[a1];\n  v34 = a2 + dword_94F530[a1];\n  v16 = dword_94EBF0[a1];\n  v17 = a2 + dword_94EC30[a1];\n  v31 = a3;\n  if ( (unsigned int)sub_44B230(a3, 0, 1, a2 + dword_94EC10[a1], a13, a14, a4, a5, a6, a7, a8, a9, a10, a11, v28)\n    || (v22 = 0, (unsigned int)sub_44B230(v31, 0, 1, a2 + v16, v18, v19, a4, a5, a6, a7, v20, v21, a10, a11, v29))\n    && (v22 = 0, (unsigned int)sub_44B230(v31, 0, 1, v17, v23, v24, a4, a5, a6, a7, v25, v26, a10, a11, v30)) )\n  {\n    v22 = 0;\n    if ( !(unsigned int)sub_44B7B0(v31, 1, 7, a2, v33, v32, v14, v15, v35, v34, a2) )\n      v22 = (unsigned __int64)sub_44B7B0(v31, 1, 5, a2, v33, v32, v35, v34, a2) == 0;\n  }\n  return (unsigned int)v22;\n}\n", 
            "funcStartAddr": "0x46b550L", 
            "funcEndAddr": "0x46b6b8L", 
            "funcName": "sub_46B550"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46B6C0(int a1, int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11)\n{\n  int v11; // er13\n  __int64 v12; // r15\n  __int64 v13; // r12\n  _BOOL8 v14; // r14\n  __m128 v15; // xmm4\n  __m128 v16; // xmm5\n  unsigned int v18; // [rsp+8h] [rbp-48h]\n  unsigned int v19; // [rsp+Ch] [rbp-44h]\n  unsigned int v20; // [rsp+10h] [rbp-40h]\n  int v21; // [rsp+14h] [rbp-3Ch]\n  int v22; // [rsp+18h] [rbp-38h]\n\n  v11 = dword_94F550[a1];\n  v20 = a2 + dword_950350[a1];\n  v19 = a2 + dword_9507F0[a1];\n  v18 = a2 + dword_950370[a1];\n  v22 = a2 + dword_950810[a1];\n  v12 = (unsigned int)(a2 + dword_950390[a1]);\n  v13 = (unsigned int)(a2 + dword_950830[a1]);\n  LODWORD(v14) = 0;\n  v21 = a3;\n  if ( (unsigned int)sub_44B230(\n                       a3,\n                       0,\n                       4,\n                       (unsigned int)(a2 + dword_94EC30[a1]),\n                       (unsigned int)(a2 + dword_94F0D0[a1]),\n                       (unsigned int)(a2 + dword_94EC50[a1]),\n                       a4,\n                       a5,\n                       a6,\n                       a7,\n                       a8,\n                       a9,\n                       a10,\n                       a11,\n                       (unsigned __int8)a2 + LOBYTE(dword_94F0F0[a1]))\n    && (signed int)sub_430BC0(a2 + v11) > 0 )\n  {\n    v14 = (unsigned int)sub_44B230(v21, 0, 6, v20, v19, v18, a4, a5, a6, a7, v15, v16, a10, a11, v22) != 0;\n  }\n  return (unsigned int)v14;\n}\n", 
            "funcStartAddr": "0x46b6c0L", 
            "funcEndAddr": "0x46b7d9L", 
            "funcName": "sub_46B6C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46B7E0@<rax>(char a1@<al>, int a2@<edx>, int a3@<edi>, int a4@<esi>, __m128 a5@<xmm0>, __m128 a6@<xmm1>, __m128 a7@<xmm2>, __m128 a8@<xmm3>, __m128 a9@<xmm6>, __m128 a10@<xmm7>)\n{\n  int v10; // er15\n  signed int v11; // ebx\n  signed int v12; // ebp\n  unsigned int v13; // er12\n  unsigned int v14; // er13\n  int v15; // eax\n  _BOOL8 v16; // rcx\n  int v18; // eax\n  __int64 v19; // r9\n  __m128 v20; // xmm4\n  __m128 v21; // xmm5\n  char v22; // [rsp-4h] [rbp-38h]\n  int v23; // [rsp+0h] [rbp-34h]\n\n  v22 = a1;\n  v23 = a2;\n  v10 = dword_950C50[a3];\n  v11 = a4 + dword_950C70[a3];\n  v12 = a4 + dword_950C90[a3];\n  v13 = a4 + dword_94F0F0[a3];\n  v14 = a4 + dword_94F590[a3];\n  v15 = sub_430BC0(a4 + dword_94F090[a3]);\n  LODWORD(v16) = 0;\n  if ( v15 > 0 )\n  {\n    if ( (unsigned int)sub_430BC0(a4 + v10) || (unsigned int)sub_430BC0(v11) )\n    {\n      LODWORD(v16) = 0;\n    }\n    else\n    {\n      v18 = sub_430BC0(v12);\n      LODWORD(v16) = 0;\n      if ( !v18 )\n        v16 = (unsigned int)sub_44B230(v23, 0, 2, v13, v14, v19, a5, a6, a7, a8, v20, v21, a9, a10, v22) != 0;\n    }\n  }\n  return (unsigned int)v16;\n}\n", 
            "funcStartAddr": "0x46b7e0L", 
            "funcEndAddr": "0x46b89dL", 
            "funcName": "sub_46B7E0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_46B8A0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er15\n  int v6; // ebp\n  __int64 v8; // [rsp+0h] [rbp-28h]\n\n  HIDWORD(v8) = HIDWORD(a1);\n  v4 = a2;\n  v5 = dword_94FA30[a3];\n  v6 = dword_94FED0[a3];\n  if ( (signed int)sub_430BC0(a4 + dword_94F590[a3]) <= 0 )\n    return 0LL;\n  LODWORD(v8) = a4 + v6;\n  return (unsigned int)sub_44B980(v4, 0, 2, a4, a4 + v5, a4, v8) != 0;\n}\n", 
            "funcStartAddr": "0x46b8a0L", 
            "funcEndAddr": "0x46b90cL", 
            "funcName": "sub_46B8A0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46B910(int a1, int a2)\n{\n  signed int v2; // ebp\n  signed int v3; // ebx\n  int v4; // er14\n  int v5; // ebp\n  int v6; // eax\n\n  v2 = a2 + dword_94FA50[a1];\n  v3 = dword_94FEF0[a1] + a2;\n  v4 = sub_430BC0(a2 + dword_94F5B0[a1]);\n  v5 = v4 + (unsigned __int64)sub_430BC0(v2);\n  v6 = sub_430BC0(v3);\n  return !((unsigned __int8)((v5 + v6 < 0) ^ __OFADD__(v5, v6)) | (v5 + v6 == 0));\n}\n", 
            "funcStartAddr": "0x46b910L", 
            "funcEndAddr": "0x46b95bL", 
            "funcName": "sub_46B910"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_46B980@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er15\n  int v6; // ebp\n  __int64 v8; // [rsp+0h] [rbp-28h]\n\n  HIDWORD(v8) = HIDWORD(a1);\n  v4 = a2;\n  v5 = dword_94F9F0[a3];\n  v6 = dword_94FE90[a3];\n  if ( (signed int)sub_430BC0(a4 + dword_94FEB0[a3]) <= 0 )\n    return 0LL;\n  LODWORD(v8) = a4 + v6;\n  return (unsigned int)sub_44B980(v4, 0, 2, a4, a4 + v5, a4, v8) != 0;\n}\n", 
            "funcStartAddr": "0x46b980L", 
            "funcEndAddr": "0x46b9ecL", 
            "funcName": "sub_46B980"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_46B9F0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er15\n  int v6; // ebp\n  __int64 v8; // [rsp+0h] [rbp-28h]\n\n  HIDWORD(v8) = HIDWORD(a1);\n  v4 = a2;\n  v5 = dword_94F9F0[a3];\n  v6 = dword_94FE90[a3];\n  if ( (signed int)sub_430BC0(a4 + dword_94F550[a3]) <= 0 )\n    return 0LL;\n  LODWORD(v8) = a4 + v6;\n  return (unsigned int)sub_44B980(v4, 0, 2, a4, a4 + v5, a4, v8) != 0;\n}\n", 
            "funcStartAddr": "0x46b9f0L", 
            "funcEndAddr": "0x46ba5cL", 
            "funcName": "sub_46B9F0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46BA60(int a1, unsigned int a2, int a3)\n{\n  int v3; // er15\n  int v4; // er14\n  int v5; // er13\n  int v6; // er12\n  int v7; // ebp\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_94F9F0[a1];\n  v5 = dword_94F0D0[a1];\n  v6 = dword_94F0B0[a1];\n  v7 = dword_94F570[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94F590[a1]) <= 0 )\n    result = 0LL;\n  else\n    result = (unsigned int)sub_44B980(3 - v3, 0, 3, a2, a2 + v4, a2 + v5, a2 + v6, a2 + v7) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46ba60L", 
            "funcEndAddr": "0x46baf3L", 
            "funcName": "sub_46BA60"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_46BB00(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94F550[a1];\n  v3 = sub_430BC0(a2 + dword_94F530[a1]);\n  result = 1;\n  if ( v3 <= 0 )\n    result = (signed int)sub_430BC0(a2 + v2) > 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46bb00L", 
            "funcEndAddr": "0x46bb41L", 
            "funcName": "sub_46BB00"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_46BB50@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  int v4; // er15\n  int v5; // er14\n  unsigned int v6; // ebp\n  _BOOL4 v7; // ecx\n  _BOOL8 result; // rax\n  __int64 v9; // [rsp-8h] [rbp-28h]\n\n  v9 = a1;\n  v4 = a2;\n  v5 = dword_94F570[a3];\n  v6 = a4 + dword_950350[a3];\n  v7 = sub_430D30(v6);\n  result = 0LL;\n  if ( !v7 )\n    result = (unsigned int)sub_44BB60(3 - v4, 0, 1, a4, a4 + v5, v6, v9) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46bb50L", 
            "funcEndAddr": "0x46bbb7L", 
            "funcName": "sub_46BB50"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_46BBC0@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  int v4; // er15\n  unsigned int v5; // ebp\n  int v6; // er14\n  _BOOL4 v7; // ecx\n  _BOOL8 result; // rax\n  __int64 v9; // [rsp-8h] [rbp-28h]\n\n  v9 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94F570[a3];\n  v6 = dword_950350[a3];\n  v7 = sub_430D30(v5);\n  result = 0LL;\n  if ( !v7 )\n    result = (unsigned int)sub_44BB60(3 - v4, 0, 1, a4, v5, a4 + v6, v9) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46bbc0L", 
            "funcEndAddr": "0x46bc27L", 
            "funcName": "sub_46BBC0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46BCA0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  _BOOL8 v6; // rbp\n  __int64 v8; // [rsp-8h] [rbp-28h]\n\n  v8 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94F9F0[a3];\n  LODWORD(v6) = 0;\n  if ( (signed int)sub_4083A0(a4 + dword_94F550[a3]) <= 3 )\n  {\n    LODWORD(v6) = 0;\n    if ( (signed int)sub_4099C0(v5, 3 - v4, 20, 0LL) <= 2 )\n      v6 = (unsigned int)sub_44B7B0(v4, 1, 2, a4, v5, v5, v8) != 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x46bca0L", 
            "funcEndAddr": "0x46bd1fL", 
            "funcName": "sub_46BCA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46BD40@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  __int64 v5; // r12\n  int v6; // er15\n  int v7; // er13\n  __int128 v8; // cx\n\n  v4 = a2;\n  v5 = a4 + dword_94FE70[a3];\n  v6 = dword_94F570[a3];\n  v7 = dword_94F550[a3];\n  v8 = a4;\n  if ( (unsigned int)sub_44B7B0(a2, 1, 1, a4, a4 + dword_94FE90[a3], a1) )\n    DWORD2(v8) = (unsigned __int64)sub_44B7B0(v4, 1, 4, a4, a4 + v6, (unsigned int)v5, a4 + v7, v5) == 0;\n  return DWORD2(v8);\n}\n", 
            "funcStartAddr": "0x46bd40L", 
            "funcEndAddr": "0x46bddaL", 
            "funcName": "sub_46BD40"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46BE20@<rax>(char a1@<al>, int a2@<edx>, int a3@<edi>, int a4@<esi>, __m128 a5@<xmm0>, __m128 a6@<xmm1>, __m128 a7@<xmm2>, __m128 a8@<xmm3>, __m128 a9@<xmm6>, __m128 a10@<xmm7>)\n{\n  int v10; // er14\n  __int64 v11; // rax\n  signed __int64 v12; // rdi\n  signed int v13; // ebp\n  unsigned int v14; // ebx\n  _BOOL8 v15; // r15\n  __int64 v16; // r8\n  __int64 v17; // r9\n  __m128 v18; // xmm4\n  __m128 v19; // xmm5\n  char v21; // [rsp-8h] [rbp-28h]\n\n  v21 = a1;\n  v10 = a2;\n  v11 = a3;\n  v12 = a4 + (signed __int64)dword_950330[a3];\n  v13 = a4 + dword_94F570[v11];\n  v14 = dword_94F0D0[v11] + a4;\n  if ( dword_98A7F4 )\n  {\n    LODWORD(v15) = 0;\n    if ( (unsigned int)sub_43B050(v12, 0LL) )\n      return (unsigned int)v15;\n  }\n  else\n  {\n    LODWORD(v15) = 0;\n    if ( dword_8E94D4[95 * v12] )\n      return (unsigned int)v15;\n  }\n  if ( (unsigned int)sub_430EB0(v13) )\n  {\n    LODWORD(v15) = 1;\n    if ( !(unsigned int)sub_44B230(3 - v10, 0, 1, v14, v16, v17, a5, a6, a7, a8, v18, v19, a9, a10, v21) )\n      v15 = (unsigned int)sub_430EB0(v14) != 0;\n  }\n  else\n  {\n    LODWORD(v15) = 0;\n  }\n  return (unsigned int)v15;\n}\n", 
            "funcStartAddr": "0x46be20L", 
            "funcEndAddr": "0x46bec7L", 
            "funcName": "sub_46BE20"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46BED0(int a1, int a2)\n{\n  __int64 v2; // rbx\n  int v3; // eax\n  __int64 v4; // rbx\n  int v5; // ecx\n\n  v2 = dword_950350[a1];\n  LOBYTE(v3) = sub_430D50(a2 + dword_94F570[a1]);\n  if ( !v3 )\n    return 0LL;\n  v4 = a2 + v2;\n  if ( dword_98A7F4 )\n    v5 = sub_43B050(v4, 0LL);\n  else\n    v5 = dword_8E94D4[95 * v4];\n  return v5 == 0;\n}\n", 
            "funcStartAddr": "0x46bed0L", 
            "funcEndAddr": "0x46bf2dL", 
            "funcName": "sub_46BED0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_46BF30@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er15\n  int v6; // ebx\n  signed int v7; // ecx\n  _BOOL8 result; // rax\n  __int64 v9; // [rsp+0h] [rbp-28h]\n\n  HIDWORD(v9) = HIDWORD(a1);\n  v4 = a2;\n  v5 = dword_94FE90[a3];\n  v6 = dword_94FEB0[a3];\n  v7 = sub_4083A0(a4 + dword_94F570[a3]);\n  result = 0LL;\n  if ( v7 >= 2 )\n  {\n    LODWORD(v9) = a4;\n    result = (unsigned int)sub_44B7B0(v4, 1, 3, a4, a4 + v5, a4 + v6, v9) == 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x46bf30L", 
            "funcEndAddr": "0x46bf9dL", 
            "funcName": "sub_46BF30"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46BFA0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er15\n  int v5; // er14\n  __int128 v6; // cx\n  int v7; // eax\n\n  v4 = a2;\n  v5 = dword_94F570[a3];\n  v6 = a4;\n  if ( !(unsigned int)sub_44B7B0(a2, 1, 1, a4, a4 + dword_94FE90[a3], a1) )\n  {\n    LOBYTE(v7) = sub_430330(a4 + v5, 3 - v4);\n    DWORD2(v6) = v7 == 0;\n  }\n  return DWORD2(v6);\n}\n", 
            "funcStartAddr": "0x46bfa0L", 
            "funcEndAddr": "0x46c005L", 
            "funcName": "sub_46BFA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46C010@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // ebp\n  _BOOL4 v5; // ebx\n  int v6; // eax\n\n  v4 = a4 + dword_94F570[a3];\n  v5 = 0;\n  if ( !(unsigned int)sub_44B7B0(a2, 1, 2, a4, v4, a4 + dword_94FE90[a3], a1) )\n  {\n    LOBYTE(v6) = sub_430D50(v4);\n    v5 = v6 != 0;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x46c010L", 
            "funcEndAddr": "0x46c063L", 
            "funcName": "sub_46C010"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46C070@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // er13\n  int v6; // er12\n  int v7; // ebp\n  _BOOL4 v8; // er15\n  int v9; // eax\n  __int64 v11; // [rsp-8h] [rbp-38h]\n\n  v11 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94FE90[a3];\n  v6 = a4 + dword_94F570[a3];\n  v7 = a4 + dword_94F9F0[a3];\n  v8 = 0;\n  if ( (unsigned int)sub_4083A0(v7) == 2 && (signed int)sub_40A5F0(v7) >= 2 )\n  {\n    v8 = 0;\n    if ( !(unsigned int)sub_44B7B0(v4, 1, 1, a4, v5, v11) )\n    {\n      LOBYTE(v9) = sub_430330(v6, 3 - v4);\n      v8 = v9 == 0;\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x46c070L", 
            "funcEndAddr": "0x46c108L", 
            "funcName": "sub_46C070"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46C190(int a1, unsigned int a2, unsigned int a3)\n{\n  return sub_44B7B0(\n           a3,\n           1,\n           4,\n           a2,\n           a2 + dword_94F570[a1],\n           a2 + dword_94F550[a1],\n           a2 + dword_94FEB0[a1],\n           a2 + dword_94F9D0[a1]);\n}\n", 
            "funcStartAddr": "0x46c190L", 
            "funcEndAddr": "0x46c1e3L", 
            "funcName": "sub_46C190"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46C250(int a1, int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __int64 a12, __int64 a13, __int64 a14)\n{\n  int v14; // er14\n  __int64 v15; // rax\n  signed __int64 v16; // rdi\n  unsigned int v17; // er15\n  unsigned int v18; // ebx\n  _BOOL8 v19; // rbp\n  __int64 v20; // r8\n  __int64 v21; // r9\n  __m128 v22; // xmm4\n  __m128 v23; // xmm5\n  __int64 v24; // r8\n  __int64 v25; // r9\n  __m128 v26; // xmm4\n  __m128 v27; // xmm5\n  char v29; // [rsp+0h] [rbp-28h]\n  char v30; // [rsp+0h] [rbp-28h]\n  char v31; // [rsp+0h] [rbp-28h]\n\n  v14 = a3;\n  v15 = a1;\n  v16 = a2 + (signed __int64)dword_94F530[a1];\n  v17 = a2 + dword_94F9D0[v15];\n  v18 = dword_94F0D0[v15] + a2;\n  if ( dword_98A7F4 )\n  {\n    LODWORD(v19) = 0;\n    if ( (unsigned int)sub_43B050(v16, 0LL) )\n      return (unsigned int)v19;\n  }\n  else\n  {\n    LODWORD(v19) = 0;\n    if ( dword_8E94D4[95 * v16] )\n      return (unsigned int)v19;\n  }\n  LODWORD(v19) = 1;\n  if ( (unsigned int)sub_44B230(3 - v14, 0, 1, v18, a13, a14, a4, a5, a6, a7, a8, a9, a10, a11, v29) )\n  {\n    LODWORD(v19) = 0;\n    if ( (unsigned int)sub_44B230(3 - v14, 0, 1, v18, v20, v21, a4, a5, a6, a7, v22, v23, a10, a11, v30) )\n      v19 = (unsigned int)sub_44B230(v14, 0, 1, v17, v24, v25, a4, a5, a6, a7, v26, v27, a10, a11, v31) != 0;\n  }\n  return (unsigned int)v19;\n}\n", 
            "funcStartAddr": "0x46c250L", 
            "funcEndAddr": "0x46c312L", 
            "funcName": "sub_46C250"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46C3C0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  int v6; // eax\n  _BOOL8 v7; // rbp\n  __int64 v9; // [rsp-8h] [rbp-28h]\n\n  v9 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94F9F0[a3];\n  LOBYTE(v6) = sub_430D50(a4 + dword_94FA30[a3]);\n  if ( v6 )\n  {\n    LODWORD(v7) = 0;\n    if ( (signed int)sub_4099C0(v5, 3 - v4, 20, 0LL) <= 2 )\n      v7 = (unsigned int)sub_44B7B0(v4, 1, 2, a4, v5, v5, v9) != 0;\n  }\n  else\n  {\n    LODWORD(v7) = 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x46c3c0L", 
            "funcEndAddr": "0x46c440L", 
            "funcName": "sub_46C3C0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46C440(int a1, int a2)\n{\n  __int64 v2; // rbx\n  int v3; // er14\n  __int64 v4; // rbp\n  int v5; // edi\n  __int64 v6; // rsi\n  signed int v7; // ecx\n  _BOOL8 result; // rax\n  __int64 v9; // rsi\n\n  v2 = a2;\n  v3 = dword_94FEF0[a1];\n  v4 = dword_94FED0[a1];\n  v5 = dword_94FA30[a1] + a2;\n  v6 = (unsigned __int8)byte_98A1B0[v4 + a2];\n  v7 = sub_430570(v5);\n  result = 0LL;\n  if ( v7 <= 2 )\n  {\n    v9 = (unsigned __int8)byte_98A1B0[v2 + v4];\n    result = (unsigned int)sub_430570((signed int)v2 + v3) == 2;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x46c440L", 
            "funcEndAddr": "0x46c49dL", 
            "funcName": "sub_46C440"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46C580@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, signed int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  __int64 v6; // rax\n  int v7; // edi\n  unsigned int v8; // ebp\n  __int64 v9; // rsi\n  _BOOL8 v10; // r15\n  __int64 v12; // [rsp-8h] [rbp-28h]\n\n  v12 = a1;\n  v4 = a2;\n  v5 = a4;\n  v6 = a3;\n  v7 = a4 + dword_94F570[a3];\n  v8 = a4 + dword_94F9F0[v6];\n  v9 = (unsigned __int8)byte_98A1B0[dword_94F0D0[v6] + (signed __int64)a4];\n  LODWORD(v10) = 0;\n  if ( (unsigned int)sub_430570(v7) == 3 && (unsigned int)sub_43F100(v8, v4) && (unsigned int)sub_43F100(v5, v4) )\n    v10 = (unsigned int)sub_44B7B0(3 - v4, 1, 2, v5, v8, v8, v12) != 0;\n  return (unsigned int)v10;\n}\n", 
            "funcStartAddr": "0x46c580L", 
            "funcEndAddr": "0x46c615L", 
            "funcName": "sub_46C580"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46C620(int a1, int a2)\n{\n  int v2; // ebp\n  __int64 v3; // r14\n  int v4; // ecx\n  _BOOL8 result; // rax\n  int v6; // ebp\n  __int64 v7; // rsi\n\n  v2 = dword_94F590[a1];\n  v3 = dword_94F570[a1];\n  v4 = sub_4083A0(a2 + dword_94FA30[a1]);\n  result = 0LL;\n  if ( v4 == 2 )\n  {\n    v6 = a2 + v2;\n    v7 = (unsigned __int8)byte_98A1B0[v3 + a2];\n    result = (unsigned int)sub_430570(v6) == 3;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x46c620L", 
            "funcEndAddr": "0x46c673L", 
            "funcName": "sub_46C620"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46C680@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, int a4@<esi>)\n{\n  int v4; // er14\n  signed __int64 v5; // rbx\n  unsigned int v6; // er15\n  _BOOL8 v7; // rbp\n  __int64 v9; // [rsp-8h] [rbp-28h]\n\n  v9 = a1;\n  v4 = a2;\n  v5 = a4 + (signed __int64)dword_94F510[a3];\n  v6 = dword_94F9D0[a3] + a4;\n  if ( !dword_98A7F4 )\n  {\n    LODWORD(v7) = 0;\n    if ( dword_8E94D4[95 * v5] )\n      return (unsigned int)v7;\n    goto LABEL_3;\n  }\n  LODWORD(v7) = 0;\n  if ( !(unsigned int)sub_43B050(v5, 0LL) )\nLABEL_3:\n    v7 = (unsigned int)sub_44B7B0(3 - v4, 1, 1, v6, (unsigned int)v5, v9) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x46c680L", 
            "funcEndAddr": "0x46c706L", 
            "funcName": "sub_46C680"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46C730(int a1, signed int a2)\n{\n  __int64 v2; // r14\n  int v3; // eax\n  _BOOL4 v4; // ebx\n  __int64 v5; // r14\n  int v6; // eax\n\n  v2 = dword_950390[a1];\n  LOBYTE(v3) = sub_430D50(a2 + dword_94FED0[a1]);\n  v4 = 0;\n  if ( v3 && !(unsigned int)sub_430EB0(a2) )\n  {\n    v5 = a2 + v2;\n    if ( dword_98A7F4 )\n      v6 = sub_43B050(v5, 0LL);\n    else\n      v6 = dword_8E94D4[95 * v5];\n    v4 = v6 == 0;\n  }\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x46c730L", 
            "funcEndAddr": "0x46c796L", 
            "funcName": "sub_46C730"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46C7D0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // ebx\n  int v5; // eax\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_94FED0[a1];\n  LOBYTE(v5) = sub_430E00(a2 + dword_94FA30[a1]);\n  if ( v5 )\n    result = (unsigned int)sub_44B7B0(v3, 1, 1, a2, a2 + v4) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x46c7d0L", 
            "funcEndAddr": "0x46c822L", 
            "funcName": "sub_46C7D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46C840@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  signed __int64 v5; // rbx\n  unsigned int v6; // ebp\n  __int64 v8; // [rsp-8h] [rbp-28h]\n\n  v8 = a1;\n  v4 = a2;\n  v5 = dword_94F550[a3] + (signed __int64)(signed int)a4;\n  if ( dword_98A7F4 )\n  {\n    v6 = 0;\n    if ( !(unsigned int)sub_43B050(v5, 0LL) )\n      return v6;\n  }\n  else if ( !dword_8E94D4[95 * v5] )\n  {\n    return 0;\n  }\n  return (unsigned int)sub_44B7B0(v4, 1, 1, a4, (unsigned int)v5, v8) == 0;\n}\n", 
            "funcStartAddr": "0x46c840L", 
            "funcEndAddr": "0x46c8bbL", 
            "funcName": "sub_46C840"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46C910(int a1, int a2)\n{\n  int v2; // er15\n  signed int v3; // ebx\n  _BOOL8 v4; // r14\n\n  v2 = dword_94F530[a1];\n  v3 = a2 + dword_94F9F0[a1];\n  LODWORD(v4) = 0;\n  if ( (signed int)sub_4083A0(a2 + dword_94FE90[a1]) <= 3 && (unsigned int)sub_430EB0(a2 + v2) )\n    v4 = (unsigned int)sub_430EB0(v3) != 0;\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x46c910L", 
            "funcEndAddr": "0x46c970L", 
            "funcName": "sub_46C910"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46C970(int a1, int a2)\n{\n  int v2; // er15\n  int v3; // ebp\n  _BOOL8 v4; // r14\n\n  v2 = dword_94F9F0[a1];\n  v3 = a2 + dword_94FEB0[a1];\n  LODWORD(v4) = 0;\n  if ( (unsigned int)sub_4083A0(a2 + dword_94F570[a1]) == 1 && (unsigned int)sub_4083A0(a2 + v2) == 1 )\n    v4 = (signed int)sub_4083A0(v3) < 3;\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x46c970L", 
            "funcEndAddr": "0x46c9d2L", 
            "funcName": "sub_46C970"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46C9E0(int a1, int a2)\n{\n  int v2; // er15\n  int v3; // ebp\n  _BOOL8 v4; // r14\n\n  v2 = dword_94F9F0[a1];\n  v3 = a2 + dword_94FEB0[a1];\n  LODWORD(v4) = 0;\n  if ( (signed int)sub_4083A0(a2 + dword_94F570[a1]) <= 2 && (unsigned int)sub_4083A0(a2 + v2) == 1 )\n    v4 = (signed int)sub_4083A0(v3) < 3;\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x46c9e0L", 
            "funcEndAddr": "0x46ca42L", 
            "funcName": "sub_46C9E0"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_46CA50(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94FE70[a1];\n  v3 = sub_4083A0(a2 + dword_94F9D0[a1]);\n  result = 0;\n  if ( v3 == 1 )\n    result = (signed int)sub_4083A0(a2 + v2) > 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x46ca50L", 
            "funcEndAddr": "0x46ca90L", 
            "funcName": "sub_46CA50"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46CB50(int a1, int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // ebx\n  int v5; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_94F9F0[a1];\n  v5 = sub_4083A0(a2 + dword_94F0B0[a1]);\n  result = 0LL;\n  if ( v5 == 2 )\n    result = (unsigned int)sub_43F100(a2 + v4, v3) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46cb50L", 
            "funcEndAddr": "0x46cb94L", 
            "funcName": "sub_46CB50"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_46CBF0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  int v6; // er15\n  _BOOL8 result; // rax\n  __int64 v8; // [rsp-8h] [rbp-28h]\n\n  v8 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94FE90[a3];\n  v6 = dword_94FEB0[a3];\n  if ( (signed int)sub_430BC0(a4 + dword_94F9F0[a3]) <= 0 && (signed int)sub_430BC0(a4 + v6) <= 0 )\n    result = 0LL;\n  else\n    result = (unsigned int)sub_44B980(v4, 1, 1, a4, a4, v5, v8) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46cbf0L", 
            "funcEndAddr": "0x46cc65L", 
            "funcName": "sub_46CBF0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46CCB0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // rbp\n  int v5; // er12\n  _BOOL4 v6; // ebx\n\n  v3 = a3;\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = dword_950370[a1];\n  v6 = 0;\n  if ( !(unsigned int)sub_43F100(v4, a3) )\n  {\n    v6 = 0;\n    if ( !(unsigned int)sub_44B980(v3, 1, 3, a2, 0LL, (unsigned int)v4, v4, a2 + v5) )\n      v6 = (unsigned __int64)sub_44B7B0(v3, 1, 2, a2, (unsigned int)v4, a2) == 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x46ccb0L", 
            "funcEndAddr": "0x46cd45L", 
            "funcName": "sub_46CCB0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46CD50(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // rbx\n  int v5; // er15\n  int v6; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = dword_950370[a1];\n  v6 = sub_43F100(v4, a3);\n  result = 0LL;\n  if ( !v6 )\n    result = (unsigned int)sub_44B980(v3, 1, 3, a2, 0LL, (unsigned int)v4, v4, a2 + v5) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46cd50L", 
            "funcEndAddr": "0x46cdc2L", 
            "funcName": "sub_46CD50"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_46CDD0@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  int v4; // er14\n  unsigned int v5; // ebp\n  int v6; // er15\n  __int64 v8; // [rsp+0h] [rbp-28h]\n\n  HIDWORD(v8) = HIDWORD(a1);\n  v4 = a2;\n  v5 = a4 + dword_94FA30[a3];\n  v6 = dword_94FEB0[a3];\n  if ( (signed int)sub_430BC0(a4 + dword_94FED0[a3]) <= 0 )\n    return 0LL;\n  LODWORD(v8) = a4 + v6;\n  return (unsigned int)sub_44B980(3 - v4, 1, 2, a4, v5, v5, v8) != 0;\n}\n", 
            "funcStartAddr": "0x46cdd0L", 
            "funcEndAddr": "0x46ce42L", 
            "funcName": "sub_46CDD0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_46CE50@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  int v4; // er14\n  unsigned int v5; // ebp\n  int v6; // er15\n  __int64 v8; // [rsp+0h] [rbp-28h]\n\n  HIDWORD(v8) = HIDWORD(a1);\n  v4 = a2;\n  v5 = a4 + dword_94FA30[a3];\n  v6 = dword_94FEB0[a3];\n  if ( (signed int)sub_430BC0(a4 + dword_94F9F0[a3]) <= 0 )\n    return 0LL;\n  LODWORD(v8) = a4 + v6;\n  return (unsigned int)sub_44B980(3 - v4, 1, 2, a4, v5, v5, v8) != 0;\n}\n", 
            "funcStartAddr": "0x46ce50L", 
            "funcEndAddr": "0x46cec2L", 
            "funcName": "sub_46CE50"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_46CEF0(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94FEB0[a1];\n  v3 = sub_430BC0(a2 + dword_94F570[a1]);\n  result = 1;\n  if ( v3 <= 0 )\n    result = (signed int)sub_430BC0(a2 + v2) > 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46cef0L", 
            "funcEndAddr": "0x46cf31L", 
            "funcName": "sub_46CEF0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_46CF40@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er15\n  unsigned int v6; // ebx\n  _BOOL8 result; // rax\n  __int64 v8; // [rsp-8h] [rbp-28h]\n\n  v8 = a1;\n  v4 = a2;\n  v5 = dword_94FEB0[a3];\n  v6 = a4 + dword_94FA30[a3];\n  if ( (signed int)sub_430BC0(a4 + dword_94F570[a3]) <= 0 && (signed int)sub_430BC0(a4 + v5) <= 0 )\n    result = 0LL;\n  else\n    result = (unsigned int)sub_44B7B0(v4, 1, 2, a4, v6, v6, v8) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46cf40L", 
            "funcEndAddr": "0x46cfb5L", 
            "funcName": "sub_46CF40"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_46D030(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94FE90[a1];\n  v3 = sub_430BC0(a2 + dword_94F550[a1]);\n  result = 1;\n  if ( v3 <= 0 )\n    result = (signed int)sub_430BC0(a2 + v2) > 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46d030L", 
            "funcEndAddr": "0x46d071L", 
            "funcName": "sub_46D030"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_46D080(int a1, int a2, unsigned int a3)\n{\n  int v3; // ebp\n  int v4; // ecx\n  bool result; // al\n\n  v3 = dword_94F590[a1];\n  v4 = sub_43F100(a2 + dword_94F550[a1], a3);\n  result = 0;\n  if ( !v4 )\n    result = (signed int)sub_4083A0(a2 + v3) > 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x46d080L", 
            "funcEndAddr": "0x46d0c1L", 
            "funcName": "sub_46D080"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46D0D0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er15\n  __int64 v4; // rbx\n  int v5; // er13\n  unsigned int v6; // ebp\n  _BOOL8 v7; // r12\n\n  v3 = a3;\n  v4 = a2 + dword_94FE90[a1];\n  v5 = dword_94F9D0[a1];\n  v6 = a2 + dword_94F9F0[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94FE90[a1]) <= 0 )\n  {\n    LODWORD(v7) = 0;\n  }\n  else\n  {\n    LODWORD(v7) = 0;\n    if ( (unsigned int)sub_44B980(v3, 0, 3, a2, v6, (unsigned int)v4, a2 + v5, v4) )\n      v7 = (unsigned int)sub_44B980(v3, 0, 3, a2, v6, (unsigned int)v4, v4, a2) != 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x46d0d0L", 
            "funcEndAddr": "0x46d183L", 
            "funcName": "sub_46D0D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46D190(int a1, int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __int64 a12, __int64 a13, __int64 a14)\n{\n  unsigned int v14; // ebp\n  unsigned int v15; // ebx\n  unsigned int v16; // er14\n  int v17; // ebp\n  int v18; // eax\n  char v20; // [rsp+0h] [rbp-18h]\n\n  v14 = a2 + dword_94EC10[a1];\n  v15 = dword_94F0B0[a1] + a2;\n  v16 = 0;\n  if ( (unsigned int)sub_44B230(3 - a3, 0, 2, v14, v15, a14, a4, a5, a6, a7, a8, a9, a10, a11, v20) )\n  {\n    v17 = sub_430BC0(v14);\n    v18 = sub_430BC0(v15);\n    v16 = (unsigned __int8)((v17 + v18 < 0) ^ __OFADD__(v17, v18) | (v17 + v18 == 0));\n    LOBYTE(v16) = !((unsigned __int8)((v17 + v18 < 0) ^ __OFADD__(v17, v18)) | (v17 + v18 == 0));\n  }\n  return v16;\n}\n", 
            "funcStartAddr": "0x46d190L", 
            "funcEndAddr": "0x46d1eeL", 
            "funcName": "sub_46D190"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46D1F0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // r13\n  __int64 v5; // rbp\n  unsigned int v6; // er15\n  int v7; // er12\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94F590[a1];\n  v6 = a2 + dword_94FA30[a1];\n  v7 = dword_94FEB0[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94F0D0[a1]) <= 0 && (signed int)sub_430BC0(a2 + v7) <= 0 )\n    result = 0LL;\n  else\n    result = (unsigned int)sub_44B980(v3, 0, 4, a2, v6, (unsigned int)v5, v4, v5, a2) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46d1f0L", 
            "funcEndAddr": "0x46d292L", 
            "funcName": "sub_46D1F0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46D2A0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // r13\n  __int64 v5; // rbp\n  unsigned int v6; // er15\n  int v7; // er12\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94F590[a1];\n  v6 = a2 + dword_94FA30[a1];\n  v7 = dword_94FEB0[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94F0D0[a1]) <= 0 && (signed int)sub_430BC0(a2 + v7) <= 0 )\n    result = 0LL;\n  else\n    result = (unsigned int)sub_44B980(v3, 0, 4, a2, v6, (unsigned int)v5, v4, v5, a2) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46d2a0L", 
            "funcEndAddr": "0x46d342L", 
            "funcName": "sub_46D2A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46D350@<rax>(char a1@<al>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>, __m128 a5@<xmm0>, __m128 a6@<xmm1>, __m128 a7@<xmm2>, __m128 a8@<xmm3>, __m128 a9@<xmm6>, __m128 a10@<xmm7>)\n{\n  int v10; // er12\n  __int64 v11; // r14\n  unsigned int v12; // er15\n  __int64 v13; // r13\n  int v14; // ebx\n  __int64 v15; // r8\n  __int64 v16; // r9\n  __m128 v17; // xmm4\n  __m128 v18; // xmm5\n  int v19; // ebx\n  _BOOL4 v20; // er12\n  __int64 v21; // r8\n  __int64 v22; // r9\n  __m128 v23; // xmm4\n  __m128 v24; // xmm5\n  char v26; // [rsp-8h] [rbp-38h]\n  char v27; // [rsp-8h] [rbp-38h]\n\n  v26 = a1;\n  v10 = a2;\n  v11 = a4 + dword_94F570[a3];\n  v12 = a4 + dword_94F550[a3];\n  v13 = a4 + dword_94F9F0[a3];\n  v14 = dword_94F0B0[a3];\n  if ( (signed int)sub_430BC0(a4 + dword_94FEB0[a3]) <= 0 && (signed int)sub_430BC0(a4 + v14) <= 0 )\n  {\n    v20 = 0;\n  }\n  else\n  {\n    v19 = 3 - v10;\n    v20 = 1;\n    if ( !(unsigned int)sub_44B230(v19, 0, 1, v12, v15, v16, a5, a6, a7, a8, v17, v18, a9, a10, v26)\n      || !(unsigned int)sub_44B980(v19, 1, 2, a4, (unsigned int)v11, (unsigned int)v11, v13) )\n    {\n      v20 = 0;\n      if ( !(unsigned int)sub_44B230(v19, 0, 1, v12, v21, v22, a5, a6, a7, a8, v23, v24, a9, a10, v27) )\n        v20 = (unsigned __int64)sub_44B980(v19, 0, 3, a4, (unsigned int)v11, v12, v11, v13) == 0;\n    }\n  }\n  return (unsigned int)v20;\n}\n", 
            "funcStartAddr": "0x46d350L", 
            "funcEndAddr": "0x46d45fL", 
            "funcName": "sub_46D350"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46D460@<rax>(char a1@<al>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>, __m128 a5@<xmm0>, __m128 a6@<xmm1>, __m128 a7@<xmm2>, __m128 a8@<xmm3>, __m128 a9@<xmm6>, __m128 a10@<xmm7>)\n{\n  int v10; // er12\n  __int64 v11; // r14\n  unsigned int v12; // er15\n  __int64 v13; // r13\n  int v14; // ebx\n  __int64 v15; // r8\n  __int64 v16; // r9\n  __m128 v17; // xmm4\n  __m128 v18; // xmm5\n  int v19; // ebx\n  _BOOL4 v20; // er12\n  __int64 v21; // r8\n  __int64 v22; // r9\n  __m128 v23; // xmm4\n  __m128 v24; // xmm5\n  char v26; // [rsp-8h] [rbp-38h]\n  char v27; // [rsp-8h] [rbp-38h]\n\n  v26 = a1;\n  v10 = a2;\n  v11 = a4 + dword_94F570[a3];\n  v12 = a4 + dword_94F550[a3];\n  v13 = a4 + dword_94F9F0[a3];\n  v14 = dword_94F0B0[a3];\n  if ( (signed int)sub_430BC0(a4 + dword_94FEB0[a3]) <= 0 && (signed int)sub_430BC0(a4 + v14) <= 0 )\n  {\n    v20 = 0;\n  }\n  else\n  {\n    v19 = 3 - v10;\n    v20 = 1;\n    if ( !(unsigned int)sub_44B230(v19, 0, 1, v12, v15, v16, a5, a6, a7, a8, v17, v18, a9, a10, v26)\n      || !(unsigned int)sub_44B980(v19, 1, 2, a4, (unsigned int)v11, (unsigned int)v11, v13) )\n    {\n      v20 = 0;\n      if ( !(unsigned int)sub_44B230(v19, 0, 1, v12, v21, v22, a5, a6, a7, a8, v23, v24, a9, a10, v27) )\n        v20 = (unsigned __int64)sub_44B980(v19, 0, 3, a4, (unsigned int)v11, v12, v11, v13) == 0;\n    }\n  }\n  return (unsigned int)v20;\n}\n", 
            "funcStartAddr": "0x46d460L", 
            "funcEndAddr": "0x46d56fL", 
            "funcName": "sub_46D460"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46D570@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>, __m128 a5@<xmm0>, __m128 a6@<xmm1>, __m128 a7@<xmm2>, __m128 a8@<xmm3>, __m128 a9@<xmm6>, __m128 a10@<xmm7>)\n{\n  unsigned int v10; // er14\n  unsigned int v11; // er15\n  _BOOL4 v12; // ebp\n  __int64 v13; // r8\n  __int64 v14; // r9\n  __m128 v15; // xmm4\n  __m128 v16; // xmm5\n  char v18; // [rsp-8h] [rbp-28h]\n\n  v10 = a2;\n  v11 = a4 + dword_94FEB0[a3];\n  v12 = 0;\n  if ( !(unsigned int)sub_44B7B0(a2, 1, 2, a4, a4 + dword_94FA30[a3], a4, a1) )\n  {\n    v12 = 1;\n    if ( !(unsigned int)sub_44B230(v10, 0, 1, v11, v13, v14, a5, a6, a7, a8, v15, v16, a9, a10, v18) )\n      v12 = (unsigned __int64)sub_44B7B0(v10, 1, 2, a4, v11, a4) == 0;\n  }\n  return (unsigned int)v12;\n}\n", 
            "funcStartAddr": "0x46d570L", 
            "funcEndAddr": "0x46d602L", 
            "funcName": "sub_46D570"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46D610(int a1, unsigned int a2, unsigned int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, double a8, double a9, __m128 a10, __m128 a11)\n{\n  __int64 v11; // r12\n  __int64 v12; // r14\n  __int64 v13; // r13\n  __int64 v14; // r15\n  _BOOL4 v15; // ebx\n  __int64 v16; // r8\n  __int64 v17; // r9\n  __m128 v18; // xmm4\n  __m128 v19; // xmm5\n  char v21; // [rsp+0h] [rbp-48h]\n  unsigned int v22; // [rsp+4h] [rbp-44h]\n  unsigned int v23; // [rsp+4h] [rbp-44h]\n  __int64 v24; // [rsp+8h] [rbp-40h]\n  __int64 v25; // [rsp+10h] [rbp-38h]\n\n  v22 = a3;\n  v11 = a2 + dword_94F9F0[a1];\n  v12 = a2 + dword_94FEB0[a1];\n  v13 = a2 + dword_94FE90[a1];\n  v14 = a2 + dword_950330[a1];\n  v24 = a2 + dword_94F9D0[a1];\n  v25 = a2 + dword_94FE70[a1];\n  v15 = 0;\n  if ( !(unsigned int)sub_430D30(a2 + dword_950350[a1]) )\n  {\n    v15 = 0;\n    if ( !(unsigned int)sub_44B980(v22, 1, 5, a2, (unsigned int)v11, (unsigned int)v12, v13, v14, v12, v14) )\n    {\n      v15 = 1;\n      if ( !(unsigned int)sub_44B230(v22, 0, 1, v24, v16, v17, a4, a5, a6, a7, v18, v19, a10, a11, v21) )\n        v15 = (unsigned __int64)sub_44B980(v23, 1, 5, a2, (unsigned int)v13, (unsigned int)v11, v24, v25, v11, v25) == 0;\n    }\n  }\n  return (unsigned int)v15;\n}\n", 
            "funcStartAddr": "0x46d610L", 
            "funcEndAddr": "0x46d722L", 
            "funcName": "sub_46D610"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46D730(int a1, int a2)\n{\n  signed int v2; // er15\n  signed int v3; // er14\n  signed int v4; // ST04_4\n  signed int v5; // ST08_4\n  signed int v6; // ST0C_4\n  signed int v7; // ST10_4\n  signed int v8; // ST14_4\n  signed int v9; // er13\n  _BOOL8 v10; // r12\n  _BOOL4 v11; // ebp\n  int v12; // ebx\n  int v13; // ebp\n  int v14; // ebx\n  int v15; // ebp\n  int v16; // ebx\n  int v17; // ebp\n\n  v2 = a2 + dword_94FE30[a1];\n  v3 = a2 + dword_9502D0[a1];\n  v4 = a2 + dword_950770[a1];\n  v5 = a2 + dword_950C10[a1];\n  v6 = a2 + dword_950C30[a1];\n  v7 = a2 + dword_950C50[a1];\n  v8 = a2 + dword_950C70[a1];\n  v9 = dword_950C90[a1] + a2;\n  v10 = (signed int)sub_430BC0(a2 + dword_94F990[a1]) > 0;\n  v11 = v10 + ((signed int)sub_430BC0(v2) > 0);\n  v12 = v11 + ((signed int)sub_430BC0(v3) > 0);\n  v13 = v12 + ((signed int)sub_430BC0(v4) > 0);\n  v14 = v13 + ((signed int)sub_430BC0(v5) > 0);\n  v15 = v14 + ((signed int)sub_430BC0(v6) > 0);\n  v16 = v15 + ((signed int)sub_430BC0(v7) > 0);\n  v17 = v16 + ((signed int)sub_430BC0(v8) > 0);\n  return v17 + ((signed int)sub_430BC0(v9) > 0) < 2;\n}\n", 
            "funcStartAddr": "0x46d730L", 
            "funcEndAddr": "0x46d869L", 
            "funcName": "sub_46D730"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_46D870@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  int v4; // er14\n  unsigned int v5; // ebp\n  int v6; // er15\n  __int64 v8; // [rsp+0h] [rbp-28h]\n\n  HIDWORD(v8) = HIDWORD(a1);\n  v4 = a2;\n  v5 = a4 + dword_94F570[a3];\n  v6 = dword_94F9F0[a3];\n  if ( (signed int)sub_430BC0(a4 + dword_94F550[a3]) <= 0 )\n    return 0LL;\n  LODWORD(v8) = a4 + v6;\n  return (unsigned int)sub_44B980(3 - v4, 1, 2, a4, v5, v5, v8) != 0;\n}\n", 
            "funcStartAddr": "0x46d870L", 
            "funcEndAddr": "0x46d8e2L", 
            "funcName": "sub_46D870"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46D940@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  int v4; // er15\n  unsigned int v5; // er14\n  unsigned int v6; // ebp\n  int v7; // ebx\n  _BOOL4 v8; // er13\n  __int64 v10; // [rsp+0h] [rbp-38h]\n\n  HIDWORD(v10) = HIDWORD(a1);\n  v4 = a2;\n  v5 = a4 + dword_94F9F0[a3];\n  v6 = a4 + dword_94F570[a3];\n  v7 = a4 + dword_94FEB0[a3];\n  v8 = 0;\n  if ( (signed int)sub_4083A0(a4 + dword_94F570[a3]) <= 4 && (signed int)sub_4083A0(v7) <= 4 )\n  {\n    LODWORD(v10) = v7;\n    v8 = (unsigned __int64)sub_44B5C0(3 - v4, 2, a4, v5, v6, v5, v10) == 5;\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x46d940L", 
            "funcEndAddr": "0x46d9cdL", 
            "funcName": "sub_46D940"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46D9D0(int a1, unsigned int a2, int a3)\n{\n  int v3; // er15\n  unsigned int v4; // ebp\n  unsigned int v5; // ebx\n  _BOOL4 v6; // er12\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94FEB0[a1];\n  v6 = 0;\n  if ( (unsigned int)sub_4305D0(a2 + dword_94F570[a1]) && (unsigned int)sub_4305D0(v5) )\n    v6 = (unsigned __int64)sub_44B980(3 - v3, 0, 1, a2, v4, v5) == 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x46d9d0L", 
            "funcEndAddr": "0x46da45L", 
            "funcName": "sub_46D9D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46DAB0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er15\n  _BOOL4 v6; // ebx\n\n  v4 = a2;\n  v5 = dword_94F0D0[a3];\n  v6 = 0;\n  if ( (unsigned int)sub_44B7B0(3 - a2, 1, 2, a4, a4 + dword_94F590[a3], a4 + dword_94F9F0[a3], a1) )\n    v6 = (unsigned __int64)sub_44B7B0(v4, 0, 1, a4, a4 + v5) == 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x46dab0L", 
            "funcEndAddr": "0x46db2eL", 
            "funcName": "sub_46DAB0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46DB30(int a1, unsigned int a2, int a3)\n{\n  int v3; // er15\n  unsigned int v4; // er14\n  unsigned int v5; // er12\n  signed __int64 v6; // rdi\n  _BOOL8 v7; // rbp\n\n  v3 = a3;\n  v4 = a2 + dword_94F550[a1];\n  v5 = a2 + dword_94FA30[a1];\n  v6 = dword_94F590[a1] + (signed __int64)(signed int)a2;\n  if ( !dword_98A7F4 )\n  {\n    LODWORD(v7) = 0;\n    if ( dword_8E94D4[95 * v6] )\n      return (unsigned int)v7;\n    goto LABEL_3;\n  }\n  LODWORD(v7) = 0;\n  if ( !(unsigned int)sub_43B050(v6, 0LL) )\nLABEL_3:\n    v7 = (unsigned int)sub_44B7B0(3 - v3, 1, 2, a2, v4, v5) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x46db30L", 
            "funcEndAddr": "0x46dbc2L", 
            "funcName": "sub_46DB30"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46DBD0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // rax\n  signed __int64 v5; // rbp\n  signed __int64 v6; // rdi\n  unsigned int v7; // ebx\n  unsigned int v8; // er12\n\n  v3 = a3;\n  v4 = a1;\n  v5 = (signed int)a2 + (signed __int64)dword_94F590[a1];\n  v6 = (signed int)a2 + (signed __int64)dword_94F0F0[a1];\n  v7 = dword_94F570[v4] + a2;\n  if ( dword_98A7F4 )\n  {\n    v8 = 0;\n    if ( !(unsigned int)sub_43B050(v6, 0LL) )\n    {\n      if ( dword_98A7F4 )\n      {\n        v8 = 0;\n        if ( !(unsigned int)sub_43B050(v5, 0LL) )\n          return v8;\n        return (unsigned int)sub_44B7B0(v3, 0, 1, a2, v7) == 0;\n      }\nLABEL_7:\n      if ( !dword_8E94D4[95 * v5] )\n        return 0;\n      return (unsigned int)sub_44B7B0(v3, 0, 1, a2, v7) == 0;\n    }\n  }\n  else\n  {\n    v8 = 0;\n    if ( !dword_8E94D4[95 * v6] )\n      goto LABEL_7;\n  }\n  return v8;\n}\n", 
            "funcStartAddr": "0x46dbd0L", 
            "funcEndAddr": "0x46dc8aL", 
            "funcName": "sub_46DBD0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46DC90(int a1, unsigned int a2, int a3)\n{\n  int v3; // er15\n  unsigned int v4; // ebp\n  unsigned int v5; // ebx\n  _BOOL4 v6; // er12\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94FA30[a1];\n  v6 = 0;\n  if ( (unsigned int)sub_4305D0(a2 + dword_94F570[a1]) && (unsigned int)sub_4305D0(v5) )\n    v6 = (unsigned __int64)sub_44B980(3 - v3, 0, 1, a2, v4, v5) == 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x46dc90L", 
            "funcEndAddr": "0x46dd05L", 
            "funcName": "sub_46DC90"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46DD10@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er15\n  unsigned int v5; // er14\n  unsigned int v6; // er13\n  unsigned int v7; // ebx\n  _BOOL4 v8; // er12\n  __int64 v10; // [rsp-8h] [rbp-38h]\n\n  v10 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94FED0[a3];\n  v6 = a4 + dword_94FA30[a3];\n  v7 = a4 + dword_94FEF0[a3];\n  v8 = 0;\n  if ( (signed int)sub_4083A0(v7) >= 3 )\n  {\n    if ( (unsigned int)sub_4305D0(v6) )\n    {\n      if ( (unsigned int)sub_4305D0(v7) )\n      {\n        v8 = 0;\n        if ( (unsigned int)sub_44B7B0(v4, 1, 2, a4, v5, v5, v10) )\n          v8 = (unsigned __int64)sub_44B980(3 - v4, 0, 1, v5, v6, v7) == 0;\n      }\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x46dd10L", 
            "funcEndAddr": "0x46ddc8L", 
            "funcName": "sub_46DD10"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46DDD0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er15\n  unsigned int v5; // er14\n  unsigned int v6; // er13\n  unsigned int v7; // ebx\n  _BOOL4 v8; // er12\n  __int64 v10; // [rsp-8h] [rbp-38h]\n\n  v10 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94FA30[a3];\n  v6 = a4 + dword_94F590[a3];\n  v7 = a4 + dword_94FA50[a3];\n  v8 = 0;\n  if ( (signed int)sub_4083A0(v7) >= 3 )\n  {\n    if ( (unsigned int)sub_4305D0(v6) )\n    {\n      if ( (unsigned int)sub_4305D0(v7) )\n      {\n        v8 = 0;\n        if ( (unsigned int)sub_44B7B0(v4, 1, 2, a4, v5, v5, v10) )\n          v8 = (unsigned __int64)sub_44B980(3 - v4, 0, 1, v5, v6, v7) == 0;\n      }\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x46ddd0L", 
            "funcEndAddr": "0x46de88L", 
            "funcName": "sub_46DDD0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46DE90(int a1, unsigned int a2)\n{\n  int v2; // ebp\n  _BOOL8 result; // rax\n\n  v2 = dword_94FEB0[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94FE90[a1]) <= 0 )\n    result = 0LL;\n  else\n    result = (unsigned int)sub_44B0A0(a2, a2 + v2) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46de90L", 
            "funcEndAddr": "0x46ded0L", 
            "funcName": "sub_46DE90"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46DED0(int a1, int a2, unsigned int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11)\n{\n  __int64 v11; // r14\n  _BOOL4 v12; // ebx\n  __int64 v13; // r14\n  int v14; // eax\n  char v16; // [rsp+0h] [rbp-18h]\n\n  v11 = dword_94F550[a1];\n  v12 = 0;\n  if ( (unsigned int)sub_44B230(\n                       a3,\n                       0,\n                       2,\n                       (unsigned int)(a2 + dword_94FE90[a1]),\n                       (unsigned int)(a2 + dword_950330[a1]),\n                       a3,\n                       a4,\n                       a5,\n                       a6,\n                       a7,\n                       a8,\n                       a9,\n                       a10,\n                       a11,\n                       v16) )\n  {\n    v13 = a2 + v11;\n    if ( dword_98A7F4 )\n      v14 = sub_43B050(v13, 0LL);\n    else\n      v14 = dword_8E94D4[95 * v13];\n    v12 = v14 != 0;\n  }\n  return (unsigned int)v12;\n}\n", 
            "funcStartAddr": "0x46ded0L", 
            "funcEndAddr": "0x46df48L", 
            "funcName": "sub_46DED0"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_46DF80(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  bool result; // al\n\n  v2 = dword_9507F0[a1];\n  v3 = sub_430BC0(a2 + dword_94FA70[a1]);\n  result = 1;\n  if ( v3 <= 0 )\n    result = (signed int)sub_430BC0(a2 + v2) > 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46df80L", 
            "funcEndAddr": "0x46dfc1L", 
            "funcName": "sub_46DF80"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_46DFD0(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  bool result; // al\n\n  v2 = dword_950350[a1];\n  v3 = sub_430BC0(a2 + dword_94F5D0[a1]);\n  result = 1;\n  if ( v3 <= 0 )\n    result = (signed int)sub_430BC0(a2 + v2) > 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46dfd0L", 
            "funcEndAddr": "0x46e011L", 
            "funcName": "sub_46DFD0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46E020@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  int v4; // er15\n  unsigned int v5; // er14\n  unsigned int v6; // er12\n  int v7; // ebp\n  _BOOL4 v8; // er13\n  __int64 v10; // [rsp-8h] [rbp-38h]\n\n  v10 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94F9F0[a3];\n  v6 = a4 + dword_94FEB0[a3];\n  v7 = dword_94FE90[a3];\n  v8 = 0;\n  if ( (signed int)sub_430BC0(a4 + dword_94FED0[a3]) > 0 && (unsigned int)sub_430D30(a4 + v7) )\n    v8 = (unsigned __int64)sub_44B980(3 - v4, 0, 1, a4, v5, v6, v10) == 0;\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x46e020L", 
            "funcEndAddr": "0x46e0aeL", 
            "funcName": "sub_46E020"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46E130@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  signed __int64 v5; // rbx\n  unsigned int v6; // ebp\n  __int64 v8; // [rsp-8h] [rbp-28h]\n\n  v8 = a1;\n  v4 = a2;\n  v5 = dword_94F0D0[a3] + (signed __int64)(signed int)a4;\n  if ( dword_98A7F4 )\n  {\n    v6 = 0;\n    if ( !(unsigned int)sub_43B050(v5, 0LL) )\n      return v6;\n  }\n  else if ( !dword_8E94D4[95 * v5] )\n  {\n    return 0;\n  }\n  return (unsigned int)sub_44B7B0(v4, 1, 1, a4, (unsigned int)v5, v8) == 0;\n}\n", 
            "funcStartAddr": "0x46e130L", 
            "funcEndAddr": "0x46e1abL", 
            "funcName": "sub_46E130"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46E1B0@<rax>(char a1@<al>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>, __m128 a5@<xmm0>, __m128 a6@<xmm1>, __m128 a7@<xmm2>, __m128 a8@<xmm3>, __m128 a9@<xmm6>, __m128 a10@<xmm7>)\n{\n  signed int v10; // er13\n  int v11; // er14\n  unsigned int v12; // er15\n  __int64 v13; // r12\n  unsigned int v14; // ebp\n  __int64 v15; // r8\n  __int64 v16; // r9\n  __m128 v17; // xmm4\n  __m128 v18; // xmm5\n  __int64 v19; // r8\n  __int64 v20; // r9\n  __m128 v21; // xmm4\n  __m128 v22; // xmm5\n  _BOOL4 v23; // er14\n  char v25; // [rsp-4h] [rbp-38h]\n  char v26; // [rsp-4h] [rbp-38h]\n  int v27; // [rsp+0h] [rbp-34h]\n  unsigned int v28; // [rsp+0h] [rbp-34h]\n\n  v25 = a1;\n  v27 = a2;\n  v10 = a4 + dword_94F570[a3];\n  v11 = dword_94FED0[a3];\n  v12 = a4 + dword_94FA30[a3];\n  v13 = a4 + dword_94F590[a3];\n  v14 = a4 + dword_94FEB0[a3];\n  if ( (signed int)sub_430BC0(a4 + dword_94F570[a3]) <= 0 && (signed int)sub_430BC0(a4 + v11) <= 0 )\n  {\n    v23 = 0;\n  }\n  else if ( (unsigned int)sub_44B230(v27, 0, 1, v14, v15, v16, a5, a6, a7, a8, v17, v18, a9, a10, v25)\n         || (v23 = 0, (unsigned int)sub_44B230(3 - v28, 0, 1, v14, v19, v20, a5, a6, a7, a8, v21, v22, a9, a10, v26))\n         || (signed int)sub_430BC0(v10) < 0 )\n  {\n    v23 = (unsigned __int64)sub_44B980(v28, 1, 3, a4, v12, (unsigned int)v13, a4, v13) == 0;\n  }\n  return (unsigned int)v23;\n}\n", 
            "funcStartAddr": "0x46e1b0L", 
            "funcEndAddr": "0x46e2a0L", 
            "funcName": "sub_46E1B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46E2A0(int a1, int a2)\n{\n  int v2; // ebx\n  int v3; // ebp\n  int v4; // er15\n  _BOOL8 v5; // r14\n\n  v2 = a2 + dword_94F550[a1];\n  v3 = a2 + dword_94FE90[a1];\n  v4 = dword_94FA30[a1] + a2;\n  LODWORD(v5) = 0;\n  if ( !(unsigned int)sub_40B5B0(a2 + dword_94F550[a1], v3) )\n  {\n    LODWORD(v5) = 1;\n    if ( (signed int)sub_4083A0(v2) >= 5 && (signed int)sub_4083A0(v3) >= 5 )\n      v5 = (signed int)sub_4083A0(v4) < 5;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x46e2a0L", 
            "funcEndAddr": "0x46e317L", 
            "funcName": "sub_46E2A0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_46E320@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  unsigned int v6; // ebp\n  _BOOL4 v7; // ecx\n  _BOOL8 result; // rax\n  __int64 v9; // [rsp-8h] [rbp-28h]\n\n  v9 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94F9F0[a3];\n  v6 = a4 + dword_94FED0[a3];\n  v7 = sub_414710(a4 + dword_94F9F0[a3], v6);\n  result = 0LL;\n  if ( !v7 )\n    result = (unsigned int)sub_44BB60(v4, 1, 1, a4, v5, v6, v9) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46e320L", 
            "funcEndAddr": "0x46e386L", 
            "funcName": "sub_46E320"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_46E390@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  unsigned int v6; // ebp\n  _BOOL4 v7; // ecx\n  _BOOL8 result; // rax\n  __int64 v9; // [rsp-8h] [rbp-28h]\n\n  v9 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94F9F0[a3];\n  v6 = a4 + dword_94FED0[a3];\n  v7 = sub_414710(a4 + dword_94F9F0[a3], v6);\n  result = 0LL;\n  if ( !v7 )\n    result = (unsigned int)sub_44BB60(v4, 1, 1, a4, v5, v6, v9) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46e390L", 
            "funcEndAddr": "0x46e3f6L", 
            "funcName": "sub_46E390"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46E400(int a1, unsigned int a2, int a3)\n{\n  int v3; // er15\n  int v4; // er12\n  __int64 v5; // r14\n  unsigned int v6; // er13\n  __int64 v7; // rbp\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_94F0B0[a1];\n  v5 = a2 + dword_94F570[a1];\n  v6 = a2 + dword_94F550[a1];\n  v7 = a2 + dword_94F9F0[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94FEB0[a1]) <= 0 && (signed int)sub_430BC0(a2 + v4) <= 0 )\n    result = 0LL;\n  else\n    result = (unsigned int)sub_44B980(3 - v3, 1, 3, a2, (unsigned int)v5, v6, v5, v7) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46e400L", 
            "funcEndAddr": "0x46e4a2L", 
            "funcName": "sub_46E400"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46E4B0(int a1, unsigned int a2, int a3)\n{\n  int v3; // er15\n  int v4; // er12\n  __int64 v5; // r14\n  unsigned int v6; // er13\n  __int64 v7; // rbp\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_94F0B0[a1];\n  v5 = a2 + dword_94F570[a1];\n  v6 = a2 + dword_94F550[a1];\n  v7 = a2 + dword_94F9F0[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94FEB0[a1]) <= 0 && (signed int)sub_430BC0(a2 + v4) <= 0 )\n    result = 0LL;\n  else\n    result = (unsigned int)sub_44B980(3 - v3, 1, 3, a2, (unsigned int)v5, v6, v5, v7) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46e4b0L", 
            "funcEndAddr": "0x46e552L", 
            "funcName": "sub_46E4B0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46E560(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // er12\n  unsigned int v5; // er15\n  unsigned int v6; // ebx\n  _QWORD v8[7]; // [rsp+0h] [rbp-38h]\n\n  v3 = a3;\n  v4 = dword_94F0D0[a1];\n  v5 = a2 + dword_94F570[a1];\n  v6 = a2 + dword_94F550[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94F590[a1]) <= 0 && (signed int)sub_430BC0(a2 + v4) <= 0 )\n    return 0LL;\n  LODWORD(v8[0]) = a2;\n  return (unsigned int)sub_44B980(v3, 0, 2, a2, v5, v6, v8[0]) != 0;\n}\n", 
            "funcStartAddr": "0x46e560L", 
            "funcEndAddr": "0x46e5eaL", 
            "funcName": "sub_46E560"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_46E5F0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er13\n  signed int v6; // er12\n  unsigned int v7; // ebx\n  unsigned int v8; // er15\n  __int64 v10; // [rsp+0h] [rbp-38h]\n\n  HIDWORD(v10) = HIDWORD(a1);\n  v4 = a2;\n  v5 = dword_94F570[a3];\n  v6 = a4 + dword_94F590[a3];\n  v7 = a4 + dword_94FEB0[a3];\n  v8 = a4 + dword_94F9F0[a3];\n  if ( (signed int)sub_430BC0(a4 + dword_94FA30[a3]) <= 0\n    && (signed int)sub_430BC0(a4 + v5) <= 0\n    && (signed int)sub_430BC0(v6) <= 0 )\n  {\n    return 0LL;\n  }\n  LODWORD(v10) = v7;\n  return (unsigned int)sub_44B980(v4, 0, 2, v7, a4, v8, v10) == 0;\n}\n", 
            "funcStartAddr": "0x46e5f0L", 
            "funcEndAddr": "0x46e692L", 
            "funcName": "sub_46E5F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46E6A0(int a1, unsigned int a2, int a3)\n{\n  int v3; // er15\n  unsigned int v4; // ebp\n  unsigned int v5; // ebx\n  _BOOL8 v6; // r12\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94FEB0[a1];\n  LODWORD(v6) = 0;\n  if ( (unsigned int)sub_4305D0(a2 + dword_94F570[a1]) && (unsigned int)sub_4305D0(v5) )\n    v6 = (unsigned int)sub_44B980(3 - v3, 1, 1, a2, v4, v5) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x46e6a0L", 
            "funcEndAddr": "0x46e715L", 
            "funcName": "sub_46E6A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46E720(int a1, signed int a2)\n{\n  int v2; // er15\n  int v3; // er14\n  signed __int64 v4; // rbp\n  _BOOL4 v5; // er12\n\n  v2 = a2 + dword_94FEB0[a1];\n  v3 = a2 + dword_94FA30[a1];\n  v4 = dword_94FED0[a1] + (signed __int64)a2;\n  if ( dword_98A7F4 )\n  {\n    if ( (unsigned int)sub_43B050(v4, 0LL) != 5 )\n    {\nLABEL_7:\n      if ( (unsigned int)sub_430D30(v2) )\n        v5 = (unsigned __int64)sub_430D30(v3) == 0;\n      else\n        v5 = 1;\n      return (unsigned int)v5;\n    }\n  }\n  else if ( dword_8E94D4[95 * v4] != 5 )\n  {\n    goto LABEL_7;\n  }\n  v5 = 0;\n  if ( (signed int)sub_40A5F0(v4) <= 2 && (unsigned int)sub_44AE70(a2, v4) )\n    goto LABEL_7;\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x46e720L", 
            "funcEndAddr": "0x46e7c9L", 
            "funcName": "sub_46E720"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46E7D0(int a1, signed int a2)\n{\n  int v2; // er15\n  int v3; // er14\n  signed __int64 v4; // rbp\n  _BOOL4 v5; // er12\n\n  v2 = a2 + dword_94FEB0[a1];\n  v3 = a2 + dword_94FA30[a1];\n  v4 = dword_94FED0[a1] + (signed __int64)a2;\n  if ( dword_98A7F4 )\n  {\n    if ( (unsigned int)sub_43B050(v4, 0LL) != 5 )\n    {\nLABEL_7:\n      if ( (unsigned int)sub_430D30(v2) )\n        v5 = (unsigned __int64)sub_430D30(v3) == 0;\n      else\n        v5 = 1;\n      return (unsigned int)v5;\n    }\n  }\n  else if ( dword_8E94D4[95 * v4] != 5 )\n  {\n    goto LABEL_7;\n  }\n  v5 = 0;\n  if ( (signed int)sub_40A5F0(v4) <= 2 && (unsigned int)sub_44AE70(a2, v4) )\n    goto LABEL_7;\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x46e7d0L", 
            "funcEndAddr": "0x46e879L", 
            "funcName": "sub_46E7D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46E880@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er13\n  unsigned int v6; // er15\n  unsigned int v7; // er12\n  _BOOL4 v8; // ebx\n  _QWORD v10[7]; // [rsp+0h] [rbp-38h]\n  __int64 v11; // [rsp+0h] [rbp-38h]\n\n  v10[0] = a1;\n  v4 = a2;\n  v5 = dword_94F570[a3];\n  v6 = a4 + dword_94F590[a3];\n  v7 = a4 + dword_94FED0[a3];\n  if ( (signed int)sub_430BC0(a4 + dword_94FEB0[a3]) <= 0 )\n  {\n    v8 = 0;\n  }\n  else\n  {\n    v8 = 0;\n    if ( (unsigned int)sub_44B7B0(v4, 1, 1, a4, a4 + v5, v10[0]) )\n    {\n      LODWORD(v11) = v7;\n      v8 = (unsigned __int64)sub_44B7B0(v4, 1, 3, a4, v6, v7, v11) == 0;\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x46e880L", 
            "funcEndAddr": "0x46e921L", 
            "funcName": "sub_46E880"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46E970(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_94FEB0[a1];\n  v3 = sub_4083A0(a2 + dword_94FE90[a1]);\n  result = 0LL;\n  if ( v3 == 1 )\n    result = (unsigned int)sub_4083A0(a2 + v2) == 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x46e970L", 
            "funcEndAddr": "0x46e9b0L", 
            "funcName": "sub_46E970"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46E9B0(int a1, int a2)\n{\n  signed int v2; // ebx\n  signed int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_94FA30[a1] + a2;\n  v3 = sub_40A5F0(v2);\n  result = 0LL;\n  if ( v3 >= 4 )\n    result = (unsigned int)sub_4083A0(v2) == 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x46e9b0L", 
            "funcEndAddr": "0x46e9e0L", 
            "funcName": "sub_46E9B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46E9E0(int a1, int a2, int a3)\n{\n  int v3; // er14\n  signed int v4; // ebp\n  _BOOL4 v5; // ebx\n  signed int v6; // eax\n\n  v3 = a3;\n  v4 = a2 + dword_94FA30[a1];\n  v5 = 0;\n  if ( (signed int)sub_40A5F0(v4) <= 3 && (unsigned int)sub_4083A0(v4) == 1 )\n  {\n    v6 = sub_4099C0(a2, v3, 20, 0LL);\n    v5 = v6 < 1;\n    LOBYTE(v5) = v6 > 1;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x46e9e0L", 
            "funcEndAddr": "0x46ea3bL", 
            "funcName": "sub_46E9E0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46EA40(int a1, unsigned int a2)\n{\n  signed int v2; // ebp\n  signed int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = a2 + dword_94FA30[a1];\n  v3 = sub_40A5F0(v2);\n  result = 0LL;\n  if ( v3 >= 4 )\n    result = (unsigned int)sub_44AE70(a2, v2) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46ea40L", 
            "funcEndAddr": "0x46ea7aL", 
            "funcName": "sub_46EA40"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46EA80(int a1, unsigned int a2, int a3)\n{\n  int v3; // er14\n  signed int v4; // ebx\n  _BOOL8 v5; // rbp\n\n  v3 = a3;\n  v4 = a2 + dword_94FA30[a1];\n  LODWORD(v5) = 0;\n  if ( (signed int)sub_40A5F0(v4) <= 3 )\n  {\n    if ( (unsigned int)sub_44AE70(a2, v4) )\n    {\n      LODWORD(v5) = 1;\n      if ( (signed int)sub_4099C0(a2, v3, 20, 0LL) <= 1 )\n        v5 = (unsigned int)sub_40B8D0(a2) != 0;\n    }\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x46ea80L", 
            "funcEndAddr": "0x46eaefL", 
            "funcName": "sub_46EA80"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46EB50(int a1, int a2, int a3)\n{\n  int v3; // er14\n  int v4; // ebp\n  int v5; // ecx\n  _BOOL8 result; // rax\n  int v7; // eax\n\n  v3 = a3;\n  v4 = dword_94F550[a1];\n  v5 = sub_4083A0(a2 + dword_94FEB0[a1]);\n  result = 0LL;\n  if ( v5 == 2 )\n  {\n    LOBYTE(v7) = sub_430330(a2 + v4, 3 - v3);\n    result = v7 == 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x46eb50L", 
            "funcEndAddr": "0x46eb99L", 
            "funcName": "sub_46EB50"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46EBA0(int a1, int a2, int a3)\n{\n  int v3; // er14\n  int v4; // ebx\n  signed int v5; // ecx\n  _BOOL8 result; // rax\n  int v7; // eax\n\n  v3 = a3;\n  v4 = dword_94F550[a1];\n  v5 = sub_4083A0(a2 + dword_94FEB0[a1]);\n  result = 0LL;\n  if ( v5 >= 2 )\n  {\n    LOBYTE(v7) = sub_430330(a2 + v4, 3 - v3);\n    result = v7 == 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x46eba0L", 
            "funcEndAddr": "0x46ebe9L", 
            "funcName": "sub_46EBA0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46EBF0(int a1, int a2)\n{\n  __int64 v2; // rax\n  __int64 v3; // rbx\n  int v4; // ecx\n  _BOOL8 result; // rax\n  int v6; // ecx\n\n  v2 = dword_94FE70[a1];\n  v3 = v2 + a2;\n  v4 = sub_4083A0((signed int)v2 + a2);\n  result = 0LL;\n  if ( v4 == 4 )\n  {\n    if ( dword_98A7F4 )\n      v6 = sub_43B050(v3, 0LL);\n    else\n      v6 = dword_8E94D4[95 * v3];\n    result = v6 != 5;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x46ebf0L", 
            "funcEndAddr": "0x46ec3fL", 
            "funcName": "sub_46EBF0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46EC40(int a1, int a2)\n{\n  __int64 v2; // rax\n  __int64 v3; // rbx\n  int v4; // ecx\n  _BOOL8 result; // rax\n  int v6; // ecx\n\n  v2 = dword_950330[a1];\n  v3 = v2 + a2;\n  v4 = sub_4083A0((signed int)v2 + a2);\n  result = 0LL;\n  if ( v4 == 2 )\n  {\n    if ( dword_98A7F4 )\n      v6 = sub_43B050(v3, 0LL);\n    else\n      v6 = dword_8E94D4[95 * v3];\n    result = v6 != 5;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x46ec40L", 
            "funcEndAddr": "0x46ec8fL", 
            "funcName": "sub_46EC40"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46ED10(int a1, int a2)\n{\n  __int64 v2; // rbx\n  signed int v3; // ecx\n  _BOOL8 result; // rax\n  __int64 v5; // rbx\n  int v6; // ecx\n\n  v2 = dword_94FED0[a1];\n  v3 = sub_4083A0(a2 + dword_94F9F0[a1]);\n  result = 0LL;\n  if ( v3 <= 3 )\n  {\n    v5 = a2 + v2;\n    if ( dword_98A7F4 )\n      v6 = sub_43B6F0(a2, v5, 0LL);\n    else\n      v6 = dword_8E9524[95 * v5];\n    result = v6 != 5;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x46ed10L", 
            "funcEndAddr": "0x46ed6fL", 
            "funcName": "sub_46ED10"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46EDD0(int a1, int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __int64 a12, __int64 a13, __int64 a14)\n{\n  int v14; // ebp\n  _BOOL8 v15; // rbx\n  char v17; // [rsp+0h] [rbp-18h]\n\n  v14 = dword_950350[a1];\n  LODWORD(v15) = 1;\n  if ( (unsigned int)sub_44B230(\n                       3 - a3,\n                       0,\n                       1,\n                       (unsigned int)(a2 + dword_950330[a1]),\n                       a13,\n                       a14,\n                       a4,\n                       a5,\n                       a6,\n                       a7,\n                       a8,\n                       a9,\n                       a10,\n                       a11,\n                       v17) )\n    v15 = (signed int)sub_4083A0(a2 + v14) < 7;\n  return (unsigned int)v15;\n}\n", 
            "funcStartAddr": "0x46edd0L", 
            "funcEndAddr": "0x46ee22L", 
            "funcName": "sub_46EDD0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46EE30(int a1, int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebp\n  int v5; // er12\n  __int128 v6; // cx\n\n  v3 = a3;\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = dword_9507F0[a1];\n  v6 = v4;\n  if ( (unsigned int)sub_44B7B0(a3, 1, 1, v4, v4) )\n    DWORD2(v6) = (unsigned __int64)sub_44B7B0(v3, 1, 1, v4, (unsigned int)(a2 + v5)) == 0;\n  return DWORD2(v6);\n}\n", 
            "funcStartAddr": "0x46ee30L", 
            "funcEndAddr": "0x46eea0L", 
            "funcName": "sub_46EE30"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46EEA0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebp\n  _BOOL8 v6; // r15\n\n  v4 = a2;\n  v5 = a4 + dword_950370[a3];\n  LODWORD(v6) = 1;\n  if ( !(unsigned int)sub_44B7B0(a2, 1, 1, v5, (unsigned int)(dword_94FEB0[a3] + a4), a1) )\n    v6 = (unsigned int)sub_44B7B0(v4, 1, 1, v5, v5) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x46eea0L", 
            "funcEndAddr": "0x46ef12L", 
            "funcName": "sub_46EEA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46EF20(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // er15\n  int v5; // er12\n  __int128 v6; // cx\n  _QWORD v8[7]; // [rsp+0h] [rbp-38h]\n\n  v3 = a3;\n  v4 = dword_94FE90[a1];\n  v5 = dword_950350[a1];\n  LODWORD(v8[0]) = a2 + dword_950330[a1];\n  v6 = a2;\n  if ( !(unsigned int)sub_44B7B0(a3, 1, 3, a2, a2 + dword_94F9F0[a1], v8[0]) )\n    *((_QWORD *)&v6 + 1) = (unsigned int)sub_44B7B0(v3, 0, 2, a2, a2 + v4, a2 + v5) != 0;\n  return DWORD2(v6);\n}\n", 
            "funcStartAddr": "0x46ef20L", 
            "funcEndAddr": "0x46efb2L", 
            "funcName": "sub_46EF20"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46EFC0(int a1, int a2)\n{\n  __int64 v2; // rcx\n  __int64 v3; // rbx\n  int v4; // ebp\n  _BOOL4 v5; // er14\n  __int64 v6; // rax\n  int v7; // eax\n\n  v2 = dword_94F530[a1];\n  v3 = v2 + a2;\n  v4 = dword_94FE70[a1];\n  v5 = 0;\n  if ( (unsigned int)sub_4083A0((signed int)v2 + a2) == 1 )\n  {\n    v6 = sub_4083A0(a2 + v4);\n    if ( (signed int)v6 <= 3 )\n    {\n      if ( dword_98A7F4 )\n        v7 = sub_43B6F0(v6, v3, 0LL);\n      else\n        v7 = dword_8E9524[95 * v3];\n      v5 = v7 != 5;\n    }\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x46efc0L", 
            "funcEndAddr": "0x46f039L", 
            "funcName": "sub_46EFC0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46F040(int a1, int a2, int a3)\n{\n  int v3; // er15\n  int v4; // ebx\n  _BOOL8 v5; // r14\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  LODWORD(v5) = 0;\n  if ( (unsigned int)sub_4083A0(v4) == 2 )\n  {\n    LODWORD(v5) = 0;\n    if ( (signed int)sub_4099C0(a2, v3, 20, 0LL) >= 2 )\n      v5 = (unsigned int)sub_469C10(v4) != 0;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x46f040L", 
            "funcEndAddr": "0x46f09eL", 
            "funcName": "sub_46F040"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46F0A0(int a1, int a2, int a3)\n{\n  int v3; // er15\n  int v4; // ebx\n  _BOOL8 v5; // r14\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  LODWORD(v5) = 0;\n  if ( (unsigned int)sub_4083A0(v4) == 2 )\n  {\n    LODWORD(v5) = 0;\n    if ( (signed int)sub_4099C0(a2, v3, 20, 0LL) >= 2 )\n      v5 = (unsigned int)sub_469C10(v4) != 0;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x46f0a0L", 
            "funcEndAddr": "0x46f0feL", 
            "funcName": "sub_46F0A0"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_46F100(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94FEB0[a1];\n  v3 = sub_430BC0(a2 + dword_94F570[a1]);\n  result = 1;\n  if ( v3 <= 0 )\n    result = (signed int)sub_430BC0(a2 + v2) > 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46f100L", 
            "funcEndAddr": "0x46f141L", 
            "funcName": "sub_46F100"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_46F150(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94FEB0[a1];\n  v3 = sub_430BC0(a2 + dword_94F570[a1]);\n  result = 1;\n  if ( v3 <= 0 )\n    result = (signed int)sub_430BC0(a2 + v2) > 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46f150L", 
            "funcEndAddr": "0x46f191L", 
            "funcName": "sub_46F150"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46F1A0@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, int a4@<esi>)\n{\n  int v4; // er14\n  __int64 v5; // rax\n  signed __int64 v6; // rdi\n  unsigned int v7; // er15\n  unsigned int v8; // ebx\n  _BOOL4 v9; // ebp\n  __int64 v11; // [rsp-8h] [rbp-28h]\n\n  v11 = a1;\n  v4 = a2;\n  v5 = a3;\n  v6 = a4 + (signed __int64)dword_950C50[a3];\n  v7 = a4 + dword_94F9F0[v5];\n  v8 = dword_94FE90[v5] + a4;\n  if ( !dword_98A7F4 )\n  {\n    v9 = 0;\n    if ( dword_8E94D4[95 * v6] )\n      return (unsigned int)v9;\n    goto LABEL_3;\n  }\n  v9 = 0;\n  if ( !(unsigned int)sub_43B050(v6, 0LL) )\nLABEL_3:\n    v9 = (unsigned __int64)sub_44B7B0(3 - v4, 0, 1, v7, v8, v11) == 0;\n  return (unsigned int)v9;\n}\n", 
            "funcStartAddr": "0x46f1a0L", 
            "funcEndAddr": "0x46f22bL", 
            "funcName": "sub_46F1A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46F230@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  unsigned int v6; // er15\n  unsigned int v7; // er12\n  _BOOL4 v8; // er13\n  _QWORD v10[7]; // [rsp+0h] [rbp-38h]\n  __int64 v11; // [rsp+0h] [rbp-38h]\n\n  v10[0] = a1;\n  v4 = a2;\n  v5 = a4 + dword_94F9F0[a3];\n  v6 = a4 + dword_94F570[a3];\n  v7 = a4 + dword_94FE90[a3];\n  v8 = 0;\n  if ( !(unsigned int)sub_43F100(a4 + dword_94F9F0[a3], a2) )\n  {\n    v8 = 0;\n    if ( (unsigned int)sub_44B7B0(v4, 0, 2, a4, v5, a4, v10[0]) )\n    {\n      LODWORD(v11) = v7;\n      v8 = (unsigned __int64)sub_44B7B0(v4, 1, 3, a4, v6, v7, v11) == 0;\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x46f230L", 
            "funcEndAddr": "0x46f2d1L", 
            "funcName": "sub_46F230"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46F4C0(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r13\n  unsigned int v4; // er15\n  unsigned int v5; // er12\n  __int64 v6; // r14\n  unsigned int v7; // ebx\n  __int64 v8; // r13\n  unsigned int v10; // [rsp+Ch] [rbp-3Ch]\n  __int64 v11; // [rsp+10h] [rbp-38h]\n\n  v10 = a3;\n  v3 = dword_94EBF0[a1];\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94F550[a1];\n  v11 = a2 + dword_94F0B0[a1];\n  v6 = a2 + dword_94F9F0[a1];\n  v7 = 0;\n  if ( (unsigned int)sub_4083A0(a2 + dword_94F090[a1]) == 3 )\n  {\n    v8 = (signed int)a2 + v3;\n    if ( !dword_98A7F4 )\n    {\n      if ( dword_8E94D4[95 * v8] )\n        return v7;\n      return (unsigned int)sub_44B7B0(v10, 1, 5, a2, v4, v5, v11, v6, v6) == 0;\n    }\n    v7 = 0;\n    if ( !(unsigned int)sub_43B050(v8, 0LL) )\n      return (unsigned int)sub_44B7B0(v10, 1, 5, a2, v4, v5, v11, v6, v6) == 0;\n  }\n  return v7;\n}\n", 
            "funcStartAddr": "0x46f4c0L", 
            "funcEndAddr": "0x46f59cL", 
            "funcName": "sub_46F4C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46F5A0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // rbx\n  int v5; // er15\n  _BOOL4 v6; // er12\n\n  v3 = a3;\n  v4 = a2 + dword_94F9F0[a1];\n  v5 = dword_9507D0[a1];\n  v6 = 0;\n  if ( (unsigned int)sub_44B7B0(\n                       a3,\n                       1,\n                       6,\n                       a2,\n                       a2 + dword_94F570[a1],\n                       a2 + dword_950350[a1],\n                       a2 + dword_94FEB0[a1],\n                       a2 + dword_94FE90[a1],\n                       v4,\n                       v4) )\n    v6 = (unsigned __int64)sub_44B7B0(v3, 1, 1, a2, a2 + v5) == 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x46f5a0L", 
            "funcEndAddr": "0x46f648L", 
            "funcName": "sub_46F5A0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46F650(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // er12\n  int v5; // ebx\n  int v6; // er15\n  int v7; // er13\n  signed int v8; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_94FA30[a1];\n  v5 = dword_94FA50[a1];\n  v6 = dword_950390[a1];\n  v7 = dword_94FED0[a1];\n  v8 = sub_4083A0(a2 + dword_950830[a1]);\n  result = 0LL;\n  if ( v8 >= 3 )\n    result = (unsigned int)sub_44B7B0(v3, 0, 7, a2, 0LL, a2 + v5, 0LL, a2 + v6, 0LL, a2 + v7, a2 + v4) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x46f650L", 
            "funcEndAddr": "0x46f6f0L", 
            "funcName": "sub_46F650"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46F6F0(int a1, unsigned int a2, int a3)\n{\n  unsigned int v3; // er15\n  unsigned int v4; // er14\n  unsigned int v5; // er12\n  _BOOL4 v6; // ebp\n  __int64 v8; // [rsp+0h] [rbp-38h]\n  _QWORD v9[7]; // [rsp+0h] [rbp-38h]\n\n  v3 = a2 + dword_94FA30[a1];\n  v4 = a2 + dword_94F590[a1];\n  v5 = 3 - a3;\n  LODWORD(v8) = a2 + dword_94FED0[a1];\n  v6 = 1;\n  if ( (unsigned int)sub_44B7B0(3 - a3, 1, 3, a2, v3, v8) )\n  {\n    LODWORD(v9[0]) = v4;\n    v6 = (unsigned __int64)sub_44B7B0(v5, 1, 3, a2, v3, v4, v9[0]) == 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x46f6f0L", 
            "funcEndAddr": "0x46f788L", 
            "funcName": "sub_46F6F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46F790(int a1, unsigned int a2, int a3)\n{\n  unsigned int v3; // ebp\n  int v4; // er14\n  unsigned int v5; // er12\n  __int128 v6; // cx\n  _QWORD v8[7]; // [rsp+0h] [rbp-38h]\n\n  v3 = a2 + dword_94FA30[a1];\n  v4 = dword_94F590[a1];\n  v5 = 3 - a3;\n  v6 = a2;\n  if ( (unsigned int)sub_44B7B0(3 - a3, 1, 2, a2, v3, a2 + dword_94F570[a1]) )\n  {\n    LODWORD(v8[0]) = v3;\n    DWORD2(v6) = (unsigned __int64)sub_44B7B0(v5, 1, 3, a2, a2 + v4, v3, v8[0]) == 0;\n  }\n  return DWORD2(v6);\n}\n", 
            "funcStartAddr": "0x46f790L", 
            "funcEndAddr": "0x46f821L", 
            "funcName": "sub_46F790"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46F830@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  int v4; // er14\n  unsigned int v5; // ebp\n  _BOOL8 v6; // rbx\n\n  v4 = dword_94FEB0[a3];\n  v5 = 3 - a2;\n  LODWORD(v6) = 1;\n  if ( !(unsigned int)sub_44B7B0(3 - a2, 1, 1, a4, a4 + dword_94F570[a3], a1) )\n    v6 = (unsigned int)sub_44B7B0(v5, 1, 1, a4, a4 + v4) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x46f830L", 
            "funcEndAddr": "0x46f8a6L", 
            "funcName": "sub_46F830"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46FAE0(int a1, unsigned int a2, int a3)\n{\n  __int64 v3; // r12\n  unsigned int v4; // er14\n  __int64 v5; // r13\n  unsigned int v6; // ebx\n  _BOOL8 v7; // r15\n  unsigned int v9; // [rsp+0h] [rbp-34h]\n\n  v3 = a2 + dword_94F9F0[a1];\n  v4 = a2 + dword_94FEB0[a1];\n  v9 = a2 + dword_94FA30[a1];\n  v5 = a2 + dword_94F570[a1];\n  v6 = 3 - a3;\n  LODWORD(v7) = 0;\n  if ( (unsigned int)sub_44B980(3 - a3, 1, 2, a2, (unsigned int)v3, (unsigned int)v3, v5) )\n  {\n    LODWORD(v7) = 1;\n    if ( !(unsigned int)sub_44B7B0(v6, 1, 2, a2, v4, (unsigned int)v5) )\n      v7 = (unsigned int)sub_44B980(v6, 1, 4, a2, v4, v9, v3, v3, v5) != 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x46fae0L", 
            "funcEndAddr": "0x46fbbfL", 
            "funcName": "sub_46FAE0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_46FC80@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  __int64 v4; // ST00_8\n  int v5; // er14\n  unsigned int v6; // er15\n  int v7; // ebp\n  unsigned int v8; // er12\n  _BOOL8 v9; // r13\n  _QWORD v11[7]; // [rsp+0h] [rbp-38h]\n\n  HIDWORD(v4) = HIDWORD(a1);\n  v5 = dword_94F570[a3];\n  v6 = a4 + dword_94F550[a3];\n  v7 = a4 + dword_94FEB0[a3];\n  v8 = 3 - a2;\n  LODWORD(v4) = a4 + dword_94FEB0[a3];\n  LODWORD(v9) = 0;\n  if ( (unsigned int)sub_44B980(3 - a2, 1, 2, a4, a4 + dword_94F9F0[a3], v6, v4) )\n  {\n    LODWORD(v11[0]) = v7;\n    v9 = (unsigned int)sub_44B980(v8, 1, 2, a4, a4 + v5, v6, v11[0]) != 0;\n  }\n  return (unsigned int)v9;\n}\n", 
            "funcStartAddr": "0x46fc80L", 
            "funcEndAddr": "0x46fd20L", 
            "funcName": "sub_46FC80"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46FD20(int a1, unsigned int a2, int a3)\n{\n  __int64 v3; // r14\n  __int64 v4; // rbx\n  unsigned int v5; // ebp\n  _BOOL4 v6; // er12\n\n  v3 = a2 + dword_94FE90[a1];\n  v4 = a2 + dword_94FED0[a1];\n  v5 = 3 - a3;\n  v6 = 0;\n  if ( !(unsigned int)sub_44B980(3 - a3, 1, 3, a2, (unsigned int)v3, (unsigned int)v4, a2, v4) )\n    v6 = (unsigned __int64)sub_44B980(v5, 1, 3, a2, (unsigned int)v4, (unsigned int)v3, a2, v3) == 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x46fd20L", 
            "funcEndAddr": "0x46fdb3L", 
            "funcName": "sub_46FD20"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46FE00(int a1, unsigned int a2, int a3)\n{\n  __int64 v3; // r14\n  __int64 v4; // rbx\n  int v5; // er13\n  unsigned int v6; // ebp\n  _BOOL8 v7; // r12\n\n  v3 = a2 + dword_94FE90[a1];\n  v4 = a2 + dword_94FED0[a1];\n  v5 = dword_94F9F0[a1];\n  v6 = 3 - a3;\n  LODWORD(v7) = 0;\n  if ( !(unsigned int)sub_44B980(3 - a3, 1, 3, a2, (unsigned int)v3, (unsigned int)v4, a2, v4) )\n    v7 = (unsigned int)sub_44B980(v6, 0, 4, a2, (unsigned int)v4, (unsigned int)v3, a2 + v5, a2, v3) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x46fe00L", 
            "funcEndAddr": "0x46feadL", 
            "funcName": "sub_46FE00"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_46FEF0(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_94FA30[a1];\n  v3 = sub_4083A0(a2 + dword_94FE90[a1]);\n  result = 1LL;\n  if ( v3 != 2 )\n    result = (unsigned int)sub_4083A0(a2 + v2) == 2;\n  return result;\n}\n", 
            "funcStartAddr": "0x46fef0L", 
            "funcEndAddr": "0x46ff33L", 
            "funcName": "sub_46FEF0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_46FF80(int a1, signed int a2, int a3)\n{\n  int v3; // er14\n  signed __int64 v4; // rdi\n  __int64 v5; // rbp\n\n  v3 = a3;\n  v4 = dword_94F550[a1] + (signed __int64)a2;\n  if ( dword_98A7F4 )\n  {\n    LODWORD(v5) = 0;\n    if ( !(unsigned int)sub_43B050(v4, 0LL) )\n      return (unsigned int)v5;\n  }\n  else if ( !dword_8E94D4[95 * v4] )\n  {\n    LODWORD(v5) = 0;\n    return (unsigned int)v5;\n  }\n  return (unsigned int)sub_43F100(a2, 3 - v3) != 0;\n}\n", 
            "funcStartAddr": "0x46ff80L", 
            "funcEndAddr": "0x46ffe4L", 
            "funcName": "sub_46FF80"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_470060(int a1, unsigned int a2, int a3)\n{\n  int v3; // er14\n  int v4; // er12\n  unsigned int v5; // er15\n  _BOOL8 v6; // rbp\n  __int64 v8; // [rsp+0h] [rbp-38h]\n  _QWORD v9[7]; // [rsp+0h] [rbp-38h]\n\n  v3 = dword_94FA30[a1];\n  v4 = dword_94F590[a1];\n  v5 = 3 - a3;\n  LODWORD(v8) = a2 + dword_94FE90[a1];\n  LODWORD(v6) = 0;\n  if ( (unsigned int)sub_44B980(3 - a3, 0, 2, a2, a2 + dword_94F9F0[a1], a2, v8) )\n  {\n    LODWORD(v9[0]) = a2 + v4;\n    v6 = (unsigned int)sub_44B980(v5, 0, 2, a2, a2 + v3, a2, v9[0]) != 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x470060L", 
            "funcEndAddr": "0x4700fdL", 
            "funcName": "sub_470060"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_470100@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  int v4; // er15\n  __int64 v5; // rax\n  unsigned int v6; // er14\n  unsigned int v7; // er12\n  signed __int64 v8; // rdi\n  signed __int64 v9; // rbp\n  _BOOL4 v10; // er13\n  __int64 v12; // [rsp+0h] [rbp-38h]\n  __int64 v13; // [rsp+0h] [rbp-38h]\n\n  HIDWORD(v12) = HIDWORD(a1);\n  v4 = a2;\n  v5 = a3;\n  v6 = a4 + dword_94F9F0[a3];\n  v7 = a4 + dword_94FEB0[a3];\n  v8 = (signed int)a4 + (signed __int64)dword_94FE70[a3];\n  v9 = (signed int)a4 + (signed __int64)dword_950330[v5];\n  if ( dword_98A7F4 )\n  {\n    v10 = 0;\n    if ( (unsigned int)sub_43B050(v8, 0LL) )\n      return (unsigned int)v10;\n    if ( dword_98A7F4 )\n    {\n      v10 = 0;\n      if ( (unsigned int)sub_43B050(v9, 0LL) )\n        return (unsigned int)v10;\n      goto LABEL_8;\n    }\n  }\n  else\n  {\n    v10 = 0;\n    if ( dword_8E94D4[95 * v8] )\n      return (unsigned int)v10;\n  }\n  v10 = 0;\n  if ( dword_8E94D4[95 * v9] )\n    return (unsigned int)v10;\nLABEL_8:\n  LODWORD(v12) = a4;\n  v10 = 0;\n  if ( !(unsigned int)sub_44B7B0(3 - v4, 1, 3, a4, v6, v7, v12) )\n  {\n    LODWORD(v13) = a4;\n    v10 = (unsigned __int64)sub_44B7B0(3 - v4, 1, 3, a4, v7, v6, v13) == 0;\n  }\n  return (unsigned int)v10;\n}\n", 
            "funcStartAddr": "0x470100L", 
            "funcEndAddr": "0x470204L", 
            "funcName": "sub_470100"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4702D0(int a1, unsigned int a2, int a3)\n{\n  __int64 v3; // r15\n  unsigned int v4; // er14\n  __int64 v5; // r13\n  __int64 v6; // r12\n  unsigned int v7; // ebx\n  _BOOL4 v9; // [rsp+Ch] [rbp-3Ch]\n  __int64 v10; // [rsp+10h] [rbp-38h]\n\n  v3 = a2 + dword_94F9F0[a1];\n  v4 = a2 + dword_94FA30[a1];\n  v5 = a2 + dword_94F550[a1];\n  v6 = a2 + dword_94FE90[a1];\n  v10 = a2 + dword_94F590[a1];\n  v7 = 3 - a3;\n  v9 = 0;\n  if ( (unsigned int)sub_44B980(3 - a3, 0, 3, a2, (unsigned int)v3, v4, v5, v6) )\n  {\n    v9 = 0;\n    if ( (unsigned int)sub_44B980(v7, 0, 3, a2, (unsigned int)v3, v4, v6, v5) )\n      v9 = (unsigned __int64)sub_44B980(v7, 0, 3, a2, v4, (unsigned int)v3, v3, v10) != 0;\n  }\n  return (unsigned int)v9;\n}\n", 
            "funcStartAddr": "0x4702d0L", 
            "funcEndAddr": "0x4703cbL", 
            "funcName": "sub_4702D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4703D0(int a1, unsigned int a2, int a3)\n{\n  int v3; // er15\n  __int64 v4; // r14\n  unsigned int v5; // er12\n  _BOOL4 v6; // ebp\n\n  v3 = dword_94F590[a1];\n  v4 = a2 + dword_94FED0[a1];\n  v5 = 3 - a3;\n  v6 = 0;\n  if ( (unsigned int)sub_44B7B0(3 - a3, 1, 1, a2, a2 + dword_94F570[a1]) )\n    v6 = (unsigned __int64)sub_44B980(v5, 1, 3, a2, a2 + v3, (unsigned int)v4, v4, a2) == 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x4703d0L", 
            "funcEndAddr": "0x47045cL", 
            "funcName": "sub_4703D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_470460(int a1, unsigned int a2, int a3)\n{\n  __int64 v3; // rbx\n  __int64 v4; // r15\n  unsigned int v5; // ebp\n  _BOOL4 v6; // er12\n\n  v3 = a2 + dword_94F5B0[a1];\n  v4 = a2 + dword_94FEF0[a1];\n  v5 = 3 - a3;\n  v6 = 0;\n  if ( !(unsigned int)sub_44B980(3 - a3, 1, 3, a2, (unsigned int)v4, (unsigned int)v3, a2, v3) )\n    v6 = (unsigned __int64)sub_44B980(v5, 1, 3, a2, (unsigned int)v3, (unsigned int)v4, a2, v4) == 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x470460L", 
            "funcEndAddr": "0x4704f3L", 
            "funcName": "sub_470460"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_470540(int a1, unsigned int a2, int a3)\n{\n  unsigned int v3; // er15\n  unsigned int v4; // er12\n  unsigned int v5; // ebp\n  __int128 v6; // cx\n\n  v3 = a2 + dword_94F9F0[a1];\n  v4 = a2 + dword_94F5B0[a1];\n  v5 = 3 - a3;\n  v6 = v3;\n  if ( (unsigned int)sub_44BB60(3 - a3, 1, 0, v3, v4) )\n    DWORD2(v6) = (unsigned __int64)sub_44BB60(v5, 1, 1, a2, v3, v4) == 0;\n  return DWORD2(v6);\n}\n", 
            "funcStartAddr": "0x470540L", 
            "funcEndAddr": "0x4705b5L", 
            "funcName": "sub_470540"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_470600@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  int v4; // er14\n  int v5; // er12\n  int v6; // er13\n  unsigned int v7; // ebp\n  __int128 v8; // cx\n\n  v4 = dword_94F530[a3];\n  v5 = dword_94F570[a3];\n  v6 = dword_94F9F0[a3];\n  v7 = 3 - a2;\n  v8 = a4;\n  if ( (signed int)sub_44B7B0(3 - a2, 1, 1, a4, a4 + dword_94F550[a3], a1) <= 4 )\n    DWORD2(v8) = (unsigned __int64)sub_44BB60(v7, 1, 3, a4, 0LL, a4 + v4, a4 + v5, a4 + v6) == 0;\n  return DWORD2(v8);\n}\n", 
            "funcStartAddr": "0x470600L", 
            "funcEndAddr": "0x4706a3L", 
            "funcName": "sub_470600"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4706B0@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  int v4; // er15\n  __int64 v5; // rax\n  unsigned int v6; // er14\n  unsigned int v7; // er12\n  signed __int64 v8; // rdi\n  signed __int64 v9; // rbp\n  _BOOL4 v10; // er13\n  __int64 v12; // [rsp+0h] [rbp-38h]\n  __int64 v13; // [rsp+0h] [rbp-38h]\n\n  HIDWORD(v12) = HIDWORD(a1);\n  v4 = a2;\n  v5 = a3;\n  v6 = a4 + dword_94FEB0[a3];\n  v7 = a4 + dword_94F9F0[a3];\n  v8 = (signed int)a4 + (signed __int64)dword_94FE70[a3];\n  v9 = (signed int)a4 + (signed __int64)dword_950330[v5];\n  if ( dword_98A7F4 )\n  {\n    v10 = 0;\n    if ( (unsigned int)sub_43B050(v8, 0LL) )\n      return (unsigned int)v10;\n    if ( dword_98A7F4 )\n    {\n      v10 = 0;\n      if ( (unsigned int)sub_43B050(v9, 0LL) )\n        return (unsigned int)v10;\n      goto LABEL_8;\n    }\n  }\n  else\n  {\n    v10 = 0;\n    if ( dword_8E94D4[95 * v8] )\n      return (unsigned int)v10;\n  }\n  v10 = 0;\n  if ( dword_8E94D4[95 * v9] )\n    return (unsigned int)v10;\nLABEL_8:\n  LODWORD(v12) = a4;\n  v10 = 0;\n  if ( !(unsigned int)sub_44B7B0(3 - v4, 1, 3, a4, v6, v7, v12) )\n  {\n    LODWORD(v13) = a4;\n    v10 = (unsigned __int64)sub_44B7B0(3 - v4, 1, 3, a4, v7, v6, v13) == 0;\n  }\n  return (unsigned int)v10;\n}\n", 
            "funcStartAddr": "0x4706b0L", 
            "funcEndAddr": "0x4707b4L", 
            "funcName": "sub_4706B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4707C0(int a1, int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __int64 a12, __int64 a13, __int64 a14)\n{\n  int v14; // er14\n  __int64 v15; // rax\n  signed __int64 v16; // rdi\n  signed __int64 v17; // rbp\n  unsigned int v18; // er15\n  unsigned int v19; // ebx\n  _BOOL8 v20; // r12\n  char v22; // [rsp+0h] [rbp-28h]\n\n  v14 = a3;\n  v15 = a1;\n  v16 = a2 + (signed __int64)dword_94F550[a1];\n  v17 = a2 + (signed __int64)dword_94F590[v15];\n  v18 = a2 + dword_94FE90[v15];\n  v19 = dword_94FEB0[v15] + a2;\n  if ( dword_98A7F4 )\n  {\n    LODWORD(v20) = 0;\n    if ( (unsigned int)sub_43B050(v16, 0LL) )\n      return (unsigned int)v20;\n    if ( dword_98A7F4 )\n    {\n      LODWORD(v20) = 0;\n      if ( !(unsigned int)sub_43B050(v17, 0LL) )\n        goto LABEL_8;\n      return (unsigned int)v20;\n    }\n  }\n  else\n  {\n    LODWORD(v20) = 0;\n    if ( dword_8E94D4[95 * v16] )\n      return (unsigned int)v20;\n  }\n  LODWORD(v20) = 0;\n  if ( !dword_8E94D4[95 * v17] )\nLABEL_8:\n    v20 = (unsigned int)sub_44B230(v14, 0, 2, v18, v19, a14, a4, a5, a6, a7, a8, a9, a10, a11, v22) != 0;\n  return (unsigned int)v20;\n}\n", 
            "funcStartAddr": "0x4707c0L", 
            "funcEndAddr": "0x470882L", 
            "funcName": "sub_4707C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_470890(int a1, int a2, int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // er15\n  __int64 v5; // rbp\n  __int64 v6; // rbx\n  unsigned int v7; // er12\n  _BOOL4 v8; // er13\n\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = a2 + dword_94FED0[a1];\n  v5 = (unsigned int)(a2 + dword_950370[a1]);\n  v6 = (unsigned int)(dword_94FA30[a1] + a2);\n  v7 = 3 - a3;\n  v8 = 0;\n  if ( !(unsigned int)sub_44B7B0(3 - a3, 0, 4, v3, v4, (unsigned int)v5, v6, v5) )\n    v8 = (unsigned __int64)sub_44B7B0(v7, 0, 4, v3, v4, (unsigned int)v6, v5, v6) == 0;\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x470890L", 
            "funcEndAddr": "0x47093dL", 
            "funcName": "sub_470890"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_470940(int a1, int a2, int a3)\n{\n  signed int v3; // esi\n  void *v4; // rdi\n\n  v3 = dword_94F590[a1] + a2;\n  v4 = &unk_927B28;\n  if ( a3 == 2 )\n    v4 = &unk_9333A0;\n  return (unsigned int)sub_41A430((__int64)v4, v3) == a3;\n}\n", 
            "funcStartAddr": "0x470940L", 
            "funcEndAddr": "0x47096eL", 
            "funcName": "sub_470940"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_470970(int a1, int a2, int a3)\n{\n  __int64 v3; // r10\n\n  v3 = (unsigned int)(dword_94F530[a1] + a2);\n  return (unsigned int)sub_44B7B0(\n                         3 - a3,\n                         1,\n                         10,\n                         (unsigned int)(a2 + dword_94F9F0[a1]),\n                         (unsigned int)(a2 + dword_94FA10[a1]),\n                         (unsigned int)(a2 + dword_94F9D0[a1]),\n                         (unsigned int)(a2 + dword_94FEB0[a1]),\n                         (unsigned int)(a2 + dword_94F570[a1]),\n                         (unsigned int)(a2 + dword_94F0D0[a1]),\n                         (unsigned int)(a2 + dword_94F590[a1]),\n                         (unsigned int)(a2 + dword_94F0F0[a1]),\n                         (unsigned int)(a2 + dword_94F0B0[a1]),\n                         v3,\n                         v3) == 0;\n}\n", 
            "funcStartAddr": "0x470970L", 
            "funcEndAddr": "0x470a29L", 
            "funcName": "sub_470970"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_470A30(int a1, int a2, int a3)\n{\n  __int64 v3; // rbx\n  unsigned int v4; // er12\n  unsigned int v5; // er15\n  unsigned int v6; // ebp\n  _BOOL4 v7; // er13\n  int v9; // [rsp+Ch] [rbp-3Ch]\n  __int64 v10; // [rsp+10h] [rbp-38h]\n\n  v3 = (unsigned int)(a2 + dword_94FEB0[a1]);\n  v4 = a2 + dword_94FED0[a1];\n  v10 = (unsigned int)(a2 + dword_950370[a1]);\n  v5 = a2 + dword_950350[a1];\n  v9 = dword_950810[a1];\n  v6 = 3 - a3;\n  v7 = 0;\n  if ( (unsigned int)sub_44B980(3 - a3, 1, 3, (unsigned int)v3, v4, (unsigned int)(a2 + dword_94FA30[a1]), v3) )\n  {\n    v7 = 0;\n    if ( !(unsigned int)sub_44B7B0(v6, 1, 2, v10, v5, (unsigned int)(a2 + v9)) )\n      v7 = (unsigned __int64)sub_44B7B0(v6, 1, 4, v4, (unsigned int)v3, v5, v10, v10) == 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x470a30L", 
            "funcEndAddr": "0x470b28L", 
            "funcName": "sub_470A30"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_470B30(int a1, int a2, int a3)\n{\n  int v3; // er14\n  int v4; // ebp\n  int v5; // ecx\n  _BOOL8 result; // rax\n\n  v3 = dword_94F590[a1];\n  v4 = 3 - a3;\n  v5 = sub_44AE30(a2 + dword_94F0D0[a1], 3 - a3);\n  result = 0LL;\n  if ( !v5 )\n    result = (unsigned int)sub_44AE30(a2 + v3, v4) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x470b30L", 
            "funcEndAddr": "0x470b7bL", 
            "funcName": "sub_470B30"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_470B80(int a1, int a2, int a3)\n{\n  int v3; // er12\n  int v4; // ebp\n  signed int v5; // esi\n  signed int v6; // ebx\n  signed int v7; // er15\n  signed int v8; // er13\n  signed int v9; // er14\n  signed int v10; // ebp\n  void *v11; // rdi\n  int v12; // eax\n  _BOOL4 v13; // edx\n  signed int v14; // er12\n  int v15; // eax\n  signed int v16; // ST00_4\n  _BOOL4 v17; // er14\n  int v18; // eax\n  int v19; // er14\n  int v20; // er15\n  int v21; // er14\n  unsigned int v22; // ecx\n  int v24; // [rsp+0h] [rbp-48h]\n  int v25; // [rsp+4h] [rbp-44h]\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a2 + dword_94FEB0[a1];\n  v24 = v4 + dword_94FA30[a1];\n  v6 = v4 + dword_94FED0[a1];\n  v7 = v4 + dword_950370[a1];\n  v8 = v4 + dword_94FA50[a1];\n  v9 = v4 + dword_94FEF0[a1];\n  v10 = dword_950390[a1] + v4;\n  v11 = &unk_927B28;\n  if ( a3 == 2 )\n    v11 = &unk_9333A0;\n  v12 = sub_41A430((__int64)v11, v5);\n  v13 = 0;\n  v25 = v3;\n  if ( v12 == v3 )\n  {\n    v14 = v24;\n    if ( (unsigned int)sub_41A570((__int64)v11, v6) == v25 )\n    {\n      v15 = sub_41A570((__int64)v11, v9);\n      v13 = 0;\n      if ( v15 == v25 )\n      {\n        v16 = v9;\n        v17 = (unsigned __int64)sub_41A430((__int64)v11, v14) == v25;\n        v18 = sub_41A430((__int64)v11, v6);\n        v19 = v17 + (v18 == v25) + ((unsigned int)sub_41A430((__int64)v11, v7) == v25);\n        v20 = v19 + ((unsigned int)sub_41A430((__int64)v11, v8) == v25);\n        v21 = v20 + ((unsigned int)sub_41A430((__int64)v11, v16) == v25);\n        v22 = v21 + ((unsigned int)sub_41A430((__int64)v11, v10) == v25);\n        v13 = v22 <= 2;\n        LOBYTE(v13) = v22 > 2;\n      }\n    }\n    else\n    {\n      v13 = 0;\n    }\n  }\n  return (unsigned int)v13;\n}\n", 
            "funcStartAddr": "0x470b80L", 
            "funcEndAddr": "0x470cfdL", 
            "funcName": "sub_470B80"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_470D00(int a1, int a2, int a3)\n{\n  int v3; // ebp\n  int v4; // ebx\n  signed int v5; // esi\n  int v6; // er13\n  int v7; // er12\n  int v8; // er15\n  void *v9; // r14\n  int v10; // eax\n  _BOOL4 v11; // ecx\n  signed int v12; // eax\n  signed int v13; // eax\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a2 + dword_94FED0[a1];\n  v6 = dword_94FEF0[a1];\n  v7 = v4 + dword_94FA10[a1];\n  v8 = v4 + dword_94FF10[a1];\n  v9 = &unk_927B28;\n  if ( a3 == 2 )\n    v9 = &unk_9333A0;\n  v10 = sub_41A430((__int64)v9, v5);\n  v11 = 0;\n  if ( v10 == v3 )\n  {\n    if ( (unsigned int)sub_41A430((__int64)v9, v4 + v6) == v3 )\n    {\n      v12 = sub_4083A0(v7);\n      v11 = 0;\n      if ( v12 >= 4 )\n      {\n        v13 = sub_4083A0(v8);\n        v11 = v13 < 3;\n        LOBYTE(v11) = v13 > 3;\n      }\n    }\n    else\n    {\n      v11 = 0;\n    }\n  }\n  return (unsigned int)v11;\n}\n", 
            "funcStartAddr": "0x470d00L", 
            "funcEndAddr": "0x470da2L", 
            "funcName": "sub_470D00"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_470E50@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, int a4@<esi>)\n{\n  __int64 v4; // ST00_8\n  unsigned int v5; // er14\n  unsigned int v6; // er15\n  unsigned int v7; // er12\n  int v8; // ebp\n  unsigned int v9; // ebx\n  _BOOL4 v10; // er13\n  _QWORD v12[7]; // [rsp+0h] [rbp-38h]\n\n  HIDWORD(v4) = HIDWORD(a1);\n  v5 = a4 + dword_94F0F0[a3];\n  v6 = a4 + dword_94F590[a3];\n  v7 = a4 + dword_94F5B0[a3];\n  v8 = dword_94F0D0[a3] + a4;\n  v9 = 3 - a2;\n  LODWORD(v4) = dword_94F0D0[a3] + a4;\n  v10 = 0;\n  if ( !(unsigned int)sub_44B980(3 - a2, 0, 2, v5, v6, v7, v4) )\n  {\n    LODWORD(v12[0]) = v8;\n    v10 = (unsigned __int64)sub_44B980(v9, 0, 2, v6, v5, v7, v12[0]) == 0;\n  }\n  return (unsigned int)v10;\n}\n", 
            "funcStartAddr": "0x470e50L", 
            "funcEndAddr": "0x470eefL", 
            "funcName": "sub_470E50"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_470EF0(int a1, int a2, int a3)\n{\n  int v3; // ebx\n  int v4; // ebp\n  _BOOL4 v5; // er14\n\n  v3 = dword_94FA30[a1] + a2;\n  v4 = 3 - a3;\n  v5 = 0;\n  if ( !(unsigned int)sub_43F100(v3, 3 - a3) && !(unsigned int)sub_40B8D0(v3) )\n    v5 = (unsigned __int64)sub_44AE30(v3, v4) == 0;\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x470ef0L", 
            "funcEndAddr": "0x470f3cL", 
            "funcName": "sub_470EF0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_470F40@<rax>(char a1@<al>, int a2@<edx>, int a3@<edi>, int a4@<esi>, __int64 a5@<r8>, __int64 a6@<r9>, __m128 a7@<xmm0>, __m128 a8@<xmm1>, __m128 a9@<xmm2>, __m128 a10@<xmm3>, __m128 a11@<xmm4>, __m128 a12@<xmm5>, __m128 a13@<xmm6>, __m128 a14@<xmm7>)\n{\n  int v14; // er13\n  unsigned int v15; // er14\n  unsigned int v16; // ebp\n  __int64 v17; // r15\n  int v18; // ST04_4\n  int v19; // er12\n  __int64 v20; // r8\n  __int64 v21; // r9\n  __m128 v22; // xmm4\n  __m128 v23; // xmm5\n  __int64 v24; // r8\n  __int64 v25; // r9\n  __m128 v26; // xmm4\n  __m128 v27; // xmm5\n  __int64 v28; // r15\n  _BOOL4 v29; // ebx\n  char v31; // [rsp-4h] [rbp-38h]\n  char v32; // [rsp-4h] [rbp-38h]\n  unsigned int v33; // [rsp+0h] [rbp-34h]\n\n  v14 = a2;\n  v15 = a4 + dword_94EBF0[a3];\n  v16 = a4 + dword_94E770[a3];\n  v17 = dword_94EC10[a3];\n  v18 = a4 + dword_94F0D0[a3];\n  v19 = 3 - a2;\n  if ( ((unsigned int)sub_44B230(3 - a2, 0, 1, v15, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a1)\n     || (unsigned int)sub_44B230(v14, 0, 1, v15, v20, v21, a7, a8, a9, a10, v22, v23, a13, a14, v31)\n     || !(unsigned int)sub_44AE30(v15, v19))\n    && ((unsigned int)sub_44B230(v19, 0, 1, v16, v20, v21, a7, a8, a9, a10, v22, v23, a13, a14, v31)\n     || (unsigned int)sub_44B230(v14, 0, 1, v15, v24, v25, a7, a8, a9, a10, v26, v27, a13, a14, v32)\n     || !(unsigned int)sub_44AE30(v16, v19)) )\n  {\n    v28 = a4 + v17;\n    if ( dword_98A7F4 )\n    {\n      v29 = 1;\n      if ( (unsigned int)sub_43B050(v28, 0LL) )\n        return (unsigned int)v29;\n    }\n    else\n    {\n      v29 = 1;\n      if ( dword_8E94D4[95 * v28] )\n        return (unsigned int)v29;\n    }\n  }\n  v29 = 0;\n  if ( !(unsigned int)sub_40B8D0(v33) && !(unsigned int)sub_44AE30(v33, v19) )\n    v29 = (unsigned __int64)sub_43F100(v33, v19) == 0;\n  return (unsigned int)v29;\n}\n", 
            "funcStartAddr": "0x470f40L", 
            "funcEndAddr": "0x471081L", 
            "funcName": "sub_470F40"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_471090(int a1, int a2, int a3)\n{\n  __int64 v3; // r15\n  __int64 v4; // r14\n  __int64 v5; // rbx\n  unsigned int v6; // ebp\n  _BOOL4 v7; // er12\n\n  v3 = (unsigned int)(a2 + dword_94FED0[a1]);\n  v4 = (unsigned int)(a2 + dword_94FEB0[a1]);\n  v5 = (unsigned int)(dword_94FA30[a1] + a2);\n  v6 = 3 - a3;\n  v7 = 0;\n  if ( (unsigned int)sub_44B980(\n                       3 - a3,\n                       1,\n                       3,\n                       (unsigned int)v3,\n                       (unsigned int)v4,\n                       v3,\n                       (unsigned int)(a2 + dword_950350[a1])) == 5 )\n    v7 = (unsigned __int64)sub_44B980(v6, 1, 3, (unsigned int)v4, (unsigned int)v3, (unsigned int)v5, v4, v5) == 5;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x471090L", 
            "funcEndAddr": "0x471134L", 
            "funcName": "sub_471090"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4711C0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, int a4@<esi>)\n{\n  unsigned int v4; // er14\n  signed __int64 v5; // rbx\n  signed __int64 v6; // r15\n  unsigned int v7; // ebp\n  __int64 v9; // [rsp-8h] [rbp-28h]\n\n  v9 = a1;\n  v4 = a2;\n  v5 = a4 + (signed __int64)dword_94F0D0[a3];\n  v6 = a4 + (signed __int64)dword_94F590[a3];\n  if ( !dword_98A7F4 )\n  {\n    if ( !dword_8E94D4[95 * v5] )\n      goto LABEL_9;\n    goto LABEL_7;\n  }\n  v7 = 0;\n  if ( (unsigned int)sub_43B050(v5, 0LL) )\n  {\n    if ( dword_98A7F4 )\n    {\n      v7 = 0;\n      if ( !(unsigned int)sub_43B050(v6, 0LL) )\n        return v7;\n      return (unsigned int)sub_44B980(v4, 0, 0, (unsigned int)v5, (unsigned int)v6, v9) == 0;\n    }\nLABEL_7:\n    if ( dword_8E94D4[95 * v6] )\n      return (unsigned int)sub_44B980(v4, 0, 0, (unsigned int)v5, (unsigned int)v6, v9) == 0;\nLABEL_9:\n    v7 = 0;\n  }\n  return v7;\n}\n", 
            "funcStartAddr": "0x4711c0L", 
            "funcEndAddr": "0x471265L", 
            "funcName": "sub_4711C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4712B0(int a1, int a2, int a3)\n{\n  __int64 v3; // rbx\n  unsigned int v4; // er15\n  int v5; // er14\n  unsigned int v6; // er13\n  _BOOL4 v7; // ebp\n\n  v3 = (unsigned int)(a2 + dword_94FA50[a1]);\n  v4 = a2 + dword_94FEF0[a1];\n  v5 = dword_94FA30[a1];\n  v6 = 3 - a3;\n  v7 = 0;\n  if ( (unsigned int)sub_44B980(3 - a3, 1, 3, (unsigned int)v3, v4, v3, (unsigned int)(a2 + dword_94FF10[a1])) )\n    v7 = (unsigned __int64)sub_44B7B0(v6, 0, 2, v4, (unsigned int)v3, (unsigned int)(a2 + v5)) == 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x4712b0L", 
            "funcEndAddr": "0x471354L", 
            "funcName": "sub_4712B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_471360(int a1, int a2, int a3)\n{\n  int v3; // er14\n  unsigned int v4; // ebp\n  __int64 v5; // r15\n  __int64 v6; // r13\n  unsigned int v7; // ebx\n  _BOOL4 v8; // er12\n  unsigned int v9; // er14\n  unsigned int v11; // [rsp+Ch] [rbp-3Ch]\n  unsigned int v12; // [rsp+10h] [rbp-38h]\n  unsigned int v13; // [rsp+14h] [rbp-34h]\n\n  v3 = a3;\n  v12 = a2 + dword_94F590[a1];\n  v11 = a2 + dword_94FA30[a1];\n  v4 = a2 + dword_94F0F0[a1];\n  v5 = (unsigned int)(a2 + dword_94FA10[a1]);\n  v6 = (unsigned int)(a2 + dword_94FA50[a1]);\n  v13 = a2 + dword_94F5B0[a1];\n  v7 = dword_94F570[a1] + a2;\n  v8 = 0;\n  if ( (signed int)sub_4099C0(v4, a3, 20, 0LL) >= 2 )\n  {\n    v9 = 3 - v3;\n    if ( (unsigned int)sub_44B7B0(v9, 1, 5, v12, v11, v4, v5, v6, v6)\n      || (v8 = 0, (unsigned int)sub_44B7B0(v9, 1, 5, v12, v11, v4, v6, v5, v5)) )\n    {\n      v8 = 0;\n      if ( !(unsigned int)sub_44B7B0(v9, 1, 2, v12, v11, v13) )\n        v8 = (unsigned __int64)sub_44B7B0(v9, 1, 2, v12, v11, v7) == 0;\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x471360L", 
            "funcEndAddr": "0x4714bfL", 
            "funcName": "sub_471360"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4714C0(int a1, int a2, int a3)\n{\n  __int64 v3; // rbp\n  __int64 v4; // r15\n  __int64 v5; // rbx\n  __int64 v6; // r12\n  int v7; // er14\n  signed int v8; // eax\n  _BOOL4 v9; // ecx\n  signed int v10; // eax\n  int v11; // eax\n  int v13; // [rsp+Ch] [rbp-3Ch]\n\n  v13 = a3;\n  v3 = (unsigned int)(a2 + dword_94FED0[a1]);\n  v4 = (unsigned int)(a2 + dword_94FEB0[a1]);\n  v5 = (unsigned int)(a2 + dword_950350[a1]);\n  v6 = (unsigned int)(a2 + dword_94FA30[a1]);\n  v7 = dword_950370[a1];\n  v8 = sub_4083A0(a2 + dword_94FA10[a1]);\n  v9 = 0;\n  if ( v8 >= 3 )\n  {\n    v10 = sub_4083A0(a2 + v7);\n    v9 = 0;\n    if ( v10 >= 3 )\n    {\n      v11 = sub_44B980(3 - v13, 1, 3, (unsigned int)v3, (unsigned int)v4, (unsigned int)v5, v3, v5);\n      v9 = 0;\n      if ( v11 == 5 )\n        v9 = (unsigned __int64)sub_44B980(3 - v13, 1, 3, (unsigned int)v4, (unsigned int)v3, v4, v6) == 5;\n    }\n  }\n  return (unsigned int)v9;\n}\n", 
            "funcStartAddr": "0x4714c0L", 
            "funcEndAddr": "0x4715b9L", 
            "funcName": "sub_4714C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4715C0@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, int a4@<esi>)\n{\n  unsigned int v4; // er12\n  unsigned int v5; // ebp\n  unsigned int v6; // er14\n  unsigned int v7; // ebx\n  int v8; // er15\n  _BOOL4 v9; // er13\n  _QWORD v11[7]; // [rsp+0h] [rbp-38h]\n  __int64 v12; // [rsp+0h] [rbp-38h]\n\n  v4 = a4 + dword_94F0F0[a3];\n  v5 = a4 + dword_94F590[a3];\n  v6 = a4 + dword_94F5B0[a3];\n  v7 = dword_94F0D0[a3] + a4;\n  v8 = 3 - a2;\n  v9 = 0;\n  if ( (unsigned int)sub_44B7B0(3 - a2, 1, 3, v4, v5, v6, __PAIR__(HIDWORD(a1), v4))\n    || (LODWORD(v11[0]) = v6, (unsigned int)sub_44B7B0(v8, 1, 3, v4, v5, v6, v11[0])) )\n  {\n    LODWORD(v11[0]) = v5;\n    v9 = 0;\n    if ( (unsigned int)sub_44B7B0(v8, 1, 3, v5, v4, v7, v11[0])\n      || (LODWORD(v12) = v7, (unsigned int)sub_44B7B0(v8, 1, 3, v5, v4, v7, v12)) )\n    {\n      v9 = (unsigned __int64)sub_44AE30(v6, v8) == 0;\n    }\n  }\n  return (unsigned int)v9;\n}\n", 
            "funcStartAddr": "0x4715c0L", 
            "funcEndAddr": "0x4716bbL", 
            "funcName": "sub_4715C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4716C0(int a1, int a2, int a3)\n{\n  __int64 v3; // r14\n  __int64 v4; // r12\n  __int64 v5; // r15\n  __int64 v6; // rbx\n  unsigned int v7; // ebp\n  _BOOL4 v8; // er13\n  __int64 v10; // [rsp+0h] [rbp-38h]\n\n  v3 = (unsigned int)(a2 + dword_94FED0[a1]);\n  v4 = (unsigned int)(a2 + dword_94FEB0[a1]);\n  v5 = (unsigned int)(a2 + dword_94FA30[a1]);\n  v10 = (unsigned int)(a2 + dword_94FEF0[a1]);\n  v6 = (unsigned int)(dword_950370[a1] + a2);\n  v7 = 3 - a3;\n  v8 = 0;\n  if ( (unsigned int)sub_44B980(\n                       3 - a3,\n                       1,\n                       3,\n                       (unsigned int)v3,\n                       (unsigned int)v4,\n                       v3,\n                       (unsigned int)(a2 + dword_950350[a1])) == 5 )\n  {\n    v8 = 1;\n    if ( (unsigned int)sub_44B980(v7, 1, 3, (unsigned int)v4, (unsigned int)v3, (unsigned int)v5, v4, v5) != 5 )\n      v8 = (unsigned __int64)sub_44B5C0(v7, 4, (unsigned int)v4, (unsigned int)v5, (unsigned int)v3, v5, v10, v6) == 0;\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x4716c0L", 
            "funcEndAddr": "0x4717bcL", 
            "funcName": "sub_4716C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4717C0(int a1, int a2, int a3)\n{\n  __int64 v3; // r12\n  __int64 v4; // r14\n  __int64 v5; // r15\n  __int64 v6; // rbx\n  unsigned int v7; // ebp\n  _BOOL4 v8; // er13\n\n  v3 = (unsigned int)(a2 + dword_94FEB0[a1]);\n  v4 = (unsigned int)(a2 + dword_94FED0[a1]);\n  v5 = (unsigned int)(a2 + dword_950370[a1]);\n  v6 = (unsigned int)(dword_950350[a1] + a2);\n  v7 = 3 - a3;\n  v8 = 0;\n  if ( !(unsigned int)sub_44B980(3 - a3, 0, 4, (unsigned int)v3, (unsigned int)v4, (unsigned int)v5, v6, v3, v5) )\n    v8 = (unsigned __int64)sub_44B980(v7, 0, 4, (unsigned int)v4, (unsigned int)v3, (unsigned int)v6, v5, v4, v6) == 0;\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x4717c0L", 
            "funcEndAddr": "0x471879L", 
            "funcName": "sub_4717C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_471880(int a1, int a2, int a3)\n{\n  __int64 v3; // r15\n  unsigned int v4; // er14\n  __int64 v5; // r12\n  __int64 v6; // rbx\n  unsigned int v7; // er13\n  _BOOL8 v8; // rbp\n\n  v3 = (unsigned int)(a2 + dword_94FEB0[a1]);\n  v4 = a2 + dword_94FED0[a1];\n  v5 = (unsigned int)(a2 + dword_950350[a1]);\n  v6 = (unsigned int)(a2 + dword_950370[a1]);\n  v7 = 3 - a3;\n  LODWORD(v8) = 0;\n  if ( (unsigned int)sub_44B980(\n                       3 - a3,\n                       1,\n                       5,\n                       (unsigned int)v3,\n                       v4,\n                       (unsigned int)v5,\n                       v6,\n                       (unsigned int)(dword_950810[a1] + a2),\n                       v5,\n                       (unsigned int)(dword_950810[a1] + a2)) )\n  {\n    LODWORD(v8) = 0;\n    if ( !(unsigned int)sub_44B980(v7, 0, 4, (unsigned int)v3, v4, (unsigned int)v6, v5, v3, v6) )\n      v8 = (unsigned int)sub_44B7B0(v7, 1, 3, v4, (unsigned int)v3, (unsigned int)v5, v5) != 0;\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x471880L", 
            "funcEndAddr": "0x47196cL", 
            "funcName": "sub_471880"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_471970(int a1, int a2, int a3)\n{\n  __int64 v3; // r13\n  __int64 v4; // r12\n  __int64 v5; // r14\n  __int64 v6; // r15\n  __int64 v7; // rbx\n  unsigned int v8; // ebp\n  _BOOL4 v10; // [rsp+Ch] [rbp-44h]\n  __int64 v11; // [rsp+10h] [rbp-40h]\n\n  v3 = (unsigned int)(a2 + dword_94FEB0[a1]);\n  v4 = (unsigned int)(a2 + dword_94FED0[a1]);\n  v5 = (unsigned int)(a2 + dword_950370[a1]);\n  v6 = (unsigned int)(a2 + dword_950350[a1]);\n  v11 = (unsigned int)(a2 + dword_950810[a1]);\n  v7 = (unsigned int)(dword_9507F0[a1] + a2);\n  v8 = 3 - a3;\n  v10 = 0;\n  if ( !(unsigned int)sub_44B980(3 - a3, 0, 4, (unsigned int)v3, (unsigned int)v4, (unsigned int)v5, v6, v3, v5) )\n  {\n    v10 = 0;\n    if ( (unsigned int)sub_44B980(v8, 1, 5, (unsigned int)v3, (unsigned int)v4, (unsigned int)v6, v5, v11, v6, v11) )\n    {\n      v10 = 0;\n      if ( !(unsigned int)sub_44B7B0(v8, 0, 4, (unsigned int)v6, (unsigned int)v5, (unsigned int)v4, v3, v6)\n        || (unsigned int)sub_44B7B0(v8, 1, 5, (unsigned int)v6, (unsigned int)v5, (unsigned int)v4, v3, v11, v6)\n        && (v10 = 0,\n            (unsigned int)sub_44B7B0(v8, 1, 5, (unsigned int)v6, (unsigned int)v5, (unsigned int)v4, v3, v11, v4))\n        && (v10 = 0,\n            (unsigned int)sub_44B7B0(v8, 1, 5, (unsigned int)v3, (unsigned int)v5, (unsigned int)v4, v3, v11, v11)) )\n      {\n        v10 = (unsigned __int64)sub_44B980(v8, 0, 3, (unsigned int)v6, (unsigned int)v5, v11, v5, v7) != 0;\n      }\n    }\n  }\n  return (unsigned int)v10;\n}\n", 
            "funcStartAddr": "0x471970L", 
            "funcEndAddr": "0x471b82L", 
            "funcName": "sub_471970"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_471BE0(int a1, int a2, int a3, int a4)\n{\n  __int64 v4; // r14\n  int v5; // ebp\n  __int64 v6; // r15\n  __int64 v7; // r13\n  signed int v8; // er12\n  signed int v9; // ebx\n  signed int v11; // [rsp+0h] [rbp-34h]\n\n  v4 = (unsigned int)(a2 + dword_94F5B0[a1]);\n  v5 = 3 - a3;\n  if ( !a4 )\n    return sub_44AE30(v4, v5);\n  v6 = (unsigned int)(a2 + dword_94F590[a1]);\n  v7 = (unsigned int)(a2 + dword_94FA30[a1]);\n  v11 = a2 + dword_94F5D0[a1];\n  v8 = a2 + dword_94FA50[a1];\n  v9 = dword_94F570[a1] + a2;\n  if ( (unsigned int)sub_44B980(v5, 1, 3, (unsigned int)v6, (unsigned int)v7, v6, (unsigned int)(a2 + dword_94FA10[a1]))\n    && (unsigned int)sub_44B980(v5, 1, 3, (unsigned int)v7, (unsigned int)v6, (unsigned int)v4, v7, v4) )\n  {\n    sub_469BB0(v11, v8, v9);\n  }\n  else\n  {\n    sub_415400(v11, v8);\n  }\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x471be0L", 
            "funcEndAddr": "0x471ce2L", 
            "funcName": "sub_471BE0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_471D10@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, int a4@<esi>)\n{\n  int v4; // er12\n  int v5; // ebx\n  unsigned int v6; // er13\n  _BOOL4 v7; // er14\n  int v8; // er15\n  __int64 v10; // [rsp-8h] [rbp-38h]\n\n  v10 = a1;\n  v4 = a2;\n  v5 = dword_94F570[a3];\n  v6 = a4 + dword_94F590[a3];\n  v7 = 0;\n  if ( (signed int)sub_4083A0(a4 + dword_94F0F0[a3]) >= 2 && (signed int)sub_4083A0(a4 + v5) >= 2 )\n  {\n    v8 = 3 - v4;\n    if ( !(unsigned int)sub_44AE30(v6, 3 - v4) )\n    {\n      v7 = 0;\n      if ( (unsigned int)sub_4099C0(v6, v8, 20, 0LL) == 1 )\n        v7 = (unsigned __int64)sub_44B7B0(v8, 1, 1, v6, v6, v10) == 5;\n    }\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x471d10L", 
            "funcEndAddr": "0x471dc1L", 
            "funcName": "sub_471D10"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_471DD0@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, int a4@<esi>)\n{\n  int v4; // er12\n  int v5; // ebp\n  unsigned int v6; // er13\n  int v7; // er15\n  _BOOL8 v8; // r14\n  int v9; // ebx\n  __int64 v11; // [rsp-8h] [rbp-38h]\n\n  v11 = a1;\n  v4 = a2;\n  v5 = dword_94F570[a3];\n  v6 = a4 + dword_94F590[a3];\n  v7 = a4 + dword_94F0D0[a3];\n  LODWORD(v8) = 0;\n  if ( (signed int)sub_4083A0(a4 + dword_94F0F0[a3]) >= 2 && (signed int)sub_4083A0(a4 + v5) >= 2 )\n  {\n    v9 = 3 - v4;\n    if ( !(unsigned int)sub_44AE30(v6, 3 - v4) && !(unsigned int)sub_44AE30(v7, v9) )\n    {\n      LODWORD(v8) = 0;\n      if ( (unsigned int)sub_4099C0(v6, v9, 20, 0LL) == 1 )\n        v8 = (unsigned int)sub_44B7B0(v9, 1, 1, v6, v6, v11) != 0;\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x471dd0L", 
            "funcEndAddr": "0x471e95L", 
            "funcName": "sub_471DD0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_471EA0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er15\n  int v6; // ebx\n  int v7; // ecx\n  _BOOL8 result; // rax\n  __int64 v9; // [rsp-8h] [rbp-28h]\n\n  v9 = a1;\n  v4 = a2;\n  v5 = dword_94FA50[a3];\n  v6 = dword_94FA10[a3];\n  v7 = sub_44AE30(a4 + dword_94FA30[a3], 3 - a2);\n  result = 0LL;\n  if ( !v7 )\n    result = (unsigned int)sub_44BB60(v4, 0, 0, (unsigned int)(a4 + v5), (unsigned int)(a4 + v6), v9) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x471ea0L", 
            "funcEndAddr": "0x471f09L", 
            "funcName": "sub_471EA0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_471F10@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er15\n  int v6; // ebx\n  int v7; // ecx\n  _BOOL8 result; // rax\n  __int64 v9; // [rsp-8h] [rbp-28h]\n\n  v9 = a1;\n  v4 = a2;\n  v5 = dword_94F570[a3];\n  v6 = dword_94F0F0[a3];\n  v7 = sub_44AE30(a4 + dword_94F590[a3], 3 - a2);\n  result = 0LL;\n  if ( !v7 )\n    result = (unsigned int)sub_44BB60(v4, 0, 0, (unsigned int)(a4 + v5), (unsigned int)(a4 + v6), v9) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x471f10L", 
            "funcEndAddr": "0x471f79L", 
            "funcName": "sub_471F10"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_471F80(int a1, int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // rax\n  signed __int64 v5; // rdi\n  signed __int64 v6; // r12\n  unsigned int v7; // er15\n  unsigned int v8; // ebx\n  unsigned int v9; // ebp\n\n  v3 = a3;\n  v4 = a1;\n  v5 = a2 + (signed __int64)dword_94F590[a1];\n  v6 = a2 + (signed __int64)dword_94F0D0[v4];\n  v7 = a2 + dword_94F570[v4];\n  v8 = dword_94F0F0[v4] + a2;\n  if ( dword_98A7F4 )\n  {\n    if ( (unsigned int)sub_43B050(v5, 0LL) )\n      return (unsigned int)sub_44BB60(v3, 0, 0, v7, v8) == 0;\n    if ( dword_98A7F4 )\n    {\n      v9 = 0;\n      if ( !(unsigned int)sub_43B050(v6, 0LL) )\n        return v9;\n      return (unsigned int)sub_44BB60(v3, 0, 0, v7, v8) == 0;\n    }\n  }\n  else if ( dword_8E94D4[95 * v5] )\n  {\n    return (unsigned int)sub_44BB60(v3, 0, 0, v7, v8) == 0;\n  }\n  if ( !dword_8E94D4[95 * v6] )\n    return 0;\n  return (unsigned int)sub_44BB60(v3, 0, 0, v7, v8) == 0;\n}\n", 
            "funcStartAddr": "0x471f80L", 
            "funcEndAddr": "0x472035L", 
            "funcName": "sub_471F80"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_472040@<rax>(int a1@<eax>, unsigned int a2@<edx>, int a3@<edi>, int a4@<esi>)\n{\n  unsigned int v4; // er13\n  unsigned int v5; // er15\n  unsigned int v6; // ebx\n  int v7; // er14\n  _BOOL4 v8; // er12\n  __int64 v10; // [rsp-4h] [rbp-38h]\n\n  LODWORD(v10) = a1;\n  v4 = a2;\n  HIDWORD(v10) = dword_94FA50[a3];\n  v5 = a4 + dword_94FA10[a3];\n  v6 = a4 + dword_94FA70[a3];\n  v7 = 3 - a2;\n  v8 = 0;\n  if ( !(unsigned int)sub_44AE30(a4 + dword_94FA30[a3], 3 - a2) && !(unsigned int)sub_44AE30(a4 + HIDWORD(v10), v7) )\n    v8 = (unsigned __int64)sub_44BB60(v4, 0, 0, v5, v6, v10) == 0;\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x472040L", 
            "funcEndAddr": "0x4720d4L", 
            "funcName": "sub_472040"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4720E0(int a1, int a2, unsigned int a3)\n{\n  unsigned int v3; // er12\n  unsigned int v4; // er13\n  unsigned int v5; // er14\n  int v6; // ebx\n  int v7; // er15\n  int v8; // eax\n  _BOOL4 v9; // ecx\n  signed int v10; // eax\n  int v12; // [rsp+14h] [rbp-34h]\n\n  v3 = a3;\n  v12 = dword_94FEF0[a1];\n  v4 = a2 + dword_94FA10[a1];\n  v5 = a2 + dword_94FA70[a1];\n  v6 = a2 + dword_94FA30[a1];\n  v7 = 3 - a3;\n  v8 = sub_44AE30(a2 + dword_94FA50[a1], 3 - a3);\n  v9 = 0;\n  if ( !v8 )\n  {\n    if ( (unsigned int)sub_44AE30(a2 + v12, v7) )\n    {\n      v9 = 0;\n    }\n    else\n    {\n      v10 = sub_4083A0(v6);\n      v9 = 0;\n      if ( v10 <= 2 )\n        v9 = (unsigned __int64)sub_44BB60(v3, 0, 0, v4, v5) == 0;\n    }\n  }\n  return (unsigned int)v9;\n}\n", 
            "funcStartAddr": "0x4720e0L", 
            "funcEndAddr": "0x4721a6L", 
            "funcName": "sub_4720E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4721B0@<rax>(int a1@<eax>, unsigned int a2@<edx>, int a3@<edi>, int a4@<esi>)\n{\n  unsigned int v4; // er13\n  unsigned int v5; // er15\n  unsigned int v6; // ebx\n  int v7; // er14\n  _BOOL4 v8; // er12\n  __int64 v10; // [rsp-4h] [rbp-38h]\n\n  LODWORD(v10) = a1;\n  v4 = a2;\n  HIDWORD(v10) = dword_94FED0[a3];\n  v5 = a4 + dword_94FA10[a3];\n  v6 = a4 + dword_94FEF0[a3];\n  v7 = 3 - a2;\n  v8 = 0;\n  if ( !(unsigned int)sub_44AE30(a4 + dword_94FA30[a3], 3 - a2) && !(unsigned int)sub_44AE30(a4 + HIDWORD(v10), v7) )\n    v8 = (unsigned __int64)sub_44BB60(v4, 0, 0, v5, v6, v10) == 0;\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x4721b0L", 
            "funcEndAddr": "0x472244L", 
            "funcName": "sub_4721B0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_472250@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er15\n  int v6; // ebx\n  int v7; // ecx\n  _BOOL8 result; // rax\n  __int64 v9; // [rsp-8h] [rbp-28h]\n\n  v9 = a1;\n  v4 = a2;\n  v5 = dword_94FA10[a3];\n  v6 = dword_94FEF0[a3];\n  v7 = sub_44AE30(a4 + dword_94FA30[a3], 3 - a2);\n  result = 0LL;\n  if ( !v7 )\n    result = (unsigned int)sub_44BB60(v4, 0, 0, (unsigned int)(a4 + v5), (unsigned int)(a4 + v6), v9) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x472250L", 
            "funcEndAddr": "0x4722b9L", 
            "funcName": "sub_472250"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4722C0(int a1, int a2, unsigned int a3)\n{\n  int v3; // ebx\n  int v4; // ebp\n  unsigned int v5; // er12\n  unsigned int v6; // er13\n  int v7; // er14\n  int v8; // eax\n  _BOOL4 v9; // ecx\n  int v11; // eax\n  unsigned int v12; // [rsp+10h] [rbp-38h]\n  int v13; // [rsp+14h] [rbp-34h]\n\n  v13 = dword_94FED0[a1];\n  v3 = a2 + dword_94FA50[a1];\n  v4 = a2 + dword_94FEF0[a1];\n  v5 = a2 + dword_94FA10[a1];\n  v6 = a2 + dword_94FF10[a1];\n  v12 = a3;\n  v7 = 3 - a3;\n  v8 = sub_44AE30(a2 + dword_94FA30[a1], 3 - a3);\n  v9 = 0;\n  if ( !v8 )\n  {\n    if ( (unsigned int)sub_44AE30(a2 + v13, v7) || (unsigned int)sub_44AE30(v3, v7) )\n    {\n      v9 = 0;\n    }\n    else\n    {\n      v11 = sub_44AE30(v4, v7);\n      v9 = 0;\n      if ( !v11 )\n        v9 = (unsigned __int64)sub_44BB60(v12, 0, 0, v5, v6) == 0;\n    }\n  }\n  return (unsigned int)v9;\n}\n", 
            "funcStartAddr": "0x4722c0L", 
            "funcEndAddr": "0x4723a0L", 
            "funcName": "sub_4722C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4723A0(int a1, int a2, int a3)\n{\n  int v3; // er14\n  __int64 v4; // rax\n  signed __int64 v5; // rdi\n  signed __int64 v6; // rbp\n  int v7; // er15\n  int v8; // ebx\n  _BOOL4 v9; // er12\n\n  v3 = a3;\n  v4 = a1;\n  v5 = a2 + (signed __int64)dword_94F0F0[a1];\n  v6 = a2 + (signed __int64)dword_94F570[v4];\n  v7 = a2 + dword_94F590[v4];\n  v8 = dword_94F0D0[v4] + a2;\n  if ( dword_98A7F4 )\n  {\n    v9 = 0;\n    if ( !(unsigned int)sub_43B050(v5, 0LL) )\n      return (unsigned int)v9;\n    if ( dword_98A7F4 )\n    {\n      v9 = 0;\n      if ( !(unsigned int)sub_43B050(v6, 0LL) )\n        return (unsigned int)v9;\n      goto LABEL_8;\n    }\n  }\n  else if ( !dword_8E94D4[95 * v5] )\n  {\nLABEL_10:\n    return 0;\n  }\n  if ( !dword_8E94D4[95 * v6] )\n    goto LABEL_10;\nLABEL_8:\n  v9 = 0;\n  if ( !(unsigned int)sub_44AE30(v7, 3 - v3) )\n    v9 = (unsigned __int64)sub_44AE30(v8, 3 - v3) == 0;\n  return (unsigned int)v9;\n}\n", 
            "funcStartAddr": "0x4723a0L", 
            "funcEndAddr": "0x472467L", 
            "funcName": "sub_4723A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_472490(int a1, int a2, int a3, int a4)\n{\n  int v4; // er14\n  __int64 v5; // rdx\n  unsigned int v6; // ebp\n  signed __int64 v8; // rdi\n  unsigned int v9; // ebx\n\n  v4 = a3;\n  v5 = a1;\n  if ( !a4 )\n  {\n    v8 = a2 + (signed __int64)dword_94F0F0[a1];\n    v9 = dword_94F5B0[v5] + a2;\n    if ( dword_98A7F4 )\n    {\n      v6 = 0;\n      if ( (unsigned int)sub_43B050(v8, 0LL) )\n        return v6;\n    }\n    else\n    {\n      v6 = 0;\n      if ( dword_8E94D4[95 * v8] )\n        return v6;\n    }\n    return (unsigned int)sub_43F100(v9, 3 - v4) == 0;\n  }\n  sub_4693D0(dword_94F570[a1] + a2, a2 + dword_94F0D0[a1]);\n  return 0;\n}\n", 
            "funcStartAddr": "0x472490L", 
            "funcEndAddr": "0x472518L", 
            "funcName": "sub_472490"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_472540(int a1, unsigned int a2, int a3)\n{\n  unsigned int v3; // ebp\n  int v4; // er14\n  unsigned int v5; // ebx\n  _BOOL8 v6; // r12\n  _QWORD v8[7]; // [rsp+0h] [rbp-38h]\n\n  v3 = a2 + dword_94F9F0[a1];\n  v4 = dword_94FEB0[a1];\n  v5 = 3 - a3;\n  LODWORD(v8[0]) = a2 + dword_94F570[a1];\n  LODWORD(v6) = 1;\n  if ( !(unsigned int)sub_44B980(3 - a3, 1, 2, a2, v3, v3, v8[0]) )\n    v6 = (unsigned int)sub_44B7B0(v5, 1, 2, a2, v3, a2 + v4) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x472540L", 
            "funcEndAddr": "0x4725d6L", 
            "funcName": "sub_472540"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_472680(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // ebx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94F0F0[a1];\n  if ( (unsigned int)sub_44AE30(v4, 3 - a3) )\n    result = (unsigned int)sub_44ADE0(a2, v3, v4) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x472680L", 
            "funcEndAddr": "0x4726c6L", 
            "funcName": "sub_472680"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_4726D0(int a1, int a2)\n{\n  __int64 v2; // rax\n  __int64 v3; // rbx\n  signed int v4; // ecx\n  bool result; // al\n\n  v2 = dword_94F550[a1];\n  v3 = v2 + a2;\n  v4 = sub_4083A0((signed int)v2 + a2);\n  result = 0;\n  if ( v4 >= 3 )\n    result = dword_8E9484[95 * v3] > 3;\n  return result;\n}\n", 
            "funcStartAddr": "0x4726d0L", 
            "funcEndAddr": "0x472707L", 
            "funcName": "sub_4726D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_472710@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  int v4; // er14\n  unsigned int v5; // ebp\n  __int128 v6; // cx\n\n  v4 = dword_94FA30[a3];\n  v5 = 3 - a2;\n  v6 = a4;\n  if ( !(unsigned int)sub_44B7B0(3 - a2, 1, 1, a4, a4 + dword_94F530[a3], a1) )\n    DWORD2(v6) = (unsigned __int64)sub_44B7B0(v5, 1, 1, a4, a4 + v4) == 0;\n  return DWORD2(v6);\n}\n", 
            "funcStartAddr": "0x472710L", 
            "funcEndAddr": "0x472783L", 
            "funcName": "sub_472710"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4728C0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // r15\n  __int64 v5; // r12\n  signed __int64 v6; // rbx\n  _BOOL4 v7; // ebp\n\n  v3 = a3;\n  v4 = a2 + dword_94FE90[a1];\n  v5 = a2 + dword_94FEB0[a1];\n  v6 = (signed int)a2 + (signed __int64)dword_950330[a1];\n  if ( dword_954FF0[19 * v6] == 1\n    || (v7 = 0, dword_954FF0[19 * ((signed int)a2 + (signed __int64)dword_94F570[a1])] == 1) )\n  {\n    v7 = 1;\n    if ( (unsigned int)sub_44B980(a3, 1, 3, a2, (unsigned int)v4, (unsigned int)v5, v5, v6) )\n      v7 = (unsigned __int64)sub_44B980(v3, 1, 3, a2, (unsigned int)v5, (unsigned int)v4, a2, v4) == 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x4728c0L", 
            "funcEndAddr": "0x472990L", 
            "funcName": "sub_4728C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_472990(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // r15\n  __int64 v5; // r12\n  signed __int64 v6; // rbx\n  _BOOL4 v7; // ebp\n\n  v3 = a3;\n  v4 = a2 + dword_94FE90[a1];\n  v5 = a2 + dword_94FEB0[a1];\n  v6 = (signed int)a2 + (signed __int64)dword_950330[a1];\n  if ( dword_954FF0[19 * v6] == 1\n    || (v7 = 0, dword_954FF0[19 * ((signed int)a2 + (signed __int64)dword_94FA30[a1])] == 1) )\n  {\n    v7 = 1;\n    if ( (unsigned int)sub_44B980(a3, 1, 3, a2, (unsigned int)v4, (unsigned int)v5, v5, v6) )\n      v7 = (unsigned __int64)sub_44B980(v3, 1, 3, a2, (unsigned int)v5, (unsigned int)v4, a2, v4) == 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x472990L", 
            "funcEndAddr": "0x472a60L", 
            "funcName": "sub_472990"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_472A60(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // r15\n  __int64 v5; // r12\n  signed __int64 v6; // rbx\n  _BOOL4 v7; // ebp\n\n  v3 = a3;\n  v4 = a2 + dword_94FE90[a1];\n  v5 = a2 + dword_94FEB0[a1];\n  v6 = (signed int)a2 + (signed __int64)dword_950330[a1];\n  if ( dword_954FF0[19 * v6] == 1\n    || (v7 = 0, dword_954FF0[19 * ((signed int)a2 + (signed __int64)dword_94F590[a1])] == 1) )\n  {\n    v7 = 1;\n    if ( (unsigned int)sub_44B980(a3, 1, 3, a2, (unsigned int)v4, (unsigned int)v5, v5, v6) )\n      v7 = (unsigned __int64)sub_44B980(v3, 1, 3, a2, (unsigned int)v5, (unsigned int)v4, a2, v4) == 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x472a60L", 
            "funcEndAddr": "0x472b30L", 
            "funcName": "sub_472A60"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_472B30(int a1, unsigned int a2, int a3)\n{\n  int v3; // er13\n  unsigned int v4; // ebx\n  unsigned int v5; // er14\n  unsigned int v6; // er12\n  signed int v7; // esi\n  unsigned int v8; // ebp\n  void *v9; // r15\n  int v10; // eax\n  _BOOL4 v11; // ecx\n  int v12; // eax\n  __int64 v14; // [rsp+0h] [rbp-48h]\n  int v15; // [rsp+10h] [rbp-38h]\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a2 + dword_94FEB0[a1];\n  v6 = a2 + dword_94FA30[a1];\n  v7 = a2 + dword_94F570[a1];\n  v15 = dword_94F550[a1];\n  v8 = 3 - a3;\n  v9 = &unk_927B28;\n  if ( a3 == 2 )\n    v9 = &unk_9333A0;\n  v10 = sub_41A430((__int64)v9, v7);\n  v11 = 1;\n  if ( v10 == v3 )\n  {\n    v12 = sub_41A430((__int64)v9, v4 + v15);\n    v11 = 1;\n    if ( v12 == v3 )\n    {\n      LODWORD(v14) = v6;\n      v11 = (unsigned __int64)sub_44B7B0(v8, 1, 3, v5, v4, v6, v14) == 0;\n    }\n  }\n  return (unsigned int)v11;\n}\n", 
            "funcStartAddr": "0x472b30L", 
            "funcEndAddr": "0x472bf8L", 
            "funcName": "sub_472B30"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_472C30(int a1, int a2)\n{\n  __int64 v2; // rbx\n  signed int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_950350[a1];\n  v3 = sub_4083A0(a2 + dword_94FED0[a1]);\n  result = 0LL;\n  if ( v3 >= 2 )\n    result = dword_954FF0[19 * (a2 + v2)] == 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x472c30L", 
            "funcEndAddr": "0x472c74L", 
            "funcName": "sub_472C30"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_472CC0(int a1, int a2)\n{\n  int v2; // ebp\n  signed int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_94F570[a1];\n  v3 = sub_4083A0(a2 + dword_94F590[a1]);\n  result = 0LL;\n  if ( v3 >= 2 )\n    result = (unsigned int)sub_4083A0(a2 + v2) == 2;\n  return result;\n}\n", 
            "funcStartAddr": "0x472cc0L", 
            "funcEndAddr": "0x472d00L", 
            "funcName": "sub_472CC0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_472D00(int a1, unsigned int a2, int a3, int a4)\n{\n  signed int v4; // ebp\n  signed int v5; // er14\n  signed int v6; // ebx\n  _BOOL8 v7; // rbp\n  __int64 v8; // r14\n  __int64 v9; // r15\n  unsigned int v10; // er12\n\n  if ( a4 )\n  {\n    v4 = a2 + dword_94F570[a1];\n    v5 = a2 + dword_94FA30[a1];\n    v6 = a2 + dword_94F5B0[a1];\n    sub_421440(a2, a2 + dword_94F570[a1], a2 + dword_94FA30[a1]);\n    sub_421440(a2, v4, v6);\n    sub_421440(a2, v5, v6);\n    LODWORD(v7) = 0;\n  }\n  else\n  {\n    v8 = a2 + dword_94F590[a1];\n    v9 = a2 + dword_94FA50[a1];\n    v10 = 3 - a3;\n    LODWORD(v7) = 0;\n    if ( (unsigned int)sub_44B980(3 - a3, 0, 3, (unsigned int)v8, a2, (unsigned int)v9, v8, v9) )\n      v7 = (unsigned int)sub_44B980(v10, 0, 3, (unsigned int)v8, (unsigned int)v9, a2, v8, a2) != 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x472d00L", 
            "funcEndAddr": "0x472de9L", 
            "funcName": "sub_472D00"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_472DF0(int a1, unsigned int a2, int a3, int a4)\n{\n  signed int v4; // ebp\n  signed int v5; // er14\n  signed int v6; // ebx\n  _BOOL8 v7; // rbp\n  __int64 v8; // r14\n  __int64 v9; // r15\n  unsigned int v10; // er12\n\n  if ( a4 )\n  {\n    v4 = a2 + dword_94F9F0[a1];\n    v5 = a2 + dword_94FEB0[a1];\n    v6 = a2 + dword_94FA30[a1];\n    sub_421440(a2, a2 + dword_94F9F0[a1], a2 + dword_94FEB0[a1]);\n    sub_421440(a2, v4, v6);\n    sub_421440(a2, v5, v6);\n    LODWORD(v7) = 0;\n  }\n  else\n  {\n    v8 = a2 + dword_94FE90[a1];\n    v9 = a2 + dword_94FED0[a1];\n    v10 = 3 - a3;\n    LODWORD(v7) = 0;\n    if ( (unsigned int)sub_44B980(3 - a3, 0, 3, a2, (unsigned int)v8, (unsigned int)v9, a2, v9) )\n      v7 = (unsigned int)sub_44B980(v10, 0, 3, a2, (unsigned int)v9, (unsigned int)v8, a2, v8) != 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x472df0L", 
            "funcEndAddr": "0x472ed9L", 
            "funcName": "sub_472DF0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_472EE0(int a1, unsigned int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er14\n  signed int v5; // ebp\n  signed int v6; // er14\n  signed int v7; // ebx\n  _BOOL8 v8; // rbp\n  __int64 v9; // r15\n  __int64 v10; // r12\n\n  v4 = a3;\n  if ( a4 )\n  {\n    v5 = a2 + dword_94F9F0[a1];\n    v6 = a2 + dword_94FEB0[a1];\n    v7 = a2 + dword_94FA30[a1];\n    sub_4215F0(a2, a2 + dword_94F9F0[a1], a2 + dword_94FEB0[a1]);\n    sub_4215F0(a2, v5, v7);\n    sub_4215F0(a2, v6, v7);\n    LODWORD(v8) = 0;\n  }\n  else\n  {\n    v9 = a2 + dword_94FE90[a1];\n    v10 = a2 + dword_94FED0[a1];\n    LODWORD(v8) = 0;\n    if ( (unsigned int)sub_44B980(a3, 0, 3, a2, (unsigned int)v9, (unsigned int)v10, a2, v10) )\n      v8 = (unsigned int)sub_44B980(v4, 0, 3, a2, (unsigned int)v10, (unsigned int)v9, a2, v9) != 0;\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x472ee0L", 
            "funcEndAddr": "0x472fc6L", 
            "funcName": "sub_472EE0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_473010(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // er15\n  unsigned int v5; // ebx\n  _BOOL4 v6; // er12\n  __int64 v8; // [rsp+0h] [rbp-38h]\n  _QWORD v9[7]; // [rsp+0h] [rbp-38h]\n\n  v3 = a3;\n  v4 = a2 + dword_94F9F0[a1];\n  v5 = a2 + dword_94F550[a1];\n  LODWORD(v8) = a2;\n  v6 = 0;\n  if ( !(unsigned int)sub_44B7B0(a3, 1, 3, a2, v4, v5, v8) )\n  {\n    LODWORD(v9[0]) = v5;\n    v6 = (unsigned __int64)sub_44B7B0(v3, 1, 3, a2, v4, v5, v9[0]) == 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x473010L", 
            "funcEndAddr": "0x473096L", 
            "funcName": "sub_473010"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4730A0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // er15\n  int v5; // er12\n  __int64 v6; // rbx\n  signed int v7; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_950350[a1];\n  v5 = dword_94FA30[a1];\n  v6 = a2 + dword_94F9F0[a1];\n  v7 = sub_4083A0(a2 + dword_94FED0[a1]);\n  result = 0LL;\n  if ( v7 >= 2 )\n    result = (unsigned int)sub_44B7B0(v3, 1, 4, a2, a2 + v4, a2 + v5, v6, v6) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x4730a0L", 
            "funcEndAddr": "0x47311dL", 
            "funcName": "sub_4730A0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_473120(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // er15\n  int v5; // er12\n  __int64 v6; // rbx\n  signed int v7; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_950350[a1];\n  v5 = dword_94FA30[a1];\n  v6 = a2 + dword_94F9F0[a1];\n  v7 = sub_4083A0(a2 + dword_94FED0[a1]);\n  result = 0LL;\n  if ( v7 >= 2 )\n    result = (unsigned int)sub_44B7B0(v3, 1, 4, a2, a2 + v4, a2 + v5, v6, v6) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x473120L", 
            "funcEndAddr": "0x47319dL", 
            "funcName": "sub_473120"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4731A0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // er15\n  int v5; // er12\n  __int64 v6; // rbx\n  signed int v7; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_950350[a1];\n  v5 = dword_94FA30[a1];\n  v6 = a2 + dword_94F9F0[a1];\n  v7 = sub_4083A0(a2 + dword_94FED0[a1]);\n  result = 0LL;\n  if ( v7 >= 2 )\n    result = (unsigned int)sub_44B7B0(v3, 1, 4, a2, a2 + v4, a2 + v5, v6, v6) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x4731a0L", 
            "funcEndAddr": "0x47321dL", 
            "funcName": "sub_4731A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_473220(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er12\n  unsigned int v4; // ebx\n  __int64 v5; // r13\n  int v6; // er14\n  __int64 v7; // r15\n  signed int v8; // eax\n  _BOOL8 v9; // rcx\n  signed int v10; // eax\n  int v11; // eax\n  unsigned int v13; // [rsp+Ch] [rbp-3Ch]\n\n  v13 = a3;\n  v3 = a2 + dword_94F0D0[a1];\n  v4 = a2 + dword_94F9F0[a1];\n  v5 = a2 + dword_94FA30[a1];\n  v6 = dword_94F550[a1];\n  v7 = a2 + dword_94F570[a1];\n  v8 = sub_4083A0(a2 + dword_94F590[a1]);\n  LODWORD(v9) = 0;\n  if ( v8 >= 2 )\n  {\n    v10 = sub_4083A0(a2 + v6);\n    LODWORD(v9) = 0;\n    if ( v10 >= 2 )\n    {\n      v11 = sub_44B7B0(v13, 0, 1, a2, (unsigned int)v7);\n      LODWORD(v9) = 1;\n      if ( v11 )\n        v9 = (unsigned int)sub_44B980(v13, 1, 4, a2, v3, v4, v5, v7, v5) != 0;\n    }\n  }\n  return (unsigned int)v9;\n}\n", 
            "funcStartAddr": "0x473220L", 
            "funcEndAddr": "0x473315L", 
            "funcName": "sub_473220"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_473380@<rax>(unsigned int a1@<eax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // ebx\n  unsigned int v5; // er15\n  unsigned int v6; // er12\n  int v7; // er14\n  _BOOL4 v8; // er13\n  unsigned int v10; // [rsp+0h] [rbp-34h]\n\n  v4 = a4 + dword_94F550[a3];\n  v5 = a4 + dword_94F0B0[a3];\n  v6 = a4 + dword_94F590[a3];\n  v7 = dword_94F0D0[a3];\n  v8 = 1;\n  if ( !(unsigned int)sub_44B7B0(a2, 1, 2, a4, v4, v4, __PAIR__(a2, a1)) )\n  {\n    v8 = 1;\n    if ( !(unsigned int)sub_44B7B0(v10, 1, 2, a4, v4, a4 + v7) )\n    {\n      v8 = 0;\n      if ( (unsigned int)sub_44B7B0(v10, 1, 2, a4, v4, v6) )\n        v8 = (unsigned __int64)sub_44B7B0(v10, 1, 2, a4, v4, v5) == 0;\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x473380L", 
            "funcEndAddr": "0x47346bL", 
            "funcName": "sub_473380"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_473470(int a1, int a2)\n{\n  int v2; // ebx\n  __int64 v3; // r15\n  _BOOL4 v4; // ebp\n\n  v2 = dword_950370[a1];\n  v3 = dword_94F570[a1];\n  v4 = 0;\n  if ( (signed int)sub_4083A0(a2 + dword_94FA30[a1]) >= 2 && (signed int)sub_4083A0(a2 + v2) >= 2 )\n    v4 = dword_954FF0[19 * (a2 + v3)] == 1;\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x473470L", 
            "funcEndAddr": "0x4734d5L", 
            "funcName": "sub_473470"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4734E0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  int v6; // er15\n  int v7; // er13\n  _BOOL4 v8; // ebp\n  _QWORD v10[7]; // [rsp+0h] [rbp-38h]\n\n  v4 = a2;\n  v5 = a4 + dword_94FEB0[a3];\n  v6 = dword_94F570[a3];\n  v7 = dword_94F590[a3];\n  v8 = 0;\n  if ( (unsigned int)sub_44B7B0(a2, 1, 2, a4, v5, v5, a1) )\n  {\n    LODWORD(v10[0]) = a4 + v7;\n    v8 = (unsigned __int64)sub_44B7B0(v4, 1, 3, a4, a4 + v6, v5, v10[0]) == 0;\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x4734e0L", 
            "funcEndAddr": "0x473571L", 
            "funcName": "sub_4734E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_473580(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er15\n  unsigned int v4; // er14\n  __int64 v5; // r13\n  _BOOL4 v6; // er12\n  unsigned int v8; // [rsp+0h] [rbp-34h]\n\n  v3 = a2 + dword_94FA30[a1];\n  v4 = a2 + dword_94FED0[a1];\n  v5 = a2 + dword_94FEB0[a1];\n  v6 = 0;\n  v8 = a3;\n  if ( !(unsigned int)sub_44B7B0(a3, 1, 4, a2, v3, v4, v5, a2 + dword_94FA50[a1]) )\n    v6 = (unsigned __int64)sub_44B7B0(v8, 1, 4, a2, v3, v4, v5, a2) == 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x473580L", 
            "funcEndAddr": "0x47362eL", 
            "funcName": "sub_473580"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_473670(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r15\n  __int64 v4; // r12\n  __int64 v5; // r13\n  void *v6; // rdi\n  _BOOL4 v7; // ebx\n  unsigned int v9; // [rsp+Ch] [rbp-3Ch]\n  __int64 v10; // [rsp+10h] [rbp-38h]\n\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = a2 + dword_94FED0[a1];\n  v10 = a2 + dword_950350[a1];\n  v5 = a2 + dword_950370[a1];\n  v9 = a3;\n  v6 = &unk_927B28;\n  if ( a3 == 2 )\n    v6 = &unk_9333A0;\n  v7 = 0;\n  if ( (unsigned int)sub_41A570((__int64)v6, v5) != 3 - a3 )\n  {\n    v7 = 0;\n    if ( !(unsigned int)sub_44B980(v9, 1, 3, a2, (unsigned int)v3, (unsigned int)v4, a2, v4) )\n      v7 = (unsigned __int64)sub_44B980(v9, 1, 5, a2, (unsigned int)v4, (unsigned int)v3, v10, v5, v3, v5) == 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x473670L", 
            "funcEndAddr": "0x473753L", 
            "funcName": "sub_473670"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_473760(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // ebp\n  __int64 v4; // r12\n  int v5; // er13\n  signed int v6; // esi\n  signed int v7; // ebx\n  int v8; // er15\n  void *v9; // r14\n  int v10; // eax\n  _BOOL4 v11; // er14\n  unsigned int v13; // [rsp+0h] [rbp-48h]\n  unsigned int v14; // [rsp+4h] [rbp-44h]\n  __int64 v15; // [rsp+8h] [rbp-40h]\n  __int64 v16; // [rsp+10h] [rbp-38h]\n\n  v3 = a2;\n  v13 = a2 + dword_94FEB0[a1];\n  v4 = a2 + dword_94F570[a1];\n  v16 = a2 + dword_94FE90[a1];\n  v15 = a2 + dword_94FED0[a1];\n  v5 = dword_950330[a1];\n  v6 = a2 + dword_950350[a1];\n  v7 = v3 + dword_950370[a1];\n  v14 = a3;\n  v8 = 3 - a3;\n  v9 = &unk_927B28;\n  if ( a3 == 2 )\n    v9 = &unk_9333A0;\n  if ( (unsigned int)sub_41A570((__int64)v9, v6) != v8\n    || (unsigned int)sub_41A570((__int64)v9, v3 + v5) != v8\n    || (v10 = sub_41A570((__int64)v9, v7), v11 = 0, v10 != v8) )\n  {\n    v11 = 0;\n    if ( !(unsigned int)sub_44B980(v14, 1, 5, v3, v13, (unsigned int)v4, v16, v15, v15, v4) )\n      v11 = (unsigned __int64)sub_44B980(v14, 1, 5, v3, v13, (unsigned int)v4, v15, v16, v16, v4) == 0;\n  }\n  return (unsigned int)v11;\n}\n", 
            "funcStartAddr": "0x473760L", 
            "funcEndAddr": "0x473898L", 
            "funcName": "sub_473760"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4738C0(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r13\n  unsigned int v4; // er15\n  __int64 v5; // r14\n  _BOOL8 v6; // r12\n  unsigned int v7; // ebx\n  __int64 v9; // [rsp+0h] [rbp-38h]\n\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = a2 + dword_94FE90[a1];\n  v9 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_950330[a1];\n  LODWORD(v6) = 0;\n  v7 = a3;\n  if ( (unsigned int)sub_44B7B0(a3, 1, 3, a2, (unsigned int)v3, v4, a2 + dword_94F9F0[a1]) )\n  {\n    LODWORD(v6) = 0;\n    if ( (unsigned int)sub_44B7B0(v7, 1, 3, a2, (unsigned int)v3, v4, v3) )\n    {\n      LODWORD(v6) = 0;\n      if ( (unsigned int)sub_44B7B0(v7, 1, 4, a2, (unsigned int)v3, v4, v5, v5) )\n        v6 = (unsigned int)sub_44B7B0(v7, 1, 4, a2, (unsigned int)v3, v4, v9, v9) != 0;\n    }\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x4738c0L", 
            "funcEndAddr": "0x4739d9L", 
            "funcName": "sub_4738C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_473AB0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // rbx\n  unsigned int v5; // er15\n  __int64 v6; // r13\n  _BOOL4 v7; // er12\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94FA30[a1];\n  v6 = a2 + dword_94FEB0[a1];\n  v7 = 0;\n  if ( !(unsigned int)sub_44B7B0(a3, 0, 4, a2, (unsigned int)v4, v5, v6, v4) )\n    v7 = (unsigned __int64)sub_44B7B0(v3, 0, 4, a2, (unsigned int)v4, v5, v6, v6) == 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x473ab0L", 
            "funcEndAddr": "0x473b51L", 
            "funcName": "sub_473AB0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_473BA0(int a1, signed int a2, __int64 a3, int a4)\n{\n  signed int v4; // ebp\n  signed int v5; // er15\n  signed int v6; // er14\n  _BOOL4 v7; // ebx\n  signed int v8; // eax\n\n  v4 = a2 + dword_94F0F0[a1];\n  v5 = a2 + dword_94FED0[a1];\n  v6 = a2 + dword_94FE90[a1];\n  if ( a4 )\n  {\n    sub_421440(a2, v4, v5);\n    sub_421440(a2, v4, v6);\n    sub_421440(a2, v5, v6);\n    v7 = 0;\n  }\n  else\n  {\n    v7 = 0;\n    if ( (signed int)sub_4083A0(v4) >= 3 && (signed int)sub_4083A0(v5) >= 3 )\n    {\n      v8 = sub_4083A0(v6);\n      v7 = v8 < 3;\n      LOBYTE(v7) = v8 > 3;\n    }\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x473ba0L", 
            "funcEndAddr": "0x473c30L", 
            "funcName": "sub_473BA0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_473C30(__int64 a1, signed int a2, int a3)\n{\n  void *v3; // rdi\n\n  v3 = &unk_927B28;\n  if ( a3 == 2 )\n    v3 = &unk_9333A0;\n  return (unsigned int)sub_41A430((__int64)v3, a2) != a3;\n}\n", 
            "funcStartAddr": "0x473c30L", 
            "funcEndAddr": "0x473c54L", 
            "funcName": "sub_473C30"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_473CB0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // rbp\n  __int64 v5; // r15\n  __int64 v6; // rbx\n  int v7; // er13\n  _BOOL8 v8; // r12\n  int v10; // [rsp+0h] [rbp-38h]\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a2 + dword_94FA30[a1];\n  v6 = a2 + dword_94FED0[a1];\n  v10 = dword_94FA50[a1];\n  v7 = dword_94FEF0[a1];\n  LODWORD(v8) = 0;\n  if ( !(unsigned int)sub_44B980(a3, 1, 3, (unsigned int)v4, (unsigned int)v5, (unsigned int)v6, v4, v6) )\n    v8 = (unsigned int)sub_44B980(\n                         v3,\n                         0,\n                         4,\n                         (unsigned int)v4,\n                         (unsigned int)v6,\n                         (unsigned int)v5,\n                         (unsigned int)(v4 + v10),\n                         v5,\n                         (unsigned int)(v4 + v7)) != 0;\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x473cb0L", 
            "funcEndAddr": "0x473d68L", 
            "funcName": "sub_473CB0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_473D70(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // rbp\n  __int64 v5; // r15\n  __int64 v6; // rbx\n  int v7; // er13\n  _BOOL8 v8; // r12\n  int v10; // [rsp+0h] [rbp-38h]\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a2 + dword_94FA30[a1];\n  v6 = a2 + dword_94FED0[a1];\n  v10 = dword_94FA50[a1];\n  v7 = dword_94FEF0[a1];\n  LODWORD(v8) = 0;\n  if ( !(unsigned int)sub_44B980(a3, 1, 3, (unsigned int)v4, (unsigned int)v5, (unsigned int)v6, v4, v6) )\n    v8 = (unsigned int)sub_44B980(\n                         v3,\n                         0,\n                         4,\n                         (unsigned int)v4,\n                         (unsigned int)v6,\n                         (unsigned int)v5,\n                         (unsigned int)(v4 + v10),\n                         v5,\n                         (unsigned int)(v4 + v7)) != 0;\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x473d70L", 
            "funcEndAddr": "0x473e28L", 
            "funcName": "sub_473D70"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_473EE0(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // rbp\n  __int64 v4; // r15\n  __int64 v5; // r14\n  _BOOL4 v6; // er12\n  int v7; // ebx\n  int v8; // eax\n\n  v3 = a2 + dword_94FA30[a1];\n  v4 = dword_94F590[a1];\n  v5 = a2 + dword_94FEB0[a1];\n  v6 = 0;\n  if ( !(unsigned int)sub_44B980(\n                        a3,\n                        0,\n                        5,\n                        a2,\n                        a2 + dword_94F0D0[a1],\n                        a2 + dword_94F9F0[a1],\n                        v3,\n                        a2 + dword_94FED0[a1],\n                        v3,\n                        v5) )\n  {\n    v7 = *((_DWORD *)&xmmword_954FB0 + 19 * ((signed int)a2 + v4) + 3);\n    v8 = sub_40A5F0(v5);\n    v6 = v7 < v8;\n    LOBYTE(v6) = v7 <= v8;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x473ee0L", 
            "funcEndAddr": "0x473f82L", 
            "funcName": "sub_473EE0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_473F90@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  __int64 v5; // r8\n  unsigned int v6; // ebx\n  _BOOL8 v7; // rbp\n\n  v4 = a2;\n  v5 = a4 + dword_94F0D0[a3];\n  v6 = a4 + dword_94FEB0[a3];\n  LODWORD(v7) = 0;\n  if ( (unsigned int)sub_44B7B0(a2, 1, 2, a4, v5, (unsigned int)v5, a1) )\n    v7 = (unsigned int)sub_44B7B0(v4, 1, 2, a4, v6, v6) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x473f90L", 
            "funcEndAddr": "0x474007L", 
            "funcName": "sub_473F90"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_474010(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er15\n  __int64 v4; // r8\n  unsigned int v5; // ebx\n  __int64 v6; // r14\n  unsigned int v7; // er12\n  __int64 v8; // r14\n\n  v3 = a3;\n  v4 = a2 + dword_94F0D0[a1];\n  v5 = a2 + dword_94FEB0[a1];\n  v6 = dword_94F590[a1];\n  v7 = 0;\n  if ( (unsigned int)sub_44B7B0(a3, 1, 2, a2, v4, (unsigned int)v4) )\n  {\n    v7 = 0;\n    if ( (unsigned int)sub_44B7B0(v3, 1, 2, a2, v5, v5) )\n    {\n      v8 = (signed int)a2 + v6;\n      if ( dword_98A7F4 )\n      {\n        if ( (unsigned int)sub_43B050(v8, 0LL) )\n          return (unsigned int)sub_44B7B0(v3, 0, 1, a2, (unsigned int)v8) == 0;\n      }\n      else if ( dword_8E94D4[95 * v8] )\n      {\n        return (unsigned int)sub_44B7B0(v3, 0, 1, a2, (unsigned int)v8) == 0;\n      }\n      return 1;\n    }\n  }\n  return v7;\n}\n", 
            "funcStartAddr": "0x474010L", 
            "funcEndAddr": "0x4740e2L", 
            "funcName": "sub_474010"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_4740F0@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  int v4; // er14\n  unsigned int v5; // ebp\n  int v6; // er15\n  _BOOL4 v7; // ecx\n  _BOOL8 result; // rax\n  __int64 v9; // [rsp+0h] [rbp-28h]\n\n  HIDWORD(v9) = HIDWORD(a1);\n  v4 = a2;\n  v5 = a4 + dword_94FA30[a3];\n  v6 = dword_94FEB0[a3];\n  v7 = sub_414710(a4 + dword_94F9F0[a3], a4 + dword_94FED0[a3]);\n  result = 0LL;\n  if ( !v7 )\n  {\n    LODWORD(v9) = a4 + v6;\n    result = (unsigned int)sub_44B980(3 - v4, 1, 2, a4, v5, v5, v9) != 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4740f0L", 
            "funcEndAddr": "0x47416bL", 
            "funcName": "sub_4740F0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_474170@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, int a4@<esi>)\n{\n  int v4; // ebp\n  unsigned int v5; // ebx\n  signed int v6; // ecx\n  _BOOL8 result; // rax\n  __int64 v8; // [rsp-8h] [rbp-18h]\n\n  v8 = a1;\n  v4 = a2;\n  v5 = dword_94FEB0[a3] + a4;\n  v6 = sub_4083A0(a4 + dword_950350[a3]);\n  result = 0LL;\n  if ( v6 >= 2 )\n    result = (unsigned int)sub_44B7B0(3 - v4, 1, 1, v5, v5, v8) == 3;\n  return result;\n}\n", 
            "funcStartAddr": "0x474170L", 
            "funcEndAddr": "0x4741c6L", 
            "funcName": "sub_474170"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4741D0(int a1, signed int a2, int a3)\n{\n  int v3; // ebx\n  signed int v4; // ecx\n  _BOOL8 result; // rax\n  void *v6; // rdi\n\n  v3 = a3;\n  v4 = sub_4083A0(a2 + dword_94F0B0[a1]);\n  result = 0LL;\n  if ( v4 >= 3 )\n  {\n    v6 = &unk_927B28;\n    if ( v3 == 2 )\n      v6 = &unk_9333A0;\n    result = (unsigned int)sub_41A430((__int64)v6, a2) != v3;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4741d0L", 
            "funcEndAddr": "0x474219L", 
            "funcName": "sub_4741D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_474260@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  signed __int64 v4; // rbx\n  unsigned int v5; // er14\n  _BOOL8 v6; // rbp\n\n  v4 = dword_94F9F0[a3] + (signed __int64)(signed int)a4;\n  if ( dword_954FF0[19 * v4] )\n  {\n    v5 = 3 - a2;\n    LODWORD(v6) = 1;\n    if ( !(unsigned int)sub_44B7B0(3 - a2, 1, 1, a4, a4 + dword_94FEB0[a3], a1) )\n      v6 = (unsigned int)sub_44B7B0(v5, 1, 1, a4, (unsigned int)v4) != 0;\n  }\n  else\n  {\n    LODWORD(v6) = 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x474260L", 
            "funcEndAddr": "0x4742efL", 
            "funcName": "sub_474260"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4742F0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // rbx\n  unsigned int v5; // er15\n  __int64 v6; // r13\n  _BOOL8 v7; // r12\n\n  v3 = a3;\n  v4 = a2 + dword_94F550[a1];\n  v5 = a2 + dword_94F570[a1];\n  v6 = a2 + dword_94F9F0[a1];\n  LODWORD(v7) = 0;\n  if ( !(unsigned int)sub_44B7B0(a3, 0, 3, a2, (unsigned int)v4, v5, v4) )\n    v7 = (unsigned int)sub_44B7B0(v3, 1, 4, a2, v5, (unsigned int)v4, v6, v6) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x4742f0L", 
            "funcEndAddr": "0x474390L", 
            "funcName": "sub_4742F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_474390(int a1, unsigned int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er15\n  signed int v5; // ebp\n  signed int v6; // ebx\n  __int64 v7; // rbp\n  __int64 v9; // r12\n  __int64 v10; // r14\n  __int64 v11; // rbx\n  __int64 v12; // [rsp+0h] [rbp-38h]\n\n  v4 = a3;\n  if ( a4 )\n  {\n    v5 = a2 + dword_94F0B0[a1];\n    v6 = a2 + dword_94FE90[a1];\n    sub_421440(a2, a2 + dword_950350[a1], a2 + dword_94F0B0[a1]);\n    sub_421440(a2, v6, v5);\nLABEL_3:\n    LODWORD(v7) = 0;\n    return (unsigned int)v7;\n  }\n  v9 = a2 + dword_94F570[a1];\n  v10 = a2 + dword_94F550[a1];\n  v7 = a2 + dword_94F0D0[a1];\n  v11 = a2 + dword_94F9F0[a1];\n  if ( !(unsigned int)sub_44ADE0(a2, a3, a2 + dword_94FEB0[a1]) )\n    goto LABEL_3;\n  v12 = v7;\n  LODWORD(v7) = 0;\n  if ( !(unsigned int)sub_44B980(v4, 0, 3, a2, (unsigned int)v9, (unsigned int)v10, v9, v11) )\n    v7 = (unsigned int)sub_44B980(v4, 1, 4, a2, (unsigned int)v10, (unsigned int)v9, v12, v10, v12) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x474390L", 
            "funcEndAddr": "0x4744a5L", 
            "funcName": "sub_474390"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4744B0(int a1, unsigned int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er14\n  signed int v5; // ebp\n  signed int v6; // er14\n  unsigned int v8; // er15\n  unsigned int v9; // er12\n  _QWORD v10[7]; // [rsp+0h] [rbp-38h]\n\n  v4 = a3;\n  v5 = a2 + dword_94F0B0[a1];\n  if ( a4 )\n  {\n    v6 = a2 + dword_94FE90[a1];\n    sub_421440(a2, a2 + dword_950350[a1], v5);\n    sub_421440(a2, v6, v5);\n    return 0LL;\n  }\n  v8 = a2 + dword_94F570[a1];\n  v9 = a2 + dword_94F590[a1];\n  if ( !(unsigned int)sub_44ADE0(a2, a3, a2 + dword_94FEB0[a1]) )\n    return 0LL;\n  LODWORD(v10[0]) = v5;\n  return (unsigned int)sub_44B7B0(v4, 1, 3, a2, v8, v9, v10[0]) == 0;\n}\n", 
            "funcStartAddr": "0x4744b0L", 
            "funcEndAddr": "0x474560L", 
            "funcName": "sub_4744B0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_474560(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  int v5; // er15\n  int v6; // er12\n  int v7; // er13\n  int v8; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = dword_94FED0[a1];\n  v6 = dword_950350[a1];\n  v7 = dword_94F570[a1];\n  v8 = sub_44ADE0(a2, a3, v4);\n  result = 1LL;\n  if ( !v8 )\n    result = (unsigned int)sub_44B980(v3, 1, 3, a2, v4, a2 + v5, a2 + v6, a2 + v7) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x474560L", 
            "funcEndAddr": "0x4745f3L", 
            "funcName": "sub_474560"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_474600(int a1, unsigned int a2, int a3)\n{\n  unsigned int v3; // ebp\n  int v4; // er14\n  int v5; // er12\n  int v6; // er13\n  unsigned int v7; // ebx\n  int v8; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = dword_94FED0[a1];\n  v5 = dword_950350[a1];\n  v6 = dword_94F570[a1];\n  v7 = 3 - a3;\n  v8 = sub_44ADE0(a2, (unsigned int)(3 - a3), v3);\n  result = 1LL;\n  if ( !v8 )\n    result = (unsigned int)sub_44B980(v7, 1, 3, a2, v3, a2 + v4, a2 + v5, a2 + v6) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x474600L", 
            "funcEndAddr": "0x474699L", 
            "funcName": "sub_474600"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4746A0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // er15\n  int v5; // er13\n  int v6; // er12\n  __int64 v7; // rbx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_94FA30[a1];\n  v5 = dword_94F590[a1];\n  v6 = dword_94F570[a1];\n  v7 = a2 + dword_94FED0[a1];\n  if ( (unsigned int)sub_44ADE0(a2, a3, a2 + dword_94F9F0[a1]) )\n    result = (unsigned int)sub_44B7B0(v3, 1, 5, a2, a2 + v4, a2 + v5, a2 + v6, v7, v7) == 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x4746a0L", 
            "funcEndAddr": "0x47473bL", 
            "funcName": "sub_4746A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_474740(int a1, unsigned int a2, int a3)\n{\n  __int64 v3; // r15\n  __int64 v4; // r14\n  unsigned int v5; // er13\n  _BOOL8 v6; // r12\n  __int64 v8; // [rsp+0h] [rbp-38h]\n\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = a2 + dword_94FE90[a1];\n  v8 = a2 + dword_950350[a1];\n  v5 = 3 - a3;\n  LODWORD(v6) = 0;\n  if ( !(unsigned int)sub_44B980(3 - a3, 0, 3, a2, (unsigned int)v3, (unsigned int)v4, v3, a2 + dword_94F9F0[a1]) )\n    v6 = (unsigned int)sub_44B980(v5, 1, 4, a2, (unsigned int)v4, (unsigned int)v3, v8, v4, v8) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x474740L", 
            "funcEndAddr": "0x4747faL", 
            "funcName": "sub_474740"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_474800(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r14\n  __int64 v4; // r15\n  __int64 v5; // r13\n  _BOOL8 v6; // r12\n  unsigned int v8; // [rsp+0h] [rbp-34h]\n\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = a2 + dword_94FE90[a1];\n  v5 = a2 + dword_950350[a1];\n  LODWORD(v6) = 0;\n  v8 = a3;\n  if ( !(unsigned int)sub_44B980(a3, 0, 3, a2, (unsigned int)v3, (unsigned int)v4, v3, a2 + dword_94F9F0[a1]) )\n    v6 = (unsigned int)sub_44B980(v8, 1, 4, a2, (unsigned int)v4, (unsigned int)v3, v5, v4, v5) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x474800L", 
            "funcEndAddr": "0x4748b5L", 
            "funcName": "sub_474800"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_474950(int a1, int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er9\n  unsigned int v5; // ebx\n\n  v4 = a2 + dword_94FEF0[a1];\n  v5 = dword_94FEB0[a1] + a2;\n  if ( !a4 )\n    return (unsigned int)sub_44B7B0(a3, 1, 2, v4, v5, v5) == 0;\n  sub_4217E0(v4);\n  sub_4217E0(v5);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x474950L", 
            "funcEndAddr": "0x4749aaL", 
            "funcName": "sub_474950"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_474A50(int a1, int a2)\n{\n  int v2; // ebp\n  signed int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94FE90[a1];\n  v3 = sub_4083A0(a2 + dword_94F550[a1]);\n  result = 0;\n  if ( v3 >= 2 )\n    result = (signed int)sub_4083A0(a2 + v2) > 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x474a50L", 
            "funcEndAddr": "0x474a90L", 
            "funcName": "sub_474A50"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_474A90(int a1, int a2)\n{\n  int v2; // ebp\n  signed int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94FE90[a1];\n  v3 = sub_4083A0(a2 + dword_94F550[a1]);\n  result = 0;\n  if ( v3 >= 2 )\n    result = (signed int)sub_4083A0(a2 + v2) > 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x474a90L", 
            "funcEndAddr": "0x474ad0L", 
            "funcName": "sub_474A90"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_474AD0(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r13\n  __int64 v4; // r15\n  __int64 v5; // r12\n  unsigned int v6; // er14\n  _BOOL8 v7; // rbx\n  unsigned int v9; // [rsp+Ch] [rbp-3Ch]\n  __int64 v10; // [rsp+10h] [rbp-38h]\n\n  v3 = a2 + dword_94F590[a1];\n  v4 = a2 + dword_94F550[a1];\n  v10 = a2 + dword_94F0D0[a1];\n  v5 = a2 + dword_94FA30[a1];\n  v9 = a3;\n  v6 = 3 - a3;\n  LODWORD(v7) = 0;\n  if ( !(unsigned int)sub_44B980(3 - a3, 0, 3, a2, (unsigned int)v3, (unsigned int)v4, v3, a2 + dword_94F0B0[a1]) )\n  {\n    LODWORD(v7) = 0;\n    if ( (unsigned int)sub_44B980(v6, 1, 4, a2, (unsigned int)v4, (unsigned int)v3, v5, v5, v4) )\n    {\n      LODWORD(v7) = 0;\n      if ( (unsigned int)sub_44B980(v9, 1, 2, a2, (unsigned int)v4, (unsigned int)v4, v10) )\n        v7 = (unsigned int)sub_44B980(v9, 1, 4, a2, (unsigned int)v3, (unsigned int)v5, v4, v4, v10) != 0;\n    }\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x474ad0L", 
            "funcEndAddr": "0x474bffL", 
            "funcName": "sub_474AD0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_474C00(int a1, unsigned int a2, int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebp\n  int v5; // er13\n  unsigned int v6; // er15\n  _BOOL8 v7; // r12\n  __int64 v9; // [rsp+0h] [rbp-48h]\n  __int64 v10; // [rsp+0h] [rbp-48h]\n  __int64 v11; // [rsp+8h] [rbp-40h]\n  int v12; // [rsp+14h] [rbp-34h]\n\n  v3 = a2 + dword_94FED0[a1];\n  v4 = a2 + dword_94FA50[a1];\n  v5 = a2 + dword_94FEF0[a1];\n  v12 = dword_94F570[a1];\n  v6 = 3 - a3;\n  LODWORD(v9) = v4;\n  LODWORD(v7) = 0;\n  if ( !(unsigned int)sub_44B7B0(3 - a3, 0, 3, v3, v4, a2, v9)\n    || (LODWORD(v10) = a2 + v12, !(unsigned int)sub_44B7B0(v6, 0, 3, v3, v4, a2, v10)) )\n  {\n    LODWORD(v11) = v5;\n    LODWORD(v10) = v5;\n    v7 = (unsigned int)sub_44B7B0(v6, 1, 4, v3, a2, v4, v10, v11) != 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x474c00L", 
            "funcEndAddr": "0x474cd5L", 
            "funcName": "sub_474C00"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_474CE0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<ecx>, int a4@<edi>, signed int a5@<esi>)\n{\n  unsigned int v5; // er14\n  __int64 v6; // rbp\n  unsigned int v8; // er15\n  signed __int64 v9; // rdi\n  __int64 v10; // [rsp-8h] [rbp-28h]\n\n  v10 = a1;\n  v5 = a2;\n  if ( !a3 )\n  {\n    v8 = a5 + dword_94FA50[a4];\n    v9 = dword_94FED0[a4] + (signed __int64)a5;\n    if ( dword_98A7F4 )\n    {\n      LODWORD(v6) = 0;\n      if ( (unsigned int)sub_43B050(v9, 0LL) )\n        return (unsigned int)v6;\n    }\n    else\n    {\n      LODWORD(v6) = 0;\n      if ( dword_8E94D4[95 * v9] )\n        return (unsigned int)v6;\n    }\n    return (unsigned int)sub_44B7B0(v5, 1, 2, (unsigned int)a5, v8, v8, v10) != 0;\n  }\n  sub_421440(a5, a5 + dword_94FEB0[a4], a5 + dword_94FEF0[a4]);\n  LODWORD(v6) = 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x474ce0L", 
            "funcEndAddr": "0x474d84L", 
            "funcName": "sub_474CE0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_474D90@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<ecx>, int a4@<edi>, unsigned int a5@<esi>)\n{\n  unsigned int v5; // er14\n  signed int v6; // ebp\n  _BOOL4 v7; // er13\n  unsigned int v8; // er15\n  unsigned int v9; // er12\n  __int64 v11; // [rsp+0h] [rbp-38h]\n  __int64 v12; // [rsp+0h] [rbp-38h]\n\n  HIDWORD(v11) = HIDWORD(a1);\n  v5 = a2;\n  v6 = a5 + dword_94EBF0[a4];\n  if ( a3 )\n  {\n    sub_421440(a5, v6, a5 + dword_94F550[a4]);\n    v7 = 0;\n  }\n  else\n  {\n    v8 = a5 + dword_94F090[a4];\n    v9 = a5 + dword_94F0D0[a4];\n    LODWORD(v11) = a5 + dword_94EBF0[a4];\n    v7 = 0;\n    if ( !(unsigned int)sub_44B7B0(a2, 1, 3, a5, v8, v9, v11) )\n    {\n      LODWORD(v12) = v6;\n      v7 = (unsigned __int64)sub_44B7B0(v5, 1, 3, a5, v9, v8, v12) == 0;\n    }\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x474d90L", 
            "funcEndAddr": "0x474e3dL", 
            "funcName": "sub_474D90"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_474EC0(int a1, int a2)\n{\n  __int64 v2; // rbx\n  _BOOL8 result; // rax\n\n  v2 = dword_94F9D0[a1];\n  if ( (unsigned int)sub_40B8D0(a2 + dword_94F9F0[a1]) )\n    result = dword_954FF0[19 * (a2 + v2)] == 1;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x474ec0L", 
            "funcEndAddr": "0x474f03L", 
            "funcName": "sub_474EC0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_474F50(int a1, int a2)\n{\n  __int64 v2; // rbx\n  _BOOL8 result; // rax\n\n  v2 = dword_94F9F0[a1];\n  if ( (unsigned int)sub_40B8D0(a2 + dword_94FA30[a1]) )\n    result = dword_954FF0[19 * (a2 + v2)] == 1;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x474f50L", 
            "funcEndAddr": "0x474f93L", 
            "funcName": "sub_474F50"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_475040(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // er12\n  unsigned int v5; // ebp\n  __int128 v6; // cx\n\n  v3 = a3;\n  v4 = a2 + dword_950370[a1];\n  v5 = a2 + dword_94F570[a1];\n  v6 = v4;\n  if ( (unsigned int)sub_44BB60(a3, 1, 0, v4, v5) )\n    DWORD2(v6) = (unsigned __int64)sub_44BB60(v3, 1, 1, a2, v4, v5) == 0;\n  return DWORD2(v6);\n}\n", 
            "funcStartAddr": "0x475040L", 
            "funcEndAddr": "0x4750b2L", 
            "funcName": "sub_475040"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4750C0(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r13\n  __int64 v4; // r14\n  __int64 v5; // r12\n  __int64 v6; // r15\n  unsigned int v7; // ebx\n  _BOOL4 v9; // [rsp+14h] [rbp-3Ch]\n  __int64 v10; // [rsp+18h] [rbp-38h]\n\n  v3 = a2 + dword_94FE90[a1];\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = a2 + dword_94F550[a1];\n  v10 = a2 + dword_94F570[a1];\n  v6 = a2 + dword_94F0D0[a1];\n  v9 = 0;\n  v7 = a3;\n  if ( (unsigned int)sub_44B980(\n                       a3,\n                       1,\n                       4,\n                       a2,\n                       (unsigned int)v3,\n                       (unsigned int)v4,\n                       a2 + dword_950350[a1],\n                       v3,\n                       a2 + dword_950350[a1]) )\n  {\n    v9 = 0;\n    if ( (unsigned int)sub_44B980(v7, 1, 4, a2, (unsigned int)v5, v10, v6, v5, v6) )\n    {\n      v9 = 0;\n      if ( !(unsigned int)sub_44B980(v7, 0, 5, a2, (unsigned int)v4, (unsigned int)v3, v5, v10, v4, v5) )\n        v9 = (unsigned __int64)sub_44B980(v7, 0, 5, a2, v10, (unsigned int)v5, v3, v4, v10, v3) == 0;\n    }\n  }\n  return (unsigned int)v9;\n}\n", 
            "funcStartAddr": "0x4750c0L", 
            "funcEndAddr": "0x475213L", 
            "funcName": "sub_4750C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_475220(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r15\n  __int64 v4; // r14\n  __int64 v5; // r12\n  __int64 v6; // r13\n  _BOOL4 v7; // ebx\n  unsigned int v9; // [rsp+Ch] [rbp-5Ch]\n  __int64 v10; // [rsp+10h] [rbp-58h]\n  __int64 v11; // [rsp+18h] [rbp-50h]\n  __int64 v12; // [rsp+20h] [rbp-48h]\n  __int64 v13; // [rsp+28h] [rbp-40h]\n  __int64 v14; // [rsp+30h] [rbp-38h]\n\n  v3 = a2 + dword_94FE90[a1];\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = a2 + dword_950350[a1];\n  v13 = a2 + dword_94F570[a1];\n  v12 = a2 + dword_94FA30[a1];\n  v11 = a2 + dword_94F550[a1];\n  v10 = a2 + dword_94F590[a1];\n  v6 = a2 + dword_94F0F0[a1];\n  v9 = a3;\n  v14 = a2 + dword_94F9F0[a1];\n  v7 = 0;\n  if ( !(unsigned int)sub_44B980(a3, 0, 3, a2, (unsigned int)v4, (unsigned int)v3, v4, v14) )\n  {\n    v7 = 0;\n    if ( (unsigned int)sub_44B980(v9, 1, 4, a2, (unsigned int)v3, (unsigned int)v4, v5, v3, v5) )\n    {\n      v7 = 0;\n      if ( (unsigned int)sub_44B980(v9, 1, 8, a2, (unsigned int)v4, (unsigned int)v3, v13, v12, v11, v10, v6, v11, v6) )\n        v7 = (unsigned __int64)sub_44B980(\n                                 v9,\n                                 0,\n                                 7,\n                                 a2,\n                                 (unsigned int)v4,\n                                 (unsigned int)v3,\n                                 v13,\n                                 v12,\n                                 v10,\n                                 v11,\n                                 v10,\n                                 v14) == 0;\n    }\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x475220L", 
            "funcEndAddr": "0x4753b0L", 
            "funcName": "sub_475220"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4753F0@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // ebp\n  unsigned int v5; // ebx\n  _BOOL8 v6; // r15\n\n  v4 = a4 + dword_94FA30[a3];\n  v5 = 3 - a2;\n  LODWORD(v6) = 1;\n  if ( !(unsigned int)sub_44B7B0(3 - a2, 1, 2, a4 + dword_94FED0[a3], a4 + dword_94FEF0[a3], v4, a1) )\n    v6 = (unsigned int)sub_44B7B0(v5, 1, 1, a4, v4) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x4753f0L", 
            "funcEndAddr": "0x475473L", 
            "funcName": "sub_4753F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4754C0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  unsigned int v5; // ebp\n  _BOOL4 v6; // er12\n  _QWORD v8[7]; // [rsp+0h] [rbp-38h]\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94FEB0[a1];\n  v6 = 1;\n  if ( !(unsigned int)sub_44B7B0(a3, 1, 2, a2, v4, v4)\n    || (LODWORD(v8[0]) = v5, (unsigned int)sub_44B7B0(v3, 0, 3, a2, v5, v4, v8[0])) )\n  {\n    v6 = 0;\n    if ( (unsigned int)sub_44B7B0(v3, 1, 2, a2, v5, v5) )\n    {\n      LODWORD(v8[0]) = v4;\n      v6 = (unsigned __int64)sub_44B7B0(v3, 0, 3, a2, v4, v5, v8[0]) == 0;\n    }\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x4754c0L", 
            "funcEndAddr": "0x475594L", 
            "funcName": "sub_4754C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4755C0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  __int64 v5; // r8\n  unsigned int v6; // ebx\n  _BOOL8 v7; // rbp\n\n  v4 = a2;\n  v5 = a4 + dword_950350[a3];\n  v6 = a4 + dword_94F570[a3];\n  LODWORD(v7) = 0;\n  if ( (unsigned int)sub_44B7B0(a2, 1, 2, a4, v5, (unsigned int)v5, a1) )\n    v7 = (unsigned int)sub_44B7B0(v4, 1, 2, a4, v6, v6) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x4755c0L", 
            "funcEndAddr": "0x475637L", 
            "funcName": "sub_4755C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_475640@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  __int64 v5; // r8\n  unsigned int v6; // ebx\n  _BOOL8 v7; // rbp\n\n  v4 = a2;\n  v5 = a4 + dword_94FEB0[a3];\n  v6 = a4 + dword_94F0D0[a3];\n  LODWORD(v7) = 0;\n  if ( (unsigned int)sub_44B7B0(a2, 1, 2, a4, v5, (unsigned int)v5, a1) )\n    v7 = (unsigned int)sub_44B7B0(v4, 1, 2, a4, v6, v6) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x475640L", 
            "funcEndAddr": "0x4756b7L", 
            "funcName": "sub_475640"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4756C0(int a1, int a2)\n{\n  int v2; // ebp\n  __int64 v3; // rax\n  __int64 v4; // rbx\n  _BOOL4 v5; // er14\n  int v6; // eax\n\n  v2 = dword_94FE90[a1];\n  v3 = dword_94F9F0[a1];\n  v4 = v3 + a2;\n  v5 = 0;\n  if ( (signed int)sub_4083A0((signed int)v3 + a2) <= 3 && (signed int)sub_4083A0(a2 + v2) >= 3 )\n  {\n    if ( dword_98A7F4 )\n      v6 = sub_43B050(v4, 0LL);\n    else\n      v6 = dword_8E94D4[95 * v4];\n    v5 = v6 == 0;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x4756c0L", 
            "funcEndAddr": "0x475738L", 
            "funcName": "sub_4756C0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_475760(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r11\n\n  v3 = a2 + dword_94F570[a1];\n  return (unsigned int)sub_44B7B0(\n                         a3,\n                         1,\n                         6,\n                         a2,\n                         a2 + dword_94FEB0[a1],\n                         a2 + dword_94FE90[a1],\n                         v3,\n                         a2 + dword_950350[a1],\n                         a2,\n                         v3) == 0;\n}\n", 
            "funcStartAddr": "0x475760L", 
            "funcEndAddr": "0x4757bfL", 
            "funcName": "sub_475760"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_475830(int a1, int a2)\n{\n  __int64 v2; // rax\n  __int64 v3; // rbx\n  int v4; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_94EC10[a1];\n  v3 = v2 + a2;\n  v4 = sub_4083A0((signed int)v2 + a2);\n  result = 0LL;\n  if ( v4 == 2 )\n    result = dword_954FF0[19 * v3] != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x475830L", 
            "funcEndAddr": "0x475864L", 
            "funcName": "sub_475830"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_475910@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er15\n  unsigned int v6; // ebx\n  int v7; // ecx\n  _BOOL8 result; // rax\n  __int64 v9; // [rsp+0h] [rbp-28h]\n\n  HIDWORD(v9) = HIDWORD(a1);\n  v4 = a2;\n  v5 = dword_94F9F0[a3];\n  v6 = a4 + dword_950350[a3];\n  v7 = sub_43F100(a4, a2);\n  result = 1LL;\n  if ( !v7 )\n  {\n    LODWORD(v9) = v6;\n    result = (unsigned int)sub_44B7B0(v4, 1, 3, a4, a4 + v5, v6, v9) == 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x475910L", 
            "funcEndAddr": "0x47597bL", 
            "funcName": "sub_475910"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_475980(int a1, unsigned int a2, int a3)\n{\n  int v3; // er14\n  unsigned int v4; // ebp\n  _BOOL8 result; // rax\n\n  v3 = dword_94FEB0[a1];\n  v4 = 3 - a3;\n  if ( (unsigned int)sub_44ADE0(a2, (unsigned int)(3 - a3), a2 + dword_94F570[a1]) )\n    result = (unsigned int)sub_44ADE0(a2, v4, a2 + v3) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x475980L", 
            "funcEndAddr": "0x4759d1L", 
            "funcName": "sub_475980"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4759E0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  unsigned int v6; // er15\n  unsigned int v7; // ebp\n  _BOOL4 v8; // er12\n  __int64 v10; // [rsp-8h] [rbp-38h]\n\n  v10 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94F570[a3];\n  v6 = a4 + dword_94F550[a3];\n  v7 = 3 - a2;\n  v8 = 0;\n  if ( (unsigned int)sub_44ADE0(a4 + dword_94F570[a3], 3 - a2, a4 + dword_94F0D0[a3])\n    && (unsigned int)sub_44ADE0(v5, v7, a4) )\n  {\n    v8 = (unsigned __int64)sub_44B7B0(v4, 1, 1, a4, v6, v10) == 0;\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x4759e0L", 
            "funcEndAddr": "0x475a70L", 
            "funcName": "sub_4759E0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_475AA0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // ebx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_94FEB0[a1];\n  if ( (unsigned int)sub_44ADE0(a2, a3, a2 + dword_94F570[a1]) )\n    result = (unsigned int)sub_44ADE0(a2, v3, a2 + v4) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x475aa0L", 
            "funcEndAddr": "0x475aeaL", 
            "funcName": "sub_475AA0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_475AF0@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er15\n  unsigned int v6; // ebp\n  int v7; // ecx\n  _BOOL8 result; // rax\n  __int64 v9; // [rsp+0h] [rbp-28h]\n\n  HIDWORD(v9) = HIDWORD(a1);\n  v4 = a4 + dword_94F570[a3];\n  v5 = dword_94F550[a3];\n  v6 = 3 - a2;\n  if ( !(unsigned int)sub_43F100(a4, 3 - a2)\n    || (LODWORD(v9) = a4 + v5, v7 = sub_44B980(v6, 0, 2, a4, v4, a4, v9), result = 1LL, !v7) )\n  {\n    result = (unsigned int)sub_44ADE0(v4, v6, a4) != 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x475af0L", 
            "funcEndAddr": "0x475b70L", 
            "funcName": "sub_475AF0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_475BF0@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  int v4; // er14\n  int v5; // er15\n  unsigned int v6; // ebp\n  __int64 v8; // [rsp+0h] [rbp-28h]\n\n  HIDWORD(v8) = HIDWORD(a1);\n  v4 = dword_94F570[a3];\n  v5 = dword_94F550[a3];\n  v6 = 3 - a2;\n  if ( !(unsigned int)sub_43F100(a4, 3 - a2) )\n    return 0LL;\n  LODWORD(v8) = a4 + v5;\n  return (unsigned int)sub_44B980(v6, 0, 2, a4, a4 + v4, a4, v8) != 0;\n}\n", 
            "funcStartAddr": "0x475bf0L", 
            "funcEndAddr": "0x475c5dL", 
            "funcName": "sub_475BF0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_475CC0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // ebp\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_94F570[a1];\n  if ( (unsigned int)sub_44ADE0(a2, a3, a2 + dword_94F9F0[a1]) )\n    result = (unsigned int)sub_44B7B0(v3, 0, 2, a2, a2 + v4, a2) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x475cc0L", 
            "funcEndAddr": "0x475d1aL", 
            "funcName": "sub_475CC0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_475D20(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r12\n  __int64 v4; // rbx\n  __int64 v5; // r15\n  __int64 v6; // r13\n  _BOOL4 v7; // er14\n  unsigned int v9; // [rsp+0h] [rbp-38h]\n  unsigned int v10; // [rsp+4h] [rbp-34h]\n\n  v9 = a2 + dword_94F570[a1];\n  v3 = a2 + dword_94F550[a1];\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = a2 + dword_94F0D0[a1];\n  v6 = a2 + dword_94F9F0[a1];\n  v7 = 0;\n  v10 = a3;\n  if ( (unsigned int)sub_44B980(a3, 1, 2, a2, (unsigned int)v4, (unsigned int)v6, v4) )\n  {\n    v7 = 0;\n    if ( (unsigned int)sub_44B980(v10, 1, 4, a2, (unsigned int)v3, v9, v5, v3, v5) )\n      v7 = (unsigned __int64)sub_44B7B0(v10, 1, 4, a2, v9, (unsigned int)v3, v4, v6) == 5;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x475d20L", 
            "funcEndAddr": "0x475e12L", 
            "funcName": "sub_475D20"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_475E60(int a1, unsigned int a2, int a3)\n{\n  int v3; // er14\n  unsigned int v4; // ebp\n  _BOOL8 result; // rax\n\n  v3 = dword_94FE90[a1];\n  v4 = 3 - a3;\n  if ( (unsigned int)sub_44ADE0(a2, (unsigned int)(3 - a3), a2 + dword_94FEB0[a1]) )\n    result = (unsigned int)sub_44B7B0(v4, 1, 1, a2, a2 + v3) == 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x475e60L", 
            "funcEndAddr": "0x475ebdL", 
            "funcName": "sub_475E60"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_475EC0(int a1, unsigned int a2, int a3)\n{\n  __int64 v3; // r13\n  __int64 v4; // r15\n  __int64 v5; // r12\n  unsigned int v6; // ebp\n  _BOOL8 v7; // r14\n  unsigned int v9; // [rsp+14h] [rbp-3Ch]\n  __int64 v10; // [rsp+18h] [rbp-38h]\n\n  v9 = a2 + dword_94F570[a1];\n  v10 = a2 + dword_94F550[a1];\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = a2 + dword_94F0D0[a1];\n  v5 = a2 + dword_94F9F0[a1];\n  v6 = 3 - a3;\n  LODWORD(v7) = 0;\n  if ( (unsigned int)sub_44B980(3 - a3, 1, 2, a2, (unsigned int)v3, (unsigned int)v5, v3) )\n  {\n    LODWORD(v7) = 0;\n    if ( (unsigned int)sub_44B980(v6, 1, 4, a2, v10, v9, v4, v10, v4) )\n      v7 = (unsigned int)sub_44B7B0(v6, 1, 4, a2, v9, v10, v3, v5) != 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x475ec0L", 
            "funcEndAddr": "0x475fbeL", 
            "funcName": "sub_475EC0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_476000(int a1, unsigned int a2, int a3)\n{\n  int v3; // er14\n  unsigned int v4; // er15\n  int v5; // ebx\n  _BOOL8 v6; // rbp\n\n  v3 = a3;\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = dword_950350[a1];\n  LODWORD(v6) = 0;\n  if ( (signed int)sub_4083A0(a2 + dword_94F570[a1]) >= 2 && (signed int)sub_4083A0(a2 + v5) >= 2 )\n    v6 = (unsigned int)sub_44B7B0(3 - v3, 1, 2, a2, v4, v4) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x476000L", 
            "funcEndAddr": "0x47607dL", 
            "funcName": "sub_476000"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_476080(int a1, int a2)\n{\n  int v2; // ebp\n  signed int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94FE50[a1];\n  v3 = sub_4083A0(a2 + dword_94F510[a1]);\n  result = 0;\n  if ( v3 >= 2 )\n    result = (signed int)sub_4083A0(a2 + v2) > 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x476080L", 
            "funcEndAddr": "0x4760c0L", 
            "funcName": "sub_476080"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4760F0(int a1, int a2, int a3)\n{\n  int v3; // er14\n  int v4; // ebx\n  int v5; // eax\n  signed int v6; // ebx\n  void *v7; // rdi\n\n  v3 = a3;\n  v4 = dword_94F530[a1];\n  LOBYTE(v5) = sub_46A080(a2 + dword_94FEB0[a1]);\n  if ( !v5 )\n    return 1LL;\n  v6 = a2 + v4;\n  v7 = &unk_927B28;\n  if ( v3 == 2 )\n    v7 = &unk_9333A0;\n  return (unsigned int)sub_41A430((__int64)v7, v6) != 3 - v3;\n}\n", 
            "funcStartAddr": "0x4760f0L", 
            "funcEndAddr": "0x47614cL", 
            "funcName": "sub_4760F0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_476280(int a1, int a2, int a3)\n{\n  int v3; // er12\n  int v4; // er14\n  signed int v5; // esi\n  int v6; // er15\n  int v7; // ebp\n  void *v8; // rbx\n  int v9; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a2 + dword_950350[a1];\n  v6 = dword_94F0D0[a1];\n  v7 = 3 - a3;\n  v8 = &unk_927B28;\n  if ( a3 == 2 )\n    v8 = &unk_9333A0;\n  v9 = sub_41A430((__int64)v8, v5);\n  result = 0LL;\n  if ( v9 == v3 )\n    result = (unsigned int)sub_41A430((__int64)v8, v4 + v6) == v7;\n  return result;\n}\n", 
            "funcStartAddr": "0x476280L", 
            "funcEndAddr": "0x4762edL", 
            "funcName": "sub_476280"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_476340@<rax>(char a1@<al>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>, __m128 a5@<xmm0>, __m128 a6@<xmm1>, __m128 a7@<xmm2>, __m128 a8@<xmm3>, __m128 a9@<xmm6>, __m128 a10@<xmm7>)\n{\n  unsigned int v10; // er14\n  __int64 v11; // rbx\n  int v12; // er15\n  int v13; // er12\n  _BOOL8 v14; // r13\n  __int64 v15; // r9\n  __m128 v16; // xmm4\n  __m128 v17; // xmm5\n  char v19; // [rsp-8h] [rbp-38h]\n\n  v19 = a1;\n  v10 = a2;\n  v11 = a4 + dword_94EC30[a3];\n  v12 = dword_94F9D0[a3];\n  v13 = dword_94FE90[a3];\n  LODWORD(v14) = 0;\n  if ( (unsigned int)sub_44B7B0(a2, 1, 4, a4, a4 + dword_94F0B0[a3], a4 + dword_94F0D0[a3], v11, v11) )\n    v14 = (unsigned int)sub_44B230(3 - v10, 1, 2, a4 + v12, a4 + v13, v15, a5, a6, a7, a8, v16, v17, a9, a10, v19) != 0;\n  return (unsigned int)v14;\n}\n", 
            "funcStartAddr": "0x476340L", 
            "funcEndAddr": "0x4763e8L", 
            "funcName": "sub_476340"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4763F0(__int64 a1, signed int a2, int a3)\n{\n  void *v3; // rdi\n\n  v3 = &unk_927B28;\n  if ( a3 == 2 )\n    v3 = &unk_9333A0;\n  return (unsigned int)sub_41A570((__int64)v3, a2) == a3;\n}\n", 
            "funcStartAddr": "0x4763f0L", 
            "funcEndAddr": "0x476414L", 
            "funcName": "sub_4763F0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4764B0(int a1, int a2, int a3)\n{\n  signed int v3; // esi\n  void *v4; // rdi\n\n  v3 = dword_9507F0[a1] + a2;\n  v4 = &unk_927B28;\n  if ( a3 == 2 )\n    v4 = &unk_9333A0;\n  return (unsigned int)sub_41A430((__int64)v4, v3) == a3;\n}\n", 
            "funcStartAddr": "0x4764b0L", 
            "funcEndAddr": "0x4764deL", 
            "funcName": "sub_4764B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_476560(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r13\n  unsigned int v4; // er15\n  unsigned int v5; // er12\n  __int64 v6; // rbx\n  _BOOL8 v7; // r14\n  unsigned int v9; // [rsp+0h] [rbp-34h]\n\n  v3 = a2 + dword_94F9F0[a1];\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94FA30[a1];\n  v6 = a2 + dword_94FEB0[a1];\n  LODWORD(v7) = 0;\n  v9 = a3;\n  if ( (unsigned int)sub_44B980(a3, 1, 2, a2, (unsigned int)v3, (unsigned int)v3, v6) )\n  {\n    LODWORD(v7) = 1;\n    if ( !(unsigned int)sub_44B7B0(v9, 1, 2, a2, v4, (unsigned int)v6) )\n      v7 = (unsigned int)sub_44B980(v9, 1, 4, a2, v4, v5, v3, v3, v6) != 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x476560L", 
            "funcEndAddr": "0x47663aL", 
            "funcName": "sub_476560"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_476680(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // ebx\n  int v4; // er14\n  int v5; // ecx\n  _BOOL8 result; // rax\n  signed int v7; // er14\n  void *v8; // rdi\n\n  v3 = a3;\n  v4 = dword_94FE50[a1];\n  v5 = sub_44ADE0(a2, a3, a2 + dword_94F9D0[a1]);\n  result = 1LL;\n  if ( !v5 )\n  {\n    v7 = a2 + v4;\n    v8 = &unk_927B28;\n    if ( v3 == 2 )\n      v8 = &unk_9333A0;\n    result = (unsigned int)sub_41A430((__int64)v8, v7) == v3;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x476680L", 
            "funcEndAddr": "0x4766daL", 
            "funcName": "sub_476680"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4766E0(int a1, int a2, int a3)\n{\n  signed int v3; // esi\n  void *v4; // rdi\n\n  v3 = dword_94F570[a1] + a2;\n  v4 = &unk_927B28;\n  if ( a3 == 1 )\n    v4 = &unk_9333A0;\n  return (unsigned int)sub_41A430((__int64)v4, v3) == a3;\n}\n", 
            "funcStartAddr": "0x4766e0L", 
            "funcEndAddr": "0x47670eL", 
            "funcName": "sub_4766E0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_476740(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // ebx\n  signed int v5; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_94F9D0[a1];\n  v5 = sub_4083A0(a2 + dword_94FE90[a1]);\n  result = 0LL;\n  if ( v5 >= 2 )\n    result = (unsigned int)sub_44BB60(v3, 0, 1, a2, a2, a2 + v4) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x476740L", 
            "funcEndAddr": "0x476796L", 
            "funcName": "sub_476740"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_476830(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // rbp\n  __int64 v5; // r15\n  __int64 v6; // rbx\n  __int64 v7; // r13\n  _BOOL8 v8; // r12\n  int v10; // [rsp+8h] [rbp-40h]\n  int v11; // [rsp+10h] [rbp-38h]\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a2 + dword_94FA30[a1];\n  v6 = a2 + dword_94F590[a1];\n  v11 = dword_94FEB0[a1];\n  v10 = dword_94FE90[a1];\n  v7 = a2 + dword_94F570[a1];\n  LODWORD(v8) = 0;\n  if ( !(unsigned int)sub_44B980(a3, 1, 3, (unsigned int)v4, (unsigned int)v5, (unsigned int)v6, v4, v6) )\n    v8 = (unsigned int)sub_44B980(\n                         v3,\n                         1,\n                         6,\n                         (unsigned int)v4,\n                         (unsigned int)v5,\n                         (unsigned int)v6,\n                         (unsigned int)(v4 + v11),\n                         (unsigned int)(v4 + v10),\n                         v7,\n                         v5,\n                         v7) != 0;\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x476830L", 
            "funcEndAddr": "0x476905L", 
            "funcName": "sub_476830"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_476A80(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // rbp\n  int v5; // er15\n  int v6; // er12\n  signed int v7; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94F550[a1];\n  v5 = dword_94F9F0[a1];\n  v6 = dword_94F0D0[a1];\n  v7 = sub_4083A0(v4);\n  result = 1LL;\n  if ( v7 <= 2 )\n    result = (unsigned int)sub_44B980(v3, 1, 3, a2, a2 + v5, a2 + v6, a2, v4) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x476a80L", 
            "funcEndAddr": "0x476af9L", 
            "funcName": "sub_476A80"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_476B20(int a1, unsigned int a2, int a3)\n{\n  __int64 v3; // r8\n  int v4; // er14\n  _BOOL4 v5; // ebp\n  int v6; // eax\n\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = dword_94F9F0[a1];\n  v5 = 1;\n  if ( !(unsigned int)sub_44B7B0(3 - a3, 1, 2, a2, v3, (unsigned int)v3) )\n  {\n    LOBYTE(v6) = sub_46A080(a2 + v4);\n    v5 = v6 != 0;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x476b20L", 
            "funcEndAddr": "0x476b7cL", 
            "funcName": "sub_476B20"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_476BE0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er15\n  __int128 v6; // cx\n\n  v4 = a2;\n  v5 = dword_94FE90[a3];\n  v6 = a4;\n  if ( (unsigned int)sub_44B7B0(a2, 1, 1, a4, a4 + dword_94FEB0[a3], a1) )\n    DWORD2(v6) = (unsigned __int64)sub_44B7B0(v4, 1, 1, a4, a4 + v5) == 0;\n  return DWORD2(v6);\n}\n", 
            "funcStartAddr": "0x476be0L", 
            "funcEndAddr": "0x476c4eL", 
            "funcName": "sub_476BE0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_476D20(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // rbx\n  __int64 v5; // rbp\n  __int64 v6; // r12\n  _BOOL4 v7; // er13\n\n  v3 = a3;\n  v4 = a2 + dword_94F590[a1];\n  v5 = a2 + dword_94F570[a1];\n  v6 = a2 + dword_94FA30[a1];\n  v7 = 0;\n  if ( !(unsigned int)sub_44B980(a3, 0, 2, (unsigned int)v4, (unsigned int)v5, a2 + dword_94F0D0[a1], v4) )\n    v7 = (unsigned __int64)sub_44B980(v3, 0, 4, (unsigned int)v5, (unsigned int)v4, (unsigned int)v6, a2, v5, v6) == 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x476d20L", 
            "funcEndAddr": "0x476dceL", 
            "funcName": "sub_476D20"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_476DD0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // r15\n  __int64 v5; // rbx\n  __int64 v6; // r12\n  _BOOL8 v7; // r13\n  int v9; // [rsp+0h] [rbp-38h]\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94FA30[a1];\n  v9 = dword_94FEB0[a1];\n  v6 = a2 + dword_94FED0[a1];\n  LODWORD(v7) = 0;\n  if ( !(unsigned int)sub_44B980(a3, 0, 2, (unsigned int)v5, a2, (unsigned int)v4, v5) )\n    v7 = (unsigned int)sub_44B980(v3, 0, 4, a2, (unsigned int)v5, (unsigned int)v6, a2 + v9, v4, v6) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x476dd0L", 
            "funcEndAddr": "0x476e88L", 
            "funcName": "sub_476DD0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_476E90(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // ebp\n  int v5; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_94F550[a1];\n  v5 = sub_4083A0(a2 + dword_94F0D0[a1]);\n  result = 0LL;\n  if ( v5 == 2 )\n    result = (unsigned int)sub_44B980(v3, 1, 1, a2, a2 + v4, a2) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x476e90L", 
            "funcEndAddr": "0x476ee6L", 
            "funcName": "sub_476E90"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_476EF0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // er15\n  unsigned int v5; // ebx\n  _BOOL8 v6; // r12\n  __int64 v8; // [rsp+0h] [rbp-38h]\n  _QWORD v9[7]; // [rsp+0h] [rbp-38h]\n\n  v3 = a3;\n  v4 = a2 + dword_94F0D0[a1];\n  v5 = a2 + dword_94F570[a1];\n  LODWORD(v8) = a2 + dword_94F590[a1];\n  LODWORD(v6) = 0;\n  if ( !(unsigned int)sub_44B980(a3, 0, 2, a2 + dword_94F590[a1], v5, v4, v8) )\n  {\n    LODWORD(v9[0]) = a2;\n    v6 = (unsigned int)sub_44B980(v3, 0, 2, a2, v5, v4, v9[0]) != 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x476ef0L", 
            "funcEndAddr": "0x476f7dL", 
            "funcName": "sub_476EF0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_476F80(int a1, unsigned int a2, unsigned int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, double a8, double a9, __m128 a10, __m128 a11)\n{\n  unsigned int v11; // er15\n  unsigned int v12; // er12\n  unsigned int v13; // er13\n  unsigned int v14; // ebx\n  int v15; // eax\n  __m128 v16; // xmm4\n  __m128 v17; // xmm5\n  _BOOL4 v18; // er14\n  __m128 v19; // xmm4\n  __m128 v20; // xmm5\n  char v22; // [rsp+0h] [rbp-48h]\n  char v23; // [rsp+0h] [rbp-48h]\n  unsigned int v24; // [rsp+8h] [rbp-40h]\n  int v25; // [rsp+Ch] [rbp-3Ch]\n  int v26; // [rsp+10h] [rbp-38h]\n  int v27; // [rsp+14h] [rbp-34h]\n\n  v24 = a3;\n  v11 = a2 + dword_94EC10[a1];\n  v27 = dword_94E750[a1];\n  v25 = dword_94EBF0[a1];\n  v26 = dword_94E770[a1];\n  v12 = a2 + dword_94F090[a1];\n  v13 = a2 + dword_94F530[a1];\n  v14 = a2 + dword_94F9D0[a1];\n  LOBYTE(v15) = sub_46A080(v11);\n  v18 = 0;\n  if ( !v15 )\n  {\n    v18 = 0;\n    if ( (unsigned int)sub_44B230(v24, 1, 3, a2 + v27, a2 + v25, a2 + v26, a4, a5, a6, a7, v16, v17, a10, a11, v22) )\n    {\n      v18 = 0;\n      if ( (unsigned int)sub_44B230(3 - v24, 1, 3, v12, v13, v14, a4, a5, a6, a7, v19, v20, a10, a11, v23) )\n        v18 = (unsigned __int64)sub_44BB60(v24, 0, 1, a2, a2, v11) == 0;\n    }\n  }\n  return (unsigned int)v18;\n}\n", 
            "funcStartAddr": "0x476f80L", 
            "funcEndAddr": "0x477089L", 
            "funcName": "sub_476F80"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_477090(int a1, unsigned int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er14\n  _BOOL8 result; // rax\n  unsigned int v6; // ebp\n  int v7; // eax\n  int v8; // ecx\n\n  v4 = a3;\n  if ( a4 )\n  {\n    sub_469A60(a2, a2 + dword_94F0D0[a1]);\n    result = 0LL;\n  }\n  else\n  {\n    v6 = a2 + dword_94EC30[a1];\n    LOBYTE(v7) = sub_46A080(a2 + dword_94EC10[a1]);\n    v8 = v7;\n    result = 0LL;\n    if ( !v8 )\n      result = (unsigned int)sub_44B7B0(v4, 1, 2, a2, v6, v6) != 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x477090L", 
            "funcEndAddr": "0x4770fdL", 
            "funcName": "sub_477090"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_477100(int a1, unsigned int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebp\n  unsigned int v7; // ebx\n\n  v4 = a3;\n  v5 = a2 + dword_950C90[a1];\n  if ( a4 )\n  {\n    sub_4217E0(v5);\n    return 0LL;\n  }\n  v7 = a2 + dword_94FEB0[a1];\n  if ( !(unsigned int)sub_44AE70(a2, v7) )\n    return 0LL;\n  return (unsigned int)sub_44B7B0(v4, 0, 1, v5, v7) != 0;\n}\n", 
            "funcStartAddr": "0x477100L", 
            "funcEndAddr": "0x47715fL", 
            "funcName": "sub_477100"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_477160(int a1, unsigned int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebp\n  unsigned int v7; // ebx\n\n  v4 = a3;\n  v5 = a2 + dword_950C70[a1];\n  if ( a4 )\n  {\n    sub_4217E0(v5);\n    return 0LL;\n  }\n  v7 = a2 + dword_94FE90[a1];\n  if ( !(unsigned int)sub_44AE70(a2, v7) )\n    return 0LL;\n  return (unsigned int)sub_44B7B0(v4, 0, 1, v5, v7) != 0;\n}\n", 
            "funcStartAddr": "0x477160L", 
            "funcEndAddr": "0x4771bfL", 
            "funcName": "sub_477160"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_477200(int a1, int a2, int a3)\n{\n  signed int v3; // esi\n  void *v4; // rdi\n\n  v3 = dword_94FEB0[a1] + a2;\n  v4 = &unk_927B28;\n  if ( a3 == 2 )\n    v4 = &unk_9333A0;\n  return (unsigned int)sub_41A430((__int64)v4, v3) != a3;\n}\n", 
            "funcStartAddr": "0x477200L", 
            "funcEndAddr": "0x47722eL", 
            "funcName": "sub_477200"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_477320(int a1, int a2, int a3)\n{\n  signed int v3; // esi\n  void *v4; // rdi\n\n  v3 = dword_950330[a1] + a2;\n  v4 = &unk_927B28;\n  if ( a3 == 2 )\n    v4 = &unk_9333A0;\n  return (unsigned int)sub_41A430((__int64)v4, v3) == 3 - a3;\n}\n", 
            "funcStartAddr": "0x477320L", 
            "funcEndAddr": "0x477353L", 
            "funcName": "sub_477320"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_477470(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // rbx\n  _BOOL4 v4; // ebp\n  __int64 v5; // rbp\n  int v6; // er15\n  __int64 v7; // r12\n  __int64 v8; // r14\n  signed int v9; // esi\n  void *v10; // rdi\n  __int64 v11; // r13\n  unsigned int v12; // er12\n  __int64 v13; // r15\n  unsigned int v15; // [rsp+0h] [rbp-34h]\n\n  v3 = a2;\n  v4 = 0;\n  if ( dword_954FF0[19 * (dword_94FE90[a1] + (signed __int64)(signed int)a2)] == 1 )\n  {\n    v5 = a2 + dword_94F570[a1];\n    v6 = a2 + dword_94FEB0[a1];\n    v7 = a2 + dword_94F550[a1];\n    v8 = a2 + dword_94F9D0[a1];\n    v9 = a2 + dword_94F0B0[a1];\n    v15 = a3;\n    v10 = &unk_927B28;\n    if ( a3 == 2 )\n      v10 = &unk_9333A0;\n    v11 = v7;\n    v12 = v6;\n    v13 = v5;\n    v4 = 0;\n    if ( (unsigned int)sub_41A430((__int64)v10, v9) == 3 - a3 )\n    {\n      v4 = 0;\n      if ( !(unsigned int)sub_44B980(v15, 0, 5, (unsigned int)v3, (unsigned int)v13, v12, 0LL, v11, v13, v8)\n        || (unsigned int)sub_44B7B0(v15, 0, 5, (unsigned int)v3, (unsigned int)v13, v12, 0LL, v11, v13) != 5 )\n      {\n        v4 = (unsigned __int64)sub_44B7B0(v15, 1, 4, (unsigned int)v3, (unsigned int)v13, v12, v11, v3) == 0;\n      }\n    }\n  }\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x477470L", 
            "funcEndAddr": "0x4775b4L", 
            "funcName": "sub_477470"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_477620(int a1, unsigned int a2, int a3)\n{\n  unsigned int v3; // ebx\n  __int64 v4; // r14\n  _BOOL4 v5; // ebp\n  __int64 v6; // r12\n  __int64 v7; // r13\n  signed int v8; // esi\n  void *v9; // rdi\n  __int64 v10; // r12\n  int v11; // eax\n  __int64 v13; // [rsp+0h] [rbp-38h]\n\n  v3 = a2;\n  v4 = (signed int)a2;\n  v5 = 0;\n  if ( dword_954FF0[19 * ((signed int)a2 + (signed __int64)dword_94F9F0[a1])] )\n  {\n    LODWORD(v13) = a2 + dword_94F0B0[a1];\n    v6 = dword_94F0D0[a1];\n    v7 = a2 + dword_94F530[a1];\n    v8 = a2 + dword_94EC10[a1];\n    HIDWORD(v13) = a3;\n    v9 = &unk_927B28;\n    if ( a3 == 2 )\n      v9 = &unk_9333A0;\n    v5 = 0;\n    if ( (unsigned int)sub_41A430((__int64)v9, v8) == 3 - a3 )\n    {\n      v10 = v4 + v6;\n      v5 = 0;\n      if ( !(unsigned int)sub_44B980(HIDWORD(v13), 0, 3, v3, 0LL, (unsigned int)v13, v10, v7) )\n      {\n        v5 = 0;\n        if ( !(unsigned int)sub_44B7B0(HIDWORD(v13), 1, 2, v3, (unsigned int)v13, v3, v13) )\n        {\n          if ( dword_98A7F4 )\n            v11 = sub_43B050(v10, 0LL);\n          else\n            v11 = dword_8E94D4[95 * v10];\n          v5 = v11 == 0;\n        }\n      }\n    }\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x477620L", 
            "funcEndAddr": "0x47773fL", 
            "funcName": "sub_477620"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_477740@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // er13\n  signed __int64 v6; // rbx\n  _BOOL4 v7; // er15\n  unsigned int v8; // er12\n  signed int v9; // esi\n  void *v10; // rdi\n  __int64 v12; // [rsp-8h] [rbp-38h]\n\n  v12 = a1;\n  v4 = a2;\n  v5 = a4;\n  v6 = dword_950350[a3] + (signed __int64)(signed int)a4;\n  v7 = 0;\n  if ( dword_954FF0[19 * v6] )\n  {\n    v8 = a4 + dword_94FA30[a3];\n    v9 = a4 + dword_94F570[a3];\n    v10 = &unk_927B28;\n    if ( a2 == 2 )\n      v10 = &unk_9333A0;\n    if ( (unsigned int)sub_41A430((__int64)v10, v9) == 3 - a2 )\n    {\n      v7 = 0;\n      if ( !(unsigned int)sub_44B7B0(v4, 0, 1, v5, v8, v12) )\n        v7 = (unsigned __int64)sub_44B980(v4, 1, 1, v5, v5, (unsigned int)v6) == 0;\n    }\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x477740L", 
            "funcEndAddr": "0x477802L", 
            "funcName": "sub_477740"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_477810(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // rbx\n  __int64 v4; // r12\n  unsigned int v5; // er15\n  signed int v6; // esi\n  int v7; // er14\n  void *v8; // rdi\n  _BOOL4 v9; // ebp\n  unsigned int v11; // [rsp+Ch] [rbp-3Ch]\n  __int64 v12; // [rsp+10h] [rbp-38h]\n\n  v3 = a2;\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94FEB0[a1];\n  v12 = a2 + dword_94F550[a1];\n  v6 = a2 + dword_94F0B0[a1];\n  v7 = dword_94F9F0[a1];\n  v11 = a3;\n  v8 = &unk_927B28;\n  if ( a3 == 2 )\n    v8 = &unk_9333A0;\n  v9 = 0;\n  if ( (unsigned int)sub_41A430((__int64)v8, v6) == 3 - a3 )\n  {\n    v9 = 0;\n    if ( !(unsigned int)sub_44B980(\n                          v11,\n                          0,\n                          5,\n                          (unsigned int)v3,\n                          (unsigned int)v4,\n                          v5,\n                          0LL,\n                          v12,\n                          v4,\n                          (unsigned int)(v3 + v7)) )\n      v9 = (unsigned __int64)sub_44B7B0(v11, 1, 4, (unsigned int)v3, (unsigned int)v4, v5, v12, v3) == 0;\n  }\n  return (unsigned int)v9;\n}\n", 
            "funcStartAddr": "0x477810L", 
            "funcEndAddr": "0x4778fcL", 
            "funcName": "sub_477810"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_477920(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // er15\n  int v5; // er12\n  __int64 v6; // rbx\n  int v7; // eax\n  int v8; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_94FEB0[a1];\n  v5 = dword_94F570[a1];\n  v6 = a2 + dword_94FE90[a1];\n  LOBYTE(v7) = sub_46A080(a2 + dword_94F9F0[a1]);\n  v8 = v7;\n  result = 0LL;\n  if ( !v8 )\n    result = (unsigned int)sub_44B7B0(v3, 1, 5, a2, a2 + v4, a2 + v5, 0LL, v6, v6) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x477920L", 
            "funcEndAddr": "0x4779a2L", 
            "funcName": "sub_477920"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4779F0(int a1, int a2)\n{\n  signed int v2; // ebx\n\n  v2 = dword_94FEB0[a1] + a2;\n  sub_4217E0(a2 + dword_94F570[a1]);\n  sub_4217E0(v2);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x4779f0L", 
            "funcEndAddr": "0x477a16L", 
            "funcName": "sub_4779F0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_477A20(int a1, int a2, int a3)\n{\n  unsigned int v3; // ebx\n  int v4; // er14\n  int v5; // er15\n  unsigned int v6; // ebp\n  int v7; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = dword_94FA30[a1];\n  v5 = dword_950350[a1];\n  v6 = 3 - a3;\n  v7 = sub_44AE30(a2 + dword_94FEB0[a1], 3 - a3);\n  result = 1LL;\n  if ( !v7 )\n    result = (unsigned int)sub_44B7B0(v6, 1, 2, v3, (unsigned int)(a2 + v4), (unsigned int)(a2 + v5)) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x477a20L", 
            "funcEndAddr": "0x477a96L", 
            "funcName": "sub_477A20"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_477AA0(__int64 a1, signed int a2, int a3)\n{\n  void *v3; // rdi\n\n  v3 = &unk_927B28;\n  if ( a3 == 2 )\n    v3 = &unk_9333A0;\n  return (unsigned int)sub_41A430((__int64)v3, a2) != a3;\n}\n", 
            "funcStartAddr": "0x477aa0L", 
            "funcEndAddr": "0x477ac4L", 
            "funcName": "sub_477AA0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_477AD0(__int64 a1, signed int a2, int a3)\n{\n  void *v3; // rdi\n\n  v3 = &unk_927B28;\n  if ( a3 == 2 )\n    v3 = &unk_9333A0;\n  return (unsigned int)sub_41A430((__int64)v3, a2) != a3;\n}\n", 
            "funcStartAddr": "0x477ad0L", 
            "funcEndAddr": "0x477af4L", 
            "funcName": "sub_477AD0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_477B00(__int64 a1, signed int a2, int a3)\n{\n  void *v3; // rdi\n\n  v3 = &unk_927B28;\n  if ( a3 == 2 )\n    v3 = &unk_9333A0;\n  return (unsigned int)sub_41A430((__int64)v3, a2) != a3;\n}\n", 
            "funcStartAddr": "0x477b00L", 
            "funcEndAddr": "0x477b24L", 
            "funcName": "sub_477B00"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_477B30(__int64 a1, signed int a2, int a3)\n{\n  void *v3; // rdi\n\n  v3 = &unk_927B28;\n  if ( a3 == 2 )\n    v3 = &unk_9333A0;\n  return (unsigned int)sub_41A430((__int64)v3, a2) != a3;\n}\n", 
            "funcStartAddr": "0x477b30L", 
            "funcEndAddr": "0x477b54L", 
            "funcName": "sub_477B30"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_477B60(__int64 a1, signed int a2, int a3)\n{\n  void *v3; // rdi\n\n  v3 = &unk_927B28;\n  if ( a3 == 2 )\n    v3 = &unk_9333A0;\n  return (unsigned int)sub_41A430((__int64)v3, a2) != a3;\n}\n", 
            "funcStartAddr": "0x477b60L", 
            "funcEndAddr": "0x477b84L", 
            "funcName": "sub_477B60"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_477B90(int a1, unsigned int a2, int a3)\n{\n  int v3; // er14\n  int v4; // er15\n  int v5; // ebp\n  signed int v6; // er15\n  void *v7; // rdi\n\n  v3 = a3;\n  v4 = dword_94F5B0[a1];\n  v5 = 3 - a3;\n  if ( !(unsigned int)sub_43F100(a2, 3 - a3) )\n    return 0LL;\n  v6 = a2 + v4;\n  v7 = &unk_927B28;\n  if ( v5 == 1 )\n    v7 = &unk_9333A0;\n  return (unsigned int)sub_41A340((__int64)v7, v6) == v3;\n}\n", 
            "funcStartAddr": "0x477b90L", 
            "funcEndAddr": "0x477bf1L", 
            "funcName": "sub_477B90"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_477D70(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // rbx\n  __int64 v4; // r15\n  int v5; // er12\n  _BOOL8 v6; // r13\n  unsigned int v8; // [rsp+0h] [rbp-34h]\n\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = a2 + dword_94FE90[a1];\n  v5 = dword_94FED0[a1];\n  LODWORD(v6) = 1;\n  v8 = a3;\n  if ( !(unsigned int)sub_44B7B0(a3, 1, 4, a2, (unsigned int)v3, (unsigned int)v4, a2 + dword_950350[a1], v3) )\n    v6 = (unsigned int)sub_44B7B0(v8, 1, 4, a2, (unsigned int)v3, a2 + v5, v4, v3) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x477d70L", 
            "funcEndAddr": "0x477e23L", 
            "funcName": "sub_477D70"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_477ED0(int a1, int a2)\n{\n  __int64 v2; // rbx\n  signed int v3; // ecx\n  signed __int64 result; // rax\n  __int64 v5; // rbx\n  __int64 v6; // rax\n  int v7; // ecx\n\n  v2 = dword_94FA30[a1];\n  v3 = sub_4083A0(a2 + dword_94FED0[a1]);\n  result = 0LL;\n  if ( v3 >= 2 )\n  {\n    v5 = a2 + v2;\n    if ( dword_98A7F4 )\n    {\n      v6 = sub_43B050(v5, 0LL);\n      if ( (_DWORD)v6 )\n      {\n        if ( dword_98A7F4 )\n        {\n          v7 = sub_43B6F0(v6, v5, 0LL);\n          return v7 != 0;\n        }\nLABEL_7:\n        v7 = dword_8E9524[95 * (signed int)v5];\n        return v7 != 0;\n      }\n    }\n    else if ( dword_8E94D4[95 * v5] )\n    {\n      goto LABEL_7;\n    }\n    result = 1LL;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x477ed0L", 
            "funcEndAddr": "0x477f5eL", 
            "funcName": "sub_477ED0"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_477F60(int a1, int a2)\n{\n  int v2; // ebp\n  signed int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94FED0[a1];\n  v3 = sub_4083A0(a2 + dword_94FE90[a1]);\n  result = 0;\n  if ( v3 >= 2 )\n    result = (signed int)sub_4083A0(a2 + v2) > 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x477f60L", 
            "funcEndAddr": "0x477fa0L", 
            "funcName": "sub_477F60"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_478020(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  signed __int64 v4; // rbx\n\n  v3 = a3;\n  v4 = dword_94FA30[a1] + (signed __int64)(signed int)a2;\n  if ( dword_98A7F4 )\n  {\n    if ( (unsigned int)sub_43B050(v4, 0LL) )\n      return (unsigned int)sub_44B7B0(v3, 0, 1, a2, (unsigned int)v4) == 0;\n  }\n  else if ( dword_8E94D4[95 * v4] )\n  {\n    return (unsigned int)sub_44B7B0(v3, 0, 1, a2, (unsigned int)v4) == 0;\n  }\n  return 1LL;\n}\n", 
            "funcStartAddr": "0x478020L", 
            "funcEndAddr": "0x47808eL", 
            "funcName": "sub_478020"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_478090(int a1, signed int a2, unsigned int a3)\n{\n  __int64 v3; // r8\n  signed __int64 v4; // rbx\n  __int64 v5; // rbp\n  _QWORD v7[5]; // [rsp+0h] [rbp-28h]\n\n  v3 = (unsigned int)(a2 + dword_94F570[a1]);\n  v4 = a2 + (signed __int64)dword_94FA30[a1];\n  LODWORD(v7[0]) = a2 + dword_94FA30[a1];\n  LODWORD(v5) = 0;\n  if ( (unsigned int)sub_44B980(a3, 1, 2, a2, v3, (unsigned int)v3, v7[0]) )\n  {\n    if ( dword_98A7F4 )\n    {\n      if ( (unsigned int)sub_43B050(v4, 0LL) )\nLABEL_4:\n        return (unsigned int)sub_44AE70(a2, v4) != 0;\n    }\n    else if ( dword_8E94D4[95 * v4] )\n    {\n      goto LABEL_4;\n    }\n    LODWORD(v5) = 1;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x478090L", 
            "funcEndAddr": "0x478124L", 
            "funcName": "sub_478090"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_4781C0(int a1, int a2)\n{\n  int v2; // ebp\n  signed int v3; // ecx\n  bool result; // al\n\n  v2 = dword_950350[a1];\n  v3 = sub_4083A0(a2 + dword_94F550[a1]);\n  result = 0;\n  if ( v3 >= 2 )\n    result = (signed int)sub_4083A0(a2 + v2) > 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x4781c0L", 
            "funcEndAddr": "0x478200L", 
            "funcName": "sub_4781C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_478220(int a1, int a2, int a3)\n{\n  int v3; // ebx\n  signed int v4; // esi\n  int v5; // er12\n  int v6; // er13\n  int v7; // er15\n  int v8; // er14\n  void *v9; // rbp\n  int v10; // eax\n  _BOOL8 v11; // rcx\n  signed int v12; // eax\n\n  v3 = a2;\n  v4 = a2 + dword_94F550[a1];\n  v5 = dword_94F9F0[a1];\n  v6 = v3 + dword_94F590[a1];\n  v7 = v3 + dword_94FA30[a1];\n  v8 = 3 - a3;\n  v9 = &unk_927B28;\n  if ( a3 == 2 )\n    v9 = &unk_9333A0;\n  v10 = sub_41A570((__int64)v9, v4);\n  LODWORD(v11) = 0;\n  if ( v10 != v8 )\n  {\n    if ( (unsigned int)sub_41A570((__int64)v9, v3 + v5) == v8 )\n    {\n      LODWORD(v11) = 0;\n    }\n    else\n    {\n      v12 = sub_4083A0(v6);\n      LODWORD(v11) = 0;\n      if ( v12 >= 3 )\n        v11 = (signed int)sub_4083A0(v7) < 3;\n    }\n  }\n  return (unsigned int)v11;\n}\n", 
            "funcStartAddr": "0x478220L", 
            "funcEndAddr": "0x4782cbL", 
            "funcName": "sub_478220"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_478310(int a1, unsigned int a2, unsigned int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, double a8, double a9, __m128 a10, __m128 a11)\n{\n  unsigned int v11; // er15\n  unsigned int v12; // er13\n  unsigned int v13; // ebx\n  unsigned int v14; // er12\n  _BOOL4 v15; // er14\n  __int64 v17; // r9\n  __m128 v18; // xmm4\n  __m128 v19; // xmm5\n  __int64 v20; // [rsp+0h] [rbp-48h]\n  char v21[16]; // [rsp+0h] [rbp-48h]\n  unsigned int v22; // [rsp+10h] [rbp-38h]\n  unsigned int v23; // [rsp+14h] [rbp-34h]\n\n  v22 = a3;\n  v11 = a2 + dword_94F0F0[a1];\n  v12 = a2 + dword_94F570[a1];\n  v13 = a2 + dword_94FA30[a1];\n  v23 = a2 + dword_94FED0[a1];\n  v14 = a2 + dword_94FEB0[a1];\n  v15 = 0;\n  if ( (signed int)sub_4083A0(a2 + dword_94EC30[a1]) >= 2 )\n  {\n    v15 = 0;\n    if ( !(unsigned int)sub_44B7B0(v22, 1, 1, a2, v11) )\n    {\n      LODWORD(v20) = v11;\n      v15 = 0;\n      if ( (unsigned int)sub_44B980(v22, 0, 2, a2, v13, a2, v20) )\n      {\n        v15 = 1;\n        if ( !(unsigned int)sub_44B7B0(v22, 1, 2, a2, v13, v12) )\n          v15 = (unsigned __int64)sub_44B230(3 - v22, 1, 2, v23, v14, v17, a4, a5, a6, a7, v18, v19, a10, a11, v21[0]) == 0;\n      }\n    }\n  }\n  return (unsigned int)v15;\n}\n", 
            "funcStartAddr": "0x478310L", 
            "funcEndAddr": "0x478425L", 
            "funcName": "sub_478310"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_478430@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  signed __int64 v5; // rbx\n  _BOOL8 v6; // rbp\n  __int64 v8; // [rsp-8h] [rbp-28h]\n\n  v8 = a1;\n  v4 = a2;\n  v5 = dword_94FA30[a3] + (signed __int64)(signed int)a4;\n  if ( !dword_98A7F4 )\n  {\n    LODWORD(v6) = 0;\n    if ( dword_8E94D4[95 * v5] )\n      return (unsigned int)v6;\n    goto LABEL_3;\n  }\n  LODWORD(v6) = 0;\n  if ( !(unsigned int)sub_43B050(v5, 0LL) )\nLABEL_3:\n    v6 = (unsigned int)sub_44B7B0(v4, 1, 1, a4, (unsigned int)v5, v8) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x478430L", 
            "funcEndAddr": "0x4784a9L", 
            "funcName": "sub_478430"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4784F0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // er12\n  unsigned int v5; // ebx\n  signed int v6; // esi\n  int v7; // er15\n  int v8; // ebp\n  void *v9; // rdi\n  int v10; // ecx\n  _BOOL8 result; // rax\n  _QWORD v12[7]; // [rsp+0h] [rbp-38h]\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a2 + dword_94F9F0[a1];\n  v6 = a2 + dword_94F570[a1];\n  v7 = dword_94FEB0[a1];\n  v8 = 3 - a3;\n  v9 = &unk_927B28;\n  if ( a3 == 2 )\n    v9 = &unk_9333A0;\n  v10 = sub_41A340((__int64)v9, v6);\n  result = 0LL;\n  if ( v10 == v8 )\n  {\n    LODWORD(v12[0]) = v4 + v7;\n    result = (unsigned int)sub_44B980(v3, 1, 2, v4, v5, v5, v12[0]) != 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4784f0L", 
            "funcEndAddr": "0x478581L", 
            "funcName": "sub_4784F0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_478590(int a1, int a2, int a3)\n{\n  int v3; // er14\n  signed int v4; // esi\n  int v5; // er15\n  int v6; // ebp\n  void *v7; // rbx\n  int v8; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a2;\n  v4 = a2 + dword_94F0B0[a1];\n  v5 = dword_94F550[a1];\n  v6 = 3 - a3;\n  v7 = &unk_927B28;\n  if ( a3 == 2 )\n    v7 = &unk_9333A0;\n  v8 = sub_41A570((__int64)v7, v4);\n  result = 1LL;\n  if ( v8 != v6 )\n    result = (unsigned int)sub_41A570((__int64)v7, v3 + v5) == v6;\n  return result;\n}\n", 
            "funcStartAddr": "0x478590L", 
            "funcEndAddr": "0x4785fcL", 
            "funcName": "sub_478590"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_478600@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  __int64 v5; // r8\n  unsigned int v6; // er15\n  __int64 v7; // r12\n  __int64 v8; // r13\n  _BOOL4 v9; // ebx\n\n  v4 = a2;\n  v6 = a4 + dword_94FEB0[a3];\n  v7 = a4 + dword_950350[a3];\n  v8 = a4 + dword_950370[a3];\n  if ( dword_954FF0[19 * ((signed int)a4 + (signed __int64)dword_94FE70[a3])] == 1\n    || (v9 = 0, dword_954FF0[19 * ((signed int)a4 + (signed __int64)dword_94F9F0[a3])] == 1) )\n  {\n    v9 = 0;\n    v5 = a4 + dword_94F9D0[a3];\n    if ( (unsigned int)sub_44B7B0(a2, 1, 2, a4, v5, (unsigned int)v5, a1) )\n      v9 = (unsigned __int64)sub_44B7B0(v4, 1, 5, a4, 0LL, v6, v7, v8, v8) == 0;\n  }\n  return (unsigned int)v9;\n}\n", 
            "funcStartAddr": "0x478600L", 
            "funcEndAddr": "0x4786dbL", 
            "funcName": "sub_478600"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4786E0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // ebp\n  int v4; // er15\n  int v5; // er13\n  int v6; // er12\n  int v7; // ebx\n  signed int v8; // esi\n  int v9; // er14\n  void *v10; // rdi\n  int v11; // ecx\n  _BOOL8 result; // rax\n  unsigned int v13; // [rsp+0h] [rbp-34h]\n\n  v3 = a2;\n  v4 = dword_94F590[a1];\n  v5 = dword_94F570[a1];\n  v6 = dword_94F0D0[a1];\n  v7 = dword_94F0F0[a1];\n  v8 = a2 + dword_94F090[a1];\n  v13 = a3;\n  v9 = 3 - a3;\n  v10 = &unk_927B28;\n  if ( a3 == 2 )\n    v10 = &unk_9333A0;\n  v11 = sub_41A430((__int64)v10, v8);\n  result = 0LL;\n  if ( v11 != v9 )\n    result = (unsigned int)sub_44B7B0(v13, 0, 4, v3, v3 + v4, v3 + v5, v3 + v6, v3 + v7) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x4786e0L", 
            "funcEndAddr": "0x47878fL", 
            "funcName": "sub_4786E0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_478790(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebp\n  int v5; // er15\n  int v6; // er12\n  __int64 v7; // r13\n  signed int v8; // esi\n  int v9; // ebx\n  void *v10; // rdi\n  int v11; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2;\n  v5 = dword_94F590[a1];\n  v6 = dword_94F570[a1];\n  v7 = a2 + dword_94F0D0[a1];\n  v8 = a2 + dword_94F090[a1];\n  v9 = 3 - a3;\n  v10 = &unk_927B28;\n  if ( a3 == 2 )\n    v10 = &unk_9333A0;\n  v11 = sub_41A430((__int64)v10, v8);\n  result = 0LL;\n  if ( v11 != v9 )\n    result = (unsigned int)sub_44B7B0(v3, 1, 4, v4, v4 + v5, v4 + v6, v7, v7) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x478790L", 
            "funcEndAddr": "0x478832L", 
            "funcName": "sub_478790"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_478840(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // er12\n  int v5; // er15\n  int v6; // er13\n  _BOOL4 v7; // ebp\n\n  v3 = a3;\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = dword_94FE90[a1];\n  v6 = dword_94F9F0[a1];\n  v7 = 1;\n  if ( (unsigned int)sub_44B7B0(a3, 1, 3, a2, v4, a2 + dword_94FED0[a1]) )\n    v7 = (unsigned __int64)sub_44B7B0(v3, 1, 4, a2, v4, a2 + v5, a2 + v6, a2) == 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x478840L", 
            "funcEndAddr": "0x4788eaL", 
            "funcName": "sub_478840"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4788F0(int a1, signed int a2)\n{\n  signed __int64 v2; // rbx\n\n  v2 = dword_94FED0[a1] + (signed __int64)a2;\n  if ( dword_98A7F4 )\n  {\n    if ( (unsigned int)sub_43B050(v2, 0LL) )\n      return (unsigned int)sub_44AE70(a2, v2) != 0;\n  }\n  else if ( dword_8E94D4[95 * v2] )\n  {\n    return (unsigned int)sub_44AE70(a2, v2) != 0;\n  }\n  return 1LL;\n}\n", 
            "funcStartAddr": "0x4788f0L", 
            "funcEndAddr": "0x47894cL", 
            "funcName": "sub_4788F0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_478950(int a1, int a2, int a3)\n{\n  int v3; // er14\n  signed int v4; // esi\n  int v5; // er15\n  int v6; // ebp\n  void *v7; // rbx\n  int v8; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a2;\n  v4 = a2 + dword_94F0D0[a1];\n  v5 = dword_94F570[a1];\n  v6 = 3 - a3;\n  v7 = &unk_927B28;\n  if ( a3 == 2 )\n    v7 = &unk_9333A0;\n  v8 = sub_41A570((__int64)v7, v4);\n  result = 0LL;\n  if ( v8 != v6 )\n    result = (unsigned int)sub_41A570((__int64)v7, v3 + v5) != v6;\n  return result;\n}\n", 
            "funcStartAddr": "0x478950L", 
            "funcEndAddr": "0x4789b9L", 
            "funcName": "sub_478950"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4789C0(int a1, signed int a2, int a3)\n{\n  signed int v3; // er14\n  signed int v4; // esi\n  int v5; // ebp\n  void *v6; // rbx\n  int v7; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a2;\n  v4 = a2 + dword_94F570[a1];\n  v5 = 3 - a3;\n  v6 = &unk_927B28;\n  if ( a3 == 2 )\n    v6 = &unk_9333A0;\n  v7 = sub_41A570((__int64)v6, v4);\n  result = 1LL;\n  if ( v7 != v5 )\n    result = (unsigned int)sub_41A570((__int64)v6, v3) == v5;\n  return result;\n}\n", 
            "funcStartAddr": "0x4789c0L", 
            "funcEndAddr": "0x478a18L", 
            "funcName": "sub_4789C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_478A50(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebp\n  __int64 v5; // r12\n  __int64 v6; // r15\n  __int64 v7; // r13\n  signed int v8; // esi\n  void *v9; // rdi\n  _BOOL8 v10; // rbx\n  int v12; // [rsp+0h] [rbp-38h]\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a2 + dword_94F570[a1];\n  v6 = a2 + dword_94F550[a1];\n  v12 = dword_94F9F0[a1];\n  v7 = a2 + dword_94F0D0[a1];\n  v8 = a2 + dword_94F0F0[a1];\n  v9 = &unk_927B28;\n  if ( a3 == 2 )\n    v9 = &unk_9333A0;\n  LODWORD(v10) = 1;\n  if ( (unsigned int)sub_41A430((__int64)v9, v8) != a3 )\n  {\n    LODWORD(v10) = 0;\n    if ( (unsigned int)sub_44B7B0(v3, 1, 4, v4, (unsigned int)v5, (unsigned int)v6, v4 + v12, v5) )\n      v10 = (unsigned int)sub_44B980(v3, 1, 4, v4, (unsigned int)v6, (unsigned int)v5, v7, v6, v7) != 0;\n  }\n  return (unsigned int)v10;\n}\n", 
            "funcStartAddr": "0x478a50L", 
            "funcEndAddr": "0x478b32L", 
            "funcName": "sub_478A50"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_478BF0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  signed __int64 v5; // rbx\n  _BOOL4 v6; // ebp\n\n  v4 = a2;\n  v5 = (signed int)a4 + (signed __int64)dword_94FED0[a3];\n  if ( dword_954FF0[19 * ((signed int)a4 + (signed __int64)dword_94FE90[a3])] == 1\n    || (v6 = 0, dword_954FF0[19 * v5] == 1) )\n  {\n    v6 = 0;\n    if ( !(unsigned int)sub_44B7B0(a2, 1, 1, a4, a1) )\n      v6 = (unsigned __int64)sub_44B7B0(v4, 1, 1, a4, (unsigned int)v5) == 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x478bf0L", 
            "funcEndAddr": "0x478c81L", 
            "funcName": "sub_478BF0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_478CB0(int a1, int a2, int a3)\n{\n  int v3; // ebx\n  int v4; // er14\n  signed int v5; // esi\n  int v6; // er15\n  void *v7; // rbp\n  int v8; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a2 + dword_94EBD0[a1];\n  v6 = dword_94EC50[a1];\n  v7 = &unk_927B28;\n  if ( a3 == 2 )\n    v7 = &unk_9333A0;\n  v8 = sub_41A430((__int64)v7, v5);\n  result = 0LL;\n  if ( v8 == v3 )\n    result = (unsigned int)sub_41A430((__int64)v7, v4 + v6) == v3;\n  return result;\n}\n", 
            "funcStartAddr": "0x478cb0L", 
            "funcEndAddr": "0x478d14L", 
            "funcName": "sub_478CB0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_478D20(int a1, int a2)\n{\n  signed __int64 v2; // rbx\n  __int64 v3; // r14\n  _BOOL4 v4; // er15\n  __int64 v5; // r14\n  signed int v6; // eax\n\n  v2 = a2 + (signed __int64)dword_94EC10[a1];\n  v3 = dword_94FEF0[a1];\n  if ( dword_98A7F4 )\n  {\n    v4 = 0;\n    if ( (unsigned int)sub_43B050(v2, 0LL) )\n      return (unsigned int)v4;\n  }\n  else\n  {\n    v4 = 0;\n    if ( dword_8E94D4[95 * v2] )\n      return (unsigned int)v4;\n  }\n  v4 = 0;\n  if ( (signed int)sub_4083A0(v2) >= 3 )\n  {\n    v5 = a2 + v3;\n    if ( !dword_98A7F4 )\n    {\n      if ( dword_8E94D4[95 * v5] )\n        return (unsigned int)v4;\n      goto LABEL_8;\n    }\n    v4 = 0;\n    if ( !(unsigned int)sub_43B050(v5, 0LL) )\n    {\nLABEL_8:\n      v6 = sub_4083A0(v5);\n      v4 = v6 < 2;\n      LOBYTE(v4) = v6 > 2;\n      return (unsigned int)v4;\n    }\n  }\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x478d20L", 
            "funcEndAddr": "0x478dceL", 
            "funcName": "sub_478D20"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_478DD0(int a1, unsigned int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __int64 a12, __int64 a13, __int64 a14)\n{\n  __int64 v14; // r15\n  __int64 v15; // rbx\n  unsigned int v16; // er12\n  unsigned int v17; // er13\n  _BOOL8 v18; // r14\n  char v20; // [rsp+0h] [rbp-48h]\n  unsigned int v21; // [rsp+Ch] [rbp-3Ch]\n  __int64 v22; // [rsp+10h] [rbp-38h]\n\n  v14 = a2 + dword_94FE70[a1];\n  v15 = a2 + dword_94FEB0[a1];\n  v16 = a2 + dword_94F9F0[a1];\n  v17 = a2 + dword_94FE90[a1];\n  v22 = a2 + dword_94F550[a1];\n  LODWORD(v18) = 1;\n  v21 = a3;\n  if ( !(unsigned int)sub_44B230(\n                        a3,\n                        1,\n                        2,\n                        (unsigned int)v14,\n                        (unsigned int)v15,\n                        a14,\n                        a4,\n                        a5,\n                        a6,\n                        a7,\n                        a8,\n                        a9,\n                        a10,\n                        a11,\n                        v20) )\n  {\n    LODWORD(v18) = 1;\n    if ( !(unsigned int)sub_44B7B0(v21, 1, 5, a2, v16, v17, v22, v15, v14) )\n      v18 = (unsigned int)sub_44B7B0(v21, 1, 5, a2, v16, v17, v22, v14, v15) != 0;\n  }\n  return (unsigned int)v18;\n}\n", 
            "funcStartAddr": "0x478dd0L", 
            "funcEndAddr": "0x478ec7L", 
            "funcName": "sub_478DD0"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_478ED0(int a1, int a2)\n{\n  int v2; // ebp\n  signed int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94FE90[a1];\n  v3 = sub_4083A0(a2 + dword_94F550[a1]);\n  result = 0;\n  if ( v3 >= 2 )\n    result = (signed int)sub_4083A0(a2 + v2) > 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x478ed0L", 
            "funcEndAddr": "0x478f10L", 
            "funcName": "sub_478ED0"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_478F10(int a1, int a2)\n{\n  int v2; // ebp\n  signed int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94FE90[a1];\n  v3 = sub_4083A0(a2 + dword_94F550[a1]);\n  result = 0;\n  if ( v3 >= 2 )\n    result = (signed int)sub_4083A0(a2 + v2) > 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x478f10L", 
            "funcEndAddr": "0x478f50L", 
            "funcName": "sub_478F10"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_478F50(__int64 a1, signed int a2, int a3)\n{\n  void *v3; // rdi\n\n  v3 = &unk_927B28;\n  if ( a3 == 2 )\n    v3 = &unk_9333A0;\n  return (unsigned int)sub_41A430((__int64)v3, a2) != 3 - a3;\n}\n", 
            "funcStartAddr": "0x478f50L", 
            "funcEndAddr": "0x478f79L", 
            "funcName": "sub_478F50"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_479030(int a1, int a2, int a3)\n{\n  int v3; // er14\n  int v4; // ebx\n  int v5; // er15\n  int v6; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_94FEB0[a1];\n  v5 = dword_94FED0[a1];\n  v6 = sub_4083A0(a2 + dword_94FA30[a1]);\n  result = 0LL;\n  if ( v6 == 3 )\n    result = (unsigned int)sub_44ADE0((unsigned int)(a2 + v4), (unsigned int)(3 - v3), a2 + v5) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x479030L", 
            "funcEndAddr": "0x479090L", 
            "funcName": "sub_479030"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4790F0(int a1, int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // ebp\n  signed int v5; // esi\n  int v6; // er15\n  int v7; // er12\n  int v8; // ebx\n  void *v9; // rdi\n  int v10; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a2 + dword_94FED0[a1];\n  v6 = dword_94FA30[a1];\n  v7 = dword_94F590[a1];\n  v8 = 3 - a3;\n  v9 = &unk_927B28;\n  if ( a3 == 2 )\n    v9 = &unk_9333A0;\n  v10 = sub_41A430((__int64)v9, v5);\n  result = 0LL;\n  if ( v10 != v8 )\n    result = (unsigned int)sub_44B7B0(v3, 1, 1, (unsigned int)(v4 + v6), (unsigned int)(v4 + v7)) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x4790f0L", 
            "funcEndAddr": "0x479171L", 
            "funcName": "sub_4790F0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_479180(int a1, signed int a2, int a3)\n{\n  int v3; // er15\n  int v4; // ebp\n  void *v5; // rbx\n  int v6; // ecx\n  _BOOL8 result; // rax\n\n  v3 = dword_950350[a1];\n  v4 = 3 - a3;\n  v5 = &unk_927B28;\n  if ( a3 == 2 )\n    v5 = &unk_9333A0;\n  v6 = sub_41A430((__int64)v5, a2);\n  result = 0LL;\n  if ( v6 != v4 )\n    result = (unsigned int)sub_41A570((__int64)v5, a2 + v3) != v4;\n  return result;\n}\n", 
            "funcStartAddr": "0x479180L", 
            "funcEndAddr": "0x4791dfL", 
            "funcName": "sub_479180"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4791E0(int a1, signed int a2, int a3)\n{\n  int v3; // ebp\n  int v4; // ebx\n  void *v5; // rdi\n  int v6; // ecx\n  _BOOL8 result; // rax\n  int v8; // eax\n\n  v3 = dword_94F0D0[a1];\n  v4 = 3 - a3;\n  v5 = &unk_927B28;\n  if ( a3 == 2 )\n    v5 = &unk_9333A0;\n  v6 = sub_41A340((__int64)v5, a2);\n  result = 0LL;\n  if ( v6 != v4 )\n  {\n    LOBYTE(v8) = sub_46A080(a2 + v3);\n    result = v8 != 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4791e0L", 
            "funcEndAddr": "0x47922eL", 
            "funcName": "sub_4791E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_479230(int a1, signed int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, double a8, double a9, __m128 a10, __m128 a11)\n{\n  unsigned int v11; // er15\n  int v12; // er12\n  __int64 v13; // r14\n  __int64 v14; // rbp\n  int v15; // er13\n  void *v16; // rdi\n  int v17; // eax\n  _BOOL8 v18; // rcx\n  int v19; // eax\n  __m128 v20; // xmm4\n  __m128 v21; // xmm5\n  unsigned int v23; // [rsp+10h] [rbp-58h]\n  unsigned int v24; // [rsp+14h] [rbp-54h]\n  int v25; // [rsp+18h] [rbp-50h]\n  int v26; // [rsp+1Ch] [rbp-4Ch]\n\n  v24 = a2 + dword_94F510[a1];\n  v23 = a2 + dword_94F9B0[a1];\n  v11 = a2 + dword_94FE50[a1];\n  v12 = a2 + dword_94F530[a1];\n  v13 = (unsigned int)(a2 + dword_94F9D0[a1]);\n  v14 = (unsigned int)(a2 + dword_94FE70[a1]);\n  v25 = dword_94F0D0[a1];\n  v26 = a3;\n  v15 = 3 - a3;\n  v16 = &unk_927B28;\n  if ( a3 == 2 )\n    v16 = &unk_9333A0;\n  v17 = sub_41A340((__int64)v16, a2);\n  LODWORD(v18) = 0;\n  if ( v17 != v15 )\n  {\n    LOBYTE(v19) = sub_46A080(a2 + v25);\n    LODWORD(v18) = 0;\n    if ( v19 )\n      v18 = (unsigned int)sub_44B230(v26, 1, 6, v24, v23, v11, a4, a5, a6, a7, v20, v21, a10, a11, v12) != 0;\n  }\n  return (unsigned int)v18;\n}\n", 
            "funcStartAddr": "0x479230L", 
            "funcEndAddr": "0x479338L", 
            "funcName": "sub_479230"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_479340(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er12\n  unsigned int v4; // er13\n  __int64 v5; // r15\n  __int64 v6; // r14\n  __int64 v7; // rbx\n  signed int v8; // eax\n  _BOOL8 v9; // rcx\n  signed int v10; // eax\n  unsigned int v12; // [rsp+10h] [rbp-48h]\n  int v13; // [rsp+14h] [rbp-44h]\n\n  v12 = a3;\n  v3 = a2 + dword_94F570[a1];\n  v4 = a2 + dword_94F550[a1];\n  v5 = a2 + dword_94F9F0[a1];\n  v6 = a2 + dword_94FEB0[a1];\n  v7 = a2 + dword_94F590[a1];\n  v13 = dword_94F0D0[a1];\n  v8 = sub_4083A0(v7);\n  LODWORD(v9) = 0;\n  if ( v8 <= 3 )\n  {\n    v10 = sub_4083A0(a2 + v13);\n    LODWORD(v9) = 0;\n    if ( v10 >= 3 )\n      v9 = (unsigned int)sub_44B7B0(v12, 1, 6, a2, v3, v4, v5, v6, 0LL, v7) != 0;\n  }\n  return (unsigned int)v9;\n}\n", 
            "funcStartAddr": "0x479340L", 
            "funcEndAddr": "0x479416L", 
            "funcName": "sub_479340"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_479450(int a1, int a2, unsigned int a3)\n{\n  int v3; // er15\n  int v4; // ebx\n  _BOOL4 v5; // er14\n  signed int v6; // eax\n\n  v3 = dword_94F550[a1];\n  v4 = a2 + dword_94FE90[a1];\n  v5 = 0;\n  if ( !(unsigned int)sub_43F100(a2 + dword_94F9D0[a1], a3) && (signed int)sub_4083A0(a2 + v3) >= 2 )\n  {\n    v6 = sub_4083A0(v4);\n    v5 = v6 < 1;\n    LOBYTE(v5) = v6 > 1;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x479450L", 
            "funcEndAddr": "0x4794b3L", 
            "funcName": "sub_479450"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4794C0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<ecx>, int a4@<edi>, unsigned int a5@<esi>, __m128 a6@<xmm0>, __m128 a7@<xmm1>, __m128 a8@<xmm2>, __m128 a9@<xmm3>, __m128 a10@<xmm6>, __m128 a11@<xmm7>)\n{\n  unsigned int v11; // er13\n  unsigned int v12; // ebp\n  _BOOL8 v13; // r12\n  unsigned int v14; // er14\n  unsigned int v15; // er15\n  __int64 v16; // r9\n  __m128 v17; // xmm4\n  __m128 v18; // xmm5\n  __int64 v20; // [rsp+0h] [rbp-38h]\n  char v21; // [rsp+0h] [rbp-38h]\n\n  HIDWORD(v20) = HIDWORD(a1);\n  v11 = a2;\n  v12 = a5 + dword_94FEB0[a4];\n  if ( a3 )\n  {\n    sub_422B80(v12, a5);\n    LODWORD(v13) = 0;\n  }\n  else\n  {\n    v14 = a5 + dword_94F9D0[a4];\n    v15 = a5 + dword_94FE90[a4];\n    LODWORD(v20) = a5 + dword_94F0B0[a4];\n    LODWORD(v13) = 1;\n    if ( !(unsigned int)sub_44B7B0(a2, 1, 3, v12, a5 + dword_94F0D0[a4], a5, v20) )\n      v13 = (unsigned int)sub_44B230(3 - v11, 1, 2, v14, v15, v16, a6, a7, a8, a9, v17, v18, a10, a11, v21) != 0;\n  }\n  return (unsigned int)v13;\n}\n", 
            "funcStartAddr": "0x4794c0L", 
            "funcEndAddr": "0x479578L", 
            "funcName": "sub_4794C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_479580(int a1, unsigned int a2, unsigned int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11)\n{\n  int v11; // er15\n  unsigned int v12; // er13\n  unsigned int v13; // ebp\n  int v14; // er14\n  _BOOL4 v15; // er12\n  void *v16; // rdi\n  __int64 v18; // [rsp+0h] [rbp-48h]\n  __int64 v19; // [rsp+0h] [rbp-48h]\n  __int64 v20; // [rsp+8h] [rbp-40h]\n  unsigned int v21; // [rsp+10h] [rbp-38h]\n  unsigned int v22; // [rsp+14h] [rbp-34h]\n\n  v11 = a2 + dword_94F590[a1];\n  v12 = a2 + dword_94FA30[a1];\n  v21 = a2 + dword_94F570[a1];\n  v13 = a2 + dword_94FE90[a1];\n  v22 = a3;\n  v14 = 3 - a3;\n  LODWORD(v20) = a2 + dword_94FED0[a1];\n  v15 = 0;\n  if ( (unsigned int)sub_44B230(\n                       3 - a3,\n                       1,\n                       5,\n                       a2 + dword_94F550[a1],\n                       a2 + dword_94F9F0[a1],\n                       v13,\n                       a4,\n                       a5,\n                       a6,\n                       a7,\n                       a8,\n                       a9,\n                       a10,\n                       a11,\n                       (unsigned __int8)a2 + LOBYTE(dword_94FEB0[a1])) )\n    goto LABEL_10;\n  v16 = &unk_927B28;\n  if ( v14 == 1 )\n    v16 = &unk_9333A0;\n  if ( (unsigned int)sub_41A570((__int64)v16, v13) == v14 )\n  {\nLABEL_10:\n    LODWORD(v18) = v11;\n    if ( !(unsigned int)sub_44BB60(v22, 0, 2, a2, v12, a2, v18, v20) )\n    {\n      LODWORD(v19) = v11;\n      v15 = (unsigned __int64)sub_44BB60(v22, 0, 2, a2, v21, a2, v19) == 0;\n    }\n  }\n  return (unsigned int)v15;\n}\n", 
            "funcStartAddr": "0x479580L", 
            "funcEndAddr": "0x479698L", 
            "funcName": "sub_479580"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4797B0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er15\n  __int128 v6; // cx\n\n  v4 = a2;\n  v5 = dword_94EC30[a3];\n  v6 = a4;\n  if ( (unsigned int)sub_44B7B0(a2, 1, 1, a4, a4 + dword_94F0D0[a3], a1) )\n    DWORD2(v6) = (unsigned __int64)sub_44B7B0(v4, 1, 1, a4, a4 + v5) == 0;\n  return DWORD2(v6);\n}\n", 
            "funcStartAddr": "0x4797b0L", 
            "funcEndAddr": "0x47981eL", 
            "funcName": "sub_4797B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_479820(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // er12\n  int v5; // er15\n  __int128 v6; // cx\n  _QWORD v8[7]; // [rsp+0h] [rbp-38h]\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = dword_94FE90[a1];\n  v6 = a2;\n  if ( !(unsigned int)sub_44B7B0(a3, 1, 1, a2, a2 + dword_94F0B0[a1]) )\n  {\n    LODWORD(v8[0]) = v4;\n    DWORD2(v6) = (unsigned __int64)sub_44B7B0(v3, 0, 3, a2, v4, a2 + v5, v8[0]) == 0;\n  }\n  return DWORD2(v6);\n}\n", 
            "funcStartAddr": "0x479820L", 
            "funcEndAddr": "0x4798a7L", 
            "funcName": "sub_479820"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4798B0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er15\n  __int128 v6; // cx\n\n  v4 = a2;\n  v5 = dword_94FED0[a3];\n  v6 = a4;\n  if ( (unsigned int)sub_44B7B0(a2, 1, 1, a4, a4 + dword_94FA30[a3], a1) )\n    DWORD2(v6) = (unsigned __int64)sub_44B980(v4, 1, 1, a4, a4, a4 + v5) == 0;\n  return DWORD2(v6);\n}\n", 
            "funcStartAddr": "0x4798b0L", 
            "funcEndAddr": "0x479921L", 
            "funcName": "sub_4798B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_479930(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // er12\n  int v5; // er15\n  _BOOL8 v6; // rbp\n  _QWORD v8[7]; // [rsp+0h] [rbp-38h]\n\n  v3 = a3;\n  v4 = dword_94FED0[a1];\n  v5 = dword_94FEB0[a1];\n  LODWORD(v6) = 0;\n  if ( (unsigned int)sub_44B7B0(a3, 1, 1, a2, a2 + dword_94FA30[a1]) )\n  {\n    LODWORD(v8[0]) = a2 + v4;\n    v6 = (unsigned int)sub_44B980(v3, 0, 2, a2, a2 + v5, a2, v8[0]) != 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x479930L", 
            "funcEndAddr": "0x4799b8L", 
            "funcName": "sub_479930"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_479A60@<rax>(unsigned int a1@<eax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er15\n  unsigned int v5; // er14\n  unsigned int v6; // ebx\n  unsigned int v7; // er13\n  unsigned int v8; // er12\n  signed int v9; // eax\n  _BOOL8 v10; // rcx\n  signed int v11; // eax\n  int v12; // eax\n  int v13; // eax\n  int v14; // eax\n  int v15; // eax\n  unsigned __int64 v17; // [rsp-4h] [rbp-38h]\n  unsigned int v18; // [rsp+0h] [rbp-34h]\n\n  v17 = __PAIR__(a2, a1);\n  v4 = a4 + dword_94F530[a3];\n  v5 = a4 + dword_94FE70[a3];\n  v6 = a4 + dword_94F9D0[a3];\n  v7 = a4 + dword_94F550[a3];\n  v8 = a4 + dword_94FE90[a3];\n  v9 = sub_4083A0(a4 + dword_94F9D0[a3]);\n  LODWORD(v10) = 0;\n  if ( v9 <= 2 )\n  {\n    if ( (signed int)sub_4083A0(v7) < 2 )\n    {\n      LODWORD(v10) = 0;\n    }\n    else\n    {\n      v11 = sub_4083A0(v8);\n      LODWORD(v10) = 0;\n      if ( v11 >= 2 )\n      {\n        v12 = sub_44B7B0(HIDWORD(v17), 1, 1, a4, v4, v17);\n        LODWORD(v10) = 0;\n        if ( !v12 )\n        {\n          v13 = sub_44B7B0(v18, 1, 1, a4, v5);\n          LODWORD(v10) = 0;\n          if ( !v13 )\n          {\n            v14 = sub_44B7B0(v18, 1, 1, a4, v6);\n            LODWORD(v10) = 0;\n            if ( v14 )\n            {\n              v15 = sub_44B7B0(v18, 1, 1, a4, v7);\n              LODWORD(v10) = 0;\n              if ( v15 )\n                v10 = (unsigned int)sub_44B7B0(v18, 1, 1, a4, v8) != 0;\n            }\n          }\n        }\n      }\n    }\n  }\n  return (unsigned int)v10;\n}\n", 
            "funcStartAddr": "0x479a60L", 
            "funcEndAddr": "0x479b9cL", 
            "funcName": "sub_479A60"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_479BC0(int a1, signed int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // eax\n  signed int v5; // edx\n  signed int v6; // ebp\n  _BOOL4 v7; // er14\n  int v8; // er15\n  int v9; // ebx\n  signed int v10; // eax\n\n  v4 = a3;\n  v5 = a2 + dword_94F0B0[a1];\n  v6 = a2 + dword_950330[a1];\n  if ( a4 )\n  {\n    sub_46A120(a2, v4, v5, v6);\n    v7 = 0;\n  }\n  else\n  {\n    v8 = a2 + dword_94F090[a1];\n    v9 = dword_950310[a1] + a2;\n    v7 = 0;\n    if ( (unsigned int)sub_4083A0(v5) == 2 && (unsigned int)sub_4083A0(v6) == 2 && (signed int)sub_4083A0(v8) >= 2 )\n    {\n      v10 = sub_4083A0(v9);\n      v7 = v10 < 1;\n      LOBYTE(v7) = v10 > 1;\n    }\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x479bc0L", 
            "funcEndAddr": "0x479c4dL", 
            "funcName": "sub_479BC0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_479C50@<rax>(int a1@<eax>, unsigned int a2@<edx>, int a3@<ecx>, int a4@<edi>, unsigned int a5@<esi>)\n{\n  unsigned int v5; // er12\n  unsigned int v6; // ebx\n  unsigned int v7; // er14\n  _BOOL8 v8; // r13\n  unsigned int v9; // er15\n  __int64 v11; // [rsp-4h] [rbp-38h]\n  unsigned int v12; // [rsp+0h] [rbp-34h]\n\n  LODWORD(v11) = a1;\n  v5 = a2;\n  v6 = a5 + dword_94F9F0[a4];\n  v7 = a5 + dword_94EC10[a4];\n  if ( a3 )\n  {\n    sub_46A120(a5, a2, v6, v7);\n    LODWORD(v8) = 0;\n  }\n  else\n  {\n    HIDWORD(v11) = a5 + dword_94F0D0[a4];\n    v9 = a5 + dword_94F590[a4];\n    LODWORD(v8) = 0;\n    if ( (unsigned int)sub_44B7B0(a2, 1, 2, a5, v9, v6, v11) )\n      v8 = (unsigned int)sub_44B7B0(v5, 1, 2, v12, v9, v7) != 0;\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x479c50L", 
            "funcEndAddr": "0x479d03L", 
            "funcName": "sub_479C50"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_479D10(int a1, int a2)\n{\n  int v2; // ebp\n  __int64 v3; // r12\n  int v4; // er15\n  _BOOL8 v5; // r14\n\n  v2 = dword_94FE90[a1];\n  v3 = dword_94F550[a1];\n  v4 = a2 + dword_94F570[a1];\n  LODWORD(v5) = 0;\n  if ( (unsigned int)sub_4083A0(a2 + dword_94FEB0[a1]) == 2\n    && (signed int)sub_4083A0(a2 + v2) >= 2\n    && dword_954FF0[19 * (a2 + v3)] != 1 )\n  {\n    v5 = (unsigned int)sub_426580(v4) != 0;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x479d10L", 
            "funcEndAddr": "0x479d8bL", 
            "funcName": "sub_479D10"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_479D90(int a1, int a2)\n{\n  int v2; // er15\n  int v3; // ebx\n  _BOOL4 v4; // er14\n  signed int v5; // eax\n\n  v2 = dword_94F550[a1];\n  v3 = a2 + dword_94FE90[a1];\n  v4 = 0;\n  if ( (unsigned int)sub_4083A0(a2 + dword_94F9F0[a1]) == 2 && (signed int)sub_4083A0(a2 + v2) >= 2 )\n  {\n    v5 = sub_4083A0(v3);\n    v4 = v5 < 1;\n    LOBYTE(v4) = v5 > 1;\n  }\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x479d90L", 
            "funcEndAddr": "0x479df2L", 
            "funcName": "sub_479D90"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_479E00(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94FE90[a1];\n  v3 = sub_4083A0(a2 + dword_94FEB0[a1]);\n  result = 0;\n  if ( v3 == 2 )\n    result = (signed int)sub_4083A0(a2 + v2) > 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x479e00L", 
            "funcEndAddr": "0x479e40L", 
            "funcName": "sub_479E00"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_479E40(int a1, unsigned int a2, unsigned int a3, int a4)\n{\n  _BOOL8 result; // rax\n  unsigned int v5; // er15\n  __int64 v6; // r14\n  unsigned int v7; // ebp\n  __int64 v8; // r13\n  __int64 v9; // r12\n  signed int v10; // ecx\n  unsigned int v11; // [rsp+Ch] [rbp-3Ch]\n  __int64 v12; // [rsp+10h] [rbp-38h]\n\n  if ( a4 )\n  {\n    sub_4217E0(dword_94FE90[a1] + a2);\n    result = 0LL;\n  }\n  else\n  {\n    v11 = a3;\n    v5 = a2 + dword_94F590[a1];\n    v12 = a2 + dword_94FED0[a1];\n    v6 = a2 + dword_94FA50[a1];\n    v7 = a2 + dword_94F570[a1];\n    v8 = a2 + dword_94FA30[a1];\n    v9 = a2 + dword_94F0F0[a1];\n    v10 = sub_4083A0(a2 + dword_94EC30[a1]);\n    result = 1LL;\n    if ( v10 <= 4 )\n      result = (unsigned int)sub_44B7B0(v11, 0, 7, a2, v7, v5, v8, v12, v9, v6, v9) == 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x479e40L", 
            "funcEndAddr": "0x479f19L", 
            "funcName": "sub_479E40"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_479F20(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er15\n  unsigned int v4; // er12\n  __int64 v5; // r14\n  _BOOL8 v6; // r13\n  unsigned int v8; // [rsp+Ch] [rbp-4Ch]\n  int v9; // [rsp+10h] [rbp-48h]\n  int v10; // [rsp+18h] [rbp-40h]\n  int v11; // [rsp+20h] [rbp-38h]\n\n  v3 = a2 + dword_94FA30[a1];\n  v4 = a2 + dword_94FED0[a1];\n  v11 = dword_950370[a1];\n  v5 = a2 + dword_94F590[a1];\n  v10 = dword_94FEF0[a1];\n  v9 = dword_94F0D0[a1];\n  LODWORD(v6) = 0;\n  v8 = a3;\n  if ( (unsigned int)sub_44B7B0(a3, 1, 4, a2, v3, v4, v5, a2 + dword_94FEB0[a1]) )\n    v6 = (unsigned int)sub_44B7B0(v8, 1, 6, a2, v3, v4, a2 + v11, v5, a2 + v10, a2 + v9) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x479f20L", 
            "funcEndAddr": "0x47a013L", 
            "funcName": "sub_479F20"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_47A0A0(int a1, int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, double a8, double a9, __m128 a10, __m128 a11)\n{\n  int v11; // er14\n  int v12; // er15\n  int v13; // er13\n  int v14; // er12\n  int v15; // ebp\n  int v16; // eax\n  __m128 v17; // xmm4\n  __m128 v18; // xmm5\n  _BOOL8 result; // rax\n\n  v11 = a3;\n  v12 = dword_94E770[a1];\n  v13 = dword_94EC10[a1];\n  v14 = dword_94E790[a1];\n  v15 = dword_94EC30[a1];\n  LOBYTE(v16) = sub_46A080(a2 + dword_94FEB0[a1]);\n  if ( v16 )\n    result = (unsigned int)sub_44B230(\n                             v11,\n                             1,\n                             4,\n                             (unsigned int)(a2 + v12),\n                             (unsigned int)(a2 + v13),\n                             (unsigned int)(a2 + v14),\n                             a4,\n                             a5,\n                             a6,\n                             a7,\n                             v17,\n                             v18,\n                             a10,\n                             a11,\n                             (unsigned __int8)a2 + (unsigned __int8)v15) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x47a0a0L", 
            "funcEndAddr": "0x47a12bL", 
            "funcName": "sub_47A0A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47A130(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er15\n  __int64 v4; // r12\n  int v5; // er13\n  _BOOL8 v6; // r14\n  unsigned int v8; // [rsp+0h] [rbp-34h]\n\n  v3 = a2 + dword_94FA30[a1];\n  v4 = a2 + dword_94FED0[a1];\n  v5 = dword_94FEB0[a1];\n  LODWORD(v6) = 0;\n  v8 = a3;\n  if ( (unsigned int)sub_44B7B0(a3, 1, 4, a2, v3, a2 + dword_94F590[a1], v4, a2 + dword_94F0D0[a1]) )\n    v6 = (unsigned int)sub_44B7B0(v8, 1, 3, a2, v3, (unsigned int)v4, a2 + v5) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x47a130L", 
            "funcEndAddr": "0x47a1e6L", 
            "funcName": "sub_47A130"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47A1F0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // er12\n  int v5; // er15\n  _BOOL8 v6; // rbp\n\n  v3 = a3;\n  v4 = a2 + dword_950350[a1];\n  v5 = dword_950330[a1];\n  LODWORD(v6) = 0;\n  if ( (unsigned int)sub_44B7B0(a3, 1, 2, a2, v4, a2 + dword_94F550[a1]) )\n    v6 = (unsigned int)sub_44B7B0(v3, 1, 1, v4, a2 + v5) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x47a1f0L", 
            "funcEndAddr": "0x47a26dL", 
            "funcName": "sub_47A1F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47A2D0(int a1, unsigned int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er15\n  unsigned int v5; // er12\n  signed int v6; // er14\n  signed int v7; // ebp\n  signed int v8; // ebx\n  _BOOL8 v9; // rbp\n  unsigned int v10; // er14\n\n  v4 = a3;\n  v5 = a2 + dword_94FED0[a1];\n  if ( a4 )\n  {\n    v6 = a2 + dword_950810[a1];\n    v7 = a2 + dword_950370[a1];\n    v8 = dword_9507F0[a1] + a2;\n    sub_4217E0(v5);\n    sub_4217E0(v8);\n    sub_4217E0(v7);\n    sub_4217E0(v6);\n    LODWORD(v9) = 0;\n  }\n  else\n  {\n    v10 = a2 + dword_94F9F0[a1];\n    LODWORD(v9) = 0;\n    if ( !(unsigned int)sub_44B7B0(a3, 0, 1, a2, a2 + dword_950350[a1]) )\n      v9 = (unsigned int)sub_44B7B0(3 - v4, 1, 2, a2, v5, v10) != 0;\n  }\n  return (unsigned int)v9;\n}\n", 
            "funcStartAddr": "0x47a2d0L", 
            "funcEndAddr": "0x47a392L", 
            "funcName": "sub_47A2D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_47A3A0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<ecx>, int a4@<edi>, unsigned int a5@<esi>)\n{\n  unsigned int v5; // ebx\n  unsigned int v6; // er14\n  signed int v7; // er15\n  signed int v8; // ebx\n  signed int v9; // ebp\n  _BOOL8 v10; // r12\n  unsigned int v11; // er13\n  unsigned int v12; // er15\n  __int64 v14; // [rsp+0h] [rbp-38h]\n\n  HIDWORD(v14) = HIDWORD(a1);\n  v5 = a2;\n  v6 = a5 + dword_94EC30[a4];\n  if ( a3 )\n  {\n    v7 = a5 + dword_94EC50[a4];\n    v8 = a5 + dword_94E7B0[a4];\n    v9 = dword_94E790[a4] + a5;\n    sub_4217E0(v6);\n    sub_4217E0(v9);\n    sub_4217E0(v8);\n    sub_4217E0(v7);\n    LODWORD(v10) = 0;\n  }\n  else\n  {\n    v11 = a5 + dword_94F0F0[a4];\n    v12 = a5 + dword_94F550[a4];\n    LODWORD(v10) = 0;\n    if ( (signed int)sub_4083A0(v12) >= 2 )\n    {\n      LODWORD(v14) = v6;\n      LODWORD(v10) = 0;\n      if ( !(unsigned int)sub_44B7B0(v5, 0, 3, a5, v6, v11, v14) )\n        v10 = (unsigned int)sub_44B7B0(v5, 1, 1, v6, v12) != 0;\n    }\n  }\n  return (unsigned int)v10;\n}\n", 
            "funcStartAddr": "0x47a3a0L", 
            "funcEndAddr": "0x47a47fL", 
            "funcName": "sub_47A3A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47A540(int a1, unsigned int a2, int a3)\n{\n  unsigned int v3; // er15\n  int v4; // er14\n  unsigned int v5; // er12\n  _BOOL4 v6; // ebp\n\n  v3 = a2 + dword_94F9F0[a1];\n  v4 = dword_94FE90[a1];\n  v5 = 3 - a3;\n  v6 = 0;\n  if ( (unsigned int)sub_44B7B0(3 - a3, 0, 2, a2, v3, a2) )\n    v6 = (unsigned __int64)sub_44B7B0(v5, 1, 2, a2, v3, a2 + v4) == 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x47a540L", 
            "funcEndAddr": "0x47a5bdL", 
            "funcName": "sub_47A540"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47A5C0(int a1, unsigned int a2, int a3)\n{\n  unsigned int v3; // er15\n  int v4; // er14\n  unsigned int v5; // er12\n  _BOOL4 v6; // ebp\n\n  v3 = a2 + dword_94F9F0[a1];\n  v4 = dword_94FE90[a1];\n  v5 = 3 - a3;\n  v6 = 0;\n  if ( (unsigned int)sub_44B7B0(3 - a3, 0, 2, a2, v3, a2) )\n    v6 = (unsigned __int64)sub_44B7B0(v5, 1, 2, a2, v3, a2 + v4) == 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x47a5c0L", 
            "funcEndAddr": "0x47a63dL", 
            "funcName": "sub_47A5C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47A670(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // er12\n  unsigned int v5; // er15\n  signed __int64 v6; // rdi\n  _BOOL4 v7; // ebx\n  _QWORD v9[7]; // [rsp+0h] [rbp-38h]\n\n  v3 = a3;\n  v4 = a2 + dword_94FED0[a1];\n  v5 = a2 + dword_94FEB0[a1];\n  v6 = dword_950350[a1] + (signed __int64)(signed int)a2;\n  if ( !dword_98A7F4 )\n  {\n    v7 = 0;\n    if ( dword_8E94D4[95 * v6] )\n      return (unsigned int)v7;\n    goto LABEL_3;\n  }\n  v7 = 0;\n  if ( !(unsigned int)sub_43B050(v6, 0LL) )\n  {\nLABEL_3:\n    LODWORD(v9[0]) = v4;\n    v7 = (unsigned __int64)sub_44B7B0(v3, 0, 3, a2, v4, v5, v9[0]) == 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47a670L", 
            "funcEndAddr": "0x47a708L", 
            "funcName": "sub_47A670"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47A710(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er12\n  __int64 v4; // rbx\n  __int64 v5; // r13\n  __int64 v6; // r15\n  int v7; // er14\n  void *v8; // rdi\n  int v9; // eax\n  _BOOL4 v10; // edx\n  __int64 v11; // r13\n  __int64 v12; // r15\n  __int64 v13; // rcx\n  int v14; // eax\n  int v15; // eax\n  int v16; // eax\n  __int64 v18; // [rsp+8h] [rbp-40h]\n\n  v3 = a3;\n  v4 = a2 + dword_94FED0[a1];\n  v5 = dword_94FA30[a1];\n  v6 = dword_94FEB0[a1];\n  v7 = 3 - a3;\n  v8 = &unk_927B28;\n  if ( a3 == 2 )\n    v8 = &unk_9333A0;\n  v9 = sub_41A340((__int64)v8, v4);\n  v10 = 0;\n  if ( v9 == v7 )\n  {\n    v11 = (signed int)a2 + v5;\n    v12 = (signed int)a2 + v6;\n    v13 = v12;\n    if ( dword_98A7F4 )\n    {\n      v18 = v12;\n      v14 = sub_43B050(v11, 0LL);\n      v10 = 0;\n      if ( v14 )\n        return (unsigned int)v10;\n      v13 = v12;\n      if ( dword_98A7F4 )\n      {\n        v15 = sub_43B050(v12, 0LL);\n        v10 = 0;\n        if ( v15 )\n          return (unsigned int)v10;\n        goto LABEL_11;\n      }\n    }\n    else if ( dword_8E94D4[95 * v11] )\n    {\n      return (unsigned int)v10;\n    }\n    v18 = v13;\n    v10 = 0;\n    if ( dword_8E94D4[95 * v13] )\n      return (unsigned int)v10;\nLABEL_11:\n    v16 = sub_44B7B0(v3, 1, 3, a2, 0LL, (unsigned int)v4, v4);\n    v10 = 0;\n    if ( !v16 )\n      v10 = (unsigned __int64)sub_44B980(v3, 0, 3, a2, 0LL, (unsigned int)v4, v11, v18) == 0;\n  }\n  return (unsigned int)v10;\n}\n", 
            "funcStartAddr": "0x47a710L", 
            "funcEndAddr": "0x47a861L", 
            "funcName": "sub_47A710"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_47A910@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // er15\n  signed __int64 v6; // rdi\n  _BOOL4 v7; // ebp\n  __int64 v9; // [rsp-8h] [rbp-28h]\n\n  v9 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94FA50[a3];\n  v6 = dword_94F590[a3] + (signed __int64)(signed int)a4;\n  if ( !dword_98A7F4 )\n  {\n    v7 = 0;\n    if ( dword_8E94D4[95 * v6] )\n      return (unsigned int)v7;\n    goto LABEL_3;\n  }\n  v7 = 0;\n  if ( !(unsigned int)sub_43B050(v6, 0LL) )\nLABEL_3:\n    v7 = (unsigned __int64)sub_44B7B0(v4, 1, 2, v5, a4, a4, v9) == 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47a910L", 
            "funcEndAddr": "0x47a994L", 
            "funcName": "sub_47A910"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47A9E0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er15\n  __int64 v4; // r8\n  __int64 v5; // rbp\n  int v6; // er13\n  signed int v7; // er12\n  _BOOL8 v8; // r14\n  signed int v9; // er13\n  void *v10; // rbx\n\n  v3 = a3;\n  v4 = a2 + dword_94F9F0[a1];\n  v5 = a2 + dword_94F570[a1];\n  v6 = dword_9507F0[a1];\n  v7 = a2 + dword_9507D0[a1];\n  LODWORD(v8) = 0;\n  if ( (unsigned int)sub_44B980(a3, 1, 4, a2, v4, a2 + dword_94F550[a1], v5, v4, v5) )\n  {\n    v9 = a2 + v6;\n    v10 = &unk_927B28;\n    if ( v3 == 2 )\n      v10 = &unk_9333A0;\n    if ( (unsigned int)sub_41A570((__int64)v10, v9) != v3 )\n      v8 = (unsigned int)sub_41A570((__int64)v10, v7) != v3;\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x47a9e0L", 
            "funcEndAddr": "0x47aa9dL", 
            "funcName": "sub_47A9E0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_47AB60(int a1, int a2, int a3)\n{\n  int v3; // er14\n  unsigned int v4; // ebp\n  unsigned int v5; // ebx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94F550[a1];\n  v5 = dword_94FEB0[a1] + a2;\n  if ( (unsigned int)sub_44AE70(a2 + dword_94F550[a1], v5) )\n    result = (unsigned int)sub_44B7B0(3 - v3, 1, 1, v4, v5) == 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x47ab60L", 
            "funcEndAddr": "0x47abb9L", 
            "funcName": "sub_47AB60"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47ACD0(int a1, signed int a2)\n{\n  signed int v2; // ebp\n\n  v2 = a2 + dword_94F5B0[a1];\n  sub_422B80(a2 + dword_94FA50[a1], a2);\n  sub_422B80(v2, a2);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x47acd0L", 
            "funcEndAddr": "0x47ad01L", 
            "funcName": "sub_47ACD0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47AD10(int a1, signed int a2)\n{\n  signed int v2; // ebp\n\n  v2 = a2 + dword_94FA50[a1];\n  sub_422B80(a2 + dword_94FEF0[a1], a2);\n  sub_422B80(v2, a2);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x47ad10L", 
            "funcEndAddr": "0x47ad41L", 
            "funcName": "sub_47AD10"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47ADD0(int a1, unsigned int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // ebp\n  _BOOL4 v5; // er12\n  unsigned int v6; // er15\n  __int64 v7; // r14\n  __int64 v8; // r13\n  unsigned int v10; // [rsp+Ch] [rbp-4Ch]\n  __int64 v11; // [rsp+10h] [rbp-48h]\n  __int64 v12; // [rsp+18h] [rbp-40h]\n  __int64 v13; // [rsp+20h] [rbp-38h]\n\n  v4 = a2 + dword_94F590[a1];\n  if ( a4 )\n  {\n    sub_422B80(v4, a2);\n    v5 = 0;\n  }\n  else\n  {\n    v6 = a2 + dword_94F570[a1];\n    v7 = a2 + dword_94FA30[a1];\n    v8 = a2 + dword_94F110[a1];\n    v12 = a2 + dword_94F0D0[a1];\n    v11 = a2 + dword_94EC30[a1];\n    v5 = 0;\n    v10 = a3;\n    v13 = a2 + dword_94F0F0[a1];\n    if ( (unsigned int)sub_44B7B0(a3, 1, 6, a2, v6, v4, v13, v7, v8, v8) )\n      v5 = (unsigned __int64)sub_44B7B0(v10, 1, 7, a2, v6, v4, v13, v7, v12, v8, v11) == 0;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x47add0L", 
            "funcEndAddr": "0x47aedbL", 
            "funcName": "sub_47ADD0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47AEE0(int a1, unsigned int a2, unsigned int a3, int a4)\n{\n  _BOOL4 v4; // er15\n  unsigned int v5; // er12\n  __int64 v6; // r13\n  __int64 v7; // r14\n  __int64 v8; // rbp\n  unsigned int v10; // [rsp+0h] [rbp-38h]\n  unsigned int v11; // [rsp+4h] [rbp-34h]\n\n  if ( a4 )\n  {\n    sub_422B80(a2 + dword_94F9F0[a1], a2);\n    v4 = 0;\n  }\n  else\n  {\n    v5 = a2 + dword_94F0F0[a1];\n    v6 = a2 + dword_94EC50[a1];\n    v7 = a2 + dword_94F590[a1];\n    v8 = a2 + dword_94EC70[a1];\n    v4 = 1;\n    v11 = a3;\n    v10 = a2 + dword_94F0D0[a1];\n    if ( !(unsigned int)sub_44B7B0(a3, 1, 6, a2, a2 + dword_94F0D0[a1], v5, v6, v7, v8, v8) )\n      v4 = (unsigned __int64)sub_44B7B0(v11, 0, 5, a2, v10, v5, v7, v6, v7) == 0;\n  }\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x47aee0L", 
            "funcEndAddr": "0x47afc8L", 
            "funcName": "sub_47AEE0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47B010(int a1, int a2, int a3)\n{\n  int v3; // er14\n  __int64 v4; // rax\n  unsigned int v5; // er15\n  signed __int64 v6; // rdi\n  unsigned int v7; // er12\n  unsigned int v8; // ebx\n  _BOOL4 v9; // ebp\n\n  v3 = a3;\n  v4 = a1;\n  v5 = a2 + dword_94FEB0[a1];\n  v6 = a2 + (signed __int64)dword_9507F0[a1];\n  v7 = a2 + dword_950330[v4];\n  v8 = dword_94FED0[v4] + a2;\n  if ( !dword_98A7F4 )\n  {\n    v9 = 0;\n    if ( dword_8E94D4[95 * v6] )\n      return (unsigned int)v9;\n    goto LABEL_3;\n  }\n  v9 = 0;\n  if ( !(unsigned int)sub_43B050(v6, 0LL) )\nLABEL_3:\n    v9 = (unsigned __int64)sub_44B980(3 - v3, 0, 1, v5, v7, v8) == 0;\n  return (unsigned int)v9;\n}\n", 
            "funcStartAddr": "0x47b010L", 
            "funcEndAddr": "0x47b0aaL", 
            "funcName": "sub_47B010"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47B0F0(int a1, signed int a2, int a3)\n{\n  int v3; // er14\n  int v4; // ebx\n  int v5; // eax\n  _BOOL8 v6; // rbp\n  int v7; // eax\n  void *v8; // rdi\n\n  v3 = a3;\n  v4 = dword_94FE90[a1];\n  LOBYTE(v5) = sub_46A080(a2 + dword_94F550[a1]);\n  LODWORD(v6) = 1;\n  if ( !v5 )\n  {\n    LOBYTE(v7) = sub_46A080(a2 + v4);\n    if ( !v7 )\n    {\n      v8 = &unk_927B28;\n      if ( v3 == 2 )\n        v8 = &unk_9333A0;\n      v6 = (unsigned int)sub_41A340((__int64)v8, a2) != 3 - v3;\n    }\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x47b0f0L", 
            "funcEndAddr": "0x47b163L", 
            "funcName": "sub_47B0F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47B170(int a1, unsigned int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er14\n  __int64 v5; // r15\n  __int64 v6; // rbx\n  _BOOL4 v7; // er12\n  unsigned int v8; // er13\n  __int64 v10; // [rsp+0h] [rbp-38h]\n  __int64 v11; // [rsp+0h] [rbp-38h]\n\n  v4 = a3;\n  v5 = a2 + dword_94F9F0[a1];\n  v6 = a2 + dword_94FA30[a1];\n  if ( a4 )\n  {\n    sub_46A120(a2, a3, v5, v6);\n    v7 = 0;\n  }\n  else\n  {\n    HIDWORD(v10) = a2 + dword_94FED0[a1];\n    LODWORD(v10) = a2 + dword_94FEB0[a1];\n    v8 = a2 + dword_94F590[a1];\n    v7 = 0;\n    if ( (unsigned int)sub_4083A0(v6) == 2 )\n    {\n      v7 = 0;\n      if ( !(unsigned int)sub_44B7B0(v4, 1, 1, a2, v8, v10) )\n        v7 = (unsigned __int64)sub_44B980(v4, 0, 3, a2, HIDWORD(v11), (unsigned int)v11, v6, v5) == 0;\n    }\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47b170L", 
            "funcEndAddr": "0x47b249L", 
            "funcName": "sub_47B170"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47B2E0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // er12\n  signed __int64 v5; // rbp\n  _BOOL8 v6; // rbx\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = dword_950330[a1] + (signed __int64)(signed int)a2;\n  if ( !dword_98A7F4 )\n  {\n    LODWORD(v6) = 0;\n    if ( dword_8E94D4[95 * v5] )\n      return (unsigned int)v6;\n    goto LABEL_3;\n  }\n  LODWORD(v6) = 0;\n  if ( !(unsigned int)sub_43B050(v5, 0LL) )\nLABEL_3:\n    v6 = (unsigned int)sub_44B7B0(v3, 1, 2, a2, v4, (unsigned int)v5) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x47b2e0L", 
            "funcEndAddr": "0x47b365L", 
            "funcName": "sub_47B2E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47B370(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // ebx\n  unsigned int v4; // er15\n  __int64 v5; // r14\n  __int64 v6; // r13\n  int v7; // er12\n  _BOOL4 v9; // [rsp+10h] [rbp-50h]\n  unsigned int v10; // [rsp+14h] [rbp-4Ch]\n  __int64 v11; // [rsp+18h] [rbp-48h]\n  __int64 v12; // [rsp+20h] [rbp-40h]\n  __int64 v13; // [rsp+28h] [rbp-38h]\n\n  v3 = a2 + dword_94F9F0[a1];\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = a2 + dword_950350[a1];\n  v6 = a2 + dword_950370[a1];\n  v12 = a2 + dword_94F9D0[a1];\n  v11 = a2 + dword_94F530[a1];\n  v7 = dword_94FED0[a1];\n  v13 = a2 + dword_94F550[a1];\n  v9 = 0;\n  v10 = a3;\n  if ( (unsigned int)sub_44B7B0(a3, 1, 5, a2, v3, v4, v5, v6, v5) )\n  {\n    v9 = 0;\n    if ( (unsigned int)sub_44B7B0(v10, 1, 5, a2, v3, v4, v5, v6, a2 + v7) )\n    {\n      v9 = 0;\n      if ( (unsigned int)sub_44B7B0(v10, 1, 5, a2, v4, v3, v12, v11, v12) )\n        v9 = (unsigned __int64)sub_44B7B0(v10, 1, 5, a2, v4, v3, v12, v11, v13) != 0;\n    }\n  }\n  return (unsigned int)v9;\n}\n", 
            "funcStartAddr": "0x47b370L", 
            "funcEndAddr": "0x47b4f9L", 
            "funcName": "sub_47B370"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47B500(int a1, int a2)\n{\n  int v2; // er12\n  int v3; // ebx\n  int v4; // er15\n  _BOOL8 v5; // r14\n\n  v2 = dword_94FE90[a1];\n  v3 = a2 + dword_94FED0[a1];\n  v4 = a2 + dword_94F570[a1];\n  LODWORD(v5) = 0;\n  if ( (unsigned int)sub_4083A0(a2 + dword_94FEB0[a1]) == 2\n    && (signed int)sub_4083A0(a2 + v2) >= 2\n    && (signed int)sub_4083A0(v3) >= 2 )\n  {\n    v5 = (unsigned int)sub_426580(v4) != 0;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x47b500L", 
            "funcEndAddr": "0x47b578L", 
            "funcName": "sub_47B500"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47B5A0(int a1, signed int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er14\n  signed __int64 v5; // rbp\n  unsigned int v6; // ebx\n  unsigned int v8; // er15\n  __int64 v9; // rax\n\n  v4 = a3;\n  v5 = dword_94F0D0[a1] + (signed __int64)a2;\n  if ( !a4 )\n  {\n    v8 = a2 + dword_94F550[a1];\n    if ( dword_98A7F4 )\n    {\n      v6 = 0;\n      v9 = sub_43B050(v5, 0LL);\n      if ( !(_DWORD)v9 )\n        return v6;\n      if ( dword_98A7F4 )\n      {\n        v6 = 0;\n        if ( (unsigned int)sub_43B6F0(v9, v5, 0LL) )\n          return v6;\n        return (unsigned int)sub_44B7B0(v4, 1, 1, (unsigned int)a2, v8) == 0;\n      }\n    }\n    else if ( !dword_8E94D4[95 * v5] )\n    {\n      return 0;\n    }\n    v6 = 0;\n    if ( dword_8E9524[95 * (signed int)v5] )\n      return v6;\n    return (unsigned int)sub_44B7B0(v4, 1, 1, (unsigned int)a2, v8) == 0;\n  }\n  sub_4698B0(a2, v5);\n  return 0;\n}\n", 
            "funcStartAddr": "0x47b5a0L", 
            "funcEndAddr": "0x47b662L", 
            "funcName": "sub_47B5A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47B670(int a1, signed int a2, __int64 a3, int a4)\n{\n  signed __int64 v4; // rbx\n  unsigned int v5; // er14\n  __int64 v7; // r12\n  __int64 v8; // rax\n\n  v4 = a2 + (signed __int64)dword_94F590[a1];\n  if ( !a4 )\n  {\n    v7 = dword_94FED0[a1];\n    if ( dword_98A7F4 )\n    {\n      v5 = 0;\n      v8 = sub_43B050(v4, 0LL);\n      if ( !(_DWORD)v8 )\n        return v5;\n      if ( dword_98A7F4 )\n      {\n        v5 = 0;\n        if ( (unsigned int)sub_43B6F0(v8, v4, 0LL) )\n          return v5;\n        return dword_954FF0[19 * (a2 + v7)] != 0;\n      }\n    }\n    else if ( !dword_8E94D4[95 * v4] )\n    {\n      return 0;\n    }\n    v5 = 0;\n    if ( dword_8E9524[95 * (signed int)v4] )\n      return v5;\n    return dword_954FF0[19 * (a2 + v7)] != 0;\n  }\n  sub_4698B0(a2, v4);\n  return 0;\n}\n", 
            "funcStartAddr": "0x47b670L", 
            "funcEndAddr": "0x47b724L", 
            "funcName": "sub_47B670"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_47B790(int a1, unsigned int a2, unsigned int a3)\n{\n  int v3; // er15\n  int v4; // er13\n  int v5; // ebx\n  int v6; // er14\n  int v7; // er12\n  signed int v8; // ecx\n  _BOOL8 result; // rax\n  unsigned int v10; // [rsp+Ch] [rbp-3Ch]\n  int v11; // [rsp+10h] [rbp-38h]\n\n  v10 = a3;\n  v3 = dword_94F9F0[a1];\n  v4 = dword_94FE90[a1];\n  v11 = dword_94FEB0[a1];\n  v5 = dword_950350[a1];\n  v6 = dword_94FED0[a1];\n  v7 = dword_950330[a1];\n  v8 = sub_4083A0(a2 + dword_94F9D0[a1]);\n  result = 0LL;\n  if ( v8 >= 2 )\n    result = (unsigned int)sub_44B7B0(v10, 1, 6, a2, a2 + v3, a2 + v4, a2 + v11, a2 + v5, a2 + v6, a2 + v7) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x47b790L", 
            "funcEndAddr": "0x47b84cL", 
            "funcName": "sub_47B790"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_47B850@<rax>(unsigned int a1@<eax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  __int64 v4; // r15\n  unsigned int v5; // ebx\n  __int64 v6; // r14\n  __int64 v7; // r13\n  _BOOL4 v8; // er12\n  unsigned int v10; // [rsp+0h] [rbp-34h]\n\n  v4 = a4 + dword_94F570[a3];\n  v5 = a4 + dword_94FEB0[a3];\n  v6 = a4 + dword_94F550[a3];\n  v7 = a4 + dword_94F590[a3];\n  v8 = 0;\n  if ( (unsigned int)sub_44B7B0(a2, 1, 2, a4, v5, v5, __PAIR__(a2, a1)) )\n  {\n    v8 = 0;\n    if ( !(unsigned int)sub_44B7B0(v10, 1, 5, a4, (unsigned int)v4, v5, v4, v6, v6) )\n      v8 = (unsigned __int64)sub_44B7B0(v10, 1, 5, a4, (unsigned int)v4, v5, v4, v7, v7) == 0;\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x47b850L", 
            "funcEndAddr": "0x47b930L", 
            "funcName": "sub_47B850"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_47B950(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  signed int v5; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94F550[a1];\n  v5 = sub_4083A0(v4);\n  result = 1LL;\n  if ( v5 <= 1 )\n    result = (unsigned int)sub_44B7B0(v3, 0, 1, a2, v4) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x47b950L", 
            "funcEndAddr": "0x47b99fL", 
            "funcName": "sub_47B950"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47B9A0(int a1, unsigned int a2)\n{\n  int v2; // ebx\n  signed int v3; // ebp\n  _BOOL8 v4; // r15\n\n  v2 = dword_94F530[a1];\n  v3 = a2 + dword_94F550[a1];\n  LODWORD(v4) = 0;\n  if ( (unsigned int)sub_4083A0(v3) == 1 && (signed int)sub_4083A0(a2 + v2) >= 2 )\n    v4 = (unsigned int)sub_44AE70(a2, v3) != 0;\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x47b9a0L", 
            "funcEndAddr": "0x47b9fdL", 
            "funcName": "sub_47B9A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47BB10(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er15\n  unsigned int v4; // er13\n  __int64 v5; // r14\n  _BOOL8 v6; // r12\n  unsigned int v8; // [rsp+Ch] [rbp-44h]\n  int v9; // [rsp+10h] [rbp-40h]\n  __int64 v10; // [rsp+18h] [rbp-38h]\n\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = a2 + dword_94FA30[a1];\n  v10 = a2 + dword_950350[a1];\n  v5 = a2 + dword_94FED0[a1];\n  v9 = dword_94FE90[a1];\n  LODWORD(v6) = 0;\n  v8 = a3;\n  if ( (unsigned int)sub_44B5C0(a3, 4, a2, v3, v4, a2 + dword_94F590[a1], a2 + dword_94FA50[a1], v5) )\n    v6 = (unsigned int)sub_44B5C0(v8, 4, a2, v4, v3, a2 + v9, v10, v5) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x47bb10L", 
            "funcEndAddr": "0x47bbf2L", 
            "funcName": "sub_47BB10"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47BC50(int a1, unsigned int a2, unsigned int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11)\n{\n  unsigned int v11; // er14\n  int v12; // er15\n  int v13; // er12\n  _BOOL8 v14; // rbp\n  __int64 v16[7]; // [rsp+0h] [rbp-38h]\n\n  v11 = a3;\n  v12 = dword_94F590[a1];\n  v13 = dword_94F110[a1];\n  LODWORD(v14) = 0;\n  if ( (unsigned int)sub_44B230(\n                       3 - a3,\n                       1,\n                       4,\n                       a2 + dword_950370[a1],\n                       a2 + dword_950810[a1],\n                       a2 + dword_950CB0[a1],\n                       a4,\n                       a5,\n                       a6,\n                       a7,\n                       a8,\n                       a9,\n                       a10,\n                       a11,\n                       (unsigned __int8)a2 + LOBYTE(dword_951150[a1])) )\n  {\n    LODWORD(v16[0]) = a2 + v13;\n    v14 = (unsigned int)sub_44BB60(v11, 1, 2, a2, a2 + v12, a2, v16[0]) != 0;\n  }\n  return (unsigned int)v14;\n}\n", 
            "funcStartAddr": "0x47bc50L", 
            "funcEndAddr": "0x47bcfbL", 
            "funcName": "sub_47BC50"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47BD40(int a1, signed int a2, int a3)\n{\n  int v3; // er14\n  __int64 v4; // rax\n  signed __int64 v5; // rdi\n  signed __int64 v6; // rbx\n  unsigned int v7; // ebp\n  void *v8; // rdi\n\n  v3 = a3;\n  v4 = a1;\n  v5 = a2 + (signed __int64)dword_94F9F0[a1];\n  v6 = a2 + (signed __int64)dword_94F570[v4];\n  if ( dword_98A7F4 )\n  {\n    v7 = 0;\n    if ( (unsigned int)sub_43B050(v5, 0LL) )\n      return v7;\n    if ( dword_98A7F4 )\n    {\n      v7 = 0;\n      if ( (unsigned int)sub_43B050(v6, 0LL) )\n        return v7;\n      goto LABEL_8;\n    }\n  }\n  else\n  {\n    v7 = 0;\n    if ( dword_8E94D4[95 * v5] )\n      return v7;\n  }\n  v7 = 0;\n  if ( dword_8E94D4[95 * v6] )\n    return v7;\nLABEL_8:\n  v8 = &unk_927B28;\n  if ( v3 == 2 )\n    v8 = &unk_9333A0;\n  return (unsigned int)sub_41A340((__int64)v8, a2) == 3 - v3;\n}\n", 
            "funcStartAddr": "0x47bd40L", 
            "funcEndAddr": "0x47bdf3L", 
            "funcName": "sub_47BD40"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47BE00(int a1, unsigned int a2, int a3)\n{\n  unsigned int v3; // er13\n  unsigned int v4; // er12\n  __int64 v5; // r14\n  __int64 v6; // r15\n  __int64 v7; // r14\n  __int64 v8; // r15\n  __int64 v9; // rcx\n  _BOOL4 v10; // ebx\n  __int64 v11; // r14\n  unsigned int v13; // [rsp+Ch] [rbp-4Ch]\n  __int64 v14; // [rsp+10h] [rbp-48h]\n  unsigned int v15; // [rsp+1Ch] [rbp-3Ch]\n  __int64 v16; // [rsp+20h] [rbp-38h]\n\n  v3 = a2 + dword_94FE90[a1];\n  v4 = a2 + dword_94F0D0[a1];\n  v16 = a2 + dword_94F590[a1];\n  v15 = a2 + dword_94F530[a1];\n  v5 = dword_94F570[a1];\n  v6 = dword_94F0B0[a1];\n  v13 = a3;\n  if ( (signed int)sub_4099C0(v4, a3, 20, 0LL) < 2 )\n    goto LABEL_8;\n  v7 = (signed int)a2 + v5;\n  v8 = (signed int)a2 + v6;\n  v9 = v7;\n  if ( !dword_98A7F4 )\n  {\n    v11 = v8;\n    if ( !dword_8E94D4[95 * v8] )\n      goto LABEL_10;\nLABEL_8:\n    return 0;\n  }\n  v14 = v7;\n  v10 = 0;\n  v11 = v8;\n  if ( (unsigned int)sub_43B050(v8, 0LL) )\n    return (unsigned int)v10;\n  v9 = v14;\n  if ( dword_98A7F4 )\n  {\n    v10 = 0;\n    if ( (unsigned int)sub_43B050(v14, 0LL) )\n      return (unsigned int)v10;\n    goto LABEL_11;\n  }\nLABEL_10:\n  v14 = v9;\n  v10 = 0;\n  if ( dword_8E94D4[95 * v9] )\n    return (unsigned int)v10;\nLABEL_11:\n  v10 = 0;\n  if ( (unsigned int)sub_44B980(v13, 1, 4, a2, v3, v4, v16, v14, v11) )\n    v10 = (unsigned __int64)sub_44B7B0(v13, 1, 1, a2, v15) == 0;\n  return (unsigned int)v10;\n}\n", 
            "funcStartAddr": "0x47be00L", 
            "funcEndAddr": "0x47bf5dL", 
            "funcName": "sub_47BE00"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47BF60(int a1, unsigned int a2, int a3)\n{\n  unsigned int v3; // ebp\n  __int64 v4; // rbx\n  __int64 v5; // r12\n  __int64 v6; // r13\n  __int64 v7; // r15\n  __int64 v8; // r12\n  __int64 v9; // r13\n  __int64 v10; // r15\n  __int64 v11; // rcx\n  __int64 v12; // rbx\n  __int64 v14; // [rsp+8h] [rbp-50h]\n  unsigned int v15; // [rsp+18h] [rbp-40h]\n  unsigned int v16; // [rsp+1Ch] [rbp-3Ch]\n  __int64 v17; // [rsp+20h] [rbp-38h]\n\n  v3 = a2 + dword_94FE90[a1];\n  v4 = a2 + dword_94F590[a1];\n  v5 = dword_94F570[a1];\n  v6 = dword_94F0B0[a1];\n  v7 = dword_94F530[a1];\n  v16 = a2 + dword_94F0D0[a1];\n  v15 = 3 - a3;\n  if ( (signed int)sub_4099C0(v16, 3 - a3, 20, 0LL) < 2 )\n    goto LABEL_11;\n  v8 = (signed int)a2 + v5;\n  v9 = (signed int)a2 + v6;\n  v10 = (signed int)a2 + v7;\n  v11 = v9;\n  v17 = v4;\n  if ( !dword_98A7F4 )\n  {\n    if ( dword_8E94D4[95 * v9] )\n      goto LABEL_11;\n    goto LABEL_10;\n  }\n  v14 = v8;\n  LODWORD(v8) = 0;\n  v12 = v9;\n  if ( (unsigned int)sub_43B050(v9, 0LL) )\n    return (unsigned int)v8;\n  v8 = v14;\n  v11 = v9;\n  if ( !dword_98A7F4 )\n  {\nLABEL_10:\n    if ( !dword_8E94D4[95 * v8] )\n      goto LABEL_13;\nLABEL_11:\n    LODWORD(v8) = 0;\n    return (unsigned int)v8;\n  }\n  LODWORD(v8) = 0;\n  if ( (unsigned int)sub_43B050(v14, 0LL) )\n    return (unsigned int)v8;\n  v8 = v14;\n  v11 = v9;\n  if ( dword_98A7F4 )\n  {\n    LODWORD(v8) = 0;\n    if ( !(unsigned int)sub_43B050(v10, 0LL) )\n      goto LABEL_14;\n    return (unsigned int)v8;\n  }\nLABEL_13:\n  v12 = v11;\n  v14 = v8;\n  LODWORD(v8) = 0;\n  if ( !dword_8E94D4[95 * v10] )\nLABEL_14:\n    v8 = (unsigned int)sub_44B980(v15, 1, 4, a2, v3, v16, v17, v14, v12) != 0;\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x47bf60L", 
            "funcEndAddr": "0x47c0ebL", 
            "funcName": "sub_47BF60"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47C0F0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // er12\n  unsigned int v5; // er13\n  __int64 v6; // rbp\n  _BOOL4 v7; // ebx\n\n  v3 = a3;\n  v4 = a2 + dword_94FED0[a1];\n  v5 = a2 + dword_94FEF0[a1];\n  v6 = a2 + dword_94FA50[a1];\n  v7 = 0;\n  if ( (unsigned int)sub_44B7B0(3 - a3, 1, 3, v4, v5, (unsigned int)v6, v6) )\n    v7 = (unsigned __int64)sub_44B7B0(v3, 1, 4, a2, v4, v5, v6, v6) == 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47c0f0L", 
            "funcEndAddr": "0x47c193L", 
            "funcName": "sub_47C0F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47C1A0(int a1, int a2)\n{\n  signed __int64 v2; // rbx\n  __int64 v3; // r14\n  unsigned int v4; // er15\n  __int64 v5; // r14\n  __int64 v6; // rax\n  int v7; // eax\n\n  v2 = a2 + (signed __int64)dword_94F590[a1];\n  v3 = dword_94FA50[a1];\n  v4 = 0;\n  if ( (signed int)sub_4083A0(v2) >= 2 && dword_954FF0[19 * v2] == 1 )\n  {\n    v5 = a2 + v3;\n    if ( dword_98A7F4 )\n    {\n      v4 = 0;\n      v6 = sub_43B050(v5, 0LL);\n      if ( (_DWORD)v6 )\n      {\n        if ( dword_98A7F4 )\n        {\n          v7 = sub_43B6F0(v6, v5, 0LL);\n          return v7 == 0;\n        }\nLABEL_8:\n        v7 = dword_8E9524[95 * (signed int)v5];\n        return v7 == 0;\n      }\n    }\n    else if ( dword_8E94D4[95 * v5] )\n    {\n      goto LABEL_8;\n    }\n  }\n  return v4;\n}\n", 
            "funcStartAddr": "0x47c1a0L", 
            "funcEndAddr": "0x47c247L", 
            "funcName": "sub_47C1A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47C250(int a1, int a2)\n{\n  __int64 v2; // r14\n  unsigned int v3; // ebx\n  __int64 v4; // r14\n  __int64 v5; // rax\n  int v6; // eax\n\n  v2 = dword_94FA50[a1];\n  v3 = 0;\n  if ( (signed int)sub_4083A0(a2 + dword_94F590[a1]) >= 2 )\n  {\n    v4 = a2 + v2;\n    if ( dword_98A7F4 )\n    {\n      v3 = 0;\n      v5 = sub_43B050(v4, 0LL);\n      if ( (_DWORD)v5 )\n      {\n        if ( dword_98A7F4 )\n        {\n          v6 = sub_43B6F0(v5, v4, 0LL);\n          return v6 == 0;\n        }\nLABEL_7:\n        v6 = dword_8E9524[95 * (signed int)v4];\n        return v6 == 0;\n      }\n    }\n    else if ( dword_8E94D4[95 * v4] )\n    {\n      goto LABEL_7;\n    }\n  }\n  return v3;\n}\n", 
            "funcStartAddr": "0x47c250L", 
            "funcEndAddr": "0x47c2d8L", 
            "funcName": "sub_47C250"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47C330(int a1, unsigned int a2, int a3, int a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, double a9, double a10, __m128 a11, __m128 a12)\n{\n  int v12; // er14\n  unsigned int v13; // ebp\n  __int64 v14; // r8\n  __int64 v15; // r9\n  __m128 v16; // xmm4\n  __m128 v17; // xmm5\n  char v19; // [rsp+0h] [rbp-18h]\n\n  v12 = a3;\n  if ( !a4 )\n    return sub_44B0A0(a2, a2 + dword_94FEB0[a1]);\n  v13 = a2 + dword_94F5B0[a1];\n  sub_422B80(a2 + dword_94FA30[a1], a2);\n  if ( !(unsigned int)sub_44B230(v12, 1, 1, v13, v14, v15, a5, a6, a7, a8, v16, v17, a11, a12, v19) )\n    sub_422B80(v13, a2);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x47c330L", 
            "funcEndAddr": "0x47c397L", 
            "funcName": "sub_47C330"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47C460(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er15\n  __int64 v4; // rbx\n  __int64 v5; // r14\n  __int64 v6; // r13\n  _BOOL8 v7; // r12\n  unsigned int v9; // [rsp+14h] [rbp-5Ch]\n  int v10; // [rsp+20h] [rbp-50h]\n  int v11; // [rsp+28h] [rbp-48h]\n  int v12; // [rsp+30h] [rbp-40h]\n  int v13; // [rsp+38h] [rbp-38h]\n\n  v3 = a2 + dword_94F550[a1];\n  v4 = a2 + dword_94F530[a1];\n  v13 = dword_94F0D0[a1];\n  v5 = a2 + dword_94F9F0[a1];\n  v6 = a2 + dword_94F570[a1];\n  v12 = dword_94FEB0[a1];\n  v11 = dword_94FA30[a1];\n  v10 = dword_94F0B0[a1];\n  LODWORD(v7) = 0;\n  v9 = a3;\n  if ( (unsigned int)sub_44B7B0(a3, 1, 5, a2, (unsigned int)v5, v3, v6, v4, v5) )\n    v7 = (unsigned int)sub_44B7B0(v9, 1, 8, a2, (unsigned int)v5, v3, v6, v4, a2 + v12, a2 + v13, a2 + v11, a2 + v10) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47c460L", 
            "funcEndAddr": "0x47c576L", 
            "funcName": "sub_47C460"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_47C580(int a1, int a2, int a3)\n{\n  signed int v3; // esi\n  void *v4; // rdi\n\n  v3 = dword_94F9D0[a1] + a2;\n  v4 = &unk_927B28;\n  if ( a3 == 2 )\n    v4 = &unk_9333A0;\n  return (unsigned int)sub_41A430((__int64)v4, v3) != 3 - a3;\n}\n", 
            "funcStartAddr": "0x47c580L", 
            "funcEndAddr": "0x47c5b3L", 
            "funcName": "sub_47C580"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_47C5E0(int a1, int a2, int a3)\n{\n  signed int v3; // esi\n  void *v4; // rdi\n\n  v3 = dword_94F9D0[a1] + a2;\n  v4 = &unk_927B28;\n  if ( a3 == 2 )\n    v4 = &unk_9333A0;\n  return (unsigned int)sub_41A430((__int64)v4, v3) != 3 - a3;\n}\n", 
            "funcStartAddr": "0x47c5e0L", 
            "funcEndAddr": "0x47c613L", 
            "funcName": "sub_47C5E0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_47C620(int a1, int a2, int a3)\n{\n  signed int v3; // esi\n  void *v4; // rdi\n\n  v3 = dword_94F110[a1] + a2;\n  v4 = &unk_927B28;\n  if ( a3 == 2 )\n    v4 = &unk_9333A0;\n  return (unsigned int)sub_41A430((__int64)v4, v3) != 3 - a3;\n}\n", 
            "funcStartAddr": "0x47c620L", 
            "funcEndAddr": "0x47c653L", 
            "funcName": "sub_47C620"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47C660(int a1, int a2)\n{\n  signed int v2; // ebp\n  signed int v3; // ebx\n\n  v2 = a2 + dword_950350[a1];\n  v3 = dword_94FED0[a1] + a2;\n  sub_4217E0(a2 + dword_9507D0[a1]);\n  sub_4217E0(v2);\n  sub_4217E0(v3);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x47c660L", 
            "funcEndAddr": "0x47c69dL", 
            "funcName": "sub_47C660"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47C6A0(int a1, int a2)\n{\n  signed int v2; // ebp\n  signed int v3; // ebx\n\n  v2 = a2 + dword_950390[a1];\n  v3 = dword_94FF10[a1] + a2;\n  sub_4217E0(a2 + dword_950810[a1]);\n  sub_4217E0(v2);\n  sub_4217E0(v3);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x47c6a0L", 
            "funcEndAddr": "0x47c6ddL", 
            "funcName": "sub_47C6A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47C6E0(int a1, int a2)\n{\n  signed int v2; // ebp\n  signed int v3; // ebx\n\n  v2 = a2 + dword_950350[a1];\n  v3 = dword_94FED0[a1] + a2;\n  sub_4217E0(a2 + dword_9507D0[a1]);\n  sub_4217E0(v2);\n  sub_4217E0(v3);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x47c6e0L", 
            "funcEndAddr": "0x47c71dL", 
            "funcName": "sub_47C6E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47C720(int a1, signed int a2)\n{\n  signed int v2; // er14\n  signed int v3; // er15\n  signed int v4; // ebp\n\n  v2 = a2 + dword_94F0F0[a1];\n  v3 = a2 + dword_94F570[a1];\n  v4 = a2 + dword_94F530[a1];\n  sub_421440(a2, a2 + dword_94EC30[a1], a2 + dword_94FEB0[a1]);\n  sub_4215F0(a2, v3, v4);\n  sub_4217E0(v2);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x47c720L", 
            "funcEndAddr": "0x47c785L", 
            "funcName": "sub_47C720"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_47C790(int a1, int a2, int a3)\n{\n  int v3; // er12\n  int v4; // er14\n  signed int v5; // esi\n  int v6; // er15\n  int v7; // ebp\n  void *v8; // rbx\n  int v9; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a2 + dword_94F090[a1];\n  v6 = dword_950310[a1];\n  v7 = 3 - a3;\n  v8 = &unk_927B28;\n  if ( a3 == 2 )\n    v8 = &unk_9333A0;\n  v9 = sub_41A570((__int64)v8, v5);\n  result = 0LL;\n  if ( v9 != v3 )\n    result = (unsigned int)sub_41A430((__int64)v8, v4 + v6) != v7;\n  return result;\n}\n", 
            "funcStartAddr": "0x47c790L", 
            "funcEndAddr": "0x47c7fdL", 
            "funcName": "sub_47C790"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_47C800(int a1, int a2, int a3)\n{\n  int v3; // er12\n  int v4; // er14\n  signed int v5; // esi\n  int v6; // er15\n  int v7; // ebp\n  void *v8; // rbx\n  int v9; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a2 + dword_94EBF0[a1];\n  v6 = dword_94FE70[a1];\n  v7 = 3 - a3;\n  v8 = &unk_927B28;\n  if ( a3 == 2 )\n    v8 = &unk_9333A0;\n  v9 = sub_41A570((__int64)v8, v5);\n  result = 0LL;\n  if ( v9 != v3 )\n    result = (unsigned int)sub_41A430((__int64)v8, v4 + v6) != v7;\n  return result;\n}\n", 
            "funcStartAddr": "0x47c800L", 
            "funcEndAddr": "0x47c86dL", 
            "funcName": "sub_47C800"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_47C920(int a1, signed int a2, unsigned int a3, int a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __m128 a12, __int64 a13, __int64 a14, char a15)\n{\n  signed int v15; // ebp\n\n  if ( !a4 )\n    return sub_44B230(\n             a3,\n             1,\n             2,\n             (unsigned int)(dword_9507F0[a1] + a2),\n             (unsigned int)(a2 + dword_950810[a1]),\n             a3,\n             a5,\n             a6,\n             a7,\n             a8,\n             a9,\n             a10,\n             a11,\n             a12,\n             a15);\n  v15 = a2 + dword_950370[a1];\n  sub_422B80(a2 + dword_94FEF0[a1], a2);\n  sub_422B80(v15, a2);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x47c920L", 
            "funcEndAddr": "0x47c988L", 
            "funcName": "sub_47C920"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47C990(int a1, int a2)\n{\n  signed int v2; // ebx\n\n  v2 = dword_94F110[a1] + a2;\n  sub_4217E0(a2 + dword_94FA70[a1]);\n  sub_4217E0(v2);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x47c990L", 
            "funcEndAddr": "0x47c9b6L", 
            "funcName": "sub_47C990"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_47CB10(int a1, int a2)\n{\n  signed __int64 v2; // rbx\n  int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = a2 + (signed __int64)dword_94F0B0[a1];\n  v3 = sub_469E20(a2, v2);\n  result = 1LL;\n  if ( !v3 )\n    result = dword_954FF0[19 * v2] == 2;\n  return result;\n}\n", 
            "funcStartAddr": "0x47cb10L", 
            "funcEndAddr": "0x47cb48L", 
            "funcName": "sub_47CB10"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_47CB50(int a1, int a2)\n{\n  signed __int64 v2; // rbx\n  int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = a2 + (signed __int64)dword_94EC10[a1];\n  v3 = sub_469E20(a2, v2);\n  result = 1LL;\n  if ( !v3 )\n    result = dword_954FF0[19 * v2] == 2;\n  return result;\n}\n", 
            "funcStartAddr": "0x47cb50L", 
            "funcEndAddr": "0x47cb88L", 
            "funcName": "sub_47CB50"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_47CC80@<rax>(char a1@<al>, int a2@<edx>, int a3@<edi>, int a4@<esi>, __int64 a5@<r9>, __m128 a6@<xmm0>, __m128 a7@<xmm1>, __m128 a8@<xmm2>, __m128 a9@<xmm3>, __m128 a10@<xmm4>, __m128 a11@<xmm5>, __m128 a12@<xmm6>, __m128 a13@<xmm7>)\n{\n  int v13; // er15\n  int v14; // er14\n  int v15; // er12\n  int v16; // er13\n  _BOOL8 v17; // rbx\n  __m128 v18; // xmm4\n  __m128 v19; // xmm5\n  char v21; // [rsp-8h] [rbp-38h]\n\n  v13 = a2;\n  v14 = dword_94EC50[a3];\n  v15 = dword_94F0F0[a3];\n  v16 = dword_94EC70[a3];\n  LODWORD(v17) = 0;\n  if ( (unsigned int)sub_44B230(\n                       a2,\n                       1,\n                       2,\n                       (unsigned int)(a4 + dword_94F530[a3]),\n                       (unsigned int)(a4 + dword_94F9D0[a3]),\n                       a5,\n                       a6,\n                       a7,\n                       a8,\n                       a9,\n                       a10,\n                       a11,\n                       a12,\n                       a13,\n                       a1) )\n    v17 = (unsigned int)sub_44B230(\n                          3 - v13,\n                          1,\n                          3,\n                          (unsigned int)(a4 + v14),\n                          (unsigned int)(a4 + v15),\n                          (unsigned int)(a4 + v16),\n                          a6,\n                          a7,\n                          a8,\n                          a9,\n                          v18,\n                          v19,\n                          a12,\n                          a13,\n                          v21) != 0;\n  return (unsigned int)v17;\n}\n", 
            "funcStartAddr": "0x47cc80L", 
            "funcEndAddr": "0x47cd1cL", 
            "funcName": "sub_47CC80"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47CD20(int a1, int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __int64 a12, __int64 a13, __int64 a14)\n{\n  int v14; // er14\n  int v15; // er15\n  int v16; // ebx\n  _BOOL8 v17; // rbp\n  __int64 v18; // r9\n  __m128 v19; // xmm4\n  __m128 v20; // xmm5\n  char v22; // [rsp+0h] [rbp-28h]\n  char v23; // [rsp+0h] [rbp-28h]\n\n  v14 = dword_94FA50[a1];\n  v15 = dword_94FEF0[a1];\n  v16 = 3 - a3;\n  LODWORD(v17) = 0;\n  if ( (unsigned int)sub_44B230(\n                       3 - a3,\n                       1,\n                       2,\n                       (unsigned int)(a2 + dword_950770[a1]),\n                       (unsigned int)(a2 + dword_950750[a1]),\n                       a14,\n                       a4,\n                       a5,\n                       a6,\n                       a7,\n                       a8,\n                       a9,\n                       a10,\n                       a11,\n                       v22) )\n    v17 = (unsigned int)sub_44B230(\n                          v16,\n                          1,\n                          2,\n                          (unsigned int)(a2 + v14),\n                          (unsigned int)(a2 + v15),\n                          v18,\n                          a4,\n                          a5,\n                          a6,\n                          a7,\n                          v19,\n                          v20,\n                          a10,\n                          a11,\n                          v23) != 0;\n  return (unsigned int)v17;\n}\n", 
            "funcStartAddr": "0x47cd20L", 
            "funcEndAddr": "0x47cda5L", 
            "funcName": "sub_47CD20"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47CEB0(int a1, signed int a2)\n{\n  signed int v2; // ebp\n  signed int v3; // er14\n  signed int v4; // er15\n  signed int v5; // er12\n  signed int v6; // er13\n\n  v2 = a2 + dword_94FEF0[a1];\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = a2 + dword_94FF10[a1];\n  v5 = a2 + dword_950390[a1];\n  v6 = a2 + dword_94F5D0[a1];\n  sub_422B80(a2 + dword_94FA70[a1], a2);\n  sub_422B80(v2, a2);\n  sub_422B80(v3, a2);\n  sub_422B80(v4, a2);\n  sub_422B80(v5, a2);\n  sub_422B80(v6, a2);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x47ceb0L", 
            "funcEndAddr": "0x47cf45L", 
            "funcName": "sub_47CEB0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_47CFA0(int a1, signed int a2, int a3, int a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __m128 a12)\n{\n  signed int v12; // ebp\n  signed __int64 result; // rax\n  __int64 v14; // ST18_8\n  __int64 v15; // ST10_8\n  __int64 v16; // ST08_8\n\n  if ( a4 )\n  {\n    v12 = a2 + dword_94F590[a1];\n    sub_422B80(a2 + dword_9503B0[a1], a2);\n    sub_422B80(v12, a2);\n    result = 0LL;\n  }\n  else\n  {\n    v14 = (unsigned int)(a2 + dword_94E7B0[a1]);\n    v15 = (unsigned int)(a2 + dword_94E330[a1]);\n    v16 = (unsigned int)(a2 + dword_94DE90[a1]);\n    result = sub_44B230(\n               a3,\n               1,\n               7,\n               (unsigned int)(dword_94D9D0[a1] + a2),\n               (unsigned int)(a2 + dword_94DE70[a1]),\n               (unsigned int)(a2 + dword_94E310[a1]),\n               a5,\n               a6,\n               a7,\n               a8,\n               a9,\n               a10,\n               a11,\n               a12,\n               (unsigned __int8)a2 + LOBYTE(dword_94D9F0[a1]));\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x47cfa0L", 
            "funcEndAddr": "0x47d04fL", 
            "funcName": "sub_47CFA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47D050(int a1, signed int a2)\n{\n  signed int v2; // ebp\n  signed int v3; // er14\n\n  v2 = a2 + dword_94FA50[a1];\n  v3 = a2 + dword_94F5B0[a1];\n  sub_422B80(a2 + dword_94FEF0[a1], a2);\n  sub_422B80(v2, a2);\n  sub_422B80(v3, a2);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x47d050L", 
            "funcEndAddr": "0x47d095L", 
            "funcName": "sub_47D050"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_47D100(int a1, int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11)\n{\n  __int64 v11; // ST08_8\n\n  v11 = (unsigned int)(dword_94F590[a1] + a2);\n  return sub_44B230(\n           a3,\n           1,\n           5,\n           (unsigned int)(a2 + dword_94EC30[a1]),\n           (unsigned int)(a2 + dword_94F0D0[a1]),\n           (unsigned int)(a2 + dword_94EC50[a1]),\n           a4,\n           a5,\n           a6,\n           a7,\n           a8,\n           a9,\n           a10,\n           a11,\n           (unsigned __int8)a2 + LOBYTE(dword_94F0F0[a1]));\n}\n", 
            "funcStartAddr": "0x47d100L", 
            "funcEndAddr": "0x47d15cL", 
            "funcName": "sub_47D100"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_47D1D0(int a1, int a2)\n{\n  int v2; // ebx\n  int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_94F530[a1] + a2;\n  v3 = sub_4083A0(v2);\n  result = 0LL;\n  if ( v3 == 3 )\n    result = (unsigned int)sub_469430(v2) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x47d1d0L", 
            "funcEndAddr": "0x47d1ffL", 
            "funcName": "sub_47D1D0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_47D200(int a1, int a2)\n{\n  int v2; // ebx\n  signed int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_94F9D0[a1] + a2;\n  v3 = sub_4083A0(v2);\n  result = 0LL;\n  if ( v3 <= 3 )\n    result = (unsigned int)sub_469430(v2) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x47d200L", 
            "funcEndAddr": "0x47d22fL", 
            "funcName": "sub_47D200"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_47D230(int a1, int a2)\n{\n  int v2; // ebx\n  int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_94F0B0[a1] + a2;\n  v3 = sub_4083A0(v2);\n  result = 0LL;\n  if ( v3 == 5 )\n    result = (unsigned int)sub_469430(v2) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x47d230L", 
            "funcEndAddr": "0x47d25fL", 
            "funcName": "sub_47D230"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_47D260(int a1, int a2)\n{\n  int v2; // ebx\n  int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_94F0B0[a1] + a2;\n  v3 = sub_4083A0(v2);\n  result = 0LL;\n  if ( v3 == 5 )\n    result = (unsigned int)sub_469430(v2) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x47d260L", 
            "funcEndAddr": "0x47d28fL", 
            "funcName": "sub_47D260"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_47D290(int a1, int a2)\n{\n  int v2; // ebx\n  int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_94F550[a1] + a2;\n  v3 = sub_4083A0(v2);\n  result = 0LL;\n  if ( v3 == 5 )\n    result = (unsigned int)sub_469430(v2) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x47d290L", 
            "funcEndAddr": "0x47d2bfL", 
            "funcName": "sub_47D290"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_47D2C0(int a1, int a2)\n{\n  int v2; // ebx\n  int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_94F530[a1] + a2;\n  v3 = sub_4083A0(v2);\n  result = 0LL;\n  if ( v3 == 4 )\n    result = (unsigned int)sub_469430(v2) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x47d2c0L", 
            "funcEndAddr": "0x47d2efL", 
            "funcName": "sub_47D2C0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_47D2F0(int a1, int a2)\n{\n  int v2; // ebx\n  int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_94F510[a1] + a2;\n  v3 = sub_4083A0(v2);\n  result = 0LL;\n  if ( v3 == 3 )\n    result = (unsigned int)sub_469430(v2) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x47d2f0L", 
            "funcEndAddr": "0x47d31fL", 
            "funcName": "sub_47D2F0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_47D320(int a1, int a2)\n{\n  int v2; // ebx\n  int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_94F070[a1] + a2;\n  v3 = sub_4083A0(v2);\n  result = 0LL;\n  if ( v3 == 3 )\n    result = (unsigned int)sub_469430(v2) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x47d320L", 
            "funcEndAddr": "0x47d34fL", 
            "funcName": "sub_47D320"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_47D350(int a1, int a2)\n{\n  int v2; // ebx\n  int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_94F530[a1] + a2;\n  v3 = sub_4083A0(v2);\n  result = 0LL;\n  if ( v3 == 4 )\n    result = (unsigned int)sub_469430(v2) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x47d350L", 
            "funcEndAddr": "0x47d37fL", 
            "funcName": "sub_47D350"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47D380(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er15\n  unsigned int v4; // er12\n  signed int v5; // esi\n  unsigned int v6; // ebp\n  __int64 v7; // r14\n  void *v8; // rdi\n  unsigned int v9; // ebx\n  __int64 v10; // r14\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a2 + dword_94F9F0[a1];\n  v6 = v4 + dword_94F570[a1];\n  v7 = dword_94FA30[a1];\n  v8 = &unk_927B28;\n  if ( a3 == 2 )\n    v8 = &unk_9333A0;\n  v9 = 0;\n  if ( (unsigned int)sub_41A430((__int64)v8, v5) == a3 )\n  {\n    v9 = 0;\n    if ( (unsigned int)sub_44B7B0(v3, 1, 2, v4, v6, v6) )\n    {\n      v10 = (signed int)v4 + v7;\n      if ( dword_98A7F4 )\n      {\n        if ( (unsigned int)sub_43B050(v10, 0LL) )\n          return (unsigned int)sub_44B7B0(v3, 0, 1, v4, (unsigned int)v10) == 0;\n      }\n      else if ( dword_8E94D4[95 * v10] )\n      {\n        return (unsigned int)sub_44B7B0(v3, 0, 1, v4, (unsigned int)v10) == 0;\n      }\n      return 1;\n    }\n  }\n  return v9;\n}\n", 
            "funcStartAddr": "0x47d380L", 
            "funcEndAddr": "0x47d44eL", 
            "funcName": "sub_47D380"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_47D450@<rax>(char a1@<al>, int a2@<edx>, int a3@<edi>, int a4@<esi>, __m128 a5@<xmm0>, __m128 a6@<xmm1>, __m128 a7@<xmm2>, __m128 a8@<xmm3>, __m128 a9@<xmm6>, __m128 a10@<xmm7>)\n{\n  int v10; // er13\n  int v11; // ebp\n  signed int v12; // esi\n  int v13; // er15\n  unsigned int v14; // er14\n  unsigned int v15; // er12\n  void *v16; // rdi\n  __int64 v17; // r8\n  __int64 v18; // r9\n  __m128 v19; // xmm4\n  __m128 v20; // xmm5\n  _BOOL4 v21; // ebx\n  __int64 v22; // r9\n  __m128 v23; // xmm4\n  __m128 v24; // xmm5\n  char v26; // [rsp-8h] [rbp-38h]\n  char v27; // [rsp-8h] [rbp-38h]\n\n  v26 = a1;\n  v10 = a2;\n  v11 = a4;\n  v12 = a4 + dword_94F0F0[a3];\n  v13 = dword_94F9F0[a3];\n  v14 = v11 + dword_94F550[a3];\n  v15 = v11 + dword_94FE90[a3];\n  v16 = &unk_927B28;\n  if ( a2 == 2 )\n    v16 = &unk_9333A0;\n  v21 = 0;\n  if ( (unsigned int)sub_41A430((__int64)v16, v12) == a2 )\n  {\n    v21 = 1;\n    if ( (unsigned int)sub_44B230(\n                         v10,\n                         1,\n                         1,\n                         (unsigned int)(v11 + v13),\n                         v17,\n                         v18,\n                         a5,\n                         a6,\n                         a7,\n                         a8,\n                         v19,\n                         v20,\n                         a9,\n                         a10,\n                         v26) )\n      v21 = (unsigned __int64)sub_44B230(v10, 1, 2, v14, v15, v22, a5, a6, a7, a8, v23, v24, a9, a10, v27) == 0;\n  }\n  return (unsigned int)v21;\n}\n", 
            "funcStartAddr": "0x47d450L", 
            "funcEndAddr": "0x47d4fdL", 
            "funcName": "sub_47D450"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_47D500(int a1, int a2, int a3)\n{\n  signed int v3; // esi\n  void *v4; // rdi\n\n  v3 = dword_950350[a1] + a2;\n  v4 = &unk_927B28;\n  if ( a3 == 2 )\n    v4 = &unk_9333A0;\n  return (unsigned int)sub_41A430((__int64)v4, v3) == a3;\n}\n", 
            "funcStartAddr": "0x47d500L", 
            "funcEndAddr": "0x47d52eL", 
            "funcName": "sub_47D500"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47D530(int a1, signed int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // r12\n  __int64 v5; // r15\n  void *v6; // rdi\n  __int64 v7; // r12\n  __int64 v8; // r15\n  _BOOL8 v9; // rbx\n\n  v3 = a3;\n  v4 = dword_94F570[a1];\n  v5 = dword_94F9F0[a1];\n  v6 = &unk_927B28;\n  if ( a3 == 2 )\n    v6 = &unk_9333A0;\n  if ( (unsigned int)sub_41A430((__int64)v6, a2) != 3 - a3 )\n    goto LABEL_11;\n  v7 = a2 + v4;\n  v8 = a2 + v5;\n  if ( dword_98A7F4 )\n  {\n    LODWORD(v9) = 0;\n    if ( (unsigned int)sub_43B050(v7, 0LL) )\n      return (unsigned int)v9;\n    if ( dword_98A7F4 )\n    {\n      LODWORD(v9) = 0;\n      if ( (unsigned int)sub_43B050(v8, 0LL) )\n        return (unsigned int)v9;\n      goto LABEL_13;\n    }\n  }\n  else if ( dword_8E94D4[95 * v7] )\n  {\nLABEL_11:\n    LODWORD(v9) = 0;\n    return (unsigned int)v9;\n  }\n  if ( dword_8E94D4[95 * v8] )\n    goto LABEL_11;\nLABEL_13:\n  LODWORD(v9) = 0;\n  if ( (unsigned int)sub_43F100(a2, v3) )\n    v9 = (unsigned int)sub_44B980(v3, 1, 1, (unsigned int)a2, (unsigned int)v7, (unsigned int)v8) != 0;\n  return (unsigned int)v9;\n}\n", 
            "funcStartAddr": "0x47d530L", 
            "funcEndAddr": "0x47d614L", 
            "funcName": "sub_47D530"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_47D620(int a1, int a2, int a3)\n{\n  signed int v3; // esi\n  void *v4; // rdi\n\n  v3 = dword_950330[a1] + a2;\n  v4 = &unk_927B28;\n  if ( a3 == 2 )\n    v4 = &unk_9333A0;\n  return (unsigned int)sub_41A430((__int64)v4, v3) == a3;\n}\n", 
            "funcStartAddr": "0x47d620L", 
            "funcEndAddr": "0x47d64eL", 
            "funcName": "sub_47D620"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_47D680(__int64 a1, signed int a2, int a3)\n{\n  void *v3; // rdi\n\n  v3 = &unk_927B28;\n  if ( a3 == 2 )\n    v3 = &unk_9333A0;\n  return (unsigned int)sub_41A340((__int64)v3, a2) != a3;\n}\n", 
            "funcStartAddr": "0x47d680L", 
            "funcEndAddr": "0x47d6a4L", 
            "funcName": "sub_47D680"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47D820(int a1, unsigned int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebp\n  _BOOL4 v6; // ebx\n  unsigned int v7; // er15\n  int v8; // ebp\n\n  v4 = a3;\n  v5 = a2 + dword_94FEF0[a1];\n  if ( a4 )\n  {\n    sub_422B80(v5, a2);\n    v6 = 0;\n  }\n  else\n  {\n    v7 = a2 + dword_94FA30[a1];\n    v6 = 0;\n    if ( (unsigned int)sub_44B7B0(a3, 1, 1, v5, v7) )\n    {\n      v8 = sub_44B7B0(v4, 1, 1, v5, v7);\n      v6 = v8 == (unsigned __int64)sub_44B7B0(v4, 1, 1, a2, v7);\n    }\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x47d820L", 
            "funcEndAddr": "0x47d8beL", 
            "funcName": "sub_47D820"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47D940(int a1, unsigned int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er14\n  _BOOL4 v5; // ebp\n  unsigned int v6; // er15\n  int v7; // er12\n\n  v4 = a3;\n  if ( a4 )\n  {\n    sub_422B80(a2 + dword_94F0D0[a1], a2);\n    v5 = 0;\n  }\n  else\n  {\n    v6 = a2 + dword_94F530[a1];\n    v7 = a2 + dword_94F0B0[a1];\n    v5 = 0;\n    if ( (unsigned int)sub_4083A0(a2 + dword_94F530[a1]) == 2 && (signed int)sub_4083A0(v7) >= 2 )\n      v5 = (unsigned __int64)sub_44B7B0(v4, 1, 1, a2, v6) == 0;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x47d940L", 
            "funcEndAddr": "0x47d9c6L", 
            "funcName": "sub_47D940"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47D9D0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // ebx\n  unsigned int v5; // er15\n  _BOOL4 v6; // er12\n\n  v3 = a3;\n  v4 = dword_94F550[a1];\n  v5 = a2 + dword_94FE90[a1];\n  if ( (unsigned int)sub_44ADE0(a2, a3, a2 + dword_94F9F0[a1]) )\n  {\n    v6 = 0;\n    if ( !(unsigned int)sub_44B7B0(v3, 1, 1, a2, a2 + v4) )\n      v6 = (unsigned __int64)sub_44B7B0(v3, 1, 1, a2, v5) == 0;\n  }\n  else\n  {\n    v6 = 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x47d9d0L", 
            "funcEndAddr": "0x47da5eL", 
            "funcName": "sub_47D9D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47DA60(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // rbx\n  unsigned int v5; // er15\n  __int64 v6; // r13\n  _BOOL8 v7; // r12\n\n  v3 = a3;\n  v4 = a2 + dword_94FE90[a1];\n  v5 = a2 + dword_94FEB0[a1];\n  v6 = a2 + dword_950350[a1];\n  LODWORD(v7) = 1;\n  if ( !(unsigned int)sub_44B7B0(a3, 1, 4, a2, (unsigned int)v4, v5, v6, v4) )\n    v7 = (unsigned int)sub_44B7B0(v3, 1, 4, a2, (unsigned int)v4, v5, v6, v6) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47da60L", 
            "funcEndAddr": "0x47db04L", 
            "funcName": "sub_47DA60"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47DB10(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // rbx\n  unsigned int v4; // er15\n  __int64 v5; // r13\n  __int64 v6; // r14\n  _BOOL4 v7; // er12\n  unsigned int v9; // [rsp+0h] [rbp-34h]\n\n  v3 = a2 + dword_950330[a1];\n  v4 = a2 + dword_950350[a1];\n  v5 = a2 + dword_9507F0[a1];\n  v6 = a2 + dword_94FEB0[a1];\n  v7 = 0;\n  v9 = a3;\n  if ( (unsigned int)sub_44B980(a3, 1, 4, a2, (unsigned int)v3, v4, v5, v3, v5) )\n    v7 = (unsigned __int64)sub_44B980(v9, 0, 5, a2, (unsigned int)v3, v4, v6, v5, v3, v6) == 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47db10L", 
            "funcEndAddr": "0x47dbc8L", 
            "funcName": "sub_47DB10"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47DC80(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // ebx\n  unsigned int v5; // er15\n  _BOOL4 v6; // er12\n\n  v3 = a3;\n  v4 = dword_94F0D0[a1];\n  v5 = a2 + dword_94F590[a1];\n  if ( (unsigned int)sub_44ADE0(a2, a3, a2 + dword_94F570[a1]) )\n  {\n    v6 = 0;\n    if ( !(unsigned int)sub_44B7B0(v3, 1, 1, a2, a2 + v4) )\n      v6 = (unsigned __int64)sub_44B7B0(v3, 1, 1, a2, v5) == 0;\n  }\n  else\n  {\n    v6 = 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x47dc80L", 
            "funcEndAddr": "0x47dd0eL", 
            "funcName": "sub_47DC80"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47DE00(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // rbp\n  __int64 v4; // r13\n  __int64 v5; // r12\n  __int64 v6; // r14\n  _BOOL8 v7; // r15\n  unsigned int v9; // [rsp+14h] [rbp-3Ch]\n  __int64 v10; // [rsp+18h] [rbp-38h]\n\n  v3 = a2 + dword_94F0F0[a1];\n  v4 = a2 + dword_94F0D0[a1];\n  v5 = a2 + dword_94F570[a1];\n  v6 = a2 + dword_94EC50[a1];\n  v10 = a2 + dword_94F590[a1];\n  LODWORD(v7) = 0;\n  v9 = a3;\n  if ( (unsigned int)sub_44B980(a3, 1, 4, a2, (unsigned int)v3, (unsigned int)v4, v5, v3, v5) )\n  {\n    LODWORD(v7) = 0;\n    if ( (unsigned int)sub_44B980(v9, 1, 4, a2, (unsigned int)v4, (unsigned int)v3, v6, v4, v6) )\n      v7 = (unsigned int)sub_44B980(v9, 0, 2, a2, (unsigned int)v5, a2, v10) != 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47de00L", 
            "funcEndAddr": "0x47defcL", 
            "funcName": "sub_47DE00"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47DF00(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // rbp\n  __int64 v4; // r13\n  __int64 v5; // r12\n  int v6; // er14\n  _BOOL8 v7; // r15\n  unsigned int v9; // [rsp+14h] [rbp-3Ch]\n  __int64 v10; // [rsp+18h] [rbp-38h]\n\n  v3 = a2 + dword_94F0F0[a1];\n  v4 = a2 + dword_94F0D0[a1];\n  v5 = a2 + dword_94F570[a1];\n  v10 = a2 + dword_94F590[a1];\n  v6 = dword_94EC50[a1];\n  LODWORD(v7) = 0;\n  v9 = a3;\n  if ( (unsigned int)sub_44B980(a3, 1, 4, a2, (unsigned int)v3, (unsigned int)v4, v5, v3, v5) )\n  {\n    LODWORD(v7) = 0;\n    if ( !(unsigned int)sub_44B980(v9, 0, 3, a2, (unsigned int)v4, (unsigned int)v3, v4, a2 + v6) )\n      v7 = (unsigned int)sub_44B980(v9, 0, 2, a2, (unsigned int)v5, a2, v10) != 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47df00L", 
            "funcEndAddr": "0x47dff6L", 
            "funcName": "sub_47DF00"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47E000(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r14\n  __int64 v4; // r15\n  __int64 v5; // rbx\n  __int64 v6; // r13\n  _BOOL8 v7; // r12\n  unsigned int v9; // [rsp+0h] [rbp-34h]\n\n  v3 = a2 + dword_94F0D0[a1];\n  v4 = a2 + dword_94F0B0[a1];\n  v5 = a2 + dword_94F550[a1];\n  v6 = a2 + dword_94EC30[a1];\n  LODWORD(v7) = 0;\n  v9 = a3;\n  if ( (unsigned int)sub_44B980(a3, 1, 4, a2, (unsigned int)v3, (unsigned int)v4, v5, v3, v5) )\n    v7 = (unsigned int)sub_44B980(v9, 1, 4, a2, (unsigned int)v4, (unsigned int)v3, v6, v4, v6) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47e000L", 
            "funcEndAddr": "0x47e0baL", 
            "funcName": "sub_47E000"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47E0C0(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r14\n  __int64 v4; // r15\n  __int64 v5; // rbx\n  int v6; // er13\n  _BOOL4 v7; // er12\n  unsigned int v9; // [rsp+0h] [rbp-34h]\n\n  v3 = a2 + dword_94F0D0[a1];\n  v4 = a2 + dword_94F0B0[a1];\n  v5 = a2 + dword_94F550[a1];\n  v6 = dword_94EC30[a1];\n  v7 = 0;\n  v9 = a3;\n  if ( (unsigned int)sub_44B980(a3, 1, 4, a2, (unsigned int)v3, (unsigned int)v4, v5, v3, v5) )\n    v7 = (unsigned __int64)sub_44B980(v9, 0, 3, a2, (unsigned int)v4, (unsigned int)v3, v4, a2 + v6) == 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47e0c0L", 
            "funcEndAddr": "0x47e174L", 
            "funcName": "sub_47E0C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47E180(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r14\n  __int64 v4; // r15\n  __int64 v5; // r13\n  _BOOL8 v6; // r12\n  unsigned int v8; // [rsp+0h] [rbp-34h]\n\n  v3 = a2 + dword_94F0D0[a1];\n  v4 = a2 + dword_94F0B0[a1];\n  v5 = a2 + dword_94EC30[a1];\n  LODWORD(v6) = 0;\n  v8 = a3;\n  if ( !(unsigned int)sub_44B980(a3, 0, 3, a2, (unsigned int)v3, (unsigned int)v4, v3, a2 + dword_94F550[a1]) )\n    v6 = (unsigned int)sub_44B980(v8, 1, 4, a2, (unsigned int)v4, (unsigned int)v3, v5, v4, v5) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x47e180L", 
            "funcEndAddr": "0x47e235L", 
            "funcName": "sub_47E180"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47E300(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r14\n  __int64 v4; // r15\n  __int64 v5; // rbx\n  __int64 v6; // r13\n  _BOOL8 v7; // r12\n  unsigned int v9; // [rsp+0h] [rbp-34h]\n\n  v3 = a2 + dword_94F5B0[a1];\n  v4 = a2 + dword_94F590[a1];\n  v5 = a2 + dword_94FA30[a1];\n  v6 = a2 + dword_94F110[a1];\n  LODWORD(v7) = 0;\n  v9 = a3;\n  if ( (unsigned int)sub_44B980(a3, 1, 4, a2, (unsigned int)v3, (unsigned int)v4, v5, v3, v5) )\n    v7 = (unsigned int)sub_44B980(v9, 1, 4, a2, (unsigned int)v4, (unsigned int)v3, v6, v4, v6) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47e300L", 
            "funcEndAddr": "0x47e3baL", 
            "funcName": "sub_47E300"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47E420(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er15\n  __int64 v4; // rbx\n  __int64 v5; // r14\n  __int64 v6; // rbp\n  _BOOL8 v7; // r13\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94F0B0[a1];\n  v6 = a2 + dword_94F9F0[a1];\n  LODWORD(v7) = 1;\n  if ( !(unsigned int)sub_44B980(a3, 1, 4, a2, (unsigned int)v4, (unsigned int)v5, v6, v4, v6) )\n    v7 = (unsigned int)sub_44B980(v3, 1, 4, a2, (unsigned int)v4, (unsigned int)v6, v5, v4, v5) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47e420L", 
            "funcEndAddr": "0x47e4d0L", 
            "funcName": "sub_47E420"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47E6D0(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r13\n  unsigned int v4; // er15\n  __int64 v5; // r12\n  __int64 v6; // r14\n  _BOOL8 v7; // rbx\n  unsigned int v9; // [rsp+0h] [rbp-34h]\n\n  v3 = a2 + dword_94FE90[a1];\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = a2 + dword_950330[a1];\n  v6 = a2 + dword_950350[a1];\n  v9 = a3;\n  LODWORD(v7) = 0;\n  if ( (unsigned int)sub_44B980(\n                       a3,\n                       1,\n                       6,\n                       a2,\n                       (unsigned int)v3,\n                       v4,\n                       v5,\n                       v6,\n                       a2 + dword_9507F0[a1],\n                       v5,\n                       a2 + dword_9507F0[a1]) )\n  {\n    LODWORD(v7) = 0;\n    if ( !(unsigned int)sub_44B980(v9, 0, 5, a2, (unsigned int)v3, v4, v6, v5, v3, v6) )\n      v7 = (unsigned int)sub_44B7B0(v9, 1, 4, a2, v4, (unsigned int)v3, v5, v5) != 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47e6d0L", 
            "funcEndAddr": "0x47e7c4L", 
            "funcName": "sub_47E6D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47E7D0(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r8\n  unsigned int v4; // er15\n  __int64 v5; // rbx\n  __int64 v6; // r12\n  __int64 v7; // r13\n  _BOOL8 v8; // r14\n  unsigned int v10; // [rsp+0h] [rbp-34h]\n\n  v3 = a2 + dword_94FE90[a1];\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = a2 + dword_950350[a1];\n  v6 = a2 + dword_94F9F0[a1];\n  v7 = a2 + dword_94F570[a1];\n  LODWORD(v8) = 0;\n  v10 = a3;\n  if ( (unsigned int)sub_44B980(a3, 1, 4, a2, v3, v4, v5, v3, v5) )\n  {\n    LODWORD(v8) = 1;\n    if ( !(unsigned int)sub_44B7B0(v10, 1, 2, a2, (unsigned int)v6, (unsigned int)v6) )\n      v8 = (unsigned int)sub_44B980(v10, 1, 4, a2, (unsigned int)v6, v4, v7, v6, v7) != 0;\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x47e7d0L", 
            "funcEndAddr": "0x47e8b9L", 
            "funcName": "sub_47E7D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47E8C0(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r12\n  __int64 v4; // r15\n  __int64 v5; // r14\n  int v6; // ebx\n  _BOOL8 v7; // r13\n  unsigned int v9; // [rsp+8h] [rbp-40h]\n  unsigned int v10; // [rsp+Ch] [rbp-3Ch]\n  __int64 v11; // [rsp+10h] [rbp-38h]\n\n  v3 = a2 + dword_94FEB0[a1];\n  v10 = a2 + dword_94FE90[a1];\n  v4 = a2 + dword_94F9D0[a1];\n  v5 = a2 + dword_950350[a1];\n  v11 = a2 + dword_94F570[a1];\n  v6 = dword_94F9F0[a1];\n  LODWORD(v7) = 0;\n  v9 = a3;\n  if ( !(unsigned int)sub_44B980(a3, 1, 1, a2, a2 + dword_94F550[a1], a2 + dword_950330[a1]) )\n  {\n    if ( (unsigned int)sub_44B7B0(v9, 1, 2, a2, (unsigned int)v3, a2 + v6)\n      || (LODWORD(v7) = 0, !(unsigned int)sub_44B7B0(v9, 0, 5, a2, (unsigned int)v3, v10, v4, v5, v3))\n      && (unsigned int)sub_44B7B0(v9, 1, 6, a2, (unsigned int)v3, v10, v4, v5, v11, v11)\n      || !(unsigned int)sub_44B7B0(v9, 0, 5, a2, (unsigned int)v3, v10, v4, v11, v3) )\n    {\n      LODWORD(v7) = 0;\n      if ( (unsigned int)sub_44B7B0(v9, 1, 4, a2, v10, (unsigned int)v3, v5, v5) )\n        v7 = (unsigned int)sub_44B7B0(v9, 1, 4, a2, v10, (unsigned int)v3, v11, v11) != 0;\n    }\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47e8c0L", 
            "funcEndAddr": "0x47eaa4L", 
            "funcName": "sub_47E8C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47EAB0(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r14\n  __int64 v4; // r15\n  __int64 v5; // r13\n  _BOOL4 v6; // er12\n  unsigned int v8; // [rsp+0h] [rbp-34h]\n\n  v3 = a2 + dword_950350[a1];\n  v4 = a2 + dword_950330[a1];\n  v5 = a2 + dword_9507F0[a1];\n  v6 = 0;\n  v8 = a3;\n  if ( !(unsigned int)sub_44B980(a3, 0, 3, a2, (unsigned int)v3, (unsigned int)v4, v3, a2 + dword_94FE90[a1]) )\n    v6 = (unsigned __int64)sub_44B980(v8, 0, 4, a2, (unsigned int)v4, (unsigned int)v3, v5, v4, v5) == 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x47eab0L", 
            "funcEndAddr": "0x47eb65L", 
            "funcName": "sub_47EAB0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_47EB70@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  __int64 v5; // r8\n  unsigned int v6; // ebx\n  _BOOL8 v7; // rbp\n\n  v4 = a2;\n  v5 = a4 + dword_94F9F0[a3];\n  v6 = a4 + dword_94FE90[a3];\n  LODWORD(v7) = 0;\n  if ( (unsigned int)sub_44B7B0(a2, 1, 2, a4, v5, (unsigned int)v5, a1) )\n    v7 = (unsigned int)sub_44B7B0(v4, 1, 2, a4, v6, v6) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47eb70L", 
            "funcEndAddr": "0x47ebe7L", 
            "funcName": "sub_47EB70"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_47EBF0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  __int64 v5; // r8\n  unsigned int v6; // ebx\n  _BOOL8 v7; // rbp\n\n  v4 = a2;\n  v5 = a4 + dword_94F9F0[a3];\n  v6 = a4 + dword_94FE90[a3];\n  LODWORD(v7) = 0;\n  if ( (unsigned int)sub_44B7B0(a2, 1, 2, a4, v5, (unsigned int)v5, a1) )\n    v7 = (unsigned int)sub_44B7B0(v4, 1, 2, a4, v6, v6) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47ebf0L", 
            "funcEndAddr": "0x47ec67L", 
            "funcName": "sub_47EBF0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_47EC70@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  __int64 v5; // rbp\n  unsigned int v6; // er15\n  __int64 v7; // r13\n  _BOOL4 v8; // er12\n\n  v4 = a2;\n  v5 = a4 + dword_94F590[a3];\n  v6 = a4 + dword_94F550[a3];\n  v7 = a4 + dword_94F0D0[a3];\n  v8 = 0;\n  if ( (unsigned int)sub_44B7B0(a2, 1, 2, a4, (unsigned int)v5, (unsigned int)v5, a1) )\n  {\n    v8 = 0;\n    if ( !(unsigned int)sub_44B980(v4, 1, 3, a4, v6, (unsigned int)v5, a4, v5) )\n      v8 = (unsigned __int64)sub_44B980(v4, 1, 3, a4, v6, (unsigned int)v5, v7, v5) == 0;\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x47ec70L", 
            "funcEndAddr": "0x47ed32L", 
            "funcName": "sub_47EC70"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47ED80(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r14\n  __int64 v4; // r13\n  __int64 v5; // r12\n  int v6; // er15\n  _BOOL8 v7; // rbx\n  unsigned int v9; // [rsp+Ch] [rbp-4Ch]\n  __int64 v10; // [rsp+10h] [rbp-48h]\n  __int64 v11; // [rsp+18h] [rbp-40h]\n  __int64 v12; // [rsp+20h] [rbp-38h]\n\n  v9 = a3;\n  v3 = a2 + dword_94FED0[a1];\n  v4 = a2 + dword_94FA30[a1];\n  v12 = a2 + dword_94FEB0[a1];\n  v5 = a2 + dword_94F550[a1];\n  v10 = a2 + dword_94F570[a1];\n  v6 = dword_94F0D0[a1];\n  v11 = a2 + dword_94F9F0[a1];\n  LODWORD(v7) = 0;\n  if ( (unsigned int)sub_44B7B0(a3, 1, 4, a2, (unsigned int)v3, (unsigned int)v4, a2 + dword_94FA50[a1], v3) )\n  {\n    LODWORD(v7) = 0;\n    if ( (unsigned int)sub_44B7B0(v9, 1, 4, a2, (unsigned int)v5, v10, a2 + v6, v5) )\n    {\n      LODWORD(v7) = 0;\n      if ( (unsigned int)sub_44B980(v9, 1, 4, a2, (unsigned int)v4, (unsigned int)v3, v12, v4, v12) )\n        v7 = (unsigned int)sub_44B980(v9, 1, 4, a2, v10, (unsigned int)v5, v11, v10, v11) != 0;\n    }\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47ed80L", 
            "funcEndAddr": "0x47eedcL", 
            "funcName": "sub_47ED80"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47EEE0(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r14\n  __int64 v4; // r15\n  __int64 v5; // r13\n  _BOOL8 v6; // r12\n  unsigned int v8; // [rsp+0h] [rbp-34h]\n\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = a2 + dword_94FED0[a1];\n  v5 = a2 + dword_950350[a1];\n  LODWORD(v6) = 0;\n  v8 = a3;\n  if ( !(unsigned int)sub_44B980(a3, 0, 3, a2, (unsigned int)v3, (unsigned int)v4, v3, a2 + dword_94FA30[a1]) )\n    v6 = (unsigned int)sub_44B980(v8, 1, 4, a2, (unsigned int)v4, (unsigned int)v3, v5, v4, v5) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x47eee0L", 
            "funcEndAddr": "0x47ef95L", 
            "funcName": "sub_47EEE0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47EFA0(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r13\n  unsigned int v4; // er15\n  __int64 v5; // r12\n  __int64 v6; // r14\n  _BOOL8 v7; // rbx\n  unsigned int v9; // [rsp+0h] [rbp-34h]\n\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = a2 + dword_94FE90[a1];\n  v5 = a2 + dword_950350[a1];\n  v6 = a2 + dword_950330[a1];\n  v9 = a3;\n  LODWORD(v7) = 0;\n  if ( (unsigned int)sub_44B980(\n                       a3,\n                       1,\n                       6,\n                       a2,\n                       (unsigned int)v3,\n                       v4,\n                       v5,\n                       v6,\n                       a2 + dword_9507D0[a1],\n                       v5,\n                       a2 + dword_9507D0[a1]) )\n  {\n    LODWORD(v7) = 0;\n    if ( !(unsigned int)sub_44B980(v9, 0, 5, a2, (unsigned int)v3, v4, v6, v5, v3, v6) )\n      v7 = (unsigned int)sub_44B7B0(v9, 1, 4, a2, v4, (unsigned int)v3, v5, v5) != 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47efa0L", 
            "funcEndAddr": "0x47f094L", 
            "funcName": "sub_47EFA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47F130(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r14\n  __int64 v4; // r13\n  __int64 v5; // r12\n  _BOOL4 v6; // er15\n  int v8; // [rsp+0h] [rbp-38h]\n  unsigned int v9; // [rsp+4h] [rbp-34h]\n\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = a2 + dword_94FE90[a1];\n  v5 = a2 + dword_94F9F0[a1];\n  v8 = dword_94F570[a1];\n  v6 = 0;\n  v9 = a3;\n  if ( !(unsigned int)sub_44B5C0(a3, 3, a2, (unsigned int)v3, (unsigned int)v4, a2, v4, a2 + dword_950350[a1]) )\n    v6 = (unsigned __int64)sub_44B980(v9, 0, 5, a2, (unsigned int)v5, a2 + v8, v3, v4, v5, v3) == 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x47f130L", 
            "funcEndAddr": "0x47f1edL", 
            "funcName": "sub_47F130"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47F1F0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // r13\n  __int64 v5; // r15\n  _BOOL4 v6; // er12\n\n  v3 = a3;\n  v4 = a2 + dword_94FE90[a1];\n  v5 = a2 + dword_94F9F0[a1];\n  v6 = 0;\n  if ( !(unsigned int)sub_44B5C0(a3, 3, a2, a2 + dword_94FEB0[a1], (unsigned int)v4, a2, v4, a2 + dword_950350[a1]) )\n    v6 = (unsigned __int64)sub_44B7B0(v3, 0, 3, a2, (unsigned int)v5, (unsigned int)v4, v5) == 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x47f1f0L", 
            "funcEndAddr": "0x47f294L", 
            "funcName": "sub_47F1F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47F2A0(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r14\n  __int64 v4; // r15\n  __int64 v5; // rbx\n  __int64 v6; // r13\n  _BOOL8 v7; // r12\n  unsigned int v9; // [rsp+0h] [rbp-34h]\n\n  v3 = a2 + dword_94FED0[a1];\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = a2 + dword_950350[a1];\n  v6 = a2 + dword_94FA30[a1];\n  LODWORD(v7) = 0;\n  v9 = a3;\n  if ( (unsigned int)sub_44B980(a3, 1, 4, a2, (unsigned int)v3, (unsigned int)v4, v5, v3, v5) )\n    v7 = (unsigned int)sub_44B980(v9, 1, 4, a2, (unsigned int)v4, (unsigned int)v3, v6, v4, v6) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47f2a0L", 
            "funcEndAddr": "0x47f35aL", 
            "funcName": "sub_47F2A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47F410(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // rbx\n  __int64 v4; // r15\n  __int64 v5; // r12\n  __int64 v6; // r14\n  _BOOL8 v7; // r13\n  unsigned int v9; // [rsp+14h] [rbp-3Ch]\n  __int64 v10; // [rsp+18h] [rbp-38h]\n\n  v3 = a2 + dword_94F590[a1];\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94FEB0[a1];\n  v6 = a2 + dword_950370[a1];\n  v10 = a2 + dword_94F0F0[a1];\n  LODWORD(v7) = 0;\n  v9 = a3;\n  if ( !(unsigned int)sub_44B7B0(a3, 0, 5, a2, (unsigned int)v3, (unsigned int)v4, v5, v6, v3) )\n    v7 = (unsigned int)sub_44B980(v9, 1, 6, a2, (unsigned int)v5, (unsigned int)v3, v4, v6, v10, v4, v10) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47f410L", 
            "funcEndAddr": "0x47f4e3L", 
            "funcName": "sub_47F410"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47F4F0(int a1, unsigned int a2, unsigned int a3)\n{\n  int v3; // er14\n  unsigned int v4; // er12\n  unsigned int v5; // er15\n  unsigned int v6; // ebx\n  _BOOL8 v7; // r13\n  _QWORD v9[2]; // [rsp+0h] [rbp-48h]\n  unsigned int v10; // [rsp+14h] [rbp-34h]\n\n  v3 = dword_950350[a1];\n  v4 = a2 + dword_94F550[a1];\n  v5 = a2 + dword_94F570[a1];\n  v6 = a2 + dword_94F9F0[a1];\n  LODWORD(v7) = 0;\n  v10 = a3;\n  if ( (unsigned int)sub_44B7B0(a3, 1, 2, a2, a2 + dword_94FEB0[a1], v6) )\n  {\n    LODWORD(v7) = 0;\n    if ( !(unsigned int)sub_44B7B0(v10, 1, 1, a2, a2 + v3) )\n    {\n      LODWORD(v7) = 0;\n      if ( !(unsigned int)sub_44B7B0(v10, 1, 1, a2, v4) )\n      {\n        LODWORD(v9[0]) = v5;\n        v7 = (unsigned int)sub_44B980(v10, 1, 2, a2, v5, v6, v9[0]) != 0;\n      }\n    }\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47f4f0L", 
            "funcEndAddr": "0x47f5dbL", 
            "funcName": "sub_47F4F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47F5E0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // er12\n  unsigned int v5; // er15\n  __int128 v6; // cx\n  _QWORD v8[7]; // [rsp+0h] [rbp-38h]\n\n  v3 = a3;\n  v4 = dword_950350[a1];\n  v5 = a2 + dword_94F550[a1];\n  LODWORD(v8[0]) = a2 + dword_94F570[a1];\n  v6 = a2;\n  if ( (unsigned int)sub_44B980(a3, 1, 2, a2, a2 + dword_94F570[a1], a2 + dword_94F9F0[a1], v8[0]) )\n  {\n    DWORD2(v6) = 0;\n    if ( !(unsigned int)sub_44B7B0(v3, 1, 1, a2, a2 + v4) )\n      DWORD2(v6) = (unsigned __int64)sub_44B7B0(v3, 1, 1, a2, v5) == 0;\n  }\n  return DWORD2(v6);\n}\n", 
            "funcStartAddr": "0x47f5e0L", 
            "funcEndAddr": "0x47f68eL", 
            "funcName": "sub_47F5E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47F750(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r15\n  unsigned int v4; // er12\n  __int64 v5; // rbx\n  __int64 v6; // r14\n  _BOOL8 v7; // r13\n  unsigned int v9; // [rsp+0h] [rbp-34h]\n\n  v3 = a2 + dword_94F590[a1];\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94FEB0[a1];\n  v6 = a2 + dword_94FA30[a1];\n  LODWORD(v7) = 0;\n  v9 = a3;\n  if ( (unsigned int)sub_44B980(a3, 1, 4, a2, (unsigned int)v3, v4, v5, v3, v5) )\n  {\n    LODWORD(v7) = 0;\n    if ( (unsigned int)sub_44B7B0(v9, 1, 2, a2, (unsigned int)v5, (unsigned int)v5) )\n      v7 = (unsigned int)sub_44B7B0(v9, 1, 4, a2, v4, (unsigned int)v3, v5, v6) != 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47f750L", 
            "funcEndAddr": "0x47f827L", 
            "funcName": "sub_47F750"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47F830(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r14\n  __int64 v4; // rbx\n  __int64 v5; // r13\n  __int64 v6; // r12\n  __int64 v7; // r8\n  _BOOL4 v8; // er15\n  unsigned int v10; // [rsp+0h] [rbp-34h]\n\n  v3 = a2 + dword_94F5B0[a1];\n  v4 = a2 + dword_94F590[a1];\n  v5 = a2 + dword_94F110[a1];\n  v6 = a2 + dword_94F0F0[a1];\n  v7 = a2 + dword_94FA30[a1];\n  v8 = 0;\n  v10 = a3;\n  if ( (unsigned int)sub_44B7B0(a3, 1, 3, a2, v7, (unsigned int)v4, v7) )\n  {\n    v8 = 0;\n    if ( !(unsigned int)sub_44B980(v10, 0, 5, a2, (unsigned int)v4, (unsigned int)v3, v5, v6, v4, v5) )\n      v8 = (unsigned __int64)sub_44B980(v10, 0, 5, a2, (unsigned int)v6, (unsigned int)v5, v3, v4, v6, v3) == 0;\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x47f830L", 
            "funcEndAddr": "0x47f91cL", 
            "funcName": "sub_47F830"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47F920(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r14\n  __int64 v4; // r13\n  __int64 v5; // rbx\n  __int64 v6; // r12\n  _BOOL4 v7; // er15\n  unsigned int v9; // [rsp+0h] [rbp-34h]\n\n  v3 = a2 + dword_94F590[a1];\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94F0F0[a1];\n  v6 = a2 + dword_94F0D0[a1];\n  v7 = 0;\n  v9 = a3;\n  if ( !(unsigned int)sub_44B980(a3, 0, 5, a2, (unsigned int)v4, (unsigned int)v3, v5, v6, v4, v5) )\n    v7 = (unsigned __int64)sub_44B980(v9, 0, 5, a2, (unsigned int)v6, (unsigned int)v5, v3, v4, v6, v3) == 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47f920L", 
            "funcEndAddr": "0x47f9d6L", 
            "funcName": "sub_47F920"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47F9E0(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r15\n  unsigned int v4; // er14\n  __int64 v5; // r13\n  _BOOL8 v6; // r12\n  unsigned int v8; // [rsp+0h] [rbp-34h]\n\n  v3 = a2 + dword_94F570[a1];\n  v4 = a2 + dword_94F590[a1];\n  v5 = a2 + dword_94FEB0[a1];\n  LODWORD(v6) = 0;\n  v8 = a3;\n  if ( !(unsigned int)sub_44B7B0(a3, 1, 3, a2, (unsigned int)v3, v4, a2 + dword_94F0B0[a1]) )\n    v6 = (unsigned int)sub_44B980(v8, 1, 4, a2, (unsigned int)v3, v4, v5, v3, v5) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x47f9e0L", 
            "funcEndAddr": "0x47fa94L", 
            "funcName": "sub_47F9E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47FAA0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er13\n  __int64 v4; // r15\n  __int64 v5; // rbx\n  __int64 v6; // r14\n  _BOOL8 v7; // r12\n  unsigned int v9; // [rsp+Ch] [rbp-44h]\n  __int64 v10; // [rsp+10h] [rbp-40h]\n  __int64 v11; // [rsp+18h] [rbp-38h]\n\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94F0F0[a1];\n  v11 = a2 + dword_94F550[a1];\n  v10 = a2 + dword_94F590[a1];\n  v6 = a2 + dword_94F9F0[a1];\n  LODWORD(v7) = 0;\n  v9 = a3;\n  if ( (unsigned int)sub_44B980(a3, 1, 2, a2, v3, v3, v6) )\n  {\n    LODWORD(v7) = 0;\n    if ( (unsigned int)sub_44B980(v9, 1, 4, a2, (unsigned int)v4, v3, v5, v4, v6) )\n    {\n      LODWORD(v7) = 0;\n      if ( (unsigned int)sub_44B980(v9, 1, 4, a2, (unsigned int)v4, v3, v10, v4, v6) )\n        v7 = (unsigned int)sub_44B980(v9, 1, 6, a2, (unsigned int)v4, v3, v11, v10, v5, v4, v5) != 0;\n    }\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47faa0L", 
            "funcEndAddr": "0x47fbecL", 
            "funcName": "sub_47FAA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47FBF0(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r14\n  __int64 v4; // r15\n  __int64 v5; // r13\n  _BOOL8 v6; // r12\n  unsigned int v8; // [rsp+0h] [rbp-34h]\n\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = a2 + dword_94FED0[a1];\n  v5 = a2 + dword_950350[a1];\n  LODWORD(v6) = 0;\n  v8 = a3;\n  if ( !(unsigned int)sub_44B980(a3, 0, 3, a2, (unsigned int)v3, (unsigned int)v4, v3, a2 + dword_94FA30[a1]) )\n    v6 = (unsigned int)sub_44B980(v8, 1, 4, a2, (unsigned int)v4, (unsigned int)v3, v5, v4, v5) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x47fbf0L", 
            "funcEndAddr": "0x47fca5L", 
            "funcName": "sub_47FBF0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47FCD0(int a1, int a2)\n{\n  int v2; // er12\n  int v3; // ebp\n  int v4; // er15\n  _BOOL4 v5; // er14\n\n  v2 = dword_94FED0[a1];\n  v3 = a2 + dword_94F570[a1];\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = 0;\n  if ( (signed int)sub_4083A0(a2 + dword_94F590[a1]) >= 2 && (signed int)sub_4083A0(a2 + v2) >= 2 )\n  {\n    v5 = 1;\n    if ( (unsigned int)sub_4083A0(v3) != 2 )\n      v5 = (unsigned __int64)sub_4083A0(v4) == 2;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x47fcd0L", 
            "funcEndAddr": "0x47fd4fL", 
            "funcName": "sub_47FCD0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47FDE0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // er12\n  unsigned int v5; // ebp\n  _BOOL4 v6; // ebx\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94FED0[a1];\n  if ( dword_954FF0[19 * ((signed int)a2 + (signed __int64)dword_94FEB0[a1])] == 1\n    || (v6 = 0, dword_954FF0[19 * ((signed int)a2 + (signed __int64)dword_94FA30[a1])] == 1) )\n  {\n    v6 = 0;\n    if ( !(unsigned int)sub_44BB60(3 - a3, 0, 1, a2, v4, v5) )\n      v6 = (unsigned __int64)sub_44BB60(v3, 1, 1, a2, v4, v5) == 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x47fde0L", 
            "funcEndAddr": "0x47fe91L", 
            "funcName": "sub_47FDE0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47FEA0(int a1, unsigned int a2, int a3)\n{\n  __int64 v3; // r14\n  __int64 v4; // r15\n  __int64 v5; // r13\n  __int64 v6; // r12\n  _BOOL4 v7; // ebp\n  int v9; // [rsp+0h] [rbp-34h]\n  unsigned int v10; // [rsp+0h] [rbp-34h]\n\n  v9 = a3;\n  v3 = a2 + dword_94F550[a1];\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94F0D0[a1];\n  v6 = a2 + dword_94FEB0[a1];\n  v7 = 0;\n  if ( (unsigned int)sub_4083A0(a2 + dword_94F9F0[a1]) == 3 )\n  {\n    v7 = 0;\n    v10 = 3 - v9;\n    if ( (unsigned int)sub_44B980(v10, 1, 4, a2, (unsigned int)v3, (unsigned int)v4, v5, v3, v5) )\n    {\n      v7 = 0;\n      if ( (unsigned int)sub_44B980(v10, 1, 4, a2, (unsigned int)v3, (unsigned int)v4, v6, v3, v6) )\n        v7 = (unsigned __int64)sub_44B7B0(v10, 0, 5, a2, (unsigned int)v4, (unsigned int)v3, 0LL, v6, v4) == 0;\n    }\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x47fea0L", 
            "funcEndAddr": "0x47ffb1L", 
            "funcName": "sub_47FEA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_47FFC0(int a1, unsigned int a2, int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // r13\n  unsigned int v5; // er15\n  _BOOL4 v6; // er12\n  int v8; // [rsp+0h] [rbp-48h]\n  int v9; // [rsp+8h] [rbp-40h]\n  int v10; // [rsp+10h] [rbp-38h]\n\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = a2 + dword_94FED0[a1];\n  v9 = dword_94FE90[a1];\n  v10 = dword_94F570[a1];\n  v8 = dword_94F550[a1];\n  v5 = 3 - a3;\n  v6 = 0;\n  if ( !(unsigned int)sub_44B5C0(3 - a3, 3, a2, v3, (unsigned int)v4, a2, v4, a2 + dword_950350[a1]) )\n    v6 = (unsigned __int64)sub_44B7B0(v5, 1, 5, a2, v3, (unsigned int)v4, a2 + v10, a2 + v9, a2 + v8) == 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x47ffc0L", 
            "funcEndAddr": "0x4800a6L", 
            "funcName": "sub_47FFC0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4800B0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebp\n  signed __int64 v6; // rdi\n  _BOOL8 v7; // rbx\n  __int64 v9; // [rsp-8h] [rbp-28h]\n\n  v9 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94F570[a3];\n  v6 = dword_94F9F0[a3] + (signed __int64)(signed int)a4;\n  if ( dword_98A7F4 )\n  {\n    LODWORD(v7) = 0;\n    if ( !(unsigned int)sub_43B050(v6, 0LL) )\n      return (unsigned int)v7;\n  }\n  else if ( !dword_8E94D4[95 * v6] )\n  {\n    LODWORD(v7) = 0;\n    return (unsigned int)v7;\n  }\n  LODWORD(v7) = 0;\n  if ( !(unsigned int)sub_44B7B0(v4, 1, 2, a4, v5, v5, v9) )\n    v7 = (unsigned int)sub_44B7B0(v4, 1, 2, a4, v5, a4) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x4800b0L", 
            "funcEndAddr": "0x480158L", 
            "funcName": "sub_4800B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_480160(int a1, unsigned int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er14\n  _BOOL8 v5; // rbp\n  unsigned int v6; // er12\n  unsigned int v7; // er15\n  _QWORD v9[7]; // [rsp+0h] [rbp-38h]\n\n  v4 = a3;\n  if ( a4 )\n  {\n    sub_4217E0(a2);\n    LODWORD(v5) = 0;\n  }\n  else\n  {\n    v6 = a2 + dword_950330[a1];\n    v7 = a2 + dword_94FEB0[a1];\n    LODWORD(v5) = 0;\n    if ( !(unsigned int)sub_44B7B0(a3, 1, 2, a2, v6, v6) )\n    {\n      LODWORD(v9[0]) = v7;\n      v5 = (unsigned int)sub_44B7B0(v4, 1, 3, a2, v6, v7, v9[0]) != 0;\n    }\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x480160L", 
            "funcEndAddr": "0x4801f2L", 
            "funcName": "sub_480160"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_480200@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<ecx>, int a4@<edi>, unsigned int a5@<esi>)\n{\n  unsigned int v5; // er14\n  unsigned int v6; // er13\n  unsigned int v7; // ebp\n  _BOOL8 v8; // r15\n  signed int v9; // er12\n  int v10; // eax\n  int v11; // eax\n  __int64 v13; // [rsp-8h] [rbp-38h]\n\n  v13 = a1;\n  v5 = a2;\n  v6 = a5 + dword_950350[a4];\n  if ( a3 )\n  {\n    v7 = a5 + dword_94FE90[a4];\n    sub_4217E0(a5);\n    sub_469D60(a5, v6, v7);\n    LODWORD(v8) = 0;\n  }\n  else\n  {\n    v9 = a5 + dword_94FEB0[a4];\n    LOBYTE(v10) = sub_46A080(a5 + dword_950330[a4]);\n    LODWORD(v8) = 0;\n    if ( !v10 )\n    {\n      LOBYTE(v11) = sub_46A080(v9);\n      if ( !v11 )\n        v8 = (unsigned int)sub_44B7B0(v5, 1, 2, a5, v6, a5, v13) != 0;\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x480200L", 
            "funcEndAddr": "0x4802a6L", 
            "funcName": "sub_480200"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_480410(int a1, int a2, int a3)\n{\n  int v3; // er14\n  _BOOL4 v4; // ebp\n\n  v3 = a3;\n  v4 = 0;\n  if ( !(unsigned int)sub_426580(a2 + dword_94F570[a1]) && !(unsigned int)sub_40B9B0(a2, v3) )\n    v4 = (unsigned __int64)sub_40B9B0(a2, 3 - v3) == 0;\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x480410L", 
            "funcEndAddr": "0x48045cL", 
            "funcName": "sub_480410"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_480460(int a1, int a2, int a3)\n{\n  int v3; // ebx\n  _BOOL4 v4; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = sub_426550(a2 + dword_94F590[a1]);\n  result = 0LL;\n  if ( !v4 )\n    result = (unsigned int)sub_40B9B0(a2, v3) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x480460L", 
            "funcEndAddr": "0x480499L", 
            "funcName": "sub_480460"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_480520(int a1, int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, double a8, double a9, __m128 a10, __m128 a11)\n{\n  int v11; // ebp\n  unsigned int v12; // er14\n  int v13; // ebx\n  int v14; // er13\n  unsigned int v15; // er12\n  signed int v16; // eax\n  _BOOL4 v17; // ecx\n  signed int v18; // eax\n  __int64 v19; // r8\n  __int64 v20; // r9\n  __m128 v21; // xmm4\n  __m128 v22; // xmm5\n  unsigned int v23; // ebp\n  int v24; // er15\n  __int64 v25; // r8\n  __int64 v26; // r9\n  __m128 v27; // xmm4\n  __m128 v28; // xmm5\n  char v29; // ST00_1\n  int v30; // ebx\n  __int64 v31; // r8\n  __int64 v32; // r9\n  __m128 v33; // xmm4\n  __m128 v34; // xmm5\n  char v35; // ST00_1\n  int v36; // eax\n  __int64 v37; // r8\n  __int64 v38; // r9\n  __m128 v39; // xmm4\n  __m128 v40; // xmm5\n  int v41; // eax\n  __int64 v42; // r8\n  __int64 v43; // r9\n  __m128 v44; // xmm4\n  __m128 v45; // xmm5\n  int v46; // eax\n  __int64 v47; // r8\n  __int64 v48; // r9\n  __m128 v49; // xmm4\n  __m128 v50; // xmm5\n  char v52; // [rsp+0h] [rbp-48h]\n  char v53; // [rsp+0h] [rbp-48h]\n  unsigned int v54; // [rsp+0h] [rbp-48h]\n  unsigned int v55; // [rsp+4h] [rbp-44h]\n  int v56; // [rsp+10h] [rbp-38h]\n  int v57; // [rsp+14h] [rbp-34h]\n\n  v57 = a3;\n  v11 = a2 + dword_94F550[a1];\n  v12 = a2 + dword_94F570[a1];\n  v13 = a2 + dword_94F9F0[a1];\n  v56 = dword_94FED0[a1];\n  v14 = a2 + dword_94FE90[a1];\n  v15 = a2 + dword_94FEB0[a1];\n  v16 = sub_4083A0(a2 + dword_94F590[a1]);\n  v17 = 0;\n  if ( v16 >= 2 )\n  {\n    v18 = sub_4083A0(a2 + v56);\n    v17 = 0;\n    v23 = v13;\n    if ( v18 >= 2 )\n    {\n      v24 = sub_44B230(v57, 1, 1, v12, v19, v20, a4, a5, a6, a7, v21, v22, a10, a11, v14);\n      v30 = v24 + (unsigned __int64)sub_44B230(v57, 1, 1, v15, v25, v26, a4, a5, a6, a7, v27, v28, a10, a11, v29);\n      v36 = sub_44B230(v57, 1, 1, v23, v31, v32, a4, a5, a6, a7, v33, v34, a10, a11, v35);\n      v17 = 0;\n      if ( v30 + v36 <= 1 )\n      {\n        v41 = sub_44B230(v57, 1, 1, v23, v37, v38, a4, a5, a6, a7, v39, v40, a10, a11, v52);\n        v17 = 1;\n        if ( v41 )\n        {\n          v46 = sub_44B230(v57, 1, 1, v55, v42, v43, a4, a5, a6, a7, v44, v45, a10, a11, v53);\n          v17 = 0;\n          if ( !v46 )\n            v17 = (unsigned __int64)sub_44B230(v57, 1, 1, v54, v47, v48, a4, a5, a6, a7, v49, v50, a10, a11, v54) == 0;\n        }\n      }\n    }\n  }\n  return (unsigned int)v17;\n}\n", 
            "funcStartAddr": "0x480520L", 
            "funcEndAddr": "0x480688L", 
            "funcName": "sub_480520"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_480690(int a1, int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __int64 a12, __int64 a13, __int64 a14)\n{\n  int v14; // er14\n  unsigned int v15; // er15\n  unsigned int v16; // er12\n  int v17; // er13\n  __int64 v18; // r8\n  __int64 v19; // r9\n  __m128 v20; // xmm4\n  __m128 v21; // xmm5\n  char v22; // ST00_1\n  int v23; // ebx\n  __int64 v24; // r8\n  __int64 v25; // r9\n  __m128 v26; // xmm4\n  __m128 v27; // xmm5\n  char v28; // ST00_1\n  signed int v29; // eax\n  __int64 v30; // r8\n  __int64 v31; // r9\n  __m128 v32; // xmm4\n  __m128 v33; // xmm5\n  unsigned int v34; // ebx\n  __int64 v35; // r8\n  __int64 v36; // r9\n  __m128 v37; // xmm4\n  __m128 v38; // xmm5\n  __int64 v39; // r8\n  __int64 v40; // r9\n  __m128 v41; // xmm4\n  __m128 v42; // xmm5\n  __int64 v43; // rdi\n  int v44; // eax\n  char v46; // [rsp+0h] [rbp-48h]\n  __int64 v47; // [rsp+0h] [rbp-48h]\n  char v48; // [rsp+0h] [rbp-48h]\n  __int64 v49; // [rsp+0h] [rbp-48h]\n  unsigned int v50; // [rsp+8h] [rbp-40h]\n  unsigned int v51; // [rsp+Ch] [rbp-3Ch]\n  __int64 v52; // [rsp+10h] [rbp-38h]\n\n  v14 = a3;\n  v51 = a2 + dword_94F550[a1];\n  v15 = a2 + dword_94F9F0[a1];\n  v52 = dword_94F590[a1];\n  v50 = a2 + dword_94FE90[a1];\n  v16 = a2 + dword_94FEB0[a1];\n  v17 = sub_44B230(\n          a3,\n          1,\n          1,\n          (unsigned int)(a2 + dword_94F570[a1]),\n          a13,\n          a14,\n          a4,\n          a5,\n          a6,\n          a7,\n          a8,\n          a9,\n          a10,\n          a11,\n          dword_94FED0[a1]);\n  v23 = v17 + (unsigned __int64)sub_44B230(v14, 1, 1, v16, v18, v19, a4, a5, a6, a7, v20, v21, a10, a11, v22);\n  v29 = v23 + (unsigned __int64)sub_44B230(v14, 1, 1, v15, v24, v25, a4, a5, a6, a7, v26, v27, a10, a11, v28);\n  v34 = 0;\n  if ( v29 <= 1 )\n  {\n    v34 = 0;\n    if ( !(unsigned int)sub_44B230(v14, 1, 1, v15, v30, v31, a4, a5, a6, a7, v32, v33, a10, a11, v46)\n      || !(unsigned int)sub_44B230(v14, 1, 1, v51, v35, v36, a4, a5, a6, a7, v37, v38, a10, a11, v47)\n      && (v34 = 0, !(unsigned int)sub_44B230(v14, 1, 1, v50, v39, v40, a4, a5, a6, a7, v41, v42, a10, a11, v48)) )\n    {\n      v43 = a2 + v52;\n      v49 = a2 + v47;\n      if ( dword_98A7F4 )\n      {\n        v34 = 0;\n        if ( !(unsigned int)sub_43B050(v43, 0LL) )\n        {\n          if ( dword_98A7F4 )\n          {\n            v44 = sub_43B050(v49, 0LL);\n            return v44 == 0;\n          }\nLABEL_10:\n          v44 = dword_8E94D4[95 * v49];\n          return v44 == 0;\n        }\n      }\n      else\n      {\n        v34 = 0;\n        if ( !dword_8E94D4[95 * v43] )\n          goto LABEL_10;\n      }\n    }\n  }\n  return v34;\n}\n", 
            "funcStartAddr": "0x480690L", 
            "funcEndAddr": "0x480820L", 
            "funcName": "sub_480690"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_480820(int a1, int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __int64 a12, __int64 a13, __int64 a14)\n{\n  int v14; // er15\n  unsigned int v15; // er12\n  unsigned int v16; // er13\n  int v17; // er14\n  __int64 v18; // r8\n  __int64 v19; // r9\n  __m128 v20; // xmm4\n  __m128 v21; // xmm5\n  char v22; // ST00_1\n  int v23; // ebx\n  unsigned int v24; // er14\n  __int64 v25; // r8\n  __int64 v26; // r9\n  __m128 v27; // xmm4\n  __m128 v28; // xmm5\n  char v29; // ST00_1\n  __int64 v30; // r8\n  __int64 v31; // r9\n  __m128 v32; // xmm4\n  __m128 v33; // xmm5\n  __int64 v34; // r8\n  __int64 v35; // r9\n  __m128 v36; // xmm4\n  __m128 v37; // xmm5\n  __int64 v38; // r8\n  __int64 v39; // r9\n  __m128 v40; // xmm4\n  __m128 v41; // xmm5\n  __int64 v42; // rdi\n  __int64 v43; // rbx\n  __int64 v44; // rax\n  int v45; // eax\n  char v47; // [rsp+0h] [rbp-58h]\n  char v48; // [rsp+0h] [rbp-58h]\n  char v49; // [rsp+0h] [rbp-58h]\n  char v50; // [rsp+0h] [rbp-58h]\n  unsigned int v51; // [rsp+8h] [rbp-50h]\n  unsigned int v52; // [rsp+Ch] [rbp-4Ch]\n  __int64 v53; // [rsp+10h] [rbp-48h]\n  __int64 v54; // [rsp+18h] [rbp-40h]\n  __int64 v55; // [rsp+20h] [rbp-38h]\n\n  v14 = a3;\n  v52 = a2 + dword_94F550[a1];\n  v15 = a2 + dword_94F9F0[a1];\n  v54 = dword_94F590[a1];\n  v55 = dword_94FA50[a1];\n  v53 = dword_94FED0[a1];\n  v51 = a2 + dword_94FE90[a1];\n  v16 = a2 + dword_94FEB0[a1];\n  v17 = sub_44B230(a3, 1, 1, (unsigned int)(a2 + dword_94F570[a1]), a13, a14, a4, a5, a6, a7, a8, a9, a10, a11, v47);\n  v23 = v17 + (unsigned __int64)sub_44B230(v14, 1, 1, v16, v18, v19, a4, a5, a6, a7, v20, v21, a10, a11, v22);\n  v24 = 0;\n  if ( (signed int)(v23 + (unsigned __int64)sub_44B230(\n                                              v14,\n                                              1,\n                                              1,\n                                              v15,\n                                              v25,\n                                              v26,\n                                              a4,\n                                              a5,\n                                              a6,\n                                              a7,\n                                              v27,\n                                              v28,\n                                              a10,\n                                              a11,\n                                              v29)) > 1 )\n    return v24;\n  if ( (unsigned int)sub_44B230(v14, 1, 1, v15, v30, v31, a4, a5, a6, a7, v32, v33, a10, a11, v48) )\n  {\n    v24 = 0;\n    if ( (unsigned int)sub_44B230(v14, 1, 1, v52, v34, v35, a4, a5, a6, a7, v36, v37, a10, a11, v49)\n      || (unsigned int)sub_44B230(v14, 1, 1, v51, v38, v39, a4, a5, a6, a7, v40, v41, a10, a11, v50) )\n    {\n      return v24;\n    }\n  }\n  v42 = a2 + v54;\n  v43 = a2 + v55;\n  v44 = a2 + v53;\n  if ( !dword_98A7F4 )\n  {\n    if ( dword_8E94D4[95 * v44] )\n      return 0;\nLABEL_13:\n    v24 = 0;\n    if ( !dword_8E94D4[95 * v42] )\n      goto LABEL_14;\n    return v24;\n  }\n  v24 = 0;\n  if ( (unsigned int)sub_43B050(v44, 0LL) )\n    return v24;\n  v42 = a2 + v54;\n  if ( !dword_98A7F4 )\n    goto LABEL_13;\n  v24 = 0;\n  if ( !(unsigned int)sub_43B050(a2 + (signed int)v54, 0LL) )\n  {\n    if ( dword_98A7F4 )\n    {\n      v45 = sub_43B050(v43, 0LL);\n      return v45 == 0;\n    }\nLABEL_14:\n    v45 = dword_8E94D4[95 * v43];\n    return v45 == 0;\n  }\n  return v24;\n}\n", 
            "funcStartAddr": "0x480820L", 
            "funcEndAddr": "0x480a07L", 
            "funcName": "sub_480820"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_480A80(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  int v5; // er15\n  _BOOL8 v6; // r12\n  __int64 v8; // [rsp+0h] [rbp-38h]\n  _QWORD v9[7]; // [rsp+0h] [rbp-38h]\n\n  v3 = a3;\n  v4 = a2 + dword_94F9F0[a1];\n  v5 = dword_94F550[a1];\n  LODWORD(v8) = a2 + dword_94FEB0[a1];\n  LODWORD(v6) = 0;\n  if ( !(unsigned int)sub_44B980(a3, 1, 2, a2, v4, v4, v8) )\n  {\n    LODWORD(v9[0]) = a2;\n    v6 = (unsigned int)sub_44B7B0(v3, 1, 3, a2, v4, a2 + v5, v9[0]) != 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x480a80L", 
            "funcEndAddr": "0x480b0fL", 
            "funcName": "sub_480A80"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_480B10(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er12\n  __int64 v4; // rbp\n  __int64 v5; // r13\n  __int64 v6; // rbx\n  _BOOL4 v7; // er14\n  __int64 v9; // [rsp+0h] [rbp-38h]\n\n  v3 = a3;\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = a2 + dword_950370[a1];\n  v6 = a2 + dword_94FA30[a1];\n  v9 = dword_950350[a1];\n  v7 = 0;\n  if ( !(unsigned int)sub_44B980(a3, 1, 4, a2, (unsigned int)v4, (unsigned int)v5, v6, v4, v6) )\n  {\n    v7 = 0;\n    if ( !(unsigned int)sub_44B980(v3, 1, 4, a2, (unsigned int)v4, (unsigned int)v6, v5, v4, v5) )\n      v7 = dword_954FF0[19 * ((signed int)a2 + v9)] != 1;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x480b10L", 
            "funcEndAddr": "0x480be3L", 
            "funcName": "sub_480B10"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_480BF0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  int v5; // er12\n  _BOOL4 v6; // er15\n\n  v3 = a3;\n  v4 = a2 + dword_94F0B0[a1];\n  v5 = dword_94F570[a1];\n  v6 = 0;\n  if ( !(unsigned int)sub_44B7B0(a3, 1, 2, a2, v4, a2 + dword_94F530[a1]) )\n  {\n    v6 = 0;\n    if ( !(unsigned int)sub_44B7B0(v3, 1, 2, a2, v4, a2 + v5) )\n      v6 = (unsigned __int64)sub_44B7B0(v3, 1, 2, a2, v4, v4) == 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x480bf0L", 
            "funcEndAddr": "0x480c93L", 
            "funcName": "sub_480BF0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_480CA0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  int v5; // er12\n  _BOOL4 v6; // er15\n\n  v3 = a3;\n  v4 = a2 + dword_94EC30[a1];\n  v5 = dword_94F0F0[a1];\n  v6 = 0;\n  if ( !(unsigned int)sub_44B7B0(a3, 1, 2, a2, v4, a2 + dword_94F0B0[a1]) )\n  {\n    v6 = 0;\n    if ( !(unsigned int)sub_44B7B0(v3, 1, 2, a2, v4, a2 + v5) )\n      v6 = (unsigned __int64)sub_44B7B0(v3, 1, 2, a2, v4, v4) == 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x480ca0L", 
            "funcEndAddr": "0x480d43L", 
            "funcName": "sub_480CA0"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_480D50(int a1, int a2)\n{\n  int v2; // ebp\n  signed int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94FE90[a1];\n  v3 = sub_4083A0(a2 + dword_94FED0[a1]);\n  result = 0;\n  if ( v3 >= 2 )\n    result = (signed int)sub_4083A0(a2 + v2) > 2;\n  return result;\n}\n", 
            "funcStartAddr": "0x480d50L", 
            "funcEndAddr": "0x480d90L", 
            "funcName": "sub_480D50"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_480D90@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebp\n  int v6; // er13\n  unsigned int v7; // er12\n  _BOOL8 v8; // r15\n\n  v4 = a2;\n  v5 = a4 + dword_94FA50[a3];\n  v6 = dword_94F590[a3];\n  v7 = a4 + dword_94FED0[a3];\n  LODWORD(v8) = 0;\n  if ( !(unsigned int)sub_44B7B0(a2, 1, 2, a4, v5, v5, a1) )\n  {\n    LODWORD(v8) = 0;\n    if ( !(unsigned int)sub_44B7B0(v4, 1, 2, a4, v5, a4 + v6) )\n    {\n      LODWORD(v8) = 0;\n      if ( !(unsigned int)sub_44B7B0(v4, 1, 2, a4, v5, v7) )\n        v8 = (unsigned int)sub_44B7B0(v4, 1, 2, v5, a4, a4) != 0;\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x480d90L", 
            "funcEndAddr": "0x480e62L", 
            "funcName": "sub_480D90"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_480E70@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebp\n  _BOOL4 v6; // er15\n  __int64 v8; // [rsp-8h] [rbp-28h]\n\n  v8 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94F570[a3];\n  if ( (unsigned int)sub_44ADE0(a4, a2, a4 + dword_94F9F0[a3]) )\n  {\n    v6 = 1;\n    if ( !(unsigned int)sub_44B7B0(v4, 1, 2, a4, v5, v5, v8) )\n      v6 = (unsigned __int64)sub_44B7B0(v4, 1, 2, a4, v5, a4) == 0;\n  }\n  else\n  {\n    v6 = 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x480e70L", 
            "funcEndAddr": "0x480efdL", 
            "funcName": "sub_480E70"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_480F00(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // er15\n  int v5; // ebx\n  _BOOL4 v6; // er12\n\n  v3 = a3;\n  v4 = a2 + dword_94FE70[a1];\n  v5 = dword_94FEB0[a1];\n  v6 = 0;\n  if ( (unsigned int)sub_4083A0(a2 + dword_94FE90[a1]) == 2 && (signed int)sub_4083A0(a2 + v5) >= 4 )\n    v6 = (unsigned __int64)sub_44B7B0(v3, 1, 2, a2, v4, v4) == 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x480f00L", 
            "funcEndAddr": "0x480f77L", 
            "funcName": "sub_480F00"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_480F80(int a1, unsigned int a2, unsigned int a3)\n{\n  int v3; // er14\n  _BOOL4 v4; // er15\n  signed int v5; // eax\n\n  v3 = dword_94FEB0[a1];\n  v4 = 0;\n  if ( (unsigned int)sub_44B7B0(\n                       a3,\n                       1,\n                       5,\n                       a2,\n                       a2 + dword_94FA30[a1],\n                       a2 + dword_94F570[a1],\n                       a2 + dword_94F9F0[a1],\n                       a2 + dword_94F590[a1]) )\n  {\n    v5 = sub_4083A0(a2 + v3);\n    v4 = v5 < 3;\n    LOBYTE(v4) = v5 > 3;\n  }\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x480f80L", 
            "funcEndAddr": "0x48100fL", 
            "funcName": "sub_480F80"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_481010(int a1, unsigned int a2, int a3)\n{\n  int v3; // er14\n  int v4; // ebp\n  signed int v5; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_94F9F0[a1];\n  v5 = sub_4083A0(a2 + dword_94FE90[a1]);\n  result = 0LL;\n  if ( v5 >= 2 )\n    result = (unsigned int)sub_44ADE0(a2, (unsigned int)(3 - v3), a2 + v4) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x481010L", 
            "funcEndAddr": "0x48105bL", 
            "funcName": "sub_481010"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_481060(int a1, unsigned int a2, unsigned int a3)\n{\n  return sub_44B7B0(\n           a3,\n           1,\n           5,\n           a2,\n           a2 + dword_94FA50[a1],\n           a2 + dword_94F5B0[a1],\n           a2 + dword_94F590[a1],\n           a2 + dword_94FEF0[a1],\n           a2);\n}\n", 
            "funcStartAddr": "0x481060L", 
            "funcEndAddr": "0x4810b8L", 
            "funcName": "sub_481060"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4810E0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  int v5; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94F0F0[a1];\n  v5 = sub_4083A0(a2 + dword_94F0D0[a1]);\n  result = 0LL;\n  if ( v5 == 2 )\n    result = (unsigned int)sub_44B7B0(v3, 1, 2, a2, v4, v4) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x4810e0L", 
            "funcEndAddr": "0x481136L", 
            "funcName": "sub_4810E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_481180(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // er15\n  signed __int64 v5; // rbp\n  __int64 v6; // rax\n  unsigned int v7; // ebx\n  _QWORD v9[7]; // [rsp+0h] [rbp-38h]\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = dword_94F0D0[a1] + (signed __int64)(signed int)a2;\n  if ( dword_98A7F4 )\n  {\n    v6 = sub_43B050(v5, 0LL);\n    if ( !(_DWORD)v6 )\n      goto LABEL_8;\n    if ( dword_98A7F4 )\n    {\n      v7 = 0;\n      if ( !(unsigned int)sub_43B6F0(v6, v5, 0LL) )\n        return v7;\n      goto LABEL_8;\n    }\n  }\n  else if ( !dword_8E94D4[95 * v5] )\n  {\n    goto LABEL_8;\n  }\n  if ( !dword_8E9524[95 * (signed int)v5] )\n    return 0;\nLABEL_8:\n  LODWORD(v9[0]) = v5;\n  return (unsigned int)sub_44B980(v3, 0, 2, a2, v4, a2, v9[0]) == 0;\n}\n", 
            "funcStartAddr": "0x481180L", 
            "funcEndAddr": "0x48123bL", 
            "funcName": "sub_481180"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_481290(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  int v5; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = sub_4083A0(a2 + dword_94F550[a1]);\n  result = 0LL;\n  if ( v5 == 1 )\n    result = (unsigned int)sub_44B7B0(v3, 1, 2, a2, v4, v4) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x481290L", 
            "funcEndAddr": "0x4812e6L", 
            "funcName": "sub_481290"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4812F0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er15\n  _BOOL8 v6; // rbp\n\n  v4 = a2;\n  v5 = dword_94FE90[a3];\n  LODWORD(v6) = 0;\n  if ( (unsigned int)sub_44B7B0(a2, 0, 1, a4, a4 + dword_94F9D0[a3], a1) )\n    v6 = (unsigned int)sub_44B7B0(v4, 1, 2, a4, a4 + v5, a4) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x4812f0L", 
            "funcEndAddr": "0x481362L", 
            "funcName": "sub_4812F0"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_481370(int a1, int a2)\n{\n  int v2; // ebp\n  signed int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94F530[a1];\n  v3 = sub_4083A0(a2 + dword_94FE90[a1]);\n  result = 0;\n  if ( v3 >= 3 )\n    result = (signed int)sub_4083A0(a2 + v2) > 2;\n  return result;\n}\n", 
            "funcStartAddr": "0x481370L", 
            "funcEndAddr": "0x4813b0L", 
            "funcName": "sub_481370"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4813B0(int a1, int a2, int a3)\n{\n  signed int v3; // esi\n  void *v4; // rdi\n\n  v3 = dword_94F0B0[a1] + a2;\n  v4 = &unk_927B28;\n  if ( a3 == 2 )\n    v4 = &unk_9333A0;\n  return (unsigned int)sub_41A430((__int64)v4, v3) != 3 - a3;\n}\n", 
            "funcStartAddr": "0x4813b0L", 
            "funcEndAddr": "0x4813e3L", 
            "funcName": "sub_4813B0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4813F0(int a1, int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, double a8, double a9, __m128 a10, __m128 a11)\n{\n  int v11; // er15\n  int v12; // er14\n  int v13; // er12\n  int v14; // ebx\n  __m128 v15; // xmm4\n  __m128 v16; // xmm5\n  _BOOL8 result; // rax\n  char v18; // [rsp+0h] [rbp-28h]\n\n  v11 = a3;\n  v12 = dword_94F9D0[a1];\n  v13 = dword_94FE70[a1];\n  v14 = dword_950310[a1];\n  if ( (unsigned int)sub_414710(a2 + dword_94F9F0[a1], a2 + dword_9507D0[a1]) )\n    result = (unsigned int)sub_44B230(\n                             3 - v11,\n                             1,\n                             3,\n                             (unsigned int)(a2 + v12),\n                             (unsigned int)(a2 + v13),\n                             (unsigned int)(a2 + v14),\n                             a4,\n                             a5,\n                             a6,\n                             a7,\n                             v15,\n                             v16,\n                             a10,\n                             a11,\n                             v18) != 0;\n  else\n    result = 1LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x4813f0L", 
            "funcEndAddr": "0x481475L", 
            "funcName": "sub_4813F0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_481480(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // ebp\n  signed int v5; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_94F570[a1];\n  v5 = sub_4083A0(a2 + dword_94F9F0[a1]);\n  result = 0LL;\n  if ( v5 >= 3 )\n    result = (unsigned int)sub_44B7B0(v3, 1, 2, a2 + v4, a2, a2) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x481480L", 
            "funcEndAddr": "0x4814d6L", 
            "funcName": "sub_481480"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4814E0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  _BOOL4 v6; // ebp\n\n  v4 = a2;\n  v5 = a4 + dword_94FEB0[a3];\n  v6 = 0;\n  if ( (unsigned int)sub_44B7B0(a2, 1, 2, a4, v5, a4, a1) )\n    v6 = (unsigned __int64)sub_44B7B0(v4, 1, 2, a4, v5, v5) == 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x4814e0L", 
            "funcEndAddr": "0x48154fL", 
            "funcName": "sub_4814E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_481550(int a1, int a2)\n{\n  int v2; // er15\n  int v3; // ebp\n  _BOOL4 v4; // er14\n  signed int v5; // eax\n\n  v2 = dword_94FA30[a1];\n  v3 = a2 + dword_94FEF0[a1];\n  v4 = 0;\n  if ( (signed int)sub_4083A0(a2 + dword_950350[a1]) >= 2 && (signed int)sub_4083A0(a2 + v2) >= 2 )\n  {\n    v5 = sub_4083A0(v3);\n    v4 = v5 < 1;\n    LOBYTE(v4) = v5 > 1;\n  }\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x481550L", 
            "funcEndAddr": "0x4815b2L", 
            "funcName": "sub_481550"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_481720(int a1, int a2, int a3)\n{\n  int v3; // ebp\n  int v4; // ecx\n  bool result; // al\n\n  v3 = a3;\n  v4 = sub_4083A0(a2 + dword_94F550[a1]);\n  result = 0;\n  if ( v4 == 2 )\n    result = (signed int)sub_4099C0(a2, 3 - v3, 20, 0LL) > 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x481720L", 
            "funcEndAddr": "0x481767L", 
            "funcName": "sub_481720"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_481770@<rax>(char a1@<al>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>, __int64 a5@<r8>, __int64 a6@<r9>, __m128 a7@<xmm0>, __m128 a8@<xmm1>, __m128 a9@<xmm2>, __m128 a10@<xmm3>, __m128 a11@<xmm4>, __m128 a12@<xmm5>, __m128 a13@<xmm6>, __m128 a14@<xmm7>)\n{\n  unsigned int v14; // er15\n  unsigned int v15; // er12\n  __int64 v16; // r14\n  __int64 v17; // rbp\n  _BOOL4 v18; // er13\n  unsigned int v20; // [rsp+0h] [rbp-34h]\n\n  v14 = a4 + dword_94F570[a3];\n  v15 = a4 + dword_94F0B0[a3];\n  v16 = a4 + dword_94FEB0[a3];\n  v17 = a4 + dword_94F9D0[a3];\n  v18 = 0;\n  if ( (unsigned int)sub_44B230(3 - a2, 1, 1, (unsigned int)v17, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a1)\n    || (unsigned int)sub_44B7B0(v20, 1, 3, a4, 0LL, (unsigned int)v17, v17) )\n  {\n    v18 = (unsigned __int64)sub_44B7B0(v20, 0, 4, a4, v14, v15, v16, a4) == 0;\n  }\n  return (unsigned int)v18;\n}\n", 
            "funcStartAddr": "0x481770L", 
            "funcEndAddr": "0x48183eL", 
            "funcName": "sub_481770"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_481840(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er15\n  unsigned int v4; // ebp\n  __int64 v5; // r13\n  int v6; // er14\n  _BOOL8 v7; // r12\n  unsigned int v9; // [rsp+Ch] [rbp-3Ch]\n  __int64 v10; // [rsp+10h] [rbp-38h]\n\n  v3 = a2 + dword_94F550[a1];\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94F0B0[a1];\n  v6 = dword_94F0D0[a1];\n  v10 = a2 + dword_94F9F0[a1];\n  v9 = a3;\n  LODWORD(v7) = 0;\n  if ( (signed int)sub_4099C0(v4, 3 - a3, 20, 0LL) >= 3 )\n  {\n    LODWORD(v7) = 0;\n    if ( (unsigned int)sub_44B7B0(v9, 1, 4, a2, v4, v3, v5, a2 + v6) )\n      v7 = (unsigned int)sub_44B7B0(v9, 1, 5, a2, v4, v3, v10, v5, a2) != 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x481840L", 
            "funcEndAddr": "0x481925L", 
            "funcName": "sub_481840"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_481950(int a1, int a2, int a3)\n{\n  int v3; // er14\n  signed int v4; // er15\n  signed int v5; // ebx\n  int v6; // eax\n  _BOOL4 v7; // ebp\n  void *v8; // rdi\n\n  v3 = a3;\n  v4 = a2 + dword_94F5B0[a1];\n  v5 = dword_94F550[a1] + a2;\n  LOBYTE(v6) = sub_46A080(v5);\n  v7 = 0;\n  if ( !v6 && (unsigned int)sub_4083A0(v5) == 2 )\n  {\n    v8 = &unk_927B28;\n    if ( v3 == 2 )\n      v8 = &unk_9333A0;\n    v7 = (unsigned __int64)sub_41A340((__int64)v8, v4) == 3 - v3;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x481950L", 
            "funcEndAddr": "0x4819c0L", 
            "funcName": "sub_481950"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4819C0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebp\n  int v5; // er15\n  _BOOL8 v6; // r12\n  _QWORD v8[7]; // [rsp+0h] [rbp-38h]\n\n  v3 = a3;\n  v4 = a2 + dword_94FEF0[a1];\n  v5 = dword_94FA30[a1];\n  LODWORD(v8[0]) = a2 + dword_950390[a1];\n  LODWORD(v6) = 0;\n  if ( !(unsigned int)sub_44B980(a3, 0, 2, a2, v4, a2 + dword_94FED0[a1], v8[0]) )\n    v6 = (unsigned int)sub_44B7B0(v3, 1, 2, a2 + v5, v4, v4) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x4819c0L", 
            "funcEndAddr": "0x481a55L", 
            "funcName": "sub_4819C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_481A60@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebp\n  _BOOL8 v6; // rbx\n  __int64 v8; // [rsp-8h] [rbp-28h]\n\n  v8 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94F550[a3];\n  LODWORD(v6) = 0;\n  if ( (signed int)sub_4083A0(a4 + dword_94FEB0[a3]) >= 2 )\n  {\n    LODWORD(v6) = 0;\n    if ( (signed int)sub_4099C0(v5, 3 - v4, 20, 0LL) >= 2 )\n      v6 = (unsigned int)sub_44B7B0(v4, 1, 2, a4, v5, a4, v8) != 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x481a60L", 
            "funcEndAddr": "0x481adeL", 
            "funcName": "sub_481A60"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_481AE0@<rax>(unsigned int a1@<eax>, unsigned int a2@<edx>, int a3@<edi>, int a4@<esi>)\n{\n  int v4; // er14\n  unsigned int v5; // er12\n  unsigned int v6; // er15\n  int v7; // ebx\n  _BOOL4 v8; // er13\n  signed int v9; // ebp\n  unsigned __int64 v11; // [rsp-4h] [rbp-38h]\n\n  v11 = __PAIR__(a2, a1);\n  v4 = dword_94F9F0[a3];\n  v5 = a4 + dword_94FED0[a3];\n  v6 = a4 + dword_94FEB0[a3];\n  v7 = 3 - a2;\n  v8 = 0;\n  if ( (unsigned int)sub_4099C0(a4, 3 - a2, 20, 0LL) == 2\n    || (signed int)sub_4083A0(a4 + v4) >= 3\n    && (v8 = 0, v9 = sub_4099C0(a4, v7, 20, 0LL), v9 < (signed int)sub_4099C0(v5, v7, 20, 0LL)) )\n  {\n    v8 = (unsigned __int64)sub_44B7B0(HIDWORD(v11), 0, 1, v5, v6, v11) == 0;\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x481ae0L", 
            "funcEndAddr": "0x481ba1L", 
            "funcName": "sub_481AE0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_481BB0(int a1, unsigned int a2, int a3)\n{\n  int v3; // er14\n  int v4; // ebp\n  signed int v5; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_94F570[a1];\n  v5 = sub_4083A0(a2 + dword_94FE90[a1]);\n  result = 0LL;\n  if ( v5 >= 2 )\n    result = (unsigned int)sub_44B7B0(3 - v3, 1, 1, a2, a2 + v4) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x481bb0L", 
            "funcEndAddr": "0x481c08L", 
            "funcName": "sub_481BB0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_481C10(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  int v5; // er15\n  _BOOL8 v6; // rbp\n\n  v3 = a3;\n  v4 = a2 + dword_94FEF0[a1];\n  v5 = dword_94FA50[a1];\n  LODWORD(v6) = 0;\n  if ( (unsigned int)sub_4083A0(a2 + dword_94FA30[a1]) == 1 )\n  {\n    LODWORD(v6) = 0;\n    if ( (unsigned int)sub_44B7B0(3 - v3, 1, 1, v4, a2 + v5) )\n      v6 = (unsigned int)sub_44B7B0(v3, 1, 2, a2, v4, v4) != 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x481c10L", 
            "funcEndAddr": "0x481ca0L", 
            "funcName": "sub_481C10"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_481CA0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  int v5; // er15\n  _BOOL8 v6; // rbp\n\n  v3 = a3;\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = dword_94F9D0[a1];\n  LODWORD(v6) = 0;\n  if ( (unsigned int)sub_4083A0(a2 + dword_94F9F0[a1]) == 1 )\n  {\n    LODWORD(v6) = 0;\n    if ( (unsigned int)sub_44B7B0(3 - v3, 1, 1, v4, a2 + v5) )\n      v6 = (unsigned int)sub_44B7B0(v3, 1, 2, a2, v4, v4) != 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x481ca0L", 
            "funcEndAddr": "0x481d30L", 
            "funcName": "sub_481CA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_481D30(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  int v5; // er15\n  _BOOL8 v6; // rbp\n\n  v3 = a3;\n  v4 = a2 + dword_950370[a1];\n  v5 = dword_94FED0[a1];\n  LODWORD(v6) = 0;\n  if ( (unsigned int)sub_4083A0(a2 + dword_94FEB0[a1]) == 1 )\n  {\n    LODWORD(v6) = 0;\n    if ( (unsigned int)sub_44B7B0(3 - v3, 1, 1, v4, a2 + v5) )\n      v6 = (unsigned int)sub_44B7B0(v3, 1, 2, a2, v4, v4) != 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x481d30L", 
            "funcEndAddr": "0x481dc0L", 
            "funcName": "sub_481D30"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_481DC0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // ebx\n  unsigned int v4; // ebp\n  _BOOL4 v5; // er14\n  signed int v6; // eax\n\n  v3 = a2 + dword_94F550[a1];\n  v4 = a2 + dword_94FE90[a1];\n  v5 = 0;\n  if ( (unsigned int)sub_44B5C0(a3, 1, a2, v3, a2 + dword_94F9D0[a1], v4) && (signed int)sub_4083A0(v3) >= 2 )\n  {\n    v6 = sub_4083A0(v4);\n    v5 = v6 < 1;\n    LOBYTE(v5) = v6 > 1;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x481dc0L", 
            "funcEndAddr": "0x481e27L", 
            "funcName": "sub_481DC0"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_481E70(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  bool result; // al\n\n  v2 = dword_950390[a1];\n  v3 = sub_4083A0(a2 + dword_94FEB0[a1]);\n  result = 0;\n  if ( v3 == 2 )\n    result = (signed int)sub_4083A0(a2 + v2) > 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x481e70L", 
            "funcEndAddr": "0x481eb0L", 
            "funcName": "sub_481E70"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_481EB0(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  bool result; // al\n\n  v2 = dword_950350[a1];\n  v3 = sub_4083A0(a2 + dword_94F9D0[a1]);\n  result = 0;\n  if ( v3 == 2 )\n    result = (signed int)sub_4083A0(a2 + v2) > 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x481eb0L", 
            "funcEndAddr": "0x481ef0L", 
            "funcName": "sub_481EB0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_481EF0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  _BOOL8 v6; // rbp\n\n  v4 = a2;\n  v5 = a4 + dword_94F570[a3];\n  LODWORD(v6) = 0;\n  if ( (unsigned int)sub_44B7B0(a2, 1, 1, a4, v5, a1) )\n    v6 = (unsigned int)sub_44B7B0(v4, 0, 1, a4, v5) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x481ef0L", 
            "funcEndAddr": "0x481f59L", 
            "funcName": "sub_481EF0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_481F90(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  int v5; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94F0D0[a1];\n  v5 = sub_4083A0(v4);\n  result = 0LL;\n  if ( v5 == 3 )\n    result = (unsigned int)sub_44B7B0(v3, 1, 1, a2, v4) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x481f90L", 
            "funcEndAddr": "0x481fdcL", 
            "funcName": "sub_481F90"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_482010@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<ecx>, int a4@<edi>, unsigned int a5@<esi>)\n{\n  unsigned int v5; // er14\n  signed __int64 v6; // rbx\n  unsigned int v7; // ebp\n  __int64 v9; // [rsp-8h] [rbp-28h]\n\n  v9 = a1;\n  v5 = a2;\n  v6 = dword_94FEB0[a4] + (signed __int64)(signed int)a5;\n  if ( a3 )\n  {\n    sub_469910(a5, v6);\n    v7 = 0;\n  }\n  else\n  {\n    v7 = 0;\n    if ( (unsigned int)sub_4083A0(v6) == 2 )\n    {\n      if ( dword_98A7F4 )\n      {\n        v7 = 0;\n        if ( (unsigned int)sub_43B050(v6, 0LL) )\n          return v7;\n      }\n      else if ( dword_8E94D4[95 * v6] )\n      {\n        return v7;\n      }\n      return (unsigned int)sub_44B7B0(v5, 1, 1, a5, a5, v9) == 0;\n    }\n  }\n  return v7;\n}\n", 
            "funcStartAddr": "0x482010L", 
            "funcEndAddr": "0x4820a7L", 
            "funcName": "sub_482010"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4820B0(int a1, signed int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er14\n  signed __int64 v5; // rbx\n  _BOOL8 v6; // rbp\n\n  v4 = a3;\n  v5 = dword_94FEB0[a1] + (signed __int64)a2;\n  if ( a4 )\n  {\n    sub_469A60(a2, v5);\n    LODWORD(v6) = 0;\n  }\n  else\n  {\n    LODWORD(v6) = 0;\n    if ( (unsigned int)sub_4083A0(v5) == 2 )\n    {\n      if ( dword_98A7F4 )\n      {\n        LODWORD(v6) = 0;\n        if ( (unsigned int)sub_43B050(v5, 0LL) )\n          return (unsigned int)v6;\n      }\n      else if ( dword_8E94D4[95 * v5] )\n      {\n        return (unsigned int)v6;\n      }\n      LODWORD(v6) = 0;\n      if ( (unsigned int)sub_43F100(a2, 3 - v4) )\n        v6 = (unsigned int)sub_43F100(a2, v4) != 0;\n    }\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x4820b0L", 
            "funcEndAddr": "0x482151L", 
            "funcName": "sub_4820B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_482160(int a1, unsigned int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er14\n  signed __int64 v5; // rbp\n  _BOOL4 v6; // er12\n  unsigned int v7; // er15\n\n  v4 = a3;\n  v5 = dword_94FE90[a1] + (signed __int64)(signed int)a2;\n  if ( a4 )\n  {\n    sub_469A60(a2, v5);\n    v6 = 0;\n  }\n  else\n  {\n    v7 = a2 + dword_94F9F0[a1];\n    v6 = 0;\n    if ( (unsigned int)sub_4083A0(v5) == 2 )\n    {\n      if ( dword_98A7F4 )\n      {\n        v6 = 0;\n        if ( (unsigned int)sub_43B050(v5, 0LL) )\n          return (unsigned int)v6;\n      }\n      else if ( dword_8E94D4[95 * v5] )\n      {\n        return (unsigned int)v6;\n      }\n      v6 = 0;\n      if ( (signed int)sub_4099C0(v7, v4, 20, 0LL) >= 3 && (unsigned int)sub_43F100(a2, v4) )\n        v6 = (unsigned __int64)sub_44B7B0(v4, 1, 2, a2, v7, v7) == 5;\n    }\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x482160L", 
            "funcEndAddr": "0x482232L", 
            "funcName": "sub_482160"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_482240(int a1, int a2, int a3)\n{\n  int v3; // er14\n  int v4; // er12\n  __int64 v5; // rbx\n  __int64 v6; // r15\n  _BOOL4 v7; // er13\n  __int64 v8; // rbx\n  __int64 v9; // r15\n  signed int v10; // eax\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = dword_94F530[a1];\n  v6 = dword_94F9F0[a1];\n  v7 = 0;\n  if ( (signed int)sub_4083A0(a2 + dword_94F090[a1]) < 2 )\n    return (unsigned int)v7;\n  v8 = a2 + v5;\n  v9 = a2 + v6;\n  if ( dword_98A7F4 )\n  {\n    v7 = 0;\n    if ( (unsigned int)sub_43B050(v8, 0LL) )\n      return (unsigned int)v7;\n    if ( dword_98A7F4 )\n    {\n      v7 = 0;\n      if ( !(unsigned int)sub_43B050(v9, 0LL) )\n        goto LABEL_9;\n      return (unsigned int)v7;\n    }\n  }\n  else if ( dword_8E94D4[95 * v8] )\n  {\n    return (unsigned int)v7;\n  }\n  v7 = 0;\n  if ( !dword_8E94D4[95 * v9] )\n  {\nLABEL_9:\n    v10 = sub_4099C0(v4, 3 - v3, 20, 0LL);\n    v7 = v10 < 1;\n    LOBYTE(v7) = v10 > 1;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x482240L", 
            "funcEndAddr": "0x48231fL", 
            "funcName": "sub_482240"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_482320(int a1, unsigned int a2, unsigned int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, double a8, double a9, __m128 a10, __m128 a11)\n{\n  unsigned int v11; // er13\n  int v12; // ST14_4\n  int v13; // er14\n  int v14; // er15\n  int v15; // er12\n  __int128 v16; // cx\n  __m128 v17; // xmm4\n  __m128 v18; // xmm5\n  __int64 v19; // rdx\n  __int64 v20; // r12\n  __int64 v21; // r15\n  char v23; // [rsp+0h] [rbp-48h]\n  unsigned int v24; // [rsp+4h] [rbp-44h]\n  __int64 v25; // [rsp+8h] [rbp-40h]\n  __int64 v26; // [rsp+10h] [rbp-38h]\n\n  v11 = a3;\n  v12 = a2 + dword_94F9D0[a1];\n  v13 = dword_94F0B0[a1];\n  v14 = dword_94F0D0[a1];\n  v15 = dword_94F570[a1];\n  v26 = dword_94F530[a1];\n  v25 = dword_94F9F0[a1];\n  DWORD2(v16) = 0;\n  if ( (signed int)sub_4083A0(a2 + dword_94F090[a1]) < 2 )\n    return DWORD2(v16);\n  v16 = a2 + v13;\n  if ( !(unsigned int)sub_44B230(v11, 1, 3, v16, a2 + v14, a2 + v15, a4, a5, a6, a7, v17, v18, a10, a11, v23) )\n    return DWORD2(v16);\n  v19 = (signed int)a2 + v25;\n  if ( dword_98A7F4 )\n  {\n    v20 = (signed int)a2 + v25;\n    DWORD2(v16) = 0;\n    v21 = (signed int)a2 + v26;\n    if ( (unsigned int)sub_43B050(a2 + (unsigned int)v26, 0LL) )\n      return DWORD2(v16);\n    v19 = (signed int)a2 + v25;\n    if ( dword_98A7F4 )\n    {\n      DWORD2(v16) = 0;\n      if ( !(unsigned int)sub_43B050(v20, 0LL) )\n        goto LABEL_10;\n      return DWORD2(v16);\n    }\n  }\n  else\n  {\n    v21 = (signed int)a2 + v26;\n    if ( dword_8E94D4[95 * v21] )\n      return DWORD2(v16);\n  }\n  v20 = v19;\n  DWORD2(v16) = 0;\n  if ( !dword_8E94D4[95 * v19] )\nLABEL_10:\n    DWORD2(v16) = (unsigned __int64)sub_44B980(v11, 0, 3, a2, 0LL, v24, v21, v20) == 0;\n  return DWORD2(v16);\n}\n", 
            "funcStartAddr": "0x482320L", 
            "funcEndAddr": "0x48247dL", 
            "funcName": "sub_482320"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_482480(int a1, unsigned int a2, int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // rbp\n  unsigned int v5; // er15\n  _BOOL8 v6; // r12\n\n  v3 = a2 + dword_94F570[a1];\n  v4 = a2 + dword_94F550[a1];\n  v5 = 3 - a3;\n  LODWORD(v6) = 0;\n  if ( (unsigned int)sub_44B7B0(3 - a3, 1, 3, a2, v3, (unsigned int)v4, a2) )\n    v6 = (unsigned int)sub_44B980(v5, 0, 3, a2, v3, (unsigned int)v4, a2, v4) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x482480L", 
            "funcEndAddr": "0x482510L", 
            "funcName": "sub_482480"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_482590(int a1, int a2, int a3)\n{\n  int v3; // ebp\n  int v4; // er15\n  signed int v5; // esi\n  __int64 v6; // rbx\n  __int64 v7; // r14\n  void *v8; // rdi\n  int v9; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a2 + dword_950350[a1];\n  v6 = dword_94F9F0[a1];\n  v7 = dword_94EC10[a1];\n  v8 = &unk_927B28;\n  if ( a3 == 1 )\n    v8 = &unk_9333A0;\n  v9 = sub_41A430((__int64)v8, v5);\n  result = 0LL;\n  if ( v9 == v3 && dword_954FF0[19 * (v4 + v6)] == 1 )\n    result = dword_954FF0[19 * (v4 + v7)] == 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x482590L", 
            "funcEndAddr": "0x482608L", 
            "funcName": "sub_482590"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4826B0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<ecx>, int a4@<edi>, unsigned int a5@<esi>)\n{\n  unsigned int v5; // er14\n  unsigned int v6; // er15\n  unsigned int v7; // ebp\n  _BOOL8 v8; // r13\n  unsigned int v9; // er12\n  _QWORD v11[7]; // [rsp+0h] [rbp-38h]\n\n  v5 = a2;\n  v6 = a5 + dword_950350[a4];\n  v7 = a5 + dword_94FED0[a4];\n  if ( a3 )\n  {\n    sub_421D90(a5, 2, v6, 2, v7);\n    LODWORD(v8) = 0;\n  }\n  else\n  {\n    v9 = a5 + dword_94FEB0[a4];\n    LODWORD(v8) = 0;\n    if ( !(unsigned int)sub_44B980(3 - a2, 0, 1, v9, v6, v7, a1) )\n    {\n      LODWORD(v8) = 1;\n      if ( !(unsigned int)sub_44B7B0(v5, 1, 2, a5, v9, v9) )\n      {\n        LODWORD(v11[0]) = v7;\n        v8 = (unsigned int)sub_44B980(v5, 0, 2, a5, v9, v6, v11[0]) != 0;\n      }\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x4826b0L", 
            "funcEndAddr": "0x48278eL", 
            "funcName": "sub_4826B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_482790(int a1, unsigned int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er14\n  __int64 v5; // rbx\n  __int64 v6; // r15\n  _BOOL4 v7; // er12\n  unsigned int v8; // er13\n  __int64 v9; // ST10_8\n  __int64 v11; // [rsp+0h] [rbp-38h]\n\n  v4 = a3;\n  v5 = a2 + dword_94F570[a1];\n  v6 = a2 + dword_94F9F0[a1];\n  if ( a4 )\n  {\n    sub_46A120(a2, a3, v5, v6);\n    v7 = 0;\n  }\n  else\n  {\n    v8 = a2 + dword_94FED0[a1];\n    HIDWORD(v9) = a2 + dword_94FA30[a1];\n    LODWORD(v9) = a2 + dword_94FEB0[a1];\n    v7 = 0;\n    if ( (unsigned int)sub_44B7B0(a3, 1, 1, a2, (unsigned int)v5, v9) )\n    {\n      v7 = 0;\n      if ( (unsigned int)sub_44B980(v4, 1, 2, a2, v8, (unsigned int)v5, v6) )\n        v7 = (unsigned __int64)sub_44B980(v4, 0, 3, a2, HIDWORD(v11), (unsigned int)v11, v5, v6) == 0;\n    }\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x482790L", 
            "funcEndAddr": "0x482887L", 
            "funcName": "sub_482790"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_482890(int a1, unsigned int a2, int a3, int a4)\n{\n  __int64 v4; // rbx\n  __int64 v5; // r14\n  _BOOL4 v6; // er15\n  unsigned int v8; // er13\n  __int64 v9; // ST10_8\n  unsigned int v10; // ebp\n  __int64 v11; // [rsp+0h] [rbp-38h]\n\n  v4 = a2 + dword_94F0B0[a1];\n  v5 = a2 + dword_94F530[a1];\n  if ( a4 )\n  {\n    sub_421D90(a2, 2, v4, 2, v5);\n    v6 = 0;\n  }\n  else\n  {\n    v8 = a2 + dword_94F550[a1];\n    HIDWORD(v9) = a2 + dword_94F570[a1];\n    LODWORD(v9) = a2 + dword_94F9F0[a1];\n    v10 = 3 - a3;\n    v6 = 0;\n    if ( (unsigned int)sub_44B7B0(3 - a3, 1, 1, v8, (unsigned int)v4, v9) )\n    {\n      v6 = 0;\n      if ( (unsigned int)sub_44B980(v10, 1, 2, v8, a2, (unsigned int)v4, v5) )\n      {\n        v6 = 0;\n        if ( !(unsigned int)sub_44B980(v10, 0, 3, v8, HIDWORD(v11), (unsigned int)v11, v4, v5) )\n          v6 = (unsigned __int64)sub_44B980(v10, 0, 3, v8, (unsigned int)v11, HIDWORD(v11), v4, v5) == 0;\n      }\n    }\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x482890L", 
            "funcEndAddr": "0x4829cfL", 
            "funcName": "sub_482890"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4829D0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<ecx>, int a4@<edi>, unsigned int a5@<esi>)\n{\n  unsigned int v5; // er14\n  unsigned int v6; // ebp\n  signed int v7; // er8\n  _BOOL8 v8; // r15\n  unsigned int v9; // er12\n  __int64 v11; // [rsp-8h] [rbp-38h]\n\n  v11 = a1;\n  v5 = a2;\n  v6 = a5 + dword_94F0B0[a4];\n  v7 = a5 + dword_94F530[a4];\n  if ( a3 )\n  {\n    sub_421D90(a5, 2, v6, 2, v7);\n    LODWORD(v8) = 0;\n  }\n  else\n  {\n    LODWORD(v8) = 0;\n    if ( !dword_88C2FC )\n    {\n      v9 = a5 + dword_94F550[a4];\n      if ( (signed int)sub_4083A0(v7) <= 4 )\n      {\n        LODWORD(v8) = 0;\n        if ( (unsigned int)sub_44B7B0(3 - v5, 1, 1, v9, v6, v11) )\n        {\n          if ( (unsigned int)sub_43F100(v9, 3 - v5) )\n            v8 = (unsigned int)sub_44ADE0(a5, v5, v9) != 0;\n        }\n      }\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x4829d0L", 
            "funcEndAddr": "0x482a98L", 
            "funcName": "sub_4829D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_482AD0@<rax>(int a1@<eax>, unsigned int a2@<edx>, int a3@<ecx>, int a4@<edi>, unsigned int a5@<esi>)\n{\n  unsigned int v5; // er15\n  unsigned int v6; // ebx\n  unsigned int v7; // er13\n  _BOOL4 v8; // er12\n  int v9; // er14\n  __int64 v11; // [rsp-4h] [rbp-38h]\n  unsigned int v12; // [rsp+0h] [rbp-34h]\n\n  LODWORD(v11) = a1;\n  v5 = a2;\n  v6 = a5 + dword_950350[a4];\n  v7 = a5 + dword_94FED0[a4];\n  if ( a3 )\n  {\n    sub_46A120(a5, a2, v6, v7);\n    v8 = 0;\n  }\n  else\n  {\n    HIDWORD(v11) = a5 + dword_950370[a4];\n    v9 = a5 + dword_94FEB0[a4];\n    v8 = 0;\n    if ( (signed int)sub_4083A0(v9) <= 3 )\n    {\n      v8 = 0;\n      if ( (signed int)sub_4099C0(a5, 3 - v5, 20, 0LL) > 1 || (signed int)sub_4083A0(v9) <= 2 )\n      {\n        v8 = 0;\n        if ( (unsigned int)sub_44B7B0(v5, 0, 1, a5, v6, v11) )\n        {\n          v8 = 0;\n          if ( (unsigned int)sub_44B7B0(v5, 0, 1, a5, v7) )\n            v8 = (unsigned __int64)sub_44B7B0(v5, 1, 1, a5, v12) == 0;\n        }\n      }\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x482ad0L", 
            "funcEndAddr": "0x482bdfL", 
            "funcName": "sub_482AD0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_482BE0(int a1, unsigned int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er13\n  unsigned int v5; // er15\n  unsigned int v6; // ebp\n  _BOOL8 v7; // r13\n  unsigned int v9; // er12\n  unsigned int v10; // er14\n  __int64 v11[2]; // [rsp+0h] [rbp-48h]\n  unsigned int v12; // [rsp+14h] [rbp-34h]\n\n  v4 = a3;\n  v5 = a2 + dword_94F570[a1];\n  v6 = a2 + dword_94F0B0[a1];\n  if ( a4 )\n  {\n    sub_421D90(a2, 2, v5, 2, v6);\nLABEL_3:\n    LODWORD(v7) = 0;\n    return (unsigned int)v7;\n  }\n  v9 = a2 + dword_94F550[a1];\n  v10 = 3 - a3;\n  if ( !(unsigned int)sub_43F100(a2 + dword_94F550[a1], 3 - a3) )\n    goto LABEL_3;\n  v12 = v4;\n  LODWORD(v7) = 0;\n  if ( !(unsigned int)sub_44B980(v10, 0, 1, v9, v5, v6) )\n  {\n    LODWORD(v11[0]) = v6;\n    v7 = (unsigned int)sub_44B980(v12, 0, 2, a2, v9, v5, v11[0]) != 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x482be0L", 
            "funcEndAddr": "0x482cb4L", 
            "funcName": "sub_482BE0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_482CC0(int a1, unsigned int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er13\n  unsigned int v5; // er15\n  unsigned int v6; // ebp\n  _BOOL8 v7; // r13\n  unsigned int v9; // er12\n  unsigned int v10; // er14\n  __int64 v11[2]; // [rsp+0h] [rbp-48h]\n  unsigned int v12; // [rsp+14h] [rbp-34h]\n\n  v4 = a3;\n  v5 = a2 + dword_94F590[a1];\n  v6 = a2 + dword_94F0D0[a1];\n  if ( a4 )\n  {\n    sub_421D90(a2, 2, v5, 2, v6);\nLABEL_3:\n    LODWORD(v7) = 0;\n    return (unsigned int)v7;\n  }\n  v9 = a2 + dword_94F570[a1];\n  v10 = 3 - a3;\n  if ( !(unsigned int)sub_43F100(a2 + dword_94F570[a1], 3 - a3) )\n    goto LABEL_3;\n  v12 = v4;\n  LODWORD(v7) = 0;\n  if ( !(unsigned int)sub_44B980(v10, 0, 1, v9, v5, v6) )\n  {\n    LODWORD(v11[0]) = v6;\n    v7 = (unsigned int)sub_44B980(v12, 0, 2, a2, v9, v5, v11[0]) != 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x482cc0L", 
            "funcEndAddr": "0x482d94L", 
            "funcName": "sub_482CC0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_482DA0@<rax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<edi>, signed int a5@<esi>)\n{\n  signed __int64 v5; // rbp\n  signed __int64 v6; // rbx\n  _BOOL4 v7; // er13\n  unsigned int v9; // er15\n  unsigned int v10; // er14\n  __int64 v11; // [rsp-4h] [rbp-38h]\n  unsigned int v12; // [rsp+0h] [rbp-34h]\n\n  LODWORD(v11) = a1;\n  v5 = a5 + (signed __int64)dword_94FEB0[a4];\n  v6 = a5 + (signed __int64)dword_950370[a4];\n  if ( a3 )\n  {\n    sub_421D90(a5, 2, v5, 2, v6);\n    v7 = 0;\n  }\n  else\n  {\n    v9 = a5 + dword_950350[a4];\n    if ( dword_954FF0[19 * v5] == 1 || (v7 = 0, dword_954FF0[19 * v6] == 1) )\n    {\n      v10 = 3 - a2;\n      HIDWORD(v11) = a2;\n      v7 = 0;\n      if ( (unsigned int)sub_43F100(v9, 3 - a2) == 5 )\n      {\n        v7 = 0;\n        if ( !(unsigned int)sub_44B980(v10, 0, 1, v9, (unsigned int)v5, (unsigned int)v6, v11) )\n          v7 = (unsigned __int64)sub_44B7B0(v12, 1, 2, (unsigned int)a5, v9, v9) == 5;\n      }\n    }\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x482da0L", 
            "funcEndAddr": "0x482e97L", 
            "funcName": "sub_482DA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_482EA0(int a1, signed int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er14\n  signed __int64 v5; // rbp\n  signed __int64 v6; // rbx\n  _BOOL8 v7; // r12\n\n  v4 = a3;\n  v5 = a2 + (signed __int64)dword_94F550[a1];\n  v6 = a2 + (signed __int64)dword_94FED0[a1];\n  if ( a4 )\n  {\n    sub_46A120(a2, a3, v5, v6);\n    LODWORD(v7) = 0;\n    return (unsigned int)v7;\n  }\n  if ( dword_98A7F4 )\n  {\n    LODWORD(v7) = 0;\n    if ( (unsigned int)sub_43B050(v5, 0LL) )\n      return (unsigned int)v7;\n    if ( dword_98A7F4 )\n    {\n      LODWORD(v7) = 0;\n      if ( (unsigned int)sub_43B050(v6, 0LL) )\n        return (unsigned int)v7;\n      goto LABEL_11;\n    }\n  }\n  else\n  {\n    LODWORD(v7) = 0;\n    if ( dword_8E94D4[95 * v5] )\n      return (unsigned int)v7;\n  }\n  LODWORD(v7) = 0;\n  if ( dword_8E94D4[95 * v6] )\n    return (unsigned int)v7;\nLABEL_11:\n  LODWORD(v7) = 0;\n  if ( (unsigned int)sub_44B7B0(v4, 1, 1, (unsigned int)a2, (unsigned int)v5) )\n    v7 = (unsigned int)sub_44B7B0(v4, 1, 1, (unsigned int)a2, (unsigned int)v6) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x482ea0L", 
            "funcEndAddr": "0x482f93L", 
            "funcName": "sub_482EA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_482FA0(int a1, unsigned int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er14\n  __int64 v5; // rbx\n  __int64 v6; // r15\n  _BOOL4 v7; // er12\n  unsigned int v8; // er13\n  __int64 v10; // [rsp+0h] [rbp-38h]\n  unsigned int v11; // [rsp+0h] [rbp-38h]\n  unsigned int v12; // [rsp+4h] [rbp-34h]\n\n  v4 = a3;\n  v5 = a2 + dword_94F570[a1];\n  v6 = a2 + dword_94F9F0[a1];\n  if ( a4 )\n  {\n    sub_46A120(a2, a3, v5, v6);\n    v7 = 0;\n  }\n  else\n  {\n    HIDWORD(v10) = a2 + dword_94FA30[a1];\n    LODWORD(v10) = a2 + dword_94FEB0[a1];\n    v8 = a2 + dword_94F550[a1];\n    v7 = 0;\n    if ( (unsigned int)sub_4083A0(v5) == 3 )\n    {\n      v7 = 0;\n      if ( !(unsigned int)sub_44B7B0(v4, 1, 1, a2, v8, v10) )\n      {\n        v7 = 0;\n        if ( (unsigned int)sub_44B7B0(v4, 1, 2, a2, v11, (unsigned int)v5) )\n          v7 = (unsigned __int64)sub_44B980(v4, 0, 3, a2, v12, v11, v5, v6) == 0;\n      }\n    }\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x482fa0L", 
            "funcEndAddr": "0x48309dL", 
            "funcName": "sub_482FA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4830A0(int a1, unsigned int a2, int a3, int a4)\n{\n  int v4; // er13\n  __int64 v5; // rbx\n  __int64 v6; // r14\n  _BOOL4 v7; // er15\n  __int64 v8; // r12\n  __int64 v9; // r12\n  __int64 v11; // [rsp+0h] [rbp-38h]\n  __int64 v12; // [rsp+0h] [rbp-38h]\n\n  v4 = a3;\n  v5 = a2 + dword_94F570[a1];\n  v6 = a2 + dword_94F9F0[a1];\n  if ( a4 )\n  {\n    sub_421D90(a2, 2, v5, 2, v6);\n    v7 = 0;\n  }\n  else\n  {\n    HIDWORD(v11) = a2 + dword_94FA30[a1];\n    LODWORD(v11) = a2 + dword_94FEB0[a1];\n    v8 = dword_94F550[a1];\n    v7 = 0;\n    if ( (unsigned int)sub_4083A0(v5) == 3 )\n    {\n      v9 = (signed int)a2 + v8;\n      if ( dword_98A7F4 )\n      {\n        v7 = 0;\n        if ( (unsigned int)sub_43B050(v9, 0LL) )\n          return (unsigned int)v7;\n      }\n      else if ( dword_8E94D4[95 * v9] )\n      {\n        return (unsigned int)v7;\n      }\n      v7 = 0;\n      if ( (unsigned int)sub_44B7B0(3 - v4, 1, 2, a2, (unsigned int)v11, (unsigned int)v5, v11) )\n        v7 = (unsigned __int64)sub_44B980(3 - v4, 0, 3, a2, HIDWORD(v12), (unsigned int)v12, v5, v6) == 0;\n    }\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x4830a0L", 
            "funcEndAddr": "0x4831c0L", 
            "funcName": "sub_4830A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4831C0(int a1, int a2)\n{\n  int v2; // er12\n  int v3; // ebx\n  int v4; // er15\n  _BOOL4 v5; // er14\n  signed int v6; // eax\n\n  v2 = dword_94F9F0[a1];\n  v3 = a2 + dword_94FE90[a1];\n  v4 = a2 + dword_950350[a1];\n  v5 = 0;\n  if ( (signed int)sub_4083A0(a2 + dword_94F570[a1]) >= 3\n    && (signed int)sub_4083A0(a2 + v2) >= 4\n    && (signed int)sub_4083A0(v3) >= 3 )\n  {\n    v6 = sub_4083A0(v4);\n    v5 = v6 < 2;\n    LOBYTE(v5) = v6 > 2;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x4831c0L", 
            "funcEndAddr": "0x483239L", 
            "funcName": "sub_4831C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_483240(int a1, int a2)\n{\n  int v2; // er14\n  int v3; // ebx\n  int v4; // er13\n  int v5; // er12\n  int v6; // er15\n  signed int v7; // eax\n  _BOOL4 v8; // ecx\n  signed int v9; // eax\n  signed int v10; // eax\n\n  v2 = dword_94F9F0[a1];\n  v3 = a2 + dword_94FA30[a1];\n  v4 = a2 + dword_950350[a1];\n  v5 = a2 + dword_94FE90[a1];\n  v6 = a2 + dword_94FED0[a1];\n  v7 = sub_4083A0(a2 + dword_94F570[a1]);\n  v8 = 0;\n  if ( v7 >= 3 )\n  {\n    if ( (signed int)sub_4083A0(a2 + v2) < 4 || (signed int)sub_4083A0(v3) < 4 || (signed int)sub_4083A0(v4) < 3 )\n    {\n      v8 = 0;\n    }\n    else\n    {\n      v9 = sub_4083A0(v5);\n      v8 = 0;\n      if ( v9 >= 3 )\n      {\n        v10 = sub_4083A0(v6);\n        v8 = v10 < 2;\n        LOBYTE(v8) = v10 > 2;\n      }\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x483240L", 
            "funcEndAddr": "0x4832f7L", 
            "funcName": "sub_483240"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_483310(int a1, signed int a2)\n{\n  signed int v2; // ebx\n  signed int v3; // ebp\n\n  v2 = a2 + dword_94FEB0[a1];\n  v3 = a2 + dword_94F550[a1];\n  sub_4217E0(a2);\n  sub_4217E0(v2);\n  sub_4217E0(v3);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x483310L", 
            "funcEndAddr": "0x483346L", 
            "funcName": "sub_483310"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_483360(int a1, signed int a2, int a3, int a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, double a9, double a10, __m128 a11, __m128 a12)\n{\n  _BOOL8 result; // rax\n  unsigned int v13; // er15\n  unsigned int v14; // er13\n  unsigned int v15; // ebx\n  int v16; // er12\n  __int64 v17; // rbp\n  __int64 v18; // r14\n  int v19; // eax\n  __m128 v20; // xmm4\n  __m128 v21; // xmm5\n  int v22; // ecx\n  int v23; // [rsp+0h] [rbp-34h]\n\n  if ( a4 )\n  {\n    sub_4217E0(a2);\n    result = 0LL;\n  }\n  else\n  {\n    v23 = a3;\n    v13 = a2 + dword_950310[a1];\n    v14 = a2 + dword_9507B0[a1];\n    v15 = a2 + dword_950C50[a1];\n    v16 = a2 + dword_950330[a1];\n    v17 = (unsigned int)(a2 + dword_9507D0[a1]);\n    v18 = (unsigned int)(a2 + dword_950C70[a1]);\n    LOBYTE(v19) = sub_46A080(dword_94F090[a1] + a2);\n    v22 = v19;\n    result = 0LL;\n    if ( !v22 )\n      result = (unsigned int)sub_44B230(3 - v23, 1, 6, v13, v14, v15, a5, a6, a7, a8, v20, v21, a11, a12, v16) != 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x483360L", 
            "funcEndAddr": "0x483423L", 
            "funcName": "sub_483360"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_483430(int a1, signed int a2)\n{\n  signed int v2; // ebx\n\n  v2 = a2 + dword_94F9F0[a1];\n  sub_4217E0(a2);\n  sub_4217E0(v2);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x483430L", 
            "funcEndAddr": "0x48344fL", 
            "funcName": "sub_483430"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_483470(int a1, int a2, int a3)\n{\n  int v3; // er14\n  int v4; // er15\n  _BOOL4 v5; // ebx\n  signed int v6; // eax\n\n  v3 = a3;\n  v4 = a2 + dword_94F590[a1];\n  v5 = 0;\n  if ( (unsigned int)sub_4083A0(a2 + dword_94FA50[a1]) == 1 )\n  {\n    v5 = 0;\n    if ( (signed int)sub_4099C0(a2, v3, 20, 0LL) >= 2 )\n    {\n      v6 = sub_4083A0(v4);\n      v5 = v6 < 1;\n      LOBYTE(v5) = v6 > 1;\n    }\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x483470L", 
            "funcEndAddr": "0x4834d4L", 
            "funcName": "sub_483470"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_483500(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  signed __int64 v4; // r12\n  unsigned int v5; // ebp\n  __int64 v6; // rbx\n\n  v3 = a3;\n  v4 = (signed int)a2 + (signed __int64)dword_94F0D0[a1];\n  v5 = dword_94FA30[a1] + a2;\n  if ( dword_98A7F4 )\n  {\n    LODWORD(v6) = 0;\n    if ( !(unsigned int)sub_43B050(v4, 0LL) )\n      return (unsigned int)v6;\n  }\n  else if ( !dword_8E94D4[95 * v4] )\n  {\n    LODWORD(v6) = 0;\n    return (unsigned int)v6;\n  }\n  return (unsigned int)sub_44B7B0(v3, 0, 2, a2, v5, (unsigned int)v4) != 0;\n}\n", 
            "funcStartAddr": "0x483500L", 
            "funcEndAddr": "0x483584L", 
            "funcName": "sub_483500"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4835B0(int a1, int a2, int a3)\n{\n  int v3; // er14\n  int v4; // ebp\n  int v5; // ebx\n  _BOOL4 v6; // er15\n  signed int v7; // eax\n\n  v3 = a3;\n  v4 = dword_94F590[a1];\n  v5 = a2 + dword_94F570[a1];\n  v6 = 0;\n  if ( (signed int)sub_4083A0(a2 + dword_94F0D0[a1]) >= 2\n    && (signed int)sub_4083A0(a2 + v4) >= 2\n    && (signed int)sub_4083A0(v5) <= 2 )\n  {\n    v7 = sub_4099C0(a2, v3, 20, 0LL);\n    v6 = v7 < 1;\n    LOBYTE(v6) = v7 > 1;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x4835b0L", 
            "funcEndAddr": "0x48362cL", 
            "funcName": "sub_4835B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_483630(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // ebp\n  int v4; // er13\n  int v5; // ebx\n  unsigned int v6; // er12\n  __int64 v7; // r14\n  _BOOL8 v8; // r15\n  int v9; // er13\n  __int64 v10; // rsi\n  __int64 v11; // rsi\n  unsigned int v13; // [rsp+Ch] [rbp-3Ch]\n  __int64 v14; // [rsp+10h] [rbp-38h]\n\n  v13 = a3;\n  v3 = a2;\n  v4 = dword_94F590[a1];\n  v5 = a2 + dword_94F0D0[a1];\n  v6 = a2 + dword_94F9F0[a1];\n  v7 = dword_94F0B0[a1];\n  LODWORD(v8) = 0;\n  if ( (signed int)sub_4083A0(a2 + dword_94FEB0[a1]) >= 3 )\n  {\n    v9 = a2 + v4;\n    v14 = (signed int)a2;\n    v10 = (unsigned __int8)byte_98A1B0[v7 + (signed int)a2];\n    if ( (unsigned int)sub_430570(v9) == 2 )\n    {\n      v11 = (unsigned __int8)byte_98A1B0[v14 + v7];\n      if ( (unsigned int)sub_430570(v5) == 2 )\n        v8 = (unsigned int)sub_44B7B0(v13, 1, 1, v3, v6) != 0;\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x483630L", 
            "funcEndAddr": "0x4836f1L", 
            "funcName": "sub_483630"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_483700(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_9507F0[a1];\n  v3 = sub_4083A0(a2 + dword_94F9D0[a1]);\n  result = 0LL;\n  if ( v3 == 2 )\n    result = (unsigned int)sub_4083A0(a2 + v2) == 2;\n  return result;\n}\n", 
            "funcStartAddr": "0x483700L", 
            "funcEndAddr": "0x483740L", 
            "funcName": "sub_483700"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_483760(int a1, int a2, int a3)\n{\n  int v3; // ebx\n  int v4; // ecx\n  bool result; // al\n\n  v3 = a3;\n  v4 = sub_4083A0(a2 + dword_94FA30[a1]);\n  result = 0;\n  if ( v4 == 2 )\n    result = (signed int)sub_4099C0(a2, v3, 20, 0LL) > 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x483760L", 
            "funcEndAddr": "0x4837a2L", 
            "funcName": "sub_483760"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4837B0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  _BOOL4 v4; // ebp\n  int v5; // eax\n\n  v3 = a3;\n  v4 = 0;\n  if ( (unsigned int)sub_4083A0(a2 + dword_94F570[a1]) == 2 )\n  {\n    v4 = 0;\n    if ( (signed int)sub_4099C0(a2, v3, 20, 0LL) >= 2 )\n    {\n      LOBYTE(v5) = sub_430E00(a2);\n      if ( v5 )\n      {\n        v4 = 1;\n        if ( (signed int)sub_430F40(a2) >= 9 )\n          v4 = (unsigned __int64)sub_44B7B0(v3, 1, 1, a2, a2) == 0;\n      }\n    }\n  }\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x4837b0L", 
            "funcEndAddr": "0x48382dL", 
            "funcName": "sub_4837B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_483830(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  _BOOL8 v4; // rbp\n  int v5; // eax\n\n  v3 = a3;\n  LODWORD(v4) = 0;\n  if ( (unsigned int)sub_4083A0(a2 + dword_94F570[a1]) == 2 )\n  {\n    LODWORD(v4) = 0;\n    if ( (unsigned int)sub_4099C0(a2, v3, 20, 0LL) == 1 )\n    {\n      LOBYTE(v5) = sub_430E00(a2);\n      if ( v5 )\n        v4 = (unsigned int)sub_44B7B0(v3, 1, 1, a2, a2) != 5;\n    }\n  }\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x483830L", 
            "funcEndAddr": "0x48389dL", 
            "funcName": "sub_483830"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_483920@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, int a4@<esi>)\n{\n  unsigned int v4; // ebx\n  unsigned int v5; // ebp\n  signed int v6; // ecx\n  _BOOL8 result; // rax\n  __int64 v8; // [rsp-8h] [rbp-18h]\n\n  v8 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94FEF0[a3];\n  v6 = sub_4083A0(dword_94F9F0[a3] + a4);\n  result = 0LL;\n  if ( v6 <= 3 )\n    result = (unsigned int)sub_44B7B0(v4, 1, 1, v5, v5, v8) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x483920L", 
            "funcEndAddr": "0x483970L", 
            "funcName": "sub_483920"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_483970(int a1, int a2)\n{\n  signed int v2; // ebx\n  int v3; // ebp\n  __int64 v4; // r14\n  _BOOL4 v5; // er15\n  int v6; // eax\n  __int64 v7; // r14\n  int v8; // eax\n\n  v2 = a2 + dword_950330[a1];\n  v3 = dword_950350[a1];\n  v4 = dword_94FE90[a1];\n  v5 = 0;\n  if ( (signed int)sub_4083A0(a2 + dword_94FE70[a1]) >= 2 && (signed int)sub_4083A0(a2 + v3) >= 2 )\n  {\n    LOBYTE(v6) = sub_430D50(v2);\n    if ( v6 )\n    {\n      v7 = a2 + v4;\n      if ( dword_98A7F4 )\n        v8 = sub_43B050(v7, 0LL);\n      else\n        v8 = dword_8E94D4[95 * v7];\n      v5 = v8 == 0;\n    }\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x483970L", 
            "funcEndAddr": "0x483a05L", 
            "funcName": "sub_483970"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_483A10@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er13\n  unsigned int v6; // er15\n  unsigned int v7; // er12\n  _BOOL4 v8; // ebx\n  __int64 v10; // [rsp+0h] [rbp-38h]\n\n  HIDWORD(v10) = HIDWORD(a1);\n  v4 = a2;\n  v5 = dword_94F590[a3];\n  v6 = a4 + dword_94F9F0[a3];\n  v7 = a4 + dword_94FED0[a3];\n  v8 = 0;\n  if ( (unsigned int)sub_4083A0(a4 + dword_94F550[a3]) == 2 && (signed int)sub_4083A0(a4 + v5) >= 2 )\n  {\n    LODWORD(v10) = v7;\n    v8 = (unsigned __int64)sub_44B7B0(v4, 1, 3, a4, v6, v7, v10) == 0;\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x483a10L", 
            "funcEndAddr": "0x483a9eL", 
            "funcName": "sub_483A10"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_483B10(int a1, signed int a2)\n{\n  int v2; // ecx\n  _BOOL8 result; // rax\n  int v4; // eax\n\n  v2 = sub_4083A0(a2 + dword_94F0D0[a1]);\n  result = 0LL;\n  if ( v2 == 2 )\n  {\n    LOBYTE(v4) = sub_430E00(a2);\n    result = v4 != 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x483b10L", 
            "funcEndAddr": "0x483b3fL", 
            "funcName": "sub_483B10"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_483B40(int a1, int a2)\n{\n  __int64 v2; // rbx\n  int v3; // er14\n  __int64 v4; // rbp\n  int v5; // edi\n  __int64 v6; // rsi\n  int v7; // ecx\n  _BOOL8 result; // rax\n  __int64 v9; // rsi\n\n  v2 = a2;\n  v3 = dword_94FED0[a1];\n  v4 = dword_94FEB0[a1];\n  v5 = dword_94FE90[a1] + a2;\n  v6 = (unsigned __int8)byte_98A1B0[v4 + a2];\n  v7 = sub_430570(v5);\n  result = 0LL;\n  if ( v7 == 2 )\n  {\n    v9 = (unsigned __int8)byte_98A1B0[v2 + v4];\n    result = (unsigned int)sub_430570((signed int)v2 + v3) == 2;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x483b40L", 
            "funcEndAddr": "0x483b9dL", 
            "funcName": "sub_483B40"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_483BC0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er15\n  int v6; // ebx\n  int v7; // eax\n  _BOOL8 result; // rax\n  __int64 v9; // [rsp-8h] [rbp-28h]\n\n  v9 = a1;\n  v4 = a2;\n  v5 = dword_94F9F0[a3];\n  v6 = dword_94FEB0[a3];\n  LOBYTE(v7) = sub_430E00(a4);\n  if ( v7 )\n    result = (unsigned int)sub_44B7B0(v4, 1, 2, a4, a4 + v5, a4 + v6, v9) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x483bc0L", 
            "funcEndAddr": "0x483c22L", 
            "funcName": "sub_483BC0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_483C30(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // rbx\n  int v5; // er15\n  int v6; // er12\n  int v7; // eax\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94FA30[a1];\n  v5 = dword_94F590[a1];\n  v6 = dword_94F570[a1];\n  LOBYTE(v7) = sub_430E00(a2);\n  if ( v7 )\n    result = (unsigned int)sub_44B7B0(v3, 1, 4, a2, (unsigned int)v4, a2 + v5, a2 + v6, v4) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x483c30L", 
            "funcEndAddr": "0x483ca6L", 
            "funcName": "sub_483C30"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_483CB0(int a1, signed int a2, int a3)\n{\n  int v3; // er14\n  _BOOL4 v4; // ebx\n  int v5; // eax\n  int v6; // eax\n\n  v3 = a3;\n  v4 = 0;\n  if ( (unsigned int)sub_4083A0(a2 + dword_94F570[a1]) == 1 )\n  {\n    LOBYTE(v5) = sub_430D50(a2);\n    if ( v5 )\n    {\n      v6 = sub_4099C0(a2, v3, 20, 0LL);\n      v4 = v6 < 0;\n      LOBYTE(v4) = v6 > 0;\n    }\n  }\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x483cb0L", 
            "funcEndAddr": "0x483cfbL", 
            "funcName": "sub_483CB0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_483D60(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // er12\n  unsigned int v5; // er15\n  _BOOL8 v6; // rbx\n  int v7; // eax\n  _QWORD v9[7]; // [rsp+0h] [rbp-38h]\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94FE90[a1];\n  LODWORD(v6) = 0;\n  if ( (unsigned int)sub_4083A0(a2 + dword_94F590[a1]) == 2 )\n  {\n    LOBYTE(v7) = sub_430D50(v4);\n    if ( v7 )\n    {\n      LODWORD(v9[0]) = v5;\n      v6 = (unsigned int)sub_44B7B0(v3, 1, 3, a2, v4, v5, v9[0]) != 5;\n    }\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x483d60L", 
            "funcEndAddr": "0x483de2L", 
            "funcName": "sub_483D60"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_483E70(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // ebx\n  int v5; // eax\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_94FEB0[a1];\n  LOBYTE(v5) = sub_430E00(a2);\n  if ( v5 )\n    result = (unsigned int)sub_44B7B0(v3, 0, 1, a2, a2 + v4) == 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x483e70L", 
            "funcEndAddr": "0x483ebbL", 
            "funcName": "sub_483E70"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_483F00(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_94F9F0[a1];\n  v3 = sub_4083A0(a2 + dword_94FEB0[a1]);\n  result = 1LL;\n  if ( v3 != 2 )\n    result = (unsigned int)sub_4083A0(a2 + v2) == 2;\n  return result;\n}\n", 
            "funcStartAddr": "0x483f00L", 
            "funcEndAddr": "0x483f43L", 
            "funcName": "sub_483F00"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_483F50(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  unsigned int v5; // er15\n  signed __int64 v6; // rdi\n  _BOOL8 v7; // r12\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94FEB0[a1];\n  v6 = dword_94F5D0[a1] + (signed __int64)(signed int)a2;\n  if ( dword_98A7F4 )\n  {\n    LODWORD(v7) = 0;\n    if ( (unsigned int)sub_43B050(v6, 0LL) )\n      return (unsigned int)v7;\n  }\n  else\n  {\n    LODWORD(v7) = 0;\n    if ( dword_8E94D4[95 * v6] )\n      return (unsigned int)v7;\n  }\n  LODWORD(v7) = 0;\n  if ( (unsigned int)sub_44B7B0(v3, 1, 1, a2, v4) )\n    v7 = (unsigned int)sub_44B7B0(v3, 1, 1, a2, v5) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x483f50L", 
            "funcEndAddr": "0x483ffcL", 
            "funcName": "sub_483F50"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_484000(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  unsigned int v5; // ebp\n  _BOOL4 v6; // er12\n  __int64 v8; // [rsp+0h] [rbp-38h]\n  _QWORD v9[7]; // [rsp+0h] [rbp-38h]\n\n  v3 = a3;\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = a2 + dword_94FE90[a1];\n  LODWORD(v8) = v5;\n  v6 = 0;\n  if ( !(unsigned int)sub_44B7B0(a3, 1, 3, a2, v4, v5, v8) )\n  {\n    LODWORD(v9[0]) = v4;\n    v6 = (unsigned __int64)sub_44B7B0(v3, 1, 3, a2, v5, v4, v9[0]) == 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x484000L", 
            "funcEndAddr": "0x484089L", 
            "funcName": "sub_484000"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_484090@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // ebp\n  int v6; // ebx\n  int v7; // er13\n  _BOOL4 v8; // er15\n  _BOOL4 v9; // ebp\n  int v10; // ebx\n  __int64 v12; // [rsp-8h] [rbp-38h]\n\n  v12 = a1;\n  v4 = a2;\n  v5 = dword_94F570[a3];\n  v6 = dword_94F9F0[a3];\n  v7 = dword_94FEB0[a3];\n  v8 = 0;\n  if ( (unsigned int)sub_430EB0(a4) )\n  {\n    v9 = sub_430EB0(a4 + v5);\n    v10 = v9 + (unsigned __int64)sub_430EB0(a4 + v6);\n    if ( (signed int)(v10 + (unsigned __int64)sub_430EB0(a4 + v7)) >= 3 )\n    {\n      if ( (unsigned int)sub_43F100(a4, 3 - v4) )\n      {\n        v8 = 1;\n        if ( (signed int)sub_430F40(a4) >= 9 )\n          v8 = (unsigned __int64)sub_44B7B0(v4, 1, 1, a4, a4, v12) == 0;\n      }\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x484090L", 
            "funcEndAddr": "0x484151L", 
            "funcName": "sub_484090"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_484180(int a1, int a2, int a3)\n{\n  int v3; // er15\n  int v4; // ebp\n  int v5; // er12\n  int v6; // ebx\n  __int64 v7; // r13\n  _BOOL4 v8; // er14\n  __int64 v9; // rsi\n  __int64 v10; // rsi\n  int v11; // eax\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a2 + dword_94EC10[a1];\n  v6 = a2 + dword_94F0D0[a1];\n  v7 = dword_94E770[a1];\n  v8 = 0;\n  if ( (unsigned int)sub_4099C0(v6, 3 - a3, 20, 0LL) == 1 )\n  {\n    v8 = 0;\n    if ( (unsigned int)sub_4099C0(v6, v3, 20, 0LL) == 1 )\n    {\n      v9 = (unsigned __int8)byte_98A1B0[a2 + v7];\n      if ( (signed int)sub_430570(v5) <= 3 )\n      {\n        v10 = (unsigned __int8)byte_98A1B0[v4 + v7];\n        v11 = sub_430570(v5);\n        v8 = v11 < 0;\n        LOBYTE(v8) = v11 > 0;\n      }\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x484180L", 
            "funcEndAddr": "0x48422bL", 
            "funcName": "sub_484180"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_484230(int a1, unsigned int a2, int a3)\n{\n  int v3; // er15\n  unsigned int v4; // ebp\n  unsigned int v5; // ebx\n  _BOOL4 v6; // er12\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94FA30[a1];\n  v6 = 0;\n  if ( (unsigned int)sub_4305D0(a2 + dword_94F570[a1]) && (unsigned int)sub_4305D0(v5) )\n    v6 = (unsigned __int64)sub_44B980(3 - v3, 0, 1, a2, v4, v5) == 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x484230L", 
            "funcEndAddr": "0x4842a5L", 
            "funcName": "sub_484230"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4842B0(int a1, int a2)\n{\n  int v2; // ebp\n  signed int v3; // ecx\n  _BOOL8 result; // rax\n  int v5; // eax\n\n  v2 = dword_94F590[a1];\n  v3 = sub_4083A0(a2 + dword_94FA30[a1]);\n  result = 0LL;\n  if ( v3 <= 2 )\n  {\n    LOBYTE(v5) = sub_430D50(a2 + v2);\n    result = v5 != 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4842b0L", 
            "funcEndAddr": "0x4842efL", 
            "funcName": "sub_4842B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4844D0(int a1, int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // rbx\n  unsigned int v5; // er15\n  int v6; // er13\n  _BOOL4 v7; // er12\n\n  v3 = a3;\n  v4 = (unsigned int)(a2 + dword_94F590[a1]);\n  v5 = a2 + dword_94F0F0[a1];\n  v6 = dword_94F570[a1];\n  v7 = 1;\n  if ( !(unsigned int)sub_44B980(a3, 1, 3, (unsigned int)v4, v5, v4, (unsigned int)(a2 + dword_94F0D0[a1])) )\n    v7 = (unsigned __int64)sub_44B980(v3, 1, 2, (unsigned int)v4, v5, v5, (unsigned int)(a2 + v6)) == 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x4844d0L", 
            "funcEndAddr": "0x48457bL", 
            "funcName": "sub_4844D0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4845C0(int a1, int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebp\n  int v5; // er15\n  int v6; // er12\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94FED0[a1];\n  v5 = dword_94FA30[a1];\n  v6 = dword_94FEB0[a1];\n  if ( (unsigned int)sub_43F100(v4, a3) )\n    result = (unsigned int)sub_44B980(v3, 0, 1, v4, (unsigned int)(a2 + v5), (unsigned int)(a2 + v6)) != 0;\n  else\n    result = 1LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x4845c0L", 
            "funcEndAddr": "0x484632L", 
            "funcName": "sub_4845C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_484690(int a1, int a2, unsigned int a3)\n{\n  __int64 v3; // rbx\n  __int64 v4; // r12\n  __int64 v5; // r15\n  __int64 v6; // r14\n  _BOOL4 v7; // er13\n  unsigned int v8; // ebp\n  unsigned int v10; // [rsp+0h] [rbp-34h]\n\n  v3 = (unsigned int)(a2 + dword_94FEB0[a1]);\n  v4 = (unsigned int)(a2 + dword_94FED0[a1]);\n  v10 = a2 + dword_94FA10[a1];\n  v5 = (unsigned int)(a2 + dword_950370[a1]);\n  v6 = (unsigned int)(a2 + dword_950350[a1]);\n  v7 = 0;\n  v8 = a3;\n  if ( (unsigned int)sub_44B980(\n                       a3,\n                       1,\n                       3,\n                       (unsigned int)v3,\n                       (unsigned int)v4,\n                       (unsigned int)(dword_94FA30[a1] + a2),\n                       v3,\n                       (unsigned int)(dword_94FA30[a1] + a2))\n    || !(unsigned int)sub_44B980(v8, 1, 2, (unsigned int)v3, (unsigned int)v4, v10, v5) )\n  {\n    v7 = 1;\n    if ( !(unsigned int)sub_44B980(v8, 1, 3, (unsigned int)v4, (unsigned int)v3, (unsigned int)v6, v4, v6) )\n      v7 = (unsigned __int64)sub_44B980(v8, 1, 2, (unsigned int)v4, (unsigned int)v3, v10, v5) == 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x484690L", 
            "funcEndAddr": "0x4847b5L", 
            "funcName": "sub_484690"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4847C0(int a1, int a2, unsigned int a3)\n{\n  __int64 v3; // rbx\n  unsigned int v4; // er13\n  unsigned int v5; // er15\n  int v6; // er14\n  _BOOL4 v7; // er12\n  unsigned int v9; // [rsp+0h] [rbp-34h]\n\n  v3 = (unsigned int)(a2 + dword_94FEB0[a1]);\n  v4 = a2 + dword_94FED0[a1];\n  v5 = a2 + dword_94FA10[a1];\n  v6 = dword_950350[a1];\n  v7 = 0;\n  v9 = a3;\n  if ( (unsigned int)sub_44B980(a3, 1, 3, (unsigned int)v3, v4, v3, (unsigned int)(a2 + dword_94FA30[a1]))\n    || !(unsigned int)sub_44B980(v9, 1, 2, (unsigned int)v3, v4, v5, (unsigned int)(a2 + v6)) )\n  {\n    v7 = (unsigned __int64)sub_44B7B0(v9, 1, 2, v4, (unsigned int)v3, v5) == 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x4847c0L", 
            "funcEndAddr": "0x484898L", 
            "funcName": "sub_4847C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4848A0(int a1, int a2, unsigned int a3)\n{\n  unsigned int v3; // er12\n  unsigned int v4; // er13\n  unsigned int v5; // er15\n  int v6; // er14\n  unsigned int v7; // ebp\n  __int128 v8; // cx\n  __int64 v10; // [rsp+0h] [rbp-48h]\n  __int64 v11; // [rsp+0h] [rbp-48h]\n  __int64 v12; // [rsp+0h] [rbp-48h]\n  __int64 v13; // [rsp+8h] [rbp-40h]\n  unsigned int v14; // [rsp+14h] [rbp-34h]\n\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = a2 + dword_94FED0[a1];\n  v5 = a2 + dword_94FA10[a1];\n  v6 = a2 + dword_950370[a1];\n  v7 = dword_950350[a1] + a2;\n  LODWORD(v10) = a2 + dword_950370[a1];\n  v14 = a3;\n  v8 = v3;\n  if ( !(unsigned int)sub_44B980(a3, 1, 2, v3, v4, v5, v10) )\n  {\n    LODWORD(v13) = v7;\n    LODWORD(v11) = v4;\n    DWORD2(v8) = 1;\n    if ( !(unsigned int)sub_44B980(v14, 1, 3, v4, v3, v7, v11, v13) )\n    {\n      LODWORD(v12) = v6;\n      DWORD2(v8) = (unsigned __int64)sub_44B980(v14, 1, 2, v4, v3, v5, v12) == 0;\n    }\n  }\n  return DWORD2(v8);\n}\n", 
            "funcStartAddr": "0x4848a0L", 
            "funcEndAddr": "0x48497bL", 
            "funcName": "sub_4848A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_484980@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, int a4@<esi>)\n{\n  __int64 v4; // ST00_8\n  unsigned int v5; // er14\n  unsigned int v6; // er15\n  unsigned int v7; // er12\n  unsigned int v8; // ebp\n  int v9; // ebx\n  _BOOL4 v10; // er13\n  _QWORD v12[7]; // [rsp+0h] [rbp-38h]\n\n  HIDWORD(v4) = HIDWORD(a1);\n  v5 = a2;\n  v6 = a4 + dword_94FEB0[a3];\n  v7 = a4 + dword_94FED0[a3];\n  v8 = a4 + dword_94FA10[a3];\n  v9 = dword_950370[a3] + a4;\n  LODWORD(v4) = dword_950370[a3] + a4;\n  v10 = 0;\n  if ( !(unsigned int)sub_44B980(a2, 1, 2, v6, v7, v8, v4) )\n  {\n    LODWORD(v12[0]) = v9;\n    v10 = (unsigned __int64)sub_44B980(v5, 1, 2, v7, v6, v8, v12[0]) == 0;\n  }\n  return (unsigned int)v10;\n}\n", 
            "funcStartAddr": "0x484980L", 
            "funcEndAddr": "0x484a1bL", 
            "funcName": "sub_484980"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_484A80(int a1, int a2, unsigned int a3)\n{\n  __int64 v3; // r13\n  unsigned int v4; // er12\n  __int64 v5; // r15\n  int v6; // er14\n  _BOOL4 v7; // ebx\n  unsigned int v9; // [rsp+0h] [rbp-34h]\n\n  v3 = (unsigned int)(a2 + dword_950350[a1]);\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = (unsigned int)(a2 + dword_950370[a1]);\n  v6 = dword_9507F0[a1];\n  v7 = 1;\n  v9 = a3;\n  if ( (unsigned int)sub_44B980(a3, 1, 3, (unsigned int)v3, v4, v3, (unsigned int)(a2 + dword_94FED0[a1])) )\n    v7 = (unsigned __int64)sub_44B980(v9, 1, 3, v4, (unsigned int)v3, (unsigned int)v5, v5, (unsigned int)(a2 + v6)) == 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x484a80L", 
            "funcEndAddr": "0x484b3bL", 
            "funcName": "sub_484A80"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_484B40(int a1, int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // r15\n  __int64 v5; // rbx\n  __int64 v6; // r12\n  __int64 v7; // rbp\n  _BOOL4 v8; // er13\n\n  v3 = a3;\n  v4 = (unsigned int)(a2 + dword_950330[a1]);\n  v5 = (unsigned int)(a2 + dword_950350[a1]);\n  v6 = (unsigned int)(a2 + dword_94FEB0[a1]);\n  v7 = (unsigned int)(dword_94FE90[a1] + a2);\n  v8 = 0;\n  if ( !(unsigned int)sub_44B980(a3, 1, 4, (unsigned int)v4, (unsigned int)v5, (unsigned int)v6, v7, v5, v7) )\n    v8 = (unsigned __int64)sub_44B980(v3, 1, 4, (unsigned int)v7, (unsigned int)v6, (unsigned int)v5, v4, v6, v4) == 0;\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x484b40L", 
            "funcEndAddr": "0x484bf3L", 
            "funcName": "sub_484B40"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_484C00(int a1, int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // r15\n  __int64 v5; // rbx\n  __int64 v6; // r12\n  __int64 v7; // rbp\n  _BOOL4 v8; // er13\n\n  v3 = a3;\n  v4 = (unsigned int)(a2 + dword_950350[a1]);\n  v5 = (unsigned int)(a2 + dword_950370[a1]);\n  v6 = (unsigned int)(a2 + dword_94FED0[a1]);\n  v7 = (unsigned int)(dword_94FEB0[a1] + a2);\n  v8 = 0;\n  if ( !(unsigned int)sub_44B980(a3, 1, 4, (unsigned int)v4, (unsigned int)v5, (unsigned int)v6, v7, v5, v7) )\n    v8 = (unsigned __int64)sub_44B980(v3, 1, 4, (unsigned int)v7, (unsigned int)v6, (unsigned int)v5, v4, v6, v4) == 0;\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x484c00L", 
            "funcEndAddr": "0x484cb3L", 
            "funcName": "sub_484C00"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_484CC0(int a1, int a2, unsigned int a3)\n{\n  unsigned int v3; // er15\n  __int64 v4; // r14\n  __int64 v5; // rbp\n  __int64 v6; // r12\n  __int64 v7; // rbx\n  _BOOL4 v8; // er13\n\n  v3 = a3;\n  v4 = (unsigned int)(a2 + dword_94FEB0[a1]);\n  v5 = (unsigned int)(a2 + dword_950350[a1]);\n  v6 = (unsigned int)(a2 + dword_950370[a1]);\n  v7 = (unsigned int)(dword_94FED0[a1] + a2);\n  v8 = 1;\n  if ( !(unsigned int)sub_44B980(a3, 1, 4, (unsigned int)v4, (unsigned int)v5, (unsigned int)v6, v7, v5, v7) )\n    v8 = (unsigned __int64)sub_44B980(v3, 0, 4, (unsigned int)v4, (unsigned int)v5, (unsigned int)v6, v7, v4, v6) == 0;\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x484cc0L", 
            "funcEndAddr": "0x484d76L", 
            "funcName": "sub_484CC0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_484D80(int a1, int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // r15\n  __int64 v5; // rbx\n  __int64 v6; // r12\n  __int64 v7; // rbp\n  _BOOL4 v8; // er13\n\n  v3 = a3;\n  v4 = (unsigned int)(a2 + dword_950350[a1]);\n  v5 = (unsigned int)(a2 + dword_950370[a1]);\n  v6 = (unsigned int)(a2 + dword_94FED0[a1]);\n  v7 = (unsigned int)(dword_94FEB0[a1] + a2);\n  v8 = 0;\n  if ( !(unsigned int)sub_44B980(a3, 1, 4, (unsigned int)v4, (unsigned int)v5, (unsigned int)v6, v7, v5, v7) )\n    v8 = (unsigned __int64)sub_44B980(v3, 1, 4, (unsigned int)v7, (unsigned int)v6, (unsigned int)v5, v4, v6, v4) == 0;\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x484d80L", 
            "funcEndAddr": "0x484e33L", 
            "funcName": "sub_484D80"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_484EE0(int a1, int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // r13\n  __int64 v5; // r15\n  unsigned int v6; // er12\n  int v7; // ebx\n  _BOOL8 v8; // rbp\n\n  v3 = a3;\n  v4 = (unsigned int)(a2 + dword_950350[a1]);\n  v5 = (unsigned int)(a2 + dword_94FED0[a1]);\n  v6 = a2 + dword_950370[a1];\n  v7 = dword_94FEB0[a1] + a2;\n  LODWORD(v8) = 1;\n  if ( (signed int)sub_4083A0(v7) <= 3 )\n  {\n    if ( (unsigned int)sub_407B30(v4, v3) )\n    {\n      LODWORD(v8) = 0;\n      if ( (signed int)sub_4083A0(v7) >= 3 )\n      {\n        LODWORD(v8) = 1;\n        if ( (signed int)sub_4099C0(v4, v3, 20, 0LL) >= 3 )\n          v8 = (unsigned int)sub_44B980(v3, 1, 3, (unsigned int)v5, v6, (unsigned int)v4, v4, v5) != 0;\n      }\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x484ee0L", 
            "funcEndAddr": "0x484fa6L", 
            "funcName": "sub_484EE0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_485020(int a1, int a2, unsigned int a3)\n{\n  __int64 v3; // rcx\n\n  v3 = (unsigned int)(a2 + dword_950370[a1]);\n  return sub_44B980(\n           a3,\n           0,\n           4,\n           v3,\n           (unsigned int)(a2 + dword_94FED0[a1]),\n           (unsigned int)(a2 + dword_94FEB0[a1]),\n           (unsigned int)(a2 + dword_950810[a1]),\n           v3,\n           (unsigned int)(dword_9507F0[a1] + a2));\n}\n", 
            "funcStartAddr": "0x485020L", 
            "funcEndAddr": "0x485081L", 
            "funcName": "sub_485020"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_485090@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, int a4@<esi>)\n{\n  __int64 v4; // ST00_8\n  unsigned int v5; // er14\n  unsigned int v6; // er15\n  unsigned int v7; // ebx\n  int v8; // er13\n  _BOOL8 v9; // r12\n  _QWORD v11[7]; // [rsp+0h] [rbp-38h]\n\n  HIDWORD(v4) = HIDWORD(a1);\n  v5 = a2;\n  v6 = a4 + dword_94FED0[a3];\n  v7 = a4 + dword_94FA30[a3];\n  v8 = dword_94FA10[a3];\n  LODWORD(v4) = a4 + dword_94FEB0[a3];\n  LODWORD(v9) = 1;\n  if ( !(unsigned int)sub_44B980(a2, 1, 2, v6, v7, v7, v4) )\n  {\n    LODWORD(v11[0]) = a4 + v8;\n    v9 = (unsigned int)sub_44B980(v5, 0, 2, v6, v7, v6, v11[0]) != 0;\n  }\n  return (unsigned int)v9;\n}\n", 
            "funcStartAddr": "0x485090L", 
            "funcEndAddr": "0x485131L", 
            "funcName": "sub_485090"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_485140(int a1, int a2, unsigned int a3)\n{\n  unsigned int v3; // er15\n  __int64 v4; // r14\n  __int64 v5; // r12\n  __int64 v6; // rbp\n  _BOOL4 v7; // er13\n  unsigned int v9; // [rsp+14h] [rbp-3Ch]\n  int v10; // [rsp+18h] [rbp-38h]\n\n  v3 = a2 + dword_94F590[a1];\n  v4 = (unsigned int)(a2 + dword_94FA10[a1]);\n  v5 = (unsigned int)(a2 + dword_94FA30[a1]);\n  v6 = (unsigned int)(a2 + dword_94FED0[a1]);\n  v10 = dword_94F570[a1];\n  v7 = 0;\n  v9 = a3;\n  if ( (unsigned int)sub_44B980(a3, 1, 4, v3, (unsigned int)v4, (unsigned int)v5, v6, v6, v4) )\n    v7 = (unsigned __int64)sub_44B980(v9, 0, 3, v3, (unsigned int)v5, (unsigned int)v4, v5, (unsigned int)(a2 + v10)) == 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x485140L", 
            "funcEndAddr": "0x48520bL", 
            "funcName": "sub_485140"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_485280(int a1, int a2)\n{\n  int v2; // er15\n  int v3; // ebx\n  _BOOL4 v4; // er14\n  signed int v5; // eax\n\n  v2 = dword_94FA10[a1];\n  v3 = a2 + dword_9507F0[a1];\n  v4 = 0;\n  if ( (signed int)sub_4083A0(a2 + dword_94FEB0[a1]) <= 3 && (signed int)sub_4083A0(a2 + v2) >= 3 )\n  {\n    v5 = sub_4083A0(v3);\n    v4 = v5 < 2;\n    LOBYTE(v4) = v5 > 2;\n  }\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x485280L", 
            "funcEndAddr": "0x4852e2L", 
            "funcName": "sub_485280"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_485370(int a1, int a2)\n{\n  int v2; // er15\n  int v3; // ebx\n  _BOOL4 v4; // er14\n  signed int v5; // eax\n\n  v2 = dword_94F9F0[a1];\n  v3 = a2 + dword_950330[a1];\n  v4 = 0;\n  if ( (signed int)sub_4083A0(a2 + dword_94FE90[a1]) <= 2 && (signed int)sub_4083A0(a2 + v2) >= 2 )\n  {\n    v5 = sub_4083A0(v3);\n    v4 = v5 < 1;\n    LOBYTE(v4) = v5 > 1;\n  }\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x485370L", 
            "funcEndAddr": "0x4853d2L", 
            "funcName": "sub_485370"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4854A0(int a1, int a2)\n{\n  int v2; // ebp\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  signed int v5; // ecx\n  _BOOL8 result; // rax\n  int v7; // ecx\n\n  v2 = a2 + dword_94EBF0[a1];\n  v3 = a2 + dword_94E750[a1];\n  v4 = dword_94E730[a1] + a2;\n  v5 = sub_4083A0(a2 + dword_94EBF0[a1]);\n  result = 1LL;\n  if ( v5 <= 2 )\n  {\n    v7 = sub_4083A0(v2);\n    result = 0LL;\n    if ( v7 == 2 )\n      result = (unsigned int)sub_469690(v2, v3, v4) != 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4854a0L", 
            "funcEndAddr": "0x485501L", 
            "funcName": "sub_4854A0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_485510(int a1, int a2)\n{\n  int v2; // ebp\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  signed int v5; // ecx\n  _BOOL8 result; // rax\n  int v7; // ecx\n\n  v2 = a2 + dword_94EBF0[a1];\n  v3 = a2 + dword_94E750[a1];\n  v4 = dword_94E730[a1] + a2;\n  v5 = sub_4083A0(a2 + dword_94EBF0[a1]);\n  result = 1LL;\n  if ( v5 <= 2 )\n  {\n    v7 = sub_4083A0(v2);\n    result = 0LL;\n    if ( v7 == 2 )\n      result = (unsigned int)sub_469690(v2, v3, v4) != 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x485510L", 
            "funcEndAddr": "0x485571L", 
            "funcName": "sub_485510"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_485580(int a1, int a2, unsigned int a3, int a4)\n{\n  int v4; // ebp\n  unsigned int v5; // er14\n  unsigned int v6; // ebx\n  signed int v7; // ecx\n  __int64 result; // rax\n  int v9; // ecx\n\n  if ( !a4 )\n    return sub_43F100(dword_94E2B0[a1] + a2, a3);\n  v4 = a2 + dword_94EBF0[a1];\n  v5 = a2 + dword_94E750[a1];\n  v6 = dword_94E730[a1] + a2;\n  v7 = sub_4083A0(v4);\n  result = 1LL;\n  if ( v7 <= 2 )\n  {\n    v9 = sub_4083A0(v4);\n    result = 0LL;\n    if ( v9 == 2 )\n      result = (unsigned int)sub_469690(v4, v5, v6) != 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x485580L", 
            "funcEndAddr": "0x4855f9L", 
            "funcName": "sub_485580"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_485B60(int a1, int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // r8\n  int v5; // er15\n  unsigned int v6; // er12\n  _BOOL8 v7; // rbp\n\n  v3 = a3;\n  v4 = (unsigned int)(a2 + dword_94FA10[a1]);\n  v5 = dword_94F0F0[a1];\n  v6 = a2 + dword_94F0D0[a1];\n  LODWORD(v7) = 0;\n  if ( (unsigned int)sub_44B7B0(a3, 1, 2, (unsigned int)(a2 + dword_94FA30[a1]), v4, (unsigned int)v4) )\n    v7 = (unsigned int)sub_44B7B0(v3, 1, 2, (unsigned int)(a2 + v5), v6, v6) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x485b60L", 
            "funcEndAddr": "0x485be7L", 
            "funcName": "sub_485B60"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_485BF0(int a1, int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // r8\n  int v5; // er15\n  unsigned int v6; // er12\n  _BOOL8 v7; // rbp\n\n  v3 = a3;\n  v4 = (unsigned int)(a2 + dword_94FA10[a1]);\n  v5 = dword_94F0F0[a1];\n  v6 = a2 + dword_94F0D0[a1];\n  LODWORD(v7) = 1;\n  if ( !(unsigned int)sub_44B7B0(a3, 1, 2, (unsigned int)(a2 + dword_94FA30[a1]), v4, (unsigned int)v4) )\n    v7 = (unsigned int)sub_44B7B0(v3, 1, 2, (unsigned int)(a2 + v5), v6, v6) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x485bf0L", 
            "funcEndAddr": "0x485c7aL", 
            "funcName": "sub_485BF0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_485C80@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>, __int64 a6@<r8>, __int64 a7@<r9>, __m128 a8@<xmm0>, __m128 a9@<xmm1>, __m128 a10@<xmm2>, __m128 a11@<xmm3>, __m128 a12@<xmm4>, __m128 a13@<xmm5>, __m128 a14@<xmm6>, __m128 a15@<xmm7>)\n{\n  unsigned int v15; // er14\n  unsigned int v16; // ebx\n  bool v17; // cl\n  unsigned int v18; // er15\n  int v19; // ebp\n  int v20; // eax\n  _QWORD v22[5]; // [rsp+0h] [rbp-28h]\n\n  v15 = a2;\n  v16 = a5 + dword_94FA10[a4];\n  if ( a3 )\n  {\n    v17 = (unsigned int)sub_44B7B0(3 - a2, 1, 1, v16, (unsigned int)(dword_94F570[a4] + a5), a1) == 0;\n  }\n  else\n  {\n    v18 = a5 + dword_94FA30[a4];\n    v19 = dword_94F590[a4] + a5;\n    v20 = sub_44B230(a2, 0, 1, v16, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a1);\n    v17 = 1;\n    if ( !v20 )\n    {\n      LODWORD(v22[0]) = v19;\n      v17 = (unsigned int)sub_44B980(v15, 1, 2, v18, v16, v16, v22[0]) != 0;\n    }\n  }\n  return v17;\n}\n", 
            "funcStartAddr": "0x485c80L", 
            "funcEndAddr": "0x485d26L", 
            "funcName": "sub_485C80"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_485D30(int a1, int a2)\n{\n  int v2; // ebp\n  signed int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94E2F0[a1];\n  v3 = sub_4083A0(a2 + dword_94EC30[a1]);\n  result = 0;\n  if ( v3 >= 2 )\n    result = (signed int)sub_4083A0(a2 + v2) > 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x485d30L", 
            "funcEndAddr": "0x485d70L", 
            "funcName": "sub_485D30"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_485DD0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)\n{\n  unsigned int v5; // er14\n  unsigned int v6; // ebx\n  unsigned int v7; // er15\n  __int64 result; // rax\n  _QWORD v9[5]; // [rsp+0h] [rbp-28h]\n\n  v9[0] = a1;\n  v5 = a2;\n  v6 = a5 + dword_94F0F0[a4];\n  if ( !a3 )\n  {\n    LODWORD(v9[0]) = a5 + dword_94F0F0[a4];\n    LODWORD(result) = sub_44B7B0(\n                        a2,\n                        1,\n                        3,\n                        v6,\n                        (unsigned int)(dword_94F5B0[a4] + a5),\n                        (unsigned int)(a5 + dword_94F110[a4]),\n                        v9[0]);\n    goto LABEL_7;\n  }\n  v7 = a5 + dword_94F570[a4];\n  if ( (signed int)sub_4083A0(dword_94FA30[a4] + a5) >= 3 && (signed int)sub_4083A0(v7) >= 3 )\n  {\n    LODWORD(result) = sub_44B7B0(3 - v5, 1, 1, v6, v7, v9[0]);\nLABEL_7:\n    LOBYTE(result) = (_DWORD)result == 0;\n    return (unsigned __int8)result;\n  }\n  LOBYTE(result) = 0;\n  return (unsigned __int8)result;\n}\n", 
            "funcStartAddr": "0x485dd0L", 
            "funcEndAddr": "0x485e7cL", 
            "funcName": "sub_485DD0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_485EC0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)\n{\n  unsigned int v5; // er14\n  unsigned int v6; // er13\n  unsigned int v7; // er15\n  unsigned int v8; // er12\n  unsigned int v9; // ebx\n  bool v10; // r14\n  unsigned int v11; // ebx\n  __int64 v13; // [rsp-8h] [rbp-38h]\n\n  v13 = a1;\n  v5 = a2;\n  if ( a3 )\n  {\n    v6 = a5 + dword_94F570[a4];\n    v7 = a5 + dword_94F0D0[a4];\n    v8 = a5 + dword_94F0F0[a4];\n    v9 = 3 - a2;\n    v10 = 0;\n    if ( !(unsigned int)sub_44B7B0(3 - a2, 1, 1, (unsigned int)(dword_94FA10[a4] + a5), v6, a1) )\n      v10 = (unsigned int)sub_44B980(v9, 0, 1, v7, v6, v8) != 0;\n  }\n  else\n  {\n    v11 = a5 + dword_94FA30[a4];\n    if ( (unsigned int)sub_4083A0(dword_94F590[a4] + a5) == 2 )\n      v10 = (unsigned int)sub_44B7B0(v5, 1, 1, v11, v11, v13) == 0;\n    else\n      v10 = 0;\n  }\n  return v10;\n}\n", 
            "funcStartAddr": "0x485ec0L", 
            "funcEndAddr": "0x485f9dL", 
            "funcName": "sub_485EC0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_486060(int a1, int a2, unsigned int a3, int a4)\n{\n  __int64 v4; // r8\n  __int64 v6; // rbx\n\n  v4 = (unsigned int)(a2 + dword_94FEB0[a1]);\n  if ( a4 )\n    return (unsigned int)sub_44B7B0(3 - a3, 1, 1, (unsigned int)v4, (unsigned int)(dword_94FA10[a1] + a2)) == 0;\n  v6 = (unsigned int)(a2 + dword_94FA30[a1]);\n  return sub_44B980(\n           a3,\n           1,\n           4,\n           (unsigned int)(dword_950370[a1] + a2),\n           v4,\n           (unsigned int)(a2 + dword_94FED0[a1]),\n           v6,\n           v4,\n           v6);\n}\n", 
            "funcStartAddr": "0x486060L", 
            "funcEndAddr": "0x4860f0L", 
            "funcName": "sub_486060"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_486470(int a1, int a2)\n{\n  __int64 v2; // rax\n  __int64 v3; // rbx\n  int v4; // ecx\n  _BOOL8 result; // rax\n  int v6; // ecx\n\n  v2 = dword_94F9D0[a1];\n  v3 = v2 + a2;\n  v4 = sub_4083A0((signed int)v2 + a2);\n  result = 0LL;\n  if ( v4 == 1 )\n  {\n    if ( dword_98A7F4 )\n      v6 = sub_43B050(v3, 0LL);\n    else\n      v6 = dword_8E94D4[95 * v3];\n    result = v6 != 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x486470L", 
            "funcEndAddr": "0x4864beL", 
            "funcName": "sub_486470"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4864E0(int a1, int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __int64 a12, __int64 a13, __int64 a14)\n{\n  unsigned int v14; // er15\n  unsigned int v15; // er12\n  unsigned int v16; // er13\n  unsigned int v17; // er14\n  int v18; // ebx\n  _BOOL4 v19; // ebp\n  char v21[20]; // [rsp+0h] [rbp-48h]\n  __int64 v22; // [rsp+0h] [rbp-48h]\n  unsigned int v23; // [rsp+14h] [rbp-34h]\n\n  v14 = a2 + dword_94EC30[a1];\n  v15 = a2 + dword_94E770[a1];\n  v16 = a2 + dword_94F570[a1];\n  v17 = a2 + dword_94F090[a1];\n  v18 = dword_94F0D0[a1] + a2;\n  v19 = 0;\n  v23 = a3;\n  if ( (unsigned int)sub_44B230(a3, 0, 1, v17, a13, a14, a4, a5, a6, a7, a8, a9, a10, a11, v21[0])\n    || !(unsigned int)sub_43F100(v17, 3 - v23) )\n  {\n    LODWORD(v22) = v18;\n    v19 = (unsigned __int64)sub_44B7B0(v23, 0, 3, v14, v15, v16, v22) == 0;\n  }\n  return (unsigned int)v19;\n}\n", 
            "funcStartAddr": "0x4864e0L", 
            "funcEndAddr": "0x486594L", 
            "funcName": "sub_4864E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4865A0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // er15\n  unsigned int v6; // er12\n  unsigned int v7; // ebx\n  signed __int64 v8; // rbp\n  unsigned int v9; // er13\n  __int64 v11; // [rsp+0h] [rbp-38h]\n\n  HIDWORD(v11) = HIDWORD(a1);\n  v4 = a2;\n  v5 = a4 + dword_94E790[a3];\n  v6 = a4 + dword_94E2D0[a3];\n  v7 = dword_94E2F0[a3] + a4;\n  v8 = a4 + (signed __int64)dword_94E750[a3];\n  v9 = 0;\n  if ( (unsigned int)sub_4083A0(v8) == 2 )\n  {\n    if ( !dword_98A7F4 )\n    {\n      if ( dword_8E94D4[95 * v8] )\n        return v9;\n      goto LABEL_4;\n    }\n    v9 = 0;\n    if ( !(unsigned int)sub_43B050(v8, 0LL) )\n    {\nLABEL_4:\n      LODWORD(v11) = v7;\n      return (unsigned int)sub_44B7B0(v4, 1, 3, v5, v6, v7, v11) == 0;\n    }\n  }\n  return v9;\n}\n", 
            "funcStartAddr": "0x4865a0L", 
            "funcEndAddr": "0x486653L", 
            "funcName": "sub_4865A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_486660@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>, __m128 a6@<xmm0>, __m128 a7@<xmm1>, __m128 a8@<xmm2>, __m128 a9@<xmm3>, __m128 a10@<xmm6>, __m128 a11@<xmm7>)\n{\n  unsigned int v11; // er14\n  unsigned int v12; // ebp\n  unsigned int v13; // er15\n  unsigned int v14; // ebx\n  unsigned int v15; // er12\n  unsigned __int8 v16; // r13\n  __int64 v17; // r8\n  __int64 v18; // r9\n  __m128 v19; // xmm4\n  __m128 v20; // xmm5\n  int v21; // eax\n  __int64 v22; // r12\n  __int64 v23; // r13\n  __int64 v24; // rbx\n  __int64 v25; // r8\n  __int64 v26; // r9\n  __m128 v27; // xmm4\n  __m128 v28; // xmm5\n  char v30; // [rsp-4h] [rbp-38h]\n  char v31; // [rsp-4h] [rbp-38h]\n  unsigned int v32; // [rsp+0h] [rbp-34h]\n\n  v30 = a1;\n  v11 = a2;\n  v12 = a5 + dword_94EC50[a4];\n  v13 = a5 + dword_94F0F0[a4];\n  if ( a3 )\n  {\n    v14 = dword_94F0D0[a4] + a5;\n    v15 = 3 - a2;\n    v16 = 0;\n    if ( !(unsigned int)sub_44B7B0(3 - a2, 1, 1, v12, v14, a1) )\n    {\n      v16 = 1;\n      if ( !(unsigned int)sub_44B230(v11, 0, 1, v13, v17, v18, a6, a7, a8, a9, v19, v20, a10, a11, v31) )\n      {\n        v21 = sub_44B7B0(v15, 1, 1, v13, v14);\n        return v21 == 0;\n      }\n    }\n  }\n  else\n  {\n    v22 = (unsigned int)(a5 + dword_94E7B0[a4]);\n    v23 = (unsigned int)(a5 + dword_94E790[a4]);\n    v24 = (unsigned int)(dword_94EC30[a4] + a5);\n    if ( !(unsigned int)sub_43F100(v12, a2) )\n      return 0;\n    if ( (unsigned int)sub_44B230(v11, 0, 1, v13, v25, v26, a6, a7, a8, a9, v27, v28, a10, a11, v30)\n      || (v16 = 0, (unsigned int)sub_44B7B0(v11, 1, 2, v12, v13, v13)) )\n    {\n      v21 = sub_44B980(v11, 0, 3, v12, (unsigned int)v22, v32, v22, v24);\n      return v21 == 0;\n    }\n  }\n  return v16;\n}\n", 
            "funcStartAddr": "0x486660L", 
            "funcEndAddr": "0x4867aeL", 
            "funcName": "sub_486660"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4867B0(int a1, int a2, unsigned int a3, int a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, double a9, double a10, __m128 a11, __m128 a12)\n{\n  unsigned int v12; // er14\n  unsigned int v13; // ebp\n  int v14; // eax\n  unsigned int v15; // er13\n  __int64 v16; // r12\n  __int64 v17; // r15\n  __int64 v18; // rbx\n  __int64 v19; // r8\n  __int64 v20; // r9\n  __m128 v21; // xmm4\n  __m128 v22; // xmm5\n  unsigned __int8 v23; // r12\n  char v25; // [rsp+0h] [rbp-48h]\n  unsigned int v26; // [rsp+8h] [rbp-40h]\n  unsigned int v27; // [rsp+Ch] [rbp-3Ch]\n  __int64 v28; // [rsp+10h] [rbp-38h]\n\n  v12 = a3;\n  v13 = a2 + dword_94EC30[a1];\n  if ( a4 )\n  {\n    v14 = sub_44B7B0(3 - a3, 1, 1, v13, (unsigned int)(dword_94F0B0[a1] + a2));\n    return v14 == 0;\n  }\n  v15 = a2 + dword_94F0D0[a1];\n  v27 = a2 + dword_94E790[a1];\n  v26 = a2 + dword_94EBF0[a1];\n  v16 = (unsigned int)(a2 + dword_94E770[a1]);\n  v17 = (unsigned int)(a2 + dword_94EC10[a1]);\n  v18 = (unsigned int)(dword_94F090[a1] + a2);\n  if ( !(unsigned int)sub_43F100(v13, a3) )\n    return 0;\n  v28 = v16;\n  if ( (unsigned int)sub_44B230(v12, 0, 1, v15, v19, v20, a5, a6, a7, a8, v21, v22, a11, a12, v25)\n    || (v23 = 0, (unsigned int)sub_44B7B0(v12, 1, 2, v13, v15, v15)) )\n  {\n    v14 = sub_44B980(v12, 0, 4, v13, v27, v26, v28, v17, v18);\n    return v14 == 0;\n  }\n  return v23;\n}\n", 
            "funcStartAddr": "0x4867b0L", 
            "funcEndAddr": "0x4868e1L", 
            "funcName": "sub_4867B0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4868F0(int a1, int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebp\n  int v5; // er15\n  int v6; // er12\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94EC50[a1];\n  v5 = dword_94EC30[a1];\n  v6 = dword_94F0F0[a1];\n  if ( (unsigned int)sub_43F100(v4, a3) )\n    result = (unsigned int)sub_44B7B0(v3, 1, 2, v4, (unsigned int)(a2 + v5), (unsigned int)(a2 + v6)) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x4868f0L", 
            "funcEndAddr": "0x48695fL", 
            "funcName": "sub_4868F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_486C10(int a1, int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __int64 a12, __int64 a13, __int64 a14)\n{\n  unsigned int v14; // er12\n  unsigned int v15; // ebp\n  int v16; // er15\n  unsigned int v17; // er13\n  __int64 v18; // r8\n  __int64 v19; // r9\n  __m128 v20; // xmm4\n  __m128 v21; // xmm5\n  _BOOL8 v22; // r14\n  char v24; // [rsp+0h] [rbp-48h]\n  char v25; // [rsp+0h] [rbp-48h]\n  unsigned int v26; // [rsp+8h] [rbp-40h]\n  unsigned int v27; // [rsp+Ch] [rbp-3Ch]\n  unsigned int v28; // [rsp+10h] [rbp-38h]\n  unsigned int v29; // [rsp+14h] [rbp-34h]\n\n  v14 = a3;\n  v15 = a2 + dword_94F0D0[a1];\n  v16 = dword_94F550[a1];\n  v17 = a2 + dword_94F570[a1];\n  v26 = a2 + dword_94EC30[a1];\n  v29 = a2 + dword_94EBF0[a1];\n  v28 = a2 + dword_94E770[a1];\n  v27 = a2 + dword_94F090[a1];\n  if ( (unsigned int)sub_44B230(a3, 0, 1, v15, a13, a14, a4, a5, a6, a7, a8, a9, a10, a11, v24)\n    || (LODWORD(v22) = 0,\n        (unsigned int)sub_44B230(v14, 0, 1, (unsigned int)(a2 + v16), v18, v19, a4, a5, a6, a7, v20, v21, a10, a11, v25))\n    || (unsigned int)sub_44B230(v14, 0, 1, v17, v18, v19, a4, a5, a6, a7, v20, v21, a10, a11, v25) )\n  {\n    LODWORD(v22) = 0;\n    if ( (unsigned int)sub_44B230(v14, 0, 1, v15, v18, v19, a4, a5, a6, a7, v20, v21, a10, a11, v25)\n      || (unsigned int)sub_44B7B0(v14, 1, 2, v26, v15, v15) )\n    {\n      v22 = (unsigned int)sub_44B7B0(v14, 1, 2, v29, v28, v27) != 0;\n    }\n  }\n  return (unsigned int)v22;\n}\n", 
            "funcStartAddr": "0x486c10L", 
            "funcEndAddr": "0x486d3cL", 
            "funcName": "sub_486C10"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_486D40(int a1, int a2, int a3)\n{\n  int v3; // ebp\n  __int64 v4; // rax\n  signed __int64 v5; // rdi\n  signed __int64 v6; // rbx\n\n  v3 = a3;\n  v4 = a1;\n  v5 = a2 + (signed __int64)dword_94FEB0[a1];\n  v6 = a2 + (signed __int64)dword_94FED0[v4];\n  if ( !dword_986FA0[v5] )\n  {\n    sub_419D10(v5, a3);\n    if ( dword_986FA0[v6] )\n      return 0LL;\nLABEL_5:\n    sub_419D10(v6, 3 - v3);\n    return 0LL;\n  }\n  if ( !dword_986FA0[v6] )\n    goto LABEL_5;\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x486d40L", 
            "funcEndAddr": "0x486d9fL", 
            "funcName": "sub_486D40"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_486DA0(int a1, int a2, int a3)\n{\n  int v3; // ebp\n  __int64 v4; // rax\n  __int64 v5; // rbx\n\n  v3 = a3;\n  v4 = dword_94FED0[a1];\n  v5 = v4 + a2;\n  if ( ((unsigned int)sub_426310((__int64)&unk_9634B0, (signed int)v4 + a2)\n     || (unsigned int)sub_426630((__int64)&unk_9634B0, v5))\n    && !dword_986FA0[v5] )\n  {\n    sub_419D10(v5, 3 - v3);\n  }\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x486da0L", 
            "funcEndAddr": "0x486df7L", 
            "funcName": "sub_486DA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_486E00(int a1, int a2, int a3)\n{\n  int v3; // ebp\n  __int64 v4; // rax\n  __int64 v5; // rbx\n\n  v3 = a3;\n  v4 = dword_94FED0[a1];\n  v5 = v4 + a2;\n  if ( (unsigned int)sub_426630((__int64)&unk_9634B0, (signed int)v4 + a2) && !dword_986FA0[v5] )\n    sub_419D10(v5, v3);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x486e00L", 
            "funcEndAddr": "0x486e42L", 
            "funcName": "sub_486E00"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_486EC0(int a1, int a2, int a3)\n{\n  int v3; // ebp\n  __int64 v4; // rax\n  signed __int64 v5; // rdi\n  signed __int64 v6; // rbx\n\n  v3 = a3;\n  v4 = a1;\n  v5 = a2 + (signed __int64)dword_94F0D0[a1];\n  v6 = a2 + (signed __int64)dword_94F0F0[v4];\n  if ( !dword_986FA0[v5] )\n  {\n    sub_419D10(v5, a3);\n    if ( dword_986FA0[v6] )\n      return 0LL;\nLABEL_5:\n    sub_419D10(v6, 3 - v3);\n    return 0LL;\n  }\n  if ( !dword_986FA0[v6] )\n    goto LABEL_5;\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x486ec0L", 
            "funcEndAddr": "0x486f1fL", 
            "funcName": "sub_486EC0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_486F20(int a1, int a2, int a3)\n{\n  int v3; // ebx\n  int v4; // ebp\n\n  v3 = dword_94F590[a1] + a2;\n  v4 = 3 - a3;\n  sub_419D10(a2 + dword_94F0F0[a1], 3 - a3);\n  sub_419D10(v3, v4);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x486f20L", 
            "funcEndAddr": "0x486f58L", 
            "funcName": "sub_486F20"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_486F60(int a1, int a2, int a3)\n{\n  int v3; // ebx\n  int v4; // ebp\n\n  v3 = a3;\n  v4 = dword_94F590[a1] + a2;\n  sub_419D10(a2 + dword_94F0F0[a1], a3);\n  sub_419D10(v4, v3);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x486f60L", 
            "funcEndAddr": "0x486f93L", 
            "funcName": "sub_486F60"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_486FA0(int a1, int a2, unsigned int a3, int a4)\n{\n  __int64 v4; // rax\n  int v5; // edi\n  int v6; // ebx\n  int v7; // ebp\n\n  v4 = a1;\n  v5 = a2 + dword_94F590[a1];\n  if ( !a4 )\n    return sub_43F100(v5, a3);\n  v6 = dword_94F0F0[v4] + a2;\n  v7 = 3 - a3;\n  sub_419D10(v5, 3 - a3);\n  sub_419D10(v6, v7);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x486fa0L", 
            "funcEndAddr": "0x486fe9L", 
            "funcName": "sub_486FA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_486FF0(int a1, int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebp\n  _BOOL8 v6; // r12\n  unsigned int v8; // er15\n  unsigned int v9; // ebx\n  __int64 v10; // rax\n  _QWORD v11[7]; // [rsp+0h] [rbp-38h]\n\n  v4 = a3;\n  v5 = a2 + dword_94F0D0[a1];\n  if ( a4 )\n  {\n    sub_419D10(v5, 3 - a3);\nLABEL_3:\n    LODWORD(v6) = 0;\n    return (unsigned int)v6;\n  }\n  v8 = a2 + dword_94F590[a1];\n  v9 = dword_94F0F0[a1] + a2;\n  if ( !(unsigned int)sub_43F100(v8, a3) )\n    goto LABEL_3;\n  LODWORD(v11[0]) = v8;\n  LODWORD(v6) = 0;\n  v10 = sub_44B7B0(v4, 1, 3, v8, v9, v5, v11[0]);\n  if ( (_DWORD)v10 )\n    v6 = (unsigned int)sub_469E60(v10, v5, v4, v8, v9) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x486ff0L", 
            "funcEndAddr": "0x487096L", 
            "funcName": "sub_486FF0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4870A0(int a1, int a2, unsigned int a3, int a4)\n{\n  __int64 v4; // r8\n  unsigned int v5; // er14\n  int v6; // ebx\n  int v7; // ebp\n\n  v4 = (unsigned int)(a2 + dword_94EC50[a1]);\n  v5 = a2 + dword_94EC30[a1];\n  if ( !a4 )\n    return (unsigned int)sub_44B980(\n                           a3,\n                           0,\n                           3,\n                           (unsigned int)(dword_94F0F0[a1] + a2),\n                           v4,\n                           v5,\n                           v4,\n                           (unsigned int)(a2 + dword_94F0D0[a1])) == 0;\n  v6 = dword_94E7B0[a1] + a2;\n  v7 = 3 - a3;\n  sub_419D10(v4, 3 - a3);\n  sub_419D10(v5, v7);\n  sub_419D10(v6, v7);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x4870a0L", 
            "funcEndAddr": "0x487137L", 
            "funcName": "sub_4870A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_487140(int a1, int a2, unsigned int a3, int a4)\n{\n  __int64 v4; // rax\n  int v5; // edi\n  int v6; // ebx\n  int v7; // ebp\n\n  v4 = a1;\n  v5 = a2 + dword_94F590[a1];\n  if ( !a4 )\n    return sub_43F100(v5, a3);\n  v6 = dword_94F0F0[v4] + a2;\n  v7 = 3 - a3;\n  sub_419D10(v5, 3 - a3);\n  sub_419D10(v6, v7);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x487140L", 
            "funcEndAddr": "0x487189L", 
            "funcName": "sub_487140"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_487190(int a1, int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er14\n  __int64 v5; // rbx\n  unsigned int v7; // er12\n  __int64 v8; // r15\n  unsigned int v9; // er13\n  __int64 v10; // rbp\n\n  v4 = a3;\n  v5 = (unsigned int)(a2 + dword_94F0D0[a1]);\n  if ( a4 )\n  {\n    sub_419D10(v5, 3 - a3);\n    return 0LL;\n  }\n  v7 = a2 + dword_94F590[a1];\n  v8 = (unsigned int)(a2 + dword_94F0F0[a1]);\n  v9 = a2 + dword_94FA30[a1];\n  v10 = (unsigned int)(dword_94F570[a1] + a2);\n  if ( !(unsigned int)sub_43F100(v7, a3) )\n    return 0LL;\n  return (unsigned int)sub_44B980(v4, 0, 5, v7, (unsigned int)v8, v9, 0LL, v5, v8, v10) == 0;\n}\n", 
            "funcStartAddr": "0x487190L", 
            "funcEndAddr": "0x48723cL", 
            "funcName": "sub_487190"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_487310(int a1, int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // ebp\n  unsigned int v6; // er14\n  unsigned int v7; // ebx\n\n  v4 = a3;\n  if ( a4 )\n  {\n    sub_419D10(dword_94FA30[a1] + a2, 3 - a3);\n    return 0LL;\n  }\n  v6 = a2 + dword_94F110[a1];\n  v7 = dword_94F590[a1] + a2;\n  if ( !(unsigned int)sub_43F100(v6, a3) )\n    return 0LL;\n  return (unsigned int)sub_44B7B0(v4, 1, 1, v6, v7) != 0;\n}\n", 
            "funcStartAddr": "0x487310L", 
            "funcEndAddr": "0x48737fL", 
            "funcName": "sub_487310"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_487380(int a1, int a2, int a3)\n{\n  int v3; // er14\n  int v4; // ebx\n  int v5; // ebp\n\n  v3 = a2 + dword_94F9D0[a1];\n  v4 = dword_94FE70[a1] + a2;\n  v5 = 3 - a3;\n  sub_419D10(a2 + dword_94FE90[a1], 3 - a3);\n  sub_419D10(v3, v5);\n  sub_419D10(v4, v5);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x487380L", 
            "funcEndAddr": "0x4873ccL", 
            "funcName": "sub_487380"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4873D0(int a1, int a2, int a3)\n{\n  int v3; // ebx\n  int v4; // ebp\n\n  v3 = a3;\n  v4 = dword_94FE90[a1] + a2;\n  sub_419D10(a2 + dword_94F9D0[a1], a3);\n  sub_419D10(v4, v3);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x4873d0L", 
            "funcEndAddr": "0x487403L", 
            "funcName": "sub_4873D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_487410(int a1, int a2, unsigned int a3, int a4)\n{\n  __int64 v4; // rax\n  int v5; // edi\n  int v6; // er14\n  int v7; // ebx\n  int v8; // ebp\n\n  v4 = a1;\n  v5 = a2 + dword_94F9B0[a1];\n  if ( !a4 )\n    return sub_43F100(v5, a3);\n  v6 = a2 + dword_94F990[v4];\n  v7 = dword_94FE50[v4] + a2;\n  v8 = 3 - a3;\n  sub_419D10(v5, 3 - a3);\n  sub_419D10(v7, v8);\n  sub_419D10(v6, v8);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x487410L", 
            "funcEndAddr": "0x48746bL", 
            "funcName": "sub_487410"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_487470(int a1, int a2, unsigned int a3, int a4)\n{\n  __int64 v4; // rax\n  int v5; // edi\n  int v6; // er14\n  int v7; // er15\n  int v8; // er12\n  int v9; // er13\n  int v10; // ebx\n  int v11; // ebp\n\n  v4 = a1;\n  v5 = a2 + dword_94F990[a1];\n  if ( !a4 )\n    return sub_43F100(v5, a3);\n  v6 = a2 + dword_94FDF0[v4];\n  v7 = a2 + dword_94F950[v4];\n  v8 = a2 + dword_94FE10[v4];\n  v9 = a2 + dword_94F970[v4];\n  v10 = dword_94FE30[v4] + a2;\n  v11 = 3 - a3;\n  sub_419D10(v5, 3 - a3);\n  sub_419D10(v10, v11);\n  sub_419D10(v9, v11);\n  sub_419D10(v8, v11);\n  sub_419D10(v7, v11);\n  sub_419D10(v6, v11);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x487470L", 
            "funcEndAddr": "0x487529L", 
            "funcName": "sub_487470"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_487530(int a1, int a2, unsigned int a3, int a4)\n{\n  __int64 v4; // rax\n  int v5; // edi\n  int v6; // er14\n  int v7; // er15\n  int v8; // er12\n  int v9; // ebp\n  int v10; // ebx\n\n  v4 = a1;\n  v5 = a2 + dword_94F0D0[a1];\n  if ( !a4 )\n    return sub_43F100(v5, a3);\n  v6 = a2 + dword_94F090[v4];\n  v7 = a2 + dword_94F550[v4];\n  v8 = a2 + dword_94F0B0[v4];\n  v9 = dword_94F570[v4] + a2;\n  v10 = 3 - a3;\n  sub_419D10(v5, 3 - a3);\n  sub_419D10(v9, v10);\n  sub_419D10(v8, v10);\n  sub_419D10(v7, v10);\n  sub_419D10(v6, v10);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x487530L", 
            "funcEndAddr": "0x4875c1L", 
            "funcName": "sub_487530"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4875D0(int a1, int a2, unsigned int a3, int a4)\n{\n  int v4; // er14\n  __int64 v5; // rbx\n  __int64 v6; // r15\n\n  v4 = a3;\n  v5 = (unsigned int)(a2 + dword_94F9D0[a1]);\n  v6 = (unsigned int)(a2 + dword_94FE70[a1]);\n  if ( !a4 )\n    return (unsigned int)sub_44B980(\n                           a3,\n                           0,\n                           4,\n                           (unsigned int)v5,\n                           (unsigned int)(dword_94FA10[a1] + a2),\n                           0LL,\n                           v6,\n                           v5,\n                           (unsigned int)(a2 + dword_94FE90[a1])) == 0;\n  sub_419D10(v5, a3);\n  sub_419D10(v6, v4);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x4875d0L", 
            "funcEndAddr": "0x487665L", 
            "funcName": "sub_4875D0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_487780(int a1, int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er9\n  __int64 v5; // rbp\n  unsigned int v6; // er12\n  __int64 v7; // r15\n  __int64 v8; // r14\n  int v9; // ebx\n\n  v4 = a2 + dword_94F0F0[a1];\n  v5 = (unsigned int)(a2 + dword_94EC30[a1]);\n  v6 = a2 + dword_94EC50[a1];\n  v7 = (unsigned int)(a2 + dword_94E7B0[a1]);\n  v8 = (unsigned int)(a2 + dword_94E790[a1]);\n  if ( !a4 )\n    return (unsigned int)sub_44B980(\n                           a3,\n                           0,\n                           7,\n                           v4,\n                           (unsigned int)v5,\n                           v6,\n                           v7,\n                           (unsigned int)(dword_94F590[a1] + a2),\n                           0LL,\n                           v8,\n                           v7,\n                           v5) == 0;\n  v9 = 3 - a3;\n  sub_419D10(v4, 3 - a3);\n  sub_419D10(v5, v9);\n  sub_419D10(v6, v9);\n  sub_419D10(v7, v9);\n  sub_419D10(v8, v9);\n  return 0LL;\n}\n", 
            "funcStartAddr": "0x487780L", 
            "funcEndAddr": "0x48784dL", 
            "funcName": "sub_487780"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_487850@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<ecx>, int a4@<edi>, unsigned int a5@<esi>)\n{\n  unsigned int v5; // er14\n  int v6; // ebp\n  int v7; // ebx\n  _BOOL8 v8; // rbp\n  __int64 v9; // r8\n\n  v5 = a2;\n  if ( a3 )\n  {\n    v6 = a5 + dword_94F9F0[a4];\n    v7 = 3 - a2;\n    sub_419D10(a5, 3 - a2);\n    sub_419D10(v6, v7);\n    LODWORD(v8) = 0;\n  }\n  else\n  {\n    v9 = a5 + dword_94FA30[a4];\n    LODWORD(v8) = 0;\n    if ( (unsigned int)sub_44B7B0(a2, 1, 2, a5, v9, (unsigned int)v9, a1) )\n      v8 = (unsigned int)sub_43F100(a5, v5) != 0;\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x487850L", 
            "funcEndAddr": "0x4878d8L", 
            "funcName": "sub_487850"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4878E0@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<ecx>, int a4@<edi>, unsigned int a5@<esi>)\n{\n  unsigned int v5; // er14\n  __int64 v6; // rbx\n  signed __int64 v7; // r15\n  __int64 v9; // [rsp-8h] [rbp-28h]\n\n  v9 = a1;\n  v5 = a2;\n  if ( !a3 )\n  {\n    v7 = dword_94FED0[a4] + (signed __int64)(signed int)a5;\n    if ( dword_98A7F4 )\n    {\n      LODWORD(v6) = 0;\n      if ( !(unsigned int)sub_43B050(v7, 0LL) )\n        return (unsigned int)v6;\n    }\n    else if ( !dword_8E94D4[95 * v7] )\n    {\n      goto LABEL_3;\n    }\n    return (unsigned int)sub_44B7B0(v5, 1, 1, a5, (unsigned int)v7, v9) != 0;\n  }\n  sub_419D10(dword_94FA30[a4] + a5, a2);\nLABEL_3:\n  LODWORD(v6) = 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x4878e0L", 
            "funcEndAddr": "0x48796eL", 
            "funcName": "sub_4878E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_487970(int a1, int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // er12\n  unsigned int v6; // ebp\n  int v7; // ebx\n  _BOOL4 v8; // er15\n\n  v4 = a3;\n  v5 = a2 + dword_94F0B0[a1];\n  v6 = a2 + dword_94F530[a1];\n  if ( a4 )\n  {\n    v7 = dword_94F090[a1] + a2;\n    sub_419D10(v5, a3);\n    sub_419D10(v6, v4);\n    sub_419D10(v7, v4);\n    v8 = 0;\n  }\n  else\n  {\n    v8 = 0;\n    if ( !(unsigned int)sub_44B7B0(a3, 1, 2, v5, v6, v6) )\n      v8 = (unsigned __int64)sub_44B7B0(v4, 1, 2, v6, v5, v5) == 0;\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x487970L", 
            "funcEndAddr": "0x487a18L", 
            "funcName": "sub_487970"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_487AA0(int a1, int a2, int a3, int a4)\n{\n  int v4; // er15\n  int v5; // ebp\n  int v6; // er14\n  _BOOL8 result; // rax\n  int v8; // ebx\n  int v9; // ecx\n\n  v4 = a3;\n  v5 = a2 + dword_94FA30[a1];\n  v6 = a2 + dword_94FED0[a1];\n  if ( a4 )\n  {\n    sub_419D10(v5, a3);\n    sub_419D10(v6, v4);\n    result = 0LL;\n  }\n  else\n  {\n    v8 = dword_94FA10[a1] + a2;\n    v9 = sub_4083A0(v8);\n    result = 0LL;\n    if ( v9 == 2 )\n      result = (unsigned int)sub_469690(v8, v5, v6) != 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x487aa0L", 
            "funcEndAddr": "0x487b17L", 
            "funcName": "sub_487AA0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_487BE0(int a1, int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  int v6; // ebp\n  _BOOL8 result; // rax\n  unsigned int v8; // ebp\n  int v9; // ecx\n\n  v4 = a3;\n  v5 = a2 + dword_94FA30[a1];\n  if ( a4 )\n  {\n    v6 = dword_94FEB0[a1] + a2;\n    sub_419D10(v5, a3);\n    sub_419D10(v6, v4);\n    result = 0LL;\n  }\n  else\n  {\n    v8 = dword_94F590[a1] + a2;\n    v9 = sub_43F100(v8, a3);\n    result = 0LL;\n    if ( !v9 )\n      result = (unsigned int)sub_44B7B0(v4, 1, 2, v5, v8, v5) != 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x487be0L", 
            "funcEndAddr": "0x487c5bL", 
            "funcName": "sub_487BE0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_487C60@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)\n{\n  unsigned int v5; // er14\n  unsigned int v6; // er15\n  int v7; // ebx\n  int v8; // ebp\n  _BOOL8 v9; // r13\n  unsigned int v11; // ebp\n  unsigned int v12; // er12\n  int v13; // ebx\n  __int64 v14; // [rsp+0h] [rbp-38h]\n  _QWORD v15[7]; // [rsp+0h] [rbp-38h]\n\n  v5 = a2;\n  v6 = a5 + dword_94FED0[a4];\n  if ( a3 )\n  {\n    v7 = dword_94FEB0[a4] + a5;\n    v8 = 3 - a2;\n    sub_419D10(v6, 3 - a2);\n    sub_419D10(v7, v8);\n    LODWORD(v9) = 0;\n  }\n  else\n  {\n    v11 = a5 + dword_94F590[a4];\n    v12 = a5 + dword_94FA30[a4];\n    v13 = dword_94F570[a4] + a5;\n    LODWORD(v9) = 0;\n    if ( (unsigned int)sub_44B7B0(a2, 1, 2, v11, v12, v12, a1) )\n    {\n      LODWORD(v14) = v12;\n      LODWORD(v9) = 0;\n      if ( !(unsigned int)sub_44B7B0(v5, 1, 3, v11, v6, v12, v14) )\n      {\n        LODWORD(v15[0]) = v13;\n        v9 = (unsigned int)sub_44B7B0(v5, 1, 3, v11, v6, v12, v15[0]) != 0;\n      }\n    }\n  }\n  return (unsigned int)v9;\n}\n", 
            "funcStartAddr": "0x487c60L", 
            "funcEndAddr": "0x487d4bL", 
            "funcName": "sub_487C60"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_487D50@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)\n{\n  unsigned int v5; // er14\n  unsigned int v6; // er13\n  int v7; // ebx\n  int v8; // ebp\n  _BOOL8 v9; // r12\n  unsigned int v10; // er15\n  unsigned int v11; // ebx\n  _QWORD v13[7]; // [rsp+0h] [rbp-38h]\n\n  v5 = a2;\n  v6 = a5 + dword_94FED0[a4];\n  if ( a3 )\n  {\n    v7 = dword_950350[a4] + a5;\n    v8 = 3 - a2;\n    sub_419D10(v6, 3 - a2);\n    sub_419D10(v7, v8);\n    LODWORD(v9) = 0;\n  }\n  else\n  {\n    v10 = a5 + dword_94F590[a4];\n    v11 = dword_94FA30[a4] + a5;\n    LODWORD(v9) = 0;\n    if ( (unsigned int)sub_44B7B0(a2, 1, 2, v10, v11, v11, a1) )\n    {\n      LODWORD(v13[0]) = v6;\n      v9 = (unsigned int)sub_44B7B0(v5, 1, 3, v10, v6, v11, v13[0]) != 0;\n    }\n  }\n  return (unsigned int)v9;\n}\n", 
            "funcStartAddr": "0x487d50L", 
            "funcEndAddr": "0x487e0bL", 
            "funcName": "sub_487D50"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_487E10(int a1, int a2, unsigned int a3, int a4)\n{\n  int v4; // er14\n  unsigned int v5; // ebp\n  unsigned int v6; // er12\n  __int64 v7; // r15\n  _BOOL8 result; // rax\n  __int64 v9; // r10\n\n  v4 = a3;\n  v5 = a2 + dword_94EC50[a1];\n  v6 = a2 + dword_94F110[a1];\n  v7 = (unsigned int)(a2 + dword_94E790[a1]);\n  if ( a4 )\n  {\n    sub_419D10(v5, a3);\n    sub_419D10(v6, v4);\n    sub_419D10(v7, v4);\n    result = 0LL;\n  }\n  else\n  {\n    v9 = (unsigned int)(a2 + dword_94E7B0[a1]);\n    result = (unsigned int)sub_44B7B0(a3, 1, 5, v5, (unsigned int)(dword_94EC70[a1] + a2), v6, v9, v7, v9) == 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x487e10L", 
            "funcEndAddr": "0x487eb8L", 
            "funcName": "sub_487E10"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_487EC0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)\n{\n  unsigned int v5; // er14\n  unsigned int v6; // er13\n  unsigned int v7; // er15\n  int v8; // ebx\n  int v9; // ebp\n  _BOOL4 v10; // er12\n  unsigned int v11; // ebx\n  __int64 v13; // [rsp+0h] [rbp-38h]\n  __int64 v14; // [rsp+0h] [rbp-38h]\n\n  HIDWORD(v13) = HIDWORD(a1);\n  v5 = a2;\n  v6 = a5 + dword_94FEF0[a4];\n  v7 = a5 + dword_94FA30[a4];\n  if ( a3 )\n  {\n    v8 = dword_94FA50[a4] + a5;\n    v9 = 3 - a2;\n    sub_419D10(v6, 3 - a2);\n    sub_419D10(v7, v9);\n    sub_419D10(v8, v9);\n    v10 = 0;\n  }\n  else\n  {\n    v11 = dword_94FED0[a4] + a5;\n    LODWORD(v13) = v11;\n    v10 = 0;\n    if ( !(unsigned int)sub_44B7B0(a2, 1, 3, v11, v6, v7, v13) )\n    {\n      LODWORD(v14) = v11;\n      v10 = (unsigned __int64)sub_44B7B0(v5, 1, 3, v11, v7, v6, v14) == 0;\n    }\n  }\n  return (unsigned int)v10;\n}\n", 
            "funcStartAddr": "0x487ec0L", 
            "funcEndAddr": "0x487f85L", 
            "funcName": "sub_487EC0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_487F90(int a1, int a2, unsigned int a3, int a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, double a9, double a10, __m128 a11, __m128 a12)\n{\n  unsigned int v12; // er15\n  _BOOL8 v13; // rbp\n  unsigned int v15; // er14\n  unsigned int v16; // ebx\n  __int64 v17; // r8\n  __int64 v18; // r9\n  __m128 v19; // xmm4\n  __m128 v20; // xmm5\n  __int64 v21; // r8\n  __int64 v22; // r9\n  __m128 v23; // xmm4\n  __m128 v24; // xmm5\n  char v25; // [rsp+0h] [rbp-28h]\n  char v26; // [rsp+0h] [rbp-28h]\n\n  v12 = a3;\n  if ( a4 )\n  {\n    sub_419D10(dword_94E7B0[a1] + a2, 3 - a3);\nLABEL_3:\n    LODWORD(v13) = 0;\n    return (unsigned int)v13;\n  }\n  v15 = a2 + dword_94EC30[a1];\n  v16 = dword_94EC70[a1] + a2;\n  if ( !(unsigned int)sub_43F100(v15, a3) )\n    goto LABEL_3;\n  LODWORD(v13) = 1;\n  if ( !(unsigned int)sub_44B230(3 - v12, 0, 1, v16, v17, v18, a5, a6, a7, a8, v19, v20, a11, a12, v25)\n    || !(unsigned int)sub_44B7B0(v12, 1, 1, v15, v16) )\n  {\n    LODWORD(v13) = 0;\n    if ( !(unsigned int)sub_44B230(3 - v12, 0, 1, v16, v21, v22, a5, a6, a7, a8, v23, v24, a11, a12, v26) )\n      v13 = (unsigned int)sub_44B7B0(v12, 1, 2, v15, v16, v16) != 0;\n  }\n  return (unsigned int)v13;\n}\n", 
            "funcStartAddr": "0x487f90L", 
            "funcEndAddr": "0x488075L", 
            "funcName": "sub_487F90"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_488080@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)\n{\n  unsigned int v5; // er14\n  unsigned int v6; // er13\n  unsigned int v7; // er15\n  int v8; // ebx\n  int v9; // ebp\n  _BOOL4 v10; // er12\n  unsigned int v11; // ebx\n  __int64 v13; // [rsp+0h] [rbp-38h]\n  __int64 v14; // [rsp+0h] [rbp-38h]\n\n  HIDWORD(v13) = HIDWORD(a1);\n  v5 = a2;\n  v6 = a5 + dword_94EC50[a4];\n  v7 = a5 + dword_94E790[a4];\n  if ( a3 )\n  {\n    v8 = dword_94E7B0[a4] + a5;\n    v9 = 3 - a2;\n    sub_419D10(v6, 3 - a2);\n    sub_419D10(v7, v9);\n    sub_419D10(v8, v9);\n    v10 = 0;\n  }\n  else\n  {\n    v11 = dword_94EC30[a4] + a5;\n    LODWORD(v13) = v11;\n    v10 = 0;\n    if ( !(unsigned int)sub_44B7B0(a2, 1, 3, v11, v6, v7, v13) )\n    {\n      LODWORD(v14) = v11;\n      v10 = (unsigned __int64)sub_44B7B0(v5, 1, 3, v11, v7, v6, v14) == 0;\n    }\n  }\n  return (unsigned int)v10;\n}\n", 
            "funcStartAddr": "0x488080L", 
            "funcEndAddr": "0x488145L", 
            "funcName": "sub_488080"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_488150(int a1, int a2, int a3, int a4)\n{\n  _BOOL8 result; // rax\n  __int64 v5; // rax\n  __int64 v6; // rbx\n  int v7; // ecx\n  int v8; // ecx\n\n  if ( a4 )\n  {\n    sub_419D10(dword_94FA30[a1] + a2, a3);\n    result = 0LL;\n  }\n  else\n  {\n    v5 = dword_94FED0[a1];\n    v6 = v5 + a2;\n    v7 = sub_4083A0((signed int)v5 + a2);\n    result = 0LL;\n    if ( v7 == 2 )\n    {\n      if ( dword_98A7F4 )\n        v8 = sub_43B050(v6, 0LL);\n      else\n        v8 = dword_8E94D4[95 * v6];\n      result = v8 != 0;\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x488150L", 
            "funcEndAddr": "0x4881b8L", 
            "funcName": "sub_488150"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4881C0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)\n{\n  unsigned int v5; // er15\n  _BOOL8 v6; // rbp\n  unsigned int v7; // er14\n  unsigned int v8; // ebx\n  __int64 v10; // [rsp-8h] [rbp-28h]\n\n  v10 = a1;\n  v5 = a2;\n  if ( a3 )\n  {\n    sub_419D10(dword_94FA30[a4] + a5, 3 - a2);\n    LODWORD(v6) = 0;\n  }\n  else\n  {\n    v7 = a5 + dword_94FEB0[a4];\n    v8 = dword_94FED0[a4] + a5;\n    LODWORD(v6) = 0;\n    if ( (unsigned int)sub_4083A0(v8) == 3 && (unsigned int)sub_43F100(v7, v5) )\n      v6 = (unsigned int)sub_44B7B0(v5, 1, 1, v7, v8, v10) != 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x4881c0L", 
            "funcEndAddr": "0x48824bL", 
            "funcName": "sub_4881C0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_488340(int a1, int a2, unsigned int a3, int a4)\n{\n  int v4; // er14\n  __int64 v5; // rbx\n  int v6; // ebp\n  _BOOL8 result; // rax\n  __int64 v8; // rcx\n\n  v4 = a3;\n  v5 = (unsigned int)(a2 + dword_94F110[a1]);\n  if ( a4 )\n  {\n    v6 = dword_94F5D0[a1] + a2;\n    sub_419D10(v5, a3);\n    sub_419D10(v6, v4);\n    result = 0LL;\n  }\n  else\n  {\n    v8 = (unsigned int)(a2 + dword_94F5B0[a1]);\n    result = (unsigned int)sub_44B7B0(\n                             a3,\n                             0,\n                             4,\n                             v8,\n                             (unsigned int)(dword_94FA50[a1] + a2),\n                             (unsigned int)(a2 + dword_94FA30[a1]),\n                             v5,\n                             v8) == 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x488340L", 
            "funcEndAddr": "0x4883c1L", 
            "funcName": "sub_488340"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_488430@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  int v4; // er14\n  int v5; // ebx\n  int v6; // ebp\n  unsigned int v7; // er12\n  _BOOL4 v8; // er15\n  __int64 v10; // [rsp-8h] [rbp-38h]\n\n  v10 = a1;\n  v4 = a2;\n  v5 = dword_94F570[a3];\n  v6 = a4 + dword_94F0D0[a3];\n  v7 = a4 + dword_94F550[a3];\n  v8 = 0;\n  if ( (unsigned int)sub_426600(a4) && (unsigned int)sub_426580(a4 + v5) && (unsigned int)sub_426580(v6) )\n    v8 = (unsigned __int64)sub_44B7B0(3 - v4, 1, 1, a4, v7, v10) == 0;\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x488430L", 
            "funcEndAddr": "0x4884c2L", 
            "funcName": "sub_488430"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4884D0@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  int v4; // er13\n  unsigned int v5; // er12\n  int v6; // ebp\n  unsigned int v7; // er15\n  _BOOL4 v8; // er14\n  unsigned int v9; // er13\n  __int64 v11; // [rsp-8h] [rbp-38h]\n\n  v11 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94F570[a3];\n  v6 = a4 + dword_94F0D0[a3];\n  v7 = a4 + dword_94F550[a3];\n  v8 = 0;\n  if ( (unsigned int)sub_426600(a4) )\n  {\n    if ( (unsigned int)sub_426580(v5) )\n    {\n      if ( (unsigned int)sub_426580(v6) )\n      {\n        v9 = 3 - v4;\n        v8 = 0;\n        if ( (unsigned int)sub_44B7B0(v9, 1, 2, a4, v5, v7, v11) )\n          v8 = (unsigned __int64)sub_44B7B0(v9, 1, 1, a4, v7) == 0;\n      }\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x4884d0L", 
            "funcEndAddr": "0x48858aL", 
            "funcName": "sub_4884D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4885C0@<rax>(unsigned int a1@<eax>, unsigned int a2@<edx>, int a3@<edi>, int a4@<esi>)\n{\n  unsigned int v4; // er13\n  int v5; // er14\n  int v6; // ebp\n  unsigned int v7; // er12\n  _BOOL8 v8; // r15\n  unsigned __int64 v10; // [rsp-4h] [rbp-38h]\n\n  v10 = __PAIR__(a2, a1);\n  v4 = a4 + dword_950370[a3];\n  v5 = dword_94FED0[a3];\n  v6 = a4 + dword_94FA30[a3];\n  v7 = a4 + dword_94FEB0[a3];\n  LODWORD(v8) = 0;\n  if ( (unsigned int)sub_426600(a4 + dword_950370[a3])\n    && (unsigned int)sub_426580(a4 + v5)\n    && (unsigned int)sub_426580(v6) )\n  {\n    v8 = (unsigned int)sub_44B7B0(3 - HIDWORD(v10), 1, 1, v4, v7, v10) != 0;\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x4885c0L", 
            "funcEndAddr": "0x48865fL", 
            "funcName": "sub_4885C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_488660@<rax>(char a1@<al>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>, __int64 a5@<r9>, __m128 a6@<xmm0>, __m128 a7@<xmm1>, __m128 a8@<xmm2>, __m128 a9@<xmm3>, __m128 a10@<xmm4>, __m128 a11@<xmm5>, __m128 a12@<xmm6>, __m128 a13@<xmm7>)\n{\n  unsigned int v13; // er14\n  unsigned int v14; // ebx\n  _BOOL4 v15; // ebp\n  _QWORD v17[5]; // [rsp+0h] [rbp-28h]\n\n  v13 = a2;\n  v14 = a4 + dword_950370[a3];\n  v15 = 0;\n  if ( (unsigned int)sub_44B230(\n                       3 - a2,\n                       1,\n                       2,\n                       a4 + dword_9507F0[a3],\n                       a4 + dword_950810[a3],\n                       a5,\n                       a6,\n                       a7,\n                       a8,\n                       a9,\n                       a10,\n                       a11,\n                       a12,\n                       a13,\n                       a1) )\n  {\n    v15 = 0;\n    if ( (unsigned int)sub_44B7B0(v13, 1, 1, v14, v14) )\n    {\n      LODWORD(v17[0]) = v14;\n      v15 = (unsigned __int64)sub_44B7B0(v13, 1, 3, a4, 0LL, v14, v17[0]) == 0;\n    }\n  }\n  return (unsigned int)v15;\n}\n", 
            "funcStartAddr": "0x488660L", 
            "funcEndAddr": "0x488702L", 
            "funcName": "sub_488660"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_488720@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er15\n  __int64 v5; // r14\n  unsigned int v6; // er12\n  __int64 v7; // rbp\n  _BOOL8 v8; // r13\n  __int64 v10; // [rsp-8h] [rbp-38h]\n\n  v10 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94F570[a3];\n  v6 = a4 + dword_94FEB0[a3];\n  v7 = a4 + dword_950350[a3];\n  LODWORD(v8) = 0;\n  if ( (unsigned int)sub_426580(a4 + dword_94F570[a3]) )\n  {\n    if ( !(unsigned int)sub_44B7B0(v4, 1, 1, a4, a4, v10) )\n    {\n      LODWORD(v8) = 0;\n      if ( (unsigned int)sub_44B7B0(v4, 1, 5, v6, a4, (unsigned int)v5, v7, a4, v5) )\n        v8 = (unsigned int)sub_44B7B0(3 - v4, 1, 3, a4, (unsigned int)v5, v6, v5) != 0;\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x488720L", 
            "funcEndAddr": "0x4887fbL", 
            "funcName": "sub_488720"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_488800(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // ebx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  if ( (unsigned int)sub_426580(a2 + dword_94FEB0[a1]) )\n    result = (unsigned int)sub_43F100(a2, v3) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x488800L", 
            "funcEndAddr": "0x488839L", 
            "funcName": "sub_488800"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_488840(int a1, int a2)\n{\n  int v2; // ebp\n  _BOOL8 result; // rax\n\n  v2 = dword_94F0D0[a1];\n  if ( (unsigned int)sub_426580(a2 + dword_94FEB0[a1]) )\n    result = (unsigned int)sub_426580(a2 + v2) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x488840L", 
            "funcEndAddr": "0x48887eL", 
            "funcName": "sub_488840"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4888C0(int a1, int a2)\n{\n  int v2; // ebp\n  _BOOL8 result; // rax\n\n  v2 = dword_94F0D0[a1];\n  if ( (unsigned int)sub_426580(a2 + dword_94FEB0[a1]) )\n    result = (unsigned int)sub_426580(a2 + v2) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x4888c0L", 
            "funcEndAddr": "0x4888feL", 
            "funcName": "sub_4888C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_488900(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // rbx\n  int v4; // er13\n  unsigned int v5; // er15\n  __int64 v6; // r14\n  _BOOL8 v7; // r12\n  unsigned int v9; // [rsp+0h] [rbp-34h]\n\n  v9 = a3;\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = dword_94F0D0[a1];\n  v5 = a2 + dword_94F570[a1];\n  v6 = a2 + dword_94F9F0[a1];\n  LODWORD(v7) = 0;\n  if ( (unsigned int)sub_426580(a2 + dword_94FEB0[a1]) && (unsigned int)sub_426580(a2 + v4) )\n    v7 = (unsigned int)sub_44B980(v9, 1, 3, a2, (unsigned int)v3, v5, v3, v6) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x488900L", 
            "funcEndAddr": "0x48899aL", 
            "funcName": "sub_488900"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4889A0(int a1, unsigned int a2, int a3)\n{\n  int v3; // er12\n  __int64 v4; // r14\n  unsigned int v5; // er15\n  __int64 v6; // r13\n  _BOOL4 v7; // ebp\n  unsigned int v8; // er12\n\n  v3 = a3;\n  v4 = a2 + dword_94F0D0[a1];\n  v5 = a2 + dword_94F570[a1];\n  v6 = a2 + dword_94F550[a1];\n  v7 = 0;\n  if ( (unsigned int)sub_426580(a2 + dword_94FEB0[a1]) )\n  {\n    if ( (unsigned int)sub_426580(v4) )\n    {\n      v8 = 3 - v3;\n      v7 = 0;\n      if ( (unsigned int)sub_44B980(v8, 1, 3, v5, (unsigned int)v4, a2, v4, v6) )\n        v7 = (unsigned __int64)sub_44B7B0(v8, 1, 3, v5, (unsigned int)v4, a2, a2) == 0;\n    }\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x4889a0L", 
            "funcEndAddr": "0x488a6dL", 
            "funcName": "sub_4889A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_488A70@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  __int64 v5; // rax\n  __int64 v6; // rbx\n  _BOOL8 v7; // rbp\n  __int64 v9; // [rsp-8h] [rbp-28h]\n\n  v9 = a1;\n  v4 = a2;\n  v5 = dword_94FA50[a3];\n  v6 = v5 + (signed int)a4;\n  if ( dword_98A7F4 )\n  {\n    LODWORD(v7) = 0;\n    if ( !(unsigned int)sub_43B6F0(v5, v6, 0LL) )\n      return (unsigned int)v7;\n  }\n  else if ( !dword_8E9524[95 * v6] )\n  {\n    LODWORD(v7) = 0;\n    return (unsigned int)v7;\n  }\n  LODWORD(v7) = 0;\n  if ( !(unsigned int)sub_44B7B0(v4, 0, 1, a4, (unsigned int)v6, v9) )\n    v7 = (unsigned int)sub_43F100(a4, 3 - v4) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x488a70L", 
            "funcEndAddr": "0x488b01L", 
            "funcName": "sub_488A70"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_488B10(int a1, int a2)\n{\n  int v2; // ebp\n  _BOOL4 v3; // er14\n  int v4; // ebp\n  int v5; // eax\n\n  v2 = dword_94FEB0[a1];\n  v3 = 0;\n  if ( (unsigned int)sub_426600(a2) )\n  {\n    v4 = a2 + v2;\n    if ( (unsigned int)sub_426580(v4) )\n    {\n      v5 = sub_4265C0(v4);\n      v3 = v5 < 0;\n      LOBYTE(v3) = v5 > 0;\n    }\n  }\n  return (unsigned int)v3;\n}\n", 
            "funcStartAddr": "0x488b10L", 
            "funcEndAddr": "0x488b53L", 
            "funcName": "sub_488B10"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_488B60(int a1, int a2)\n{\n  int v2; // ebp\n  _BOOL8 result; // rax\n\n  v2 = dword_94FEB0[a1];\n  if ( (unsigned int)sub_426600(a2) )\n    result = (unsigned int)sub_426600(a2 + v2) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x488b60L", 
            "funcEndAddr": "0x488b97L", 
            "funcName": "sub_488B60"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_488BA0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er13\n  unsigned int v4; // er15\n  int v5; // ebx\n  int v6; // er14\n  _BOOL8 v7; // r12\n  __int64 v9; // [rsp+0h] [rbp-48h]\n  _QWORD v10[2]; // [rsp+0h] [rbp-48h]\n  unsigned int v11; // [rsp+14h] [rbp-34h]\n\n  v11 = a3;\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = a2 + dword_94F0D0[a1];\n  v5 = a2 + dword_94FE90[a1];\n  v6 = a2 + dword_94F550[a1];\n  LODWORD(v7) = 0;\n  if ( (unsigned int)sub_426600(a2) )\n  {\n    if ( (unsigned int)sub_426600(v3) )\n    {\n      if ( (unsigned int)sub_426600(v5) )\n      {\n        LODWORD(v9) = v3;\n        LODWORD(v7) = 1;\n        if ( !(unsigned int)sub_44B7B0(v11, 1, 3, a2, v3, v4, v9) )\n        {\n          LODWORD(v10[0]) = v6;\n          v7 = (unsigned int)sub_44B7B0(v11, 1, 3, a2, v3, v4, v10[0]) != 0;\n        }\n      }\n    }\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x488ba0L", 
            "funcEndAddr": "0x488c6dL", 
            "funcName": "sub_488BA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_488C70@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // er12\n  unsigned int v6; // er15\n  int v7; // er13\n  _BOOL4 v8; // ebx\n  __int64 v10; // [rsp+0h] [rbp-38h]\n  __int64 v11; // [rsp+0h] [rbp-38h]\n\n  HIDWORD(v10) = HIDWORD(a1);\n  v4 = a2;\n  v5 = a4 + dword_94FEB0[a3];\n  v6 = a4 + dword_94FE90[a3];\n  v7 = a4 + dword_94F9F0[a3];\n  v8 = 0;\n  if ( (unsigned int)sub_426600(a4) && (unsigned int)sub_426580(v5) )\n  {\n    LODWORD(v10) = v5;\n    if ( (unsigned int)sub_44B7B0(v4, 0, 3, a4, v5, v6, v10) )\n    {\n      LODWORD(v11) = v7;\n      v8 = (unsigned __int64)sub_44B7B0(v4, 0, 3, a4, v5, v6, v11) == 0;\n    }\n    else\n    {\n      v8 = 1;\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x488c70L", 
            "funcEndAddr": "0x488d20L", 
            "funcName": "sub_488C70"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_488D20(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // er15\n  _BOOL8 v4; // r14\n\n  v2 = dword_94F9F0[a1];\n  v3 = a2 + dword_94FEB0[a1];\n  LODWORD(v4) = 0;\n  if ( (unsigned int)sub_426600(a2) && (unsigned int)sub_426580(a2 + v2) )\n    v4 = (unsigned int)sub_426580(v3) != 0;\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x488d20L", 
            "funcEndAddr": "0x488d78L", 
            "funcName": "sub_488D20"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_488D80@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // ebx\n  _BOOL8 v6; // rbp\n  unsigned int v7; // ebx\n  __int64 v9; // [rsp-8h] [rbp-28h]\n\n  v9 = a1;\n  v4 = a2;\n  v5 = dword_94F9F0[a3];\n  LODWORD(v6) = 0;\n  if ( (unsigned int)sub_426600(a4) )\n  {\n    v7 = a4 + v5;\n    if ( (unsigned int)sub_426580(v7) )\n      v6 = (unsigned int)sub_44B7B0(v4, 1, 2, a4, v7, v7, v9) != 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x488d80L", 
            "funcEndAddr": "0x488de5L", 
            "funcName": "sub_488D80"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_488DF0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // er15\n  int v5; // ebp\n  _BOOL8 v6; // r12\n  _QWORD v8[7]; // [rsp+0h] [rbp-38h]\n\n  v3 = a3;\n  v4 = a2 + dword_94F9F0[a1];\n  v5 = a2 + dword_94F550[a1];\n  LODWORD(v6) = 0;\n  if ( (unsigned int)sub_426550(a2) && (unsigned int)sub_426580(v4) )\n  {\n    LODWORD(v8[0]) = v5;\n    v6 = (unsigned int)sub_44B980(v3, 0, 2, a2, v4, a2, v8[0]) != 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x488df0L", 
            "funcEndAddr": "0x488e6aL", 
            "funcName": "sub_488DF0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_488E80(int a1, int a2)\n{\n  int v2; // ebp\n  _BOOL8 result; // rax\n\n  v2 = dword_94FEB0[a1];\n  if ( (unsigned int)sub_426600(a2) )\n    result = (unsigned int)sub_426580(a2 + v2) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x488e80L", 
            "funcEndAddr": "0x488eb7L", 
            "funcName": "sub_488E80"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_488ED0(int a1, int a2)\n{\n  int v2; // ebp\n  _BOOL8 result; // rax\n\n  v2 = dword_94FEB0[a1];\n  if ( (unsigned int)sub_426600(a2) )\n    result = (unsigned int)sub_426580(a2 + v2) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x488ed0L", 
            "funcEndAddr": "0x488f07L", 
            "funcName": "sub_488ED0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_489030(__int64 a1, signed int a2, int a3)\n{\n  void *v3; // rdi\n\n  v3 = &unk_927B28;\n  if ( a3 == 2 )\n    v3 = &unk_9333A0;\n  return (unsigned int)sub_41A430((__int64)v3, a2) != a3;\n}\n", 
            "funcStartAddr": "0x489030L", 
            "funcEndAddr": "0x489054L", 
            "funcName": "sub_489030"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4890B0(int a1, int a2)\n{\n  int v2; // ebp\n  _BOOL8 result; // rax\n\n  v2 = dword_94F550[a1];\n  if ( (unsigned int)sub_426580(a2 + dword_94F590[a1]) )\n    result = (unsigned int)sub_426580(a2 + v2) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x4890b0L", 
            "funcEndAddr": "0x4890eeL", 
            "funcName": "sub_4890B0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4890F0(int a1, int a2)\n{\n  int v2; // ebp\n  _BOOL8 result; // rax\n\n  v2 = dword_94F0F0[a1];\n  if ( (unsigned int)sub_426580(a2 + dword_94FED0[a1]) )\n    result = (unsigned int)sub_426580(a2 + v2) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x4890f0L", 
            "funcEndAddr": "0x48912eL", 
            "funcName": "sub_4890F0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_489180(int a1, int a2)\n{\n  int v2; // ebp\n  _BOOL8 result; // rax\n\n  v2 = dword_94F9F0[a1];\n  if ( (unsigned int)sub_426600(a2) )\n    result = (unsigned int)sub_426580(a2 + v2) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x489180L", 
            "funcEndAddr": "0x4891b7L", 
            "funcName": "sub_489180"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4891C0(int a1, int a2)\n{\n  int v2; // ebp\n  _BOOL8 result; // rax\n\n  v2 = dword_94F9F0[a1];\n  if ( (unsigned int)sub_426600(a2) )\n    result = (unsigned int)sub_426580(a2 + v2) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x4891c0L", 
            "funcEndAddr": "0x4891f7L", 
            "funcName": "sub_4891C0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_489240(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_94FED0[a1];\n  v3 = sub_4083A0(a2 + dword_94FA30[a1]);\n  result = 0LL;\n  if ( v3 == 3 )\n    result = (unsigned int)sub_426580(a2 + v2) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x489240L", 
            "funcEndAddr": "0x48927fL", 
            "funcName": "sub_489240"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_489280@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // ebx\n  _BOOL8 v6; // rbp\n  unsigned int v7; // ebx\n  __int64 v9; // [rsp-8h] [rbp-28h]\n\n  v9 = a1;\n  v4 = a2;\n  v5 = dword_94F9F0[a3];\n  LODWORD(v6) = 0;\n  if ( (unsigned int)sub_426600(a4) )\n  {\n    v7 = a4 + v5;\n    if ( (unsigned int)sub_426580(v7) )\n      v6 = (unsigned int)sub_44B7B0(v4, 1, 2, a4, v7, v7, v9) != 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x489280L", 
            "funcEndAddr": "0x4892e5L", 
            "funcName": "sub_489280"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_4892F0@<rax>(int a1@<eax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er12\n  int v5; // ebp\n  unsigned int v6; // er15\n  signed int v7; // er14\n  unsigned int v8; // er13\n  void *v9; // rdi\n  _BOOL8 v10; // rbp\n  __int64 v12; // [rsp-4h] [rbp-38h]\n  unsigned int v13; // [rsp+0h] [rbp-34h]\n\n  LODWORD(v12) = a1;\n  v4 = a2;\n  v5 = a4 + dword_94F9F0[a3];\n  v6 = a4 + dword_94FEB0[a3];\n  v7 = a4 + dword_94FE90[a3];\n  if ( (unsigned int)sub_426580(v7) )\n  {\n    HIDWORD(v12) = v5;\n    v8 = 3 - v4;\n    v9 = &unk_927B28;\n    if ( v4 == 2 )\n      v9 = &unk_9333A0;\n    LODWORD(v10) = 0;\n    if ( (unsigned int)sub_41A340((__int64)v9, v7) == v4 )\n    {\n      LODWORD(v10) = 0;\n      if ( !(unsigned int)sub_44B7B0(v4, 1, 1, a4, a4, v12) )\n      {\n        LODWORD(v10) = 0;\n        if ( !(unsigned int)sub_44B7B0(v8, 1, 1, a4, a4) )\n          v10 = (unsigned int)sub_44B980(v8, 1, 1, a4, v13, v6) != 0;\n      }\n    }\n  }\n  else\n  {\n    LODWORD(v10) = 0;\n  }\n  return (unsigned int)v10;\n}\n", 
            "funcStartAddr": "0x4892f0L", 
            "funcEndAddr": "0x4893dcL", 
            "funcName": "sub_4892F0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_489440(int a1, int a2)\n{\n  int v2; // ebp\n  _BOOL8 result; // rax\n\n  v2 = dword_94FA30[a1];\n  if ( (unsigned int)sub_426600(a2) )\n    result = (unsigned int)sub_426580(a2 + v2) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x489440L", 
            "funcEndAddr": "0x489477L", 
            "funcName": "sub_489440"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_489480(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // er15\n  _BOOL8 v4; // r14\n\n  v2 = dword_94FA30[a1];\n  v3 = a2 + dword_94F590[a1];\n  LODWORD(v4) = 0;\n  if ( (unsigned int)sub_426600(a2) && (unsigned int)sub_426580(a2 + v2) )\n    v4 = (unsigned int)sub_426580(v3) != 0;\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x489480L", 
            "funcEndAddr": "0x4894d8L", 
            "funcName": "sub_489480"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4894E0(int a1, int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // ebp\n  _BOOL4 v5; // er15\n  int v6; // ebp\n  int v7; // eax\n\n  v3 = a3;\n  v4 = dword_94F9F0[a1];\n  v5 = 0;\n  if ( (unsigned int)sub_426600(a2) )\n  {\n    v6 = a2 + v4;\n    if ( !(unsigned int)sub_43F100(v6, v3) )\n    {\n      LOBYTE(v7) = sub_430330(v6, 3 - v3);\n      v5 = v7 == 0;\n    }\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x4894e0L", 
            "funcEndAddr": "0x48953aL", 
            "funcName": "sub_4894E0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_489540(int a1, int a2)\n{\n  int v2; // ebp\n  _BOOL4 v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_94F9F0[a1];\n  v3 = sub_426580(a2 + dword_94FA30[a1]);\n  result = 1LL;\n  if ( !v3 )\n    result = (unsigned int)sub_426580(a2 + v2) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x489540L", 
            "funcEndAddr": "0x489581L", 
            "funcName": "sub_489540"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_489590(int a1, int a2)\n{\n  int v2; // ebp\n  _BOOL8 result; // rax\n\n  v2 = dword_94F9F0[a1];\n  if ( (unsigned int)sub_426580(a2 + dword_94FA30[a1]) )\n    result = (unsigned int)sub_426580(a2 + v2) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x489590L", 
            "funcEndAddr": "0x4895ceL", 
            "funcName": "sub_489590"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4895D0(int a1, int a2)\n{\n  int v2; // ebp\n  _BOOL8 result; // rax\n\n  v2 = dword_94F570[a1];\n  if ( (unsigned int)sub_426600(a2) )\n    result = (unsigned int)sub_426580(a2 + v2) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x4895d0L", 
            "funcEndAddr": "0x489607L", 
            "funcName": "sub_4895D0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_489610(int a1, int a2)\n{\n  int v2; // ebp\n  _BOOL8 result; // rax\n\n  v2 = dword_94F570[a1];\n  if ( (unsigned int)sub_426600(a2) )\n    result = (unsigned int)sub_426580(a2 + v2) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x489610L", 
            "funcEndAddr": "0x489647L", 
            "funcName": "sub_489610"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_489650(int a1, int a2, int a3)\n{\n  int v3; // er14\n  int v4; // ebp\n  _BOOL4 v5; // ebx\n  signed int v6; // eax\n\n  v3 = a3;\n  v4 = dword_94F570[a1];\n  v5 = 0;\n  if ( (unsigned int)sub_426600(a2) && (unsigned int)sub_426580(a2 + v4) )\n  {\n    v6 = sub_4099C0(a2, v3, 20, 0LL);\n    v5 = v6 < 2;\n    LOBYTE(v5) = v6 > 2;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x489650L", 
            "funcEndAddr": "0x4896aaL", 
            "funcName": "sub_489650"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4896B0(int a1, int a2, int a3)\n{\n  int v3; // er14\n  int v4; // ebx\n  _BOOL4 v5; // ebp\n  signed int v6; // eax\n\n  v3 = a3;\n  v4 = dword_94F570[a1];\n  v5 = 0;\n  if ( (unsigned int)sub_426600(a2) && (unsigned int)sub_426580(a2 + v4) )\n  {\n    v6 = sub_4099C0(a2, 3 - v3, 20, 0LL);\n    v5 = v6 < 2;\n    LOBYTE(v5) = v6 > 2;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x4896b0L", 
            "funcEndAddr": "0x489710L", 
            "funcName": "sub_4896B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_489710(int a1, int a2, int a3)\n{\n  int v3; // er14\n  int v4; // ebp\n  _BOOL4 v5; // ebx\n  signed int v6; // eax\n\n  v3 = a3;\n  v4 = dword_94F570[a1];\n  v5 = 0;\n  if ( (unsigned int)sub_426600(a2) && (unsigned int)sub_426580(a2 + v4) )\n  {\n    v6 = sub_4099C0(a2, v3, 20, 0LL);\n    v5 = v6 < 2;\n    LOBYTE(v5) = v6 > 2;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x489710L", 
            "funcEndAddr": "0x48976aL", 
            "funcName": "sub_489710"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_489770(int a1, int a2)\n{\n  int v2; // ebp\n  _BOOL8 result; // rax\n\n  v2 = dword_94F570[a1];\n  if ( (unsigned int)sub_426600(a2) )\n    result = (unsigned int)sub_426580(a2 + v2) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x489770L", 
            "funcEndAddr": "0x4897a7L", 
            "funcName": "sub_489770"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4897B0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // er15\n  int v5; // ebx\n  _BOOL8 v6; // r12\n\n  v3 = a3;\n  v4 = a2 + dword_94FA30[a1];\n  v5 = dword_94F9F0[a1];\n  LODWORD(v6) = 0;\n  if ( (unsigned int)sub_426600(a2) && (unsigned int)sub_426580(a2 + v5) )\n    v6 = (unsigned int)sub_44B7B0(v3, 1, 2, a2, v4, v4) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x4897b0L", 
            "funcEndAddr": "0x48981eL", 
            "funcName": "sub_4897B0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_489820(int a1, int a2)\n{\n  int v2; // ebp\n  _BOOL8 result; // rax\n\n  v2 = dword_94F9F0[a1];\n  if ( (unsigned int)sub_426600(a2) )\n    result = (unsigned int)sub_426580(a2 + v2) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x489820L", 
            "funcEndAddr": "0x489857L", 
            "funcName": "sub_489820"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_489860(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // er15\n  _BOOL8 v4; // r14\n\n  v2 = dword_94F9F0[a1];\n  v3 = a2 + dword_94FE90[a1];\n  LODWORD(v4) = 0;\n  if ( (unsigned int)sub_426600(a2) && (unsigned int)sub_426580(a2 + v2) )\n    v4 = (unsigned int)sub_426580(v3) != 0;\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x489860L", 
            "funcEndAddr": "0x4898b8L", 
            "funcName": "sub_489860"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4898C0(int a1, int a2)\n{\n  int v2; // er12\n  int v3; // ebx\n  int v4; // er15\n  _BOOL8 v5; // r14\n\n  v2 = dword_94F9F0[a1];\n  v3 = a2 + dword_94FE90[a1];\n  v4 = a2 + dword_94F550[a1];\n  LODWORD(v5) = 0;\n  if ( (unsigned int)sub_426600(a2) && (unsigned int)sub_426580(a2 + v2) && (unsigned int)sub_426580(v3) )\n    v5 = (unsigned int)sub_426580(v4) != 0;\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x4898c0L", 
            "funcEndAddr": "0x48992eL", 
            "funcName": "sub_4898C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_489930(int a1, signed int a2, int a3)\n{\n  int v3; // er14\n  int v4; // ebp\n  _BOOL8 v5; // rbx\n  void *v6; // rdi\n\n  v3 = a3;\n  v4 = dword_94FEB0[a1];\n  LODWORD(v5) = 0;\n  if ( (unsigned int)sub_426580(a2 + dword_94FED0[a1]) && (unsigned int)sub_4083A0(a2 + v4) == 2 )\n  {\n    v6 = &unk_927B28;\n    if ( v3 == 2 )\n      v6 = &unk_9333A0;\n    v5 = (unsigned int)sub_41A340((__int64)v6, a2) != v3;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x489930L", 
            "funcEndAddr": "0x48999aL", 
            "funcName": "sub_489930"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4899A0(int a1, int a2)\n{\n  int v2; // ebp\n  _BOOL8 result; // rax\n\n  v2 = dword_94FA30[a1];\n  if ( (unsigned int)sub_426580(a2 + dword_94FED0[a1]) )\n    result = (unsigned int)sub_426580(a2 + v2) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x4899a0L", 
            "funcEndAddr": "0x4899deL", 
            "funcName": "sub_4899A0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4899E0(int a1, int a2, int a3)\n{\n  int v3; // ebx\n  int v4; // er14\n  signed int v5; // esi\n  int v6; // ebp\n  void *v7; // rdi\n  int v8; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a2 + dword_94FED0[a1];\n  v6 = dword_950350[a1];\n  v7 = &unk_927B28;\n  if ( a3 == 2 )\n    v7 = &unk_9333A0;\n  v8 = sub_41A430((__int64)v7, v5);\n  result = 0LL;\n  if ( v8 == v3 )\n    result = (unsigned int)sub_4083A0(v4 + v6) == 2;\n  return result;\n}\n", 
            "funcStartAddr": "0x4899e0L", 
            "funcEndAddr": "0x489a34L", 
            "funcName": "sub_4899E0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_489A60@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  int v6; // er15\n  int v7; // er12\n  int v8; // ebp\n  void *v9; // rdi\n  int v10; // ecx\n  _BOOL8 result; // rax\n  __int64 v12; // [rsp+0h] [rbp-38h]\n\n  HIDWORD(v12) = HIDWORD(a1);\n  v4 = a2;\n  v5 = a4 + dword_94F9F0[a3];\n  v6 = dword_94F570[a3];\n  v7 = dword_94FEB0[a3];\n  v8 = 3 - a2;\n  v9 = &unk_927B28;\n  if ( a2 == 2 )\n    v9 = &unk_9333A0;\n  v10 = sub_41A430((__int64)v9, v5);\n  result = 0LL;\n  if ( v10 == v8 )\n  {\n    LODWORD(v12) = a4 + v7;\n    result = (unsigned int)sub_44B5C0(v4, 2, a4, v5, a4 + v6, v5, v12) == 5;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x489a60L", 
            "funcEndAddr": "0x489af3L", 
            "funcName": "sub_489A60"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_489B00(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94FA30[a1];\n  if ( (unsigned int)sub_426580(a2 + dword_94F570[a1]) )\n    result = (unsigned int)sub_44B7B0(v3, 1, 2, a2, v4, v4) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x489b00L", 
            "funcEndAddr": "0x489b55L", 
            "funcName": "sub_489B00"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_489BA0@<rax>(char a1@<al>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>, __int64 a5@<r9>, __m128 a6@<xmm0>, __m128 a7@<xmm1>, __m128 a8@<xmm2>, __m128 a9@<xmm3>, __m128 a10@<xmm4>, __m128 a11@<xmm5>, __m128 a12@<xmm6>, __m128 a13@<xmm7>)\n{\n  int v13; // er13\n  unsigned int v14; // er14\n  unsigned int v15; // ebx\n  unsigned int v16; // er12\n  _BOOL8 v17; // r15\n  int v18; // eax\n  int v19; // eax\n  unsigned int v21; // [rsp+0h] [rbp-34h]\n\n  v13 = a4 + dword_94FED0[a3];\n  v14 = a4 + dword_94F9F0[a3];\n  v15 = a4 + dword_94F570[a3];\n  v16 = a4 + dword_94FEB0[a3];\n  LODWORD(v17) = 0;\n  if ( (unsigned int)sub_44B230(a2, 1, 2, v14, v15, a5, a6, a7, a8, a9, a10, a11, a12, a13, a1) )\n  {\n    LOBYTE(v18) = sub_46A080(v14);\n    if ( !v18 || (LOBYTE(v19) = sub_46A080(v15), !v19) )\n    {\n      if ( (unsigned int)sub_426580(v13) )\n        v17 = (unsigned int)sub_44B7B0(v21, 1, 1, a4, v16) != 0;\n    }\n  }\n  return (unsigned int)v17;\n}\n", 
            "funcStartAddr": "0x489ba0L", 
            "funcEndAddr": "0x489c58L", 
            "funcName": "sub_489BA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_489C60(int a1, unsigned int a2, unsigned int a3, int a4)\n{\n  unsigned int v4; // er14\n  signed __int64 v5; // rbp\n  _BOOL4 v6; // ebx\n  unsigned int v7; // er12\n  _QWORD v9[7]; // [rsp+0h] [rbp-38h]\n\n  v4 = a3;\n  v5 = (signed int)a2 + (signed __int64)dword_950350[a1];\n  if ( a4 )\n  {\n    sub_4698B0(a2, v5);\n    v6 = 0;\n  }\n  else\n  {\n    v6 = 0;\n    if ( !dword_954FF0[19 * v5] )\n    {\n      if ( dword_954FF0[19 * ((signed int)a2 + (signed __int64)dword_94F570[a1])] )\n      {\n        v7 = a2 + dword_94FEB0[a1];\n        v6 = 0;\n        if ( (unsigned int)sub_44BB60(a3, 0, 1, a2, a2, (unsigned int)v5) )\n        {\n          LODWORD(v9[0]) = v5;\n          v6 = (unsigned __int64)sub_44B7B0(v4, 1, 3, a2, 0LL, v7, v9[0]) == 0;\n        }\n      }\n    }\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x489c60L", 
            "funcEndAddr": "0x489d20L", 
            "funcName": "sub_489C60"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_489D20(int a1, int a2)\n{\n  signed __int64 v2; // rbp\n  signed int v3; // ebx\n  _BOOL4 v4; // er14\n  int v5; // eax\n\n  v2 = a2 + (signed __int64)dword_94F590[a1];\n  v3 = dword_94FEB0[a1] + a2;\n  v4 = 0;\n  if ( (unsigned int)sub_426310((__int64)&unk_9634B0, v2) && (signed int)sub_4265C0(v2) > 0 && !dword_986FA0[v2] )\n  {\n    LOBYTE(v5) = sub_46A080(v3);\n    v4 = v5 == 0;\n  }\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x489d20L", 
            "funcEndAddr": "0x489d7cL", 
            "funcName": "sub_489D20"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_489D80(int a1, int a2)\n{\n  signed __int64 v2; // rbp\n  signed int v3; // ebx\n  _BOOL4 v4; // er14\n  int v5; // eax\n\n  v2 = a2 + (signed __int64)dword_94F590[a1];\n  v3 = dword_94FE90[a1] + a2;\n  v4 = 0;\n  if ( (unsigned int)sub_426310((__int64)&unk_9634B0, v2) && (signed int)sub_4265C0(v2) > 0 && !dword_986FA0[v2] )\n  {\n    LOBYTE(v5) = sub_46A080(v3);\n    v4 = v5 == 0;\n  }\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x489d80L", 
            "funcEndAddr": "0x489ddcL", 
            "funcName": "sub_489D80"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_489DE0(int a1, int a2)\n{\n  __int64 v2; // rax\n  __int64 v3; // rbx\n  _BOOL4 v4; // ebp\n\n  v2 = dword_94F590[a1];\n  v3 = v2 + a2;\n  v4 = 0;\n  if ( (unsigned int)sub_426310((__int64)&unk_9634B0, (signed int)v2 + a2) && (signed int)sub_4265C0(v3) > 0 )\n    v4 = dword_986FA0[v3] == 0;\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x489de0L", 
            "funcEndAddr": "0x489e28L", 
            "funcName": "sub_489DE0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_489E30(int a1, int a2)\n{\n  __int64 v2; // rax\n  __int64 v3; // rbx\n  _BOOL4 v4; // ebp\n\n  v2 = dword_94F590[a1];\n  v3 = v2 + a2;\n  v4 = 0;\n  if ( (unsigned int)sub_426310((__int64)&unk_9634B0, (signed int)v2 + a2) && (signed int)sub_4265C0(v3) > 0 )\n    v4 = dword_986FA0[v3] == 0;\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x489e30L", 
            "funcEndAddr": "0x489e78L", 
            "funcName": "sub_489E30"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_489E80(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  signed __int64 v4; // rbp\n  unsigned int v5; // ebx\n  _BOOL4 v6; // er12\n\n  v3 = a3;\n  v4 = (signed int)a2 + (signed __int64)dword_94F0F0[a1];\n  v5 = dword_94F570[a1] + a2;\n  v6 = 0;\n  if ( (unsigned int)sub_426310((__int64)&unk_9634B0, v4) && (signed int)sub_4265C0(v4) > 0 && !dword_986FA0[v4] )\n    v6 = (unsigned __int64)sub_44B7B0(v3, 1, 2, a2, v5, v5) == 5;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x489e80L", 
            "funcEndAddr": "0x489f01L", 
            "funcName": "sub_489E80"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_489F80(int a1, int a2, int a3)\n{\n  int v3; // ebx\n  int v4; // ecx\n  bool result; // al\n\n  v3 = a3;\n  v4 = sub_4083A0(a2 + dword_94FED0[a1]);\n  result = 0;\n  if ( v4 == 2 )\n    result = (signed int)sub_4099C0(a2, v3, 20, 0LL) > 3;\n  return result;\n}\n", 
            "funcStartAddr": "0x489f80L", 
            "funcEndAddr": "0x489fc2L", 
            "funcName": "sub_489F80"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_489FD0(int a1, int a2, int a3)\n{\n  int v3; // ebx\n  int v4; // ecx\n  bool result; // al\n\n  v3 = a3;\n  v4 = sub_4083A0(a2 + dword_94FED0[a1]);\n  result = 0;\n  if ( v4 == 3 )\n    result = (signed int)sub_4099C0(a2, v3, 20, 0LL) > 2;\n  return result;\n}\n", 
            "funcStartAddr": "0x489fd0L", 
            "funcEndAddr": "0x48a012L", 
            "funcName": "sub_489FD0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48A020(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // er15\n  unsigned int v5; // er12\n  _BOOL4 v6; // ebx\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94FEB0[a1];\n  v6 = 0;\n  if ( (unsigned int)sub_43F100(a2, a3) && (unsigned int)sub_44B980(v3, 1, 1, a2, v4, v5) )\n    v6 = (unsigned __int64)sub_44BB60(v3, 1, 1, a2, v4, v5) == 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x48a020L", 
            "funcEndAddr": "0x48a0a4L", 
            "funcName": "sub_48A020"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48A0B0(int a1, int a2, int a3)\n{\n  int v3; // er14\n  int v4; // ebx\n  int v5; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_94FEB0[a1];\n  v5 = sub_4083A0(a2 + dword_94FA30[a1]);\n  result = 0LL;\n  if ( v5 == 2 )\n    result = (signed int)sub_4099C0(a2 + v4, 3 - v3, 20, 0LL) < 3;\n  return result;\n}\n", 
            "funcStartAddr": "0x48a0b0L", 
            "funcEndAddr": "0x48a101L", 
            "funcName": "sub_48A0B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48A180@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  signed __int64 v5; // rbx\n  unsigned int v6; // ebp\n  __int64 v8; // [rsp-8h] [rbp-28h]\n\n  v8 = a1;\n  v4 = a2;\n  v5 = dword_94F590[a3] + (signed __int64)(signed int)a4;\n  if ( dword_98A7F4 )\n  {\n    v6 = 0;\n    if ( !(unsigned int)sub_43B050(v5, 0LL) )\n      return v6;\n  }\n  else if ( !dword_8E94D4[95 * v5] )\n  {\n    return 0;\n  }\n  return (unsigned int)sub_44B7B0(v4, 1, 1, a4, (unsigned int)v5, v8) == 0;\n}\n", 
            "funcStartAddr": "0x48a180L", 
            "funcEndAddr": "0x48a1fbL", 
            "funcName": "sub_48A180"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48A200@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  signed __int64 v5; // rbx\n  unsigned int v6; // ebp\n  __int64 v8; // [rsp-8h] [rbp-28h]\n\n  v8 = a1;\n  v4 = a2;\n  v5 = dword_94EC30[a3] + (signed __int64)(signed int)a4;\n  if ( dword_98A7F4 )\n  {\n    v6 = 0;\n    if ( !(unsigned int)sub_43B050(v5, 0LL) )\n      return v6;\n  }\n  else if ( !dword_8E94D4[95 * v5] )\n  {\n    return 0;\n  }\n  return (unsigned int)sub_44B7B0(v4, 1, 1, a4, (unsigned int)v5, v8) == 0;\n}\n", 
            "funcStartAddr": "0x48a200L", 
            "funcEndAddr": "0x48a27bL", 
            "funcName": "sub_48A200"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48A360(int a1, int a2, unsigned int a3)\n{\n  signed __int64 v3; // rbx\n  _BOOL4 v4; // er14\n  int v5; // eax\n  _QWORD v7[5]; // [rsp+0h] [rbp-28h]\n\n  v3 = a2 + (signed __int64)dword_94FED0[a1];\n  LODWORD(v7[0]) = a2 + dword_94FED0[a1];\n  v4 = 0;\n  if ( (unsigned int)sub_44B7B0(\n                       a3,\n                       1,\n                       3,\n                       a2,\n                       (unsigned int)(a2 + dword_94F570[a1]),\n                       (unsigned int)(dword_94FA30[a1] + a2),\n                       v7[0]) )\n  {\n    if ( dword_98A7F4 )\n      v5 = sub_43B050(v3, 0LL);\n    else\n      v5 = dword_8E94D4[95 * v3];\n    v4 = v5 == 0;\n  }\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x48a360L", 
            "funcEndAddr": "0x48a3e7L", 
            "funcName": "sub_48A360"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48A3F0@<rax>(char a1@<al>, int a2@<edx>, int a3@<edi>, int a4@<esi>, __int64 a5@<r8>, __int64 a6@<r9>, __m128 a7@<xmm0>, __m128 a8@<xmm1>, __m128 a9@<xmm2>, __m128 a10@<xmm3>, __m128 a11@<xmm4>, __m128 a12@<xmm5>, __m128 a13@<xmm6>, __m128 a14@<xmm7>)\n{\n  signed __int64 v14; // rbx\n  _BOOL4 v15; // ebp\n  __int64 v16; // rax\n  int v17; // eax\n\n  v14 = dword_94F0D0[a3] + (signed __int64)a4;\n  v15 = 1;\n  v16 = sub_44B230(3 - a2, 0, 1, (unsigned int)v14, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a1);\n  if ( (_DWORD)v16 )\n  {\n    if ( dword_98A7F4 )\n      v17 = sub_43B6F0(v16, v14, 0LL);\n    else\n      v17 = dword_8E9524[95 * v14];\n    v15 = v17 == 0;\n  }\n  return (unsigned int)v15;\n}\n", 
            "funcStartAddr": "0x48a3f0L", 
            "funcEndAddr": "0x48a456L", 
            "funcName": "sub_48A3F0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48A560(int a1, unsigned int a2, int a3)\n{\n  int v3; // er14\n  int v4; // ebx\n  int v5; // eax\n\n  v3 = a3;\n  v4 = dword_94F0F0[a1];\n  if ( !(unsigned int)sub_44AE70(a2, a2 + dword_94F590[a1]) )\n    return 0LL;\n  LOBYTE(v5) = sub_430330(a2 + v4, v3);\n  return v5 == 0;\n}\n", 
            "funcStartAddr": "0x48a560L", 
            "funcEndAddr": "0x48a5a5L", 
            "funcName": "sub_48A560"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48A5F0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // er12\n  unsigned int v6; // er13\n  unsigned int v7; // ebx\n  _BOOL4 v8; // ebp\n  _QWORD v10[7]; // [rsp+0h] [rbp-38h]\n\n  v4 = a2;\n  v5 = a4 + dword_94F0D0[a3];\n  v6 = a4 + dword_94F0B0[a3];\n  v7 = a4 + dword_94F570[a3];\n  v8 = 0;\n  if ( (unsigned int)sub_44B7B0(3 - a2, 1, 2, v5, v6, v7, a1) )\n  {\n    LODWORD(v10[0]) = v7;\n    v8 = (unsigned __int64)sub_44B7B0(v4, 1, 3, a4, v5, v6, v10[0]) == 0;\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x48a5f0L", 
            "funcEndAddr": "0x48a685L", 
            "funcName": "sub_48A5F0"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_48A690(int a1, int a2)\n{\n  int v2; // ebp\n  bool result; // al\n\n  v2 = dword_94FE70[a1];\n  if ( (unsigned int)sub_430D30(a2 + dword_94F570[a1]) )\n    result = (signed int)sub_430BC0(a2 + v2) > 0;\n  else\n    result = 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48a690L", 
            "funcEndAddr": "0x48a6ceL", 
            "funcName": "sub_48A690"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48A6D0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94F0B0[a1];\n  if ( (unsigned int)sub_430D30(v4) )\n    result = (unsigned int)sub_44B7B0(v3, 1, 1, a2, v4) == 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x48a6d0L", 
            "funcEndAddr": "0x48a71bL", 
            "funcName": "sub_48A6D0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48A720(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94EC30[a1];\n  if ( (unsigned int)sub_430D30(v4) )\n    result = (unsigned int)sub_44B7B0(v3, 1, 1, a2, v4) == 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x48a720L", 
            "funcEndAddr": "0x48a76bL", 
            "funcName": "sub_48A720"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48A790(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er15\n  unsigned int v4; // er12\n  int v5; // er14\n  signed int v6; // ebx\n  signed int v7; // er13\n  int v8; // ecx\n  _BOOL8 result; // rax\n  __int64 v10; // [rsp+0h] [rbp-48h]\n  unsigned int v11; // [rsp+14h] [rbp-34h]\n\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = a2 + dword_94FED0[a1];\n  v5 = dword_94FA50[a1];\n  v6 = a2 + dword_94FF10[a1];\n  v7 = a2 + dword_94FA70[a1];\n  v11 = a3;\n  v8 = sub_43F100(a2, a3);\n  result = 1LL;\n  if ( !v8 )\n  {\n    if ( (signed int)sub_430BC0(a2 + v5) <= 0 && (signed int)sub_430BC0(v6) <= 0 && (signed int)sub_430BC0(v7) <= 0 )\n    {\n      result = 0LL;\n    }\n    else\n    {\n      LODWORD(v10) = v3;\n      result = (unsigned int)sub_44B7B0(v11, 1, 3, a2, v3, v4, v10) != 0;\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x48a790L", 
            "funcEndAddr": "0x48a85eL", 
            "funcName": "sub_48A790"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48A860(int a1, int a2, int a3)\n{\n  int v3; // er15\n  unsigned int v4; // er13\n  unsigned int v5; // er14\n  unsigned int v6; // er12\n  _BOOL4 v7; // ebp\n  int v8; // er15\n  __int64 v9; // rsi\n  __int64 v11; // [rsp+0h] [rbp-48h]\n  int v12; // [rsp+Ch] [rbp-3Ch]\n  __int64 v13; // [rsp+10h] [rbp-38h]\n\n  v12 = a3;\n  v3 = dword_94F0D0[a1];\n  v13 = dword_94F570[a1];\n  v4 = a2 + dword_94E7B0[a1];\n  v5 = a2 + dword_94EC50[a1];\n  v6 = a2 + dword_94F590[a1];\n  v7 = 0;\n  if ( (signed int)sub_4083A0(a2 + dword_94FA30[a1]) >= 3 )\n  {\n    v8 = a2 + v3;\n    v9 = (unsigned __int8)byte_98A1B0[v13 + a2];\n    if ( (signed int)sub_430570(v8) <= 2 )\n    {\n      LODWORD(v11) = v4;\n      v7 = (unsigned __int64)sub_44B7B0(3 - v12, 1, 3, v4, v5, v6, v11) == 0;\n    }\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x48a860L", 
            "funcEndAddr": "0x48a922L", 
            "funcName": "sub_48A860"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48A990(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r14\n  __int64 v4; // r15\n  __int64 v5; // rbx\n  __int64 v6; // r13\n  _BOOL8 v7; // r12\n  unsigned int v9; // [rsp+0h] [rbp-34h]\n\n  v3 = a2 + dword_94FE90[a1];\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = a2 + dword_950350[a1];\n  v6 = a2 + dword_94F9F0[a1];\n  LODWORD(v7) = 0;\n  v9 = a3;\n  if ( (unsigned int)sub_44B980(a3, 1, 4, a2, (unsigned int)v3, (unsigned int)v4, v5, v3, v5) )\n    v7 = (unsigned int)sub_44B980(v9, 1, 4, a2, (unsigned int)v4, (unsigned int)v3, v6, v4, v6) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x48a990L", 
            "funcEndAddr": "0x48aa4aL", 
            "funcName": "sub_48A990"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48AA50(int a1, unsigned int a2, unsigned int a3)\n{\n  return sub_44B7B0(a3, 1, 4, a2, 0LL, a2 + dword_950350[a1], a2 + dword_94FE90[a1], a2 + dword_950370[a1]);\n}\n", 
            "funcStartAddr": "0x48aa50L", 
            "funcEndAddr": "0x48aa9eL", 
            "funcName": "sub_48AA50"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48AAA0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  __int64 v5; // r8\n  unsigned int v6; // ebp\n  _BOOL8 v7; // r15\n\n  v4 = a2;\n  v5 = a4 + dword_94F570[a3];\n  v6 = a4 + dword_94F9F0[a3];\n  LODWORD(v7) = 0;\n  if ( (unsigned int)sub_44B7B0(a2, 1, 2, a4, v5, (unsigned int)v5, a1) )\n  {\n    LODWORD(v7) = 0;\n    if ( (unsigned int)sub_44B7B0(v4, 1, 2, a4, v6, v6) )\n      v7 = (unsigned int)sub_43F100(a4, 3 - v4) != 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x48aaa0L", 
            "funcEndAddr": "0x48ab2cL", 
            "funcName": "sub_48AAA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48AB30@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // er15\n  __int128 v6; // cx\n\n  v4 = a2;\n  v5 = a4 + dword_94FEB0[a3];\n  v6 = a4;\n  if ( (unsigned int)sub_44B7B0(a2, 1, 1, a4, a4 + dword_94F570[a3], a1) )\n    *((_QWORD *)&v6 + 1) = (unsigned int)sub_44B7B0(v4, 1, 2, a4, v5, v5) != 0;\n  return DWORD2(v6);\n}\n", 
            "funcStartAddr": "0x48ab30L", 
            "funcEndAddr": "0x48aba1L", 
            "funcName": "sub_48AB30"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48ABB0(int a1, unsigned int a2, unsigned int a3)\n{\n  int v3; // er14\n  unsigned int v4; // ebx\n  _BOOL4 v5; // ebp\n  int v6; // eax\n\n  v3 = a3;\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = 0;\n  if ( (unsigned int)sub_44B7B0(a3, 1, 2, a2, v4, v4) )\n  {\n    LOBYTE(v6) = sub_430330(v4, v3);\n    v5 = v6 == 0;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x48abb0L", 
            "funcEndAddr": "0x48abfeL", 
            "funcName": "sub_48ABB0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48AC00@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  __int64 v5; // r8\n  unsigned int v6; // ebx\n  _BOOL8 v7; // rbp\n\n  v4 = a2;\n  v5 = a4 + dword_94FE90[a3];\n  v6 = a4 + dword_94F9F0[a3];\n  LODWORD(v7) = 0;\n  if ( (unsigned int)sub_44B7B0(a2, 1, 2, a4, v5, (unsigned int)v5, a1) )\n    v7 = (unsigned int)sub_44B7B0(v4, 1, 2, a4, v6, v6) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x48ac00L", 
            "funcEndAddr": "0x48ac77L", 
            "funcName": "sub_48AC00"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48AC80@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  _BOOL8 v6; // rbp\n  __int64 v8; // [rsp-8h] [rbp-28h]\n\n  v8 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94FEB0[a3];\n  LODWORD(v6) = 0;\n  if ( (signed int)sub_4083A0(a4 + dword_950350[a3]) >= 2 && (unsigned int)sub_43F100(v5, 3 - v4) )\n    v6 = (unsigned int)sub_44B7B0(v4, 1, 2, a4, v5, v5, v8) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x48ac80L", 
            "funcEndAddr": "0x48acf5L", 
            "funcName": "sub_48AC80"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48AD00(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  int v5; // ebp\n  _BOOL8 v6; // r15\n\n  v3 = a3;\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = dword_94FED0[a1];\n  LODWORD(v6) = 0;\n  if ( (signed int)sub_4083A0(a2 + dword_950350[a1]) >= 3\n    && (signed int)sub_4083A0(a2 + v5) >= 3\n    && (unsigned int)sub_43F100(v4, 3 - v3) )\n  {\n    v6 = (unsigned int)sub_44B7B0(v3, 1, 2, a2, v4, v4) != 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x48ad00L", 
            "funcEndAddr": "0x48ad8dL", 
            "funcName": "sub_48AD00"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48AE20(int a1, unsigned int a2)\n{\n  int v2; // ebp\n  _BOOL8 result; // rax\n\n  v2 = dword_94F550[a1];\n  if ( (unsigned int)sub_44AE70(a2, a2 + dword_94F570[a1]) )\n    result = (unsigned int)sub_44B0A0(a2, a2 + v2) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x48ae20L", 
            "funcEndAddr": "0x48ae62L", 
            "funcName": "sub_48AE20"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_48AF10@<rax>(char a1@<al>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>, __int64 a5@<r9>, __m128 a6@<xmm0>, __m128 a7@<xmm1>, __m128 a8@<xmm2>, __m128 a9@<xmm3>, __m128 a10@<xmm4>, __m128 a11@<xmm5>, __m128 a12@<xmm6>, __m128 a13@<xmm7>)\n{\n  unsigned int v13; // er14\n  int v14; // er15\n  unsigned int v15; // ebp\n  __int64 v16; // rbx\n  int v17; // er13\n  int v18; // ecx\n  _BOOL8 result; // rax\n\n  v13 = a2;\n  v14 = dword_94F9F0[a3];\n  v15 = a4 + dword_94FE90[a3];\n  v16 = a4 + dword_94FE70[a3];\n  v17 = dword_94FEB0[a3];\n  v18 = sub_44B230(a2, 0, 2, v15, (unsigned int)v16, a5, a6, a7, a8, a9, a10, a11, a12, a13, a1);\n  result = 1LL;\n  if ( !v18 )\n    result = (unsigned int)sub_44B7B0(v13, 0, 5, a4, a4 + v14, v15, v16, a4 + v17, v16) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48af10L", 
            "funcEndAddr": "0x48afb6L", 
            "funcName": "sub_48AF10"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48AFC0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  unsigned int v6; // er15\n  int v7; // er13\n  _BOOL8 v8; // r12\n  _QWORD v10[7]; // [rsp+0h] [rbp-38h]\n\n  v4 = a2;\n  v5 = a4 + dword_94FEB0[a3];\n  v6 = a4 + dword_94FE90[a3];\n  v7 = dword_950370[a3];\n  LODWORD(v8) = 0;\n  if ( (unsigned int)sub_44B7B0(a2, 1, 2, a4, v5, v5, a1) )\n  {\n    LODWORD(v8) = 0;\n    if ( !(unsigned int)sub_44B980(3 - v4, 1, 1, v5, v5, a4 + v7) )\n    {\n      LODWORD(v10[0]) = v6;\n      v8 = (unsigned int)sub_44B7B0(v4, 1, 3, a4, v6, v5, v10[0]) != 0;\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x48afc0L", 
            "funcEndAddr": "0x48b078L", 
            "funcName": "sub_48AFC0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48B080(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  signed int v5; // er15\n  _BOOL8 v6; // r12\n\n  v3 = a3;\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = a2 + dword_94FED0[a1];\n  LODWORD(v6) = 0;\n  if ( (signed int)sub_4083A0(a2 + dword_950350[a1]) >= 2 )\n  {\n    if ( (unsigned int)sub_43F100(v4, 3 - v3) )\n    {\n      LODWORD(v6) = 0;\n      if ( (unsigned int)sub_44B7B0(v3, 1, 2, a2, v4, v4) )\n        v6 = (unsigned int)sub_44AE70(v4, v5) != 0;\n    }\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x48b080L", 
            "funcEndAddr": "0x48b10fL", 
            "funcName": "sub_48B080"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48B110(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // ebx\n  unsigned int v4; // er15\n  unsigned int v5; // er14\n  _BOOL8 v6; // r12\n  _QWORD v8[2]; // [rsp+0h] [rbp-48h]\n  unsigned int v9; // [rsp+14h] [rbp-34h]\n\n  v9 = a3;\n  v3 = a2 + dword_94F9F0[a1];\n  v4 = a2 + dword_94FE90[a1];\n  v5 = a2 + dword_94F550[a1];\n  LODWORD(v6) = 0;\n  if ( (signed int)sub_4083A0(a2 + dword_94F9D0[a1]) >= 2 )\n  {\n    if ( (unsigned int)sub_43F100(v3, 3 - v9) )\n    {\n      LODWORD(v8[0]) = v5;\n      LODWORD(v6) = 0;\n      if ( (unsigned int)sub_44B7B0(v9, 1, 3, a2, v5, v3, v8[0]) )\n        v6 = (unsigned int)sub_44B7B0(3 - v9, 0, 1, v3, v4) != 5;\n    }\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x48b110L", 
            "funcEndAddr": "0x48b1d2L", 
            "funcName": "sub_48B110"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48B1E0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  signed int v6; // er13\n  unsigned int v7; // er12\n  _BOOL8 v8; // r15\n  __int64 v10; // [rsp-8h] [rbp-38h]\n\n  v10 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94F9F0[a3];\n  v6 = a4 + dword_94FE90[a3];\n  v7 = a4 + dword_94F550[a3];\n  LODWORD(v8) = 0;\n  if ( (signed int)sub_4083A0(a4 + dword_94F9D0[a3]) >= 2 )\n  {\n    if ( (unsigned int)sub_43F100(v5, 3 - v4) )\n    {\n      LODWORD(v8) = 0;\n      if ( (unsigned int)sub_44B7B0(v4, 1, 2, a4, v5, v5, v10) )\n      {\n        if ( (unsigned int)sub_44AE70(v5, v6) )\n          v8 = (unsigned int)sub_44B7B0(v4, 1, 2, a4, v7, v7) != 0;\n      }\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x48b1e0L", 
            "funcEndAddr": "0x48b2a3L", 
            "funcName": "sub_48B1E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48B370(int a1, int a2)\n{\n  int v2; // er15\n  int v3; // ebx\n  _BOOL4 v4; // er14\n\n  v2 = a2 + dword_94FEF0[a1];\n  v3 = dword_94FA50[a1];\n  v4 = 0;\n  if ( (signed int)sub_4083A0(a2 + dword_94F590[a1]) >= 2 && (signed int)sub_4083A0(a2 + v3) >= 2 )\n    v4 = (unsigned __int64)sub_4083A0(v2) == 2;\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x48b370L", 
            "funcEndAddr": "0x48b3d2L", 
            "funcName": "sub_48B370"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48B3E0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  __int64 v5; // r8\n  unsigned int v6; // ebx\n  _BOOL8 v7; // rbp\n\n  v4 = a2;\n  v5 = a4 + dword_94F570[a3];\n  v6 = a4 + dword_94FEB0[a3];\n  LODWORD(v7) = 0;\n  if ( (unsigned int)sub_44B7B0(a2, 1, 2, a4, v5, (unsigned int)v5, a1) )\n    v7 = (unsigned int)sub_44B7B0(v4, 1, 2, a4, v6, v6) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x48b3e0L", 
            "funcEndAddr": "0x48b457L", 
            "funcName": "sub_48B3E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48B460(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // r8\n  unsigned int v5; // ebx\n  unsigned int v6; // er15\n  _BOOL8 v7; // r12\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94FEB0[a1];\n  v6 = a2 + dword_94FE70[a1];\n  LODWORD(v7) = 0;\n  if ( (unsigned int)sub_44B7B0(a3, 1, 2, a2, v4, (unsigned int)v4) )\n  {\n    LODWORD(v7) = 0;\n    if ( (unsigned int)sub_44B7B0(v3, 1, 2, a2, v5, v5) )\n      v7 = (unsigned int)sub_44B7B0(v3, 1, 2, a2, v6, v6) != 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x48b460L", 
            "funcEndAddr": "0x48b503L", 
            "funcName": "sub_48B460"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48B510@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebp\n  int v6; // eax\n  _BOOL4 v7; // ebx\n  __int64 v9; // [rsp-8h] [rbp-28h]\n\n  v9 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94FE90[a3];\n  LOBYTE(v6) = sub_430330(a4 + dword_94F570[a3], a2);\n  if ( !v6 || (v7 = 0, (unsigned int)sub_44B7B0(v4, 1, 1, a4, v5, v9)) )\n    v7 = (unsigned __int64)sub_44B7B0(3 - v4, 1, 1, a4, v5, v9) == 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x48b510L", 
            "funcEndAddr": "0x48b593L", 
            "funcName": "sub_48B510"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48B5F0(int a1, int a2, int a3)\n{\n  int v3; // er14\n  int v4; // er12\n  int v5; // ebx\n  _BOOL4 v6; // er15\n  int v7; // eax\n  int v8; // eax\n\n  v3 = a3;\n  v4 = dword_94F570[a1];\n  v5 = a2 + dword_94FEB0[a1];\n  v6 = 0;\n  if ( (unsigned int)sub_4083A0(a2 + dword_94F9D0[a1]) == 1 )\n  {\n    LOBYTE(v7) = sub_430330(a2 + v4, v3);\n    if ( !v7 )\n    {\n      LOBYTE(v8) = sub_430330(v5, v3);\n      v6 = v8 == 0;\n    }\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x48b5f0L", 
            "funcEndAddr": "0x48b658L", 
            "funcName": "sub_48B5F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48B660(int a1, int a2)\n{\n  int v2; // er15\n  int v3; // ebp\n  _BOOL4 v4; // er14\n\n  v2 = dword_94F9F0[a1];\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = 0;\n  if ( (unsigned int)sub_4083A0(a2 + dword_94F570[a1]) == 1 && (unsigned int)sub_4083A0(a2 + v2) == 1 )\n    v4 = (unsigned __int64)sub_4083A0(v3) == 2;\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x48b660L", 
            "funcEndAddr": "0x48b6c2L", 
            "funcName": "sub_48B660"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48B6F0(int a1, unsigned int a2)\n{\n  int v2; // ebp\n  int v3; // eax\n  _BOOL8 result; // rax\n\n  v2 = dword_94F570[a1];\n  LOBYTE(v3) = sub_430D50(a2 + dword_94F0D0[a1]);\n  if ( v3 )\n    result = (unsigned int)sub_44AE70(a2, a2 + v2) != 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x48b6f0L", 
            "funcEndAddr": "0x48b730L", 
            "funcName": "sub_48B6F0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48B7C0(int a1, unsigned int a2, int a3)\n{\n  int v3; // er14\n  unsigned int v4; // ebp\n  int v5; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = sub_4083A0(a2 + dword_94F0B0[a1]);\n  result = 0LL;\n  if ( v5 == 2 )\n    result = (unsigned int)sub_44B7B0(3 - v3, 1, 2, a2, v4, v4) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48b7c0L", 
            "funcEndAddr": "0x48b81bL", 
            "funcName": "sub_48B7C0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48B8C0(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_94FA30[a1];\n  v3 = sub_4083A0(a2 + dword_94EC30[a1]);\n  result = 0LL;\n  if ( v3 == 2 )\n    result = (unsigned int)sub_4083A0(a2 + v2) == 3;\n  return result;\n}\n", 
            "funcStartAddr": "0x48b8c0L", 
            "funcEndAddr": "0x48b900L", 
            "funcName": "sub_48B8C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48B900@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  signed __int64 v6; // rdi\n  _BOOL8 v7; // rbp\n  __int64 v9; // [rsp-8h] [rbp-28h]\n\n  v9 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94FA50[a3];\n  v6 = dword_950350[a3] + (signed __int64)(signed int)a4;\n  if ( !dword_98A7F4 )\n  {\n    LODWORD(v7) = 0;\n    if ( dword_8E94D4[95 * v6] )\n      return (unsigned int)v7;\n    goto LABEL_3;\n  }\n  LODWORD(v7) = 0;\n  if ( !(unsigned int)sub_43B050(v6, 0LL) )\nLABEL_3:\n    v7 = (unsigned int)sub_44B7B0(v4, 1, 2, a4, v5, v5, v9) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x48b900L", 
            "funcEndAddr": "0x48b984L", 
            "funcName": "sub_48B900"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48B990@<rax>(char a1@<al>, int a2@<edx>, int a3@<edi>, int a4@<esi>, __int64 a5@<r8>, __int64 a6@<r9>, __m128 a7@<xmm0>, __m128 a8@<xmm1>, __m128 a9@<xmm2>, __m128 a10@<xmm3>, __m128 a11@<xmm4>, __m128 a12@<xmm5>, __m128 a13@<xmm6>, __m128 a14@<xmm7>)\n{\n  int v14; // er15\n  int v15; // ebp\n  _BOOL4 v16; // ebx\n  __int64 v17; // r8\n  __int64 v18; // r9\n  __m128 v19; // xmm4\n  __m128 v20; // xmm5\n  char v22; // [rsp-8h] [rbp-28h]\n\n  v14 = dword_94F0B0[a3];\n  v15 = 3 - a2;\n  v16 = 1;\n  if ( (unsigned int)sub_44B230(\n                       3 - a2,\n                       0,\n                       1,\n                       (unsigned int)(a4 + dword_94F0F0[a3]),\n                       a5,\n                       a6,\n                       a7,\n                       a8,\n                       a9,\n                       a10,\n                       a11,\n                       a12,\n                       a13,\n                       a14,\n                       a1) )\n    v16 = (unsigned __int64)sub_44B230(\n                              v15,\n                              0,\n                              1,\n                              (unsigned int)(a4 + v14),\n                              v17,\n                              v18,\n                              a7,\n                              a8,\n                              a9,\n                              a10,\n                              v19,\n                              v20,\n                              a13,\n                              a14,\n                              v22) == 0;\n  return (unsigned int)v16;\n}\n", 
            "funcStartAddr": "0x48b990L", 
            "funcEndAddr": "0x48b9f9L", 
            "funcName": "sub_48B990"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48BA00(int a1, int a2, int a3)\n{\n  int v3; // er14\n  int v4; // ebx\n  int v5; // ecx\n  _BOOL8 result; // rax\n  int v7; // eax\n\n  v3 = a3;\n  v4 = dword_94FED0[a1];\n  v5 = sub_4083A0(a2 + dword_94F570[a1]);\n  result = 0LL;\n  if ( v5 == 1 )\n  {\n    LOBYTE(v7) = sub_430330(a2 + v4, v3);\n    result = v7 == 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x48ba00L", 
            "funcEndAddr": "0x48ba44L", 
            "funcName": "sub_48BA00"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48BA50(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  int v5; // er15\n  _BOOL8 v6; // rbp\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = dword_94F550[a1];\n  LODWORD(v6) = 0;\n  if ( (unsigned int)sub_44B7B0(a3, 0, 1, a2, v4) )\n    v6 = (unsigned int)sub_44B7B0(v3, 1, 2, a2, a2 + v5, v4) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x48ba50L", 
            "funcEndAddr": "0x48bac6L", 
            "funcName": "sub_48BA50"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48BAD0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er15\n  _BOOL8 v6; // rbx\n\n  v4 = a2;\n  v5 = dword_94FA30[a3];\n  LODWORD(v6) = 0;\n  if ( !(unsigned int)sub_44B7B0(3 - a2, 1, 1, a4, a4, a1) )\n    v6 = (unsigned int)sub_44B7B0(v4, 1, 2, a4, a4 + v5, a4 + v5) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x48bad0L", 
            "funcEndAddr": "0x48bb3eL", 
            "funcName": "sub_48BAD0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48BB40@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  __int64 v5; // rax\n  __int64 v6; // rbx\n  __int64 v7; // rbp\n  __int64 v9; // [rsp-8h] [rbp-28h]\n\n  v9 = a1;\n  v4 = a2;\n  v5 = dword_94FA30[a3];\n  v6 = v5 + (signed int)a4;\n  if ( dword_98A7F4 )\n  {\n    LODWORD(v7) = 0;\n    if ( !(unsigned int)sub_43B6F0(v5, v6, 0LL) )\n      return (unsigned int)v7;\n  }\n  else if ( !dword_8E9524[95 * v6] )\n  {\n    LODWORD(v7) = 0;\n    return (unsigned int)v7;\n  }\n  return (unsigned int)sub_44B7B0(v4, 1, 1, a4, (unsigned int)v6, v9) != 0;\n}\n", 
            "funcStartAddr": "0x48bb40L", 
            "funcEndAddr": "0x48bbbbL", 
            "funcName": "sub_48BB40"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48BBC0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // er12\n  unsigned int v5; // er15\n  _BOOL8 v6; // rbp\n\n  v3 = a3;\n  v4 = dword_94F570[a1];\n  v5 = a2 + dword_950350[a1];\n  LODWORD(v6) = 0;\n  if ( (unsigned int)sub_44B7B0(a3, 1, 1, a2, a2 + dword_94FE90[a1]) )\n  {\n    LODWORD(v6) = 0;\n    if ( (unsigned int)sub_44B7B0(v3, 0, 2, a2, a2 + v4, a2) )\n      v6 = (unsigned int)sub_44B7B0(v3, 0, 2, a2, v5, a2) != 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x48bbc0L", 
            "funcEndAddr": "0x48bc5eL", 
            "funcName": "sub_48BBC0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48BC90(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // ebx\n  signed int v5; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_94F550[a1];\n  v5 = sub_4083A0(a2 + dword_94FE90[a1]);\n  result = 0LL;\n  if ( v5 <= 3 )\n    result = (unsigned int)sub_44B7B0(v3, 1, 1, a2, a2 + v4) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48bc90L", 
            "funcEndAddr": "0x48bce3L", 
            "funcName": "sub_48BC90"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48BDC0(int a1, int a2, int a3)\n{\n  int v3; // er14\n  int v4; // ebx\n  int v5; // ebp\n  __int64 v6; // r12\n  _BOOL4 v7; // er15\n  __int64 v8; // rsi\n  int v9; // eax\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a2 + dword_94FEB0[a1];\n  v6 = dword_94F570[a1];\n  v7 = 0;\n  if ( (unsigned int)sub_40B8D0(a2 + dword_94F590[a1]) )\n  {\n    v8 = (unsigned __int8)byte_98A1B0[v6 + a2];\n    if ( (signed int)sub_430570(v4) >= 3 )\n    {\n      LOBYTE(v9) = sub_430330(v5, v3);\n      v7 = v9 == 0;\n    }\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x48bdc0L", 
            "funcEndAddr": "0x48be2dL", 
            "funcName": "sub_48BDC0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48BE30(int a1, int a2)\n{\n  __int64 v2; // rbx\n  int v3; // er14\n  __int64 v4; // rbp\n  int v5; // edi\n  __int64 v6; // rsi\n  signed int v7; // ecx\n  _BOOL8 result; // rax\n  __int64 v9; // rsi\n\n  v2 = a2;\n  v3 = dword_94FEF0[a1];\n  v4 = dword_94FED0[a1];\n  v5 = dword_94FA30[a1] + a2;\n  v6 = (unsigned __int8)byte_98A1B0[v4 + a2];\n  v7 = sub_430570(v5);\n  result = 0LL;\n  if ( v7 >= 2 )\n  {\n    v9 = (unsigned __int8)byte_98A1B0[v2 + v4];\n    result = (unsigned int)sub_430570((signed int)v2 + v3) == 2;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x48be30L", 
            "funcEndAddr": "0x48be8dL", 
            "funcName": "sub_48BE30"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48BF70(int a1, signed int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebp\n  __int64 v5; // rax\n  int v6; // edi\n  unsigned int v7; // er12\n  __int64 v8; // rsi\n  _BOOL8 v9; // r15\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a1;\n  v6 = a2 + dword_94F570[a1];\n  v7 = a2 + dword_94F9F0[v5];\n  v8 = (unsigned __int8)byte_98A1B0[dword_94F0D0[v5] + (signed __int64)a2];\n  LODWORD(v9) = 0;\n  if ( (unsigned int)sub_430570(v6) == 3 && (unsigned int)sub_43F100(v7, 3 - v3) && (unsigned int)sub_43F100(v4, 3 - v3) )\n    v9 = (unsigned int)sub_44B7B0(v3, 1, 2, v4, v7, v7) != 0;\n  return (unsigned int)v9;\n}\n", 
            "funcStartAddr": "0x48bf70L", 
            "funcEndAddr": "0x48c008L", 
            "funcName": "sub_48BF70"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48C010@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>, __m128 a5@<xmm0>, __m128 a6@<xmm1>, __m128 a7@<xmm2>, __m128 a8@<xmm3>, __m128 a9@<xmm6>, __m128 a10@<xmm7>)\n{\n  unsigned int v10; // er14\n  unsigned int v11; // ebp\n  unsigned int v12; // er15\n  unsigned int v13; // er12\n  _BOOL4 v14; // er13\n  __int64 v15; // r8\n  __int64 v16; // r9\n  __m128 v17; // xmm4\n  __m128 v18; // xmm5\n  __int64 v20; // [rsp-8h] [rbp-38h]\n  char v21; // [rsp-8h] [rbp-38h]\n\n  v20 = a1;\n  v10 = a2;\n  v11 = a4 + dword_94F9F0[a3];\n  v12 = a4 + dword_94F0B0[a3];\n  v13 = 3 - a2;\n  if ( (unsigned int)sub_43F100(a4 + dword_94F9F0[a3], 3 - a2) || (unsigned int)sub_43F100(a4, v13) )\n  {\n    v14 = 0;\n    if ( (unsigned int)sub_44B7B0(v10, 1, 2, a4, v11, v11, v20) )\n    {\n      v14 = 1;\n      if ( !(unsigned int)sub_44B230(v10, 0, 1, v12, v15, v16, a5, a6, a7, a8, v17, v18, a9, a10, v21) )\n        v14 = (unsigned __int64)sub_43F100(v12, v13) == 0;\n    }\n  }\n  else\n  {\n    v14 = 0;\n  }\n  return (unsigned int)v14;\n}\n", 
            "funcStartAddr": "0x48c010L", 
            "funcEndAddr": "0x48c0c8L", 
            "funcName": "sub_48C010"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48C0F0(int a1, int a2)\n{\n  int v2; // ebp\n  __int64 v3; // r14\n  int v4; // ecx\n  _BOOL8 result; // rax\n  int v6; // ebp\n  __int64 v7; // rsi\n\n  v2 = dword_94F590[a1];\n  v3 = dword_94F570[a1];\n  v4 = sub_4083A0(a2 + dword_94FA30[a1]);\n  result = 0LL;\n  if ( v4 == 2 )\n  {\n    v6 = a2 + v2;\n    v7 = (unsigned __int8)byte_98A1B0[v3 + a2];\n    result = (unsigned int)sub_430570(v6) == 3;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x48c0f0L", 
            "funcEndAddr": "0x48c143L", 
            "funcName": "sub_48C0F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48C1B0(int a1, unsigned int a2, int a3)\n{\n  int v3; // er14\n  _BOOL8 v4; // rbx\n\n  v3 = dword_94F570[a1];\n  LODWORD(v4) = 0;\n  if ( (signed int)sub_4099C0(a2 + dword_94FEB0[a1], a3, 20, 0LL) <= 2 )\n    v4 = (unsigned int)sub_44AE70(a2, a2 + v3) != 0;\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x48c1b0L", 
            "funcEndAddr": "0x48c1fcL", 
            "funcName": "sub_48C1B0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48C200(int a1, int a2, int a3)\n{\n  int v3; // ebx\n  signed int v4; // ebp\n  int v5; // eax\n  int v6; // ecx\n  _BOOL8 result; // rax\n  int v8; // eax\n\n  v3 = a3;\n  v4 = dword_94FA30[a1] + a2;\n  LOBYTE(v5) = sub_430E00(v4);\n  v6 = v5;\n  result = 0LL;\n  if ( !v6 )\n  {\n    LOBYTE(v8) = sub_430330(v4, v3);\n    result = v8 == 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x48c200L", 
            "funcEndAddr": "0x48c239L", 
            "funcName": "sub_48C200"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_48C240(int a1, int a2)\n{\n  int v2; // ebx\n  int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94F570[a1] + a2;\n  v3 = sub_4083A0(v2);\n  result = 0;\n  if ( v3 == 1 )\n    result = (signed int)sub_40A5F0(v2) > 2;\n  return result;\n}\n", 
            "funcStartAddr": "0x48c240L", 
            "funcEndAddr": "0x48c270L", 
            "funcName": "sub_48C240"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_48C270(int a1, int a2)\n{\n  int v2; // ebx\n  int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94F570[a1] + a2;\n  v3 = sub_4083A0(v2);\n  result = 0;\n  if ( v3 == 1 )\n    result = (signed int)sub_40A5F0(v2) > 2;\n  return result;\n}\n", 
            "funcStartAddr": "0x48c270L", 
            "funcEndAddr": "0x48c2a0L", 
            "funcName": "sub_48C270"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48C2E0(int a1, signed int a2, int a3)\n{\n  int v3; // er14\n  _BOOL4 v4; // ebx\n  int v5; // eax\n\n  v3 = a3;\n  v4 = 0;\n  if ( (unsigned int)sub_4083A0(a2 + dword_94F570[a1]) == 2 )\n  {\n    v4 = 0;\n    if ( (signed int)sub_4099C0(a2, 3 - v3, 20, 0LL) >= 2 )\n    {\n      LOBYTE(v5) = sub_430E00(a2);\n      v4 = v5 != 0;\n    }\n  }\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x48c2e0L", 
            "funcEndAddr": "0x48c333L", 
            "funcName": "sub_48C2E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48C340@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  _BOOL8 v6; // rbp\n  int v7; // eax\n  __int64 v9; // [rsp-8h] [rbp-28h]\n\n  v9 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94FA30[a3];\n  LODWORD(v6) = 0;\n  if ( (signed int)sub_4099C0(v5, 3 - a2, 20, 0LL) >= 2 )\n  {\n    LOBYTE(v7) = sub_430E00(v5);\n    if ( v7 )\n      v6 = (unsigned int)sub_44B7B0(v4, 1, 2, a4, v5, v5, v9) != 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x48c340L", 
            "funcEndAddr": "0x48c3b4L", 
            "funcName": "sub_48C340"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48C3C0(int a1, int a2)\n{\n  signed int v2; // ebx\n  int v3; // eax\n  int v4; // eax\n\n  v2 = dword_94FED0[a1] + a2;\n  LOBYTE(v3) = sub_430D50(v2);\n  if ( !v3 )\n    return 0LL;\n  LOBYTE(v4) = sub_430E00(v2);\n  return v4 == 0;\n}\n", 
            "funcStartAddr": "0x48c3c0L", 
            "funcEndAddr": "0x48c3eeL", 
            "funcName": "sub_48C3C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48C470@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // er15\n  unsigned int v6; // er12\n  signed __int64 v7; // rbx\n  unsigned int v8; // ebp\n  __int64 v10; // [rsp+0h] [rbp-38h]\n\n  HIDWORD(v10) = HIDWORD(a1);\n  v4 = a2;\n  v5 = a4 + dword_950350[a3];\n  v6 = a4 + dword_94F550[a3];\n  v7 = dword_94F9F0[a3] + (signed __int64)(signed int)a4;\n  if ( dword_98A7F4 )\n  {\n    v8 = 0;\n    if ( !(unsigned int)sub_43B050(v7, 0LL) )\n      return v8;\n  }\n  else if ( !dword_8E94D4[95 * v7] )\n  {\n    return 0;\n  }\n  LODWORD(v10) = v7;\n  return (unsigned int)sub_44B7B0(v4, 0, 3, a4, v5, v6, v10) == 0;\n}\n", 
            "funcStartAddr": "0x48c470L", 
            "funcEndAddr": "0x48c50fL", 
            "funcName": "sub_48C470"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48C510@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // er15\n  unsigned int v6; // er12\n  signed __int64 v7; // rbx\n  __int64 v8; // rbp\n  __int64 v10; // [rsp+0h] [rbp-38h]\n\n  HIDWORD(v10) = HIDWORD(a1);\n  v4 = a2;\n  v5 = a4 + dword_950350[a3];\n  v6 = a4 + dword_94F550[a3];\n  v7 = dword_94F9F0[a3] + (signed __int64)(signed int)a4;\n  if ( dword_98A7F4 )\n  {\n    LODWORD(v8) = 0;\n    if ( !(unsigned int)sub_43B050(v7, 0LL) )\n      return (unsigned int)v8;\n  }\n  else if ( !dword_8E94D4[95 * v7] )\n  {\n    LODWORD(v8) = 0;\n    return (unsigned int)v8;\n  }\n  LODWORD(v10) = v7;\n  return (unsigned int)sub_44B7B0(v4, 0, 3, a4, v5, v6, v10) != 5;\n}\n", 
            "funcStartAddr": "0x48c510L", 
            "funcEndAddr": "0x48c5b0L", 
            "funcName": "sub_48C510"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48C640@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  signed __int64 v5; // rbx\n  unsigned int v6; // ebp\n  __int64 v8; // [rsp-8h] [rbp-28h]\n\n  v8 = a1;\n  v4 = a2;\n  v5 = dword_94FE70[a3] + (signed __int64)(signed int)a4;\n  if ( dword_98A7F4 )\n  {\n    v6 = 0;\n    if ( !(unsigned int)sub_43B050(v5, 0LL) )\n      return v6;\n  }\n  else if ( !dword_8E94D4[95 * v5] )\n  {\n    return 0;\n  }\n  return (unsigned int)sub_44B7B0(v4, 1, 1, a4, (unsigned int)v5, v8) == 0;\n}\n", 
            "funcStartAddr": "0x48c640L", 
            "funcEndAddr": "0x48c6bbL", 
            "funcName": "sub_48C640"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48C780@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er15\n  int v5; // er14\n  __int128 v6; // cx\n\n  v4 = a2;\n  v5 = dword_94FEB0[a3];\n  v6 = a4;\n  if ( !(unsigned int)sub_44B7B0(a2, 1, 1, a4, a4 + dword_94FE90[a3], a1) )\n    *((_QWORD *)&v6 + 1) = (unsigned int)sub_44B7B0(v4, 1, 1, a4, a4 + v5) != 0;\n  return DWORD2(v6);\n}\n", 
            "funcStartAddr": "0x48c780L", 
            "funcEndAddr": "0x48c7eeL", 
            "funcName": "sub_48C780"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_48C900@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er15\n  int v6; // ebx\n  int v7; // eax\n  int v8; // ecx\n  _BOOL8 result; // rax\n  __int64 v10; // [rsp-8h] [rbp-28h]\n\n  v10 = a1;\n  v4 = a2;\n  v5 = dword_94FA30[a3];\n  v6 = dword_94F570[a3];\n  LOBYTE(v7) = sub_430330(a4 + dword_94FED0[a3], a2);\n  v8 = v7;\n  result = 0LL;\n  if ( !v8 )\n    result = (unsigned int)sub_44B7B0(v4, 1, 2, a4, a4 + v5, a4 + v6, v10) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48c900L", 
            "funcEndAddr": "0x48c96cL", 
            "funcName": "sub_48C900"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48CA20(int a1, signed int a2, int a3)\n{\n  int v3; // er14\n  _BOOL4 v4; // ebx\n  int v5; // eax\n  int v6; // eax\n\n  v3 = a3;\n  v4 = 0;\n  if ( (unsigned int)sub_4083A0(a2 + dword_94F570[a1]) == 1 )\n  {\n    LOBYTE(v5) = sub_430D50(a2);\n    if ( v5 )\n    {\n      v6 = sub_4099C0(a2, v3, 20, 0LL);\n      v4 = v6 < 0;\n      LOBYTE(v4) = v6 > 0;\n    }\n  }\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x48ca20L", 
            "funcEndAddr": "0x48ca6bL", 
            "funcName": "sub_48CA20"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48CB00@<rax>(__int64 a1@<rax>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  int v4; // er15\n  unsigned int v5; // er13\n  int v6; // ebp\n  _BOOL4 v7; // er14\n  __int64 v9; // [rsp-8h] [rbp-38h]\n\n  v9 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94F590[a3];\n  v6 = dword_94FA30[a3];\n  v7 = 0;\n  if ( (signed int)sub_40A5F0(a4 + dword_94F570[a3]) >= 2\n    && (signed int)sub_40A5F0(a4 + v6) >= 2\n    && (unsigned int)sub_43F100(a4, 3 - v4) )\n  {\n    v7 = (unsigned __int64)sub_44B7B0(3 - v4, 1, 1, a4, v5, v9) == 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x48cb00L", 
            "funcEndAddr": "0x48cb94L", 
            "funcName": "sub_48CB00"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_48CBA0(int a1, int a2)\n{\n  int v2; // ebx\n  int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94F570[a1] + a2;\n  v3 = sub_4083A0(v2);\n  result = 0;\n  if ( v3 == 1 )\n    result = (signed int)sub_40A5F0(v2) > 2;\n  return result;\n}\n", 
            "funcStartAddr": "0x48cba0L", 
            "funcEndAddr": "0x48cbd0L", 
            "funcName": "sub_48CBA0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48CBD0(int a1, signed int a2)\n{\n  signed __int64 v2; // rbx\n  signed int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_94FED0[a1] + (signed __int64)a2;\n  if ( dword_98A7F4 )\n  {\n    if ( (unsigned int)sub_43B050(v2, 0LL) )\n      goto LABEL_3;\n    return 1LL;\n  }\n  if ( !dword_8E94D4[95 * v2] )\n    return 1LL;\nLABEL_3:\n  v3 = sub_40A5F0(v2);\n  result = 0LL;\n  if ( v3 <= 2 )\n    result = (unsigned int)sub_44AE70(a2, v2) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48cbd0L", 
            "funcEndAddr": "0x48cc3cL", 
            "funcName": "sub_48CBD0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48CC40(int a1, int a2, int a3)\n{\n  int v3; // er14\n  signed __int64 v4; // rdi\n  _BOOL4 v5; // ebp\n  signed int v6; // eax\n\n  v3 = a3;\n  v4 = dword_94FED0[a1] + (signed __int64)a2;\n  if ( !dword_98A7F4 )\n  {\n    v5 = 0;\n    if ( dword_8E94D4[95 * v4] )\n      return (unsigned int)v5;\n    goto LABEL_3;\n  }\n  v5 = 0;\n  if ( !(unsigned int)sub_43B050(v4, 0LL) )\n  {\nLABEL_3:\n    v6 = sub_4099C0(a2, 3 - v3, 20, 0LL);\n    v5 = v6 < 1;\n    LOBYTE(v5) = v6 > 1;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x48cc40L", 
            "funcEndAddr": "0x48ccaaL", 
            "funcName": "sub_48CC40"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48CCB0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // r15\n  __int64 v5; // r12\n  _BOOL4 v6; // ebx\n\n  v3 = a3;\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = a2 + dword_950370[a1];\n  v6 = 0;\n  if ( (signed int)sub_4083A0(a2 + dword_950350[a1]) >= 2 )\n  {\n    v6 = 0;\n    if ( (unsigned int)sub_44B7B0(v3, 1, 2, a2, (unsigned int)v4, (unsigned int)v4) )\n      v6 = (unsigned __int64)sub_44B980(3 - v3, 1, 3, a2, 0LL, (unsigned int)v4, v4, v5) == 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x48ccb0L", 
            "funcEndAddr": "0x48cd4eL", 
            "funcName": "sub_48CCB0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48CD50@<rax>(unsigned int a1@<eax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>, __m128 a5@<xmm0>, __m128 a6@<xmm1>, __m128 a7@<xmm2>, __m128 a8@<xmm3>, __m128 a9@<xmm6>, __m128 a10@<xmm7>)\n{\n  __int64 v10; // rbx\n  __int64 v11; // r14\n  unsigned int v12; // er15\n  _BOOL8 v13; // r12\n  int v14; // er13\n  __int64 v15; // r8\n  __int64 v16; // r9\n  __m128 v17; // xmm4\n  __m128 v18; // xmm5\n  unsigned __int64 v20; // [rsp-4h] [rbp-38h]\n  char v21; // [rsp-4h] [rbp-38h]\n  int v22; // [rsp+0h] [rbp-34h]\n  unsigned int v23; // [rsp+0h] [rbp-34h]\n\n  v20 = __PAIR__(a2, a1);\n  v10 = a4 + dword_94FEB0[a3];\n  v11 = a4 + dword_950370[a3];\n  v12 = a4 + dword_94FE90[a3];\n  LODWORD(v13) = 0;\n  if ( (signed int)sub_4083A0(a4 + dword_950350[a3]) >= 2 )\n  {\n    LODWORD(v13) = 0;\n    if ( (unsigned int)sub_44B7B0(HIDWORD(v20), 1, 2, a4, (unsigned int)v10, (unsigned int)v10, v20) )\n    {\n      v14 = 3 - v22;\n      LODWORD(v13) = 0;\n      if ( !(unsigned int)sub_44B980(3 - v22, 1, 3, a4, 0LL, (unsigned int)v10, v10, v11) )\n      {\n        LODWORD(v13) = 0;\n        if ( !(unsigned int)sub_44B230(v14, 0, 1, v12, v15, v16, a5, a6, a7, a8, v17, v18, a9, a10, v21)\n          || (unsigned int)sub_44B7B0(v23, 1, 2, a4, (unsigned int)v10, v12) )\n        {\n          LODWORD(v13) = 1;\n          if ( (unsigned int)sub_407B30(v12, v14) )\n            v13 = (unsigned int)sub_44B7B0(v23, 1, 2, a4, v12, v12) != 0;\n        }\n      }\n    }\n  }\n  return (unsigned int)v13;\n}\n", 
            "funcStartAddr": "0x48cd50L", 
            "funcEndAddr": "0x48ce89L", 
            "funcName": "sub_48CD50"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48CE90(int a1, int a2)\n{\n  int v2; // ebp\n  __int64 v3; // r14\n  _BOOL4 v4; // ebx\n  __int64 v5; // r14\n  int v6; // eax\n\n  v2 = dword_94FE90[a1];\n  v3 = dword_94F9F0[a1];\n  v4 = 0;\n  if ( (signed int)sub_4083A0(a2 + dword_94F550[a1]) >= 2 && (signed int)sub_4083A0(a2 + v2) >= 2 )\n  {\n    v5 = a2 + v3;\n    if ( dword_98A7F4 )\n      v6 = sub_43B050(v5, 0LL);\n    else\n      v6 = dword_8E94D4[95 * v5];\n    v4 = v6 == 0;\n  }\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x48ce90L", 
            "funcEndAddr": "0x48cf0dL", 
            "funcName": "sub_48CE90"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_48CF10(int a1, int a2)\n{\n  int v2; // ebp\n  signed int v3; // ebx\n  signed int v4; // ecx\n  bool result; // al\n\n  v2 = a2 + dword_94F550[a1];\n  v3 = dword_94FE90[a1] + a2;\n  if ( (signed int)sub_430BC0(a2 + dword_94F550[a1]) <= 0 && (signed int)sub_430BC0(v3) <= 0 )\n    return 0;\n  v4 = sub_4083A0(v2);\n  result = 0;\n  if ( v4 >= 2 )\n    result = (signed int)sub_4083A0(v3) > 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x48cf10L", 
            "funcEndAddr": "0x48cf6aL", 
            "funcName": "sub_48CF10"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48CF70(int a1, int a2)\n{\n  int v2; // er12\n  int v3; // ebp\n  __int64 v4; // rax\n  __int64 v5; // r15\n  _BOOL4 v6; // er14\n  int v7; // eax\n\n  v2 = dword_94F550[a1];\n  v3 = a2 + dword_94FE90[a1];\n  v4 = dword_94F9F0[a1];\n  v5 = v4 + a2;\n  v6 = 0;\n  if ( (unsigned int)sub_4083A0((signed int)v4 + a2) == 2\n    && (signed int)sub_4083A0(a2 + v2) >= 2\n    && (signed int)sub_4083A0(v3) >= 2 )\n  {\n    if ( dword_98A7F4 )\n      v7 = sub_43B050(v5, 0LL);\n    else\n      v7 = dword_8E94D4[95 * v5];\n    v6 = v7 == 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x48cf70L", 
            "funcEndAddr": "0x48cfffL", 
            "funcName": "sub_48CF70"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48D000(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  unsigned int v5; // ebp\n  _BOOL4 v6; // er12\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94FA30[a1];\n  v6 = 0;\n  if ( (unsigned int)sub_4305D0(a2 + dword_94F570[a1]) && (unsigned int)sub_4305D0(v5) )\n    v6 = (unsigned __int64)sub_44B980(v3, 0, 1, a2, v4, v5) == 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x48d000L", 
            "funcEndAddr": "0x48d070L", 
            "funcName": "sub_48D000"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48D0C0(int a1, int a2)\n{\n  int v2; // ebp\n  signed int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_94FEB0[a1];\n  v3 = sub_4083A0(a2 + dword_94F570[a1]);\n  result = 1LL;\n  if ( v3 >= 4 )\n    result = (signed int)sub_4083A0(a2 + v2) < 4;\n  return result;\n}\n", 
            "funcStartAddr": "0x48d0c0L", 
            "funcEndAddr": "0x48d103L", 
            "funcName": "sub_48D0C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48D1B0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // er15\n  int v5; // er12\n  _BOOL4 v6; // er13\n\n  v3 = a3;\n  v4 = a2 + dword_94EC50[a1];\n  v5 = dword_94FA30[a1];\n  v6 = 0;\n  if ( !(unsigned int)sub_44B980(\n                        a3,\n                        0,\n                        3,\n                        a2,\n                        a2 + dword_94FED0[a1],\n                        a2 + dword_94F0B0[a1],\n                        a2 + dword_94EC10[a1],\n                        a2 + dword_94F0D0[a1]) )\n  {\n    v6 = 0;\n    if ( (unsigned int)sub_44B7B0(v3, 1, 1, a2, a2 + v5) )\n      v6 = (unsigned __int64)sub_43F100(v4, 3 - v3) == 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x48d1b0L", 
            "funcEndAddr": "0x48d275L", 
            "funcName": "sub_48D1B0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_48D280@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er15\n  int v6; // ebx\n  _BOOL8 result; // rax\n  __int64 v8; // [rsp-8h] [rbp-28h]\n\n  v8 = a1;\n  v4 = a2;\n  v5 = dword_94F570[a3];\n  v6 = dword_94FA30[a3];\n  if ( (unsigned int)sub_430D30(a4 + dword_94FA50[a3]) )\n    result = (unsigned int)sub_44B980(v4, 0, 1, a4, a4 + v5, a4 + v6, v8) == 0;\n  else\n    result = 0LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x48d280L", 
            "funcEndAddr": "0x48d2e9L", 
            "funcName": "sub_48D280"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48D2F0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er15\n  __int128 v6; // cx\n\n  v4 = a2;\n  v5 = dword_94FEB0[a3];\n  v6 = a4;\n  if ( (unsigned int)sub_44B7B0(a2, 1, 1, a4, a4 + dword_94F570[a3], a1) )\n    *((_QWORD *)&v6 + 1) = (unsigned int)sub_44B7B0(v4, 1, 1, a4, a4 + v5) != 0;\n  return DWORD2(v6);\n}\n", 
            "funcStartAddr": "0x48d2f0L", 
            "funcEndAddr": "0x48d35eL", 
            "funcName": "sub_48D2F0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48D3A0(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r14\n  __int64 v4; // r15\n  __int64 v5; // r12\n  int v6; // ebx\n  _BOOL8 v7; // r13\n  unsigned int v9; // [rsp+Ch] [rbp-4Ch]\n  unsigned int v10; // [rsp+10h] [rbp-48h]\n  unsigned int v11; // [rsp+14h] [rbp-44h]\n  __int64 v12; // [rsp+18h] [rbp-40h]\n  __int64 v13; // [rsp+20h] [rbp-38h]\n\n  v11 = a3;\n  v10 = a2 + dword_94F550[a1];\n  v9 = a2 + dword_94FEF0[a1];\n  v13 = a2 + dword_94FED0[a1];\n  v12 = a2 + dword_950390[a1];\n  v3 = a2 + dword_9503B0[a1];\n  v4 = a2 + dword_950370[a1];\n  v5 = a2 + dword_94FEB0[a1];\n  v6 = dword_94FA70[a1];\n  LODWORD(v7) = 0;\n  if ( (unsigned int)sub_430D30(a2 + dword_94F590[a1]) && (signed int)sub_4083A0(a2 + v6) >= 2 )\n    v7 = (unsigned int)sub_44B7B0(v11, 1, 8, a2, v10, v9, v13, v12, v3, v4, v5, v3) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x48d3a0L", 
            "funcEndAddr": "0x48d48bL", 
            "funcName": "sub_48D3A0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48D490(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er12\n  __int64 v4; // r14\n  __int64 v5; // r15\n  int v6; // ebx\n  _BOOL8 v7; // r13\n  unsigned int v9; // [rsp+8h] [rbp-40h]\n  unsigned int v10; // [rsp+Ch] [rbp-3Ch]\n  __int64 v11; // [rsp+10h] [rbp-38h]\n\n  v10 = a3;\n  v9 = a2 + dword_94F9F0[a1];\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = a2 + dword_94FED0[a1];\n  v11 = a2 + dword_94FE90[a1];\n  v5 = a2 + dword_94F9D0[a1];\n  v6 = dword_94F590[a1];\n  LODWORD(v7) = 0;\n  if ( (unsigned int)sub_430D30(a2 + dword_94F0B0[a1]) && (signed int)sub_4083A0(a2 + v6) >= 2 )\n    v7 = (unsigned int)sub_44B7B0(v10, 1, 6, a2, v9, v3, v4, v11, v5, v4) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x48d490L", 
            "funcEndAddr": "0x48d558L", 
            "funcName": "sub_48D490"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48D560(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // r12\n  unsigned int v4; // er15\n  __int64 v5; // r14\n  int v6; // ebx\n  _BOOL8 v7; // r13\n  unsigned int v9; // [rsp+0h] [rbp-34h]\n\n  v9 = a3;\n  v3 = a2 + dword_94FA30[a1];\n  v4 = a2 + dword_94F9F0[a1];\n  v5 = a2 + dword_94F530[a1];\n  v6 = dword_94F0F0[a1];\n  LODWORD(v7) = 0;\n  if ( (unsigned int)sub_430D30(a2 + dword_94EC10[a1]) && (signed int)sub_4083A0(a2 + v6) >= 2 )\n    v7 = (unsigned int)sub_44B7B0(v9, 1, 4, a2, (unsigned int)v3, v4, v5, v3) != 0;\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x48d560L", 
            "funcEndAddr": "0x48d602L", 
            "funcName": "sub_48D560"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48D610@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // er15\n  int v6; // ebx\n  unsigned int v7; // er12\n  _BOOL8 v8; // r13\n  __int64 v10; // [rsp-8h] [rbp-38h]\n\n  v10 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94F550[a3];\n  v6 = dword_94F110[a3];\n  v7 = a4 + dword_94F5B0[a3];\n  LODWORD(v8) = 0;\n  if ( (unsigned int)sub_430D30(a4 + dword_94EC30[a3]) && (signed int)sub_4083A0(a4 + v6) >= 2 )\n    v8 = (unsigned int)sub_44B7B0(v4, 1, 2, a4, v5, v7, v10) != 0;\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x48d610L", 
            "funcEndAddr": "0x48d69aL", 
            "funcName": "sub_48D610"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48D710@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // ebp\n  _BOOL4 v5; // ebx\n  signed int v6; // eax\n\n  v4 = a4 + dword_950390[a3];\n  v5 = 0;\n  if ( (unsigned int)sub_44B7B0(a2, 1, 2, a4, a4 + dword_94F570[a3], v4, a1) )\n  {\n    v6 = sub_40A5F0(v4);\n    v5 = v6 < 2;\n    LOBYTE(v5) = v6 > 2;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x48d710L", 
            "funcEndAddr": "0x48d764L", 
            "funcName": "sub_48D710"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_48D770(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  bool result; // al\n\n  v2 = dword_9507F0[a1];\n  v3 = sub_430BC0(a2 + dword_94FA70[a1]);\n  result = 1;\n  if ( v3 <= 0 )\n    result = (signed int)sub_430BC0(a2 + v2) > 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48d770L", 
            "funcEndAddr": "0x48d7b1L", 
            "funcName": "sub_48D770"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_48D7C0(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  bool result; // al\n\n  v2 = dword_950350[a1];\n  v3 = sub_430BC0(a2 + dword_94F5D0[a1]);\n  result = 1;\n  if ( v3 <= 0 )\n    result = (signed int)sub_430BC0(a2 + v2) > 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48d7c0L", 
            "funcEndAddr": "0x48d801L", 
            "funcName": "sub_48D7C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48D810@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er15\n  int v5; // er14\n  _BOOL8 v6; // rbx\n\n  v4 = a2;\n  v5 = dword_94FEB0[a3];\n  LODWORD(v6) = 1;\n  if ( !(unsigned int)sub_44B7B0(a2, 1, 1, a4, a4 + dword_94F570[a3], a1) )\n    v6 = (unsigned int)sub_44B7B0(v4, 1, 1, a4, a4 + v5) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x48d810L", 
            "funcEndAddr": "0x48d881L", 
            "funcName": "sub_48D810"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48D8D0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er13\n  unsigned int v6; // ebx\n  unsigned int v7; // er15\n  _BOOL4 v8; // ebp\n  __int64 v10; // [rsp-8h] [rbp-38h]\n\n  v10 = a1;\n  v4 = a2;\n  v5 = dword_94FE90[a3];\n  v6 = a4 + dword_94F9F0[a3];\n  v7 = a4 + dword_94F570[a3];\n  v8 = 0;\n  if ( (unsigned int)sub_4083A0(a4 + dword_94F9F0[a3]) == 2 && (signed int)sub_430BC0(a4 + v5) > 0 )\n    v8 = (unsigned __int64)sub_44B980(v4, 0, 1, a4, v6, v7, v10) == 0;\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x48d8d0L", 
            "funcEndAddr": "0x48d954L", 
            "funcName": "sub_48D8D0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48D960(int a1, int a2)\n{\n  signed int v2; // ebp\n  signed int v3; // ebx\n  int v4; // er14\n  int v5; // ebp\n  int v6; // eax\n\n  v2 = a2 + dword_94F9D0[a1];\n  v3 = dword_94FE70[a1] + a2;\n  v4 = sub_430BC0(a2 + dword_94F530[a1]);\n  v5 = v4 + (unsigned __int64)sub_430BC0(v2);\n  v6 = sub_430BC0(v3);\n  return !((unsigned __int8)((v5 + v6 < 0) ^ __OFADD__(v5, v6)) | (v5 + v6 == 0));\n}\n", 
            "funcStartAddr": "0x48d960L", 
            "funcEndAddr": "0x48d9abL", 
            "funcName": "sub_48D960"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48D9B0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // er15\n  int v6; // er13\n  unsigned int v7; // er12\n  _BOOL8 v8; // rbx\n  __int64 v10; // [rsp-8h] [rbp-38h]\n\n  v10 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94F590[a3];\n  v6 = dword_94F570[a3];\n  v7 = a4 + dword_94F9F0[a3];\n  LODWORD(v8) = 0;\n  if ( (signed int)sub_4083A0(a4 + dword_94F550[a3]) >= 2 )\n  {\n    LODWORD(v8) = 0;\n    if ( (unsigned int)sub_44B7B0(v4, 1, 1, a4, a4 + v6, v10) )\n      v8 = (unsigned int)sub_44B7B0(v4, 1, 2, a4, v5, v7) != 0;\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x48d9b0L", 
            "funcEndAddr": "0x48da4cL", 
            "funcName": "sub_48D9B0"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_48DA70(int a1, int a2, int a3)\n{\n  int v3; // ebp\n  int v4; // ecx\n  bool result; // al\n\n  v3 = dword_94F590[a1];\n  v4 = sub_43F100(a2 + dword_94F550[a1], 3 - a3);\n  result = 0;\n  if ( !v4 )\n    result = (signed int)sub_4083A0(a2 + v3) > 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x48da70L", 
            "funcEndAddr": "0x48dab6L", 
            "funcName": "sub_48DA70"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48DAC0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // ebx\n  unsigned int v6; // er13\n  unsigned int v7; // er15\n  _BOOL8 v8; // r12\n  __int64 v10; // [rsp-8h] [rbp-38h]\n\n  v10 = a1;\n  v4 = a2;\n  v5 = dword_94F550[a3];\n  v6 = a4 + dword_94F9F0[a3];\n  v7 = a4 + dword_94F570[a3];\n  LODWORD(v8) = 0;\n  if ( (unsigned int)sub_430D30(a4 + dword_94FA30[a3]) )\n  {\n    if ( (signed int)sub_430BC0(a4 + v5) > 0 )\n    {\n      LODWORD(v8) = 0;\n      if ( (unsigned int)sub_44B7B0(v4, 1, 1, a4, v6, v10) )\n        v8 = (unsigned int)sub_44B7B0(v4, 1, 1, a4, v7) != 0;\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x48dac0L", 
            "funcEndAddr": "0x48db66L", 
            "funcName": "sub_48DAC0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_48DBD0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  int v6; // er15\n  _BOOL8 result; // rax\n  __int64 v8; // [rsp-8h] [rbp-28h]\n\n  v8 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94FEB0[a3];\n  v6 = dword_94F590[a3];\n  if ( (signed int)sub_430BC0(v5) <= 0 )\n    result = 0LL;\n  else\n    result = (unsigned int)sub_44B7B0(v4, 1, 2, a4, v5, a4 + v6, v8) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48dbd0L", 
            "funcEndAddr": "0x48dc32L", 
            "funcName": "sub_48DBD0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48DC40(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er15\n  int v4; // er14\n  int v5; // er13\n  int v6; // ebx\n  _BOOL8 v7; // r12\n  int v8; // er14\n  int v9; // eax\n  _QWORD v11[2]; // [rsp+0h] [rbp-48h]\n  unsigned int v12; // [rsp+14h] [rbp-34h]\n\n  v12 = a3;\n  v3 = a2 + dword_94FA30[a1];\n  v4 = dword_94FE70[a1];\n  v5 = dword_950330[a1];\n  v6 = a2 + dword_94F570[a1];\n  LODWORD(v7) = 0;\n  if ( (signed int)sub_4083A0(v6) <= 4 )\n  {\n    v8 = sub_430BC0(a2 + v4);\n    v9 = sub_430BC0(a2 + v5);\n    if ( !((unsigned __int8)((v8 + v9 < 0) ^ __OFADD__(v8, v9)) | (v8 + v9 == 0)) )\n    {\n      LODWORD(v11[0]) = v6;\n      v7 = (unsigned int)sub_44B980(v12, 1, 2, a2, v3, v3, v11[0]) != 0;\n    }\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x48dc40L", 
            "funcEndAddr": "0x48dce3L", 
            "funcName": "sub_48DC40"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48DCF0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er13\n  signed int v4; // er14\n  unsigned int v5; // er12\n  int v6; // ebx\n  unsigned int v7; // er15\n  _BOOL8 v8; // rbx\n  __int64 v10; // [rsp+0h] [rbp-48h]\n  unsigned int v11; // [rsp+8h] [rbp-40h]\n  unsigned int v12; // [rsp+10h] [rbp-38h]\n  int v13; // [rsp+14h] [rbp-34h]\n\n  v12 = a3;\n  v3 = a2 + dword_94FED0[a1];\n  v13 = dword_94F0B0[a1];\n  v4 = a2 + dword_94F9F0[a1];\n  v5 = a2 + dword_94F0F0[a1];\n  v6 = a2 + dword_94F570[a1];\n  v7 = a2 + dword_94FA30[a1];\n  if ( (unsigned int)sub_4083A0(v7) == 2\n    && ((v11 = v6, (signed int)sub_430BC0(a2 + v13) > 0) || (unsigned int)sub_4305D0(v5)) )\n  {\n    LODWORD(v8) = 0;\n    if ( (signed int)sub_430BC0(v4) > 0 || (unsigned int)sub_4305D0(v7) )\n    {\n      LODWORD(v8) = 0;\n      if ( (signed int)sub_4099C0(a2, v12, 20, 0LL) >= 2 )\n      {\n        LODWORD(v10) = v5;\n        v8 = (unsigned int)sub_44B980(v12, 1, 2, a2, v3, v11, v10) != 0;\n      }\n    }\n  }\n  else\n  {\n    LODWORD(v8) = 0;\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x48dcf0L", 
            "funcEndAddr": "0x48ddf6L", 
            "funcName": "sub_48DCF0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_48DE00@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // er15\n  int v6; // ebx\n  _BOOL8 result; // rax\n  __int64 v8; // [rsp-8h] [rbp-28h]\n\n  v8 = a1;\n  v4 = a2;\n  v5 = dword_94F590[a3];\n  v6 = dword_94FA50[a3];\n  if ( (signed int)sub_430BC0(a4) <= 0 )\n    result = 0LL;\n  else\n    result = (unsigned int)sub_44B980(v4, 0, 1, a4, a4 + v5, a4 + v6, v8) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48de00L", 
            "funcEndAddr": "0x48de62L", 
            "funcName": "sub_48DE00"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48DE70(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // er15\n  int v5; // er12\n  signed int v6; // ebx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94F9F0[a1];\n  v5 = dword_94F590[a1];\n  v6 = a2 + dword_94FA30[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94F570[a1]) <= 0\n    && (signed int)sub_430BC0(a2 + v5) <= 0\n    && (signed int)sub_430BC0(v6) <= 0 )\n  {\n    result = 0LL;\n  }\n  else\n  {\n    result = (unsigned int)sub_44B7B0(v3, 1, 1, a2, v4) != 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x48de70L", 
            "funcEndAddr": "0x48def7L", 
            "funcName": "sub_48DE70"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48DF00(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  int v5; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = sub_4083A0(v4);\n  result = 1LL;\n  if ( v5 != 2 )\n    result = (unsigned int)sub_44B7B0(v3, 1, 1, a2, v4) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48df00L", 
            "funcEndAddr": "0x48df4fL", 
            "funcName": "sub_48DF00"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48DF70(int a1, int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, double a8, double a9, __m128 a10, __m128 a11)\n{\n  int v11; // er14\n  __int64 v12; // rcx\n  __int64 v13; // r12\n  int v14; // ebp\n  __int64 v15; // r8\n  __int64 v16; // r9\n  __m128 v17; // xmm4\n  __m128 v18; // xmm5\n  unsigned int v19; // er15\n  __int64 v20; // rax\n  int v21; // eax\n  char v23; // [rsp+0h] [rbp-28h]\n\n  v11 = a3;\n  v12 = dword_94FEB0[a1];\n  v13 = v12 + a2;\n  v14 = dword_94F590[a1];\n  v19 = 0;\n  if ( (signed int)sub_4083A0((signed int)v12 + a2) <= 2 )\n  {\n    v19 = 1;\n    if ( !(unsigned int)sub_44B230(\n                          v11,\n                          0,\n                          1,\n                          (unsigned int)(a2 + v14),\n                          v15,\n                          v16,\n                          a4,\n                          a5,\n                          a6,\n                          a7,\n                          v17,\n                          v18,\n                          a10,\n                          a11,\n                          v23) )\n    {\n      if ( dword_98A7F4 )\n      {\n        v20 = sub_43B050(v13, 0LL);\n        if ( (_DWORD)v20 )\n        {\n          if ( dword_98A7F4 )\n          {\n            v21 = sub_43B6F0(v20, v13, 0LL);\n            return v21 != 0;\n          }\nLABEL_8:\n          v21 = dword_8E9524[95 * (signed int)v13];\n          return v21 != 0;\n        }\n      }\n      else if ( dword_8E94D4[95 * v13] )\n      {\n        goto LABEL_8;\n      }\n    }\n  }\n  return v19;\n}\n", 
            "funcStartAddr": "0x48df70L", 
            "funcEndAddr": "0x48e025L", 
            "funcName": "sub_48DF70"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48E030(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // er15\n  signed __int64 v5; // rbp\n  _BOOL4 v6; // er12\n  int v7; // eax\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = dword_94FE90[a1] + (signed __int64)(signed int)a2;\n  if ( dword_98A7F4 )\n  {\n    v6 = 0;\n    if ( (unsigned int)sub_43B050(v5, 0LL) )\n      return (unsigned int)v6;\n  }\n  else\n  {\n    v6 = 0;\n    if ( dword_8E94D4[95 * v5] )\n      return (unsigned int)v6;\n  }\n  v6 = 0;\n  if ( (unsigned int)sub_44B7B0(v3, 1, 1, a2, (unsigned int)v5) )\n  {\n    LOBYTE(v7) = sub_430330(v4, v3);\n    v6 = v7 == 0;\n  }\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x48e030L", 
            "funcEndAddr": "0x48e0c7L", 
            "funcName": "sub_48E030"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48E0D0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // er15\n  __int64 v5; // rax\n  __int64 v6; // rbp\n  _BOOL4 v7; // er12\n  int v8; // eax\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = dword_94FEB0[a1];\n  v6 = v5 + (signed int)a2;\n  v7 = 0;\n  if ( (signed int)sub_40A5F0((unsigned int)v5 + a2) >= 3 )\n  {\n    if ( dword_98A7F4 )\n    {\n      v7 = 0;\n      if ( (unsigned int)sub_43B050(v6, 0LL) )\n        return (unsigned int)v7;\n    }\n    else if ( dword_8E94D4[95 * v6] )\n    {\n      return (unsigned int)v7;\n    }\n    v7 = 0;\n    if ( (unsigned int)sub_44B7B0(v3, 1, 1, a2, (unsigned int)v6) )\n    {\n      LOBYTE(v8) = sub_430330(v4, v3);\n      v7 = v8 == 0;\n    }\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x48e0d0L", 
            "funcEndAddr": "0x48e173L", 
            "funcName": "sub_48E0D0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_48E1E0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  int v6; // er15\n  __int64 v8; // [rsp+0h] [rbp-28h]\n\n  HIDWORD(v8) = HIDWORD(a1);\n  v4 = a2;\n  v5 = a4 + dword_94F570[a3];\n  v6 = dword_94F9F0[a3];\n  if ( (signed int)sub_430BC0(a4 + dword_94F550[a3]) <= 0 )\n    return 0LL;\n  LODWORD(v8) = a4 + v6;\n  return (unsigned int)sub_44B980(v4, 1, 2, a4, v5, v5, v8) != 0;\n}\n", 
            "funcStartAddr": "0x48e1e0L", 
            "funcEndAddr": "0x48e24dL", 
            "funcName": "sub_48E1E0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_48E250@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  int v6; // ebp\n  __int64 v8; // [rsp+0h] [rbp-28h]\n\n  HIDWORD(v8) = HIDWORD(a1);\n  v4 = a2;\n  v5 = a4 + dword_94FEB0[a3];\n  v6 = dword_94FA30[a3];\n  if ( (signed int)sub_430BC0(a4 + dword_94F9F0[a3]) <= 0 )\n    return 0LL;\n  LODWORD(v8) = a4 + v6;\n  return (unsigned int)sub_44B980(v4, 1, 2, a4, v5, v5, v8) != 0;\n}\n", 
            "funcStartAddr": "0x48e250L", 
            "funcEndAddr": "0x48e2bfL", 
            "funcName": "sub_48E250"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48E2C0(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er15\n  unsigned int v4; // er12\n  __int64 v5; // r14\n  __int64 v6; // r13\n  int v7; // ebx\n  _BOOL4 v8; // eax\n  _BOOL8 v9; // rbx\n  unsigned int v11; // [rsp+Ch] [rbp-3Ch]\n  __int64 v12; // [rsp+10h] [rbp-38h]\n\n  v11 = a3;\n  v3 = a2 + dword_94FEB0[a1];\n  v4 = a2 + dword_94FED0[a1];\n  v12 = a2 + dword_94FE90[a1];\n  v5 = a2 + dword_950370[a1];\n  v6 = a2 + dword_94FA30[a1];\n  v7 = dword_950350[a1];\n  if ( !(unsigned int)sub_430D30(a2 + dword_94F570[a1]) || (v8 = sub_430D30(a2 + v7), LODWORD(v9) = 0, !v8) )\n  {\n    LODWORD(v9) = 1;\n    if ( !(unsigned int)sub_44B7B0(v11, 1, 6, a2, v3, v4, v12, v5, v6, v6) )\n      v9 = (unsigned int)sub_44B7B0(v11, 1, 6, a2, v3, v4, v12, v6, v5, v5) != 0;\n  }\n  return (unsigned int)v9;\n}\n", 
            "funcStartAddr": "0x48e2c0L", 
            "funcEndAddr": "0x48e3b6L", 
            "funcName": "sub_48E2C0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_48E3C0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  unsigned int v6; // ebp\n  _BOOL4 v7; // ecx\n  _BOOL8 result; // rax\n  __int64 v9; // [rsp-8h] [rbp-28h]\n\n  v9 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94F570[a3];\n  v6 = a4 + dword_950350[a3];\n  if ( !(unsigned int)sub_430D30(a4 + dword_94F570[a3]) || (v7 = sub_430D30(v6), result = 0LL, !v7) )\n    result = (unsigned int)sub_44BB60(v4, 0, 1, a4, v5, v6, v9) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48e3c0L", 
            "funcEndAddr": "0x48e42fL", 
            "funcName": "sub_48E3C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48E430@<rax>(char a1@<al>, int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>, __int64 a5@<r8>, __int64 a6@<r9>, __m128 a7@<xmm0>, __m128 a8@<xmm1>, __m128 a9@<xmm2>, __m128 a10@<xmm3>, __m128 a11@<xmm4>, __m128 a12@<xmm5>, __m128 a13@<xmm6>, __m128 a14@<xmm7>)\n{\n  unsigned int v14; // er15\n  unsigned int v15; // er12\n  int v16; // ebx\n  int v17; // er13\n  int v18; // er14\n  __int64 v19; // r8\n  __int64 v20; // r9\n  __m128 v21; // xmm4\n  __m128 v22; // xmm5\n  _BOOL8 v23; // rbx\n  _BOOL4 v24; // eax\n  char v26; // [rsp-8h] [rbp-38h]\n\n  v14 = a2;\n  v15 = a4 + dword_94F570[a3];\n  v16 = a4 + dword_94F550[a3];\n  v17 = a4 + dword_94FEB0[a3];\n  v18 = dword_94FED0[a3];\n  if ( (unsigned int)sub_44B230(a2, 0, 1, a4 + dword_94FA30[a3], a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a1)\n    && (unsigned int)sub_44B230(v14, 0, 1, a4 + v18, v19, v20, a7, a8, a9, a10, v21, v22, a13, a14, v26) )\n  {\n    LODWORD(v23) = 0;\n  }\n  else\n  {\n    v24 = sub_430D30(v16);\n    LODWORD(v23) = 0;\n    if ( !v24 || !(unsigned int)sub_430D30(v17) )\n      v23 = (unsigned int)sub_44B7B0(v14, 1, 2, a4, v15, v15) != 0;\n  }\n  return (unsigned int)v23;\n}\n", 
            "funcStartAddr": "0x48e430L", 
            "funcEndAddr": "0x48e4f7L", 
            "funcName": "sub_48E430"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48E500(int a1, int a2)\n{\n  signed int v2; // ebp\n  signed int v3; // ebx\n  int v4; // er14\n  int v5; // ebp\n  int v6; // eax\n\n  v2 = a2 + dword_94FEB0[a1];\n  v3 = dword_94F9F0[a1] + a2;\n  v4 = sub_430BC0(a2 + dword_94FE90[a1]);\n  v5 = v4 + (unsigned __int64)sub_430BC0(v2);\n  v6 = sub_430BC0(v3);\n  return !((unsigned __int8)((v5 + v6 < 0) ^ __OFADD__(v5, v6)) | (v5 + v6 == 0));\n}\n", 
            "funcStartAddr": "0x48e500L", 
            "funcEndAddr": "0x48e54bL", 
            "funcName": "sub_48E500"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48E550(int a1, int a2)\n{\n  signed int v2; // ebp\n  signed int v3; // ebx\n  int v4; // er14\n  int v5; // ebp\n  int v6; // eax\n\n  v2 = a2 + dword_950310[a1];\n  v3 = dword_950330[a1] + a2;\n  v4 = sub_430BC0(a2 + dword_94FE70[a1]);\n  v5 = v4 + (unsigned __int64)sub_430BC0(v2);\n  v6 = sub_430BC0(v3);\n  return !((unsigned __int8)((v5 + v6 < 0) ^ __OFADD__(v5, v6)) | (v5 + v6 == 0));\n}\n", 
            "funcStartAddr": "0x48e550L", 
            "funcEndAddr": "0x48e59bL", 
            "funcName": "sub_48E550"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48E5A0(int a1, int a2)\n{\n  signed int v2; // ebp\n  signed int v3; // ebx\n  int v4; // er14\n  int v5; // ebp\n  int v6; // eax\n\n  v2 = a2 + dword_94F9F0[a1];\n  v3 = dword_94FE90[a1] + a2;\n  v4 = sub_430BC0(a2 + dword_94F550[a1]);\n  v5 = v4 + (unsigned __int64)sub_430BC0(v2);\n  v6 = sub_430BC0(v3);\n  return !((unsigned __int8)((v5 + v6 < 0) ^ __OFADD__(v5, v6)) | (v5 + v6 == 0));\n}\n", 
            "funcStartAddr": "0x48e5a0L", 
            "funcEndAddr": "0x48e5ebL", 
            "funcName": "sub_48E5A0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48E5F0(int a1, int a2)\n{\n  signed int v2; // ebx\n  int v3; // ebp\n  int v4; // eax\n\n  v2 = dword_94FE90[a1] + a2;\n  v3 = sub_430BC0(a2 + dword_94F9F0[a1]);\n  v4 = sub_430BC0(v2);\n  return !((unsigned __int8)((v3 + v4 < 0) ^ __OFADD__(v3, v4)) | (v3 + v4 == 0));\n}\n", 
            "funcStartAddr": "0x48e5f0L", 
            "funcEndAddr": "0x48e626L", 
            "funcName": "sub_48E5F0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48E650(int a1, int a2)\n{\n  signed int v2; // ebx\n  int v3; // ebp\n  int v4; // eax\n\n  v2 = dword_94FE90[a1] + a2;\n  v3 = sub_430BC0(a2 + dword_94FEB0[a1]);\n  v4 = sub_430BC0(v2);\n  return !((unsigned __int8)((v3 + v4 < 0) ^ __OFADD__(v3, v4)) | (v3 + v4 == 0));\n}\n", 
            "funcStartAddr": "0x48e650L", 
            "funcEndAddr": "0x48e686L", 
            "funcName": "sub_48E650"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48E690(int a1, int a2)\n{\n  signed int v2; // ebx\n  int v3; // ebp\n  int v4; // eax\n\n  v2 = dword_94FE90[a1] + a2;\n  v3 = sub_430BC0(a2 + dword_94FEB0[a1]);\n  v4 = sub_430BC0(v2);\n  return !((unsigned __int8)((v3 + v4 < 0) ^ __OFADD__(v3, v4)) | (v3 + v4 == 0));\n}\n", 
            "funcStartAddr": "0x48e690L", 
            "funcEndAddr": "0x48e6c6L", 
            "funcName": "sub_48E690"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48E6D0(int a1, int a2)\n{\n  signed int v2; // ebx\n  int v3; // ebp\n  int v4; // eax\n\n  v2 = dword_950350[a1] + a2;\n  v3 = sub_430BC0(a2 + dword_950370[a1]);\n  v4 = sub_430BC0(v2);\n  return !((unsigned __int8)((v3 + v4 < 0) ^ __OFADD__(v3, v4)) | (v3 + v4 == 0));\n}\n", 
            "funcStartAddr": "0x48e6d0L", 
            "funcEndAddr": "0x48e706L", 
            "funcName": "sub_48E6D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48E710@<rax>(char a1@<al>, int a2@<edx>, int a3@<edi>, int a4@<esi>, __int64 a5@<r8>, __int64 a6@<r9>, __m128 a7@<xmm0>, __m128 a8@<xmm1>, __m128 a9@<xmm2>, __m128 a10@<xmm3>, __m128 a11@<xmm4>, __m128 a12@<xmm5>, __m128 a13@<xmm6>, __m128 a14@<xmm7>)\n{\n  signed int v14; // er15\n  signed int v15; // er13\n  signed int v16; // er14\n  int v17; // er12\n  int v18; // ebp\n  __int64 v19; // r8\n  __int64 v20; // r9\n  __m128 v21; // xmm4\n  __m128 v22; // xmm5\n  _BOOL4 v23; // ebx\n  int v24; // eax\n  char v26; // [rsp-8h] [rbp-38h]\n\n  v14 = a4 + dword_94F9D0[a3];\n  v15 = a4 + dword_94FE70[a3];\n  v16 = a4 + dword_950330[a3];\n  v17 = dword_94F530[a3];\n  v18 = 3 - a2;\n  if ( (unsigned int)sub_44B230(\n                       3 - a2,\n                       0,\n                       1,\n                       (unsigned int)(a4 + dword_94F550[a3]),\n                       a5,\n                       a6,\n                       a7,\n                       a8,\n                       a9,\n                       a10,\n                       a11,\n                       a12,\n                       a13,\n                       a14,\n                       a1)\n    || (v23 = 1,\n        (unsigned int)sub_44B230(\n                        v18,\n                        0,\n                        1,\n                        (unsigned int)(a4 + v17),\n                        v19,\n                        v20,\n                        a7,\n                        a8,\n                        a9,\n                        a10,\n                        v21,\n                        v22,\n                        a13,\n                        a14,\n                        v26))\n    || (signed int)sub_430BC0(v14) <= 0 )\n  {\n    v23 = 1;\n    if ( (signed int)sub_430BC0(v15) <= 0 )\n    {\n      v24 = sub_430BC0(v16);\n      v23 = v24 < 0;\n      LOBYTE(v23) = v24 > 0;\n    }\n  }\n  return (unsigned int)v23;\n}\n", 
            "funcStartAddr": "0x48e710L", 
            "funcEndAddr": "0x48e7c9L", 
            "funcName": "sub_48E710"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48E7D0(int a1, int a2)\n{\n  signed int v2; // ebp\n  signed int v3; // ebx\n  int v4; // er14\n  int v5; // ebp\n  int v6; // eax\n\n  v2 = a2 + dword_94FE70[a1];\n  v3 = dword_950330[a1] + a2;\n  v4 = sub_430BC0(a2 + dword_94F9D0[a1]);\n  v5 = v4 + (unsigned __int64)sub_430BC0(v2);\n  v6 = sub_430BC0(v3);\n  return !((unsigned __int8)((v5 + v6 < 0) ^ __OFADD__(v5, v6)) | (v5 + v6 == 0));\n}\n", 
            "funcStartAddr": "0x48e7d0L", 
            "funcEndAddr": "0x48e81bL", 
            "funcName": "sub_48E7D0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48E820(int a1, int a2)\n{\n  signed int v2; // ebp\n  signed int v3; // ebx\n  int v4; // er14\n  int v5; // ebp\n  int v6; // eax\n\n  v2 = a2 + dword_9502F0[a1];\n  v3 = dword_9507B0[a1] + a2;\n  v4 = sub_430BC0(a2 + dword_94FE50[a1]);\n  v5 = v4 + (unsigned __int64)sub_430BC0(v2);\n  v6 = sub_430BC0(v3);\n  return !((unsigned __int8)((v5 + v6 < 0) ^ __OFADD__(v5, v6)) | (v5 + v6 == 0));\n}\n", 
            "funcStartAddr": "0x48e820L", 
            "funcEndAddr": "0x48e86bL", 
            "funcName": "sub_48E820"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48E870(int a1, int a2)\n{\n  signed int v2; // ebx\n  int v3; // ebp\n  int v4; // eax\n\n  v2 = dword_94FE90[a1] + a2;\n  v3 = sub_430BC0(a2 + dword_94FEB0[a1]);\n  v4 = sub_430BC0(v2);\n  return !((unsigned __int8)((v3 + v4 < 0) ^ __OFADD__(v3, v4)) | (v3 + v4 == 0));\n}\n", 
            "funcStartAddr": "0x48e870L", 
            "funcEndAddr": "0x48e8a6L", 
            "funcName": "sub_48E870"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_48E8D0(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94FED0[a1];\n  v3 = sub_430BC0(a2 + dword_94FA30[a1]);\n  result = 1;\n  if ( v3 <= 0 )\n    result = (signed int)sub_430BC0(a2 + v2) > 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48e8d0L", 
            "funcEndAddr": "0x48e911L", 
            "funcName": "sub_48E8D0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48E960(int a1, int a2)\n{\n  int v2; // ebp\n  _BOOL8 result; // rax\n\n  v2 = dword_94FEB0[a1];\n  if ( (unsigned int)sub_430D30(a2 + dword_94F570[a1]) )\n    result = (unsigned int)sub_430D30(a2 + v2) == 0;\n  else\n    result = 1LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x48e960L", 
            "funcEndAddr": "0x48e9a1L", 
            "funcName": "sub_48E960"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48E9B0(int a1, unsigned int a2, int a3)\n{\n  int v3; // er15\n  __int64 v4; // r14\n  unsigned int v5; // er12\n  int v6; // ebp\n  _BOOL4 v7; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94F590[a1];\n  v5 = a2 + dword_94FA30[a1];\n  v6 = dword_94FEB0[a1];\n  if ( !(unsigned int)sub_430D30(a2 + dword_94F570[a1]) || (v7 = sub_430D30(a2 + v6), result = 0LL, !v7) )\n    result = (unsigned int)sub_44B980(3 - v3, 1, 3, a2, v5, (unsigned int)v4, v4, a2) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48e9b0L", 
            "funcEndAddr": "0x48ea3dL", 
            "funcName": "sub_48E9B0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48EA40(int a1, int a2)\n{\n  int v2; // ebp\n  _BOOL8 result; // rax\n\n  v2 = dword_950350[a1];\n  if ( (unsigned int)sub_430D30(a2 + dword_94FA30[a1]) )\n    result = (unsigned int)sub_430D30(a2 + v2) == 0;\n  else\n    result = 1LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x48ea40L", 
            "funcEndAddr": "0x48ea81L", 
            "funcName": "sub_48EA40"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48EA90(int a1, int a2)\n{\n  int v2; // er14\n  int v3; // ebx\n  _BOOL4 v4; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_94FEB0[a1];\n  v3 = a2 + dword_94FA30[a1];\n  if ( !(unsigned int)sub_430D30(a2 + dword_94F590[a1]) || (v4 = sub_430D30(a2 + v2), result = 0LL, !v4) )\n    result = (signed int)sub_4083A0(v3) < 3;\n  return result;\n}\n", 
            "funcStartAddr": "0x48ea90L", 
            "funcEndAddr": "0x48eae5L", 
            "funcName": "sub_48EA90"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_48EAF0(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94FEB0[a1];\n  v3 = sub_430BC0(a2 + dword_94F570[a1]);\n  result = 1;\n  if ( v3 <= 0 )\n    result = (signed int)sub_430BC0(a2 + v2) > 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48eaf0L", 
            "funcEndAddr": "0x48eb31L", 
            "funcName": "sub_48EAF0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48EB40(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // er15\n  int v5; // er12\n  signed int v6; // ebx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94F9F0[a1];\n  v5 = dword_94F0B0[a1];\n  v6 = a2 + dword_94F550[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94F0D0[a1]) <= 0\n    && (signed int)sub_430BC0(a2 + v5) <= 0\n    && (signed int)sub_430BC0(v6) <= 0 )\n  {\n    result = 0LL;\n  }\n  else\n  {\n    result = (unsigned int)sub_44B7B0(v3, 1, 1, a2, v4) != 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x48eb40L", 
            "funcEndAddr": "0x48ebc7L", 
            "funcName": "sub_48EB40"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_48EBD0(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  bool result; // al\n\n  v2 = dword_950350[a1];\n  v3 = sub_430BC0(a2 + dword_94FA30[a1]);\n  result = 1;\n  if ( v3 <= 0 )\n    result = (signed int)sub_430BC0(a2 + v2) > 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48ebd0L", 
            "funcEndAddr": "0x48ec11L", 
            "funcName": "sub_48EBD0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48EC20(int a1, int a2)\n{\n  int v2; // er14\n  int v3; // ebx\n  _BOOL8 result; // rax\n\n  v2 = dword_94FEB0[a1];\n  v3 = a2 + dword_94FA30[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94F590[a1]) <= 0 && (signed int)sub_430BC0(a2 + v2) <= 0 )\n    result = 0LL;\n  else\n    result = (signed int)sub_4083A0(v3) < 3;\n  return result;\n}\n", 
            "funcStartAddr": "0x48ec20L", 
            "funcEndAddr": "0x48ec75L", 
            "funcName": "sub_48EC20"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_48EC80(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94FEB0[a1];\n  v3 = sub_430BC0(a2 + dword_94F570[a1]);\n  result = 1;\n  if ( v3 <= 0 )\n    result = (signed int)sub_430BC0(a2 + v2) > 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48ec80L", 
            "funcEndAddr": "0x48ecc1L", 
            "funcName": "sub_48EC80"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_48ECD0(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  bool result; // al\n\n  v2 = dword_950350[a1];\n  v3 = sub_430BC0(a2 + dword_94FA30[a1]);\n  result = 1;\n  if ( v3 <= 0 )\n    result = (signed int)sub_430BC0(a2 + v2) > 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48ecd0L", 
            "funcEndAddr": "0x48ed11L", 
            "funcName": "sub_48ECD0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48ED20(int a1, int a2)\n{\n  int v2; // er14\n  int v3; // ebx\n  _BOOL8 result; // rax\n\n  v2 = dword_94FEB0[a1];\n  v3 = a2 + dword_94FA30[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94F590[a1]) <= 0 && (signed int)sub_430BC0(a2 + v2) <= 0 )\n    result = 0LL;\n  else\n    result = (signed int)sub_4083A0(v3) < 3;\n  return result;\n}\n", 
            "funcStartAddr": "0x48ed20L", 
            "funcEndAddr": "0x48ed75L", 
            "funcName": "sub_48ED20"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48ED80(int a1, unsigned int a2, unsigned int a3)\n{\n  __int64 v3; // rbx\n  int v4; // er15\n  int v5; // er12\n  int v6; // er13\n  int v7; // er14\n  _BOOL8 result; // rax\n  unsigned int v9; // [rsp+0h] [rbp-34h]\n\n  v9 = a3;\n  v3 = a2 + dword_94FA30[a1];\n  v4 = dword_94FED0[a1];\n  v5 = dword_94FEB0[a1];\n  v6 = dword_94F590[a1];\n  v7 = dword_94F570[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94FA50[a1]) <= 0 )\n    result = 0LL;\n  else\n    result = (unsigned int)sub_44B980(v9, 0, 5, a2, (unsigned int)v3, a2 + v4, a2 + v5, a2 + v6, v3, a2 + v7) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48ed80L", 
            "funcEndAddr": "0x48ee22L", 
            "funcName": "sub_48ED80"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48EE30(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // er15\n  int v5; // er13\n  int v6; // er12\n  int v7; // ebx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_94F9F0[a1];\n  v5 = dword_94F0D0[a1];\n  v6 = dword_94F0B0[a1];\n  v7 = dword_94F570[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94F590[a1]) <= 0 )\n    result = 0LL;\n  else\n    result = (unsigned int)sub_44B980(v3, 0, 3, a2, a2 + v4, a2 + v5, a2 + v6, a2 + v7) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48ee30L", 
            "funcEndAddr": "0x48eec1L", 
            "funcName": "sub_48EE30"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48EEF0@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  int v5; // ebx\n  unsigned int v6; // er15\n  unsigned int v7; // er12\n  _BOOL4 v8; // er13\n  __int64 v10; // [rsp-8h] [rbp-38h]\n\n  v10 = a1;\n  v4 = a2;\n  v5 = dword_94FE90[a3];\n  v6 = a4 + dword_94F9F0[a3];\n  v7 = a4 + dword_94FEB0[a3];\n  v8 = 0;\n  if ( (signed int)sub_430BC0(a4 + dword_94FED0[a3]) > 0 && (unsigned int)sub_430D30(a4 + v5) )\n    v8 = (unsigned __int64)sub_44B980(v4, 0, 1, a4, v6, v7, v10) == 0;\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x48eef0L", 
            "funcEndAddr": "0x48ef79L", 
            "funcName": "sub_48EEF0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48EF80(int a1, int a2)\n{\n  int v2; // ebp\n  _BOOL8 result; // rax\n\n  v2 = dword_94FE90[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94FED0[a1]) <= 0 )\n    result = 0LL;\n  else\n    result = (unsigned int)sub_430D30(a2 + v2) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48ef80L", 
            "funcEndAddr": "0x48efbeL", 
            "funcName": "sub_48EF80"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48EFE0(int a1, int a2)\n{\n  int v2; // ebx\n  _BOOL4 v3; // ebp\n  signed int v4; // eax\n\n  v2 = dword_94FE90[a1] + a2;\n  v3 = 0;\n  if ( (signed int)sub_430BC0(a2 + dword_94F590[a1]) > 0 && (unsigned int)sub_430D30(v2) )\n  {\n    v4 = sub_4083A0(v2);\n    v3 = v4 < 1;\n    LOBYTE(v3) = v4 > 1;\n  }\n  return (unsigned int)v3;\n}\n", 
            "funcStartAddr": "0x48efe0L", 
            "funcEndAddr": "0x48f027L", 
            "funcName": "sub_48EFE0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48F050(int a1, unsigned int a2, unsigned int a3)\n{\n  int v3; // er15\n  int v4; // er12\n  __int64 v5; // rbx\n  int v6; // er13\n  int v7; // er14\n  _BOOL8 result; // rax\n  unsigned int v9; // [rsp+0h] [rbp-34h]\n\n  v9 = a3;\n  v3 = dword_94F9F0[a1];\n  v4 = dword_94F550[a1];\n  v5 = a2 + dword_94F570[a1];\n  v6 = dword_94F0D0[a1];\n  v7 = dword_94F0B0[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94F590[a1]) <= 0 )\n    result = 0LL;\n  else\n    result = (unsigned int)sub_44B980(v9, 0, 5, a2, a2 + v3, a2 + v4, v5, a2 + v6, v5, a2 + v7) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48f050L", 
            "funcEndAddr": "0x48f0f1L", 
            "funcName": "sub_48F050"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48F100(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  __int64 v4; // rbx\n  int v5; // er15\n  int v6; // er12\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94FA30[a1];\n  v5 = dword_94F590[a1];\n  v6 = dword_94F570[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94FA50[a1]) <= 0 )\n    result = 0LL;\n  else\n    result = (unsigned int)sub_44B980(v3, 0, 3, a2, (unsigned int)v4, a2 + v5, v4, a2 + v6) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48f100L", 
            "funcEndAddr": "0x48f17dL", 
            "funcName": "sub_48F100"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48F1A0@<rax>(int a1@<eax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er12\n  __int64 v5; // r14\n  __int64 v6; // r15\n  int v7; // ebp\n  _BOOL4 v8; // er13\n  __int64 v10; // [rsp-4h] [rbp-38h]\n  unsigned int v11; // [rsp+0h] [rbp-34h]\n\n  LODWORD(v10) = a1;\n  v4 = a2;\n  v5 = a4 + dword_94F590[a3];\n  HIDWORD(v10) = a4 + dword_94F550[a3];\n  v6 = a4 + dword_94F0D0[a3];\n  v7 = dword_94FEB0[a3];\n  if ( (signed int)sub_430BC0(v6) <= 0 && (signed int)sub_430BC0(a4 + v7) <= 0 )\n  {\n    v8 = 0;\n  }\n  else\n  {\n    v8 = 0;\n    if ( (unsigned int)sub_44B7B0(v4, 1, 2, a4, (unsigned int)v5, (unsigned int)v5, v10) )\n    {\n      v8 = 0;\n      if ( !(unsigned int)sub_44B980(v4, 1, 3, a4, v11, (unsigned int)v5, a4, v5) )\n        v8 = (unsigned __int64)sub_44B980(v4, 1, 3, a4, v11, (unsigned int)v5, v6, v5) == 0;\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x48f1a0L", 
            "funcEndAddr": "0x48f295L", 
            "funcName": "sub_48F1A0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48F2C0(int a1, int a2)\n{\n  signed int v2; // ebx\n  int v3; // ebp\n  int v4; // eax\n\n  v2 = dword_94F530[a1] + a2;\n  v3 = sub_430BC0(a2 + dword_94F0B0[a1]);\n  v4 = sub_430BC0(v2);\n  return !((unsigned __int8)((v3 + v4 < 0) ^ __OFADD__(v3, v4)) | (v3 + v4 == 0));\n}\n", 
            "funcStartAddr": "0x48f2c0L", 
            "funcEndAddr": "0x48f2f6L", 
            "funcName": "sub_48F2C0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48F300(int a1, int a2)\n{\n  signed int v2; // ebx\n  int v3; // ebp\n  int v4; // eax\n\n  v2 = dword_94F530[a1] + a2;\n  v3 = sub_430BC0(a2 + dword_94F0B0[a1]);\n  v4 = sub_430BC0(v2);\n  return !((unsigned __int8)((v3 + v4 < 0) ^ __OFADD__(v3, v4)) | (v3 + v4 == 0));\n}\n", 
            "funcStartAddr": "0x48f300L", 
            "funcEndAddr": "0x48f336L", 
            "funcName": "sub_48F300"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48F340@<rax>(char a1@<al>, unsigned int a2@<edx>, int a3@<edi>, int a4@<esi>, __m128 a5@<xmm0>, __m128 a6@<xmm1>, __m128 a7@<xmm2>, __m128 a8@<xmm3>, __m128 a9@<xmm4>, __m128 a10@<xmm5>, __m128 a11@<xmm6>, __m128 a12@<xmm7>)\n{\n  int v12; // er15\n  int v13; // er14\n  unsigned int v14; // ebx\n  int v15; // ebp\n  int v16; // eax\n\n  v12 = dword_94F550[a3];\n  v13 = dword_94F9D0[a3];\n  v14 = 0;\n  if ( (unsigned int)sub_44B230(\n                       a2,\n                       0,\n                       2,\n                       (unsigned int)(a4 + dword_950350[a3]),\n                       (unsigned int)(a4 + dword_94FED0[a3]),\n                       a2,\n                       a5,\n                       a6,\n                       a7,\n                       a8,\n                       a9,\n                       a10,\n                       a11,\n                       a12,\n                       a1) )\n  {\n    v15 = sub_430BC0(a4 + v12);\n    v16 = sub_430BC0(a4 + v13);\n    v14 = (unsigned __int8)((v15 + v16 < 0) ^ __OFADD__(v15, v16) | (v15 + v16 == 0));\n    LOBYTE(v14) = !((unsigned __int8)((v15 + v16 < 0) ^ __OFADD__(v15, v16)) | (v15 + v16 == 0));\n  }\n  return v14;\n}\n", 
            "funcStartAddr": "0x48f340L", 
            "funcEndAddr": "0x48f3b9L", 
            "funcName": "sub_48F340"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48F3C0(int a1, int a2)\n{\n  signed int v2; // ebx\n  int v3; // ebp\n  int v4; // eax\n\n  v2 = dword_94F9D0[a1] + a2;\n  v3 = sub_430BC0(a2 + dword_94F550[a1]);\n  v4 = sub_430BC0(v2);\n  return !((unsigned __int8)((v3 + v4 < 0) ^ __OFADD__(v3, v4)) | (v3 + v4 == 0));\n}\n", 
            "funcStartAddr": "0x48f3c0L", 
            "funcEndAddr": "0x48f3f6L", 
            "funcName": "sub_48F3C0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48F420(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er12\n  __int64 v4; // r14\n  int v5; // ebx\n  int v6; // er13\n  _BOOL8 v7; // r15\n  unsigned int v9; // [rsp+0h] [rbp-34h]\n\n  v9 = a3;\n  v3 = a2 + dword_94F570[a1];\n  v4 = a2 + dword_94FEB0[a1];\n  v5 = a2 + dword_94F550[a1];\n  v6 = a2 + dword_94FE90[a1];\n  LODWORD(v7) = 0;\n  if ( (unsigned int)sub_4083A0(a2 + dword_94F9F0[a1]) == 2\n    && (signed int)sub_4083A0(v5) >= 2\n    && (signed int)sub_4083A0(v6) >= 2\n    && ((signed int)sub_430BC0(v5) > 0 || (signed int)sub_430BC0(v6) > 0) )\n  {\n    v7 = (unsigned int)sub_44B7B0(v9, 1, 4, a2, 0LL, v3, v4, v4) != 0;\n  }\n  return (unsigned int)v7;\n}\n", 
            "funcStartAddr": "0x48f420L", 
            "funcEndAddr": "0x48f4eaL", 
            "funcName": "sub_48F420"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48F4F0(int a1, int a2)\n{\n  signed int v2; // ebp\n  signed int v3; // ebx\n  int v4; // er14\n  int v5; // ebp\n  int v6; // eax\n\n  v2 = a2 + dword_94FA50[a1];\n  v3 = dword_94FEF0[a1] + a2;\n  v4 = sub_430BC0(a2 + dword_94F5B0[a1]);\n  v5 = v4 + (unsigned __int64)sub_430BC0(v2);\n  v6 = sub_430BC0(v3);\n  return !((unsigned __int8)((v5 + v6 < 0) ^ __OFADD__(v5, v6)) | (v5 + v6 == 0));\n}\n", 
            "funcStartAddr": "0x48f4f0L", 
            "funcEndAddr": "0x48f53bL", 
            "funcName": "sub_48F4F0"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_48F580(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94FEB0[a1];\n  v3 = sub_430BC0(a2 + dword_94F550[a1]);\n  result = 1;\n  if ( v3 <= 0 )\n    result = (signed int)sub_430BC0(a2 + v2) > 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48f580L", 
            "funcEndAddr": "0x48f5c1L", 
            "funcName": "sub_48F580"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_48F5D0(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // er15\n  int v4; // er14\n  int v5; // ecx\n  bool result; // al\n  int v7; // ebx\n  int v8; // ebp\n  int v9; // eax\n\n  v2 = dword_94FEB0[a1];\n  v3 = dword_950350[a1];\n  v4 = dword_950370[a1];\n  v5 = sub_4083A0(a2 + dword_94FA30[a1]);\n  result = 0;\n  if ( v5 == 1 )\n  {\n    v7 = sub_430BC0(a2 + v2);\n    v8 = v7 + (unsigned __int64)sub_430BC0(a2 + v3);\n    v9 = sub_430BC0(a2 + v4);\n    result = !((unsigned __int8)((v8 + v9 < 0) ^ __OFADD__(v8, v9)) | (v8 + v9 == 0));\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x48f5d0L", 
            "funcEndAddr": "0x48f643L", 
            "funcName": "sub_48F5D0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48F670(int a1, int a2, int a3)\n{\n  int v3; // er15\n  __int64 v4; // r14\n  int v5; // er12\n  __int64 v6; // rbx\n  _BOOL4 v7; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = (unsigned int)(a2 + dword_94F550[a1]);\n  v5 = dword_94F570[a1];\n  v6 = (unsigned int)(a2 + dword_94F0D0[a1]);\n  v7 = sub_430D30(a2 + dword_94F9F0[a1]);\n  result = 0LL;\n  if ( !v7 )\n    result = (unsigned int)sub_44B980(3 - v3, 1, 3, (unsigned int)v4, (unsigned int)(a2 + v5), (unsigned int)v6, v4, v6) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48f670L", 
            "funcEndAddr": "0x48f6f3L", 
            "funcName": "sub_48F670"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48F700(int a1, int a2)\n{\n  signed int v2; // ebp\n  signed int v3; // ebx\n  int v4; // er14\n  int v5; // ebp\n  int v6; // eax\n\n  v2 = a2 + dword_94F9F0[a1];\n  v3 = dword_94FE90[a1] + a2;\n  v4 = sub_430BC0(a2 + dword_94F550[a1]);\n  v5 = v4 + (unsigned __int64)sub_430BC0(v2);\n  v6 = sub_430BC0(v3);\n  return !((unsigned __int8)((v5 + v6 < 0) ^ __OFADD__(v5, v6)) | (v5 + v6 == 0));\n}\n", 
            "funcStartAddr": "0x48f700L", 
            "funcEndAddr": "0x48f74bL", 
            "funcName": "sub_48F700"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_48F750(int a1, int a2)\n{\n  int v2; // ebp\n  signed int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94FE90[a1];\n  v3 = sub_4083A0(a2 + dword_94F0B0[a1]);\n  result = 0;\n  if ( v3 >= 2 )\n    result = (signed int)sub_4083A0(a2 + v2) > 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x48f750L", 
            "funcEndAddr": "0x48f790L", 
            "funcName": "sub_48F750"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_48F790@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  signed int v5; // ebp\n  signed int v6; // ebx\n  int v7; // er15\n  int v8; // er13\n  int v9; // ebp\n  int v10; // eax\n  _BOOL8 result; // rax\n  __int64 v12; // [rsp-8h] [rbp-38h]\n\n  v12 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94FEB0[a3];\n  v6 = a4 + dword_94FED0[a3];\n  v7 = dword_94F0D0[a3];\n  v8 = sub_430BC0(a4 + dword_94FE90[a3]);\n  v9 = v8 + (unsigned __int64)sub_430BC0(v5);\n  v10 = sub_430BC0(v6);\n  if ( (unsigned __int8)((v9 + v10 < 0) ^ __OFADD__(v9, v10)) | (v9 + v10 == 0) )\n    result = 0LL;\n  else\n    result = (unsigned int)sub_44BB60(v4, 0, 1, a4, a4 + v7, a4, v12) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48f790L", 
            "funcEndAddr": "0x48f825L", 
            "funcName": "sub_48F790"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_48F830@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  signed int v5; // ebp\n  signed int v6; // ebx\n  int v7; // er15\n  int v8; // er13\n  int v9; // ebp\n  int v10; // eax\n  _BOOL8 result; // rax\n  __int64 v12; // [rsp-8h] [rbp-38h]\n\n  v12 = a1;\n  v4 = a2;\n  v5 = a4 + dword_94FEB0[a3];\n  v6 = a4 + dword_94FED0[a3];\n  v7 = dword_94F0D0[a3];\n  v8 = sub_430BC0(a4 + dword_94FE90[a3]);\n  v9 = v8 + (unsigned __int64)sub_430BC0(v5);\n  v10 = sub_430BC0(v6);\n  if ( (unsigned __int8)((v9 + v10 < 0) ^ __OFADD__(v9, v10)) | (v9 + v10 == 0) )\n    result = 0LL;\n  else\n    result = (unsigned int)sub_44BB60(v4, 0, 1, a4, a4 + v7, a4, v12) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48f830L", 
            "funcEndAddr": "0x48f8c5L", 
            "funcName": "sub_48F830"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48F8D0(int a1, int a2)\n{\n  signed int v2; // ebp\n  signed int v3; // ebx\n  int v4; // er14\n  int v5; // ebp\n  int v6; // eax\n\n  v2 = a2 + dword_950330[a1];\n  v3 = dword_950350[a1] + a2;\n  v4 = sub_430BC0(a2 + dword_950310[a1]);\n  v5 = v4 + (unsigned __int64)sub_430BC0(v2);\n  v6 = sub_430BC0(v3);\n  return !((unsigned __int8)((v5 + v6 < 0) ^ __OFADD__(v5, v6)) | (v5 + v6 == 0));\n}\n", 
            "funcStartAddr": "0x48f8d0L", 
            "funcEndAddr": "0x48f91bL", 
            "funcName": "sub_48F8D0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48F920(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // er12\n  __int64 v5; // r13\n  unsigned int v6; // er15\n  __int64 v7; // rbx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_94F0B0[a1];\n  v5 = a2 + dword_94F570[a1];\n  v6 = a2 + dword_94F550[a1];\n  v7 = a2 + dword_94F9F0[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94FEB0[a1]) <= 0 && (signed int)sub_430BC0(a2 + v4) <= 0 )\n    result = 0LL;\n  else\n    result = (unsigned int)sub_44B980(v3, 1, 4, a2, (unsigned int)v5, v6, v7, v5, v7) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48f920L", 
            "funcEndAddr": "0x48f9c2L", 
            "funcName": "sub_48F920"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48F9D0(int a1, int a2)\n{\n  signed int v2; // ebp\n  signed int v3; // ebx\n  int v4; // er14\n  int v5; // ebp\n  int v6; // eax\n\n  v2 = a2 + dword_94F530[a1];\n  v3 = dword_94F9D0[a1] + a2;\n  v4 = sub_430BC0(a2 + dword_94F0B0[a1]);\n  v5 = v4 + (unsigned __int64)sub_430BC0(v2);\n  v6 = sub_430BC0(v3);\n  return !((unsigned __int8)((v5 + v6 < 0) ^ __OFADD__(v5, v6)) | (v5 + v6 == 0));\n}\n", 
            "funcStartAddr": "0x48f9d0L", 
            "funcEndAddr": "0x48fa1bL", 
            "funcName": "sub_48F9D0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48FA20(int a1, int a2)\n{\n  signed int v2; // ebp\n  signed int v3; // ebx\n  int v4; // er14\n  int v5; // ebp\n  int v6; // eax\n\n  v2 = a2 + dword_94FEB0[a1];\n  v3 = dword_94FE90[a1] + a2;\n  v4 = sub_430BC0(a2 + dword_94F9F0[a1]);\n  v5 = v4 + (unsigned __int64)sub_430BC0(v2);\n  v6 = sub_430BC0(v3);\n  return !((unsigned __int8)((v5 + v6 < 0) ^ __OFADD__(v5, v6)) | (v5 + v6 == 0));\n}\n", 
            "funcStartAddr": "0x48fa20L", 
            "funcEndAddr": "0x48fa6bL", 
            "funcName": "sub_48FA20"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48FA70(int a1, int a2)\n{\n  int v2; // ebx\n  int v3; // ebp\n  int v4; // er15\n  _BOOL8 v5; // r14\n\n  v2 = a2 + dword_94F550[a1];\n  v3 = a2 + dword_94FE90[a1];\n  v4 = dword_94FA30[a1] + a2;\n  LODWORD(v5) = 0;\n  if ( !(unsigned int)sub_40B5B0(a2 + dword_94F550[a1], v3) )\n  {\n    LODWORD(v5) = 1;\n    if ( (signed int)sub_4083A0(v2) >= 5 && (signed int)sub_4083A0(v3) >= 5 )\n      v5 = (signed int)sub_4083A0(v4) < 5;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x48fa70L", 
            "funcEndAddr": "0x48fae7L", 
            "funcName": "sub_48FA70"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_48FB10(int a1, int a2)\n{\n  int v2; // ebp\n  signed int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94F550[a1];\n  v3 = sub_4083A0(a2 + dword_94FA50[a1]);\n  result = 0;\n  if ( v3 >= 2 )\n    result = (signed int)sub_430BC0(a2 + v2) > 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48fb10L", 
            "funcEndAddr": "0x48fb4fL", 
            "funcName": "sub_48FB10"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_48FB50(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94F550[a1];\n  v3 = sub_430BC0(a2 + dword_94F530[a1]);\n  result = 1;\n  if ( v3 <= 0 )\n    result = (signed int)sub_430BC0(a2 + v2) > 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48fb50L", 
            "funcEndAddr": "0x48fb91L", 
            "funcName": "sub_48FB50"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48FBC0(int a1, int a2)\n{\n  __int64 v2; // rbx\n  __int64 v3; // rbx\n  int v4; // ecx\n\n  v2 = dword_94F9F0[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94F550[a1]) <= 0 )\n    return 0LL;\n  v3 = a2 + v2;\n  if ( dword_98A7F4 )\n    v4 = sub_43B050(v3, 0LL);\n  else\n    v4 = dword_8E94D4[95 * v3];\n  return v4 == 0;\n}\n", 
            "funcStartAddr": "0x48fbc0L", 
            "funcEndAddr": "0x48fc1dL", 
            "funcName": "sub_48FBC0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48FC20(int a1, unsigned int a2)\n{\n  int v2; // ebp\n  _BOOL8 result; // rax\n\n  v2 = dword_94FEB0[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94F570[a1]) <= 0 )\n    result = 0LL;\n  else\n    result = (unsigned int)sub_44AE70(a2, a2 + v2) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x48fc20L", 
            "funcEndAddr": "0x48fc60L", 
            "funcName": "sub_48FC20"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48FC60(int a1, int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __int64 a12, __int64 a13, __int64 a14)\n{\n  unsigned int v14; // ebp\n  unsigned int v15; // ebx\n  unsigned int v16; // er14\n  int v17; // ebp\n  int v18; // eax\n  char v20; // [rsp+0h] [rbp-18h]\n\n  v14 = a2 + dword_94EC10[a1];\n  v15 = dword_94F0B0[a1] + a2;\n  v16 = 0;\n  if ( (unsigned int)sub_44B230(a3, 0, 2, v14, v15, a14, a4, a5, a6, a7, a8, a9, a10, a11, v20) )\n  {\n    v17 = sub_430BC0(v14);\n    v18 = sub_430BC0(v15);\n    v16 = (unsigned __int8)((v17 + v18 < 0) ^ __OFADD__(v17, v18) | (v17 + v18 == 0));\n    LOBYTE(v16) = !((unsigned __int8)((v17 + v18 < 0) ^ __OFADD__(v17, v18)) | (v17 + v18 == 0));\n  }\n  return v16;\n}\n", 
            "funcStartAddr": "0x48fc60L", 
            "funcEndAddr": "0x48fcbbL", 
            "funcName": "sub_48FC60"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48FCF0@<rax>(char a1@<al>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>, __m128 a5@<xmm0>, __m128 a6@<xmm1>, __m128 a7@<xmm2>, __m128 a8@<xmm3>, __m128 a9@<xmm6>, __m128 a10@<xmm7>)\n{\n  unsigned int v10; // er14\n  int v11; // ebx\n  __int64 v12; // r15\n  unsigned int v13; // er12\n  __int64 v14; // r13\n  __int64 v15; // r8\n  __int64 v16; // r9\n  __m128 v17; // xmm4\n  __m128 v18; // xmm5\n  _BOOL4 v19; // ebx\n  __int64 v20; // r8\n  __int64 v21; // r9\n  __m128 v22; // xmm4\n  __m128 v23; // xmm5\n  char v25; // [rsp-8h] [rbp-38h]\n  char v26; // [rsp-8h] [rbp-38h]\n\n  v25 = a1;\n  v10 = a2;\n  v11 = dword_94F0B0[a3];\n  v12 = a4 + dword_94F570[a3];\n  v13 = a4 + dword_94F550[a3];\n  v14 = a4 + dword_94F9F0[a3];\n  if ( (signed int)sub_430BC0(a4 + dword_94FEB0[a3]) <= 0 && (signed int)sub_430BC0(a4 + v11) <= 0 )\n  {\n    v19 = 0;\n  }\n  else\n  {\n    v19 = 1;\n    if ( !(unsigned int)sub_44B230(v10, 0, 1, v13, v15, v16, a5, a6, a7, a8, v17, v18, a9, a10, v25)\n      || !(unsigned int)sub_44B980(v10, 1, 2, a4, (unsigned int)v12, (unsigned int)v12, v14) )\n    {\n      v19 = 0;\n      if ( !(unsigned int)sub_44B230(v10, 0, 1, v13, v20, v21, a5, a6, a7, a8, v22, v23, a9, a10, v26) )\n        v19 = (unsigned __int64)sub_44B980(v10, 0, 3, a4, (unsigned int)v12, v13, v12, v14) == 0;\n    }\n  }\n  return (unsigned int)v19;\n}\n", 
            "funcStartAddr": "0x48fcf0L", 
            "funcEndAddr": "0x48fdf5L", 
            "funcName": "sub_48FCF0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_48FE30(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // ebx\n  unsigned int v5; // ebp\n  _BOOL8 v6; // r12\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  v5 = a2 + dword_94FEB0[a1];\n  LODWORD(v6) = 0;\n  if ( (unsigned int)sub_4305D0(a2 + dword_94F570[a1]) && (unsigned int)sub_4305D0(v5) )\n    v6 = (unsigned int)sub_44B980(v3, 1, 1, a2, v4, v5) != 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x48fe30L", 
            "funcEndAddr": "0x48fea0L", 
            "funcName": "sub_48FE30"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_48FEA0@<rax>(unsigned int a1@<eax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  __int64 v4; // r12\n  int v5; // ebp\n  unsigned int v6; // er14\n  int v7; // er13\n  signed int v8; // ebx\n  __int64 v9; // r12\n  unsigned int v10; // ebx\n  _BOOL8 v11; // r13\n  unsigned __int64 v13; // [rsp-4h] [rbp-38h]\n  unsigned int v14; // [rsp+0h] [rbp-34h]\n\n  v13 = __PAIR__(a2, a1);\n  v4 = dword_94FA30[a3];\n  v5 = a4 + dword_94F9F0[a3];\n  v6 = a4 + dword_94FE90[a3];\n  v7 = dword_94F9D0[a3];\n  v8 = a4 + dword_94FE70[a3];\n  if ( (signed int)sub_430BC0(a4 + dword_94FE90[a3]) <= 0\n    && (signed int)sub_430BC0(a4 + v7) <= 0\n    && (signed int)sub_430BC0(v8) <= 0 )\n  {\n    LODWORD(v11) = 0;\n    return (unsigned int)v11;\n  }\n  v9 = (signed int)a4 + v4;\n  if ( dword_98A7F4 )\n  {\n    v10 = v5;\n    LODWORD(v11) = 0;\n    if ( (unsigned int)sub_43B050(v9, 0LL) )\n      return (unsigned int)v11;\n  }\n  else\n  {\n    v10 = v5;\n    LODWORD(v11) = 0;\n    if ( dword_8E94D4[95 * v9] )\n      return (unsigned int)v11;\n  }\n  LODWORD(v11) = 0;\n  if ( (unsigned int)sub_44B7B0(HIDWORD(v13), 1, 2, a4, v6, (unsigned int)v9, v13) )\n    v11 = (unsigned int)sub_44B7B0(v14, 1, 2, a4, v10, (unsigned int)v9) != 0;\n  return (unsigned int)v11;\n}\n", 
            "funcStartAddr": "0x48fea0L", 
            "funcEndAddr": "0x48ffaaL", 
            "funcName": "sub_48FEA0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_48FFB0(int a1, int a2)\n{\n  signed int v2; // ebp\n  signed int v3; // ebx\n  int v4; // er14\n  int v5; // ebp\n\n  v2 = a2 + dword_94FE90[a1];\n  v3 = dword_94FEB0[a1] + a2;\n  v4 = sub_430BC0(a2 + dword_94F9F0[a1]);\n  v5 = v4 + (unsigned __int64)sub_430BC0(v2);\n  return (signed int)(v5 + (unsigned __int64)sub_430BC0(v3)) > 3;\n}\n", 
            "funcStartAddr": "0x48ffb0L", 
            "funcEndAddr": "0x48fffeL", 
            "funcName": "sub_48FFB0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __usercall sub_490000@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  int v6; // ebp\n  __int64 v8; // [rsp+0h] [rbp-28h]\n\n  HIDWORD(v8) = HIDWORD(a1);\n  v4 = a2;\n  v5 = a4 + dword_94FEB0[a3];\n  v6 = a4 + dword_94FA30[a3];\n  if ( (signed int)sub_430BC0(a4 + dword_94FED0[a3]) <= 0 && (signed int)sub_430BC0(v5) <= 0 )\n    return 0LL;\n  LODWORD(v8) = v6;\n  return (unsigned int)sub_44B980(v4, 1, 2, a4, v5, v5, v8) != 0;\n}\n", 
            "funcStartAddr": "0x490000L", 
            "funcEndAddr": "0x49007aL", 
            "funcName": "sub_490000"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_490080(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  unsigned int v4; // er15\n  unsigned int v5; // ebx\n  int v6; // er12\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = a2 + dword_94F9F0[a1];\n  v5 = a2 + dword_94FEB0[a1];\n  v6 = dword_94FA30[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94FE90[a1]) <= 0 && (signed int)sub_430BC0(a2 + v6) <= 0 )\n    result = 0LL;\n  else\n    result = (unsigned int)sub_44B7B0(v3, 1, 2, a2, v4, v5) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x490080L", 
            "funcEndAddr": "0x4900ffL", 
            "funcName": "sub_490080"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_490100(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er14\n  int v4; // ebx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_94F9D0[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94FA30[a1]) <= 0 )\n    result = 0LL;\n  else\n    result = (unsigned int)sub_44BB60(v3, 0, 1, a2, a2, a2 + v4) == 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x490100L", 
            "funcEndAddr": "0x490155L", 
            "funcName": "sub_490100"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_490160(int a1, unsigned int a2, unsigned int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, double a8, double a9, __m128 a10, __m128 a11)\n{\n  unsigned int v11; // er14\n  unsigned int v12; // er12\n  unsigned int v13; // er15\n  int v14; // ebx\n  __int64 v15; // r8\n  __int64 v16; // r9\n  __m128 v17; // xmm4\n  __m128 v18; // xmm5\n  _BOOL8 v19; // rbx\n  char v21[56]; // [rsp+0h] [rbp-38h]\n  __int64 v22; // [rsp+0h] [rbp-38h]\n\n  v11 = a3;\n  v12 = a2 + dword_94FEB0[a1];\n  v13 = a2 + dword_94FA30[a1];\n  v14 = dword_94FED0[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94F550[a1]) <= 0 && (signed int)sub_430BC0(a2 + v14) <= 0 )\n  {\n    LODWORD(v19) = 0;\n  }\n  else\n  {\n    LODWORD(v19) = 1;\n    if ( (unsigned int)sub_44B230(3 - v11, 0, 1, v12, v15, v16, a4, a5, a6, a7, v17, v18, a10, a11, v21[0]) )\n    {\n      LODWORD(v22) = v13;\n      v19 = (unsigned int)sub_44B980(v11, 1, 2, a2, v13, v12, v22) != 0;\n    }\n  }\n  return (unsigned int)v19;\n}\n", 
            "funcStartAddr": "0x490160L", 
            "funcEndAddr": "0x49020cL", 
            "funcName": "sub_490160"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_490210(int a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // er15\n  unsigned int v4; // er12\n  __int64 v5; // r14\n  __int64 v6; // r13\n  int v7; // ebx\n  _BOOL8 v8; // rbx\n  unsigned int v10; // [rsp+0h] [rbp-34h]\n\n  v10 = a3;\n  v3 = a2 + dword_94F9F0[a1];\n  v4 = a2 + dword_94F550[a1];\n  v5 = a2 + dword_94F570[a1];\n  v6 = a2 + dword_94F530[a1];\n  v7 = dword_94F9D0[a1];\n  if ( (signed int)sub_430BC0(a2 + dword_94FA30[a1]) <= 0 && (signed int)sub_430BC0(a2 + v7) <= 0 )\n  {\n    LODWORD(v8) = 0;\n  }\n  else\n  {\n    LODWORD(v8) = 0;\n    if ( (unsigned int)sub_44B7B0(v10, 1, 4, a2, v3, v4, v6, v5) )\n      v8 = (unsigned int)sub_44B7B0(v10, 1, 4, a2, v3, v4, v6, v6) != 0;\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x490210L", 
            "funcEndAddr": "0x4902e8L", 
            "funcName": "sub_490210"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4902F0(int a1, int a2)\n{\n  int v2; // er15\n  int v3; // ebp\n  _BOOL4 v4; // er14\n  signed int v5; // eax\n\n  v2 = dword_94FED0[a1];\n  v3 = a2 + dword_94FE90[a1];\n  v4 = 0;\n  if ( (signed int)sub_4083A0(a2 + dword_950350[a1]) >= 2 && (signed int)sub_4083A0(a2 + v2) >= 2 )\n  {\n    v5 = sub_4083A0(v3);\n    v4 = v5 < 1;\n    LOBYTE(v4) = v5 > 1;\n  }\n  return (unsigned int)v4;\n}\n", 
            "funcStartAddr": "0x4902f0L", 
            "funcEndAddr": "0x490352L", 
            "funcName": "sub_4902F0"
        }, 
        {
            "decompiledFuncCode": "bool __fastcall sub_490380(int a1, int a2)\n{\n  int v2; // ebp\n  signed int v3; // ecx\n  bool result; // al\n\n  v2 = dword_94FEF0[a1];\n  v3 = sub_4083A0(a2 + dword_950370[a1]);\n  result = 0;\n  if ( v3 >= 2 )\n    result = (signed int)sub_4083A0(a2 + v2) > 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x490380L", 
            "funcEndAddr": "0x4903c0L", 
            "funcName": "sub_490380"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4903C0(int a1, signed int a2, unsigned int a3)\n{\n  unsigned int v3; // er15\n  unsigned int v4; // ebp\n  int v5; // ebx\n  __int64 v6; // r12\n  __int64 v7; // r14\n  __int64 v8; // rsi\n  int v9; // ecx\n  _BOOL8 result; // rax\n  int v11; // ecx\n  __int64 v12; // rsi\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a2 + dword_94F0B0[a1];\n  v6 = dword_94F550[a1];\n  v7 = a2;\n  if ( !(unsigned int)sub_407B30(a2, a3)\n    || (v8 = (unsigned __int8)byte_98A1B0[a2 + v6], v9 = sub_430570(v5), result = 1LL, v9 != 3) )\n  {\n    v11 = sub_407B30(v4, v3);\n    result = 0LL;\n    if ( !v11 )\n    {\n      v12 = (unsigned __int8)byte_98A1B0[v7 + v6];\n      result = (unsigned int)sub_430570(v5) == 2;\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x4903c0L", 
            "funcEndAddr": "0x490444L", 
            "funcName": "sub_4903C0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4905B0(int a1, int a2)\n{\n  int v2; // ebx\n  int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_94F570[a1] + a2;\n  v3 = sub_4083A0(v2);\n  result = 0LL;\n  if ( v3 == 1 )\n    result = (unsigned int)sub_469C10(v2) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x4905b0L", 
            "funcEndAddr": "0x4905dfL", 
            "funcName": "sub_4905B0"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4905E0(int a1, int a2)\n{\n  int v2; // ebx\n  int v3; // ecx\n  _BOOL8 result; // rax\n\n  v2 = dword_94F570[a1] + a2;\n  v3 = sub_4083A0(v2);\n  result = 0LL;\n  if ( v3 == 1 )\n    result = (unsigned int)sub_469C10(v2) != 0;\n  return result;\n}\n", 
            "funcStartAddr": "0x4905e0L", 
            "funcEndAddr": "0x49060fL", 
            "funcName": "sub_4905E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_490610(int a1, int a2, int a3)\n{\n  int v3; // er15\n  int v4; // ebx\n  _BOOL8 v5; // r14\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  LODWORD(v5) = 0;\n  if ( (unsigned int)sub_4083A0(v4) == 2 )\n  {\n    LODWORD(v5) = 0;\n    if ( (signed int)sub_4099C0(a2, v3, 20, 0LL) >= 2 )\n      v5 = (unsigned int)sub_469CB0(v4) != 0;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x490610L", 
            "funcEndAddr": "0x49066eL", 
            "funcName": "sub_490610"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_490670(int a1, int a2, int a3)\n{\n  int v3; // er15\n  int v4; // ebx\n  _BOOL8 v5; // r14\n\n  v3 = a3;\n  v4 = a2 + dword_94F570[a1];\n  LODWORD(v5) = 0;\n  if ( (unsigned int)sub_4083A0(v4) == 2 )\n  {\n    LODWORD(v5) = 0;\n    if ( (signed int)sub_4099C0(a2, v3, 20, 0LL) >= 2 )\n      v5 = (unsigned int)sub_469CB0(v4) != 0;\n  }\n  return (unsigned int)v5;\n}\n", 
            "funcStartAddr": "0x490670L", 
            "funcEndAddr": "0x4906ceL", 
            "funcName": "sub_490670"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_490730@<rax>(__int64 a1@<rax>, unsigned int a2@<edx>, int a3@<edi>, unsigned int a4@<esi>)\n{\n  unsigned int v4; // er14\n  unsigned int v5; // ebx\n  _BOOL4 v6; // ebp\n\n  v4 = a2;\n  v5 = a4 + dword_94F9F0[a3];\n  v6 = 0;\n  if ( (unsigned int)sub_44B7B0(3 - a2, 0, 1, a4, v5, a1) != 5 )\n    v6 = (unsigned __int64)sub_44B7B0(v4, 1, 1, a4, v5) == 0;\n  return (unsigned int)v6;\n}\n", 
            "funcStartAddr": "0x490730L", 
            "funcEndAddr": "0x49079fL", 
            "funcName": "sub_490730"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_490850(int a1, int a2, int a3)\n{\n  signed int v3; // esi\n  void *v4; // rdi\n\n  v3 = dword_950810[a1] + a2;\n  v4 = &unk_927B28;\n  if ( a3 == 2 )\n    v4 = &unk_9333A0;\n  return (unsigned int)sub_41A430((__int64)v4, v3) != 3 - a3;\n}\n", 
            "funcStartAddr": "0x490850L", 
            "funcEndAddr": "0x490883L", 
            "funcName": "sub_490850"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_490890(int a1, int a2, int a3)\n{\n  signed int v3; // esi\n  void *v4; // rdi\n\n  v3 = dword_94FE90[a1] + a2;\n  v4 = &unk_927B28;\n  if ( a3 == 2 )\n    v4 = &unk_9333A0;\n  return (unsigned int)sub_41A430((__int64)v4, v3) != a3;\n}\n", 
            "funcStartAddr": "0x490890L", 
            "funcEndAddr": "0x4908beL", 
            "funcName": "sub_490890"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4909C0(int a1, signed int a2, int a3)\n{\n  int v3; // ebx\n  int v4; // er14\n  void *v5; // rbp\n  int v6; // ecx\n  _BOOL8 result; // rax\n\n  v3 = a3;\n  v4 = dword_94FA30[a1];\n  v5 = &unk_927B28;\n  if ( a3 == 2 )\n    v5 = &unk_9333A0;\n  v6 = sub_41A340((__int64)v5, a2);\n  result = 0LL;\n  if ( v6 != v3 )\n    result = (unsigned int)sub_41A340((__int64)v5, a2 + v4) != v3;\n  return result;\n}\n", 
            "funcStartAddr": "0x4909c0L", 
            "funcEndAddr": "0x490a1aL", 
            "funcName": "sub_4909C0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_490AA0(int a1, int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11)\n{\n  __int64 v11; // ST10_8\n  __int64 v12; // ST08_8\n\n  v11 = (unsigned int)(dword_950790[a1] + a2);\n  v12 = (unsigned int)(a2 + dword_9502F0[a1]);\n  return sub_44B230(\n           3 - a3,\n           1,\n           6,\n           (unsigned int)(a2 + dword_94D4F0[a1]),\n           (unsigned int)(a2 + dword_94D510[a1]),\n           (unsigned int)(a2 + dword_9502D0[a1]),\n           a4,\n           a5,\n           a6,\n           a7,\n           a8,\n           a9,\n           a10,\n           a11,\n           (unsigned __int8)a2 + LOBYTE(dword_950770[a1]));\n}\n", 
            "funcStartAddr": "0x490aa0L", 
            "funcEndAddr": "0x490b0eL", 
            "funcName": "sub_490AA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_490CE0(int a1, int a2, int a3)\n{\n  int v3; // er15\n  signed int v4; // er13\n  signed int v5; // er12\n  int v6; // ebp\n  int v7; // eax\n  _BOOL8 v8; // r14\n  int v9; // eax\n  int v10; // ebp\n  void *v11; // rbx\n\n  v3 = a3;\n  v4 = a2 + dword_94F510[a1];\n  v5 = a2 + dword_94FE50[a1];\n  v6 = dword_950350[a1];\n  LOBYTE(v7) = sub_46A080(a2 + dword_94EC10[a1]);\n  LODWORD(v8) = 1;\n  if ( !v7 )\n  {\n    LOBYTE(v9) = sub_46A080(a2 + v6);\n    if ( !v9 )\n    {\n      v10 = 3 - v3;\n      v11 = &unk_927B28;\n      if ( v3 == 2 )\n        v11 = &unk_9333A0;\n      if ( (unsigned int)sub_41A430((__int64)v11, v4) == v10 )\n        v8 = (unsigned int)sub_41A430((__int64)v11, v5) != v10;\n    }\n  }\n  return (unsigned int)v8;\n}\n", 
            "funcStartAddr": "0x490ce0L", 
            "funcEndAddr": "0x490d83L", 
            "funcName": "sub_490CE0"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_490D90@<rax>(char a1@<al>, int a2@<edx>, int a3@<edi>, int a4@<esi>, __m128 a5@<xmm0>, __m128 a6@<xmm1>, __m128 a7@<xmm2>, __m128 a8@<xmm3>, __m128 a9@<xmm4>, __m128 a10@<xmm5>, __m128 a11@<xmm6>, __m128 a12@<xmm7>)\n{\n  int v12; // er14\n  int v13; // er15\n  int v14; // er12\n  _BOOL8 v15; // r13\n  __int64 v16; // ST10_8\n  __int64 v17; // ST08_8\n  __int64 v18; // r9\n  __m128 v19; // xmm4\n  __m128 v20; // xmm5\n  char v22; // [rsp-8h] [rbp-38h]\n\n  v22 = a1;\n  v12 = a2;\n  v13 = dword_9507D0[a3];\n  v14 = dword_9507F0[a3];\n  LODWORD(v15) = 0;\n  v16 = (unsigned int)(a4 + dword_951A70[a3]);\n  v17 = (unsigned int)(a4 + dword_9515D0[a3]);\n  if ( (unsigned int)sub_44B230(\n                       3 - a2,\n                       1,\n                       6,\n                       (unsigned int)(a4 + dword_951110[a3]),\n                       (unsigned int)(a4 + dword_9515B0[a3]),\n                       (unsigned int)(a4 + dword_951A50[a3]),\n                       a5,\n                       a6,\n                       a7,\n                       a8,\n                       a9,\n                       a10,\n                       a11,\n                       a12,\n                       (unsigned __int8)a4 + LOBYTE(dword_951130[a3])) )\n    v15 = (unsigned int)sub_44B230(\n                          v12,\n                          1,\n                          2,\n                          (unsigned int)(a4 + v13),\n                          (unsigned int)(a4 + v14),\n                          v18,\n                          a5,\n                          a6,\n                          a7,\n                          a8,\n                          v19,\n                          v20,\n                          a11,\n                          a12,\n                          v22) != 0;\n  return (unsigned int)v15;\n}\n", 
            "funcStartAddr": "0x490d90L", 
            "funcEndAddr": "0x490e5cL", 
            "funcName": "sub_490D90"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_490E60@<rax>(char a1@<al>, int a2@<edx>, int a3@<edi>, int a4@<esi>, __m128 a5@<xmm0>, __m128 a6@<xmm1>, __m128 a7@<xmm2>, __m128 a8@<xmm3>, __m128 a9@<xmm4>, __m128 a10@<xmm5>, __m128 a11@<xmm6>, __m128 a12@<xmm7>)\n{\n  int v12; // er14\n  int v13; // er15\n  int v14; // er12\n  _BOOL8 v15; // r13\n  __int64 v16; // ST10_8\n  __int64 v17; // ST08_8\n  __int64 v18; // r9\n  __m128 v19; // xmm4\n  __m128 v20; // xmm5\n  char v22; // [rsp-8h] [rbp-38h]\n\n  v22 = a1;\n  v12 = a2;\n  v13 = dword_9507D0[a3];\n  v14 = dword_9507F0[a3];\n  LODWORD(v15) = 0;\n  v16 = (unsigned int)(a4 + dword_951A70[a3]);\n  v17 = (unsigned int)(a4 + dword_9515D0[a3]);\n  if ( (unsigned int)sub_44B230(\n                       3 - a2,\n                       1,\n                       6,\n                       (unsigned int)(a4 + dword_951110[a3]),\n                       (unsigned int)(a4 + dword_9515B0[a3]),\n                       (unsigned int)(a4 + dword_951A50[a3]),\n                       a5,\n                       a6,\n                       a7,\n                       a8,\n                       a9,\n                       a10,\n                       a11,\n                       a12,\n                       (unsigned __int8)a4 + LOBYTE(dword_951130[a3])) )\n    v15 = (unsigned int)sub_44B230(\n                          v12,\n                          1,\n                          2,\n                          (unsigned int)(a4 + v13),\n                          (unsigned int)(a4 + v14),\n                          v18,\n                          a5,\n                          a6,\n                          a7,\n                          a8,\n                          v19,\n                          v20,\n                          a11,\n                          a12,\n                          v22) != 0;\n  return (unsigned int)v15;\n}\n", 
            "funcStartAddr": "0x490e60L", 
            "funcEndAddr": "0x490f2cL", 
            "funcName": "sub_490E60"
        }, 
        {
            "decompiledFuncCode": "__int64 __usercall sub_490F30@<rax>(char a1@<al>, int a2@<edx>, int a3@<edi>, int a4@<esi>, __m128 a5@<xmm0>, __m128 a6@<xmm1>, __m128 a7@<xmm2>, __m128 a8@<xmm3>, __m128 a9@<xmm4>, __m128 a10@<xmm5>, __m128 a11@<xmm6>, __m128 a12@<xmm7>)\n{\n  int v12; // er14\n  int v13; // er15\n  int v14; // er12\n  _BOOL8 v15; // r13\n  __int64 v16; // ST10_8\n  __int64 v17; // ST08_8\n  __int64 v18; // r9\n  __m128 v19; // xmm4\n  __m128 v20; // xmm5\n  char v22; // [rsp-8h] [rbp-38h]\n\n  v22 = a1;\n  v12 = dword_94F0B0[a3];\n  v13 = dword_94F0D0[a3];\n  v14 = 3 - a2;\n  LODWORD(v15) = 0;\n  v16 = (unsigned int)(a4 + dword_951A70[a3]);\n  v17 = (unsigned int)(a4 + dword_9515D0[a3]);\n  if ( (unsigned int)sub_44B230(\n                       3 - a2,\n                       1,\n                       6,\n                       (unsigned int)(a4 + dword_951110[a3]),\n                       (unsigned int)(a4 + dword_9515B0[a3]),\n                       (unsigned int)(a4 + dword_951A50[a3]),\n                       a5,\n                       a6,\n                       a7,\n                       a8,\n                       a9,\n                       a10,\n                       a11,\n                       a12,\n                       (unsigned __int8)a4 + LOBYTE(dword_951130[a3])) )\n    v15 = (unsigned int)sub_44B230(\n                          v14,\n                          1,\n                          2,\n                          (unsigned int)(a4 + v12),\n                          (unsigned int)(a4 + v13),\n                          v18,\n                          a5,\n                          a6,\n                          a7,\n                          a8,\n                          v19,\n                          v20,\n                          a11,\n                          a12,\n                          v22) != 0;\n  return (unsigned int)v15;\n}\n", 
            "funcStartAddr": "0x490f30L", 
            "funcEndAddr": "0x490ffdL", 
            "funcName": "sub_490F30"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_491030(int a1, int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11)\n{\n  int v11; // er13\n  int v12; // ST60_4\n  int v13; // ST58_4\n  int v14; // ST50_4\n  int v15; // ST48_4\n  int v16; // ST40_4\n  _BOOL8 v17; // rbp\n  __int64 v18; // ST28_8\n  __int64 v19; // ST20_8\n  __int64 v20; // ST18_8\n  __int64 v21; // ST10_8\n  __int64 v22; // ST08_8\n  __m128 v23; // xmm4\n  __m128 v24; // xmm5\n  int v26; // [rsp+4h] [rbp-74h]\n  int v27; // [rsp+8h] [rbp-70h]\n  int v28; // [rsp+Ch] [rbp-6Ch]\n  int v29; // [rsp+38h] [rbp-40h]\n\n  v28 = dword_950CB0[a1];\n  v27 = dword_951150[a1];\n  v11 = 3 - a3;\n  v26 = dword_9515F0[a1];\n  v29 = dword_950CD0[a1];\n  v12 = dword_951170[a1];\n  v13 = dword_951610[a1];\n  v14 = dword_950CF0[a1];\n  v15 = dword_951190[a1];\n  v16 = dword_951630[a1];\n  LODWORD(v17) = 0;\n  v18 = (unsigned int)(a2 + dword_94F4F0[a1]);\n  v19 = (unsigned int)(a2 + dword_94F050[a1]);\n  v20 = (unsigned int)(a2 + dword_94EBB0[a1]);\n  v21 = (unsigned int)(a2 + dword_94F4D0[a1]);\n  v22 = (unsigned int)(a2 + dword_94F030[a1]);\n  if ( (unsigned int)sub_44B230(\n                       3 - a3,\n                       1,\n                       9,\n                       (unsigned int)(a2 + dword_94EB70[a1]),\n                       (unsigned int)(a2 + dword_94F010[a1]),\n                       (unsigned int)(a2 + dword_94F4B0[a1]),\n                       a4,\n                       a5,\n                       a6,\n                       a7,\n                       a8,\n                       a9,\n                       a10,\n                       a11,\n                       (unsigned __int8)a2 + LOBYTE(dword_94EB90[a1])) )\n    v17 = (unsigned int)sub_44B230(\n                          v11,\n                          1,\n                          9,\n                          (unsigned int)(a2 + v28),\n                          (unsigned int)(a2 + v27),\n                          (unsigned int)(a2 + v26),\n                          a4,\n                          a5,\n                          a6,\n                          a7,\n                          v23,\n                          v24,\n                          a10,\n                          a11,\n                          (unsigned __int8)a2 + (unsigned __int8)v29) != 0;\n  return (unsigned int)v17;\n}\n", 
            "funcStartAddr": "0x491030L", 
            "funcEndAddr": "0x4911ccL", 
            "funcName": "sub_491030"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_491220(int a1, int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11)\n{\n  __int64 v11; // ST10_8\n  __int64 v12; // ST08_8\n\n  v11 = (unsigned int)(dword_951150[a1] + a2);\n  v12 = (unsigned int)(a2 + dword_950CB0[a1]);\n  return sub_44B230(\n           3 - a3,\n           1,\n           6,\n           (unsigned int)(a2 + dword_9507F0[a1]),\n           (unsigned int)(a2 + dword_950C90[a1]),\n           (unsigned int)(a2 + dword_951130[a1]),\n           a4,\n           a5,\n           a6,\n           a7,\n           a8,\n           a9,\n           a10,\n           a11,\n           (unsigned __int8)a2 + LOBYTE(dword_950810[a1]));\n}\n", 
            "funcStartAddr": "0x491220L", 
            "funcEndAddr": "0x49128eL", 
            "funcName": "sub_491220"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_491360(int a1, signed int a2, int a3, int a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __m128 a12)\n{\n  unsigned int v12; // ebx\n  int v13; // er14\n  signed __int64 result; // rax\n  __int64 v15; // ST20_8\n  __int64 v16; // ST18_8\n  __int64 v17; // ST10_8\n  __int64 v18; // ST08_8\n\n  v12 = a2 + dword_950850[a1];\n  v13 = a2 + dword_950CF0[a1];\n  if ( a4 )\n  {\n    sub_422B80(v12, a2);\n    sub_422B80(v13, a2);\n    result = 0LL;\n  }\n  else\n  {\n    v15 = (unsigned int)(a2 + dword_950D10[a1]);\n    v16 = (unsigned int)(a2 + dword_950870[a1]);\n    v17 = (unsigned int)(a2 + dword_9503D0[a1]);\n    v18 = (unsigned int)(a2 + dword_94FF30[a1]);\n    result = sub_44B230(\n               3 - a3,\n               1,\n               8,\n               (unsigned int)(dword_94FF10[a1] + a2),\n               (unsigned int)(a2 + dword_9503B0[a1]),\n               v12,\n               a5,\n               a6,\n               a7,\n               a8,\n               a9,\n               a10,\n               a11,\n               a12,\n               v13);\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x491360L", 
            "funcEndAddr": "0x491415L", 
            "funcName": "sub_491360"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_491420(int a1, int a2, int a3)\n{\n  int v3; // ebx\n  int v4; // er15\n  signed int v5; // esi\n  int v6; // er12\n  __int64 v7; // r14\n  void *v8; // rbp\n  int v9; // ecx\n  _BOOL8 result; // rax\n  __int64 v11; // r14\n  int v12; // ecx\n\n  v3 = a3;\n  v4 = a2;\n  v5 = a2 + dword_950330[a1];\n  v6 = dword_9507D0[a1];\n  v7 = dword_94F0F0[a1];\n  v8 = &unk_927B28;\n  if ( a3 == 2 )\n    v8 = &unk_9333A0;\n  if ( (unsigned int)sub_41A430((__int64)v8, v5) != a3\n    || (v9 = sub_41A430((__int64)v8, v4 + v6), result = 0LL, v9 != v3) )\n  {\n    v11 = v4 + v7;\n    if ( dword_98A7F4 )\n      v12 = sub_43B050(v11, 0LL);\n    else\n      v12 = dword_8E94D4[95 * v11];\n    result = v12 == 0;\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x491420L", 
            "funcEndAddr": "0x4914b7L", 
            "funcName": "sub_491420"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_491680(int a1, int a2, int a3)\n{\n  signed int v3; // esi\n  void *v4; // rdi\n\n  v3 = dword_94FEF0[a1] + a2;\n  v4 = &unk_927B28;\n  if ( a3 == 2 )\n    v4 = &unk_9333A0;\n  return (unsigned int)sub_41A430((__int64)v4, v3) == a3;\n}\n", 
            "funcStartAddr": "0x491680L", 
            "funcEndAddr": "0x4916aeL", 
            "funcName": "sub_491680"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4916B0(int a1, int a2)\n{\n  __int64 v2; // rax\n  __int64 v3; // rbx\n  int v4; // eax\n  _BOOL8 result; // rax\n\n  v2 = dword_94FA70[a1];\n  v3 = v2 + a2;\n  LOBYTE(v4) = sub_46A080(v2 + a2);\n  if ( v4 )\n    result = dword_954FF0[19 * v3] == 0;\n  else\n    result = 1LL;\n  return result;\n}\n", 
            "funcStartAddr": "0x4916b0L", 
            "funcEndAddr": "0x4916e6L", 
            "funcName": "sub_4916B0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_491F30(int a1, int a2, int a3)\n{\n  __int64 v3; // r10\n\n  v3 = (unsigned int)(dword_9503B0[a1] + a2);\n  return sub_44B7B0(\n           3 - a3,\n           1,\n           13,\n           (unsigned int)(a2 + dword_9507D0[a1]),\n           (unsigned int)(a2 + dword_950C90[a1]),\n           (unsigned int)(a2 + dword_9507B0[a1]),\n           (unsigned int)(a2 + dword_950CB0[a1]),\n           (unsigned int)(a2 + dword_950830[a1]),\n           (unsigned int)(a2 + dword_950CD0[a1]),\n           (unsigned int)(a2 + dword_94F9F0[a1]),\n           (unsigned int)(a2 + dword_94FED0[a1]),\n           (unsigned int)(a2 + dword_950370[a1]),\n           (unsigned int)(a2 + dword_950850[a1]),\n           (unsigned int)(a2 + dword_950390[a1]),\n           (unsigned int)(a2 + dword_94FEF0[a1]),\n           v3,\n           v3);\n}\n", 
            "funcStartAddr": "0x491f30L", 
            "funcEndAddr": "0x49201bL", 
            "funcName": "sub_491F30"
        }, 
        {
            "decompiledFuncCode": "_BOOL8 __fastcall sub_4920D0(int a1, int a2, int a3)\n{\n  signed int v3; // esi\n  void *v4; // rdi\n\n  v3 = dword_94F0D0[a1] + a2;\n  v4 = &unk_927B28;\n  if ( a3 == 2 )\n    v4 = &unk_9333A0;\n  return (unsigned int)sub_41A570((__int64)v4, v3) != 3 - a3;\n}\n", 
            "funcStartAddr": "0x4920d0L", 
            "funcEndAddr": "0x492103L", 
            "funcName": "sub_4920D0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_492180(int a1, int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __int64 a12, __int64 a13, __int64 a14)\n{\n  int v14; // er14\n  int v15; // er15\n  int v16; // er12\n  _BOOL8 v17; // rbx\n  __int64 v18; // r9\n  __m128 v19; // xmm4\n  __m128 v20; // xmm5\n  char v22; // [rsp+0h] [rbp-28h]\n  char v23; // [rsp+0h] [rbp-28h]\n\n  v14 = a3;\n  v15 = dword_94D9D0[a1];\n  v16 = dword_94DE70[a1];\n  LODWORD(v17) = 0;\n  if ( (unsigned int)sub_44B230(\n                       a3,\n                       0,\n                       2,\n                       (unsigned int)(a2 + dword_94D990[a1]),\n                       (unsigned int)(a2 + dword_94DE30[a1]),\n                       a14,\n                       a4,\n                       a5,\n                       a6,\n                       a7,\n                       a8,\n                       a9,\n                       a10,\n                       a11,\n                       v22) )\n    v17 = (unsigned int)sub_44B230(\n                          v14,\n                          0,\n                          2,\n                          (unsigned int)(a2 + v15),\n                          (unsigned int)(a2 + v16),\n                          v18,\n                          a4,\n                          a5,\n                          a6,\n                          a7,\n                          v19,\n                          v20,\n                          a10,\n                          a11,\n                          v23) != 0;\n  return (unsigned int)v17;\n}\n", 
            "funcStartAddr": "0x492180L", 
            "funcEndAddr": "0x492200L", 
            "funcName": "sub_492180"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_492200(int a1, int a2, int a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __int64 a12, __int64 a13, __int64 a14)\n{\n  int v14; // er14\n  int v15; // er15\n  int v16; // er12\n  _BOOL8 v17; // rbx\n  __int64 v18; // r9\n  __m128 v19; // xmm4\n  __m128 v20; // xmm5\n  char v22; // [rsp+0h] [rbp-28h]\n  char v23; // [rsp+0h] [rbp-28h]\n\n  v14 = a3;\n  v15 = dword_94D9B0[a1];\n  v16 = dword_94DE50[a1];\n  LODWORD(v17) = 0;\n  if ( (unsigned int)sub_44B230(\n                       a3,\n                       0,\n                       2,\n                       (unsigned int)(a2 + dword_94D970[a1]),\n                       (unsigned int)(a2 + dword_94DE10[a1]),\n                       a14,\n                       a4,\n                       a5,\n                       a6,\n                       a7,\n                       a8,\n                       a9,\n                       a10,\n                       a11,\n                       v22) )\n    v17 = (unsigned int)sub_44B230(\n                          v14,\n                          0,\n                          2,\n                          (unsigned int)(a2 + v15),\n                          (unsigned int)(a2 + v16),\n                          v18,\n                          a4,\n                          a5,\n                          a6,\n                          a7,\n                          v19,\n                          v20,\n                          a10,\n                          a11,\n                          v23) != 0;\n  return (unsigned int)v17;\n}\n", 
            "funcStartAddr": "0x492200L", 
            "funcEndAddr": "0x492280L", 
            "funcName": "sub_492200"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_492380(signed int a1, __int64 *a2, const char *a3, const char **a4, signed int *a5, int a6)\n{\n  int v6; // ebx\n  const char **v7; // r15\n  const char *v8; // r13\n  __int64 *v9; // r14\n  signed int v10; // ebp\n  signed __int64 v11; // r12\n  char *v12; // r8\n  char *v13; // rax\n  int v14; // ecx\n  char *i; // r15\n  const char **v16; // rbx\n  const char *v17; // rbp\n  size_t v18; // r12\n  signed int v19; // er14\n  char *v20; // r13\n  const char **v21; // rax\n  bool v22; // zf\n  signed int v23; // ecx\n  signed int v24; // eax\n  int v25; // ebp\n  char *v26; // rax\n  signed int v27; // er15\n  int v28; // edx\n  int v29; // esi\n  unsigned __int64 v30; // rcx\n  int v31; // er10\n  int v32; // er11\n  unsigned int v33; // er13\n  unsigned int v34; // eax\n  __int64 v35; // r9\n  __int64 v36; // rdx\n  signed __int64 v37; // r13\n  signed __int64 v38; // rdi\n  __int64 v39; // r8\n  signed __int64 v40; // rdx\n  size_t v41; // rax\n  signed __int64 v42; // rsi\n  __int64 v43; // rdi\n  __int64 v44; // rbp\n  __int64 v45; // rbp\n  signed __int64 v46; // r9\n  signed __int64 v47; // rdi\n  __int64 v48; // r8\n  signed __int64 v49; // rsi\n  signed __int64 v50; // rax\n  size_t v51; // rdi\n  __int64 v52; // rbp\n  __int64 v53; // rbx\n  __int64 v54; // rdx\n  unsigned __int64 v55; // rdi\n  __int64 v56; // rsi\n  signed __int64 v57; // rbp\n  signed __int64 v58; // r9\n  signed __int64 v59; // rax\n  __int64 v60; // r8\n  __int128 v61; // xmm0\n  __int128 v62; // xmm1\n  __int128 v63; // xmm3\n  __int128 v64; // xmm0\n  __int128 v65; // xmm1\n  __int128 v66; // xmm3\n  unsigned __int64 v67; // rbp\n  __int64 v68; // r14\n  signed __int64 v69; // rax\n  signed __int64 v70; // rdi\n  __int64 v71; // rbp\n  __int128 v72; // xmm0\n  __int128 v73; // xmm1\n  __int128 v74; // xmm3\n  __int128 v75; // xmm0\n  __int128 v76; // xmm1\n  __int128 v77; // xmm3\n  __int64 v78; // rax\n  __int128 v79; // xmm0\n  __int128 v80; // xmm1\n  __int64 v81; // r8\n  __int128 v82; // xmm3\n  __int64 v83; // rax\n  __int128 v84; // xmm0\n  __int128 v85; // xmm1\n  __int64 v86; // rbp\n  __int128 v87; // xmm3\n  int *v88; // rax\n  _BYTE *v89; // rcx\n  char *v90; // rax\n  char v91; // cl\n  signed __int64 v92; // rax\n  bool v93; // cl\n  int v94; // ecx\n  unsigned __int64 v95; // rdx\n  signed int v96; // er10\n  int v97; // er11\n  unsigned int v98; // er9\n  unsigned int v99; // eax\n  __int64 v100; // rcx\n  signed __int64 v101; // rax\n  signed __int64 v102; // rdi\n  __int64 v103; // r8\n  signed __int64 v104; // rcx\n  size_t v105; // rax\n  size_t v106; // rsi\n  __int64 v107; // rdi\n  __int64 v108; // rbp\n  __int64 v109; // rbp\n  signed __int64 v110; // r13\n  signed __int64 v111; // rdi\n  __int64 v112; // r8\n  signed __int64 v113; // rax\n  signed __int64 v114; // rsi\n  size_t v115; // rdi\n  __int64 v116; // rbp\n  __int64 v117; // rbx\n  __int64 v118; // rcx\n  unsigned __int64 v119; // rsi\n  __int64 v120; // r14\n  signed __int64 v121; // rbx\n  signed __int64 v122; // r8\n  signed __int64 v123; // rdi\n  __int64 v124; // rbp\n  __int128 v125; // xmm0\n  __int128 v126; // xmm1\n  __int128 v127; // xmm3\n  __int128 v128; // xmm0\n  __int128 v129; // xmm1\n  __int128 v130; // xmm3\n  unsigned __int64 v131; // rbp\n  __int64 v132; // r14\n  signed __int64 v133; // rdi\n  signed __int64 v134; // rsi\n  __int64 v135; // rbp\n  __int128 v136; // xmm0\n  __int128 v137; // xmm1\n  __int128 v138; // xmm3\n  __int128 v139; // xmm0\n  __int128 v140; // xmm1\n  __int128 v141; // xmm3\n  __int64 v142; // rsi\n  __int128 v143; // xmm0\n  __int128 v144; // xmm1\n  __int64 v145; // rbp\n  __int128 v146; // xmm3\n  __int64 v147; // rsi\n  __int128 v148; // xmm0\n  __int128 v149; // xmm1\n  __int64 v150; // rbp\n  __int128 v151; // xmm3\n  int *v152; // rax\n  unsigned int v153; // er13\n  const char **v155; // rbp\n  int v156; // edx\n  int v157; // eax\n  int v158; // ecx\n  char *v159; // rax\n  char v160; // bp\n  char *v161; // rbx\n  char *v162; // rax\n  char v163; // bp\n  char *v164; // ST08_8\n  char *v165; // ST20_8\n  char *v166; // rax\n  char *v167; // rbp\n  const char *v168; // rdi\n  char *v169; // rbx\n  char *v170; // rax\n  char v171; // cl\n  const char **v172; // r13\n  int v173; // er12\n  char v174; // al\n  int v175; // eax\n  bool v176; // zf\n  unsigned int *v177; // rax\n  const char **v178; // rbx\n  char *v179; // rbp\n  char *j; // r14\n  char v181; // r15\n  const char *v182; // rbp\n  signed int v183; // ebx\n  const char **v184; // rax\n  bool v185; // zf\n  signed int v186; // ecx\n  int v187; // eax\n  const char *v188; // rbx\n  signed int v189; // ebp\n  int v190; // eax\n  const char *v191; // rbx\n  const char *v192; // rsi\n  __int64 v193; // rdx\n  __int64 v194; // rdx\n  signed int s2; // [rsp+8h] [rbp-90h]\n  int s2a; // [rsp+8h] [rbp-90h]\n  signed int s2b; // [rsp+8h] [rbp-90h]\n  char *s2c; // [rsp+8h] [rbp-90h]\n  int v199; // [rsp+14h] [rbp-84h]\n  __int64 *v200; // [rsp+18h] [rbp-80h]\n  char *v201; // [rsp+20h] [rbp-78h]\n  signed __int64 v202; // [rsp+20h] [rbp-78h]\n  signed int v203; // [rsp+20h] [rbp-78h]\n  const char *v204; // [rsp+28h] [rbp-70h]\n  const char *v205; // [rsp+28h] [rbp-70h]\n  signed __int64 v206; // [rsp+28h] [rbp-70h]\n  const char **v207; // [rsp+30h] [rbp-68h]\n  signed int v208; // [rsp+30h] [rbp-68h]\n  signed int n; // [rsp+38h] [rbp-60h]\n  size_t na; // [rsp+38h] [rbp-60h]\n  size_t nb; // [rsp+38h] [rbp-60h]\n  int v212; // [rsp+40h] [rbp-58h]\n  int v213; // [rsp+40h] [rbp-58h]\n  int v214; // [rsp+48h] [rbp-50h]\n  const char **v215; // [rsp+48h] [rbp-50h]\n  const char **v216; // [rsp+50h] [rbp-48h]\n  int v217; // [rsp+50h] [rbp-48h]\n  char v218; // [rsp+5Ch] [rbp-3Ch]\n  signed int *v219; // [rsp+60h] [rbp-38h]\n\n  v6 = a6;\n  v219 = a5;\n  v7 = a4;\n  v8 = a3;\n  v9 = a2;\n  v10 = a1;\n  nptr = 0LL;\n  LODWORD(v11) = dword_751E88;\n  v200 = a2;\n  v199 = a1;\n  v216 = a4;\n  v214 = a6;\n  if ( !dword_751E88 || !dword_98A750 )\n  {\n    if ( !dword_751E88 )\n    {\n      dword_751E88 = 1;\n      LODWORD(v11) = 1;\n    }\n    dword_8B22A8 = v11;\n    dword_8B22AC = v11;\n    qword_8B22A0 = 0LL;\n    v26 = getenv(\"POSIXLY_CORRECT\");\n    qword_8B22B8 = (__int64)v26;\n    if ( *v8 == 43 )\n    {\n      dword_8B22B0 = 0;\n    }\n    else\n    {\n      if ( *v8 != 45 )\n      {\n        dword_8B22B0 = v26 == 0LL;\n        goto LABEL_37;\n      }\n      dword_8B22B0 = 2;\n    }\n    ++v8;\nLABEL_37:\n    dword_98A750 = 1;\n    goto LABEL_38;\n  }\n  v12 = qword_8B22A0;\n  if ( !qword_8B22A0 || !*qword_8B22A0 )\n  {\nLABEL_38:\n    v27 = dword_8B22A8;\n    if ( dword_8B22A8 > (signed int)v11 )\n    {\n      dword_8B22A8 = v11;\n      v27 = v11;\n    }\n    v28 = dword_8B22AC;\n    if ( dword_8B22AC > (signed int)v11 )\n    {\n      dword_8B22AC = v11;\n      v28 = v11;\n    }\n    v29 = dword_8B22B0;\n    if ( dword_8B22B0 != 1 )\n    {\nLABEL_102:\n      if ( (_DWORD)v11 == v10 )\n        goto LABEL_165;\n      s2b = v28;\n      if ( strcmp((const char *)v9[(signed int)v11], \"--\") )\n      {\n        v28 = s2b;\n        if ( (_DWORD)v11 != v10 )\n        {\n          v90 = (char *)v9[(signed int)v11];\n          if ( *v90 != 45 || (v91 = v90[1]) == 0 )\n          {\n            if ( v29 )\n            {\n              dword_751E88 = v11 + 1;\n              nptr = v90;\n              v153 = 1;\n            }\n            else\n            {\n              v153 = -1;\n            }\n            return v153;\n          }\n          v92 = (signed __int64)(v90 + 1);\n          v7 = v216;\n          v93 = v216 != 0LL && v91 == 45;\n          v12 = (char *)(v92 + v93);\n          qword_8B22A0 = (char *)(v92 + v93);\n          v6 = v214;\n          if ( !v216 )\n            goto LABEL_181;\n          goto LABEL_6;\n        }\nLABEL_165:\n        v153 = -1;\n        if ( v28 != v27 )\n          dword_751E88 = v28;\n        return v153;\n      }\n      v94 = v11 + 1;\n      dword_751E88 = v11 + 1;\n      v28 = s2b;\n      if ( s2b == v27 || v27 == v94 )\n      {\n        if ( s2b != v27 )\n        {\nLABEL_164:\n          dword_8B22A8 = v10;\n          dword_751E88 = v10;\n          v27 = v10;\n          goto LABEL_165;\n        }\n        v152 = &dword_8B22AC;\n        v28 = v11 + 1;\n      }\n      else\n      {\n        v217 = v11 + 1;\n        if ( (signed int)v11 >= v27 && s2b < v27 )\n        {\n          v95 = (unsigned __int64)&v9[v27];\n          v206 = (signed __int64)(v9 + 6);\n          nb = (size_t)(v9 + 1);\n          v96 = s2b;\n          v97 = v11 + 1;\n          while ( 1 )\n          {\n            v98 = v97 - v27;\n            v99 = v27 - v96;\n            if ( v97 - v27 <= v27 - v96 )\n              break;\n            v97 -= v99;\n            if ( (signed int)v99 <= 0 )\n              goto LABEL_156;\n            v100 = v99;\n            if ( v99 >= 4\n              && (&v9[v96] >= &v9[v99 + (signed __int64)v97] || &v9[v97] >= &v9[v96 + (unsigned __int64)v99]) )\n            {\n              v101 = v99 & 0xFFFFFFFC;\n              v119 = (unsigned __int64)(v101 - 4) >> 2;\n              v120 = ((_BYTE)v119 + 1) & 1;\n              if ( v101 == 4 )\n              {\n                v124 = 0LL;\n              }\n              else\n              {\n                v121 = v206 + 8LL * v96;\n                v122 = v206 + 8LL * v97;\n                v123 = v120 - 1 - v119;\n                v124 = 0LL;\n                do\n                {\n                  v125 = *(_OWORD *)(v121 + 8 * v124 - 48);\n                  v126 = *(_OWORD *)(v121 + 8 * v124 - 32);\n                  v127 = *(_OWORD *)(v122 + 8 * v124 - 32);\n                  *(_OWORD *)(v121 + 8 * v124 - 48) = *(_OWORD *)(v122 + 8 * v124 - 48);\n                  *(_OWORD *)(v121 + 8 * v124 - 32) = v127;\n                  *(_OWORD *)(v122 + 8 * v124 - 48) = v125;\n                  *(_OWORD *)(v122 + 8 * v124 - 32) = v126;\n                  v128 = *(_OWORD *)(v121 + 8 * v124 - 16);\n                  v129 = *(_OWORD *)(v121 + 8 * v124);\n                  v130 = *(_OWORD *)(v122 + 8 * v124);\n                  *(_OWORD *)(v121 + 8 * v124 - 16) = *(_OWORD *)(v122 + 8 * v124 - 16);\n                  *(_OWORD *)(v121 + 8 * v124) = v130;\n                  *(_OWORD *)(v122 + 8 * v124 - 16) = v128;\n                  *(_OWORD *)(v122 + 8 * v124) = v129;\n                  v124 += 8LL;\n                  v123 += 2LL;\n                }\n                while ( v123 );\n              }\n              v22 = v120 == 0;\n              v9 = v200;\n              if ( !v22 )\n              {\n                v142 = v96 + v124;\n                v143 = *(_OWORD *)&v200[v142];\n                v144 = *(_OWORD *)&v200[v142 + 2];\n                v145 = v97 + v124;\n                v146 = *(_OWORD *)&v200[v145 + 2];\n                *(_OWORD *)&v200[v142] = *(_OWORD *)&v200[v145];\n                *(_OWORD *)&v200[v142 + 2] = v146;\n                *(_OWORD *)&v200[v145] = v143;\n                *(_OWORD *)&v200[v145 + 2] = v144;\n              }\n              if ( v101 == v100 )\n                goto LABEL_155;\n            }\n            else\n            {\n              v101 = 0LL;\n            }\n            v102 = v101;\n            if ( v100 & 1 )\n            {\n              v103 = v9[v101 + v96];\n              v9[v101 + v96] = v9[v101 + v97];\n              v9[v101 + v97] = v103;\n              v102 = v101 | 1;\n            }\n            if ( v100 - 1 != v101 )\n            {\n              v104 = v100 - v102;\n              v105 = nb + 8 * (v102 + v97);\n              v106 = nb + 8 * (v102 + v96);\n              v107 = 0LL;\n              do\n              {\n                v108 = *(_QWORD *)(v106 + 8 * v107 - 8);\n                *(_QWORD *)(v106 + 8 * v107 - 8) = *(_QWORD *)(v105 + 8 * v107 - 8);\n                *(_QWORD *)(v105 + 8 * v107 - 8) = v108;\n                v109 = *(_QWORD *)(v106 + 8 * v107);\n                *(_QWORD *)(v106 + 8 * v107) = *(_QWORD *)(v105 + 8 * v107);\n                *(_QWORD *)(v105 + 8 * v107) = v109;\n                v107 += 2LL;\n              }\n              while ( v104 != v107 );\n            }\nLABEL_155:\n            v10 = v199;\nLABEL_156:\n            if ( v97 <= v27 || v27 <= v96 )\n              goto LABEL_158;\n          }\n          if ( (signed int)v98 > 0 )\n          {\n            if ( v98 >= 4\n              && ((unsigned __int64)&v9[v96] >= v95 + 8LL * v98\n               || v95 >= (unsigned __int64)&v9[v96 + (unsigned __int64)v98]) )\n            {\n              v110 = v98 & 0xFFFFFFFC;\n              v131 = (unsigned __int64)(v110 - 4) >> 2;\n              v132 = ((_BYTE)v131 + 1) & 1;\n              if ( v110 == 4 )\n              {\n                v135 = 0LL;\n              }\n              else\n              {\n                v133 = v206 + 8LL * v96;\n                v134 = v132 - 1 - v131;\n                v135 = 0LL;\n                do\n                {\n                  v136 = *(_OWORD *)(v133 + 8 * v135 - 48);\n                  v137 = *(_OWORD *)(v133 + 8 * v135 - 32);\n                  v138 = *(_OWORD *)(v95 + 8 * v135 + 16);\n                  *(_OWORD *)(v133 + 8 * v135 - 48) = *(_OWORD *)(v95 + 8 * v135);\n                  *(_OWORD *)(v133 + 8 * v135 - 32) = v138;\n                  *(_OWORD *)(v95 + 8 * v135) = v136;\n                  *(_OWORD *)(v95 + 8 * v135 + 16) = v137;\n                  v139 = *(_OWORD *)(v133 + 8 * v135 - 16);\n                  v140 = *(_OWORD *)(v133 + 8 * v135);\n                  v141 = *(_OWORD *)(v95 + 8 * v135 + 48);\n                  *(_OWORD *)(v133 + 8 * v135 - 16) = *(_OWORD *)(v95 + 8 * v135 + 32);\n                  *(_OWORD *)(v133 + 8 * v135) = v141;\n                  *(_OWORD *)(v95 + 8 * v135 + 32) = v139;\n                  *(_OWORD *)(v95 + 8 * v135 + 48) = v140;\n                  v135 += 8LL;\n                  v134 += 2LL;\n                }\n                while ( v134 );\n              }\n              v22 = v132 == 0;\n              v9 = v200;\n              if ( !v22 )\n              {\n                v147 = v96 + v135;\n                v148 = *(_OWORD *)&v200[v147];\n                v149 = *(_OWORD *)&v200[v147 + 2];\n                v150 = v27 + v135;\n                v151 = *(_OWORD *)&v200[v150 + 2];\n                *(_OWORD *)&v200[v147] = *(_OWORD *)&v200[v150];\n                *(_OWORD *)&v200[v147 + 2] = v151;\n                *(_OWORD *)&v200[v150] = v148;\n                *(_OWORD *)&v200[v150 + 2] = v149;\n              }\n              if ( v110 == v98 )\n                goto LABEL_154;\n            }\n            else\n            {\n              v110 = 0LL;\n            }\n            v111 = v110;\n            if ( v98 & 1 )\n            {\n              v112 = v9[v96 + v110];\n              v9[v96 + v110] = v9[v27 + v110];\n              v9[v27 + v110] = v112;\n              v111 = v110 | 1;\n            }\n            if ( v98 - 1LL != v110 )\n            {\n              v113 = v98 - v111;\n              v114 = v95 + 8 * v111 + 8;\n              v115 = nb + 8 * (v111 + v96);\n              v116 = 0LL;\n              do\n              {\n                v117 = *(_QWORD *)(v115 + 8 * v116 - 8);\n                *(_QWORD *)(v115 + 8 * v116 - 8) = *(_QWORD *)(v114 + 8 * v116 - 8);\n                *(_QWORD *)(v114 + 8 * v116 - 8) = v117;\n                v118 = *(_QWORD *)(v115 + 8 * v116);\n                *(_QWORD *)(v115 + 8 * v116) = *(_QWORD *)(v114 + 8 * v116);\n                *(_QWORD *)(v114 + 8 * v116) = v118;\n                v116 += 2LL;\n              }\n              while ( v113 != v116 );\n            }\n          }\nLABEL_154:\n          v96 += v98;\n          goto LABEL_155;\n        }\nLABEL_158:\n        v94 = v11 + 1;\n        v28 = v217 + s2b - v27;\n        dword_8B22AC = v217 + s2b - v27;\n        v152 = &dword_8B22A8;\n      }\n      *v152 = v94;\n      goto LABEL_164;\n    }\n    if ( v28 == v27 || v27 == (_DWORD)v11 )\n    {\n      if ( v27 == (_DWORD)v11 )\n      {\nLABEL_96:\n        if ( (signed int)v11 < v10 )\n        {\n          v11 = (signed int)v11;\n          do\n          {\n            v89 = (_BYTE *)v9[v11];\n            if ( *v89 == 45 && v89[1] )\n              break;\n            dword_751E88 = ++v11;\n          }\n          while ( v11 < v10 );\n        }\n        dword_8B22A8 = v11;\n        v27 = v11;\n        goto LABEL_102;\n      }\n      v88 = &dword_8B22AC;\n      v28 = v11;\n    }\n    else\n    {\n      v213 = dword_8B22B0;\n      s2a = v28;\n      v205 = v8;\n      if ( (signed int)v11 > v27 && v28 < v27 )\n      {\n        v30 = (unsigned __int64)&v9[v27];\n        v202 = (signed __int64)(v9 + 6);\n        na = (size_t)(v9 + 1);\n        v31 = v28;\n        v32 = v11;\n        while ( 1 )\n        {\n          v33 = v32 - v27;\n          v34 = v27 - v31;\n          if ( v32 - v27 <= v27 - v31 )\n            break;\n          v32 -= v34;\n          if ( (signed int)v34 > 0 )\n          {\n            v35 = v31;\n            v36 = v34;\n            if ( v34 < 4\n              || &v200[v31] < &v200[v32 + (unsigned __int64)v34] && &v200[v32] < &v200[v31 + (unsigned __int64)v34] )\n            {\n              v37 = 0LL;\n              goto LABEL_54;\n            }\n            v37 = v34 & 0xFFFFFFFC;\n            v55 = (unsigned __int64)(v37 - 4) >> 2;\n            if ( v37 == 4 )\n            {\n              v56 = v31;\n              v60 = 0LL;\n            }\n            else\n            {\n              v56 = v31;\n              v57 = v202 + 8LL * v31;\n              v58 = v202 + 8LL * v32;\n              v59 = (((_BYTE)v55 + 1) & 1) - 1LL - v55;\n              v60 = 0LL;\n              do\n              {\n                v61 = *(_OWORD *)(v57 + 8 * v60 - 48);\n                v62 = *(_OWORD *)(v57 + 8 * v60 - 32);\n                v63 = *(_OWORD *)(v58 + 8 * v60 - 32);\n                *(_OWORD *)(v57 + 8 * v60 - 48) = *(_OWORD *)(v58 + 8 * v60 - 48);\n                *(_OWORD *)(v57 + 8 * v60 - 32) = v63;\n                *(_OWORD *)(v58 + 8 * v60 - 48) = v61;\n                *(_OWORD *)(v58 + 8 * v60 - 32) = v62;\n                v64 = *(_OWORD *)(v57 + 8 * v60 - 16);\n                v65 = *(_OWORD *)(v57 + 8 * v60);\n                v66 = *(_OWORD *)(v58 + 8 * v60);\n                *(_OWORD *)(v57 + 8 * v60 - 16) = *(_OWORD *)(v58 + 8 * v60 - 16);\n                *(_OWORD *)(v57 + 8 * v60) = v66;\n                *(_OWORD *)(v58 + 8 * v60 - 16) = v64;\n                *(_OWORD *)(v58 + 8 * v60) = v65;\n                v60 += 8LL;\n                v59 += 2LL;\n              }\n              while ( v59 );\n            }\n            v35 = v56;\n            if ( ((_BYTE)v55 + 1) & 1 )\n            {\n              v78 = v60 + v56;\n              v79 = *(_OWORD *)&v200[v60 + v56];\n              v80 = *(_OWORD *)&v200[v60 + 2 + v56];\n              v81 = v32 + v60;\n              v82 = *(_OWORD *)&v200[v81 + 2];\n              *(_OWORD *)&v200[v78] = *(_OWORD *)&v200[v81];\n              *(_OWORD *)&v200[v78 + 2] = v82;\n              *(_OWORD *)&v200[v81] = v79;\n              *(_OWORD *)&v200[v81 + 2] = v80;\n            }\n            if ( v37 != v36 )\n            {\nLABEL_54:\n              v38 = v37;\n              if ( v36 & 1 )\n              {\n                v39 = v200[v35 + v37];\n                v200[v35 + v37] = v200[v32 + v37];\n                v200[v32 + v37] = v39;\n                v38 = v37 | 1;\n              }\n              if ( v36 - 1 != v37 )\n              {\n                v40 = v36 - v38;\n                v41 = na + 8 * (v38 + v32);\n                v42 = na + 8 * (v38 + v35);\n                v43 = 0LL;\n                do\n                {\n                  v44 = *(_QWORD *)(v42 + 8 * v43 - 8);\n                  *(_QWORD *)(v42 + 8 * v43 - 8) = *(_QWORD *)(v41 + 8 * v43 - 8);\n                  *(_QWORD *)(v41 + 8 * v43 - 8) = v44;\n                  v45 = *(_QWORD *)(v42 + 8 * v43);\n                  *(_QWORD *)(v42 + 8 * v43) = *(_QWORD *)(v41 + 8 * v43);\n                  *(_QWORD *)(v41 + 8 * v43) = v45;\n                  v43 += 2LL;\n                }\n                while ( v40 != v43 );\n              }\n            }\n            v9 = v200;\n            if ( v32 <= v27 )\n              goto LABEL_92;\n            goto LABEL_84;\n          }\nLABEL_91:\n          if ( v32 <= v27 )\n            goto LABEL_92;\nLABEL_84:\n          if ( v27 <= v31 )\n            goto LABEL_92;\n        }\n        if ( (signed int)v33 > 0 )\n        {\n          if ( v33 >= 4\n            && ((unsigned __int64)&v9[v31] >= v30 + 8LL * v33\n             || v30 >= (unsigned __int64)&v9[v31 + (unsigned __int64)v33]) )\n          {\n            v46 = v33 & 0xFFFFFFFC;\n            v67 = (unsigned __int64)(v46 - 4) >> 2;\n            v68 = ((_BYTE)v67 + 1) & 1;\n            if ( v46 == 4 )\n            {\n              v71 = 0LL;\n            }\n            else\n            {\n              v69 = v202 + 8LL * v31;\n              v70 = v68 - 1 - v67;\n              v71 = 0LL;\n              do\n              {\n                v72 = *(_OWORD *)(v69 + 8 * v71 - 48);\n                v73 = *(_OWORD *)(v69 + 8 * v71 - 32);\n                v74 = *(_OWORD *)(v30 + 8 * v71 + 16);\n                *(_OWORD *)(v69 + 8 * v71 - 48) = *(_OWORD *)(v30 + 8 * v71);\n                *(_OWORD *)(v69 + 8 * v71 - 32) = v74;\n                *(_OWORD *)(v30 + 8 * v71) = v72;\n                *(_OWORD *)(v30 + 8 * v71 + 16) = v73;\n                v75 = *(_OWORD *)(v69 + 8 * v71 - 16);\n                v76 = *(_OWORD *)(v69 + 8 * v71);\n                v77 = *(_OWORD *)(v30 + 8 * v71 + 48);\n                *(_OWORD *)(v69 + 8 * v71 - 16) = *(_OWORD *)(v30 + 8 * v71 + 32);\n                *(_OWORD *)(v69 + 8 * v71) = v77;\n                *(_OWORD *)(v30 + 8 * v71 + 32) = v75;\n                *(_OWORD *)(v30 + 8 * v71 + 48) = v76;\n                v71 += 8LL;\n                v70 += 2LL;\n              }\n              while ( v70 );\n            }\n            v22 = v68 == 0;\n            v9 = v200;\n            if ( !v22 )\n            {\n              v83 = v31 + v71;\n              v84 = *(_OWORD *)&v200[v83];\n              v85 = *(_OWORD *)&v200[v83 + 2];\n              v86 = v27 + v71;\n              v87 = *(_OWORD *)&v200[v86 + 2];\n              *(_OWORD *)&v200[v83] = *(_OWORD *)&v200[v86];\n              *(_OWORD *)&v200[v83 + 2] = v87;\n              *(_OWORD *)&v200[v86] = v84;\n              *(_OWORD *)&v200[v86 + 2] = v85;\n            }\n            if ( v46 == v33 )\n              goto LABEL_90;\n          }\n          else\n          {\n            v46 = 0LL;\n          }\n          v47 = v46;\n          if ( v33 & 1 )\n          {\n            v48 = v9[v46 + v31];\n            v9[v46 + v31] = v9[v46 + v27];\n            v9[v46 + v27] = v48;\n            v47 = v46 | 1;\n          }\n          if ( v33 - 1LL != v46 )\n          {\n            v49 = v33 - v47;\n            v50 = v30 + 8 * v47 + 8;\n            v51 = na + 8 * (v47 + v31);\n            v52 = 0LL;\n            do\n            {\n              v53 = *(_QWORD *)(v51 + 8 * v52 - 8);\n              *(_QWORD *)(v51 + 8 * v52 - 8) = *(_QWORD *)(v50 + 8 * v52 - 8);\n              *(_QWORD *)(v50 + 8 * v52 - 8) = v53;\n              v54 = *(_QWORD *)(v51 + 8 * v52);\n              *(_QWORD *)(v51 + 8 * v52) = *(_QWORD *)(v50 + 8 * v52);\n              *(_QWORD *)(v50 + 8 * v52) = v54;\n              v52 += 2LL;\n            }\n            while ( v49 != v52 );\n          }\n        }\nLABEL_90:\n        v31 += v33;\n        goto LABEL_91;\n      }\nLABEL_92:\n      v28 = v11 + s2a - v27;\n      dword_8B22AC = v11 + s2a - v27;\n      v88 = &dword_8B22A8;\n      v10 = v199;\n      v8 = v205;\n      v29 = v213;\n    }\n    *v88 = v11;\n    goto LABEL_96;\n  }\n  if ( !a4 )\n    goto LABEL_181;\nLABEL_6:\n  v13 = (char *)v9[(signed int)v11];\n  v14 = v13[1];\n  if ( v14 == 45 )\n    goto LABEL_274;\n  if ( v6 )\n  {\n    if ( v13[2] )\n      goto LABEL_274;\n    v163 = v13[1];\n    v164 = v12;\n    v165 = (char *)v9[(signed int)v11];\n    v166 = strchr(v8, v14);\n    LOBYTE(v14) = v163;\n    v12 = v164;\n    v22 = v166 == 0LL;\n    v13 = v165;\n    if ( v22 )\n    {\nLABEL_274:\n      v201 = v13;\n      for ( i = v12; *i && *i != 61; ++i )\n        ;\n      v16 = v216;\n      v17 = *v216;\n      if ( *v216 )\n      {\n        v212 = v11;\n        v218 = v14;\n        v204 = v8;\n        v18 = i - v12;\n        n = -1;\n        v19 = 0;\n        s2 = 0;\n        v207 = 0LL;\n        do\n        {\n          v20 = v12;\n          if ( !strncmp(v17, v12, v18) )\n          {\n            if ( (_DWORD)v18 == (unsigned int)strlen(v17) )\n            {\n              v155 = v16;\n              n = v19;\n              v9 = v200;\n              v156 = v199;\n              v12 = v20;\n              v8 = v204;\n              LODWORD(v11) = v212;\n              goto LABEL_171;\n            }\n            v21 = v207;\n            v22 = v207 == 0LL;\n            if ( !v207 )\n              v21 = v16;\n            v207 = v21;\n            v23 = s2;\n            if ( !v22 )\n              v23 = 1;\n            s2 = v23;\n            v24 = n;\n            if ( v22 )\n              v24 = v19;\n            n = v24;\n          }\n          v12 = v20;\n          ++v19;\n          v17 = v16[4];\n          v16 += 4;\n        }\n        while ( v17 );\n        v9 = v200;\n        if ( s2 )\n        {\n          v25 = v212;\n          if ( dword_751E8C )\n          {\n            fprintf(stderr, \"%s: option `%s' is ambiguous\\n\", *v200, v201, v20);\n            v12 = qword_8B22A0;\n            v25 = dword_751E88;\n          }\n          qword_8B22A0 = &v12[strlen(v12)];\n          dword_751E88 = v25 + 1;\n          goto LABEL_179;\n        }\n        v155 = v207;\n        v156 = v199;\n        v8 = v204;\n        v16 = v216;\n        LOBYTE(v14) = v218;\n        LODWORD(v11) = v212;\n        if ( !v207 )\n          goto LABEL_174;\nLABEL_171:\n        v157 = v11 + 1;\n        dword_751E88 = v11 + 1;\n        v158 = *((_DWORD *)v155 + 2);\n        if ( *i )\n        {\n          if ( !v158 )\n          {\n            if ( dword_751E8C )\n            {\n              v194 = *v9;\n              if ( v201[1] == 45 )\n                fprintf(stderr, \"%s: option `--%s' doesn't allow an argument\\n\", v194, *v155, v12);\n              else\n                fprintf(stderr, \"%s: option `%c%s' doesn't allow an argument\\n\", v194, (unsigned int)*v201, *v155);\n            }\n            v178 = v155;\n            v179 = qword_8B22A0;\n            qword_8B22A0 = &v179[strlen(qword_8B22A0)];\n            dword_751E90 = *((_DWORD *)v178 + 6);\n            return 63;\n          }\n          nptr = i + 1;\n        }\n        else if ( v158 == 1 )\n        {\n          if ( v157 >= v156 )\n          {\n            if ( dword_751E8C )\n            {\n              fprintf(stderr, \"%s: option `%s' requires an argument\\n\", *v9, v201, v12);\n              v12 = qword_8B22A0;\n            }\n            qword_8B22A0 = &v12[strlen(v12)];\n            dword_751E90 = *((_DWORD *)v155 + 6);\n            v175 = 0;\n            v176 = *v8 == 58;\n            goto LABEL_255;\n          }\n          dword_751E88 = v11 + 2;\n          nptr = (char *)v9[v157];\n        }\n        qword_8B22A0 = &v12[strlen(v12)];\n        if ( v219 )\n          *v219 = n;\n        v177 = (unsigned int *)v155[2];\n        v153 = *((_DWORD *)v155 + 6);\n        if ( v177 )\n          goto LABEL_251;\n        return v153;\n      }\nLABEL_174:\n      v7 = v16;\n      v159 = v201;\n      if ( !v214\n        || (_BYTE)v14 == 45\n        || (v160 = v14,\n            v161 = v12,\n            v162 = strchr(v8, *v12),\n            LOBYTE(v14) = v160,\n            v12 = v161,\n            v22 = v162 == 0LL,\n            v159 = v201,\n            v22) )\n      {\n        if ( dword_751E8C )\n        {\n          v193 = *v9;\n          if ( (_BYTE)v14 == 45 )\n            fprintf(stderr, \"%s: unrecognized option `--%s'\\n\", v193, v12);\n          else\n            fprintf(stderr, \"%s: unrecognized option `%c%s'\\n\", v193, (unsigned int)*v159, v12);\n        }\n        ++dword_751E88;\n        qword_8B22A0 = &byte_494DEA;\nLABEL_179:\n        dword_751E90 = 0;\n        return 63;\n      }\n    }\n  }\nLABEL_181:\n  v167 = v12 + 1;\n  qword_8B22A0 = v12 + 1;\n  v168 = v8;\n  v153 = *v12;\n  v169 = v12;\n  v170 = strchr(v168, v153);\n  if ( !v169[1] )\n  {\n    LODWORD(v11) = v11 + 1;\n    dword_751E88 = v11;\n  }\n  if ( (_BYTE)v153 == 58 || !v170 )\n  {\n    if ( dword_751E8C )\n    {\n      if ( qword_8B22B8 )\n        v192 = \"%s: illegal option -- %c\\n\";\n      else\n        v192 = \"%s: invalid option -- %c\\n\";\n      fprintf(stderr, v192, *v9, v153);\n    }\n    dword_751E90 = v153;\n    return 63;\n  }\n  v171 = v170[1];\n  if ( *v170 != 87 || v171 != 59 )\n  {\n    if ( v171 != 58 )\n      return v153;\n    v22 = v170[2] == 58;\n    v174 = *v167;\n    if ( v22 )\n    {\n      if ( !v174 )\n      {\n        nptr = 0LL;\nLABEL_209:\n        qword_8B22A0 = 0LL;\n        return v153;\n      }\n    }\n    else if ( !v174 )\n    {\n      if ( (_DWORD)v11 == v199 )\n      {\n        if ( dword_751E8C )\n          fprintf(stderr, \"%s: option requires an argument -- %c\\n\", *v9, v153);\n        dword_751E90 = v153;\n        v153 = 5 * (*v168 != 58) + 58;\n      }\n      else\n      {\n        dword_751E88 = v11 + 1;\n        nptr = (char *)v9[(signed int)v11];\n      }\n      goto LABEL_209;\n    }\n    nptr = v167;\n    dword_751E88 = v11 + 1;\n    goto LABEL_209;\n  }\n  if ( *v167 )\n  {\n    v172 = v7;\n    nptr = v167;\n    v173 = v11 + 1;\n    dword_751E88 = v173;\n  }\n  else\n  {\n    if ( (_DWORD)v11 == v199 )\n    {\n      if ( dword_751E8C )\n        fprintf(stderr, \"%s: option requires an argument -- %c\\n\", *v9, v153);\n      dword_751E90 = v153;\nLABEL_199:\n      v175 = 0;\n      v176 = *v168 == 58;\nLABEL_255:\n      LOBYTE(v175) = !v176;\n      return (unsigned int)(5 * v175 + 58);\n    }\n    v172 = v7;\n    dword_751E88 = v11 + 1;\n    v167 = (char *)v9[(signed int)v11];\n    nptr = (char *)v9[(signed int)v11];\n    v173 = v11 + 1;\n  }\n  qword_8B22A0 = v167;\n  for ( j = v167; ; ++j )\n  {\n    v181 = *j;\n    if ( !*j || v181 == 61 )\n      break;\n  }\n  s2c = v167;\n  v182 = *v172;\n  if ( !*v172 )\n  {\nLABEL_238:\n    qword_8B22A0 = 0LL;\n    return 87;\n  }\n  v183 = 0;\n  v203 = 0;\n  v208 = 0;\n  v215 = 0LL;\n  do\n  {\n    if ( !strncmp(v182, s2c, j - s2c) )\n    {\n      if ( (_DWORD)j - (_DWORD)s2c == strlen(v182) )\n      {\n        v189 = v183;\n        goto LABEL_235;\n      }\n      v184 = v215;\n      v185 = v215 == 0LL;\n      if ( !v215 )\n        v184 = v172;\n      v215 = v184;\n      v186 = v208;\n      if ( !v185 )\n        v186 = 1;\n      v208 = v186;\n      v187 = v203;\n      if ( v185 )\n        v187 = v183;\n      v203 = v187;\n    }\n    ++v183;\n    v182 = v172[4];\n    v172 += 4;\n  }\n  while ( v182 );\n  if ( v208 )\n  {\n    if ( dword_751E8C )\n    {\n      fprintf(stderr, \"%s: option `-W %s' is ambiguous\\n\", *v200, v200[v173]);\n      v188 = qword_8B22A0;\n      v173 = dword_751E88;\n    }\n    else\n    {\n      v188 = s2c;\n    }\n    qword_8B22A0 = (char *)&v188[strlen(v188)];\n    dword_751E88 = v173 + 1;\n    return 63;\n  }\n  v172 = v215;\n  v189 = v203;\n  if ( !v215 )\n    goto LABEL_238;\nLABEL_235:\n  v190 = *((_DWORD *)v172 + 2);\n  if ( v181 )\n  {\n    v191 = s2c;\n    if ( !v190 )\n    {\n      if ( dword_751E8C )\n      {\n        fprintf(stderr, \"%s: option `-W %s' doesn't allow an argument\\n\", *v200, *v172);\n        v191 = qword_8B22A0;\n      }\n      qword_8B22A0 = (char *)&v191[strlen(v191)];\n      return 63;\n    }\n    nptr = j + 1;\n    goto LABEL_248;\n  }\n  v191 = s2c;\n  if ( v190 == 1 )\n  {\n    if ( v173 < v199 )\n    {\n      dword_751E88 = v173 + 1;\n      nptr = (char *)v200[v173];\n      goto LABEL_248;\n    }\n    if ( dword_751E8C )\n    {\n      fprintf(stderr, \"%s: option `%s' requires an argument\\n\", *v200, v200[v173 - 1]);\n      v191 = qword_8B22A0;\n    }\n    qword_8B22A0 = (char *)&v191[strlen(v191)];\n    goto LABEL_199;\n  }\nLABEL_248:\n  qword_8B22A0 = (char *)&v191[strlen(v191)];\n  if ( v219 )\n    *v219 = v189;\n  v177 = (unsigned int *)v172[2];\n  v153 = *((_DWORD *)v172 + 6);\n  if ( v177 )\n  {\nLABEL_251:\n    *v177 = v153;\n    v153 = 0;\n  }\n  return v153;\n}\n", 
            "funcStartAddr": "0x492380L", 
            "funcEndAddr": "0x4936eaL", 
            "funcName": "sub_492380"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_493700(signed int a1, __int64 *a2, const char *a3, const char **a4, signed int *a5)\n{\n  return sub_492380(a1, a2, a3, a4, a5, 0);\n}\n", 
            "funcStartAddr": "0x493700L", 
            "funcEndAddr": "0x493708L", 
            "funcName": "sub_493700"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall getopt_long_only(signed int a1, __int64 *a2, const char *a3, const char **a4, signed int *a5)\n{\n  return sub_492380(a1, a2, a3, a4, a5, 1);\n}\n", 
            "funcStartAddr": "0x493710L", 
            "funcEndAddr": "0x49371bL", 
            "funcName": "getopt_long_only"
        }, 
        {
            "decompiledFuncCode": "char __fastcall sub_493750(__int64 a1, char *a2)\n{\n  char result; // al\n  char *v3; // rbx\n\n  result = *a2;\n  if ( *a2 )\n  {\n    v3 = a2 + 1;\n    do\n    {\n      fputc(result, stderr);\n      result = *v3++;\n    }\n    while ( result );\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x493750L", 
            "funcEndAddr": "0x49377cL", 
            "funcName": "sub_493750"
        }, 
        {
            "decompiledFuncCode": "int __fastcall sub_493780(__int64 a1, int a2)\n{\n  fputc(32, stderr);\n  return fputc(a2, stderr);\n}\n", 
            "funcStartAddr": "0x493780L", 
            "funcEndAddr": "0x4937a3L", 
            "funcName": "sub_493780"
        }, 
        {
            "decompiledFuncCode": "int sub_4937C0(char *a1, __int64 a2, const char *a3, ...)\n{\n  gcc_va_list va; // [rsp+0h] [rbp-D8h]\n\n  va_start(va, a3);\n  return vsprintf(a1, a3, va);\n}\n", 
            "funcStartAddr": "0x4937c0L", 
            "funcEndAddr": "0x49384cL", 
            "funcName": "sub_4937C0"
        }, 
        {
            "decompiledFuncCode": "const char *sub_493860()\n{\n  return \"3.3.14\";\n}\n", 
            "funcStartAddr": "0x493860L", 
            "funcEndAddr": "0x493866L", 
            "funcName": "sub_493860"
        }, 
        {
            "decompiledFuncCode": "double sub_493870()\n{\n  return 0.0;\n}\n", 
            "funcStartAddr": "0x493870L", 
            "funcEndAddr": "0x493874L", 
            "funcName": "sub_493870"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_4938A0(float a1, float a2)\n{\n  return (unsigned int)(signed int)((float)(a1 / a2) + 0.5);\n}\n", 
            "funcStartAddr": "0x4938a0L", 
            "funcEndAddr": "0x4938b5L", 
            "funcName": "sub_4938A0"
        }, 
        {
            "decompiledFuncCode": "signed __int64 __fastcall sub_4938C0(unsigned __int8 *a1, __int64 a2, unsigned __int64 a3, __int64 (__fastcall *a4)(unsigned __int8 *, unsigned __int8 *))\n{\n  __int64 (__fastcall *v4)(unsigned __int8 *, unsigned __int8 *); // rbx\n  unsigned __int64 v5; // rcx\n  int v6; // ecx\n  __int64 v7; // rax\n  __int64 v8; // rcx\n  signed __int64 result; // rax\n  signed int v10; // er14\n  unsigned __int8 *v11; // r13\n  unsigned __int8 *v12; // r12\n  __int64 v13; // r15\n  unsigned __int64 v14; // rbp\n  int v15; // eax\n  bool v16; // zf\n  bool v17; // sf\n  unsigned __int64 v18; // r9\n  unsigned __int8 *v19; // rcx\n  unsigned __int8 *v20; // rbp\n  signed __int64 v21; // rcx\n  __int128 v22; // xmm0\n  __int128 v23; // xmm1\n  __int128 v24; // xmm3\n  __int128 v25; // xmm0\n  __int128 v26; // xmm1\n  __int128 v27; // xmm3\n  __int128 v28; // xmm0\n  __int128 v29; // xmm1\n  __int128 v30; // xmm3\n  __int64 (__fastcall *v31)(unsigned __int8 *, unsigned __int8 *); // r8\n  unsigned __int64 v32; // rsi\n  signed __int64 v33; // rdi\n  unsigned __int8 v34; // bl\n  __int64 v35; // rsi\n  unsigned __int8 v36; // al\n  unsigned __int8 v37; // al\n  unsigned __int8 v38; // al\n  unsigned __int8 *v39; // [rsp+8h] [rbp-90h]\n  signed int v40; // [rsp+14h] [rbp-84h]\n  unsigned __int64 v41; // [rsp+18h] [rbp-80h]\n  signed __int64 v42; // [rsp+20h] [rbp-78h]\n  unsigned __int64 v43; // [rsp+28h] [rbp-70h]\n  signed __int64 v44; // [rsp+30h] [rbp-68h]\n  signed __int64 v45; // [rsp+38h] [rbp-60h]\n  int v46; // [rsp+40h] [rbp-58h]\n  __int64 v47; // [rsp+48h] [rbp-50h]\n  unsigned __int64 v48; // [rsp+50h] [rbp-48h]\n  signed __int64 v49; // [rsp+58h] [rbp-40h]\n  unsigned __int64 v50; // [rsp+60h] [rbp-38h]\n\n  v4 = a4;\n  v39 = a1;\n  v44 = a3 * (a2 - 1);\n  v50 = (unsigned __int64)&a1[v44];\n  v5 = (a3 - 32) >> 5;\n  v41 = a3 & 0xFFFFFFFFFFFFFFE0LL;\n  v43 = a3 - (a3 & 0xFFFFFFFFFFFFFFE0LL);\n  v47 = ((_BYTE)v5 + 1) & 1;\n  v48 = (a3 - 32) >> 5;\n  v45 = v47 - 1 - v5;\n  do\n  {\n    v40 = 10 * a2;\n    v6 = ((unsigned __int64)(1321528399LL * (v40 + 3)) >> 63) + (1321528399LL * (v40 + 3) >> 34);\n    v46 = v6;\n    v7 = v6;\n    v8 = v7;\n    result = a3 * v7;\n    v10 = 0;\n    v42 = result;\n    if ( result <= v44 )\n    {\n      v11 = v39;\n      v12 = &v39[result];\n      v49 = a3 * (v8 + 1);\n      v13 = 0LL;\n      v10 = 0;\n      do\n      {\n        v14 = a3;\n        v15 = v4(v11, v12);\n        v16 = v15 == 0;\n        v17 = v15 < 0;\n        result = 1LL;\n        if ( !v17 && !v16 )\n          v10 = 1;\n        a3 = v14;\n        if ( v17 || v16 || !v14 )\n          goto LABEL_27;\n        v18 = v14;\n        v19 = v12;\n        v20 = v11;\n        if ( a3 < 0x20 )\n          goto LABEL_20;\n        if ( &v39[a3 * v13] < &v39[v49 + a3 * v13] )\n        {\n          result = (signed __int64)v39;\n          v18 = a3;\n          v19 = v12;\n          v20 = v11;\n          if ( &v39[v42 + a3 * v13] < &v39[a3 * v13 + a3] )\n            goto LABEL_20;\n        }\n        if ( v48 )\n        {\n          v21 = v45;\n          result = 0LL;\n          do\n          {\n            v22 = *(_OWORD *)&v11[result];\n            v23 = *(_OWORD *)&v11[result + 16];\n            v24 = *(_OWORD *)&v12[result + 16];\n            *(_OWORD *)&v11[result] = *(_OWORD *)&v12[result];\n            *(_OWORD *)&v11[result + 16] = v24;\n            *(_OWORD *)&v12[result] = v22;\n            *(_OWORD *)&v12[result + 16] = v23;\n            v25 = *(_OWORD *)&v11[result + 32];\n            v26 = *(_OWORD *)&v11[result + 48];\n            v27 = *(_OWORD *)&v12[result + 48];\n            *(_OWORD *)&v11[result + 32] = *(_OWORD *)&v12[result + 32];\n            *(_OWORD *)&v11[result + 48] = v27;\n            *(_OWORD *)&v12[result + 32] = v25;\n            *(_OWORD *)&v12[result + 48] = v26;\n            result += 64LL;\n            v21 += 2LL;\n          }\n          while ( v21 );\n          if ( v47 )\n          {\nLABEL_17:\n            v28 = *(_OWORD *)&v11[result];\n            v29 = *(_OWORD *)&v11[result + 16];\n            v30 = *(_OWORD *)&v12[result + 16];\n            *(_OWORD *)&v11[result] = *(_OWORD *)&v12[result];\n            *(_OWORD *)&v11[result + 16] = v30;\n            *(_OWORD *)&v12[result] = v28;\n            *(_OWORD *)&v12[result + 16] = v29;\n            goto LABEL_18;\n          }\n        }\n        else\n        {\n          result = 0LL;\n          if ( v47 )\n            goto LABEL_17;\n        }\nLABEL_18:\n        v10 = 1;\n        if ( v41 != a3 )\n        {\n          result = v41;\n          v19 = &v12[v41];\n          v20 = &v11[v41];\n          v18 = v43;\nLABEL_20:\n          v31 = v4;\n          v32 = v18 - 1;\n          if ( v18 & 3 )\n          {\n            v33 = -(signed __int64)(v18 & 3);\n            do\n            {\n              --v18;\n              v34 = *v20;\n              result = *v19;\n              *v20++ = result;\n              *v19++ = v34;\n              ++v33;\n            }\n            while ( v33 );\n          }\n          v10 = 1;\n          if ( v32 >= 3 )\n          {\n            v35 = 0LL;\n            do\n            {\n              v36 = v20[v35];\n              v20[v35] = v19[v35];\n              v19[v35] = v36;\n              v37 = v20[v35 + 1];\n              v20[v35 + 1] = v19[v35 + 1];\n              v19[v35 + 1] = v37;\n              v38 = v20[v35 + 2];\n              v20[v35 + 2] = v19[v35 + 2];\n              v19[v35 + 2] = v38;\n              result = v20[v35 + 3];\n              v20[v35 + 3] = v19[v35 + 3];\n              v19[v35 + 3] = result;\n              v35 += 4LL;\n            }\n            while ( v18 != v35 );\n          }\n          v4 = v31;\n        }\nLABEL_27:\n        v11 += a3;\n        v12 += a3;\n        ++v13;\n      }\n      while ( (unsigned __int64)v12 <= v50 );\n    }\n    LODWORD(a2) = v46;\n  }\n  while ( v40 > 22 || v10 );\n  return result;\n}\n", 
            "funcStartAddr": "0x4938c0L", 
            "funcEndAddr": "0x493c0fL", 
            "funcName": "sub_4938C0"
        }, 
        {
            "decompiledFuncCode": "float __fastcall sub_493C10(float *a1, float a2)\n{\n  float v2; // xmm1_4\n  float v4; // xmm2_4\n  __int64 v5; // rax\n  float v6; // xmm0_4\n\n  v2 = a1[1];\n  if ( v2 > a2 )\n    return a1[3];\n  v4 = a1[2];\n  v5 = *(signed int *)a1;\n  if ( a2 > v4 )\n    return a1[v5 + 3];\n  v6 = (float)((float)(a2 - v2) * (float)(signed int)v5) / (float)(v4 - v2);\n  return (float)((float)(v6 - (float)(signed int)v6) * a1[(signed int)v6 + 4])\n       + (float)((float)(1.0 - (float)(v6 - (float)(signed int)v6)) * a1[(signed int)v6 + 3]);\n}\n", 
            "funcStartAddr": "0x493c10L", 
            "funcEndAddr": "0x493c76L", 
            "funcName": "sub_493C10"
        }, 
        {
            "decompiledFuncCode": "__m128 __fastcall sub_493C80(__m128 a1, float a2)\n{\n  __m128 v2; // xmm2\n\n  v2 = a1;\n  v2.m128_f32[0] = (float)(a1.m128_f32[0] * a2) / (float)(a1.m128_f32[0] + a2);\n  return v2;\n}\n", 
            "funcStartAddr": "0x493c80L", 
            "funcEndAddr": "0x493c93L", 
            "funcName": "sub_493C80"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_493CA0(int a1, int a2, int *a3, int *a4, int a5, unsigned int a6)\n{\n  __int64 result; // rax\n  int v7; // er8\n  int v8; // er8\n\n  result = a1 & (unsigned int)a2;\n  if ( (_DWORD)result == -1 )\n  {\nLABEL_3:\n    *a3 = a1;\nLABEL_13:\n    *a4 = a2;\n  }\n  else\n  {\n    v7 = a5 - 1;\n    result = a6;\n    switch ( a6 )\n    {\n      case 0u:\n        goto LABEL_3;\n      case 1u:\n        *a3 = v7 - a2;\n        a2 = a1;\n        goto LABEL_13;\n      case 2u:\n        result = (unsigned int)(v7 - a1);\n        *a3 = result;\n        goto LABEL_11;\n      case 3u:\n        *a3 = a2;\n        v8 = v7 - a1;\n        goto LABEL_12;\n      case 4u:\n        *a3 = a2;\n        a2 = a1;\n        goto LABEL_13;\n      case 5u:\n        *a3 = v7 - a1;\n        goto LABEL_13;\n      case 6u:\n        result = (unsigned int)(v7 - a2);\n        *a3 = result;\n        v8 = v7 - a1;\n        goto LABEL_12;\n      case 7u:\n        *a3 = a1;\nLABEL_11:\n        v8 = v7 - a2;\nLABEL_12:\n        a2 = v8;\n        goto LABEL_13;\n      default:\n        return result;\n    }\n  }\n  return result;\n}\n", 
            "funcStartAddr": "0x493ca0L", 
            "funcEndAddr": "0x493d00L", 
            "funcName": "sub_493CA0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_493D80(int a1)\n{\n  int v1; // eax\n  int v2; // eax\n  int v3; // eax\n  int v4; // eax\n  int v5; // eax\n  int v6; // eax\n  int v7; // eax\n  int v8; // eax\n  int v9; // eax\n  int v10; // eax\n  int v11; // eax\n  int v12; // eax\n  int v13; // eax\n  int v14; // eax\n  int v15; // eax\n  int v16; // eax\n  int v17; // eax\n  int v18; // eax\n  int v19; // eax\n  int v20; // eax\n  int v21; // eax\n  int v22; // eax\n  __int64 result; // rax\n\n  LODWORD(xmmword_8B22C0) = a1;\n  v1 = 1313 * a1 + 88897;\n  DWORD1(xmmword_8B22C0) = v1;\n  v2 = 1313 * v1 + 88897;\n  DWORD2(xmmword_8B22C0) = v2;\n  v3 = 1313 * v2 + 88897;\n  HIDWORD(xmmword_8B22C0) = v3;\n  v4 = 1313 * v3 + 88897;\n  LODWORD(xmmword_8B22D0) = v4;\n  v5 = 1313 * v4 + 88897;\n  DWORD1(xmmword_8B22D0) = v5;\n  v6 = 1313 * v5 + 88897;\n  DWORD2(xmmword_8B22D0) = v6;\n  v7 = 1313 * v6 + 88897;\n  HIDWORD(xmmword_8B22D0) = v7;\n  v8 = 1313 * v7 + 88897;\n  LODWORD(xmmword_8B22E0) = v8;\n  v9 = 1313 * v8 + 88897;\n  DWORD1(xmmword_8B22E0) = v9;\n  v10 = 1313 * v9 + 88897;\n  DWORD2(xmmword_8B22E0) = v10;\n  v11 = 1313 * v10 + 88897;\n  HIDWORD(xmmword_8B22E0) = v11;\n  v12 = 1313 * v11 + 88897;\n  LODWORD(xmmword_8B22F0) = v12;\n  v13 = 1313 * v12 + 88897;\n  DWORD1(xmmword_8B22F0) = v13;\n  v14 = 1313 * v13 + 88897;\n  DWORD2(xmmword_8B22F0) = v14;\n  v15 = 1313 * v14 + 88897;\n  HIDWORD(xmmword_8B22F0) = v15;\n  v16 = 1313 * v15 + 88897;\n  LODWORD(xmmword_8B2300) = v16;\n  v17 = 1313 * v16 + 88897;\n  DWORD1(xmmword_8B2300) = v17;\n  v18 = 1313 * v17 + 88897;\n  DWORD2(xmmword_8B2300) = v18;\n  v19 = 1313 * v18 + 88897;\n  HIDWORD(xmmword_8B2300) = v19;\n  v20 = 1313 * v19 + 88897;\n  LODWORD(xmmword_8B2310) = v20;\n  v21 = 1313 * v20 + 88897;\n  DWORD1(xmmword_8B2310) = v21;\n  v22 = 1313 * v21 + 88897;\n  DWORD2(xmmword_8B2310) = v22;\n  LODWORD(result) = 1313 * v22 + 88897;\n  HIDWORD(xmmword_8B2310) = result;\n  result = (unsigned int)result;\n  dword_8B2320 = result;\n  dword_8B2324 = 24;\n  byte_8B2328 = 1;\n  return result;\n}\n", 
            "funcStartAddr": "0x493d80L", 
            "funcEndAddr": "0x493f30L", 
            "funcName": "sub_493D80"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_493F30(__int64 a1)\n{\n  return sub_493F40(a1) & 0x7FFFFFFF;\n}\n", 
            "funcStartAddr": "0x493f30L", 
            "funcEndAddr": "0x493f3dL", 
            "funcName": "sub_493F30"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_493F40()\n{\n  int v0; // eax\n  int v1; // eax\n  __m128i v2; // xmm2\n  __m128i v3; // xmm0\n  __m128i v4; // xmm1\n  __m128i v5; // xmm3\n  __m128i v6; // xmm3\n  __m128i v7; // xmm3\n  __m128i v8; // xmm2\n  __m128i v9; // xmm3\n\n  if ( !byte_8B2328 )\n  {\n    xmmword_8B22C0 = xmmword_4AE1B0;\n    xmmword_8B22D0 = xmmword_4AE1C0;\n    xmmword_8B22E0 = xmmword_4AE1D0;\n    xmmword_8B22F0 = xmmword_4AE1E0;\n    xmmword_8B2300 = xmmword_4AE1F0;\n    xmmword_8B2310 = xmmword_4AE200;\n    dword_8B2320 = 944218009;\n    byte_8B2328 = 1;\n    dword_8B2324 = 25;\n    goto LABEL_5;\n  }\n  v0 = dword_8B2324 + 1;\n  dword_8B2324 = v0;\n  if ( v0 == 25 )\n  {\nLABEL_5:\n    v2 = _mm_load_si128((const __m128i *)&xmmword_8B22C0);\n    v3 = _mm_load_si128((const __m128i *)&xmmword_4AE0F0);\n    v4 = _mm_load_si128((const __m128i *)&xmmword_4AE210);\n    _mm_store_si128(\n      (__m128i *)&xmmword_8B22C0,\n      _mm_xor_si128(\n        _mm_and_si128(_mm_cmpeq_epi32(_mm_and_si128(v2, v3), v3), v4),\n        _mm_xor_si128(_mm_srli_epi32(v2, 1u), _mm_loadu_si128((const __m128i *)((char *)&xmmword_8B22D0 + 12)))));\n    v5 = _mm_load_si128((const __m128i *)&xmmword_8B22D0);\n    _mm_store_si128(\n      (__m128i *)&xmmword_8B22D0,\n      _mm_xor_si128(\n        _mm_and_si128(_mm_cmpeq_epi32(_mm_and_si128(v5, v3), v3), v4),\n        _mm_xor_si128(_mm_srli_epi32(v5, 1u), _mm_loadu_si128((const __m128i *)((char *)&xmmword_8B22E0 + 12)))));\n    v6 = _mm_load_si128((const __m128i *)&xmmword_8B22E0);\n    _mm_store_si128(\n      (__m128i *)&xmmword_8B22E0,\n      _mm_xor_si128(\n        _mm_and_si128(_mm_cmpeq_epi32(_mm_and_si128(v6, v3), v3), v4),\n        _mm_xor_si128(_mm_srli_epi32(v6, 1u), _mm_loadu_si128((const __m128i *)((char *)&xmmword_8B22F0 + 12)))));\n    v7 = _mm_load_si128((const __m128i *)&xmmword_8B22F0);\n    _mm_store_si128(\n      (__m128i *)&xmmword_8B22F0,\n      _mm_xor_si128(\n        _mm_and_si128(_mm_cmpeq_epi32(_mm_and_si128(v7, v3), v3), v4),\n        _mm_xor_si128(_mm_srli_epi32(v7, 1u), _mm_loadu_si128((const __m128i *)((char *)&xmmword_8B2300 + 12)))));\n    LODWORD(xmmword_8B2300) = HIDWORD(xmmword_8B2310) ^ ((unsigned int)xmmword_8B2300 >> 1) ^ -(xmmword_8B2300 & 1) & 0x8EBFD028;\n    DWORD1(xmmword_8B2300) = dword_8B2320 ^ (DWORD1(xmmword_8B2300) >> 1) ^ -(BYTE4(xmmword_8B2300) & 1) & 0x8EBFD028;\n    v8 = _mm_load_si128((const __m128i *)&xmmword_8B22C0);\n    v9 = _mm_loadu_si128((const __m128i *)((char *)&xmmword_8B2300 + 8));\n    _mm_storeu_si128(\n      (__m128i *)((char *)&xmmword_8B2300 + 8),\n      _mm_xor_si128(\n        _mm_and_si128(_mm_cmpeq_epi32(_mm_and_si128(v9, v3), v3), v4),\n        _mm_xor_si128(_mm_srli_epi32(v9, 1u), v8)));\n    DWORD2(xmmword_8B2310) = xmmword_8B22D0 ^ (DWORD2(xmmword_8B2310) >> 1) ^ -(BYTE8(xmmword_8B2310) & 1) & 0x8EBFD028;\n    HIDWORD(xmmword_8B2310) = DWORD1(xmmword_8B22D0) ^ (HIDWORD(xmmword_8B2310) >> 1) ^ -(BYTE12(xmmword_8B2310) & 1) & 0x8EBFD028;\n    dword_8B2320 = DWORD2(xmmword_8B22D0) ^ ((unsigned int)dword_8B2320 >> 1) ^ -(dword_8B2320 & 1) & 0x8EBFD028;\n    dword_8B2324 = 0;\n    v1 = _mm_cvtsi128_si32(v8);\n    return v1 ^ (v1 << 7) & 0x2B5B2500 ^ ((v1 ^ (v1 << 7) & 0x2B5B2500) << 15) & 0xDB8B0000;\n  }\n  v1 = *((_DWORD *)&xmmword_8B22C0 + v0);\n  return v1 ^ (v1 << 7) & 0x2B5B2500 ^ ((v1 ^ (v1 << 7) & 0x2B5B2500) << 15) & 0xDB8B0000;\n}\n", 
            "funcStartAddr": "0x493f40L", 
            "funcEndAddr": "0x4941c6L", 
            "funcName": "sub_493F40"
        }, 
        {
            "decompiledFuncCode": "__int64 sub_4941D0(void)\n{\n  return sub_493F40();\n}\n", 
            "funcStartAddr": "0x4941d0L", 
            "funcEndAddr": "0x4941d5L", 
            "funcName": "sub_4941D0"
        }, 
        {
            "decompiledFuncCode": "double __spoils<rdx,rcx,r8,r9,r10,r11,xmm4,xmm5> sub_4941E0()\n{\n  return (double)(signed int)sub_493F40() * 2.328306436538696e-10;\n}\n", 
            "funcStartAddr": "0x4941e0L", 
            "funcEndAddr": "0x4941f7L", 
            "funcName": "sub_4941E0"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_494200(__int64 a1)\n{\n  __int64 result; // rax\n\n  *(_DWORD *)(a1 + 96) = dword_8B2320;\n  *(_OWORD *)(a1 + 80) = xmmword_8B2310;\n  *(_OWORD *)(a1 + 64) = xmmword_8B2300;\n  *(_OWORD *)(a1 + 48) = xmmword_8B22F0;\n  *(_OWORD *)(a1 + 32) = xmmword_8B22E0;\n  *(_OWORD *)(a1 + 16) = xmmword_8B22D0;\n  *(_OWORD *)a1 = xmmword_8B22C0;\n  result = (unsigned int)dword_8B2324;\n  *(_DWORD *)(a1 + 100) = dword_8B2324;\n  return result;\n}\n", 
            "funcStartAddr": "0x494200L", 
            "funcEndAddr": "0x494254L", 
            "funcName": "sub_494200"
        }, 
        {
            "decompiledFuncCode": "__int64 __fastcall sub_494260(__int64 a1)\n{\n  __int128 v1; // xmm0\n  __int128 v2; // xmm1\n  __int128 v3; // xmm2\n  __int64 result; // rax\n\n  dword_8B2320 = *(_DWORD *)(a1 + 96);\n  xmmword_8B2310 = *(_OWORD *)(a1 + 80);\n  xmmword_8B2300 = *(_OWORD *)(a1 + 64);\n  v1 = *(_OWORD *)a1;\n  v2 = *(_OWORD *)(a1 + 16);\n  v3 = *(_OWORD *)(a1 + 32);\n  xmmword_8B22F0 = *(_OWORD *)(a1 + 48);\n  xmmword_8B22E0 = v3;\n  xmmword_8B22D0 = v2;\n  xmmword_8B22C0 = v1;\n  result = *(unsigned int *)(a1 + 100);\n  dword_8B2324 = *(_DWORD *)(a1 + 100);\n  return result;\n}\n", 
            "funcStartAddr": "0x494260L", 
            "funcEndAddr": "0x4942b4L", 
            "funcName": "sub_494260"
        }, 
        {
            "decompiledFuncCode": "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v3; // r15\n  signed __int64 v4; // rbp\n  __int64 v5; // rbx\n\n  v3 = a3;\n  v4 = ((char *)&stru_563DF8 - (char *)&off_563DF0) >> 3;\n  init_proc();\n  if ( v4 )\n  {\n    v5 = 0LL;\n    do\n      ((void (__fastcall *)(_QWORD, __int64, __int64))*(&off_563DF0 + v5++))(a1, a2, v3);\n    while ( v4 != v5 );\n  }\n}\n", 
            "funcStartAddr": "0x4942c0L", 
            "funcEndAddr": "0x494325L", 
            "funcName": "init"
        }, 
        {
            "decompiledFuncCode": "void fini(void)\n{\n  ;\n}\n", 
            "funcStartAddr": "0x494330L", 
            "funcEndAddr": "0x494332L", 
            "funcName": "fini"
        }
    ], 
    "binaryInfo": {
        "binaryName": "gobmk-amd64-clang-O2_strip", 
        "isStripped": "True"
    }, 
    "funcCount": "1622", 
    "buildInfo": {
        "decompilerName": "IDA Pro", 
        "compilerVersion": "9.4.0", 
        "Optlevel": "-O", 
        "compilerName": "gcc"
    }
}