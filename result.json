{
    "decompile_code": "int __cdecl main(int argc, const char **argv, const char **envp)\n{\n  __int64 v3; // rbp\n  const char *v4; // rsi\n  const char *v5; // rdi\n  __int64 v6; // rdx\n  int result; // eax\n  unsigned __int64 v8; // rcx\n  unsigned __int64 v9; // rt1\n  unsigned __int64 i; // [rsp-F8h] [rbp-F8h]\n  unsigned __int64 j; // [rsp-F0h] [rbp-F0h]\n  __int64 v12; // [rsp-E8h] [rbp-E8h]\n  __int64 v13; // [rsp-E0h] [rbp-E0h]\n  __int64 v14; // [rsp-D8h] [rbp-D8h]\n  __int64 v15; // [rsp-D0h] [rbp-D0h]\n  __int64 v16; // [rsp-C8h] [rbp-C8h]\n  int v17; // [rsp-C0h] [rbp-C0h]\n  signed int v18; // [rsp-B8h] [rbp-B8h]\n  signed int v19; // [rsp-B4h] [rbp-B4h]\n  signed int v20; // [rsp-B0h] [rbp-B0h]\n  signed int v21; // [rsp-ACh] [rbp-ACh]\n  signed int v22; // [rsp-A8h] [rbp-A8h]\n  signed int v23; // [rsp-A4h] [rbp-A4h]\n  signed int v24; // [rsp-A0h] [rbp-A0h]\n  signed int v25; // [rsp-9Ch] [rbp-9Ch]\n  signed int v26; // [rsp-98h] [rbp-98h]\n  signed int v27; // [rsp-94h] [rbp-94h]\n  signed int v28; // [rsp-90h] [rbp-90h]\n  signed int v29; // [rsp-8Ch] [rbp-8Ch]\n  signed int v30; // [rsp-88h] [rbp-88h]\n  signed int v31; // [rsp-84h] [rbp-84h]\n  signed int v32; // [rsp-80h] [rbp-80h]\n  signed int v33; // [rsp-7Ch] [rbp-7Ch]\n  signed int v34; // [rsp-78h] [rbp-78h]\n  signed int v35; // [rsp-74h] [rbp-74h]\n  signed int v36; // [rsp-70h] [rbp-70h]\n  signed int v37; // [rsp-6Ch] [rbp-6Ch]\n  signed int v38; // [rsp-68h] [rbp-68h]\n  signed int v39; // [rsp-64h] [rbp-64h]\n  signed int v40; // [rsp-60h] [rbp-60h]\n  signed int v41; // [rsp-5Ch] [rbp-5Ch]\n  signed int v42; // [rsp-58h] [rbp-58h]\n  signed int v43; // [rsp-54h] [rbp-54h]\n  signed int v44; // [rsp-50h] [rbp-50h]\n  signed int v45; // [rsp-4Ch] [rbp-4Ch]\n  signed int v46; // [rsp-48h] [rbp-48h]\n  signed int v47; // [rsp-44h] [rbp-44h]\n  signed int v48; // [rsp-40h] [rbp-40h]\n  signed int v49; // [rsp-3Ch] [rbp-3Ch]\n  signed int v50; // [rsp-38h] [rbp-38h]\n  signed int v51; // [rsp-34h] [rbp-34h]\n  signed int v52; // [rsp-30h] [rbp-30h]\n  signed int v53; // [rsp-2Ch] [rbp-2Ch]\n  signed int v54; // [rsp-28h] [rbp-28h]\n  signed int v55; // [rsp-24h] [rbp-24h]\n  signed int v56; // [rsp-20h] [rbp-20h]\n  signed int v57; // [rsp-1Ch] [rbp-1Ch]\n  unsigned __int64 v58; // [rsp-10h] [rbp-10h]\n  __int64 v59; // [rsp-8h] [rbp-8h]\n\n  __asm { endbr64 }\n  v59 = v3;\n  v58 = __readfsqword(0x28u);\n  v12 = 0LL;\n  v13 = 0LL;\n  v14 = 0LL;\n  v15 = 0LL;\n  v16 = 0LL;\n  v17 = 0;\n  v18 = 1;\n  v19 = 2;\n  v20 = 6;\n  v21 = 4;\n  v22 = 8;\n  v23 = 5;\n  v24 = 9;\n  v25 = 7;\n  v26 = 8;\n  v27 = 10;\n  v28 = 1;\n  v29 = 6;\n  v30 = 3;\n  v31 = 8;\n  v32 = 6;\n  v33 = 10;\n  v34 = 3;\n  v35 = 8;\n  v36 = 2;\n  v37 = 7;\n  v38 = 6;\n  v39 = 5;\n  v40 = 7;\n  v41 = 6;\n  v42 = 8;\n  v43 = 6;\n  v44 = 7;\n  v45 = 5;\n  v46 = 6;\n  v47 = 6;\n  v48 = 5;\n  v49 = 6;\n  v50 = 7;\n  v51 = 5;\n  v52 = 6;\n  v53 = 4;\n  v54 = 8;\n  v55 = 6;\n  v56 = 8;\n  v57 = 10;\n  for ( i = 0LL; i <= 0x27; ++i )\n    ++*((_DWORD *)&v59 + *((signed int *)&v59 + i - 44) - 56);\n  v4 = \"Rating\";\n  v5 = \"%s%17s\\n\";\n  sub_1070(\"%s%17s\\n\", \"Rating\", \"Frequency\");\n  for ( j = 1LL; j <= 0xA; ++j )\n  {\n    v4 = (const char *)j;\n    v5 = \"%6lu%17d\\n\";\n    sub_1070(\"%6lu%17d\\n\", j, *((unsigned int *)&v59 + j - 56));\n  }\n  result = 0;\n  v9 = __readfsqword(0x28u);\n  v8 = v9 ^ v58;\n  if ( v9 != v58 )\n    result = sub_1060(v5, v4, v6, v8);\n  return result;\n}\n"
}